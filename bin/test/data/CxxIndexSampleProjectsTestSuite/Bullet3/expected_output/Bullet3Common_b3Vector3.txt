FILE: b3Vector3.cpp
COMMENT: comment [b3Vector3.cpp <1:1 15:4>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> _WIN32 [b3Vector3.cpp <17:14 17:19>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> __i386__ [b3Vector3.cpp <17:34 17:41>]
SYMBOL_MACRO B3_USE_SSE_IN_API [b3Vector3.cpp <18:9 <18:9 18:25> 18:8>]
REFERENCE_INCLUDE b3Vector3.cpp -> b3Vector3.h [b3Vector3.cpp <21:10 21:22>]
FILE: b3Vector3.h
COMMENT: comment [b3Vector3.h <1:1 13:3>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_VECTOR3_H [b3Vector3.h <17:9 17:20>]
SYMBOL_MACRO B3_VECTOR3_H [b3Vector3.h <18:9 <18:9 18:20> 18:8>]
COMMENT: comment [b3Vector3.h <20:1 20:22>]
REFERENCE_INCLUDE b3Vector3.h -> b3Scalar.h [b3Vector3.h <21:10 21:21>]
FILE: b3Scalar.h
COMMENT: comment [b3Scalar.h <1:1 13:3>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_SCALAR_H [b3Scalar.h <17:9 17:19>]
SYMBOL_MACRO B3_SCALAR_H [b3Scalar.h <18:9 <18:9 18:19> 18:8>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_MANAGED_CODE [b3Scalar.h <20:8 20:22>]
COMMENT: comment [b3Scalar.h <28:20 28:41>]
COMMENT: comment [b3Scalar.h <31:1 31:67>]
SYMBOL_MACRO B3_BULLET_VERSION [b3Scalar.h <32:9 <32:9 32:25> 32:26>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_BULLET_VERSION [b3Scalar.h <36:9 36:25>]
REFERENCE_MACRO_USAGE b3Scalar.h -> DEBUG [b3Scalar.h <39:13 39:17>]
REFERENCE_MACRO_USAGE b3Scalar.h -> _DEBUG [b3Scalar.h <39:32 39:37>]
COMMENT: comment [b3Scalar.h <43:23 43:36>]
REFERENCE_INCLUDE b3Scalar.h -> b3Logging.h [b3Scalar.h <43:10 43:22>]
FILE: b3Logging.h
REFERENCE_MACRO_USAGE b3Logging.h -> B3_LOGGING_H [b3Logging.h <2:9 2:20>]
SYMBOL_MACRO B3_LOGGING_H [b3Logging.h <3:9 <3:9 3:20> 3:8>]
REFERENCE_MACRO_USAGE b3Logging.h -> __cplusplus [b3Logging.h <5:8 5:18>]
COMMENT: comment [b3Logging.h <9:1 9:102>]
COMMENT: comment [b3Logging.h <10:1 10:81>]
SYMBOL_MACRO b3Printf [b3Logging.h <11:9 <11:9 11:16> 11:63>]
COMMENT: comment [b3Logging.h <12:1 12:151>]
COMMENT: comment [b3Logging.h <13:1 13:49>]
COMMENT: comment [b3Logging.h <14:1 14:44>]
COMMENT: comment [b3Logging.h <15:1 15:24>]
SYMBOL_MACRO b3Warning [b3Logging.h <17:9 <17:9 17:17> 17:166>]
SYMBOL_MACRO b3Error [b3Logging.h <18:9 <18:9 18:15> 18:159>]
REFERENCE_MACRO_USAGE b3Logging.h -> B3_NO_PROFILE [b3Logging.h <21:9 21:21>]
REFERENCE_MACRO_USAGE b3Logging.h -> __cplusplus [b3Logging.h <25:8 25:18>]
SYMBOL_MACRO B3_PROFILE [b3Logging.h <41:9 <41:9 41:18> 41:59>]
COMMENT: comment [b3Logging.h <44:7 44:22>]
COMMENT: comment [b3Logging.h <50:8 50:31>]
COMMENT: comment [b3Logging.h <59:1 59:74>]
COMMENT: comment [b3Logging.h <64:1 64:59>]
COMMENT: comment [b3Logging.h <68:1 68:125>]
REFERENCE_MACRO_USAGE b3Logging.h -> __cplusplus [b3Logging.h <73:8 73:18>]
COMMENT: comment [b3Logging.h <77:7 77:21>]
REFERENCE_MACRO_USAGE b3Scalar.h -> _WIN32 [b3Scalar.h <46:8 46:13>]
REFERENCE_MACRO_USAGE b3Scalar.h -> __MINGW32__ [b3Scalar.h <48:15 48:25>]
REFERENCE_MACRO_USAGE b3Scalar.h -> __CYGWIN__ [b3Scalar.h <48:39 48:48>]
REFERENCE_MACRO_USAGE b3Scalar.h -> _MSC_VER [b3Scalar.h <48:64 48:71>]
REFERENCE_MACRO_USAGE b3Scalar.h -> _MSC_VER [b3Scalar.h <48:77 48:84>]
COMMENT: comment [b3Scalar.h <55:4 55:38>]
COMMENT: comment [b3Scalar.h <56:36 56:62>]
COMMENT: comment [b3Scalar.h <57:1 57:98>]
COMMENT: comment [b3Scalar.h <58:34 58:81>]
COMMENT: comment [b3Scalar.h <59:1 59:80>]
SYMBOL_MACRO B3_FORCE_INLINE [b3Scalar.h <61:12 <61:12 61:26> 61:27>]
SYMBOL_MACRO B3_ATTRIBUTE_ALIGNED16 [b3Scalar.h <62:12 <62:12 62:33> 62:59>]
SYMBOL_MACRO B3_ATTRIBUTE_ALIGNED64 [b3Scalar.h <63:12 <63:12 63:33> 63:59>]
SYMBOL_MACRO B3_ATTRIBUTE_ALIGNED128 [b3Scalar.h <64:12 <64:12 64:34> 64:62>]
REFERENCE_MACRO_USAGE b3Scalar.h -> _XBOX [b3Scalar.h <65:10 65:14>]
REFERENCE_MACRO_USAGE b3Scalar.h -> _WIN32 [b3Scalar.h <73:15 73:20>]
REFERENCE_MACRO_USAGE b3Scalar.h -> _MSC_VER [b3Scalar.h <73:27 73:34>]
REFERENCE_MACRO_USAGE b3Scalar.h -> _MSC_VER [b3Scalar.h <73:40 73:47>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_USE_DOUBLE_PRECISION [b3Scalar.h <73:72 73:94>]
REFERENCE_MACRO_USAGE b3Scalar.h -> _M_IX86 [b3Scalar.h <74:16 74:22>]
REFERENCE_MACRO_USAGE b3Scalar.h -> _M_X64 [b3Scalar.h <74:37 74:42>]
SYMBOL_MACRO B3_USE_SSE [b3Scalar.h <75:12 <75:12 75:21> 75:11>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_USE_SSE [b3Scalar.h <76:11 76:20>]
COMMENT: comment [b3Scalar.h <77:4 77:70>]
COMMENT: comment [b3Scalar.h <78:4 78:81>]
COMMENT: comment [b3Scalar.h <79:4 79:78>]
COMMENT: comment [b3Scalar.h <80:4 80:45>]
COMMENT: comment [b3Scalar.h <81:4 81:122>]
COMMENT: comment [b3Scalar.h <82:4 82:135>]
COMMENT: comment [b3Scalar.h <83:4 83:31>]
COMMENT: comment [b3Scalar.h <84:11 84:23>]
COMMENT: comment [b3Scalar.h <89:9 89:16>]
COMMENT: comment [b3Scalar.h <91:10 91:23>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_DEBUG [b3Scalar.h <93:8 93:15>]
SYMBOL_MACRO b3Assert [b3Scalar.h <102:11 <102:11 102:18> 102:20>]
COMMENT: comment [b3Scalar.h <104:3 104:47>]
SYMBOL_MACRO b3FullAssert [b3Scalar.h <105:11 <105:11 105:22> 105:24>]
SYMBOL_MACRO b3Likely [b3Scalar.h <107:11 <107:11 107:18> 107:24>]
SYMBOL_MACRO b3Unlikely [b3Scalar.h <108:11 <108:11 108:20> 108:25>]
COMMENT: comment [b3Scalar.h <257:1 257:124>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_USE_DOUBLE_PRECISION [b3Scalar.h <258:13 258:35>]
COMMENT: comment [b3Scalar.h <264:1 264:47>]
SYMBOL_MACRO B3_LARGE_FLOAT [b3Scalar.h <265:9 <265:9 265:22> 265:23>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_USE_SSE [b3Scalar.h <268:8 268:17>]
COMMENT: comment [b3Scalar.h <270:7 270:19>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_USE_SSE_IN_API [b3Scalar.h <272:13 272:29>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_USE_SSE [b3Scalar.h <272:43 272:52>]
REFERENCE_MACRO_USAGE b3Scalar.h -> _WIN32 [b3Scalar.h <273:8 273:13>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_NAN [b3Scalar.h <275:9 275:14>]
SYMBOL_MACRO B3_NAN [b3Scalar.h <277:9 <277:9 277:14> 277:35>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_INFINITY_MASK [b3Scalar.h <280:9 280:24>]
SYMBOL_MACRO B3_INFINITY_MASK [b3Scalar.h <282:9 <282:9 282:24> 282:50>]
SYMBOL_MACRO b3CastfTo128i [b3Scalar.h <300:9 <300:9 300:21> 300:45>]
SYMBOL_MACRO b3CastfTo128d [b3Scalar.h <301:9 <301:9 301:21> 301:42>]
SYMBOL_MACRO b3CastiTo128f [b3Scalar.h <302:9 <302:9 302:21> 302:45>]
SYMBOL_MACRO b3CastdTo128f [b3Scalar.h <303:9 <303:9 303:21> 303:42>]
SYMBOL_MACRO b3CastdTo128i [b3Scalar.h <304:9 <304:9 304:21> 304:45>]
SYMBOL_MACRO b3Assign128 [b3Scalar.h <305:9 <305:9 305:19> 305:56>]
COMMENT: comment [b3Scalar.h <307:6 307:14>]
COMMENT: comment [b3Scalar.h <315:7 315:15>]
COMMENT: comment [b3Scalar.h <316:8 316:27>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_USE_NEON [b3Scalar.h <318:8 318:18>]
SYMBOL_MACRO B3_DECLARE_ALIGNED_ALLOCATOR [b3Scalar.h <331:9 <331:9 331:36> 339:64>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_USE_DOUBLE_PRECISION [b3Scalar.h <343:13 343:35>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_DOUBLE_FUNCTIONS [b3Scalar.h <343:49 343:73>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <361:1 361:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> USE_APPROXIMATION [b3Scalar.h <363:8 363:24>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <381:1 381:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <382:1 382:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <383:1 383:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <384:1 384:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <385:1 385:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <392:1 392:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <399:1 399:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <400:1 400:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <401:1 401:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <402:1 402:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <403:1 403:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <404:1 404:15>]
SYMBOL_MACRO B3_2_PI [b3Scalar.h <408:9 <408:9 408:15> 408:53>]
SYMBOL_MACRO B3_PI [b3Scalar.h <409:9 <409:9 409:13> 409:48>]
SYMBOL_MACRO B3_HALF_PI [b3Scalar.h <410:9 <410:9 410:18> 410:49>]
SYMBOL_MACRO B3_RADS_PER_DEG [b3Scalar.h <411:9 <411:9 411:23> 411:50>]
SYMBOL_MACRO B3_DEGS_PER_RAD [b3Scalar.h <412:9 <412:9 412:23> 412:51>]
SYMBOL_MACRO B3_SQRT12 [b3Scalar.h <413:9 <413:9 413:17> 413:63>]
COMMENT: comment [b3Scalar.h <415:73 415:101>]
SYMBOL_MACRO b3RecipSqrt [b3Scalar.h <415:9 <415:9 415:19> 415:69>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_USE_DOUBLE_PRECISION [b3Scalar.h <418:8 418:30>]
SYMBOL_MACRO B3_EPSILON [b3Scalar.h <422:9 <422:9 422:18> 422:24>]
SYMBOL_MACRO B3_INFINITY [b3Scalar.h <423:9 <423:9 423:19> 423:24>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <426:1 426:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_PI [b3Scalar.h <428:21 428:25>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_2_PI [b3Scalar.h <409:26 409:32>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <442:1 442:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_EPSILON [b3Scalar.h <442:72 442:81>]
REFERENCE_MACRO_USAGE b3Scalar.h -> FLT_EPSILON [b3Scalar.h <422:25 422:35>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <444:1 444:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <447:1 447:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <452:1 452:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <456:1 456:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_RADS_PER_DEG [b3Scalar.h <456:61 456:75>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_2_PI [b3Scalar.h <411:26 411:32>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <457:1 457:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_DEGS_PER_RAD [b3Scalar.h <457:61 457:75>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_2_PI [b3Scalar.h <412:45 412:51>]
SYMBOL_MACRO B3_DECLARE_HANDLE [b3Scalar.h <459:9 <459:9 459:25> 459:73>]
REFERENCE_MACRO_USAGE b3Scalar.h -> b3Fsel [b3Scalar.h <461:9 461:14>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <462:1 462:15>]
SYMBOL_MACRO b3Fsels [b3Scalar.h <467:9 <467:9 467:15> 467:45>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <470:1 470:15>]
COMMENT: comment [b3Scalar.h <474:20 474:73>]
COMMENT: comment [b3Scalar.h <482:1 482:110>]
COMMENT: comment [b3Scalar.h <483:1 483:118>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <484:1 484:15>]
COMMENT: comment [b3Scalar.h <486:5 486:89>]
COMMENT: comment [b3Scalar.h <487:5 487:73>]
COMMENT: comment [b3Scalar.h <488:5 488:89>]
COMMENT: comment [b3Scalar.h <489:5 489:77>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <494:1 494:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <500:1 500:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_HAVE_NATIVE_FSEL [b3Scalar.h <502:8 502:26>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <509:22 509:36>]
COMMENT: comment [b3Scalar.h <517:1 517:33>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <518:1 518:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <523:1 523:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <528:1 528:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <533:1 533:15>]
COMMENT: comment [b3Scalar.h <538:1 538:63>]
COMMENT: comment [b3Scalar.h <539:1 539:120>]
COMMENT: comment [b3Scalar.h <540:1 540:101>]
COMMENT: comment [b3Scalar.h <541:1 541:127>]
COMMENT: comment [b3Scalar.h <542:1 542:143>]
COMMENT: comment [b3Scalar.h <543:1 543:79>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <544:1 544:15>]
COMMENT: comment [b3Scalar.h <557:1 557:30>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <558:1 558:15>]
COMMENT: comment [b3Scalar.h <573:1 573:28>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <574:1 574:15>]
COMMENT: comment [b3Scalar.h <589:1 589:30>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <590:1 590:15>]
COMMENT: comment [b3Scalar.h <607:1 607:53>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <608:1 608:15>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_2_PI [b3Scalar.h <610:42 610:48>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_PI [b3Scalar.h <611:23 611:27>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_2_PI [b3Scalar.h <613:27 613:33>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_PI [b3Scalar.h <615:27 615:31>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_2_PI [b3Scalar.h <617:27 617:33>]
COMMENT: comment [b3Scalar.h <625:1 625:42>]
COMMENT: comment [b3Scalar.h <641:1 641:54>]
COMMENT: comment [b3Scalar.h <663:8 663:21>]
REFERENCE_INCLUDE b3Vector3.h -> b3MinMax.h [b3Vector3.h <22:10 22:21>]
FILE: b3MinMax.h
COMMENT: comment [b3MinMax.h <1:1 13:3>]
REFERENCE_MACRO_USAGE b3MinMax.h -> B3_GEN_MINMAX_H [b3MinMax.h <17:9 17:23>]
SYMBOL_MACRO B3_GEN_MINMAX_H [b3MinMax.h <18:9 <18:9 18:23> 18:8>]
REFERENCE_INCLUDE b3MinMax.h -> b3Scalar.h [b3MinMax.h <20:10 20:21>]
REFERENCE_MACRO_USAGE b3MinMax.h -> B3_FORCE_INLINE [b3MinMax.h <23:1 23:15>]
REFERENCE_MACRO_USAGE b3MinMax.h -> B3_FORCE_INLINE [b3MinMax.h <29:1 29:15>]
REFERENCE_MACRO_USAGE b3MinMax.h -> B3_FORCE_INLINE [b3MinMax.h <35:1 35:15>]
REFERENCE_MACRO_USAGE b3MinMax.h -> B3_FORCE_INLINE [b3MinMax.h <41:1 41:15>]
REFERENCE_MACRO_USAGE b3MinMax.h -> B3_FORCE_INLINE [b3MinMax.h <50:1 50:15>]
REFERENCE_MACRO_USAGE b3MinMax.h -> B3_FORCE_INLINE [b3MinMax.h <59:1 59:15>]
COMMENT: comment [b3MinMax.h <71:8 71:25>]
REFERENCE_INCLUDE b3Vector3.h -> b3AlignedAllocator.h [b3Vector3.h <23:10 23:31>]
FILE: b3AlignedAllocator.h
COMMENT: comment [b3AlignedAllocator.h <1:1 14:3>]
REFERENCE_MACRO_USAGE b3AlignedAllocator.h -> B3_ALIGNED_ALLOCATOR [b3AlignedAllocator.h <16:9 16:28>]
SYMBOL_MACRO B3_ALIGNED_ALLOCATOR [b3AlignedAllocator.h <17:9 <17:9 17:28> 17:8>]
COMMENT: comment [b3AlignedAllocator.h <19:1 19:66>]
COMMENT: comment [b3AlignedAllocator.h <20:1 20:64>]
COMMENT: comment [b3AlignedAllocator.h <21:1 21:48>]
REFERENCE_INCLUDE b3AlignedAllocator.h -> b3Scalar.h [b3AlignedAllocator.h <23:10 23:21>]
COMMENT: comment [b3AlignedAllocator.h <24:1 24:40>]
REFERENCE_MACRO_USAGE b3AlignedAllocator.h -> B3_DEBUG_MEMORY_ALLOCATIONS [b3AlignedAllocator.h <25:8 25:34>]
SYMBOL_MACRO b3AlignedAlloc [b3AlignedAllocator.h <41:10 <41:10 41:23> 41:77>]
SYMBOL_MACRO b3AlignedFree [b3AlignedAllocator.h <42:10 <42:10 42:22> 42:53>]
COMMENT: comment [b3AlignedAllocator.h <52:1 52:123>]
COMMENT: comment [b3AlignedAllocator.h <54:1 54:220>]
COMMENT: comment [b3AlignedAllocator.h <58:1 58:78>]
COMMENT: comment [b3AlignedAllocator.h <59:1 59:171>]
COMMENT: comment [b3AlignedAllocator.h <67:2 67:27>]
COMMENT: comment [b3AlignedAllocator.h <69:2 71:4>]
REFERENCE_MACRO_USAGE b3AlignedAllocator.h -> b3AlignedAlloc [b3AlignedAllocator.h <86:38 86:51>]
REFERENCE_MACRO_USAGE b3AlignedAllocator.h -> b3AlignedFree [b3AlignedAllocator.h <90:3 90:15>]
COMMENT: comment [b3AlignedAllocator.h <106:8 106:30>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_DOUBLE_PRECISION [b3Vector3.h <25:8 25:30>]
SYMBOL_MACRO b3Vector3Data [b3Vector3.h <29:9 <29:9 29:21> 29:22>]
SYMBOL_MACRO b3Vector3DataName [b3Vector3.h <30:9 <30:9 30:25> 30:26>]
COMMENT: comment [b3Vector3.h <31:8 31:33>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <33:13 33:22>]
COMMENT: comment [b3Vector3.h <35:1 35:63>]
REFERENCE_MACRO_USAGE b3Vector3.h -> _MSC_VER [b3Vector3.h <37:8 37:15>]
COMMENT: comment [b3Vector3.h <38:32 38:111>]
SYMBOL_MACRO B3_SHUFFLE [b3Vector3.h <42:9 <42:9 42:18> 42:59>]
COMMENT: comment [b3Vector3.h <43:1 43:88>]
SYMBOL_MACRO b3_pshufd_ps [b3Vector3.h <44:9 <44:9 44:20> 44:69>]
SYMBOL_MACRO b3_splat3_ps [b3Vector3.h <45:9 <45:9 45:20> 45:74>]
SYMBOL_MACRO b3_splat_ps [b3Vector3.h <46:9 <46:9 46:19> 46:74>]
SYMBOL_MACRO b3v3AbsiMask [b3Vector3.h <48:9 <48:9 48:20> 48:83>]
SYMBOL_MACRO b3vAbsMask [b3Vector3.h <49:9 <49:9 49:18> 49:82>]
SYMBOL_MACRO b3vFFF0Mask [b3Vector3.h <50:9 <50:9 50:19> 50:82>]
SYMBOL_MACRO b3v3AbsfMask [b3Vector3.h <51:9 <51:9 51:20> 51:47>]
SYMBOL_MACRO b3vFFF0fMask [b3Vector3.h <52:9 <52:9 52:20> 52:46>]
SYMBOL_MACRO b3vxyzMaskf [b3Vector3.h <53:9 <53:9 53:19> 53:20>]
SYMBOL_MACRO b3vAbsfMask [b3Vector3.h <54:9 <54:9 54:19> 54:44>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_ATTRIBUTE_ALIGNED16 [b3Vector3.h <58:14 58:35>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_ATTRIBUTE_ALIGNED16 [b3Vector3.h <59:14 59:35>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_ATTRIBUTE_ALIGNED16 [b3Vector3.h <60:14 60:35>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_ATTRIBUTE_ALIGNED16 [b3Vector3.h <61:14 61:35>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_NEON [b3Vector3.h <65:8 65:18>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <77:13 77:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <77:44 77:53>]
COMMENT: comment [b3Vector3.h <78:1 78:52>]
COMMENT: comment [b3Vector3.h <88:1 91:4>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_ATTRIBUTE_ALIGNED16 [b3Vector3.h <92:1 92:22>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <95:14 95:23>]
COMMENT: comment [b3Vector3.h <95:50 95:66>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_NEON [b3Vector3.h <95:37 95:47>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_DECLARE_ALIGNED_ALLOCATOR [b3Vector3.h <113:2 113:29>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <332:4 332:18>]
REFERENCE_MACRO_USAGE b3Scalar.h -> b3AlignedAlloc [b3Scalar.h <332:70 332:83>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <333:4 333:18>]
REFERENCE_MACRO_USAGE b3Scalar.h -> b3AlignedFree [b3Scalar.h <333:63 333:75>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <334:4 334:18>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <335:4 335:18>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <336:4 336:18>]
REFERENCE_MACRO_USAGE b3Scalar.h -> b3AlignedAlloc [b3Scalar.h <336:72 336:85>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <337:4 337:18>]
REFERENCE_MACRO_USAGE b3Scalar.h -> b3AlignedFree [b3Scalar.h <337:65 337:77>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <338:4 338:18>]
REFERENCE_MACRO_USAGE b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <339:4 339:18>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <115:14 115:23>]
COMMENT: comment [b3Vector3.h <115:50 115:66>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_NEON [b3Vector3.h <115:37 115:47>]
COMMENT: comment [b3Vector3.h <117:2 120:4>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <122:5 122:19>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <126:5 126:19>]
COMMENT: comment [b3Vector3.h <136:1 137:43>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <138:2 138:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <140:13 140:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <140:44 140:53>]
COMMENT: comment [b3Vector3.h <153:3 154:38>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <155:2 155:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <157:13 157:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <157:44 157:53>]
COMMENT: comment [b3Vector3.h <169:3 170:30>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <171:2 171:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <173:13 173:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <173:44 173:53>]
COMMENT: comment [b3Vector3.h <174:32 174:44>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3_pshufd_ps [b3Vector3.h <175:8 175:19>]
COMMENT: comment [b3Vector3.h <175:32 175:46>]
COMMENT: comment [b3Vector3.h <187:3 188:43>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <189:2 189:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3FullAssert [b3Vector3.h <191:3 191:14>]
COMMENT: comment [b3Vector3.h <193:7 193:35>]
COMMENT: comment [b3Vector3.h <207:3 208:53>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <209:2 209:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <211:13 211:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <211:44 211:53>]
COMMENT: comment [b3Vector3.h <230:3 230:55>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <231:2 231:16>]
COMMENT: comment [b3Vector3.h <236:3 236:47>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <237:2 237:16>]
COMMENT: comment [b3Vector3.h <242:3 243:62>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <244:2 244:16>]
COMMENT: comment [b3Vector3.h <246:3 247:62>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <248:2 248:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <250:2 250:16>]
COMMENT: comment [b3Vector3.h <253:3 253:27>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_EPSILON [b3Vector3.h <254:13 254:22>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_EPSILON [b3Vector3.h <254:24 254:33>]
COMMENT: comment [b3Vector3.h <265:3 266:28>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <267:2 267:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <269:13 269:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <269:44 269:53>]
COMMENT: comment [b3Vector3.h <270:9 270:29>]
COMMENT: comment [b3Vector3.h <284:9 284:52>]
COMMENT: comment [b3Vector3.h <285:31 285:42>]
COMMENT: comment [b3Vector3.h <287:9 287:24>]
COMMENT: comment [b3Vector3.h <289:39 289:50>]
COMMENT: comment [b3Vector3.h <290:9 290:19>]
COMMENT: comment [b3Vector3.h <291:33 291:49>]
COMMENT: comment [b3Vector3.h <292:33 292:54>]
COMMENT: comment [b3Vector3.h <293:33 293:60>]
COMMENT: comment [b3Vector3.h <295:33 295:67>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3_splat_ps [b3Vector3.h <297:7 297:17>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3_pshufd_ps [b3Vector3.h <46:32 46:43>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_SHUFFLE [b3Vector3.h <46:51 46:60>]
COMMENT: comment [b3Vector3.h <309:3 309:58>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <310:2 310:16>]
COMMENT: comment [b3Vector3.h <312:3 314:44>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <315:2 315:16>]
COMMENT: comment [b3Vector3.h <317:3 318:34>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <319:2 319:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3FullAssert [b3Vector3.h <322:3 322:14>]
COMMENT: comment [b3Vector3.h <326:3 326:72>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <327:2 327:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <329:13 329:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <329:44 329:53>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3v3AbsfMask [b3Vector3.h <330:44 330:55>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3CastiTo128f [b3Vector3.h <51:22 51:34>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3v3AbsiMask [b3Vector3.h <51:36 51:47>]
COMMENT: comment [b3Vector3.h <341:3 342:34>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <343:2 343:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <345:13 345:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <345:44 345:53>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3_pshufd_ps [b3Vector3.h <348:7 348:18>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_SHUFFLE [b3Vector3.h <348:29 348:38>]
COMMENT: comment [b3Vector3.h <348:54 348:66>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3_pshufd_ps [b3Vector3.h <349:7 349:18>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_SHUFFLE [b3Vector3.h <349:31 349:40>]
COMMENT: comment [b3Vector3.h <349:56 349:68>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3_pshufd_ps [b3Vector3.h <355:7 355:18>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_SHUFFLE [b3Vector3.h <355:23 355:32>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <382:2 382:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <384:13 384:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <384:44 384:53>]
COMMENT: comment [b3Vector3.h <385:3 385:12>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_SHUFFLE [b3Vector3.h <386:53 386:62>]
COMMENT: comment [b3Vector3.h <386:78 386:90>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_SHUFFLE [b3Vector3.h <387:53 387:62>]
COMMENT: comment [b3Vector3.h <387:78 387:90>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_SHUFFLE [b3Vector3.h <393:28 393:37>]
COMMENT: comment [b3Vector3.h <395:3 395:10>]
COMMENT: comment [b3Vector3.h <432:3 433:52>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <434:2 434:16>]
COMMENT: comment [b3Vector3.h <439:3 440:52>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <441:2 441:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <446:2 446:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <451:2 451:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <457:2 457:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <459:13 459:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <459:44 459:53>]
COMMENT: comment [b3Vector3.h <460:34 460:47>]
COMMENT: comment [b3Vector3.h <462:32 462:44>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3_pshufd_ps [b3Vector3.h <463:8 463:19>]
COMMENT: comment [b3Vector3.h <463:32 463:46>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3_pshufd_ps [b3Vector3.h <465:9 465:20>]
COMMENT: comment [b3Vector3.h <465:34 465:51>]
COMMENT: comment [b3Vector3.h <483:3 485:85>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <486:2 486:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <488:13 488:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <488:44 488:53>]
COMMENT: comment [b3Vector3.h <489:32 489:44>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3_pshufd_ps [b3Vector3.h <490:8 490:19>]
COMMENT: comment [b3Vector3.h <490:32 490:49>]
COMMENT: comment [b3Vector3.h <510:3 511:34>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <512:2 512:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <514:13 514:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <514:44 514:53>]
COMMENT: comment [b3Vector3.h <526:3 526:34>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <527:3 527:17>]
COMMENT: comment [b3Vector3.h <528:3 528:34>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <529:3 529:17>]
COMMENT: comment [b3Vector3.h <530:3 530:34>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <531:3 531:17>]
COMMENT: comment [b3Vector3.h <532:1 532:32>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <533:3 533:17>]
COMMENT: comment [b3Vector3.h <535:3 535:31>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <536:3 536:17>]
COMMENT: comment [b3Vector3.h <537:3 537:31>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <538:3 538:17>]
COMMENT: comment [b3Vector3.h <539:3 539:31>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <540:3 540:17>]
COMMENT: comment [b3Vector3.h <541:3 541:31>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <542:3 542:17>]
COMMENT: comment [b3Vector3.h <544:2 544:89>]
COMMENT: comment [b3Vector3.h <545:2 545:89>]
COMMENT: comment [b3Vector3.h <546:2 546:140>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <547:2 547:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <548:2 548:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <550:2 550:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <552:13 552:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <552:44 552:53>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <562:2 562:16>]
COMMENT: comment [b3Vector3.h <567:3 569:6>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <570:2 570:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <572:13 572:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <572:44 572:53>]
COMMENT: comment [b3Vector3.h <584:3 586:6>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <587:2 587:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <589:13 589:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <589:44 589:53>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <601:2 601:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <611:13 611:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <611:44 611:53>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3vFFF0fMask [b3Vector3.h <613:35 613:46>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3CastiTo128f [b3Vector3.h <52:22 52:34>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3vFFF0Mask [b3Vector3.h <52:36 52:46>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <634:13 634:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <634:44 634:53>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <644:2 644:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <649:2 649:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_EPSILON [b3Vector3.h <651:22 651:31>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <654:2 654:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3Vector3Data [b3Vector3.h <654:40 654:52>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <656:2 656:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3Vector3Data [b3Vector3.h <656:48 656:60>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <658:2 658:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <660:2 660:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <662:2 662:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <664:2 664:16>]
COMMENT: comment [b3Vector3.h <666:9 669:52>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <670:9 670:23>]
COMMENT: comment [b3Vector3.h <672:9 675:52>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <676:9 676:23>]
COMMENT: comment [b3Vector3.h <678:5 678:122>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <679:5 679:19>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <681:13 681:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <681:44 681:53>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3vxyzMaskf [b3Vector3.h <691:30 691:40>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3vFFF0fMask [b3Vector3.h <53:21 53:32>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3CastdTo128f [b3Vector3.h <692:28 692:40>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3CastfTo128d [b3Vector3.h <692:56 692:68>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3CastfTo128d [b3Vector3.h <692:75 692:87>]
COMMENT: comment [b3Vector3.h <711:1 711:60>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <712:1 712:15>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <715:13 715:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <715:44 715:53>]
COMMENT: comment [b3Vector3.h <727:1 727:59>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <728:1 728:15>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <731:13 731:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <731:44 731:53>]
COMMENT: comment [b3Vector3.h <743:1 743:55>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <744:1 744:15>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <747:14 747:30>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <747:45 747:54>]
COMMENT: comment [b3Vector3.h <749:2 749:67>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3vFFF0fMask [b3Vector3.h <751:37 751:48>]
COMMENT: comment [b3Vector3.h <763:1 763:47>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <764:1 764:15>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <767:14 767:30>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <767:45 767:54>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3vFFF0fMask [b3Vector3.h <769:37 769:48>]
COMMENT: comment [b3Vector3.h <777:1 777:43>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <778:1 778:15>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <781:13 781:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <781:44 781:53>]
COMMENT: comment [b3Vector3.h <782:31 782:43>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3_pshufd_ps [b3Vector3.h <783:7 783:18>]
COMMENT: comment [b3Vector3.h <783:31 783:45>]
COMMENT: comment [b3Vector3.h <793:1 793:43>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <794:1 794:15>]
COMMENT: comment [b3Vector3.h <800:1 800:53>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <801:1 801:15>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3FullAssert [b3Vector3.h <804:2 804:13>]
COMMENT: comment [b3Vector3.h <805:7 805:35>]
COMMENT: comment [b3Vector3.h <817:1 817:53>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <818:1 818:15>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <821:14 821:30>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <821:44 821:53>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3vFFF0fMask [b3Vector3.h <823:24 823:35>]
COMMENT: comment [b3Vector3.h <847:1 847:56>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <848:1 848:15>]
COMMENT: comment [b3Vector3.h <855:1 855:61>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <856:1 856:15>]
COMMENT: comment [b3Vector3.h <863:1 863:53>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <864:1 864:15>]
COMMENT: comment [b3Vector3.h <870:1 870:50>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <871:1 871:15>]
COMMENT: comment [b3Vector3.h <877:1 877:53>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <878:1 878:15>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <884:1 884:15>]
COMMENT: comment [b3Vector3.h <890:1 893:78>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <894:1 894:15>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <902:1 902:15>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <907:1 907:15>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <912:1 912:15>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <914:13 914:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <914:44 914:53>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <923:1 923:15>]
COMMENT: comment [b3Vector3.h <925:2 925:39>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <927:13 927:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <927:44 927:53>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3vFFF0fMask [b3Vector3.h <932:20 932:31>]
COMMENT: comment [b3Vector3.h <935:36 935:48>]
COMMENT: comment [b3Vector3.h <936:39 936:51>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3_pshufd_ps [b3Vector3.h <938:13 938:24>]
COMMENT: comment [b3Vector3.h <938:36 938:48>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3_pshufd_ps [b3Vector3.h <939:13 939:24>]
COMMENT: comment [b3Vector3.h <939:36 939:48>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3_pshufd_ps [b3Vector3.h <941:9 941:20>]
COMMENT: comment [b3Vector3.h <941:35 941:47>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3_pshufd_ps [b3Vector3.h <943:12 943:23>]
COMMENT: comment [b3Vector3.h <943:38 943:50>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <965:1 965:15>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <967:14 967:23>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_NEON [b3Vector3.h <967:38 967:48>]
REFERENCE_MACRO_USAGE b3Vector3.h -> _WIN32 [b3Vector3.h <968:17 968:22>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <968:36 968:45>]
COMMENT: comment [b3Vector3.h <978:7 978:34>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_INFINITY [b3Vector3.h <980:28 980:38>]
REFERENCE_MACRO_USAGE b3Scalar.h -> FLT_MAX [b3Scalar.h <423:25 423:31>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3Assert [b3Vector3.h <994:3 994:10>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <1002:14 1002:23>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_NEON [b3Vector3.h <1002:38 1002:48>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1007:1 1007:15>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <1009:14 1009:23>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_NEON [b3Vector3.h <1009:38 1009:48>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <1010:17 1010:26>]
COMMENT: comment [b3Vector3.h <1021:7 1021:34>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_INFINITY [b3Vector3.h <1023:28 1023:38>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <1042:14 1042:23>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_NEON [b3Vector3.h <1042:38 1042:48>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1057:2 1057:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <1059:13 1059:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <1059:44 1059:53>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3vAbsfMask [b3Vector3.h <1060:44 1060:54>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3CastiTo128f [b3Vector3.h <54:21 54:33>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3vAbsMask [b3Vector3.h <54:35 54:44>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1076:3 1076:17>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_LARGE_FLOAT [b3Vector3.h <1079:31 1079:44>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1105:2 1105:16>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_LARGE_FLOAT [b3Vector3.h <1108:30 1108:43>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1134:2 1134:16>]
COMMENT: comment [b3Vector3.h <1142:3 1146:6>]
COMMENT: comment [b3Vector3.h <1149:1 1155:3>]
COMMENT: comment [b3Vector3.h <1156:1 1161:6>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1162:3 1162:17>]
COMMENT: comment [b3Vector3.h <1174:1 1174:100>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1175:1 1175:15>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_DOUBLE_PRECISION [b3Vector3.h <1177:9 1177:31>]
COMMENT: comment [b3Vector3.h <1195:8 1195:33>]
COMMENT: comment [b3Vector3.h <1197:1 1197:100>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1198:1 1198:15>]
COMMENT: comment [b3Vector3.h <1207:1 1207:102>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1208:1 1208:15>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1220:1 1220:15>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_SQRT12 [b3Vector3.h <1222:22 1222:30>]
COMMENT: comment [b3Vector3.h <1223:5 1223:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3RecipSqrt [b3Vector3.h <1225:18 1225:28>]
COMMENT: comment [b3Vector3.h <1229:5 1229:21>]
COMMENT: comment [b3Vector3.h <1235:5 1235:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3RecipSqrt [b3Vector3.h <1237:18 1237:28>]
COMMENT: comment [b3Vector3.h <1241:5 1241:21>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1260:1 1260:15>]
COMMENT: comment [b3Vector3.h <1262:2 1262:52>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1267:1 1267:15>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1274:1 1274:15>]
COMMENT: comment [b3Vector3.h <1276:2 1276:52>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1281:1 1281:15>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1288:1 1288:15>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3Vector3Data [b3Vector3.h <1288:50 1288:62>]
COMMENT: comment [b3Vector3.h <1290:2 1290:52>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1295:1 1295:15>]
REFERENCE_MACRO_USAGE b3Vector3.h -> b3Vector3Data [b3Vector3.h <1295:58 1295:70>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <1326:13 1326:29>]
REFERENCE_MACRO_USAGE b3Vector3.h -> B3_USE_SSE [b3Vector3.h <1326:44 1326:53>]
COMMENT: comment [b3Vector3.h <1345:8 1345:22>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> B3_USE_SSE [b3Vector3.cpp <23:14 23:23>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> B3_USE_NEON [b3Vector3.cpp <23:38 23:48>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> __APPLE__ [b3Vector3.cpp <25:8 25:16>]
SYMBOL_MACRO float4 [b3Vector3.cpp <29:9 <29:9 29:14> 29:15>]
COMMENT: comment [b3Vector3.cpp <31:1 31:61>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> B3_USE_SSE [b3Vector3.cpp <34:13 34:22>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> _WIN32 [b3Vector3.cpp <34:35 34:40>]
SYMBOL_MACRO LOG2_ARRAY_SIZE [b3Vector3.cpp <36:9 <36:9 36:23> 36:28>]
SYMBOL_MACRO STACK_ARRAY_COUNT [b3Vector3.cpp <37:9 <37:9 37:25> 37:51>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <44:11 44:16>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <44:37 44:42>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <46:5 46:10>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> b3Assign128 [b3Vector3.cpp <46:21 46:31>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> B3_INFINITY [b3Vector3.cpp <46:35 46:45>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> B3_INFINITY [b3Vector3.cpp <46:50 46:60>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> B3_INFINITY [b3Vector3.cpp <46:65 46:75>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> B3_INFINITY [b3Vector3.cpp <46:80 46:90>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <47:5 47:10>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <48:5 48:10>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> b3CastiTo128f [b3Vector3.cpp <48:18 48:30>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> b3CastfTo128i [b3Vector3.cpp <48:51 48:63>]
COMMENT: comment [b3Vector3.cpp <48:91 48:99>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <49:5 49:10>]
COMMENT: comment [b3Vector3.cpp <49:77 49:85>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <54:5 54:10>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> STACK_ARRAY_COUNT [b3Vector3.cpp <54:25 54:41>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> LOG2_ARRAY_SIZE [b3Vector3.cpp <37:37 37:51>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <61:5 61:10>]
COMMENT: comment [b3Vector3.cpp <62:5 62:55>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> STACK_ARRAY_COUNT [b3Vector3.cpp <63:34 63:50>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> STACK_ARRAY_COUNT [b3Vector3.cpp <63:75 63:91>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> STACK_ARRAY_COUNT [b3Vector3.cpp <67:33 67:49>]
COMMENT: comment [b3Vector3.cpp <68:11 68:85>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <69:13 69:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <70:13 70:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <71:13 71:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <72:13 72:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <74:13 74:18>]
COMMENT: comment [b3Vector3.cpp <74:53 74:64>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <75:13 75:18>]
COMMENT: comment [b3Vector3.cpp <75:53 75:64>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <76:13 76:18>]
COMMENT: comment [b3Vector3.cpp <76:53 76:64>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <77:13 77:18>]
COMMENT: comment [b3Vector3.cpp <77:53 77:64>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <81:13 81:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <82:13 82:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <83:13 83:18>]
COMMENT: comment [b3Vector3.cpp <88:49 88:116>]
COMMENT: comment [b3Vector3.cpp <95:46 95:57>]
COMMENT: comment [b3Vector3.cpp <96:46 96:57>]
COMMENT: comment [b3Vector3.cpp <97:46 97:57>]
COMMENT: comment [b3Vector3.cpp <98:46 98:57>]
COMMENT: comment [b3Vector3.cpp <109:49 109:116>]
COMMENT: comment [b3Vector3.cpp <116:46 116:57>]
COMMENT: comment [b3Vector3.cpp <117:46 117:57>]
COMMENT: comment [b3Vector3.cpp <118:46 118:57>]
COMMENT: comment [b3Vector3.cpp <119:46 119:57>]
COMMENT: comment [b3Vector3.cpp <130:49 130:116>]
COMMENT: comment [b3Vector3.cpp <137:46 137:57>]
COMMENT: comment [b3Vector3.cpp <138:46 138:57>]
COMMENT: comment [b3Vector3.cpp <139:46 139:57>]
COMMENT: comment [b3Vector3.cpp <140:46 140:57>]
COMMENT: comment [b3Vector3.cpp <151:49 151:116>]
COMMENT: comment [b3Vector3.cpp <153:13 153:133>]
COMMENT: comment [b3Vector3.cpp <156:9 156:33>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <157:38 157:43>]
COMMENT: comment [b3Vector3.cpp <159:13 159:72>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <160:36 160:41>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <161:36 161:41>]
COMMENT: comment [b3Vector3.cpp <165:13 165:49>]
COMMENT: comment [b3Vector3.cpp <167:111 167:149>]
COMMENT: comment [b3Vector3.cpp <169:13 169:35>]
COMMENT: comment [b3Vector3.cpp <174:5 174:43>]
COMMENT: comment [b3Vector3.cpp <177:5 177:54>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> b3Unlikely [b3Vector3.cpp <182:9 182:18>]
COMMENT: comment [b3Vector3.cpp <185:11 185:85>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <186:13 186:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <187:13 187:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <188:13 188:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <189:13 189:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <191:13 191:18>]
COMMENT: comment [b3Vector3.cpp <191:53 191:64>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <192:13 192:18>]
COMMENT: comment [b3Vector3.cpp <192:53 192:64>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <193:13 193:18>]
COMMENT: comment [b3Vector3.cpp <193:53 193:64>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <194:13 194:18>]
COMMENT: comment [b3Vector3.cpp <194:53 194:64>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <198:13 198:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <199:13 199:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <200:13 200:18>]
COMMENT: comment [b3Vector3.cpp <205:49 205:116>]
COMMENT: comment [b3Vector3.cpp <212:46 212:57>]
COMMENT: comment [b3Vector3.cpp <213:46 213:57>]
COMMENT: comment [b3Vector3.cpp <214:46 214:57>]
COMMENT: comment [b3Vector3.cpp <215:46 215:57>]
COMMENT: comment [b3Vector3.cpp <226:49 226:116>]
COMMENT: comment [b3Vector3.cpp <233:46 233:57>]
COMMENT: comment [b3Vector3.cpp <234:46 234:57>]
COMMENT: comment [b3Vector3.cpp <235:46 235:57>]
COMMENT: comment [b3Vector3.cpp <236:46 236:57>]
COMMENT: comment [b3Vector3.cpp <247:49 247:116>]
COMMENT: comment [b3Vector3.cpp <254:46 254:57>]
COMMENT: comment [b3Vector3.cpp <255:46 255:57>]
COMMENT: comment [b3Vector3.cpp <256:46 256:57>]
COMMENT: comment [b3Vector3.cpp <257:46 257:57>]
COMMENT: comment [b3Vector3.cpp <268:49 268:116>]
COMMENT: comment [b3Vector3.cpp <270:13 270:133>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> __APPLE__ [b3Vector3.cpp <277:8 277:16>]
COMMENT: comment [b3Vector3.cpp <318:15 318:89>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <319:17 319:22>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <320:17 320:22>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <321:17 321:22>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <322:17 322:22>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <325:17 325:22>]
COMMENT: comment [b3Vector3.cpp <325:57 325:68>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <326:17 326:22>]
COMMENT: comment [b3Vector3.cpp <326:57 326:68>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <327:17 327:22>]
COMMENT: comment [b3Vector3.cpp <327:57 327:68>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <328:17 328:22>]
COMMENT: comment [b3Vector3.cpp <328:57 328:68>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <332:17 332:22>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <333:17 333:22>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <334:17 334:22>]
COMMENT: comment [b3Vector3.cpp <339:53 339:120>]
COMMENT: comment [b3Vector3.cpp <342:8 342:19>]
COMMENT: comment [b3Vector3.cpp <345:5 345:35>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <348:9 348:14>]
COMMENT: comment [b3Vector3.cpp <357:17 357:69>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <358:17 358:22>]
COMMENT: comment [b3Vector3.cpp <358:61 358:71>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <359:17 359:22>]
COMMENT: comment [b3Vector3.cpp <359:61 359:71>]
COMMENT: comment [b3Vector3.cpp <361:64 361:75>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <363:17 363:22>]
COMMENT: comment [b3Vector3.cpp <363:62 363:69>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <373:17 373:22>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <384:17 384:22>]
COMMENT: comment [b3Vector3.cpp <396:45 396:112>]
COMMENT: comment [b3Vector3.cpp <400:5 400:30>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <401:50 401:55>]
COMMENT: comment [b3Vector3.cpp <402:7 402:43>]
COMMENT: comment [b3Vector3.cpp <403:7 403:94>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <404:32 404:37>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <405:32 405:37>]
COMMENT: comment [b3Vector3.cpp <407:9 407:109>]
COMMENT: comment [b3Vector3.cpp <408:9 408:109>]
COMMENT: comment [b3Vector3.cpp <409:9 409:111>]
COMMENT: comment [b3Vector3.cpp <410:9 410:39>]
COMMENT: comment [b3Vector3.cpp <414:9 414:60>]
COMMENT: comment [b3Vector3.cpp <416:107 416:145>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <429:11 429:16>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <429:37 429:42>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <432:5 432:10>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> b3Assign128 [b3Vector3.cpp <432:21 432:31>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> B3_INFINITY [b3Vector3.cpp <432:34 432:44>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> B3_INFINITY [b3Vector3.cpp <432:48 432:58>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> B3_INFINITY [b3Vector3.cpp <432:62 432:72>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> B3_INFINITY [b3Vector3.cpp <432:76 432:86>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <433:5 433:10>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <434:5 434:10>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> b3CastiTo128f [b3Vector3.cpp <434:18 434:30>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> b3CastfTo128i [b3Vector3.cpp <434:51 434:63>]
COMMENT: comment [b3Vector3.cpp <434:91 434:99>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <435:5 435:10>]
COMMENT: comment [b3Vector3.cpp <435:77 435:85>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <440:5 440:10>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> STACK_ARRAY_COUNT [b3Vector3.cpp <440:25 440:41>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <447:5 447:10>]
COMMENT: comment [b3Vector3.cpp <448:5 448:55>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> STACK_ARRAY_COUNT [b3Vector3.cpp <449:34 449:50>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> STACK_ARRAY_COUNT [b3Vector3.cpp <449:75 449:91>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> STACK_ARRAY_COUNT [b3Vector3.cpp <453:33 453:49>]
COMMENT: comment [b3Vector3.cpp <454:11 454:85>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <455:13 455:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <456:13 456:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <457:13 457:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <458:13 458:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <460:13 460:18>]
COMMENT: comment [b3Vector3.cpp <460:53 460:64>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <461:13 461:18>]
COMMENT: comment [b3Vector3.cpp <461:53 461:64>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <462:13 462:18>]
COMMENT: comment [b3Vector3.cpp <462:53 462:64>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <463:13 463:18>]
COMMENT: comment [b3Vector3.cpp <463:53 463:64>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <467:13 467:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <468:13 468:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <469:13 469:18>]
COMMENT: comment [b3Vector3.cpp <474:49 474:116>]
COMMENT: comment [b3Vector3.cpp <481:46 481:57>]
COMMENT: comment [b3Vector3.cpp <482:46 482:57>]
COMMENT: comment [b3Vector3.cpp <483:46 483:57>]
COMMENT: comment [b3Vector3.cpp <484:46 484:57>]
COMMENT: comment [b3Vector3.cpp <495:49 495:116>]
COMMENT: comment [b3Vector3.cpp <502:46 502:57>]
COMMENT: comment [b3Vector3.cpp <503:46 503:57>]
COMMENT: comment [b3Vector3.cpp <504:46 504:57>]
COMMENT: comment [b3Vector3.cpp <505:46 505:57>]
COMMENT: comment [b3Vector3.cpp <516:49 516:116>]
COMMENT: comment [b3Vector3.cpp <523:46 523:57>]
COMMENT: comment [b3Vector3.cpp <524:46 524:57>]
COMMENT: comment [b3Vector3.cpp <525:46 525:57>]
COMMENT: comment [b3Vector3.cpp <526:46 526:57>]
COMMENT: comment [b3Vector3.cpp <537:49 537:116>]
COMMENT: comment [b3Vector3.cpp <539:13 539:133>]
COMMENT: comment [b3Vector3.cpp <542:9 542:33>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <543:38 543:43>]
COMMENT: comment [b3Vector3.cpp <545:13 545:72>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <546:36 546:41>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <547:36 547:41>]
COMMENT: comment [b3Vector3.cpp <551:13 551:49>]
COMMENT: comment [b3Vector3.cpp <553:111 553:149>]
COMMENT: comment [b3Vector3.cpp <555:13 555:35>]
COMMENT: comment [b3Vector3.cpp <560:5 560:43>]
COMMENT: comment [b3Vector3.cpp <563:5 563:54>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> b3Unlikely [b3Vector3.cpp <568:8 568:17>]
COMMENT: comment [b3Vector3.cpp <571:11 571:85>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <572:13 572:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <573:13 573:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <574:13 574:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <575:13 575:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <577:13 577:18>]
COMMENT: comment [b3Vector3.cpp <577:53 577:64>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <578:13 578:18>]
COMMENT: comment [b3Vector3.cpp <578:53 578:64>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <579:13 579:18>]
COMMENT: comment [b3Vector3.cpp <579:53 579:64>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <580:13 580:18>]
COMMENT: comment [b3Vector3.cpp <580:53 580:64>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <584:13 584:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <585:13 585:18>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <586:13 586:18>]
COMMENT: comment [b3Vector3.cpp <591:49 591:116>]
COMMENT: comment [b3Vector3.cpp <598:46 598:57>]
COMMENT: comment [b3Vector3.cpp <599:46 599:57>]
COMMENT: comment [b3Vector3.cpp <600:46 600:57>]
COMMENT: comment [b3Vector3.cpp <601:46 601:57>]
COMMENT: comment [b3Vector3.cpp <612:49 612:116>]
COMMENT: comment [b3Vector3.cpp <619:46 619:57>]
COMMENT: comment [b3Vector3.cpp <620:46 620:57>]
COMMENT: comment [b3Vector3.cpp <621:46 621:57>]
COMMENT: comment [b3Vector3.cpp <622:46 622:57>]
COMMENT: comment [b3Vector3.cpp <633:49 633:116>]
COMMENT: comment [b3Vector3.cpp <640:46 640:57>]
COMMENT: comment [b3Vector3.cpp <641:46 641:57>]
COMMENT: comment [b3Vector3.cpp <642:46 642:57>]
COMMENT: comment [b3Vector3.cpp <643:46 643:57>]
COMMENT: comment [b3Vector3.cpp <654:49 654:116>]
COMMENT: comment [b3Vector3.cpp <656:13 656:133>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> __APPLE__ [b3Vector3.cpp <665:8 665:16>]
COMMENT: comment [b3Vector3.cpp <706:15 706:89>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <707:17 707:22>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <708:17 708:22>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <709:17 709:22>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <710:17 710:22>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <713:17 713:22>]
COMMENT: comment [b3Vector3.cpp <713:57 713:68>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <714:17 714:22>]
COMMENT: comment [b3Vector3.cpp <714:57 714:68>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <715:17 715:22>]
COMMENT: comment [b3Vector3.cpp <715:57 715:68>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <716:17 716:22>]
COMMENT: comment [b3Vector3.cpp <716:57 716:68>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <720:17 720:22>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <721:17 721:22>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <722:17 722:22>]
COMMENT: comment [b3Vector3.cpp <727:53 727:120>]
COMMENT: comment [b3Vector3.cpp <734:5 734:35>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <737:9 737:14>]
COMMENT: comment [b3Vector3.cpp <746:17 746:69>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <747:17 747:22>]
COMMENT: comment [b3Vector3.cpp <747:61 747:71>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <748:17 748:22>]
COMMENT: comment [b3Vector3.cpp <748:61 748:71>]
COMMENT: comment [b3Vector3.cpp <750:64 750:75>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <752:17 752:22>]
COMMENT: comment [b3Vector3.cpp <752:62 752:69>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <762:17 762:22>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <773:17 773:22>]
COMMENT: comment [b3Vector3.cpp <785:45 785:112>]
COMMENT: comment [b3Vector3.cpp <789:5 789:30>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <790:50 790:55>]
COMMENT: comment [b3Vector3.cpp <791:7 791:43>]
COMMENT: comment [b3Vector3.cpp <792:7 792:94>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <793:32 793:37>]
REFERENCE_MACRO_USAGE b3Vector3.cpp -> float4 [b3Vector3.cpp <794:32 794:37>]
COMMENT: comment [b3Vector3.cpp <796:9 796:109>]
COMMENT: comment [b3Vector3.cpp <797:9 797:109>]
COMMENT: comment [b3Vector3.cpp <798:9 798:111>]
COMMENT: comment [b3Vector3.cpp <799:9 799:39>]
COMMENT: comment [b3Vector3.cpp <803:9 803:60>]
COMMENT: comment [b3Vector3.cpp <805:107 805:145>]
COMMENT: comment [b3Vector3.cpp <1629:9 1629:24>]
SYMBOL_FUNCTION int b3GetVersion() [b3Scalar.h <34:1 <34:12 34:23> 37:1>]
SYMBOL_BUILTIN_TYPE int
REFERENCE_TYPE_USAGE int b3GetVersion() -> int [b3Scalar.h <34:8 34:10>]
SYMBOL_FUNCTION void b3EnterProfileZone(const char *) [b3Logging.h <23:6 23:23>]
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b3EnterProfileZone(const char *) -> void [b3Logging.h <23:1 23:4>]
LOCAL_SYMBOL: b3Logging.h<23:37> [b3Logging.h <23:37 23:40>]
SYMBOL_BUILTIN_TYPE char
REFERENCE_TYPE_USAGE void b3EnterProfileZone(const char *) -> char [b3Logging.h <23:31 23:34>]
SYMBOL_FUNCTION void b3LeaveProfileZone() [b3Logging.h <24:6 24:23>]
REFERENCE_TYPE_USAGE void b3LeaveProfileZone() -> void [b3Logging.h <24:1 24:4>]
SYMBOL_CLASS b3ProfileZone [b3Logging.h <27:1 <27:7 27:19> 39:1>]
SYMBOL_METHOD public void b3ProfileZone::b3ProfileZone(const char *) [b3Logging.h <30:2 <30:2 30:14> 33:2>]
LOCAL_SYMBOL: b3Logging.h<30:28> [b3Logging.h <30:28 30:31>]
REFERENCE_TYPE_USAGE void b3ProfileZone::b3ProfileZone(const char *) -> char [b3Logging.h <30:22 30:25>]
SYMBOL_FUNCTION void b3EnterProfileZone(const char *)
REFERENCE_CALL void b3ProfileZone::b3ProfileZone(const char *) -> void b3EnterProfileZone(const char *) [b3Logging.h <32:3 32:20>]
LOCAL_SYMBOL: b3Logging.h<30:28> [b3Logging.h <32:23 32:26>]
SYMBOL_METHOD public void b3ProfileZone::~b3ProfileZone() [b3Logging.h <35:2 <35:2 35:15> 38:2>]
SYMBOL_FUNCTION void b3LeaveProfileZone()
REFERENCE_CALL void b3ProfileZone::~b3ProfileZone() -> void b3LeaveProfileZone() [b3Logging.h <37:3 37:20>]
SYMBOL_TYPEDEF b3PrintfFunc [b3Logging.h <53:15 53:26>]
REFERENCE_TYPE_USAGE b3PrintfFunc -> void [b3Logging.h <53:9 53:12>]
LOCAL_SYMBOL: b3Logging.h<53:41> [b3Logging.h <53:41 53:43>]
REFERENCE_TYPE_USAGE b3PrintfFunc -> char [b3Logging.h <53:35 53:38>]
SYMBOL_TYPEDEF b3WarningMessageFunc [b3Logging.h <54:15 54:34>]
REFERENCE_TYPE_USAGE b3WarningMessageFunc -> void [b3Logging.h <54:9 54:12>]
LOCAL_SYMBOL: b3Logging.h<54:49> [b3Logging.h <54:49 54:51>]
REFERENCE_TYPE_USAGE b3WarningMessageFunc -> char [b3Logging.h <54:43 54:46>]
SYMBOL_TYPEDEF b3ErrorMessageFunc [b3Logging.h <55:15 55:32>]
REFERENCE_TYPE_USAGE b3ErrorMessageFunc -> void [b3Logging.h <55:9 55:12>]
LOCAL_SYMBOL: b3Logging.h<55:47> [b3Logging.h <55:47 55:49>]
REFERENCE_TYPE_USAGE b3ErrorMessageFunc -> char [b3Logging.h <55:41 55:44>]
SYMBOL_TYPEDEF b3EnterProfileZoneFunc [b3Logging.h <56:15 56:36>]
REFERENCE_TYPE_USAGE b3EnterProfileZoneFunc -> void [b3Logging.h <56:9 56:12>]
LOCAL_SYMBOL: b3Logging.h<56:51> [b3Logging.h <56:51 56:53>]
REFERENCE_TYPE_USAGE b3EnterProfileZoneFunc -> char [b3Logging.h <56:45 56:48>]
SYMBOL_TYPEDEF b3LeaveProfileZoneFunc [b3Logging.h <57:15 57:36>]
REFERENCE_TYPE_USAGE b3LeaveProfileZoneFunc -> void [b3Logging.h <57:9 57:12>]
SYMBOL_FUNCTION void b3SetCustomPrintfFunc(b3PrintfFunc *) [b3Logging.h <60:6 60:26>]
REFERENCE_TYPE_USAGE void b3SetCustomPrintfFunc(b3PrintfFunc *) -> void [b3Logging.h <60:1 60:4>]
LOCAL_SYMBOL: b3Logging.h<60:42> [b3Logging.h <60:42 60:51>]
REFERENCE_TYPE_USAGE void b3SetCustomPrintfFunc(b3PrintfFunc *) -> b3PrintfFunc [b3Logging.h <60:28 60:39>]
SYMBOL_FUNCTION void b3SetCustomWarningMessageFunc(b3WarningMessageFunc *) [b3Logging.h <61:6 61:34>]
REFERENCE_TYPE_USAGE void b3SetCustomWarningMessageFunc(b3WarningMessageFunc *) -> void [b3Logging.h <61:1 61:4>]
LOCAL_SYMBOL: b3Logging.h<61:58> [b3Logging.h <61:58 61:71>]
REFERENCE_TYPE_USAGE void b3SetCustomWarningMessageFunc(b3WarningMessageFunc *) -> b3WarningMessageFunc [b3Logging.h <61:36 61:55>]
SYMBOL_FUNCTION void b3SetCustomErrorMessageFunc(b3ErrorMessageFunc *) [b3Logging.h <62:6 62:32>]
REFERENCE_TYPE_USAGE void b3SetCustomErrorMessageFunc(b3ErrorMessageFunc *) -> void [b3Logging.h <62:1 62:4>]
LOCAL_SYMBOL: b3Logging.h<62:54> [b3Logging.h <62:54 62:65>]
REFERENCE_TYPE_USAGE void b3SetCustomErrorMessageFunc(b3ErrorMessageFunc *) -> b3ErrorMessageFunc [b3Logging.h <62:34 62:51>]
SYMBOL_FUNCTION void b3SetCustomEnterProfileZoneFunc(b3EnterProfileZoneFunc *) [b3Logging.h <65:6 65:36>]
REFERENCE_TYPE_USAGE void b3SetCustomEnterProfileZoneFunc(b3EnterProfileZoneFunc *) -> void [b3Logging.h <65:1 65:4>]
LOCAL_SYMBOL: b3Logging.h<65:62> [b3Logging.h <65:62 65:70>]
REFERENCE_TYPE_USAGE void b3SetCustomEnterProfileZoneFunc(b3EnterProfileZoneFunc *) -> b3EnterProfileZoneFunc [b3Logging.h <65:38 65:59>]
SYMBOL_FUNCTION void b3SetCustomLeaveProfileZoneFunc(b3LeaveProfileZoneFunc *) [b3Logging.h <66:6 66:36>]
REFERENCE_TYPE_USAGE void b3SetCustomLeaveProfileZoneFunc(b3LeaveProfileZoneFunc *) -> void [b3Logging.h <66:1 66:4>]
LOCAL_SYMBOL: b3Logging.h<66:62> [b3Logging.h <66:62 66:70>]
REFERENCE_TYPE_USAGE void b3SetCustomLeaveProfileZoneFunc(b3LeaveProfileZoneFunc *) -> b3LeaveProfileZoneFunc [b3Logging.h <66:38 66:59>]
SYMBOL_FUNCTION void b3OutputPrintfVarArgsInternal(const char *) [b3Logging.h <69:6 69:34>]
REFERENCE_TYPE_USAGE void b3OutputPrintfVarArgsInternal(const char *) -> void [b3Logging.h <69:1 69:4>]
LOCAL_SYMBOL: b3Logging.h<69:48> [b3Logging.h <69:48 69:50>]
REFERENCE_TYPE_USAGE void b3OutputPrintfVarArgsInternal(const char *) -> char [b3Logging.h <69:42 69:45>]
SYMBOL_FUNCTION void b3OutputWarningMessageVarArgsInternal(const char *) [b3Logging.h <70:6 70:42>]
REFERENCE_TYPE_USAGE void b3OutputWarningMessageVarArgsInternal(const char *) -> void [b3Logging.h <70:1 70:4>]
LOCAL_SYMBOL: b3Logging.h<70:56> [b3Logging.h <70:56 70:58>]
REFERENCE_TYPE_USAGE void b3OutputWarningMessageVarArgsInternal(const char *) -> char [b3Logging.h <70:50 70:53>]
SYMBOL_FUNCTION void b3OutputErrorMessageVarArgsInternal(const char *) [b3Logging.h <71:6 71:40>]
REFERENCE_TYPE_USAGE void b3OutputErrorMessageVarArgsInternal(const char *) -> void [b3Logging.h <71:1 71:4>]
LOCAL_SYMBOL: b3Logging.h<71:54> [b3Logging.h <71:54 71:56>]
REFERENCE_TYPE_USAGE void b3OutputErrorMessageVarArgsInternal(const char *) -> char [b3Logging.h <71:48 71:51>]
SYMBOL_TYPEDEF b3Scalar [b3Scalar.h <263:15 263:22>]
SYMBOL_BUILTIN_TYPE float
REFERENCE_TYPE_USAGE b3Scalar -> float [b3Scalar.h <263:9 263:13>]
SYMBOL_TYPEDEF b3SimdFloat4 [b3Scalar.h <269:16 269:27>]
REFERENCE_TYPE_USAGE b3SimdFloat4 -> __m128 [b3Scalar.h <269:9 269:14>]
SYMBOL_GLOBAL_VARIABLE int b3NanMask (b3Vector3.cpp) [b3Scalar.h <276:12 276:20>]
REFERENCE_TYPE_USAGE int b3NanMask (b3Vector3.cpp) -> int [b3Scalar.h <276:8 276:10>]
SYMBOL_GLOBAL_VARIABLE int b3InfinityMask (b3Vector3.cpp) [b3Scalar.h <281:13 281:26>]
REFERENCE_TYPE_USAGE int b3InfinityMask (b3Vector3.cpp) -> int [b3Scalar.h <281:9 281:11>]
SYMBOL_FUNCTION __m128 operator+(const __m128, const __m128) [b3Scalar.h <285:1 <285:15 285:24> 288:1>]
REFERENCE_TYPE_USAGE __m128 operator+(const __m128, const __m128) -> __m128 [b3Scalar.h <285:8 285:13>]
LOCAL_SYMBOL: b3Scalar.h<285:40> [b3Scalar.h <285:40 285:40>]
REFERENCE_TYPE_USAGE __m128 operator+(const __m128, const __m128) -> __m128 [b3Scalar.h <285:33 285:38>]
LOCAL_SYMBOL: b3Scalar.h<285:56> [b3Scalar.h <285:56 285:56>]
REFERENCE_TYPE_USAGE __m128 operator+(const __m128, const __m128) -> __m128 [b3Scalar.h <285:49 285:54>]
SYMBOL_FUNCTION __m128 _mm_add_ps(__m128, __m128)
REFERENCE_CALL __m128 operator+(const __m128, const __m128) -> __m128 _mm_add_ps(__m128, __m128) [b3Scalar.h <287:12 287:21>]
SYMBOL_FUNCTION void __m128::__m128(const __m128 &)
REFERENCE_CALL __m128 operator+(const __m128, const __m128) -> void __m128::__m128(const __m128 &) [b3Scalar.h <287:23 287:23>]
LOCAL_SYMBOL: b3Scalar.h<285:40> [b3Scalar.h <287:23 287:23>]
REFERENCE_CALL __m128 operator+(const __m128, const __m128) -> void __m128::__m128(const __m128 &) [b3Scalar.h <287:26 287:26>]
LOCAL_SYMBOL: b3Scalar.h<285:56> [b3Scalar.h <287:26 287:26>]
SYMBOL_FUNCTION __m128 operator-(const __m128, const __m128) [b3Scalar.h <290:1 <290:15 290:24> 293:1>]
REFERENCE_TYPE_USAGE __m128 operator-(const __m128, const __m128) -> __m128 [b3Scalar.h <290:8 290:13>]
LOCAL_SYMBOL: b3Scalar.h<290:40> [b3Scalar.h <290:40 290:40>]
REFERENCE_TYPE_USAGE __m128 operator-(const __m128, const __m128) -> __m128 [b3Scalar.h <290:33 290:38>]
LOCAL_SYMBOL: b3Scalar.h<290:56> [b3Scalar.h <290:56 290:56>]
REFERENCE_TYPE_USAGE __m128 operator-(const __m128, const __m128) -> __m128 [b3Scalar.h <290:49 290:54>]
SYMBOL_FUNCTION __m128 _mm_sub_ps(__m128, __m128)
REFERENCE_CALL __m128 operator-(const __m128, const __m128) -> __m128 _mm_sub_ps(__m128, __m128) [b3Scalar.h <292:12 292:21>]
REFERENCE_CALL __m128 operator-(const __m128, const __m128) -> void __m128::__m128(const __m128 &) [b3Scalar.h <292:23 292:23>]
LOCAL_SYMBOL: b3Scalar.h<290:40> [b3Scalar.h <292:23 292:23>]
REFERENCE_CALL __m128 operator-(const __m128, const __m128) -> void __m128::__m128(const __m128 &) [b3Scalar.h <292:26 292:26>]
LOCAL_SYMBOL: b3Scalar.h<290:56> [b3Scalar.h <292:26 292:26>]
SYMBOL_FUNCTION __m128 operator*(const __m128, const __m128) [b3Scalar.h <295:1 <295:15 295:24> 298:1>]
REFERENCE_TYPE_USAGE __m128 operator*(const __m128, const __m128) -> __m128 [b3Scalar.h <295:8 295:13>]
LOCAL_SYMBOL: b3Scalar.h<295:40> [b3Scalar.h <295:40 295:40>]
REFERENCE_TYPE_USAGE __m128 operator*(const __m128, const __m128) -> __m128 [b3Scalar.h <295:33 295:38>]
LOCAL_SYMBOL: b3Scalar.h<295:56> [b3Scalar.h <295:56 295:56>]
REFERENCE_TYPE_USAGE __m128 operator*(const __m128, const __m128) -> __m128 [b3Scalar.h <295:49 295:54>]
SYMBOL_FUNCTION __m128 _mm_mul_ps(__m128, __m128)
REFERENCE_CALL __m128 operator*(const __m128, const __m128) -> __m128 _mm_mul_ps(__m128, __m128) [b3Scalar.h <297:12 297:21>]
REFERENCE_CALL __m128 operator*(const __m128, const __m128) -> void __m128::__m128(const __m128 &) [b3Scalar.h <297:23 297:23>]
LOCAL_SYMBOL: b3Scalar.h<295:40> [b3Scalar.h <297:23 297:23>]
REFERENCE_CALL __m128 operator*(const __m128, const __m128) -> void __m128::__m128(const __m128 &) [b3Scalar.h <297:26 297:26>]
LOCAL_SYMBOL: b3Scalar.h<295:56> [b3Scalar.h <297:26 297:26>]
SYMBOL_FUNCTION b3Scalar b3Sqrt(b3Scalar) [b3Scalar.h <361:1 <361:26 361:31> 380:1>]
REFERENCE_TYPE_USAGE b3Scalar b3Sqrt(b3Scalar) -> b3Scalar [b3Scalar.h <361:17 361:24>]
LOCAL_SYMBOL: b3Scalar.h<361:42> [b3Scalar.h <361:42 361:42>]
REFERENCE_TYPE_USAGE b3Scalar b3Sqrt(b3Scalar) -> b3Scalar [b3Scalar.h <361:33 361:40>]
SYMBOL_FUNCTION float sqrtf(float)
REFERENCE_CALL b3Scalar b3Sqrt(b3Scalar) -> float sqrtf(float) [b3Scalar.h <378:9 378:13>]
LOCAL_SYMBOL: b3Scalar.h<361:42> [b3Scalar.h <378:15 378:15>]
SYMBOL_FUNCTION b3Scalar b3Fabs(b3Scalar) [b3Scalar.h <381:1 <381:26 381:31> 381:64>]
REFERENCE_TYPE_USAGE b3Scalar b3Fabs(b3Scalar) -> b3Scalar [b3Scalar.h <381:17 381:24>]
LOCAL_SYMBOL: b3Scalar.h<381:42> [b3Scalar.h <381:42 381:42>]
REFERENCE_TYPE_USAGE b3Scalar b3Fabs(b3Scalar) -> b3Scalar [b3Scalar.h <381:33 381:40>]
SYMBOL_FUNCTION float fabsf(float)
REFERENCE_CALL b3Scalar b3Fabs(b3Scalar) -> float fabsf(float) [b3Scalar.h <381:54 381:58>]
LOCAL_SYMBOL: b3Scalar.h<381:42> [b3Scalar.h <381:60 381:60>]
SYMBOL_FUNCTION b3Scalar b3Cos(b3Scalar) [b3Scalar.h <382:1 <382:26 382:30> 382:62>]
REFERENCE_TYPE_USAGE b3Scalar b3Cos(b3Scalar) -> b3Scalar [b3Scalar.h <382:17 382:24>]
LOCAL_SYMBOL: b3Scalar.h<382:41> [b3Scalar.h <382:41 382:41>]
REFERENCE_TYPE_USAGE b3Scalar b3Cos(b3Scalar) -> b3Scalar [b3Scalar.h <382:32 382:39>]
SYMBOL_FUNCTION float cosf(float)
REFERENCE_CALL b3Scalar b3Cos(b3Scalar) -> float cosf(float) [b3Scalar.h <382:53 382:56>]
LOCAL_SYMBOL: b3Scalar.h<382:41> [b3Scalar.h <382:58 382:58>]
SYMBOL_FUNCTION b3Scalar b3Sin(b3Scalar) [b3Scalar.h <383:1 <383:26 383:30> 383:62>]
REFERENCE_TYPE_USAGE b3Scalar b3Sin(b3Scalar) -> b3Scalar [b3Scalar.h <383:17 383:24>]
LOCAL_SYMBOL: b3Scalar.h<383:41> [b3Scalar.h <383:41 383:41>]
REFERENCE_TYPE_USAGE b3Scalar b3Sin(b3Scalar) -> b3Scalar [b3Scalar.h <383:32 383:39>]
SYMBOL_FUNCTION float sinf(float)
REFERENCE_CALL b3Scalar b3Sin(b3Scalar) -> float sinf(float) [b3Scalar.h <383:53 383:56>]
LOCAL_SYMBOL: b3Scalar.h<383:41> [b3Scalar.h <383:58 383:58>]
SYMBOL_FUNCTION b3Scalar b3Tan(b3Scalar) [b3Scalar.h <384:1 <384:26 384:30> 384:62>]
REFERENCE_TYPE_USAGE b3Scalar b3Tan(b3Scalar) -> b3Scalar [b3Scalar.h <384:17 384:24>]
LOCAL_SYMBOL: b3Scalar.h<384:41> [b3Scalar.h <384:41 384:41>]
REFERENCE_TYPE_USAGE b3Scalar b3Tan(b3Scalar) -> b3Scalar [b3Scalar.h <384:32 384:39>]
SYMBOL_FUNCTION float tanf(float)
REFERENCE_CALL b3Scalar b3Tan(b3Scalar) -> float tanf(float) [b3Scalar.h <384:53 384:56>]
LOCAL_SYMBOL: b3Scalar.h<384:41> [b3Scalar.h <384:58 384:58>]
SYMBOL_FUNCTION b3Scalar b3Acos(b3Scalar) [b3Scalar.h <385:1 <385:26 385:31> 391:1>]
REFERENCE_TYPE_USAGE b3Scalar b3Acos(b3Scalar) -> b3Scalar [b3Scalar.h <385:17 385:24>]
LOCAL_SYMBOL: b3Scalar.h<385:42> [b3Scalar.h <385:42 385:42>]
REFERENCE_TYPE_USAGE b3Scalar b3Acos(b3Scalar) -> b3Scalar [b3Scalar.h <385:33 385:40>]
LOCAL_SYMBOL: b3Scalar.h<385:42> [b3Scalar.h <386:6 386:6>]
REFERENCE_TYPE_USAGE b3Scalar b3Acos(b3Scalar) -> b3Scalar [b3Scalar.h <386:8 386:15>]
LOCAL_SYMBOL: b3Scalar.h<385:42> [b3Scalar.h <387:3 387:3>]
REFERENCE_TYPE_USAGE b3Scalar b3Acos(b3Scalar) -> b3Scalar [b3Scalar.h <387:5 387:12>]
LOCAL_SYMBOL: b3Scalar.h<385:42> [b3Scalar.h <388:6 388:6>]
REFERENCE_TYPE_USAGE b3Scalar b3Acos(b3Scalar) -> b3Scalar [b3Scalar.h <388:8 388:15>]
LOCAL_SYMBOL: b3Scalar.h<385:42> [b3Scalar.h <389:3 389:3>]
REFERENCE_TYPE_USAGE b3Scalar b3Acos(b3Scalar) -> b3Scalar [b3Scalar.h <389:5 389:12>]
SYMBOL_FUNCTION float acosf(float)
REFERENCE_CALL b3Scalar b3Acos(b3Scalar) -> float acosf(float) [b3Scalar.h <390:9 390:13>]
LOCAL_SYMBOL: b3Scalar.h<385:42> [b3Scalar.h <390:15 390:15>]
SYMBOL_FUNCTION b3Scalar b3Asin(b3Scalar) [b3Scalar.h <392:1 <392:26 392:31> 398:1>]
REFERENCE_TYPE_USAGE b3Scalar b3Asin(b3Scalar) -> b3Scalar [b3Scalar.h <392:17 392:24>]
LOCAL_SYMBOL: b3Scalar.h<392:42> [b3Scalar.h <392:42 392:42>]
REFERENCE_TYPE_USAGE b3Scalar b3Asin(b3Scalar) -> b3Scalar [b3Scalar.h <392:33 392:40>]
LOCAL_SYMBOL: b3Scalar.h<392:42> [b3Scalar.h <393:6 393:6>]
REFERENCE_TYPE_USAGE b3Scalar b3Asin(b3Scalar) -> b3Scalar [b3Scalar.h <393:8 393:15>]
LOCAL_SYMBOL: b3Scalar.h<392:42> [b3Scalar.h <394:3 394:3>]
REFERENCE_TYPE_USAGE b3Scalar b3Asin(b3Scalar) -> b3Scalar [b3Scalar.h <394:5 394:12>]
LOCAL_SYMBOL: b3Scalar.h<392:42> [b3Scalar.h <395:6 395:6>]
REFERENCE_TYPE_USAGE b3Scalar b3Asin(b3Scalar) -> b3Scalar [b3Scalar.h <395:8 395:15>]
LOCAL_SYMBOL: b3Scalar.h<392:42> [b3Scalar.h <396:3 396:3>]
REFERENCE_TYPE_USAGE b3Scalar b3Asin(b3Scalar) -> b3Scalar [b3Scalar.h <396:5 396:12>]
SYMBOL_FUNCTION float asinf(float)
REFERENCE_CALL b3Scalar b3Asin(b3Scalar) -> float asinf(float) [b3Scalar.h <397:9 397:13>]
LOCAL_SYMBOL: b3Scalar.h<392:42> [b3Scalar.h <397:15 397:15>]
SYMBOL_FUNCTION b3Scalar b3Atan(b3Scalar) [b3Scalar.h <399:1 <399:26 399:31> 399:64>]
REFERENCE_TYPE_USAGE b3Scalar b3Atan(b3Scalar) -> b3Scalar [b3Scalar.h <399:17 399:24>]
LOCAL_SYMBOL: b3Scalar.h<399:42> [b3Scalar.h <399:42 399:42>]
REFERENCE_TYPE_USAGE b3Scalar b3Atan(b3Scalar) -> b3Scalar [b3Scalar.h <399:33 399:40>]
SYMBOL_FUNCTION float atanf(float)
REFERENCE_CALL b3Scalar b3Atan(b3Scalar) -> float atanf(float) [b3Scalar.h <399:54 399:58>]
LOCAL_SYMBOL: b3Scalar.h<399:42> [b3Scalar.h <399:60 399:60>]
SYMBOL_FUNCTION b3Scalar b3Atan2(b3Scalar, b3Scalar) [b3Scalar.h <400:1 <400:26 400:32> 400:81>]
REFERENCE_TYPE_USAGE b3Scalar b3Atan2(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <400:17 400:24>]
LOCAL_SYMBOL: b3Scalar.h<400:43> [b3Scalar.h <400:43 400:43>]
REFERENCE_TYPE_USAGE b3Scalar b3Atan2(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <400:34 400:41>]
LOCAL_SYMBOL: b3Scalar.h<400:55> [b3Scalar.h <400:55 400:55>]
REFERENCE_TYPE_USAGE b3Scalar b3Atan2(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <400:46 400:53>]
SYMBOL_FUNCTION float atan2f(float, float)
REFERENCE_CALL b3Scalar b3Atan2(b3Scalar, b3Scalar) -> float atan2f(float, float) [b3Scalar.h <400:67 400:72>]
LOCAL_SYMBOL: b3Scalar.h<400:43> [b3Scalar.h <400:74 400:74>]
LOCAL_SYMBOL: b3Scalar.h<400:55> [b3Scalar.h <400:77 400:77>]
SYMBOL_FUNCTION b3Scalar b3Exp(b3Scalar) [b3Scalar.h <401:1 <401:26 401:30> 401:62>]
REFERENCE_TYPE_USAGE b3Scalar b3Exp(b3Scalar) -> b3Scalar [b3Scalar.h <401:17 401:24>]
LOCAL_SYMBOL: b3Scalar.h<401:41> [b3Scalar.h <401:41 401:41>]
REFERENCE_TYPE_USAGE b3Scalar b3Exp(b3Scalar) -> b3Scalar [b3Scalar.h <401:32 401:39>]
SYMBOL_FUNCTION float expf(float)
REFERENCE_CALL b3Scalar b3Exp(b3Scalar) -> float expf(float) [b3Scalar.h <401:53 401:56>]
LOCAL_SYMBOL: b3Scalar.h<401:41> [b3Scalar.h <401:58 401:58>]
SYMBOL_FUNCTION b3Scalar b3Log(b3Scalar) [b3Scalar.h <402:1 <402:26 402:30> 402:62>]
REFERENCE_TYPE_USAGE b3Scalar b3Log(b3Scalar) -> b3Scalar [b3Scalar.h <402:17 402:24>]
LOCAL_SYMBOL: b3Scalar.h<402:41> [b3Scalar.h <402:41 402:41>]
REFERENCE_TYPE_USAGE b3Scalar b3Log(b3Scalar) -> b3Scalar [b3Scalar.h <402:32 402:39>]
SYMBOL_FUNCTION float logf(float)
REFERENCE_CALL b3Scalar b3Log(b3Scalar) -> float logf(float) [b3Scalar.h <402:53 402:56>]
LOCAL_SYMBOL: b3Scalar.h<402:41> [b3Scalar.h <402:58 402:58>]
SYMBOL_FUNCTION b3Scalar b3Pow(b3Scalar, b3Scalar) [b3Scalar.h <403:1 <403:26 403:30> 403:75>]
REFERENCE_TYPE_USAGE b3Scalar b3Pow(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <403:17 403:24>]
LOCAL_SYMBOL: b3Scalar.h<403:41> [b3Scalar.h <403:41 403:41>]
REFERENCE_TYPE_USAGE b3Scalar b3Pow(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <403:32 403:39>]
LOCAL_SYMBOL: b3Scalar.h<403:52> [b3Scalar.h <403:52 403:52>]
REFERENCE_TYPE_USAGE b3Scalar b3Pow(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <403:43 403:50>]
SYMBOL_FUNCTION float powf(float, float)
REFERENCE_CALL b3Scalar b3Pow(b3Scalar, b3Scalar) -> float powf(float, float) [b3Scalar.h <403:64 403:67>]
LOCAL_SYMBOL: b3Scalar.h<403:41> [b3Scalar.h <403:69 403:69>]
LOCAL_SYMBOL: b3Scalar.h<403:52> [b3Scalar.h <403:71 403:71>]
SYMBOL_FUNCTION b3Scalar b3Fmod(b3Scalar, b3Scalar) [b3Scalar.h <404:1 <404:26 404:31> 404:77>]
REFERENCE_TYPE_USAGE b3Scalar b3Fmod(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <404:17 404:24>]
LOCAL_SYMBOL: b3Scalar.h<404:42> [b3Scalar.h <404:42 404:42>]
REFERENCE_TYPE_USAGE b3Scalar b3Fmod(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <404:33 404:40>]
LOCAL_SYMBOL: b3Scalar.h<404:53> [b3Scalar.h <404:53 404:53>]
REFERENCE_TYPE_USAGE b3Scalar b3Fmod(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <404:44 404:51>]
SYMBOL_FUNCTION float fmodf(float, float)
REFERENCE_CALL b3Scalar b3Fmod(b3Scalar, b3Scalar) -> float fmodf(float, float) [b3Scalar.h <404:65 404:69>]
LOCAL_SYMBOL: b3Scalar.h<404:42> [b3Scalar.h <404:71 404:71>]
LOCAL_SYMBOL: b3Scalar.h<404:53> [b3Scalar.h <404:73 404:73>]
SYMBOL_FUNCTION b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) [b3Scalar.h <426:1 <426:26 426:36> 440:1>]
REFERENCE_TYPE_USAGE b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <426:17 426:24>]
LOCAL_SYMBOL: b3Scalar.h<426:47> [b3Scalar.h <426:47 426:47>]
REFERENCE_TYPE_USAGE b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <426:38 426:45>]
LOCAL_SYMBOL: b3Scalar.h<426:59> [b3Scalar.h <426:59 426:59>]
REFERENCE_TYPE_USAGE b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <426:50 426:57>]
LOCAL_SYMBOL: b3Scalar.h<428:11> [b3Scalar.h <428:11 428:17>]
REFERENCE_TYPE_USAGE b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <428:2 428:9>]
REFERENCE_TYPE_USAGE b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <428:21 428:25>]
LOCAL_SYMBOL: b3Scalar.h<429:11> [b3Scalar.h <429:11 429:17>]
REFERENCE_TYPE_USAGE b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <429:2 429:9>]
LOCAL_SYMBOL: b3Scalar.h<428:11> [b3Scalar.h <429:28 429:34>]
LOCAL_SYMBOL: b3Scalar.h<430:11> [b3Scalar.h <430:11 430:15>]
REFERENCE_TYPE_USAGE b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <430:2 430:9>]
SYMBOL_FUNCTION b3Scalar b3Fabs(b3Scalar)
REFERENCE_CALL b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) -> b3Scalar b3Fabs(b3Scalar) [b3Scalar.h <430:19 430:24>]
LOCAL_SYMBOL: b3Scalar.h<426:47> [b3Scalar.h <430:26 430:26>]
LOCAL_SYMBOL: b3Scalar.h<431:11> [b3Scalar.h <431:11 431:15>]
REFERENCE_TYPE_USAGE b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <431:2 431:9>]
LOCAL_SYMBOL: b3Scalar.h<426:59> [b3Scalar.h <432:6 432:6>]
LOCAL_SYMBOL: b3Scalar.h<433:12> [b3Scalar.h <433:12 433:12>]
REFERENCE_TYPE_USAGE b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <433:3 433:10>]
LOCAL_SYMBOL: b3Scalar.h<426:59> [b3Scalar.h <433:17 433:17>]
LOCAL_SYMBOL: b3Scalar.h<430:11> [b3Scalar.h <433:21 433:25>]
LOCAL_SYMBOL: b3Scalar.h<426:59> [b3Scalar.h <433:31 433:31>]
LOCAL_SYMBOL: b3Scalar.h<430:11> [b3Scalar.h <433:35 433:39>]
LOCAL_SYMBOL: b3Scalar.h<431:11> [b3Scalar.h <434:3 434:7>]
LOCAL_SYMBOL: b3Scalar.h<428:11> [b3Scalar.h <434:11 434:17>]
LOCAL_SYMBOL: b3Scalar.h<428:11> [b3Scalar.h <434:21 434:27>]
LOCAL_SYMBOL: b3Scalar.h<433:12> [b3Scalar.h <434:31 434:31>]
LOCAL_SYMBOL: b3Scalar.h<436:12> [b3Scalar.h <436:12 436:12>]
REFERENCE_TYPE_USAGE b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <436:3 436:10>]
LOCAL_SYMBOL: b3Scalar.h<426:59> [b3Scalar.h <436:17 436:17>]
LOCAL_SYMBOL: b3Scalar.h<430:11> [b3Scalar.h <436:21 436:25>]
LOCAL_SYMBOL: b3Scalar.h<430:11> [b3Scalar.h <436:31 436:35>]
LOCAL_SYMBOL: b3Scalar.h<426:59> [b3Scalar.h <436:39 436:39>]
LOCAL_SYMBOL: b3Scalar.h<431:11> [b3Scalar.h <437:3 437:7>]
LOCAL_SYMBOL: b3Scalar.h<429:11> [b3Scalar.h <437:11 437:17>]
LOCAL_SYMBOL: b3Scalar.h<428:11> [b3Scalar.h <437:21 437:27>]
LOCAL_SYMBOL: b3Scalar.h<436:12> [b3Scalar.h <437:31 437:31>]
LOCAL_SYMBOL: b3Scalar.h<426:47> [b3Scalar.h <439:10 439:10>]
LOCAL_SYMBOL: b3Scalar.h<431:11> [b3Scalar.h <439:23 439:27>]
LOCAL_SYMBOL: b3Scalar.h<431:11> [b3Scalar.h <439:31 439:35>]
SYMBOL_FUNCTION bool b3FuzzyZero(b3Scalar) [b3Scalar.h <442:1 <442:27 442:37> 442:84>]
SYMBOL_BUILTIN_TYPE bool
REFERENCE_TYPE_USAGE bool b3FuzzyZero(b3Scalar) -> bool [b3Scalar.h <442:17 442:20>]
LOCAL_SYMBOL: b3Scalar.h<442:48> [b3Scalar.h <442:48 442:48>]
REFERENCE_TYPE_USAGE bool b3FuzzyZero(b3Scalar) -> b3Scalar [b3Scalar.h <442:39 442:46>]
REFERENCE_CALL bool b3FuzzyZero(b3Scalar) -> b3Scalar b3Fabs(b3Scalar) [b3Scalar.h <442:60 442:65>]
LOCAL_SYMBOL: b3Scalar.h<442:48> [b3Scalar.h <442:67 442:67>]
SYMBOL_FUNCTION bool b3Equal(b3Scalar, b3Scalar) [b3Scalar.h <444:1 <444:22 444:28> 446:1>]
REFERENCE_TYPE_USAGE bool b3Equal(b3Scalar, b3Scalar) -> bool [b3Scalar.h <444:17 444:20>]
LOCAL_SYMBOL: b3Scalar.h<444:39> [b3Scalar.h <444:39 444:39>]
REFERENCE_TYPE_USAGE bool b3Equal(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <444:30 444:37>]
LOCAL_SYMBOL: b3Scalar.h<444:51> [b3Scalar.h <444:51 444:53>]
REFERENCE_TYPE_USAGE bool b3Equal(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <444:42 444:49>]
LOCAL_SYMBOL: b3Scalar.h<444:39> [b3Scalar.h <445:12 445:12>]
LOCAL_SYMBOL: b3Scalar.h<444:51> [b3Scalar.h <445:18 445:20>]
LOCAL_SYMBOL: b3Scalar.h<444:39> [b3Scalar.h <445:29 445:29>]
LOCAL_SYMBOL: b3Scalar.h<444:51> [b3Scalar.h <445:35 445:37>]
SYMBOL_FUNCTION bool b3GreaterEqual(b3Scalar, b3Scalar) [b3Scalar.h <447:1 <447:22 447:35> 449:1>]
REFERENCE_TYPE_USAGE bool b3GreaterEqual(b3Scalar, b3Scalar) -> bool [b3Scalar.h <447:17 447:20>]
LOCAL_SYMBOL: b3Scalar.h<447:47> [b3Scalar.h <447:47 447:47>]
REFERENCE_TYPE_USAGE bool b3GreaterEqual(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <447:38 447:45>]
LOCAL_SYMBOL: b3Scalar.h<447:59> [b3Scalar.h <447:59 447:61>]
REFERENCE_TYPE_USAGE bool b3GreaterEqual(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <447:50 447:57>]
LOCAL_SYMBOL: b3Scalar.h<447:47> [b3Scalar.h <448:13 448:13>]
LOCAL_SYMBOL: b3Scalar.h<447:59> [b3Scalar.h <448:19 448:21>]
SYMBOL_FUNCTION int b3IsNegative(b3Scalar) [b3Scalar.h <452:1 <452:27 452:38> 454:1>]
REFERENCE_TYPE_USAGE int b3IsNegative(b3Scalar) -> int [b3Scalar.h <452:17 452:19>]
LOCAL_SYMBOL: b3Scalar.h<452:49> [b3Scalar.h <452:49 452:49>]
REFERENCE_TYPE_USAGE int b3IsNegative(b3Scalar) -> b3Scalar [b3Scalar.h <452:40 452:47>]
LOCAL_SYMBOL: b3Scalar.h<452:49> [b3Scalar.h <453:12 453:12>]
REFERENCE_TYPE_USAGE int b3IsNegative(b3Scalar) -> b3Scalar [b3Scalar.h <453:16 453:23>]
SYMBOL_FUNCTION b3Scalar b3Radians(b3Scalar) [b3Scalar.h <456:1 <456:26 456:34> 456:78>]
REFERENCE_TYPE_USAGE b3Scalar b3Radians(b3Scalar) -> b3Scalar [b3Scalar.h <456:17 456:24>]
LOCAL_SYMBOL: b3Scalar.h<456:45> [b3Scalar.h <456:45 456:45>]
REFERENCE_TYPE_USAGE b3Scalar b3Radians(b3Scalar) -> b3Scalar [b3Scalar.h <456:36 456:43>]
LOCAL_SYMBOL: b3Scalar.h<456:45> [b3Scalar.h <456:57 456:57>]
REFERENCE_TYPE_USAGE b3Scalar b3Radians(b3Scalar) -> b3Scalar [b3Scalar.h <456:61 456:75>]
SYMBOL_FUNCTION b3Scalar b3Degrees(b3Scalar) [b3Scalar.h <457:1 <457:26 457:34> 457:78>]
REFERENCE_TYPE_USAGE b3Scalar b3Degrees(b3Scalar) -> b3Scalar [b3Scalar.h <457:17 457:24>]
LOCAL_SYMBOL: b3Scalar.h<457:45> [b3Scalar.h <457:45 457:45>]
REFERENCE_TYPE_USAGE b3Scalar b3Degrees(b3Scalar) -> b3Scalar [b3Scalar.h <457:36 457:43>]
LOCAL_SYMBOL: b3Scalar.h<457:45> [b3Scalar.h <457:57 457:57>]
REFERENCE_TYPE_USAGE b3Scalar b3Degrees(b3Scalar) -> b3Scalar [b3Scalar.h <457:61 457:75>]
SYMBOL_FUNCTION b3Scalar b3Fsel(b3Scalar, b3Scalar, b3Scalar) [b3Scalar.h <462:1 <462:26 462:31> 465:1>]
REFERENCE_TYPE_USAGE b3Scalar b3Fsel(b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <462:17 462:24>]
LOCAL_SYMBOL: b3Scalar.h<462:42> [b3Scalar.h <462:42 462:42>]
REFERENCE_TYPE_USAGE b3Scalar b3Fsel(b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <462:33 462:40>]
LOCAL_SYMBOL: b3Scalar.h<462:54> [b3Scalar.h <462:54 462:54>]
REFERENCE_TYPE_USAGE b3Scalar b3Fsel(b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <462:45 462:52>]
LOCAL_SYMBOL: b3Scalar.h<462:66> [b3Scalar.h <462:66 462:66>]
REFERENCE_TYPE_USAGE b3Scalar b3Fsel(b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <462:57 462:64>]
LOCAL_SYMBOL: b3Scalar.h<462:42> [b3Scalar.h <464:9 464:9>]
LOCAL_SYMBOL: b3Scalar.h<462:54> [b3Scalar.h <464:18 464:18>]
LOCAL_SYMBOL: b3Scalar.h<462:66> [b3Scalar.h <464:22 464:22>]
SYMBOL_FUNCTION bool b3MachineIsLittleEndian() [b3Scalar.h <470:1 <470:22 470:44> 478:1>]
REFERENCE_TYPE_USAGE bool b3MachineIsLittleEndian() -> bool [b3Scalar.h <470:17 470:20>]
LOCAL_SYMBOL: b3Scalar.h<472:13> [b3Scalar.h <472:13 472:13>]
SYMBOL_BUILTIN_TYPE long
REFERENCE_TYPE_USAGE bool b3MachineIsLittleEndian() -> long [b3Scalar.h <472:4 472:7>]
LOCAL_SYMBOL: b3Scalar.h<473:16> [b3Scalar.h <473:16 473:16>]
REFERENCE_TYPE_USAGE bool b3MachineIsLittleEndian() -> char [b3Scalar.h <473:10 473:13>]
REFERENCE_TYPE_USAGE bool b3MachineIsLittleEndian() -> char [b3Scalar.h <473:27 473:30>]
LOCAL_SYMBOL: b3Scalar.h<472:13> [b3Scalar.h <473:36 473:36>]
LOCAL_SYMBOL: b3Scalar.h<473:16> [b3Scalar.h <474:8 474:8>]
SYMBOL_FUNCTION unsigned int b3Select(unsigned int, unsigned int, unsigned int) [b3Scalar.h <484:1 <484:26 484:33> 493:1>]
SYMBOL_BUILTIN_TYPE unsigned int
REFERENCE_TYPE_USAGE unsigned int b3Select(unsigned int, unsigned int, unsigned int) -> unsigned int [b3Scalar.h <484:17 484:24>]
LOCAL_SYMBOL: b3Scalar.h<484:44> [b3Scalar.h <484:44 484:52>]
REFERENCE_TYPE_USAGE unsigned int b3Select(unsigned int, unsigned int, unsigned int) -> unsigned int [b3Scalar.h <484:35 484:42>]
LOCAL_SYMBOL: b3Scalar.h<484:64> [b3Scalar.h <484:64 484:86>]
REFERENCE_TYPE_USAGE unsigned int b3Select(unsigned int, unsigned int, unsigned int) -> unsigned int [b3Scalar.h <484:55 484:62>]
LOCAL_SYMBOL: b3Scalar.h<484:98> [b3Scalar.h <484:98 484:117>]
REFERENCE_TYPE_USAGE unsigned int b3Select(unsigned int, unsigned int, unsigned int) -> unsigned int [b3Scalar.h <484:89 484:96>]
LOCAL_SYMBOL: b3Scalar.h<490:14> [b3Scalar.h <490:14 490:19>]
REFERENCE_TYPE_USAGE unsigned int b3Select(unsigned int, unsigned int, unsigned int) -> unsigned int [b3Scalar.h <490:5 490:12>]
REFERENCE_TYPE_USAGE unsigned int b3Select(unsigned int, unsigned int, unsigned int) -> unsigned int [b3Scalar.h <490:24 490:31>]
REFERENCE_TYPE_USAGE unsigned int b3Select(unsigned int, unsigned int, unsigned int) -> int [b3Scalar.h <490:36 490:38>]
LOCAL_SYMBOL: b3Scalar.h<484:44> [b3Scalar.h <490:40 490:48>]
REFERENCE_TYPE_USAGE unsigned int b3Select(unsigned int, unsigned int, unsigned int) -> int [b3Scalar.h <490:54 490:56>]
LOCAL_SYMBOL: b3Scalar.h<484:44> [b3Scalar.h <490:58 490:66>]
LOCAL_SYMBOL: b3Scalar.h<491:14> [b3Scalar.h <491:14 491:20>]
REFERENCE_TYPE_USAGE unsigned int b3Select(unsigned int, unsigned int, unsigned int) -> unsigned int [b3Scalar.h <491:5 491:12>]
LOCAL_SYMBOL: b3Scalar.h<490:14> [b3Scalar.h <491:25 491:30>]
LOCAL_SYMBOL: b3Scalar.h<484:64> [b3Scalar.h <492:14 492:36>]
LOCAL_SYMBOL: b3Scalar.h<490:14> [b3Scalar.h <492:40 492:45>]
LOCAL_SYMBOL: b3Scalar.h<484:98> [b3Scalar.h <492:51 492:70>]
LOCAL_SYMBOL: b3Scalar.h<491:14> [b3Scalar.h <492:74 492:80>]
SYMBOL_FUNCTION int b3Select(unsigned int, int, int) [b3Scalar.h <494:1 <494:21 494:28> 499:1>]
REFERENCE_TYPE_USAGE int b3Select(unsigned int, int, int) -> int [b3Scalar.h <494:17 494:19>]
LOCAL_SYMBOL: b3Scalar.h<494:39> [b3Scalar.h <494:39 494:47>]
REFERENCE_TYPE_USAGE int b3Select(unsigned int, int, int) -> unsigned int [b3Scalar.h <494:30 494:37>]
LOCAL_SYMBOL: b3Scalar.h<494:54> [b3Scalar.h <494:54 494:76>]
REFERENCE_TYPE_USAGE int b3Select(unsigned int, int, int) -> int [b3Scalar.h <494:50 494:52>]
LOCAL_SYMBOL: b3Scalar.h<494:83> [b3Scalar.h <494:83 494:102>]
REFERENCE_TYPE_USAGE int b3Select(unsigned int, int, int) -> int [b3Scalar.h <494:79 494:81>]
LOCAL_SYMBOL: b3Scalar.h<496:14> [b3Scalar.h <496:14 496:19>]
REFERENCE_TYPE_USAGE int b3Select(unsigned int, int, int) -> unsigned int [b3Scalar.h <496:5 496:12>]
REFERENCE_TYPE_USAGE int b3Select(unsigned int, int, int) -> unsigned int [b3Scalar.h <496:24 496:31>]
REFERENCE_TYPE_USAGE int b3Select(unsigned int, int, int) -> int [b3Scalar.h <496:36 496:38>]
LOCAL_SYMBOL: b3Scalar.h<494:39> [b3Scalar.h <496:40 496:48>]
REFERENCE_TYPE_USAGE int b3Select(unsigned int, int, int) -> int [b3Scalar.h <496:54 496:56>]
LOCAL_SYMBOL: b3Scalar.h<494:39> [b3Scalar.h <496:58 496:66>]
LOCAL_SYMBOL: b3Scalar.h<497:14> [b3Scalar.h <497:14 497:20>]
REFERENCE_TYPE_USAGE int b3Select(unsigned int, int, int) -> unsigned int [b3Scalar.h <497:5 497:12>]
LOCAL_SYMBOL: b3Scalar.h<496:14> [b3Scalar.h <497:25 497:30>]
REFERENCE_TYPE_USAGE int b3Select(unsigned int, int, int) -> int [b3Scalar.h <498:24 498:26>]
LOCAL_SYMBOL: b3Scalar.h<494:54> [b3Scalar.h <498:30 498:52>]
LOCAL_SYMBOL: b3Scalar.h<496:14> [b3Scalar.h <498:56 498:61>]
LOCAL_SYMBOL: b3Scalar.h<494:83> [b3Scalar.h <498:67 498:86>]
LOCAL_SYMBOL: b3Scalar.h<497:14> [b3Scalar.h <498:90 498:96>]
SYMBOL_FUNCTION float b3Select(unsigned int, float, float) [b3Scalar.h <500:1 <500:23 500:30> 507:1>]
REFERENCE_TYPE_USAGE float b3Select(unsigned int, float, float) -> float [b3Scalar.h <500:17 500:21>]
LOCAL_SYMBOL: b3Scalar.h<500:41> [b3Scalar.h <500:41 500:49>]
REFERENCE_TYPE_USAGE float b3Select(unsigned int, float, float) -> unsigned int [b3Scalar.h <500:32 500:39>]
LOCAL_SYMBOL: b3Scalar.h<500:58> [b3Scalar.h <500:58 500:80>]
REFERENCE_TYPE_USAGE float b3Select(unsigned int, float, float) -> float [b3Scalar.h <500:52 500:56>]
LOCAL_SYMBOL: b3Scalar.h<500:89> [b3Scalar.h <500:89 500:108>]
REFERENCE_TYPE_USAGE float b3Select(unsigned int, float, float) -> float [b3Scalar.h <500:83 500:87>]
LOCAL_SYMBOL: b3Scalar.h<500:41> [b3Scalar.h <505:13 505:21>]
LOCAL_SYMBOL: b3Scalar.h<500:58> [b3Scalar.h <505:31 505:53>]
LOCAL_SYMBOL: b3Scalar.h<500:89> [b3Scalar.h <505:57 505:76>]
SYMBOL_FUNCTION void b3Swap<typename T>(T &, T &) [b3Scalar.h <509:1 <509:43 509:48> 514:1>]
REFERENCE_TYPE_USAGE void b3Swap<typename T>(T &, T &) -> void [b3Scalar.h <509:38 509:41>]
LOCAL_SYMBOL: b3Scalar.h<509:53> [b3Scalar.h <509:53 509:53>]
REFERENCE_TYPE_USAGE void b3Swap<typename T>(T &, T &) -> b3Swap<typename T>::T [b3Scalar.h <509:50 509:50>]
LOCAL_SYMBOL: b3Scalar.h<509:59> [b3Scalar.h <509:59 509:59>]
REFERENCE_TYPE_USAGE void b3Swap<typename T>(T &, T &) -> b3Swap<typename T>::T [b3Scalar.h <509:56 509:56>]
LOCAL_SYMBOL: b3Scalar.h<511:4> [b3Scalar.h <511:4 511:6>]
REFERENCE_TYPE_USAGE void b3Swap<typename T>(T &, T &) -> b3Swap<typename T>::T [b3Scalar.h <511:2 511:2>]
LOCAL_SYMBOL: b3Scalar.h<509:53> [b3Scalar.h <511:10 511:10>]
LOCAL_SYMBOL: b3Scalar.h<509:53> [b3Scalar.h <512:2 512:2>]
LOCAL_SYMBOL: b3Scalar.h<509:59> [b3Scalar.h <512:6 512:6>]
LOCAL_SYMBOL: b3Scalar.h<509:59> [b3Scalar.h <513:2 513:2>]
LOCAL_SYMBOL: b3Scalar.h<511:4> [b3Scalar.h <513:6 513:8>]
SYMBOL_TEMPLATE_PARAMETER b3Swap<typename T>::T [b3Scalar.h <509:19 509:19>]
SYMBOL_FUNCTION unsigned int b3SwapEndian(unsigned int) [b3Scalar.h <518:1 <518:26 518:37> 521:1>]
REFERENCE_TYPE_USAGE unsigned int b3SwapEndian(unsigned int) -> unsigned int [b3Scalar.h <518:17 518:24>]
LOCAL_SYMBOL: b3Scalar.h<518:48> [b3Scalar.h <518:48 518:50>]
REFERENCE_TYPE_USAGE unsigned int b3SwapEndian(unsigned int) -> unsigned int [b3Scalar.h <518:39 518:46>]
LOCAL_SYMBOL: b3Scalar.h<518:48> [b3Scalar.h <520:12 520:14>]
LOCAL_SYMBOL: b3Scalar.h<518:48> [b3Scalar.h <520:41 520:43>]
LOCAL_SYMBOL: b3Scalar.h<518:48> [b3Scalar.h <520:69 520:71>]
LOCAL_SYMBOL: b3Scalar.h<518:48> [b3Scalar.h <520:98 520:100>]
SYMBOL_FUNCTION unsigned short b3SwapEndian(unsigned short) [b3Scalar.h <523:1 <523:32 523:43> 526:1>]
SYMBOL_BUILTIN_TYPE unsigned short
REFERENCE_TYPE_USAGE unsigned short b3SwapEndian(unsigned short) -> unsigned short [b3Scalar.h <523:17 523:24>]
LOCAL_SYMBOL: b3Scalar.h<523:60> [b3Scalar.h <523:60 523:62>]
REFERENCE_TYPE_USAGE unsigned short b3SwapEndian(unsigned short) -> unsigned short [b3Scalar.h <523:45 523:52>]
REFERENCE_TYPE_USAGE unsigned short b3SwapEndian(unsigned short) -> unsigned short [b3Scalar.h <525:21 525:28>]
LOCAL_SYMBOL: b3Scalar.h<523:60> [b3Scalar.h <525:39 525:41>]
LOCAL_SYMBOL: b3Scalar.h<523:60> [b3Scalar.h <525:63 525:65>]
SYMBOL_FUNCTION unsigned int b3SwapEndian(int) [b3Scalar.h <528:1 <528:26 528:37> 531:1>]
REFERENCE_TYPE_USAGE unsigned int b3SwapEndian(int) -> unsigned int [b3Scalar.h <528:17 528:24>]
LOCAL_SYMBOL: b3Scalar.h<528:43> [b3Scalar.h <528:43 528:45>]
REFERENCE_TYPE_USAGE unsigned int b3SwapEndian(int) -> int [b3Scalar.h <528:39 528:41>]
SYMBOL_FUNCTION unsigned int b3SwapEndian(unsigned int)
REFERENCE_CALL unsigned int b3SwapEndian(int) -> unsigned int b3SwapEndian(unsigned int) [b3Scalar.h <530:9 530:20>]
REFERENCE_TYPE_USAGE unsigned int b3SwapEndian(int) -> unsigned int [b3Scalar.h <530:23 530:30>]
LOCAL_SYMBOL: b3Scalar.h<528:43> [b3Scalar.h <530:32 530:34>]
SYMBOL_FUNCTION unsigned short b3SwapEndian(short) [b3Scalar.h <533:1 <533:32 533:43> 536:1>]
REFERENCE_TYPE_USAGE unsigned short b3SwapEndian(short) -> unsigned short [b3Scalar.h <533:17 533:24>]
LOCAL_SYMBOL: b3Scalar.h<533:51> [b3Scalar.h <533:51 533:53>]
SYMBOL_BUILTIN_TYPE short
REFERENCE_TYPE_USAGE unsigned short b3SwapEndian(short) -> short [b3Scalar.h <533:45 533:49>]
SYMBOL_FUNCTION unsigned short b3SwapEndian(unsigned short)
REFERENCE_CALL unsigned short b3SwapEndian(short) -> unsigned short b3SwapEndian(unsigned short) [b3Scalar.h <535:9 535:20>]
REFERENCE_TYPE_USAGE unsigned short b3SwapEndian(short) -> unsigned short [b3Scalar.h <535:23 535:30>]
LOCAL_SYMBOL: b3Scalar.h<533:51> [b3Scalar.h <535:39 535:41>]
SYMBOL_FUNCTION unsigned int b3SwapEndianFloat(float) [b3Scalar.h <544:1 <544:31 544:47> 555:1>]
REFERENCE_TYPE_USAGE unsigned int b3SwapEndianFloat(float) -> unsigned int [b3Scalar.h <544:17 544:24>]
LOCAL_SYMBOL: b3Scalar.h<544:55> [b3Scalar.h <544:55 544:55>]
REFERENCE_TYPE_USAGE unsigned int b3SwapEndianFloat(float) -> float [b3Scalar.h <544:49 544:53>]
LOCAL_SYMBOL: b3Scalar.h<546:18> [b3Scalar.h <546:18 546:18>]
REFERENCE_TYPE_USAGE unsigned int b3SwapEndianFloat(float) -> unsigned int [b3Scalar.h <546:5 546:12>]
LOCAL_SYMBOL: b3Scalar.h<547:20> [b3Scalar.h <547:20 547:22>]
SYMBOL_BUILTIN_TYPE unsigned char
REFERENCE_TYPE_USAGE unsigned int b3SwapEndianFloat(float) -> unsigned char [b3Scalar.h <547:5 547:12>]
REFERENCE_TYPE_USAGE unsigned int b3SwapEndianFloat(float) -> unsigned char [b3Scalar.h <547:27 547:34>]
LOCAL_SYMBOL: b3Scalar.h<546:18> [b3Scalar.h <547:44 547:44>]
LOCAL_SYMBOL: b3Scalar.h<548:20> [b3Scalar.h <548:20 548:22>]
REFERENCE_TYPE_USAGE unsigned int b3SwapEndianFloat(float) -> unsigned char [b3Scalar.h <548:5 548:12>]
REFERENCE_TYPE_USAGE unsigned int b3SwapEndianFloat(float) -> unsigned char [b3Scalar.h <548:27 548:34>]
LOCAL_SYMBOL: b3Scalar.h<544:55> [b3Scalar.h <548:44 548:44>]
LOCAL_SYMBOL: b3Scalar.h<547:20> [b3Scalar.h <550:5 550:7>]
LOCAL_SYMBOL: b3Scalar.h<548:20> [b3Scalar.h <550:14 550:16>]
LOCAL_SYMBOL: b3Scalar.h<547:20> [b3Scalar.h <551:5 551:7>]
LOCAL_SYMBOL: b3Scalar.h<548:20> [b3Scalar.h <551:14 551:16>]
LOCAL_SYMBOL: b3Scalar.h<547:20> [b3Scalar.h <552:5 552:7>]
LOCAL_SYMBOL: b3Scalar.h<548:20> [b3Scalar.h <552:14 552:16>]
LOCAL_SYMBOL: b3Scalar.h<547:20> [b3Scalar.h <553:5 553:7>]
LOCAL_SYMBOL: b3Scalar.h<548:20> [b3Scalar.h <553:14 553:16>]
LOCAL_SYMBOL: b3Scalar.h<546:18> [b3Scalar.h <554:12 554:12>]
SYMBOL_FUNCTION float b3UnswapEndianFloat(unsigned int) [b3Scalar.h <558:1 <558:23 558:41> 570:1>]
REFERENCE_TYPE_USAGE float b3UnswapEndianFloat(unsigned int) -> float [b3Scalar.h <558:17 558:21>]
LOCAL_SYMBOL: b3Scalar.h<558:56> [b3Scalar.h <558:56 558:56>]
REFERENCE_TYPE_USAGE float b3UnswapEndianFloat(unsigned int) -> unsigned int [b3Scalar.h <558:43 558:50>]
LOCAL_SYMBOL: b3Scalar.h<560:11> [b3Scalar.h <560:11 560:11>]
REFERENCE_TYPE_USAGE float b3UnswapEndianFloat(unsigned int) -> float [b3Scalar.h <560:5 560:9>]
LOCAL_SYMBOL: b3Scalar.h<561:20> [b3Scalar.h <561:20 561:22>]
REFERENCE_TYPE_USAGE float b3UnswapEndianFloat(unsigned int) -> unsigned char [b3Scalar.h <561:5 561:12>]
REFERENCE_TYPE_USAGE float b3UnswapEndianFloat(unsigned int) -> unsigned char [b3Scalar.h <561:27 561:34>]
LOCAL_SYMBOL: b3Scalar.h<558:56> [b3Scalar.h <561:44 561:44>]
LOCAL_SYMBOL: b3Scalar.h<562:20> [b3Scalar.h <562:20 562:22>]
REFERENCE_TYPE_USAGE float b3UnswapEndianFloat(unsigned int) -> unsigned char [b3Scalar.h <562:5 562:12>]
REFERENCE_TYPE_USAGE float b3UnswapEndianFloat(unsigned int) -> unsigned char [b3Scalar.h <562:27 562:34>]
LOCAL_SYMBOL: b3Scalar.h<560:11> [b3Scalar.h <562:44 562:44>]
LOCAL_SYMBOL: b3Scalar.h<562:20> [b3Scalar.h <564:5 564:7>]
LOCAL_SYMBOL: b3Scalar.h<561:20> [b3Scalar.h <564:14 564:16>]
LOCAL_SYMBOL: b3Scalar.h<562:20> [b3Scalar.h <565:5 565:7>]
LOCAL_SYMBOL: b3Scalar.h<561:20> [b3Scalar.h <565:14 565:16>]
LOCAL_SYMBOL: b3Scalar.h<562:20> [b3Scalar.h <566:5 566:7>]
LOCAL_SYMBOL: b3Scalar.h<561:20> [b3Scalar.h <566:14 566:16>]
LOCAL_SYMBOL: b3Scalar.h<562:20> [b3Scalar.h <567:5 567:7>]
LOCAL_SYMBOL: b3Scalar.h<561:20> [b3Scalar.h <567:14 567:16>]
LOCAL_SYMBOL: b3Scalar.h<560:11> [b3Scalar.h <569:12 569:12>]
SYMBOL_FUNCTION void b3SwapEndianDouble(double, unsigned char *) [b3Scalar.h <574:1 <574:23 574:40> 587:1>]
REFERENCE_TYPE_USAGE void b3SwapEndianDouble(double, unsigned char *) -> void [b3Scalar.h <574:17 574:20>]
LOCAL_SYMBOL: b3Scalar.h<574:49> [b3Scalar.h <574:49 574:49>]
SYMBOL_BUILTIN_TYPE double
REFERENCE_TYPE_USAGE void b3SwapEndianDouble(double, unsigned char *) -> double [b3Scalar.h <574:42 574:47>]
LOCAL_SYMBOL: b3Scalar.h<574:67> [b3Scalar.h <574:67 574:69>]
REFERENCE_TYPE_USAGE void b3SwapEndianDouble(double, unsigned char *) -> unsigned char [b3Scalar.h <574:52 574:59>]
LOCAL_SYMBOL: b3Scalar.h<576:20> [b3Scalar.h <576:20 576:22>]
REFERENCE_TYPE_USAGE void b3SwapEndianDouble(double, unsigned char *) -> unsigned char [b3Scalar.h <576:5 576:12>]
REFERENCE_TYPE_USAGE void b3SwapEndianDouble(double, unsigned char *) -> unsigned char [b3Scalar.h <576:27 576:34>]
LOCAL_SYMBOL: b3Scalar.h<574:49> [b3Scalar.h <576:44 576:44>]
LOCAL_SYMBOL: b3Scalar.h<574:67> [b3Scalar.h <578:5 578:7>]
LOCAL_SYMBOL: b3Scalar.h<576:20> [b3Scalar.h <578:14 578:16>]
LOCAL_SYMBOL: b3Scalar.h<574:67> [b3Scalar.h <579:5 579:7>]
LOCAL_SYMBOL: b3Scalar.h<576:20> [b3Scalar.h <579:14 579:16>]
LOCAL_SYMBOL: b3Scalar.h<574:67> [b3Scalar.h <580:5 580:7>]
LOCAL_SYMBOL: b3Scalar.h<576:20> [b3Scalar.h <580:14 580:16>]
LOCAL_SYMBOL: b3Scalar.h<574:67> [b3Scalar.h <581:5 581:7>]
LOCAL_SYMBOL: b3Scalar.h<576:20> [b3Scalar.h <581:14 581:16>]
LOCAL_SYMBOL: b3Scalar.h<574:67> [b3Scalar.h <582:5 582:7>]
LOCAL_SYMBOL: b3Scalar.h<576:20> [b3Scalar.h <582:14 582:16>]
LOCAL_SYMBOL: b3Scalar.h<574:67> [b3Scalar.h <583:5 583:7>]
LOCAL_SYMBOL: b3Scalar.h<576:20> [b3Scalar.h <583:14 583:16>]
LOCAL_SYMBOL: b3Scalar.h<574:67> [b3Scalar.h <584:5 584:7>]
LOCAL_SYMBOL: b3Scalar.h<576:20> [b3Scalar.h <584:14 584:16>]
LOCAL_SYMBOL: b3Scalar.h<574:67> [b3Scalar.h <585:5 585:7>]
LOCAL_SYMBOL: b3Scalar.h<576:20> [b3Scalar.h <585:14 585:16>]
SYMBOL_FUNCTION double b3UnswapEndianDouble(const unsigned char *) [b3Scalar.h <590:1 <590:24 590:43> 605:1>]
REFERENCE_TYPE_USAGE double b3UnswapEndianDouble(const unsigned char *) -> double [b3Scalar.h <590:17 590:22>]
LOCAL_SYMBOL: b3Scalar.h<590:66> [b3Scalar.h <590:66 590:68>]
REFERENCE_TYPE_USAGE double b3UnswapEndianDouble(const unsigned char *) -> unsigned char [b3Scalar.h <590:51 590:58>]
LOCAL_SYMBOL: b3Scalar.h<592:12> [b3Scalar.h <592:12 592:12>]
REFERENCE_TYPE_USAGE double b3UnswapEndianDouble(const unsigned char *) -> double [b3Scalar.h <592:5 592:10>]
LOCAL_SYMBOL: b3Scalar.h<593:20> [b3Scalar.h <593:20 593:22>]
REFERENCE_TYPE_USAGE double b3UnswapEndianDouble(const unsigned char *) -> unsigned char [b3Scalar.h <593:5 593:12>]
REFERENCE_TYPE_USAGE double b3UnswapEndianDouble(const unsigned char *) -> unsigned char [b3Scalar.h <593:27 593:34>]
LOCAL_SYMBOL: b3Scalar.h<592:12> [b3Scalar.h <593:44 593:44>]
LOCAL_SYMBOL: b3Scalar.h<593:20> [b3Scalar.h <595:5 595:7>]
LOCAL_SYMBOL: b3Scalar.h<590:66> [b3Scalar.h <595:14 595:16>]
LOCAL_SYMBOL: b3Scalar.h<593:20> [b3Scalar.h <596:5 596:7>]
LOCAL_SYMBOL: b3Scalar.h<590:66> [b3Scalar.h <596:14 596:16>]
LOCAL_SYMBOL: b3Scalar.h<593:20> [b3Scalar.h <597:5 597:7>]
LOCAL_SYMBOL: b3Scalar.h<590:66> [b3Scalar.h <597:14 597:16>]
LOCAL_SYMBOL: b3Scalar.h<593:20> [b3Scalar.h <598:5 598:7>]
LOCAL_SYMBOL: b3Scalar.h<590:66> [b3Scalar.h <598:14 598:16>]
LOCAL_SYMBOL: b3Scalar.h<593:20> [b3Scalar.h <599:5 599:7>]
LOCAL_SYMBOL: b3Scalar.h<590:66> [b3Scalar.h <599:14 599:16>]
LOCAL_SYMBOL: b3Scalar.h<593:20> [b3Scalar.h <600:5 600:7>]
LOCAL_SYMBOL: b3Scalar.h<590:66> [b3Scalar.h <600:14 600:16>]
LOCAL_SYMBOL: b3Scalar.h<593:20> [b3Scalar.h <601:5 601:7>]
LOCAL_SYMBOL: b3Scalar.h<590:66> [b3Scalar.h <601:14 601:16>]
LOCAL_SYMBOL: b3Scalar.h<593:20> [b3Scalar.h <602:5 602:7>]
LOCAL_SYMBOL: b3Scalar.h<590:66> [b3Scalar.h <602:14 602:16>]
LOCAL_SYMBOL: b3Scalar.h<592:12> [b3Scalar.h <604:9 604:9>]
SYMBOL_FUNCTION b3Scalar b3NormalizeAngle(b3Scalar) [b3Scalar.h <608:1 <608:26 608:41> 623:1>]
REFERENCE_TYPE_USAGE b3Scalar b3NormalizeAngle(b3Scalar) -> b3Scalar [b3Scalar.h <608:17 608:24>]
LOCAL_SYMBOL: b3Scalar.h<608:52> [b3Scalar.h <608:52 608:65>]
REFERENCE_TYPE_USAGE b3Scalar b3NormalizeAngle(b3Scalar) -> b3Scalar [b3Scalar.h <608:43 608:50>]
LOCAL_SYMBOL: b3Scalar.h<608:52> [b3Scalar.h <610:2 610:15>]
SYMBOL_FUNCTION b3Scalar b3Fmod(b3Scalar, b3Scalar)
REFERENCE_CALL b3Scalar b3NormalizeAngle(b3Scalar) -> b3Scalar b3Fmod(b3Scalar, b3Scalar) [b3Scalar.h <610:19 610:24>]
LOCAL_SYMBOL: b3Scalar.h<608:52> [b3Scalar.h <610:26 610:39>]
REFERENCE_TYPE_USAGE b3Scalar b3NormalizeAngle(b3Scalar) -> b3Scalar [b3Scalar.h <610:42 610:48>]
LOCAL_SYMBOL: b3Scalar.h<608:52> [b3Scalar.h <611:5 611:18>]
REFERENCE_TYPE_USAGE b3Scalar b3NormalizeAngle(b3Scalar) -> b3Scalar [b3Scalar.h <611:23 611:27>]
LOCAL_SYMBOL: b3Scalar.h<608:52> [b3Scalar.h <613:10 613:23>]
REFERENCE_TYPE_USAGE b3Scalar b3NormalizeAngle(b3Scalar) -> b3Scalar [b3Scalar.h <613:27 613:33>]
LOCAL_SYMBOL: b3Scalar.h<608:52> [b3Scalar.h <615:10 615:23>]
REFERENCE_TYPE_USAGE b3Scalar b3NormalizeAngle(b3Scalar) -> b3Scalar [b3Scalar.h <615:27 615:31>]
LOCAL_SYMBOL: b3Scalar.h<608:52> [b3Scalar.h <617:10 617:23>]
REFERENCE_TYPE_USAGE b3Scalar b3NormalizeAngle(b3Scalar) -> b3Scalar [b3Scalar.h <617:27 617:33>]
LOCAL_SYMBOL: b3Scalar.h<608:52> [b3Scalar.h <621:10 621:23>]
SYMBOL_STRUCT b3TypedObject [b3Scalar.h <626:1 <626:8 626:20> 637:1>]
SYMBOL_METHOD public void b3TypedObject::b3TypedObject(int) [b3Scalar.h <628:2 <628:2 628:14> 631:2>]
LOCAL_SYMBOL: b3Scalar.h<628:20> [b3Scalar.h <628:20 628:29>]
REFERENCE_TYPE_USAGE void b3TypedObject::b3TypedObject(int) -> int [b3Scalar.h <628:16 628:18>]
REFERENCE_USAGE void b3TypedObject::b3TypedObject(int) -> int b3TypedObject::m_objectType [b3Scalar.h <629:4 629:15>]
LOCAL_SYMBOL: b3Scalar.h<628:20> [b3Scalar.h <629:17 629:26>]
SYMBOL_FIELD public int b3TypedObject::m_objectType [b3Scalar.h <632:6 632:17>]
REFERENCE_TYPE_USAGE int b3TypedObject::m_objectType -> int [b3Scalar.h <632:2 632:4>]
SYMBOL_METHOD public int b3TypedObject::getObjectType() const [b3Scalar.h <633:2 <633:13 633:25> 636:2>]
REFERENCE_TYPE_USAGE int b3TypedObject::getObjectType() const -> int [b3Scalar.h <633:9 633:11>]
REFERENCE_USAGE int b3TypedObject::getObjectType() const -> int b3TypedObject::m_objectType [b3Scalar.h <635:10 635:21>]
SYMBOL_FUNCTION T * b3AlignPointer<typename T>(T *, size_t) [b3Scalar.h <642:1 <642:25 642:38> 661:1>]
REFERENCE_TYPE_USAGE T * b3AlignPointer<typename T>(T *, size_t) -> b3AlignPointer<typename T>::T [b3Scalar.h <642:22 642:22>]
LOCAL_SYMBOL: b3Scalar.h<642:43> [b3Scalar.h <642:43 642:54>]
REFERENCE_TYPE_USAGE T * b3AlignPointer<typename T>(T *, size_t) -> b3AlignPointer<typename T>::T [b3Scalar.h <642:40 642:40>]
LOCAL_SYMBOL: b3Scalar.h<642:64> [b3Scalar.h <642:64 642:72>]
REFERENCE_TYPE_USAGE T * b3AlignPointer<typename T>(T *, size_t) -> size_t [b3Scalar.h <642:57 642:62>]
SYMBOL_STRUCT b3AlignPointer<typename T>::b3ConvertPointerSizeT [b3Scalar.h <645:2 <645:9 645:29> 652:2>]
SYMBOL_UNION public b3AlignPointer<typename T>::b3ConvertPointerSizeT::anonymous union (b3Scalar.h<647:3>) [b3Scalar.h <647:3 <647:3 647:7> 651:3>]
SYMBOL_FIELD public b3AlignPointer<typename T>::T * b3AlignPointer<typename T>::b3ConvertPointerSizeT::anonymous union (b3Scalar.h<647:3>)::ptr [b3Scalar.h <649:8 649:10>]
REFERENCE_TYPE_USAGE b3AlignPointer<typename T>::T * b3AlignPointer<typename T>::b3ConvertPointerSizeT::anonymous union (b3Scalar.h<647:3>)::ptr -> b3AlignPointer<typename T>::T [b3Scalar.h <649:5 649:5>]
SYMBOL_FIELD public size_t b3AlignPointer<typename T>::b3ConvertPointerSizeT::anonymous union (b3Scalar.h<647:3>)::integer [b3Scalar.h <650:12 650:18>]
REFERENCE_TYPE_USAGE size_t b3AlignPointer<typename T>::b3ConvertPointerSizeT::anonymous union (b3Scalar.h<647:3>)::integer -> size_t [b3Scalar.h <650:5 650:10>]
SYMBOL_FIELD public b3AlignPointer<typename T>::b3ConvertPointerSizeT::anonymous union (b3Scalar.h<647:3>) b3AlignPointer<typename T>::b3ConvertPointerSizeT:: [b3Scalar.h <647:3 647:7>]
REFERENCE_TYPE_USAGE b3AlignPointer<typename T>::b3ConvertPointerSizeT::anonymous union (b3Scalar.h<647:3>) b3AlignPointer<typename T>::b3ConvertPointerSizeT:: -> b3AlignPointer<typename T>::b3ConvertPointerSizeT::anonymous union (b3Scalar.h<647:3>) [b3Scalar.h <647:3 647:7>]
LOCAL_SYMBOL: b3Scalar.h<653:27> [b3Scalar.h <653:27 653:35>]
REFERENCE_TYPE_USAGE T * b3AlignPointer<typename T>(T *, size_t) -> b3AlignPointer<typename T>::b3ConvertPointerSizeT [b3Scalar.h <653:5 653:25>]
LOCAL_SYMBOL: b3Scalar.h<656:15> [b3Scalar.h <656:15 656:22>]
REFERENCE_TYPE_USAGE T * b3AlignPointer<typename T>(T *, size_t) -> size_t [b3Scalar.h <656:8 656:13>]
LOCAL_SYMBOL: b3Scalar.h<642:64> [b3Scalar.h <656:28 656:36>]
LOCAL_SYMBOL: b3Scalar.h<653:27> [b3Scalar.h <657:5 657:13>]
LOCAL_SYMBOL: b3Scalar.h<642:43> [b3Scalar.h <657:21 657:32>]
LOCAL_SYMBOL: b3Scalar.h<653:27> [b3Scalar.h <658:2 658:10>]
LOCAL_SYMBOL: b3Scalar.h<642:64> [b3Scalar.h <658:23 658:31>]
LOCAL_SYMBOL: b3Scalar.h<653:27> [b3Scalar.h <659:2 659:10>]
LOCAL_SYMBOL: b3Scalar.h<656:15> [b3Scalar.h <659:23 659:30>]
LOCAL_SYMBOL: b3Scalar.h<653:27> [b3Scalar.h <660:9 660:17>]
SYMBOL_TEMPLATE_PARAMETER b3AlignPointer<typename T>::T [b3Scalar.h <642:20 642:20>]
SYMBOL_FUNCTION const T & b3Min<class T>(const T &, const T &) [b3MinMax.h <22:1 <23:26 23:30> 26:1>]
REFERENCE_TYPE_USAGE const T & b3Min<class T>(const T &, const T &) -> b3Min<class T>::T [b3MinMax.h <23:23 23:23>]
LOCAL_SYMBOL: b3MinMax.h<23:41> [b3MinMax.h <23:41 23:41>]
REFERENCE_TYPE_USAGE const T & b3Min<class T>(const T &, const T &) -> b3Min<class T>::T [b3MinMax.h <23:38 23:38>]
LOCAL_SYMBOL: b3MinMax.h<23:53> [b3MinMax.h <23:53 23:53>]
REFERENCE_TYPE_USAGE const T & b3Min<class T>(const T &, const T &) -> b3Min<class T>::T [b3MinMax.h <23:50 23:50>]
LOCAL_SYMBOL: b3MinMax.h<23:41> [b3MinMax.h <25:10 25:10>]
LOCAL_SYMBOL: b3MinMax.h<23:53> [b3MinMax.h <25:14 25:14>]
LOCAL_SYMBOL: b3MinMax.h<23:41> [b3MinMax.h <25:18 25:18>]
LOCAL_SYMBOL: b3MinMax.h<23:53> [b3MinMax.h <25:22 25:22>]
SYMBOL_TEMPLATE_PARAMETER b3Min<class T>::T [b3MinMax.h <22:17 22:17>]
SYMBOL_FUNCTION const T & b3Max<class T>(const T &, const T &) [b3MinMax.h <28:1 <29:26 29:30> 32:1>]
REFERENCE_TYPE_USAGE const T & b3Max<class T>(const T &, const T &) -> b3Max<class T>::T [b3MinMax.h <29:23 29:23>]
LOCAL_SYMBOL: b3MinMax.h<29:41> [b3MinMax.h <29:41 29:41>]
REFERENCE_TYPE_USAGE const T & b3Max<class T>(const T &, const T &) -> b3Max<class T>::T [b3MinMax.h <29:38 29:38>]
LOCAL_SYMBOL: b3MinMax.h<29:53> [b3MinMax.h <29:53 29:53>]
REFERENCE_TYPE_USAGE const T & b3Max<class T>(const T &, const T &) -> b3Max<class T>::T [b3MinMax.h <29:50 29:50>]
LOCAL_SYMBOL: b3MinMax.h<29:41> [b3MinMax.h <31:11 31:11>]
LOCAL_SYMBOL: b3MinMax.h<29:53> [b3MinMax.h <31:15 31:15>]
LOCAL_SYMBOL: b3MinMax.h<29:41> [b3MinMax.h <31:19 31:19>]
LOCAL_SYMBOL: b3MinMax.h<29:53> [b3MinMax.h <31:23 31:23>]
SYMBOL_TEMPLATE_PARAMETER b3Max<class T>::T [b3MinMax.h <28:17 28:17>]
SYMBOL_FUNCTION const T & b3Clamped<class T>(const T &, const T &, const T &) [b3MinMax.h <34:1 <35:26 35:34> 38:1>]
REFERENCE_TYPE_USAGE const T & b3Clamped<class T>(const T &, const T &, const T &) -> b3Clamped<class T>::T [b3MinMax.h <35:23 35:23>]
LOCAL_SYMBOL: b3MinMax.h<35:45> [b3MinMax.h <35:45 35:45>]
REFERENCE_TYPE_USAGE const T & b3Clamped<class T>(const T &, const T &, const T &) -> b3Clamped<class T>::T [b3MinMax.h <35:42 35:42>]
LOCAL_SYMBOL: b3MinMax.h<35:57> [b3MinMax.h <35:57 35:58>]
REFERENCE_TYPE_USAGE const T & b3Clamped<class T>(const T &, const T &, const T &) -> b3Clamped<class T>::T [b3MinMax.h <35:54 35:54>]
LOCAL_SYMBOL: b3MinMax.h<35:70> [b3MinMax.h <35:70 35:71>]
REFERENCE_TYPE_USAGE const T & b3Clamped<class T>(const T &, const T &, const T &) -> b3Clamped<class T>::T [b3MinMax.h <35:67 35:67>]
LOCAL_SYMBOL: b3MinMax.h<35:45> [b3MinMax.h <37:9 37:9>]
LOCAL_SYMBOL: b3MinMax.h<35:57> [b3MinMax.h <37:13 37:14>]
LOCAL_SYMBOL: b3MinMax.h<35:57> [b3MinMax.h <37:18 37:19>]
LOCAL_SYMBOL: b3MinMax.h<35:70> [b3MinMax.h <37:24 37:25>]
LOCAL_SYMBOL: b3MinMax.h<35:45> [b3MinMax.h <37:29 37:29>]
LOCAL_SYMBOL: b3MinMax.h<35:70> [b3MinMax.h <37:33 37:34>]
LOCAL_SYMBOL: b3MinMax.h<35:45> [b3MinMax.h <37:38 37:38>]
SYMBOL_TEMPLATE_PARAMETER b3Clamped<class T>::T [b3MinMax.h <34:17 34:17>]
SYMBOL_FUNCTION void b3SetMin<class T>(T &, const T &) [b3MinMax.h <40:1 <41:22 41:29> 47:1>]
REFERENCE_TYPE_USAGE void b3SetMin<class T>(T &, const T &) -> void [b3MinMax.h <41:17 41:20>]
LOCAL_SYMBOL: b3MinMax.h<41:34> [b3MinMax.h <41:34 41:34>]
REFERENCE_TYPE_USAGE void b3SetMin<class T>(T &, const T &) -> b3SetMin<class T>::T [b3MinMax.h <41:31 41:31>]
LOCAL_SYMBOL: b3MinMax.h<41:46> [b3MinMax.h <41:46 41:46>]
REFERENCE_TYPE_USAGE void b3SetMin<class T>(T &, const T &) -> b3SetMin<class T>::T [b3MinMax.h <41:43 41:43>]
LOCAL_SYMBOL: b3MinMax.h<41:46> [b3MinMax.h <43:9 43:9>]
LOCAL_SYMBOL: b3MinMax.h<41:34> [b3MinMax.h <43:13 43:13>]
LOCAL_SYMBOL: b3MinMax.h<41:34> [b3MinMax.h <45:3 45:3>]
LOCAL_SYMBOL: b3MinMax.h<41:46> [b3MinMax.h <45:7 45:7>]
SYMBOL_TEMPLATE_PARAMETER b3SetMin<class T>::T [b3MinMax.h <40:17 40:17>]
SYMBOL_FUNCTION void b3SetMax<class T>(T &, const T &) [b3MinMax.h <49:1 <50:22 50:29> 56:1>]
REFERENCE_TYPE_USAGE void b3SetMax<class T>(T &, const T &) -> void [b3MinMax.h <50:17 50:20>]
LOCAL_SYMBOL: b3MinMax.h<50:34> [b3MinMax.h <50:34 50:34>]
REFERENCE_TYPE_USAGE void b3SetMax<class T>(T &, const T &) -> b3SetMax<class T>::T [b3MinMax.h <50:31 50:31>]
LOCAL_SYMBOL: b3MinMax.h<50:46> [b3MinMax.h <50:46 50:46>]
REFERENCE_TYPE_USAGE void b3SetMax<class T>(T &, const T &) -> b3SetMax<class T>::T [b3MinMax.h <50:43 50:43>]
LOCAL_SYMBOL: b3MinMax.h<50:34> [b3MinMax.h <52:9 52:9>]
LOCAL_SYMBOL: b3MinMax.h<50:46> [b3MinMax.h <52:13 52:13>]
LOCAL_SYMBOL: b3MinMax.h<50:34> [b3MinMax.h <54:3 54:3>]
LOCAL_SYMBOL: b3MinMax.h<50:46> [b3MinMax.h <54:7 54:7>]
SYMBOL_TEMPLATE_PARAMETER b3SetMax<class T>::T [b3MinMax.h <49:17 49:17>]
SYMBOL_FUNCTION void b3Clamp<class T>(T &, const T &, const T &) [b3MinMax.h <58:1 <59:22 59:28> 69:1>]
REFERENCE_TYPE_USAGE void b3Clamp<class T>(T &, const T &, const T &) -> void [b3MinMax.h <59:17 59:20>]
LOCAL_SYMBOL: b3MinMax.h<59:33> [b3MinMax.h <59:33 59:33>]
REFERENCE_TYPE_USAGE void b3Clamp<class T>(T &, const T &, const T &) -> b3Clamp<class T>::T [b3MinMax.h <59:30 59:30>]
LOCAL_SYMBOL: b3MinMax.h<59:45> [b3MinMax.h <59:45 59:46>]
REFERENCE_TYPE_USAGE void b3Clamp<class T>(T &, const T &, const T &) -> b3Clamp<class T>::T [b3MinMax.h <59:42 59:42>]
LOCAL_SYMBOL: b3MinMax.h<59:58> [b3MinMax.h <59:58 59:59>]
REFERENCE_TYPE_USAGE void b3Clamp<class T>(T &, const T &, const T &) -> b3Clamp<class T>::T [b3MinMax.h <59:55 59:55>]
LOCAL_SYMBOL: b3MinMax.h<59:33> [b3MinMax.h <61:6 61:6>]
LOCAL_SYMBOL: b3MinMax.h<59:45> [b3MinMax.h <61:10 61:11>]
LOCAL_SYMBOL: b3MinMax.h<59:33> [b3MinMax.h <63:3 63:3>]
LOCAL_SYMBOL: b3MinMax.h<59:45> [b3MinMax.h <63:7 63:8>]
LOCAL_SYMBOL: b3MinMax.h<59:58> [b3MinMax.h <65:11 65:12>]
LOCAL_SYMBOL: b3MinMax.h<59:33> [b3MinMax.h <65:16 65:16>]
LOCAL_SYMBOL: b3MinMax.h<59:33> [b3MinMax.h <67:3 67:3>]
LOCAL_SYMBOL: b3MinMax.h<59:58> [b3MinMax.h <67:7 67:8>]
SYMBOL_TEMPLATE_PARAMETER b3Clamp<class T>::T [b3MinMax.h <58:17 58:17>]
SYMBOL_FUNCTION void * b3AlignedAllocInternal(size_t, int) [b3AlignedAllocator.h <38:8 38:29>]
REFERENCE_TYPE_USAGE void * b3AlignedAllocInternal(size_t, int) -> void [b3AlignedAllocator.h <38:2 38:5>]
LOCAL_SYMBOL: b3AlignedAllocator.h<38:39> [b3AlignedAllocator.h <38:39 38:42>]
REFERENCE_TYPE_USAGE void * b3AlignedAllocInternal(size_t, int) -> size_t [b3AlignedAllocator.h <38:32 38:37>]
LOCAL_SYMBOL: b3AlignedAllocator.h<38:49> [b3AlignedAllocator.h <38:49 38:57>]
REFERENCE_TYPE_USAGE void * b3AlignedAllocInternal(size_t, int) -> int [b3AlignedAllocator.h <38:45 38:47>]
SYMBOL_FUNCTION void b3AlignedFreeInternal(void *) [b3AlignedAllocator.h <39:7 39:27>]
REFERENCE_TYPE_USAGE void b3AlignedFreeInternal(void *) -> void [b3AlignedAllocator.h <39:2 39:5>]
LOCAL_SYMBOL: b3AlignedAllocator.h<39:36> [b3AlignedAllocator.h <39:36 39:38>]
REFERENCE_TYPE_USAGE void b3AlignedFreeInternal(void *) -> void [b3AlignedAllocator.h <39:30 39:33>]
SYMBOL_TYPEDEF btSizeType [b3AlignedAllocator.h <45:13 45:22>]
REFERENCE_TYPE_USAGE btSizeType -> int [b3AlignedAllocator.h <45:9 45:11>]
SYMBOL_TYPEDEF b3AlignedAllocFunc [b3AlignedAllocator.h <47:16 47:33>]
REFERENCE_TYPE_USAGE b3AlignedAllocFunc -> void [b3AlignedAllocator.h <47:9 47:12>]
LOCAL_SYMBOL: b3AlignedAllocator.h<47:43> [b3AlignedAllocator.h <47:43 47:46>]
REFERENCE_TYPE_USAGE b3AlignedAllocFunc -> size_t [b3AlignedAllocator.h <47:36 47:41>]
LOCAL_SYMBOL: b3AlignedAllocator.h<47:53> [b3AlignedAllocator.h <47:53 47:61>]
REFERENCE_TYPE_USAGE b3AlignedAllocFunc -> int [b3AlignedAllocator.h <47:49 47:51>]
SYMBOL_TYPEDEF b3AlignedFreeFunc [b3AlignedAllocator.h <48:15 48:31>]
REFERENCE_TYPE_USAGE b3AlignedFreeFunc -> void [b3AlignedAllocator.h <48:9 48:12>]
LOCAL_SYMBOL: b3AlignedAllocator.h<48:40> [b3AlignedAllocator.h <48:40 48:47>]
REFERENCE_TYPE_USAGE b3AlignedFreeFunc -> void [b3AlignedAllocator.h <48:34 48:37>]
SYMBOL_TYPEDEF b3AllocFunc [b3AlignedAllocator.h <49:16 49:26>]
REFERENCE_TYPE_USAGE b3AllocFunc -> void [b3AlignedAllocator.h <49:9 49:12>]
LOCAL_SYMBOL: b3AlignedAllocator.h<49:36> [b3AlignedAllocator.h <49:36 49:39>]
REFERENCE_TYPE_USAGE b3AllocFunc -> size_t [b3AlignedAllocator.h <49:29 49:34>]
SYMBOL_TYPEDEF b3FreeFunc [b3AlignedAllocator.h <50:15 50:24>]
REFERENCE_TYPE_USAGE b3FreeFunc -> void [b3AlignedAllocator.h <50:9 50:12>]
LOCAL_SYMBOL: b3AlignedAllocator.h<50:33> [b3AlignedAllocator.h <50:33 50:40>]
REFERENCE_TYPE_USAGE b3FreeFunc -> void [b3AlignedAllocator.h <50:27 50:30>]
SYMBOL_FUNCTION void b3AlignedAllocSetCustom(b3AllocFunc *, b3FreeFunc *) [b3AlignedAllocator.h <53:6 53:28>]
REFERENCE_TYPE_USAGE void b3AlignedAllocSetCustom(b3AllocFunc *, b3FreeFunc *) -> void [b3AlignedAllocator.h <53:1 53:4>]
LOCAL_SYMBOL: b3AlignedAllocator.h<53:43> [b3AlignedAllocator.h <53:43 53:51>]
REFERENCE_TYPE_USAGE void b3AlignedAllocSetCustom(b3AllocFunc *, b3FreeFunc *) -> b3AllocFunc [b3AlignedAllocator.h <53:30 53:40>]
LOCAL_SYMBOL: b3AlignedAllocator.h<53:66> [b3AlignedAllocator.h <53:66 53:73>]
REFERENCE_TYPE_USAGE void b3AlignedAllocSetCustom(b3AllocFunc *, b3FreeFunc *) -> b3FreeFunc [b3AlignedAllocator.h <53:54 53:63>]
SYMBOL_FUNCTION void b3AlignedAllocSetCustomAligned(b3AlignedAllocFunc *, b3AlignedFreeFunc *) [b3AlignedAllocator.h <55:6 55:35>]
REFERENCE_TYPE_USAGE void b3AlignedAllocSetCustomAligned(b3AlignedAllocFunc *, b3AlignedFreeFunc *) -> void [b3AlignedAllocator.h <55:1 55:4>]
LOCAL_SYMBOL: b3AlignedAllocator.h<55:57> [b3AlignedAllocator.h <55:57 55:65>]
REFERENCE_TYPE_USAGE void b3AlignedAllocSetCustomAligned(b3AlignedAllocFunc *, b3AlignedFreeFunc *) -> b3AlignedAllocFunc [b3AlignedAllocator.h <55:37 55:54>]
LOCAL_SYMBOL: b3AlignedAllocator.h<55:87> [b3AlignedAllocator.h <55:87 55:94>]
REFERENCE_TYPE_USAGE void b3AlignedAllocSetCustomAligned(b3AlignedAllocFunc *, b3AlignedFreeFunc *) -> b3AlignedFreeFunc [b3AlignedAllocator.h <55:68 55:84>]
SYMBOL_CLASS b3AlignedAllocator<typename T, unsigned int Alignment> [b3AlignedAllocator.h <60:1 <61:7 61:24> 102:1>]
SYMBOL_TYPEDEF private b3AlignedAllocator<typename T, unsigned int Alignment>::self_type [b3AlignedAllocator.h <63:46 63:54>]
REFERENCE_TYPE_USAGE b3AlignedAllocator<typename T, unsigned int Alignment>::self_type -> b3AlignedAllocator<T, Alignment> [b3AlignedAllocator.h <63:10 63:27>]
REFERENCE_TEMPLATE_ARGUMENT b3AlignedAllocator<T, Alignment> -> b3AlignedAllocator<typename T, unsigned int Alignment>::T [b3AlignedAllocator.h <63:30 63:30>]
REFERENCE_TEMPLATE_ARGUMENT b3AlignedAllocator<T, Alignment> -> b3AlignedAllocator<typename T, unsigned int Alignment>::Alignment [b3AlignedAllocator.h <63:34 63:42>]
SYMBOL_METHOD public void b3AlignedAllocator<typename T, unsigned int Alignment>::b3AlignedAllocator<T, Alignment>() [b3AlignedAllocator.h <68:2 <68:2 68:19> 68:24>]
SYMBOL_METHOD public void b3AlignedAllocator<typename T, unsigned int Alignment>::b3AlignedAllocator<T, Alignment><typename Other>(const b3AlignedAllocator<Other, Alignment> &) [b3AlignedAllocator.h <73:2 <74:2 74:19> 74:73>]
REFERENCE_TYPE_USAGE void b3AlignedAllocator<typename T, unsigned int Alignment>::b3AlignedAllocator<T, Alignment><typename Other>(const b3AlignedAllocator<Other, Alignment> &) -> b3AlignedAllocator<b3AlignedAllocator<T, Alignment><typename Other>::Other, Alignment> [b3AlignedAllocator.h <74:28 74:45>]
REFERENCE_TEMPLATE_ARGUMENT b3AlignedAllocator<b3AlignedAllocator<T, Alignment><typename Other>::Other, Alignment> -> b3AlignedAllocator<typename T, unsigned int Alignment>::b3AlignedAllocator<T, Alignment><typename Other>::Other [b3AlignedAllocator.h <74:48 74:52>]
REFERENCE_TEMPLATE_ARGUMENT b3AlignedAllocator<b3AlignedAllocator<T, Alignment><typename Other>::Other, Alignment> -> b3AlignedAllocator<typename T, unsigned int Alignment>::Alignment [b3AlignedAllocator.h <74:56 74:64>]
SYMBOL_TEMPLATE_PARAMETER b3AlignedAllocator<typename T, unsigned int Alignment>::b3AlignedAllocator<T, Alignment><typename Other>::Other [b3AlignedAllocator.h <73:22 73:26>]
SYMBOL_TYPEDEF public b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer [b3AlignedAllocator.h <76:27 76:39>]
REFERENCE_TYPE_USAGE b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer -> b3AlignedAllocator<typename T, unsigned int Alignment>::T [b3AlignedAllocator.h <76:16 76:16>]
SYMBOL_TYPEDEF public b3AlignedAllocator<typename T, unsigned int Alignment>::const_reference [b3AlignedAllocator.h <77:27 77:41>]
REFERENCE_TYPE_USAGE b3AlignedAllocator<typename T, unsigned int Alignment>::const_reference -> b3AlignedAllocator<typename T, unsigned int Alignment>::T [b3AlignedAllocator.h <77:16 77:16>]
SYMBOL_TYPEDEF public b3AlignedAllocator<typename T, unsigned int Alignment>::pointer [b3AlignedAllocator.h <78:27 78:33>]
REFERENCE_TYPE_USAGE b3AlignedAllocator<typename T, unsigned int Alignment>::pointer -> b3AlignedAllocator<typename T, unsigned int Alignment>::T [b3AlignedAllocator.h <78:10 78:10>]
SYMBOL_TYPEDEF public b3AlignedAllocator<typename T, unsigned int Alignment>::reference [b3AlignedAllocator.h <79:27 79:35>]
REFERENCE_TYPE_USAGE b3AlignedAllocator<typename T, unsigned int Alignment>::reference -> b3AlignedAllocator<typename T, unsigned int Alignment>::T [b3AlignedAllocator.h <79:10 79:10>]
SYMBOL_TYPEDEF public b3AlignedAllocator<typename T, unsigned int Alignment>::value_type [b3AlignedAllocator.h <80:27 80:36>]
REFERENCE_TYPE_USAGE b3AlignedAllocator<typename T, unsigned int Alignment>::value_type -> b3AlignedAllocator<typename T, unsigned int Alignment>::T [b3AlignedAllocator.h <80:10 80:10>]
SYMBOL_METHOD public b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::address(b3AlignedAllocator<typename T, unsigned int Alignment>::reference) const [b3AlignedAllocator.h <82:2 <82:16 82:22> 82:98>]
REFERENCE_TYPE_USAGE b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::address(b3AlignedAllocator<typename T, unsigned int Alignment>::reference) const -> b3AlignedAllocator<typename T, unsigned int Alignment>::pointer [b3AlignedAllocator.h <82:2 82:8>]
LOCAL_SYMBOL: b3AlignedAllocator.h<82:45> [b3AlignedAllocator.h <82:45 82:47>]
REFERENCE_TYPE_USAGE b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::address(b3AlignedAllocator<typename T, unsigned int Alignment>::reference) const -> b3AlignedAllocator<typename T, unsigned int Alignment>::reference [b3AlignedAllocator.h <82:28 82:36>]
LOCAL_SYMBOL: b3AlignedAllocator.h<82:45> [b3AlignedAllocator.h <82:93 82:95>]
SYMBOL_METHOD public b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer b3AlignedAllocator<typename T, unsigned int Alignment>::address(b3AlignedAllocator<typename T, unsigned int Alignment>::const_reference) const [b3AlignedAllocator.h <83:2 <83:16 83:22> 83:98>]
REFERENCE_TYPE_USAGE b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer b3AlignedAllocator<typename T, unsigned int Alignment>::address(b3AlignedAllocator<typename T, unsigned int Alignment>::const_reference) const -> b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer [b3AlignedAllocator.h <83:2 83:14>]
LOCAL_SYMBOL: b3AlignedAllocator.h<83:45> [b3AlignedAllocator.h <83:45 83:47>]
REFERENCE_TYPE_USAGE b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer b3AlignedAllocator<typename T, unsigned int Alignment>::address(b3AlignedAllocator<typename T, unsigned int Alignment>::const_reference) const -> b3AlignedAllocator<typename T, unsigned int Alignment>::const_reference [b3AlignedAllocator.h <83:28 83:42>]
LOCAL_SYMBOL: b3AlignedAllocator.h<83:45> [b3AlignedAllocator.h <83:93 83:95>]
SYMBOL_METHOD public b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::allocate(btSizeType, b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer *) [b3AlignedAllocator.h <84:2 <84:16 84:23> 87:2>]
REFERENCE_TYPE_USAGE b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::allocate(btSizeType, b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer *) -> b3AlignedAllocator<typename T, unsigned int Alignment>::pointer [b3AlignedAllocator.h <84:2 84:8>]
LOCAL_SYMBOL: b3AlignedAllocator.h<84:46> [b3AlignedAllocator.h <84:46 84:46>]
REFERENCE_TYPE_USAGE b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::allocate(btSizeType, b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer *) -> btSizeType [b3AlignedAllocator.h <84:28 84:37>]
LOCAL_SYMBOL: b3AlignedAllocator.h<84:73> [b3AlignedAllocator.h <84:73 84:76>]
REFERENCE_TYPE_USAGE b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::allocate(btSizeType, b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer *) -> b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer [b3AlignedAllocator.h <84:52 84:64>]
REFERENCE_TYPE_USAGE b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::allocate(btSizeType, b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer *) -> void [b3AlignedAllocator.h <85:4 85:7>]
LOCAL_SYMBOL: b3AlignedAllocator.h<84:73> [b3AlignedAllocator.h <85:9 85:12>]
REFERENCE_TYPE_USAGE b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::allocate(btSizeType, b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer *) -> b3AlignedAllocator<typename T, unsigned int Alignment>::pointer [b3AlignedAllocator.h <86:28 86:34>]
SYMBOL_FUNCTION void * b3AlignedAllocInternal(size_t, int)
REFERENCE_CALL b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::allocate(btSizeType, b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer *) -> void * b3AlignedAllocInternal(size_t, int) [b3AlignedAllocator.h <86:38 86:51>]
REFERENCE_TYPE_USAGE b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::allocate(btSizeType, b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer *) -> b3AlignedAllocator<typename T, unsigned int Alignment>::value_type [b3AlignedAllocator.h <86:61 86:70>]
LOCAL_SYMBOL: b3AlignedAllocator.h<84:46> [b3AlignedAllocator.h <86:75 86:75>]
REFERENCE_USAGE b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::allocate(btSizeType, b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer *) -> b3AlignedAllocator<typename T, unsigned int Alignment>::Alignment [b3AlignedAllocator.h <86:79 86:87>]
SYMBOL_METHOD public void b3AlignedAllocator<typename T, unsigned int Alignment>::construct(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer, const b3AlignedAllocator<typename T, unsigned int Alignment>::value_type &) [b3AlignedAllocator.h <88:2 <88:16 88:24> 88:116>]
REFERENCE_TYPE_USAGE void b3AlignedAllocator<typename T, unsigned int Alignment>::construct(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer, const b3AlignedAllocator<typename T, unsigned int Alignment>::value_type &) -> void [b3AlignedAllocator.h <88:2 88:5>]
LOCAL_SYMBOL: b3AlignedAllocator.h<88:45> [b3AlignedAllocator.h <88:45 88:47>]
REFERENCE_TYPE_USAGE void b3AlignedAllocator<typename T, unsigned int Alignment>::construct(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer, const b3AlignedAllocator<typename T, unsigned int Alignment>::value_type &) -> b3AlignedAllocator<typename T, unsigned int Alignment>::pointer [b3AlignedAllocator.h <88:28 88:34>]
LOCAL_SYMBOL: b3AlignedAllocator.h<88:72> [b3AlignedAllocator.h <88:72 88:76>]
REFERENCE_TYPE_USAGE void b3AlignedAllocator<typename T, unsigned int Alignment>::construct(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer, const b3AlignedAllocator<typename T, unsigned int Alignment>::value_type &) -> b3AlignedAllocator<typename T, unsigned int Alignment>::value_type [b3AlignedAllocator.h <88:57 88:66>]
REFERENCE_TYPE_USAGE void b3AlignedAllocator<typename T, unsigned int Alignment>::construct(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer, const b3AlignedAllocator<typename T, unsigned int Alignment>::value_type &) -> b3AlignedAllocator<typename T, unsigned int Alignment>::value_type [b3AlignedAllocator.h <88:95 88:104>]
LOCAL_SYMBOL: b3AlignedAllocator.h<88:72> [b3AlignedAllocator.h <88:107 88:111>]
LOCAL_SYMBOL: b3AlignedAllocator.h<88:45> [b3AlignedAllocator.h <88:90 88:92>]
SYMBOL_METHOD public void b3AlignedAllocator<typename T, unsigned int Alignment>::deallocate(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer) [b3AlignedAllocator.h <89:2 <89:16 89:25> 91:2>]
REFERENCE_TYPE_USAGE void b3AlignedAllocator<typename T, unsigned int Alignment>::deallocate(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer) -> void [b3AlignedAllocator.h <89:2 89:5>]
LOCAL_SYMBOL: b3AlignedAllocator.h<89:45> [b3AlignedAllocator.h <89:45 89:47>]
REFERENCE_TYPE_USAGE void b3AlignedAllocator<typename T, unsigned int Alignment>::deallocate(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer) -> b3AlignedAllocator<typename T, unsigned int Alignment>::pointer [b3AlignedAllocator.h <89:28 89:34>]
SYMBOL_FUNCTION void b3AlignedFreeInternal(void *)
REFERENCE_CALL void b3AlignedAllocator<typename T, unsigned int Alignment>::deallocate(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer) -> void b3AlignedFreeInternal(void *) [b3AlignedAllocator.h <90:3 90:15>]
REFERENCE_TYPE_USAGE void b3AlignedAllocator<typename T, unsigned int Alignment>::deallocate(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer) -> void [b3AlignedAllocator.h <90:36 90:39>]
LOCAL_SYMBOL: b3AlignedAllocator.h<89:45> [b3AlignedAllocator.h <90:46 90:48>]
SYMBOL_METHOD public void b3AlignedAllocator<typename T, unsigned int Alignment>::destroy(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer) [b3AlignedAllocator.h <92:2 <92:16 92:22> 92:105>]
REFERENCE_TYPE_USAGE void b3AlignedAllocator<typename T, unsigned int Alignment>::destroy(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer) -> void [b3AlignedAllocator.h <92:2 92:5>]
LOCAL_SYMBOL: b3AlignedAllocator.h<92:45> [b3AlignedAllocator.h <92:45 92:47>]
REFERENCE_TYPE_USAGE void b3AlignedAllocator<typename T, unsigned int Alignment>::destroy(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer) -> b3AlignedAllocator<typename T, unsigned int Alignment>::pointer [b3AlignedAllocator.h <92:28 92:34>]
REFERENCE_TYPE_USAGE void b3AlignedAllocator<typename T, unsigned int Alignment>::destroy(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer) -> b3AlignedAllocator<typename T, unsigned int Alignment>::value_type [b3AlignedAllocator.h <92:91 92:100>]
LOCAL_SYMBOL: b3AlignedAllocator.h<92:45> [b3AlignedAllocator.h <92:85 92:87>]
SYMBOL_STRUCT b3AlignedAllocator<typename T, unsigned int Alignment>::rebind<typename O> [b3AlignedAllocator.h <95:2 <95:33 95:38> 97:2>]
SYMBOL_TYPEDEF public b3AlignedAllocator<typename T, unsigned int Alignment>::rebind<typename O>::other [b3AlignedAllocator.h <96:47 96:51>]
REFERENCE_TYPE_USAGE b3AlignedAllocator<typename T, unsigned int Alignment>::rebind<typename O>::other -> b3AlignedAllocator<rebind<typename O>::O, Alignment> [b3AlignedAllocator.h <96:11 96:28>]
REFERENCE_TEMPLATE_ARGUMENT b3AlignedAllocator<rebind<typename O>::O, Alignment> -> b3AlignedAllocator<typename T, unsigned int Alignment>::rebind<typename O>::O [b3AlignedAllocator.h <96:31 96:31>]
REFERENCE_TEMPLATE_ARGUMENT b3AlignedAllocator<rebind<typename O>::O, Alignment> -> b3AlignedAllocator<typename T, unsigned int Alignment>::Alignment [b3AlignedAllocator.h <96:35 96:43>]
SYMBOL_TEMPLATE_PARAMETER b3AlignedAllocator<typename T, unsigned int Alignment>::rebind<typename O>::O [b3AlignedAllocator.h <95:22 95:22>]
SYMBOL_METHOD public b3AlignedAllocator<typename T, unsigned int Alignment>::self_type & b3AlignedAllocator<typename T, unsigned int Alignment>::operator=<typename O>(const b3AlignedAllocator<O, Alignment> &) [b3AlignedAllocator.h <98:2 <99:14 99:22> 99:87>]
REFERENCE_TYPE_USAGE b3AlignedAllocator<typename T, unsigned int Alignment>::self_type & b3AlignedAllocator<typename T, unsigned int Alignment>::operator=<typename O>(const b3AlignedAllocator<O, Alignment> &) -> b3AlignedAllocator<typename T, unsigned int Alignment>::self_type [b3AlignedAllocator.h <99:2 99:10>]
REFERENCE_TYPE_USAGE b3AlignedAllocator<typename T, unsigned int Alignment>::self_type & b3AlignedAllocator<typename T, unsigned int Alignment>::operator=<typename O>(const b3AlignedAllocator<O, Alignment> &) -> b3AlignedAllocator<operator=<typename O>::O, Alignment> [b3AlignedAllocator.h <99:31 99:48>]
REFERENCE_TEMPLATE_ARGUMENT b3AlignedAllocator<operator=<typename O>::O, Alignment> -> b3AlignedAllocator<typename T, unsigned int Alignment>::operator=<typename O>::O [b3AlignedAllocator.h <99:51 99:51>]
REFERENCE_TEMPLATE_ARGUMENT b3AlignedAllocator<operator=<typename O>::O, Alignment> -> b3AlignedAllocator<typename T, unsigned int Alignment>::Alignment [b3AlignedAllocator.h <99:55 99:63>]
SYMBOL_TEMPLATE_PARAMETER b3AlignedAllocator<typename T, unsigned int Alignment>::operator=<typename O>::O [b3AlignedAllocator.h <98:22 98:22>]
SYMBOL_FUNCTION public bool operator==(const b3AlignedAllocator<typename T, unsigned int Alignment>::self_type &, const b3AlignedAllocator<typename T, unsigned int Alignment>::self_type &) [b3AlignedAllocator.h <101:2 <101:14 101:23> 101:81>]
REFERENCE_TYPE_USAGE bool operator==(const b3AlignedAllocator<typename T, unsigned int Alignment>::self_type &, const b3AlignedAllocator<typename T, unsigned int Alignment>::self_type &) -> bool [b3AlignedAllocator.h <101:9 101:12>]
REFERENCE_TYPE_USAGE bool operator==(const b3AlignedAllocator<typename T, unsigned int Alignment>::self_type &, const b3AlignedAllocator<typename T, unsigned int Alignment>::self_type &) -> b3AlignedAllocator<typename T, unsigned int Alignment>::self_type [b3AlignedAllocator.h <101:32 101:40>]
REFERENCE_TYPE_USAGE bool operator==(const b3AlignedAllocator<typename T, unsigned int Alignment>::self_type &, const b3AlignedAllocator<typename T, unsigned int Alignment>::self_type &) -> b3AlignedAllocator<typename T, unsigned int Alignment>::self_type [b3AlignedAllocator.h <101:52 101:60>]
SYMBOL_TEMPLATE_PARAMETER b3AlignedAllocator<typename T, unsigned int Alignment>::T [b3AlignedAllocator.h <60:21 60:21>]
SYMBOL_TEMPLATE_PARAMETER b3AlignedAllocator<typename T, unsigned int Alignment>::Alignment [b3AlignedAllocator.h <60:34 60:42>]
REFERENCE_TYPE_USAGE b3AlignedAllocator<typename T, unsigned int Alignment>::Alignment -> unsigned int [b3AlignedAllocator.h <60:25 60:32>]
SYMBOL_GLOBAL_VARIABLE const __m128 b3vMzeroMask [b3Vector3.h <58:37 58:48>]
REFERENCE_TYPE_USAGE const __m128 b3vMzeroMask -> __m128 [b3Vector3.h <58:7 58:12>]
SYMBOL_GLOBAL_VARIABLE const __m128 b3v1110 [b3Vector3.h <59:37 59:43>]
REFERENCE_TYPE_USAGE const __m128 b3v1110 -> __m128 [b3Vector3.h <59:7 59:12>]
SYMBOL_GLOBAL_VARIABLE const __m128 b3vHalf [b3Vector3.h <60:37 60:43>]
REFERENCE_TYPE_USAGE const __m128 b3vHalf -> __m128 [b3Vector3.h <60:7 60:12>]
SYMBOL_GLOBAL_VARIABLE const __m128 b3v1_5 [b3Vector3.h <61:37 61:42>]
REFERENCE_TYPE_USAGE const __m128 b3v1_5 -> __m128 [b3Vector3.h <61:7 61:12>]
SYMBOL_CLASS b3Vector3 [b3Vector3.h <74:7 74:15>]
SYMBOL_CLASS b3Vector4 [b3Vector3.h <75:7 75:15>]
SYMBOL_FUNCTION b3Vector3 b3MakeVector3(b3SimdFloat4) [b3Vector3.h <79:18 79:30>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3SimdFloat4) -> b3Vector3 [b3Vector3.h <79:8 79:16>]
LOCAL_SYMBOL: b3Vector3.h<79:46> [b3Vector3.h <79:46 79:46>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3SimdFloat4) -> b3SimdFloat4 [b3Vector3.h <79:33 79:44>]
SYMBOL_FUNCTION b3Vector4 b3MakeVector4(b3SimdFloat4) [b3Vector3.h <80:18 80:30>]
REFERENCE_TYPE_USAGE b3Vector4 b3MakeVector4(b3SimdFloat4) -> b3Vector4 [b3Vector3.h <80:8 80:16>]
LOCAL_SYMBOL: b3Vector3.h<80:46> [b3Vector3.h <80:46 80:48>]
REFERENCE_TYPE_USAGE b3Vector4 b3MakeVector4(b3SimdFloat4) -> b3SimdFloat4 [b3Vector3.h <80:33 80:44>]
SYMBOL_FUNCTION b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) [b3Vector3.h <83:18 83:30>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> b3Vector3 [b3Vector3.h <83:8 83:16>]
LOCAL_SYMBOL: b3Vector3.h<83:41> [b3Vector3.h <83:41 83:41>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <83:32 83:39>]
LOCAL_SYMBOL: b3Vector3.h<83:52> [b3Vector3.h <83:52 83:52>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <83:43 83:50>]
LOCAL_SYMBOL: b3Vector3.h<83:63> [b3Vector3.h <83:63 83:63>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <83:54 83:61>]
SYMBOL_FUNCTION b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) [b3Vector3.h <84:18 84:30>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Vector3 [b3Vector3.h <84:8 84:16>]
LOCAL_SYMBOL: b3Vector3.h<84:41> [b3Vector3.h <84:41 84:41>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <84:32 84:39>]
LOCAL_SYMBOL: b3Vector3.h<84:52> [b3Vector3.h <84:52 84:52>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <84:43 84:50>]
LOCAL_SYMBOL: b3Vector3.h<84:63> [b3Vector3.h <84:63 84:63>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <84:54 84:61>]
LOCAL_SYMBOL: b3Vector3.h<84:75> [b3Vector3.h <84:75 84:75>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <84:66 84:73>]
SYMBOL_FUNCTION b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) [b3Vector3.h <85:18 85:30>]
REFERENCE_TYPE_USAGE b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Vector4 [b3Vector3.h <85:8 85:16>]
LOCAL_SYMBOL: b3Vector3.h<85:41> [b3Vector3.h <85:41 85:41>]
REFERENCE_TYPE_USAGE b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <85:32 85:39>]
LOCAL_SYMBOL: b3Vector3.h<85:52> [b3Vector3.h <85:52 85:52>]
REFERENCE_TYPE_USAGE b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <85:43 85:50>]
LOCAL_SYMBOL: b3Vector3.h<85:63> [b3Vector3.h <85:63 85:63>]
REFERENCE_TYPE_USAGE b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <85:54 85:61>]
LOCAL_SYMBOL: b3Vector3.h<85:74> [b3Vector3.h <85:74 85:74>]
REFERENCE_TYPE_USAGE b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <85:65 85:72>]
SYMBOL_CLASS b3Vector3 [b3Vector3.h <92:1 <92:31 92:39> 709:1>]
SYMBOL_UNION public b3Vector3::anonymous union (b3Vector3.h<96:9>) [b3Vector3.h <96:9 <96:9 96:13> 101:9>]
SYMBOL_FIELD public b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <97:31 97:37>]
REFERENCE_TYPE_USAGE b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 -> b3SimdFloat4 [b3Vector3.h <97:13 97:24>]
SYMBOL_FIELD public float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <98:19 98:26>]
REFERENCE_TYPE_USAGE float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats -> float [b3Vector3.h <98:13 98:17>]
SYMBOL_STRUCT public b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>) [b3Vector3.h <99:4 <99:4 99:9> 99:26>]
SYMBOL_FIELD public float b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::x [b3Vector3.h <99:18 99:18>]
REFERENCE_TYPE_USAGE float b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::x -> float [b3Vector3.h <99:12 99:16>]
SYMBOL_FIELD public float b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::y [b3Vector3.h <99:20 99:20>]
REFERENCE_TYPE_USAGE float b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::y -> float [b3Vector3.h <99:12 99:16>]
SYMBOL_FIELD public float b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::z [b3Vector3.h <99:22 99:22>]
REFERENCE_TYPE_USAGE float b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::z -> float [b3Vector3.h <99:12 99:16>]
SYMBOL_FIELD public float b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::w [b3Vector3.h <99:24 99:24>]
REFERENCE_TYPE_USAGE float b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::w -> float [b3Vector3.h <99:12 99:16>]
SYMBOL_METHOD public void b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::() [b3Vector3.h <99:4 99:9>]
SYMBOL_METHOD public void b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::~() [b3Vector3.h <99:4 99:9>]
SYMBOL_METHOD public void b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::(const b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>) &) [b3Vector3.h <99:4 99:9>]
SYMBOL_METHOD public void b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::(b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>) &&) [b3Vector3.h <99:4 99:9>]
SYMBOL_METHOD public b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>) & b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::operator=(const b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>) &) [b3Vector3.h <99:4 99:9>]
SYMBOL_METHOD public b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>) & b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::operator=(b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>) &&) [b3Vector3.h <99:4 99:9>]
SYMBOL_FIELD public b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>) b3Vector3::anonymous union (b3Vector3.h<96:9>):: [b3Vector3.h <99:4 99:9>]
REFERENCE_TYPE_USAGE b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>) b3Vector3::anonymous union (b3Vector3.h<96:9>):: -> b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>) [b3Vector3.h <99:4 99:9>]
SYMBOL_METHOD public void b3Vector3::anonymous union (b3Vector3.h<96:9>)::(const b3Vector3::anonymous union (b3Vector3.h<96:9>) &) [b3Vector3.h <96:9 <96:9 96:13> 96:13>]
SYMBOL_METHOD public void b3Vector3::anonymous union (b3Vector3.h<96:9>)::(b3Vector3::anonymous union (b3Vector3.h<96:9>) &&) [b3Vector3.h <96:9 <96:9 96:13> 96:13>]
SYMBOL_METHOD public void b3Vector3::anonymous union (b3Vector3.h<96:9>)::~() [b3Vector3.h <96:9 96:13>]
SYMBOL_METHOD public void b3Vector3::anonymous union (b3Vector3.h<96:9>)::() [b3Vector3.h <96:9 96:13>]
SYMBOL_METHOD public b3Vector3::anonymous union (b3Vector3.h<96:9>) & b3Vector3::anonymous union (b3Vector3.h<96:9>)::operator=(const b3Vector3::anonymous union (b3Vector3.h<96:9>) &) [b3Vector3.h <96:9 <96:9 96:13> 96:13>]
SYMBOL_METHOD public b3Vector3::anonymous union (b3Vector3.h<96:9>) & b3Vector3::anonymous union (b3Vector3.h<96:9>)::operator=(b3Vector3::anonymous union (b3Vector3.h<96:9>) &&) [b3Vector3.h <96:9 96:13>]
SYMBOL_FIELD public b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <96:9 96:13>]
REFERENCE_TYPE_USAGE b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: -> b3Vector3::anonymous union (b3Vector3.h<96:9>) [b3Vector3.h <96:9 96:13>]
SYMBOL_METHOD public static void * b3Vector3::operator new(size_t) [b3Vector3.h <113:2 <113:2 113:29> 113:29>]
REFERENCE_TYPE_USAGE static void * b3Vector3::operator new(size_t) -> void [b3Vector3.h <113:2 113:29>]
LOCAL_SYMBOL: b3Vector3.h<113:2> [b3Vector3.h <113:2 113:29>]
REFERENCE_TYPE_USAGE static void * b3Vector3::operator new(size_t) -> size_t [b3Vector3.h <113:2 113:29>]
REFERENCE_CALL static void * b3Vector3::operator new(size_t) -> void * b3AlignedAllocInternal(size_t, int) [b3Vector3.h <113:2 113:29>]
LOCAL_SYMBOL: b3Vector3.h<113:2> [b3Scalar.h <332:85 332:95>]
SYMBOL_METHOD public static void b3Vector3::operator delete(void *) [b3Vector3.h <113:2 <113:2 113:29> 113:29>]
REFERENCE_TYPE_USAGE static void b3Vector3::operator delete(void *) -> void [b3Vector3.h <113:2 113:29>]
REFERENCE_CALL static void b3Vector3::operator delete(void *) -> void b3AlignedFreeInternal(void *) [b3Vector3.h <113:2 113:29>]
LOCAL_SYMBOL: b3Vector3.h<113:2> [b3Scalar.h <333:77 333:79>]
SYMBOL_METHOD public static void * b3Vector3::operator new(size_t, void *) [b3Vector3.h <113:2 <113:2 113:29> 113:29>]
REFERENCE_TYPE_USAGE static void * b3Vector3::operator new(size_t, void *) -> void [b3Vector3.h <113:2 113:29>]
REFERENCE_TYPE_USAGE static void * b3Vector3::operator new(size_t, void *) -> size_t [b3Vector3.h <113:2 113:29>]
SYMBOL_METHOD public static void b3Vector3::operator delete(void *, void *) [b3Vector3.h <113:2 <113:2 113:29> 113:29>]
REFERENCE_TYPE_USAGE static void b3Vector3::operator delete(void *, void *) -> void [b3Vector3.h <113:2 113:29>]
SYMBOL_METHOD public static void * b3Vector3::operator new[](size_t) [b3Vector3.h <113:2 <113:2 113:29> 113:29>]
REFERENCE_TYPE_USAGE static void * b3Vector3::operator new[](size_t) -> void [b3Vector3.h <113:2 113:29>]
REFERENCE_TYPE_USAGE static void * b3Vector3::operator new[](size_t) -> size_t [b3Vector3.h <113:2 113:29>]
REFERENCE_CALL static void * b3Vector3::operator new[](size_t) -> void * b3AlignedAllocInternal(size_t, int) [b3Vector3.h <113:2 113:29>]
LOCAL_SYMBOL: b3Vector3.h<113:2> [b3Scalar.h <336:87 336:97>]
SYMBOL_METHOD public static void b3Vector3::operator delete[](void *) [b3Vector3.h <113:2 <113:2 113:29> 113:29>]
REFERENCE_TYPE_USAGE static void b3Vector3::operator delete[](void *) -> void [b3Vector3.h <113:2 113:29>]
REFERENCE_CALL static void b3Vector3::operator delete[](void *) -> void b3AlignedFreeInternal(void *) [b3Vector3.h <113:2 113:29>]
LOCAL_SYMBOL: b3Vector3.h<113:2> [b3Scalar.h <337:79 337:81>]
SYMBOL_METHOD public static void * b3Vector3::operator new[](size_t, void *) [b3Vector3.h <113:2 <113:2 113:29> 113:29>]
REFERENCE_TYPE_USAGE static void * b3Vector3::operator new[](size_t, void *) -> void [b3Vector3.h <113:2 113:29>]
REFERENCE_TYPE_USAGE static void * b3Vector3::operator new[](size_t, void *) -> size_t [b3Vector3.h <113:2 113:29>]
SYMBOL_METHOD public static void b3Vector3::operator delete[](void *, void *) [b3Vector3.h <113:2 <113:2 113:29> 113:29>]
REFERENCE_TYPE_USAGE static void b3Vector3::operator delete[](void *, void *) -> void [b3Vector3.h <113:2 113:29>]
SYMBOL_METHOD public b3SimdFloat4 b3Vector3::get128() const [b3Vector3.h <122:5 <122:34 122:39> 125:5>]
REFERENCE_TYPE_USAGE b3SimdFloat4 b3Vector3::get128() const -> b3SimdFloat4 [b3Vector3.h <122:21 122:32>]
REFERENCE_CALL b3SimdFloat4 b3Vector3::get128() const -> void __m128::__m128(const __m128 &) [b3Vector3.h <124:16 124:22>]
REFERENCE_USAGE b3SimdFloat4 b3Vector3::get128() const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <124:16 124:22>]
REFERENCE_USAGE b3SimdFloat4 b3Vector3::get128() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <124:16 124:22>]
SYMBOL_METHOD public void b3Vector3::set128(b3SimdFloat4) [b3Vector3.h <126:5 <126:26 126:31> 129:5>]
REFERENCE_TYPE_USAGE void b3Vector3::set128(b3SimdFloat4) -> void [b3Vector3.h <126:21 126:24>]
LOCAL_SYMBOL: b3Vector3.h<126:46> [b3Vector3.h <126:46 126:49>]
REFERENCE_TYPE_USAGE void b3Vector3::set128(b3SimdFloat4) -> b3SimdFloat4 [b3Vector3.h <126:33 126:44>]
SYMBOL_FUNCTION __m128 & __m128::operator=(const __m128 &)
REFERENCE_CALL void b3Vector3::set128(b3SimdFloat4) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.h <128:17 128:17>]
REFERENCE_USAGE void b3Vector3::set128(b3SimdFloat4) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <128:9 128:15>]
REFERENCE_USAGE void b3Vector3::set128(b3SimdFloat4) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <128:9 128:15>]
LOCAL_SYMBOL: b3Vector3.h<126:46> [b3Vector3.h <128:19 128:22>]
SYMBOL_METHOD public b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) [b3Vector3.h <138:2 <138:29 138:38> 150:2>]
REFERENCE_TYPE_USAGE b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> b3Vector3 [b3Vector3.h <138:18 138:26>]
LOCAL_SYMBOL: b3Vector3.h<138:57> [b3Vector3.h <138:57 138:57>]
REFERENCE_TYPE_USAGE b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> b3Vector3 [b3Vector3.h <138:46 138:54>]
SYMBOL_FUNCTION __m128 & __m128::operator=(__m128 &&)
REFERENCE_CALL b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <141:11 141:11>]
REFERENCE_USAGE b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <141:3 141:9>]
REFERENCE_USAGE b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <141:3 141:9>]
REFERENCE_CALL b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> __m128 _mm_add_ps(__m128, __m128) [b3Vector3.h <141:13 141:22>]
REFERENCE_CALL b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <141:24 141:30>]
REFERENCE_USAGE b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <141:24 141:30>]
REFERENCE_USAGE b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <141:24 141:30>]
REFERENCE_CALL b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <141:35 141:41>]
REFERENCE_USAGE b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <141:35 141:41>]
REFERENCE_USAGE b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <141:35 141:41>]
LOCAL_SYMBOL: b3Vector3.h<138:57> [b3Vector3.h <141:33 141:33>]
SYMBOL_METHOD public b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) [b3Vector3.h <155:2 <155:29 155:38> 167:2>]
REFERENCE_TYPE_USAGE b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> b3Vector3 [b3Vector3.h <155:18 155:26>]
LOCAL_SYMBOL: b3Vector3.h<155:57> [b3Vector3.h <155:57 155:57>]
REFERENCE_TYPE_USAGE b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> b3Vector3 [b3Vector3.h <155:46 155:54>]
REFERENCE_CALL b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <158:11 158:11>]
REFERENCE_USAGE b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <158:3 158:9>]
REFERENCE_USAGE b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <158:3 158:9>]
REFERENCE_CALL b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> __m128 _mm_sub_ps(__m128, __m128) [b3Vector3.h <158:13 158:22>]
REFERENCE_CALL b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <158:24 158:30>]
REFERENCE_USAGE b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <158:24 158:30>]
REFERENCE_USAGE b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <158:24 158:30>]
REFERENCE_CALL b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <158:35 158:41>]
REFERENCE_USAGE b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <158:35 158:41>]
REFERENCE_USAGE b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <158:35 158:41>]
LOCAL_SYMBOL: b3Vector3.h<155:57> [b3Vector3.h <158:33 158:33>]
SYMBOL_METHOD public b3Vector3 & b3Vector3::operator*=(const b3Scalar &) [b3Vector3.h <171:2 <171:29 171:38> 185:2>]
REFERENCE_TYPE_USAGE b3Vector3 & b3Vector3::operator*=(const b3Scalar &) -> b3Vector3 [b3Vector3.h <171:18 171:26>]
LOCAL_SYMBOL: b3Vector3.h<171:56> [b3Vector3.h <171:56 171:56>]
REFERENCE_TYPE_USAGE b3Vector3 & b3Vector3::operator*=(const b3Scalar &) -> b3Scalar [b3Vector3.h <171:46 171:53>]
LOCAL_SYMBOL: b3Vector3.h<174:10> [b3Vector3.h <174:10 174:11>]
REFERENCE_TYPE_USAGE b3Vector3 & b3Vector3::operator*=(const b3Scalar &) -> __m128 [b3Vector3.h <174:3 174:8>]
SYMBOL_FUNCTION __m128 _mm_load_ss(const float *)
REFERENCE_CALL b3Vector3 & b3Vector3::operator*=(const b3Scalar &) -> __m128 _mm_load_ss(const float *) [b3Vector3.h <174:15 174:25>]
LOCAL_SYMBOL: b3Vector3.h<171:56> [b3Vector3.h <174:28 174:28>]
REFERENCE_CALL b3Vector3 & b3Vector3::operator*=(const b3Scalar &) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <175:6 175:6>]
LOCAL_SYMBOL: b3Vector3.h<174:10> [b3Vector3.h <175:3 175:4>]
SYMBOL_FUNCTION __m128 _mm_shuffle_ps(__m128, __m128, unsigned int)
REFERENCE_CALL b3Vector3 & b3Vector3::operator*=(const b3Scalar &) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.h <175:8 175:19>]
REFERENCE_CALL b3Vector3 & b3Vector3::operator*=(const b3Scalar &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <175:8 175:19>]
LOCAL_SYMBOL: b3Vector3.h<174:10> [b3Vector3.h <175:21 175:22>]
REFERENCE_CALL b3Vector3 & b3Vector3::operator*=(const b3Scalar &) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <176:11 176:11>]
REFERENCE_USAGE b3Vector3 & b3Vector3::operator*=(const b3Scalar &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <176:3 176:9>]
REFERENCE_USAGE b3Vector3 & b3Vector3::operator*=(const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <176:3 176:9>]
REFERENCE_CALL b3Vector3 & b3Vector3::operator*=(const b3Scalar &) -> __m128 _mm_mul_ps(__m128, __m128) [b3Vector3.h <176:13 176:22>]
REFERENCE_CALL b3Vector3 & b3Vector3::operator*=(const b3Scalar &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <176:24 176:30>]
REFERENCE_USAGE b3Vector3 & b3Vector3::operator*=(const b3Scalar &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <176:24 176:30>]
REFERENCE_USAGE b3Vector3 & b3Vector3::operator*=(const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <176:24 176:30>]
REFERENCE_CALL b3Vector3 & b3Vector3::operator*=(const b3Scalar &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <176:33 176:34>]
LOCAL_SYMBOL: b3Vector3.h<174:10> [b3Vector3.h <176:33 176:34>]
SYMBOL_METHOD public b3Vector3 & b3Vector3::operator/=(const b3Scalar &) [b3Vector3.h <189:2 <189:29 189:38> 205:2>]
REFERENCE_TYPE_USAGE b3Vector3 & b3Vector3::operator/=(const b3Scalar &) -> b3Vector3 [b3Vector3.h <189:18 189:26>]
LOCAL_SYMBOL: b3Vector3.h<189:56> [b3Vector3.h <189:56 189:56>]
REFERENCE_TYPE_USAGE b3Vector3 & b3Vector3::operator/=(const b3Scalar &) -> b3Scalar [b3Vector3.h <189:46 189:53>]
SYMBOL_FUNCTION b3Vector3 & b3Vector3::operator*=(const b3Scalar &)
REFERENCE_CALL b3Vector3 & b3Vector3::operator/=(const b3Scalar &) -> b3Vector3 & b3Vector3::operator*=(const b3Scalar &) [b3Vector3.h <203:16 203:17>]
REFERENCE_TYPE_USAGE b3Vector3 & b3Vector3::operator/=(const b3Scalar &) -> b3Scalar [b3Vector3.h <203:19 203:26>]
LOCAL_SYMBOL: b3Vector3.h<189:56> [b3Vector3.h <203:35 203:35>]
SYMBOL_METHOD public b3Scalar b3Vector3::dot(const b3Vector3 &) const [b3Vector3.h <209:2 <209:27 209:29> 228:2>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::dot(const b3Vector3 &) const -> b3Scalar [b3Vector3.h <209:18 209:25>]
LOCAL_SYMBOL: b3Vector3.h<209:48> [b3Vector3.h <209:48 209:48>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::dot(const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <209:37 209:45>]
LOCAL_SYMBOL: b3Vector3.h<212:10> [b3Vector3.h <212:10 212:11>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::dot(const b3Vector3 &) const -> __m128 [b3Vector3.h <212:3 212:8>]
REFERENCE_CALL b3Scalar b3Vector3::dot(const b3Vector3 &) const -> __m128 _mm_mul_ps(__m128, __m128) [b3Vector3.h <212:15 212:24>]
REFERENCE_CALL b3Scalar b3Vector3::dot(const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <212:26 212:32>]
REFERENCE_USAGE b3Scalar b3Vector3::dot(const b3Vector3 &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <212:26 212:32>]
REFERENCE_USAGE b3Scalar b3Vector3::dot(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <212:26 212:32>]
REFERENCE_CALL b3Scalar b3Vector3::dot(const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <212:37 212:43>]
REFERENCE_USAGE b3Scalar b3Vector3::dot(const b3Vector3 &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <212:37 212:43>]
REFERENCE_USAGE b3Scalar b3Vector3::dot(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <212:37 212:43>]
LOCAL_SYMBOL: b3Vector3.h<209:48> [b3Vector3.h <212:35 212:35>]
LOCAL_SYMBOL: b3Vector3.h<213:10> [b3Vector3.h <213:10 213:10>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::dot(const b3Vector3 &) const -> __m128 [b3Vector3.h <213:3 213:8>]
SYMBOL_FUNCTION __m128 _mm_movehl_ps(__m128, __m128)
REFERENCE_CALL b3Scalar b3Vector3::dot(const b3Vector3 &) const -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.h <213:14 213:26>]
REFERENCE_CALL b3Scalar b3Vector3::dot(const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <213:28 213:29>]
LOCAL_SYMBOL: b3Vector3.h<212:10> [b3Vector3.h <213:28 213:29>]
REFERENCE_CALL b3Scalar b3Vector3::dot(const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <213:32 213:33>]
LOCAL_SYMBOL: b3Vector3.h<212:10> [b3Vector3.h <213:32 213:33>]
LOCAL_SYMBOL: b3Vector3.h<214:10> [b3Vector3.h <214:10 214:10>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::dot(const b3Vector3 &) const -> __m128 [b3Vector3.h <214:3 214:8>]
REFERENCE_CALL b3Scalar b3Vector3::dot(const b3Vector3 &) const -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.h <214:14 214:27>]
REFERENCE_CALL b3Scalar b3Vector3::dot(const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <214:29 214:30>]
LOCAL_SYMBOL: b3Vector3.h<212:10> [b3Vector3.h <214:29 214:30>]
REFERENCE_CALL b3Scalar b3Vector3::dot(const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <214:33 214:34>]
LOCAL_SYMBOL: b3Vector3.h<212:10> [b3Vector3.h <214:33 214:34>]
REFERENCE_CALL b3Scalar b3Vector3::dot(const b3Vector3 &) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <215:6 215:6>]
LOCAL_SYMBOL: b3Vector3.h<212:10> [b3Vector3.h <215:3 215:4>]
SYMBOL_FUNCTION __m128 _mm_add_ss(__m128, __m128)
REFERENCE_CALL b3Scalar b3Vector3::dot(const b3Vector3 &) const -> __m128 _mm_add_ss(__m128, __m128) [b3Vector3.h <215:8 215:17>]
REFERENCE_CALL b3Scalar b3Vector3::dot(const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <215:19 215:20>]
LOCAL_SYMBOL: b3Vector3.h<212:10> [b3Vector3.h <215:19 215:20>]
REFERENCE_CALL b3Scalar b3Vector3::dot(const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <215:23 215:23>]
LOCAL_SYMBOL: b3Vector3.h<214:10> [b3Vector3.h <215:23 215:23>]
REFERENCE_CALL b3Scalar b3Vector3::dot(const b3Vector3 &) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <216:6 216:6>]
LOCAL_SYMBOL: b3Vector3.h<212:10> [b3Vector3.h <216:3 216:4>]
REFERENCE_CALL b3Scalar b3Vector3::dot(const b3Vector3 &) const -> __m128 _mm_add_ss(__m128, __m128) [b3Vector3.h <216:8 216:17>]
REFERENCE_CALL b3Scalar b3Vector3::dot(const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <216:19 216:20>]
LOCAL_SYMBOL: b3Vector3.h<212:10> [b3Vector3.h <216:19 216:20>]
REFERENCE_CALL b3Scalar b3Vector3::dot(const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <216:23 216:23>]
LOCAL_SYMBOL: b3Vector3.h<213:10> [b3Vector3.h <216:23 216:23>]
SYMBOL_FUNCTION float _mm_cvtss_f32(__m128)
REFERENCE_CALL b3Scalar b3Vector3::dot(const b3Vector3 &) const -> float _mm_cvtss_f32(__m128) [b3Vector3.h <217:10 217:22>]
REFERENCE_CALL b3Scalar b3Vector3::dot(const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <217:24 217:25>]
LOCAL_SYMBOL: b3Vector3.h<212:10> [b3Vector3.h <217:24 217:25>]
SYMBOL_METHOD public b3Scalar b3Vector3::length2() const [b3Vector3.h <231:2 <231:27 231:33> 234:2>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::length2() const -> b3Scalar [b3Vector3.h <231:18 231:25>]
SYMBOL_FUNCTION b3Scalar b3Vector3::dot(const b3Vector3 &) const
REFERENCE_CALL b3Scalar b3Vector3::length2() const -> b3Scalar b3Vector3::dot(const b3Vector3 &) const [b3Vector3.h <233:10 233:12>]
SYMBOL_METHOD public b3Scalar b3Vector3::length() const [b3Vector3.h <237:2 <237:27 237:32> 240:2>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::length() const -> b3Scalar [b3Vector3.h <237:18 237:25>]
SYMBOL_FUNCTION b3Scalar b3Sqrt(b3Scalar)
REFERENCE_CALL b3Scalar b3Vector3::length() const -> b3Scalar b3Sqrt(b3Scalar) [b3Vector3.h <239:10 239:15>]
SYMBOL_FUNCTION b3Scalar b3Vector3::length2() const
REFERENCE_CALL b3Scalar b3Vector3::length() const -> b3Scalar b3Vector3::length2() const [b3Vector3.h <239:17 239:23>]
SYMBOL_METHOD public b3Scalar b3Vector3::distance2(const b3Vector3 &) const [b3Vector3.h <244:27 244:35>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::distance2(const b3Vector3 &) const -> b3Scalar [b3Vector3.h <244:18 244:25>]
LOCAL_SYMBOL: b3Vector3.h<244:54> [b3Vector3.h <244:54 244:54>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::distance2(const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <244:43 244:51>]
SYMBOL_METHOD public b3Scalar b3Vector3::distance(const b3Vector3 &) const [b3Vector3.h <248:27 248:34>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::distance(const b3Vector3 &) const -> b3Scalar [b3Vector3.h <248:18 248:25>]
LOCAL_SYMBOL: b3Vector3.h<248:53> [b3Vector3.h <248:53 248:53>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::distance(const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <248:42 248:50>]
SYMBOL_METHOD public b3Vector3 & b3Vector3::safeNormalize() [b3Vector3.h <250:2 <250:29 250:41> 263:2>]
REFERENCE_TYPE_USAGE b3Vector3 & b3Vector3::safeNormalize() -> b3Vector3 [b3Vector3.h <250:18 250:26>]
LOCAL_SYMBOL: b3Vector3.h<252:12> [b3Vector3.h <252:12 252:13>]
REFERENCE_TYPE_USAGE b3Vector3 & b3Vector3::safeNormalize() -> b3Scalar [b3Vector3.h <252:3 252:10>]
REFERENCE_CALL b3Vector3 & b3Vector3::safeNormalize() -> b3Scalar b3Vector3::length2() const [b3Vector3.h <252:17 252:23>]
LOCAL_SYMBOL: b3Vector3.h<252:12> [b3Vector3.h <254:7 254:8>]
SYMBOL_FUNCTION b3Vector3 & b3Vector3::operator/=(const b3Scalar &)
REFERENCE_CALL b3Vector3 & b3Vector3::safeNormalize() -> b3Vector3 & b3Vector3::operator/=(const b3Scalar &) [b3Vector3.h <256:12 256:13>]
REFERENCE_CALL b3Vector3 & b3Vector3::safeNormalize() -> b3Scalar b3Sqrt(b3Scalar) [b3Vector3.h <256:15 256:20>]
LOCAL_SYMBOL: b3Vector3.h<252:12> [b3Vector3.h <256:22 256:23>]
SYMBOL_FUNCTION void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &)
REFERENCE_CALL b3Vector3 & b3Vector3::safeNormalize() -> void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) [b3Vector3.h <260:4 260:11>]
SYMBOL_METHOD public b3Vector3 & b3Vector3::normalize() [b3Vector3.h <267:2 <267:29 267:37> 307:2>]
REFERENCE_TYPE_USAGE b3Vector3 & b3Vector3::normalize() -> b3Vector3 [b3Vector3.h <267:18 267:26>]
LOCAL_SYMBOL: b3Vector3.h<271:10> [b3Vector3.h <271:10 271:11>]
REFERENCE_TYPE_USAGE b3Vector3 & b3Vector3::normalize() -> __m128 [b3Vector3.h <271:3 271:8>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 _mm_mul_ps(__m128, __m128) [b3Vector3.h <271:15 271:24>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <271:26 271:32>]
REFERENCE_USAGE b3Vector3 & b3Vector3::normalize() -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <271:26 271:32>]
REFERENCE_USAGE b3Vector3 & b3Vector3::normalize() -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <271:26 271:32>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <271:35 271:41>]
REFERENCE_USAGE b3Vector3 & b3Vector3::normalize() -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <271:35 271:41>]
REFERENCE_USAGE b3Vector3 & b3Vector3::normalize() -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <271:35 271:41>]
LOCAL_SYMBOL: b3Vector3.h<272:10> [b3Vector3.h <272:10 272:10>]
REFERENCE_TYPE_USAGE b3Vector3 & b3Vector3::normalize() -> __m128 [b3Vector3.h <272:3 272:8>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.h <272:14 272:26>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <272:28 272:29>]
LOCAL_SYMBOL: b3Vector3.h<271:10> [b3Vector3.h <272:28 272:29>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <272:32 272:33>]
LOCAL_SYMBOL: b3Vector3.h<271:10> [b3Vector3.h <272:32 272:33>]
LOCAL_SYMBOL: b3Vector3.h<273:10> [b3Vector3.h <273:10 273:10>]
REFERENCE_TYPE_USAGE b3Vector3 & b3Vector3::normalize() -> __m128 [b3Vector3.h <273:3 273:8>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.h <273:14 273:27>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <273:29 273:30>]
LOCAL_SYMBOL: b3Vector3.h<271:10> [b3Vector3.h <273:29 273:30>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <273:33 273:34>]
LOCAL_SYMBOL: b3Vector3.h<271:10> [b3Vector3.h <273:33 273:34>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <274:6 274:6>]
LOCAL_SYMBOL: b3Vector3.h<271:10> [b3Vector3.h <274:3 274:4>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 _mm_add_ss(__m128, __m128) [b3Vector3.h <274:8 274:17>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <274:19 274:20>]
LOCAL_SYMBOL: b3Vector3.h<271:10> [b3Vector3.h <274:19 274:20>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <274:23 274:23>]
LOCAL_SYMBOL: b3Vector3.h<273:10> [b3Vector3.h <274:23 274:23>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <275:6 275:6>]
LOCAL_SYMBOL: b3Vector3.h<271:10> [b3Vector3.h <275:3 275:4>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 _mm_add_ss(__m128, __m128) [b3Vector3.h <275:8 275:17>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <275:19 275:20>]
LOCAL_SYMBOL: b3Vector3.h<271:10> [b3Vector3.h <275:19 275:20>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <275:23 275:23>]
LOCAL_SYMBOL: b3Vector3.h<272:10> [b3Vector3.h <275:23 275:23>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <285:11 285:11>]
LOCAL_SYMBOL: b3Vector3.h<273:10> [b3Vector3.h <285:9 285:9>]
SYMBOL_FUNCTION __m128 _mm_rsqrt_ss(__m128)
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 _mm_rsqrt_ss(__m128) [b3Vector3.h <285:13 285:24>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <285:26 285:27>]
LOCAL_SYMBOL: b3Vector3.h<271:10> [b3Vector3.h <285:26 285:27>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.h <288:11 288:11>]
LOCAL_SYMBOL: b3Vector3.h<272:10> [b3Vector3.h <288:9 288:9>]
REFERENCE_USAGE b3Vector3 & b3Vector3::normalize() -> const __m128 b3v1_5 [b3Vector3.h <288:13 288:18>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <289:12 289:12>]
LOCAL_SYMBOL: b3Vector3.h<271:10> [b3Vector3.h <289:9 289:10>]
SYMBOL_FUNCTION __m128 _mm_mul_ss(__m128, __m128)
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 _mm_mul_ss(__m128, __m128) [b3Vector3.h <289:14 289:23>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <289:25 289:26>]
LOCAL_SYMBOL: b3Vector3.h<271:10> [b3Vector3.h <289:25 289:26>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <289:29 289:35>]
REFERENCE_USAGE b3Vector3 & b3Vector3::normalize() -> const __m128 b3vHalf [b3Vector3.h <289:29 289:35>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <291:12 291:12>]
LOCAL_SYMBOL: b3Vector3.h<271:10> [b3Vector3.h <291:9 291:10>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 _mm_mul_ss(__m128, __m128) [b3Vector3.h <291:14 291:23>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <291:25 291:26>]
LOCAL_SYMBOL: b3Vector3.h<271:10> [b3Vector3.h <291:25 291:26>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <291:29 291:29>]
LOCAL_SYMBOL: b3Vector3.h<273:10> [b3Vector3.h <291:29 291:29>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <292:12 292:12>]
LOCAL_SYMBOL: b3Vector3.h<271:10> [b3Vector3.h <292:9 292:10>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 _mm_mul_ss(__m128, __m128) [b3Vector3.h <292:14 292:23>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <292:25 292:26>]
LOCAL_SYMBOL: b3Vector3.h<271:10> [b3Vector3.h <292:25 292:26>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <292:29 292:29>]
LOCAL_SYMBOL: b3Vector3.h<273:10> [b3Vector3.h <292:29 292:29>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <293:11 293:11>]
LOCAL_SYMBOL: b3Vector3.h<272:10> [b3Vector3.h <293:9 293:9>]
SYMBOL_FUNCTION __m128 _mm_sub_ss(__m128, __m128)
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 _mm_sub_ss(__m128, __m128) [b3Vector3.h <293:13 293:22>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <293:24 293:24>]
LOCAL_SYMBOL: b3Vector3.h<272:10> [b3Vector3.h <293:24 293:24>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <293:27 293:28>]
LOCAL_SYMBOL: b3Vector3.h<271:10> [b3Vector3.h <293:27 293:28>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <295:11 295:11>]
LOCAL_SYMBOL: b3Vector3.h<273:10> [b3Vector3.h <295:9 295:9>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 _mm_mul_ss(__m128, __m128) [b3Vector3.h <295:13 295:22>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <295:24 295:24>]
LOCAL_SYMBOL: b3Vector3.h<273:10> [b3Vector3.h <295:24 295:24>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <295:27 295:27>]
LOCAL_SYMBOL: b3Vector3.h<272:10> [b3Vector3.h <295:27 295:27>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <297:5 297:5>]
LOCAL_SYMBOL: b3Vector3.h<273:10> [b3Vector3.h <297:3 297:3>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.h <297:7 297:17>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <297:7 297:17>]
LOCAL_SYMBOL: b3Vector3.h<273:10> [b3Vector3.h <297:19 297:19>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <298:11 298:11>]
REFERENCE_USAGE b3Vector3 & b3Vector3::normalize() -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <298:3 298:9>]
REFERENCE_USAGE b3Vector3 & b3Vector3::normalize() -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <298:3 298:9>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> __m128 _mm_mul_ps(__m128, __m128) [b3Vector3.h <298:13 298:22>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <298:24 298:30>]
REFERENCE_USAGE b3Vector3 & b3Vector3::normalize() -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <298:24 298:30>]
REFERENCE_USAGE b3Vector3 & b3Vector3::normalize() -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <298:24 298:30>]
REFERENCE_CALL b3Vector3 & b3Vector3::normalize() -> void __m128::__m128(const __m128 &) [b3Vector3.h <298:33 298:33>]
LOCAL_SYMBOL: b3Vector3.h<273:10> [b3Vector3.h <298:33 298:33>]
SYMBOL_METHOD public b3Vector3 b3Vector3::normalized() const [b3Vector3.h <310:28 310:37>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::normalized() const -> b3Vector3 [b3Vector3.h <310:18 310:26>]
SYMBOL_METHOD public b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const [b3Vector3.h <315:28 315:33>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3 [b3Vector3.h <315:18 315:26>]
LOCAL_SYMBOL: b3Vector3.h<315:53> [b3Vector3.h <315:53 315:57>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3 [b3Vector3.h <315:42 315:50>]
LOCAL_SYMBOL: b3Vector3.h<315:75> [b3Vector3.h <315:75 315:79>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Scalar [b3Vector3.h <315:66 315:73>]
SYMBOL_METHOD public b3Scalar b3Vector3::angle(const b3Vector3 &) const [b3Vector3.h <319:2 <319:27 319:31> 324:2>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::angle(const b3Vector3 &) const -> b3Scalar [b3Vector3.h <319:18 319:25>]
LOCAL_SYMBOL: b3Vector3.h<319:50> [b3Vector3.h <319:50 319:50>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::angle(const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <319:39 319:47>]
LOCAL_SYMBOL: b3Vector3.h<321:12> [b3Vector3.h <321:12 321:12>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::angle(const b3Vector3 &) const -> b3Scalar [b3Vector3.h <321:3 321:10>]
REFERENCE_CALL b3Scalar b3Vector3::angle(const b3Vector3 &) const -> b3Scalar b3Sqrt(b3Scalar) [b3Vector3.h <321:16 321:21>]
REFERENCE_CALL b3Scalar b3Vector3::angle(const b3Vector3 &) const -> b3Scalar b3Vector3::length2() const [b3Vector3.h <321:23 321:29>]
REFERENCE_CALL b3Scalar b3Vector3::angle(const b3Vector3 &) const -> b3Scalar b3Vector3::length2() const [b3Vector3.h <321:37 321:43>]
LOCAL_SYMBOL: b3Vector3.h<319:50> [b3Vector3.h <321:35 321:35>]
SYMBOL_FUNCTION b3Scalar b3Acos(b3Scalar)
REFERENCE_CALL b3Scalar b3Vector3::angle(const b3Vector3 &) const -> b3Scalar b3Acos(b3Scalar) [b3Vector3.h <323:10 323:15>]
REFERENCE_CALL b3Scalar b3Vector3::angle(const b3Vector3 &) const -> b3Scalar b3Vector3::dot(const b3Vector3 &) const [b3Vector3.h <323:17 323:19>]
LOCAL_SYMBOL: b3Vector3.h<319:50> [b3Vector3.h <323:21 323:21>]
LOCAL_SYMBOL: b3Vector3.h<321:12> [b3Vector3.h <323:26 323:26>]
SYMBOL_METHOD public b3Vector3 b3Vector3::absolute() const [b3Vector3.h <327:2 <327:28 327:35> 339:2>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::absolute() const -> b3Vector3 [b3Vector3.h <327:18 327:26>]
SYMBOL_FUNCTION b3Vector3 b3MakeVector3(b3SimdFloat4)
REFERENCE_CALL b3Vector3 b3Vector3::absolute() const -> b3Vector3 b3MakeVector3(b3SimdFloat4) [b3Vector3.h <330:10 330:22>]
SYMBOL_FUNCTION __m128 _mm_and_ps(__m128, __m128)
REFERENCE_CALL b3Vector3 b3Vector3::absolute() const -> __m128 _mm_and_ps(__m128, __m128) [b3Vector3.h <330:24 330:33>]
REFERENCE_CALL b3Vector3 b3Vector3::absolute() const -> void __m128::__m128(const __m128 &) [b3Vector3.h <330:35 330:41>]
REFERENCE_USAGE b3Vector3 b3Vector3::absolute() const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <330:35 330:41>]
REFERENCE_USAGE b3Vector3 b3Vector3::absolute() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <330:35 330:41>]
SYMBOL_FUNCTION __m128 _mm_castsi128_ps(__m128i)
REFERENCE_CALL b3Vector3 b3Vector3::absolute() const -> __m128 _mm_castsi128_ps(__m128i) [b3Vector3.h <330:44 330:55>]
SYMBOL_FUNCTION __m128i _mm_set_epi32(int, int, int, int)
REFERENCE_CALL b3Vector3 b3Vector3::absolute() const -> __m128i _mm_set_epi32(int, int, int, int) [b3Vector3.h <48:23 48:35>]
SYMBOL_METHOD public b3Vector3 b3Vector3::cross(const b3Vector3 &) const [b3Vector3.h <343:2 <343:28 343:32> 380:2>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <343:18 343:26>]
LOCAL_SYMBOL: b3Vector3.h<343:51> [b3Vector3.h <343:51 343:51>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <343:40 343:48>]
LOCAL_SYMBOL: b3Vector3.h<346:10> [b3Vector3.h <346:10 346:10>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> __m128 [b3Vector3.h <346:3 346:8>]
SYMBOL_FUNCTION void __m128::__m128()
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> void __m128::__m128() [b3Vector3.h <346:10 346:10>]
LOCAL_SYMBOL: b3Vector3.h<346:13> [b3Vector3.h <346:13 346:13>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> void __m128::__m128() [b3Vector3.h <346:13 346:13>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <348:5 348:5>]
LOCAL_SYMBOL: b3Vector3.h<346:10> [b3Vector3.h <348:3 348:3>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.h <348:7 348:18>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <348:7 348:18>]
REFERENCE_USAGE b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <348:20 348:26>]
REFERENCE_USAGE b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <348:20 348:26>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <349:5 349:5>]
LOCAL_SYMBOL: b3Vector3.h<346:13> [b3Vector3.h <349:3 349:3>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.h <349:7 349:18>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <349:7 349:18>]
REFERENCE_USAGE b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <349:22 349:28>]
REFERENCE_USAGE b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <349:22 349:28>]
LOCAL_SYMBOL: b3Vector3.h<343:51> [b3Vector3.h <349:20 349:20>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <351:5 351:5>]
LOCAL_SYMBOL: b3Vector3.h<346:13> [b3Vector3.h <351:3 351:3>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> __m128 _mm_mul_ps(__m128, __m128) [b3Vector3.h <351:7 351:16>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <351:18 351:18>]
LOCAL_SYMBOL: b3Vector3.h<346:13> [b3Vector3.h <351:18 351:18>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <351:21 351:27>]
REFERENCE_USAGE b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <351:21 351:27>]
REFERENCE_USAGE b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <351:21 351:27>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <352:5 352:5>]
LOCAL_SYMBOL: b3Vector3.h<346:10> [b3Vector3.h <352:3 352:3>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> __m128 _mm_mul_ps(__m128, __m128) [b3Vector3.h <352:7 352:16>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <352:18 352:18>]
LOCAL_SYMBOL: b3Vector3.h<346:10> [b3Vector3.h <352:18 352:18>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <352:23 352:29>]
REFERENCE_USAGE b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <352:23 352:29>]
REFERENCE_USAGE b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <352:23 352:29>]
LOCAL_SYMBOL: b3Vector3.h<343:51> [b3Vector3.h <352:21 352:21>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <353:5 353:5>]
LOCAL_SYMBOL: b3Vector3.h<346:13> [b3Vector3.h <353:3 353:3>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> __m128 _mm_sub_ps(__m128, __m128) [b3Vector3.h <353:7 353:16>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <353:18 353:18>]
LOCAL_SYMBOL: b3Vector3.h<346:13> [b3Vector3.h <353:18 353:18>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <353:21 353:21>]
LOCAL_SYMBOL: b3Vector3.h<346:10> [b3Vector3.h <353:21 353:21>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <355:5 355:5>]
LOCAL_SYMBOL: b3Vector3.h<346:13> [b3Vector3.h <355:3 355:3>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.h <355:7 355:18>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <355:7 355:18>]
LOCAL_SYMBOL: b3Vector3.h<346:13> [b3Vector3.h <355:20 355:20>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3Vector3 b3MakeVector3(b3SimdFloat4) [b3Vector3.h <356:10 356:22>]
REFERENCE_CALL b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <356:24 356:24>]
LOCAL_SYMBOL: b3Vector3.h<346:13> [b3Vector3.h <356:24 356:24>]
SYMBOL_METHOD public b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const [b3Vector3.h <382:2 <382:27 382:32> 430:2>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Scalar [b3Vector3.h <382:18 382:25>]
LOCAL_SYMBOL: b3Vector3.h<382:51> [b3Vector3.h <382:51 382:52>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <382:40 382:48>]
LOCAL_SYMBOL: b3Vector3.h<382:72> [b3Vector3.h <382:72 382:73>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <382:61 382:69>]
LOCAL_SYMBOL: b3Vector3.h<386:10> [b3Vector3.h <386:10 386:10>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> __m128 [b3Vector3.h <386:3 386:8>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.h <386:14 386:27>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <386:32 386:38>]
REFERENCE_USAGE b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <386:32 386:38>]
REFERENCE_USAGE b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <386:32 386:38>]
LOCAL_SYMBOL: b3Vector3.h<382:51> [b3Vector3.h <386:29 386:30>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <386:44 386:50>]
REFERENCE_USAGE b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <386:44 386:50>]
REFERENCE_USAGE b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <386:44 386:50>]
LOCAL_SYMBOL: b3Vector3.h<382:51> [b3Vector3.h <386:41 386:42>]
LOCAL_SYMBOL: b3Vector3.h<387:10> [b3Vector3.h <387:10 387:10>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> __m128 [b3Vector3.h <387:3 387:8>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.h <387:14 387:27>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <387:32 387:38>]
REFERENCE_USAGE b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <387:32 387:38>]
REFERENCE_USAGE b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <387:32 387:38>]
LOCAL_SYMBOL: b3Vector3.h<382:72> [b3Vector3.h <387:29 387:30>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <387:44 387:50>]
REFERENCE_USAGE b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <387:44 387:50>]
REFERENCE_USAGE b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <387:44 387:50>]
LOCAL_SYMBOL: b3Vector3.h<382:72> [b3Vector3.h <387:41 387:42>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <389:5 389:5>]
LOCAL_SYMBOL: b3Vector3.h<387:10> [b3Vector3.h <389:3 389:3>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_mul_ps(__m128, __m128) [b3Vector3.h <389:7 389:16>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <389:18 389:18>]
LOCAL_SYMBOL: b3Vector3.h<387:10> [b3Vector3.h <389:18 389:18>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <389:24 389:30>]
REFERENCE_USAGE b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <389:24 389:30>]
REFERENCE_USAGE b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <389:24 389:30>]
LOCAL_SYMBOL: b3Vector3.h<382:51> [b3Vector3.h <389:21 389:22>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <390:5 390:5>]
LOCAL_SYMBOL: b3Vector3.h<386:10> [b3Vector3.h <390:3 390:3>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_mul_ps(__m128, __m128) [b3Vector3.h <390:7 390:16>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <390:18 390:18>]
LOCAL_SYMBOL: b3Vector3.h<386:10> [b3Vector3.h <390:18 390:18>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <390:24 390:30>]
REFERENCE_USAGE b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <390:24 390:30>]
REFERENCE_USAGE b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <390:24 390:30>]
LOCAL_SYMBOL: b3Vector3.h<382:72> [b3Vector3.h <390:21 390:22>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <391:5 391:5>]
LOCAL_SYMBOL: b3Vector3.h<387:10> [b3Vector3.h <391:3 391:3>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_sub_ps(__m128, __m128) [b3Vector3.h <391:7 391:16>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <391:18 391:18>]
LOCAL_SYMBOL: b3Vector3.h<387:10> [b3Vector3.h <391:18 391:18>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <391:21 391:21>]
LOCAL_SYMBOL: b3Vector3.h<386:10> [b3Vector3.h <391:21 391:21>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <393:5 393:5>]
LOCAL_SYMBOL: b3Vector3.h<387:10> [b3Vector3.h <393:3 393:3>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.h <393:7 393:20>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <393:22 393:22>]
LOCAL_SYMBOL: b3Vector3.h<387:10> [b3Vector3.h <393:22 393:22>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <393:25 393:25>]
LOCAL_SYMBOL: b3Vector3.h<387:10> [b3Vector3.h <393:25 393:25>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <396:5 396:5>]
LOCAL_SYMBOL: b3Vector3.h<387:10> [b3Vector3.h <396:3 396:3>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_mul_ps(__m128, __m128) [b3Vector3.h <396:7 396:16>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <396:18 396:18>]
LOCAL_SYMBOL: b3Vector3.h<387:10> [b3Vector3.h <396:18 396:18>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <396:21 396:27>]
REFERENCE_USAGE b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <396:21 396:27>]
REFERENCE_USAGE b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <396:21 396:27>]
LOCAL_SYMBOL: b3Vector3.h<397:10> [b3Vector3.h <397:10 397:10>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> __m128 [b3Vector3.h <397:3 397:8>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.h <397:14 397:26>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <397:28 397:28>]
LOCAL_SYMBOL: b3Vector3.h<387:10> [b3Vector3.h <397:28 397:28>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <397:31 397:31>]
LOCAL_SYMBOL: b3Vector3.h<387:10> [b3Vector3.h <397:31 397:31>]
LOCAL_SYMBOL: b3Vector3.h<398:10> [b3Vector3.h <398:10 398:10>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> __m128 [b3Vector3.h <398:3 398:8>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.h <398:14 398:27>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <398:29 398:29>]
LOCAL_SYMBOL: b3Vector3.h<387:10> [b3Vector3.h <398:29 398:29>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <398:32 398:32>]
LOCAL_SYMBOL: b3Vector3.h<387:10> [b3Vector3.h <398:32 398:32>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <399:5 399:5>]
LOCAL_SYMBOL: b3Vector3.h<387:10> [b3Vector3.h <399:3 399:3>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_add_ss(__m128, __m128) [b3Vector3.h <399:7 399:16>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <399:18 399:18>]
LOCAL_SYMBOL: b3Vector3.h<387:10> [b3Vector3.h <399:18 399:18>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <399:21 399:21>]
LOCAL_SYMBOL: b3Vector3.h<398:10> [b3Vector3.h <399:21 399:21>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <400:5 400:5>]
LOCAL_SYMBOL: b3Vector3.h<387:10> [b3Vector3.h <400:3 400:3>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_add_ss(__m128, __m128) [b3Vector3.h <400:7 400:16>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <400:18 400:18>]
LOCAL_SYMBOL: b3Vector3.h<387:10> [b3Vector3.h <400:18 400:18>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <400:21 400:21>]
LOCAL_SYMBOL: b3Vector3.h<397:10> [b3Vector3.h <400:21 400:21>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> float _mm_cvtss_f32(__m128) [b3Vector3.h <401:10 401:22>]
REFERENCE_CALL b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <401:24 401:24>]
LOCAL_SYMBOL: b3Vector3.h<387:10> [b3Vector3.h <401:24 401:24>]
SYMBOL_METHOD public int b3Vector3::minAxis() const [b3Vector3.h <434:2 <434:22 434:28> 437:2>]
REFERENCE_TYPE_USAGE int b3Vector3::minAxis() const -> int [b3Vector3.h <434:18 434:20>]
REFERENCE_USAGE int b3Vector3::minAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <436:10 436:17>]
REFERENCE_USAGE int b3Vector3::minAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <436:10 436:17>]
REFERENCE_USAGE int b3Vector3::minAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <436:24 436:31>]
REFERENCE_USAGE int b3Vector3::minAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <436:24 436:31>]
REFERENCE_USAGE int b3Vector3::minAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <436:39 436:46>]
REFERENCE_USAGE int b3Vector3::minAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <436:39 436:46>]
REFERENCE_USAGE int b3Vector3::minAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <436:52 436:59>]
REFERENCE_USAGE int b3Vector3::minAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <436:52 436:59>]
REFERENCE_USAGE int b3Vector3::minAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <436:76 436:83>]
REFERENCE_USAGE int b3Vector3::minAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <436:76 436:83>]
REFERENCE_USAGE int b3Vector3::minAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <436:89 436:96>]
REFERENCE_USAGE int b3Vector3::minAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <436:89 436:96>]
SYMBOL_METHOD public int b3Vector3::maxAxis() const [b3Vector3.h <441:2 <441:22 441:28> 444:2>]
REFERENCE_TYPE_USAGE int b3Vector3::maxAxis() const -> int [b3Vector3.h <441:18 441:20>]
REFERENCE_USAGE int b3Vector3::maxAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <443:10 443:17>]
REFERENCE_USAGE int b3Vector3::maxAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <443:10 443:17>]
REFERENCE_USAGE int b3Vector3::maxAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <443:24 443:31>]
REFERENCE_USAGE int b3Vector3::maxAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <443:24 443:31>]
REFERENCE_USAGE int b3Vector3::maxAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <443:39 443:46>]
REFERENCE_USAGE int b3Vector3::maxAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <443:39 443:46>]
REFERENCE_USAGE int b3Vector3::maxAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <443:52 443:59>]
REFERENCE_USAGE int b3Vector3::maxAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <443:52 443:59>]
REFERENCE_USAGE int b3Vector3::maxAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <443:76 443:83>]
REFERENCE_USAGE int b3Vector3::maxAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <443:76 443:83>]
REFERENCE_USAGE int b3Vector3::maxAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <443:89 443:96>]
REFERENCE_USAGE int b3Vector3::maxAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <443:89 443:96>]
SYMBOL_METHOD public int b3Vector3::furthestAxis() const [b3Vector3.h <446:2 <446:22 446:33> 449:2>]
REFERENCE_TYPE_USAGE int b3Vector3::furthestAxis() const -> int [b3Vector3.h <446:18 446:20>]
SYMBOL_FUNCTION int b3Vector3::minAxis() const
REFERENCE_CALL int b3Vector3::furthestAxis() const -> int b3Vector3::minAxis() const [b3Vector3.h <448:21 448:27>]
SYMBOL_FUNCTION b3Vector3 b3Vector3::absolute() const
REFERENCE_CALL int b3Vector3::furthestAxis() const -> b3Vector3 b3Vector3::absolute() const [b3Vector3.h <448:10 448:17>]
SYMBOL_METHOD public int b3Vector3::closestAxis() const [b3Vector3.h <451:2 <451:22 451:32> 454:2>]
REFERENCE_TYPE_USAGE int b3Vector3::closestAxis() const -> int [b3Vector3.h <451:18 451:20>]
SYMBOL_FUNCTION int b3Vector3::maxAxis() const
REFERENCE_CALL int b3Vector3::closestAxis() const -> int b3Vector3::maxAxis() const [b3Vector3.h <453:21 453:27>]
REFERENCE_CALL int b3Vector3::closestAxis() const -> b3Vector3 b3Vector3::absolute() const [b3Vector3.h <453:10 453:17>]
SYMBOL_METHOD public void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) [b3Vector3.h <457:2 <457:23 457:37> 481:2>]
REFERENCE_TYPE_USAGE void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> void [b3Vector3.h <457:18 457:21>]
LOCAL_SYMBOL: b3Vector3.h<457:56> [b3Vector3.h <457:56 457:57>]
REFERENCE_TYPE_USAGE void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3Vector3 [b3Vector3.h <457:45 457:53>]
LOCAL_SYMBOL: b3Vector3.h<457:77> [b3Vector3.h <457:77 457:78>]
REFERENCE_TYPE_USAGE void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3Vector3 [b3Vector3.h <457:66 457:74>]
LOCAL_SYMBOL: b3Vector3.h<457:90> [b3Vector3.h <457:90 457:91>]
REFERENCE_TYPE_USAGE void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3Scalar [b3Vector3.h <457:81 457:88>]
LOCAL_SYMBOL: b3Vector3.h<460:10> [b3Vector3.h <460:10 460:12>]
REFERENCE_TYPE_USAGE void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> __m128 [b3Vector3.h <460:3 460:8>]
REFERENCE_CALL void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> __m128 _mm_load_ss(const float *) [b3Vector3.h <460:16 460:26>]
LOCAL_SYMBOL: b3Vector3.h<457:90> [b3Vector3.h <460:29 460:30>]
LOCAL_SYMBOL: b3Vector3.h<461:12> [b3Vector3.h <461:12 461:12>]
REFERENCE_TYPE_USAGE void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3Scalar [b3Vector3.h <461:3 461:10>]
REFERENCE_TYPE_USAGE void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3Scalar [b3Vector3.h <461:16 461:23>]
LOCAL_SYMBOL: b3Vector3.h<457:90> [b3Vector3.h <461:32 461:33>]
LOCAL_SYMBOL: b3Vector3.h<462:10> [b3Vector3.h <462:10 462:11>]
REFERENCE_TYPE_USAGE void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> __m128 [b3Vector3.h <462:3 462:8>]
REFERENCE_CALL void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> __m128 _mm_load_ss(const float *) [b3Vector3.h <462:15 462:25>]
LOCAL_SYMBOL: b3Vector3.h<461:12> [b3Vector3.h <462:28 462:28>]
REFERENCE_CALL void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <463:6 463:6>]
LOCAL_SYMBOL: b3Vector3.h<462:10> [b3Vector3.h <463:3 463:4>]
REFERENCE_CALL void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.h <463:8 463:19>]
REFERENCE_CALL void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> void __m128::__m128(const __m128 &) [b3Vector3.h <463:8 463:19>]
LOCAL_SYMBOL: b3Vector3.h<462:10> [b3Vector3.h <463:21 463:22>]
LOCAL_SYMBOL: b3Vector3.h<464:10> [b3Vector3.h <464:10 464:11>]
REFERENCE_TYPE_USAGE void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> __m128 [b3Vector3.h <464:3 464:8>]
REFERENCE_CALL void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> __m128 _mm_mul_ps(__m128, __m128) [b3Vector3.h <464:15 464:24>]
REFERENCE_CALL void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> void __m128::__m128(const __m128 &) [b3Vector3.h <464:29 464:35>]
REFERENCE_USAGE void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <464:29 464:35>]
REFERENCE_USAGE void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <464:29 464:35>]
LOCAL_SYMBOL: b3Vector3.h<457:56> [b3Vector3.h <464:26 464:27>]
REFERENCE_CALL void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> void __m128::__m128(const __m128 &) [b3Vector3.h <464:38 464:39>]
LOCAL_SYMBOL: b3Vector3.h<462:10> [b3Vector3.h <464:38 464:39>]
REFERENCE_CALL void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <465:7 465:7>]
LOCAL_SYMBOL: b3Vector3.h<460:10> [b3Vector3.h <465:3 465:5>]
REFERENCE_CALL void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.h <465:9 465:20>]
REFERENCE_CALL void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> void __m128::__m128(const __m128 &) [b3Vector3.h <465:9 465:20>]
LOCAL_SYMBOL: b3Vector3.h<460:10> [b3Vector3.h <465:22 465:24>]
LOCAL_SYMBOL: b3Vector3.h<466:10> [b3Vector3.h <466:10 466:11>]
REFERENCE_TYPE_USAGE void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> __m128 [b3Vector3.h <466:3 466:8>]
REFERENCE_CALL void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> __m128 _mm_mul_ps(__m128, __m128) [b3Vector3.h <466:15 466:24>]
REFERENCE_CALL void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> void __m128::__m128(const __m128 &) [b3Vector3.h <466:29 466:35>]
REFERENCE_USAGE void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <466:29 466:35>]
REFERENCE_USAGE void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <466:29 466:35>]
LOCAL_SYMBOL: b3Vector3.h<457:77> [b3Vector3.h <466:26 466:27>]
REFERENCE_CALL void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> void __m128::__m128(const __m128 &) [b3Vector3.h <466:38 466:40>]
LOCAL_SYMBOL: b3Vector3.h<460:10> [b3Vector3.h <466:38 466:40>]
LOCAL_SYMBOL: b3Vector3.h<467:10> [b3Vector3.h <467:10 467:13>]
REFERENCE_TYPE_USAGE void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> __m128 [b3Vector3.h <467:3 467:8>]
REFERENCE_CALL void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> __m128 _mm_add_ps(__m128, __m128) [b3Vector3.h <467:17 467:26>]
REFERENCE_CALL void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> void __m128::__m128(const __m128 &) [b3Vector3.h <467:28 467:29>]
LOCAL_SYMBOL: b3Vector3.h<464:10> [b3Vector3.h <467:28 467:29>]
REFERENCE_CALL void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> void __m128::__m128(const __m128 &) [b3Vector3.h <467:31 467:32>]
LOCAL_SYMBOL: b3Vector3.h<466:10> [b3Vector3.h <467:31 467:32>]
REFERENCE_CALL void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.h <468:11 468:11>]
REFERENCE_USAGE void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <468:3 468:9>]
REFERENCE_USAGE void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <468:3 468:9>]
LOCAL_SYMBOL: b3Vector3.h<467:10> [b3Vector3.h <468:13 468:16>]
SYMBOL_METHOD public b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const [b3Vector3.h <486:2 <486:28 486:31> 508:2>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> b3Vector3 [b3Vector3.h <486:18 486:26>]
LOCAL_SYMBOL: b3Vector3.h<486:50> [b3Vector3.h <486:50 486:50>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> b3Vector3 [b3Vector3.h <486:39 486:47>]
LOCAL_SYMBOL: b3Vector3.h<486:69> [b3Vector3.h <486:69 486:69>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> b3Scalar [b3Vector3.h <486:59 486:66>]
LOCAL_SYMBOL: b3Vector3.h<489:10> [b3Vector3.h <489:10 489:11>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> __m128 [b3Vector3.h <489:3 489:8>]
REFERENCE_CALL b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> __m128 _mm_load_ss(const float *) [b3Vector3.h <489:15 489:25>]
LOCAL_SYMBOL: b3Vector3.h<486:69> [b3Vector3.h <489:28 489:28>]
REFERENCE_CALL b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <490:6 490:6>]
LOCAL_SYMBOL: b3Vector3.h<489:10> [b3Vector3.h <490:3 490:4>]
REFERENCE_CALL b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.h <490:8 490:19>]
REFERENCE_CALL b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <490:8 490:19>]
LOCAL_SYMBOL: b3Vector3.h<489:10> [b3Vector3.h <490:21 490:22>]
LOCAL_SYMBOL: b3Vector3.h<491:10> [b3Vector3.h <491:10 491:11>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> __m128 [b3Vector3.h <491:3 491:8>]
REFERENCE_CALL b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> __m128 _mm_sub_ps(__m128, __m128) [b3Vector3.h <491:15 491:24>]
REFERENCE_CALL b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <491:28 491:34>]
REFERENCE_USAGE b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <491:28 491:34>]
REFERENCE_USAGE b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <491:28 491:34>]
LOCAL_SYMBOL: b3Vector3.h<486:50> [b3Vector3.h <491:26 491:26>]
REFERENCE_CALL b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <491:37 491:43>]
REFERENCE_USAGE b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <491:37 491:43>]
REFERENCE_USAGE b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <491:37 491:43>]
REFERENCE_CALL b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <492:6 492:6>]
LOCAL_SYMBOL: b3Vector3.h<491:10> [b3Vector3.h <492:3 492:4>]
REFERENCE_CALL b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> __m128 _mm_mul_ps(__m128, __m128) [b3Vector3.h <492:8 492:17>]
REFERENCE_CALL b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <492:19 492:20>]
LOCAL_SYMBOL: b3Vector3.h<491:10> [b3Vector3.h <492:19 492:20>]
REFERENCE_CALL b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <492:23 492:24>]
LOCAL_SYMBOL: b3Vector3.h<489:10> [b3Vector3.h <492:23 492:24>]
REFERENCE_CALL b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <493:6 493:6>]
LOCAL_SYMBOL: b3Vector3.h<491:10> [b3Vector3.h <493:3 493:4>]
REFERENCE_CALL b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> __m128 _mm_add_ps(__m128, __m128) [b3Vector3.h <493:8 493:17>]
REFERENCE_CALL b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <493:19 493:20>]
LOCAL_SYMBOL: b3Vector3.h<491:10> [b3Vector3.h <493:19 493:20>]
REFERENCE_CALL b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <493:23 493:29>]
REFERENCE_USAGE b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <493:23 493:29>]
REFERENCE_USAGE b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <493:23 493:29>]
REFERENCE_CALL b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> b3Vector3 b3MakeVector3(b3SimdFloat4) [b3Vector3.h <495:10 495:22>]
REFERENCE_CALL b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <495:24 495:25>]
LOCAL_SYMBOL: b3Vector3.h<491:10> [b3Vector3.h <495:24 495:25>]
SYMBOL_METHOD public b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) [b3Vector3.h <512:2 <512:29 512:38> 524:2>]
REFERENCE_TYPE_USAGE b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> b3Vector3 [b3Vector3.h <512:18 512:26>]
LOCAL_SYMBOL: b3Vector3.h<512:57> [b3Vector3.h <512:57 512:57>]
REFERENCE_TYPE_USAGE b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> b3Vector3 [b3Vector3.h <512:46 512:54>]
REFERENCE_CALL b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <515:11 515:11>]
REFERENCE_USAGE b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <515:3 515:9>]
REFERENCE_USAGE b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <515:3 515:9>]
REFERENCE_CALL b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> __m128 _mm_mul_ps(__m128, __m128) [b3Vector3.h <515:13 515:22>]
REFERENCE_CALL b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <515:24 515:30>]
REFERENCE_USAGE b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <515:24 515:30>]
REFERENCE_USAGE b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <515:24 515:30>]
REFERENCE_CALL b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <515:35 515:41>]
REFERENCE_USAGE b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <515:35 515:41>]
REFERENCE_USAGE b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <515:35 515:41>]
LOCAL_SYMBOL: b3Vector3.h<512:57> [b3Vector3.h <515:33 515:33>]
SYMBOL_METHOD public const b3Scalar & b3Vector3::getX() const [b3Vector3.h <527:3 <527:35 527:38> 527:70>]
REFERENCE_TYPE_USAGE const b3Scalar & b3Vector3::getX() const -> b3Scalar [b3Vector3.h <527:25 527:32>]
REFERENCE_USAGE const b3Scalar & b3Vector3::getX() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <527:57 527:64>]
REFERENCE_USAGE const b3Scalar & b3Vector3::getX() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <527:57 527:64>]
SYMBOL_METHOD public const b3Scalar & b3Vector3::getY() const [b3Vector3.h <529:3 <529:35 529:38> 529:70>]
REFERENCE_TYPE_USAGE const b3Scalar & b3Vector3::getY() const -> b3Scalar [b3Vector3.h <529:25 529:32>]
REFERENCE_USAGE const b3Scalar & b3Vector3::getY() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <529:57 529:64>]
REFERENCE_USAGE const b3Scalar & b3Vector3::getY() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <529:57 529:64>]
SYMBOL_METHOD public const b3Scalar & b3Vector3::getZ() const [b3Vector3.h <531:3 <531:35 531:38> 531:70>]
REFERENCE_TYPE_USAGE const b3Scalar & b3Vector3::getZ() const -> b3Scalar [b3Vector3.h <531:25 531:32>]
REFERENCE_USAGE const b3Scalar & b3Vector3::getZ() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <531:57 531:64>]
REFERENCE_USAGE const b3Scalar & b3Vector3::getZ() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <531:57 531:64>]
SYMBOL_METHOD public const b3Scalar & b3Vector3::getW() const [b3Vector3.h <533:3 <533:35 533:38> 533:70>]
REFERENCE_TYPE_USAGE const b3Scalar & b3Vector3::getW() const -> b3Scalar [b3Vector3.h <533:25 533:32>]
REFERENCE_USAGE const b3Scalar & b3Vector3::getW() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <533:57 533:64>]
REFERENCE_USAGE const b3Scalar & b3Vector3::getW() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <533:57 533:64>]
SYMBOL_METHOD public void b3Vector3::setX(b3Scalar) [b3Vector3.h <536:3 <536:24 536:27> 536:61>]
REFERENCE_TYPE_USAGE void b3Vector3::setX(b3Scalar) -> void [b3Vector3.h <536:19 536:22>]
LOCAL_SYMBOL: b3Vector3.h<536:38> [b3Vector3.h <536:38 536:39>]
REFERENCE_TYPE_USAGE void b3Vector3::setX(b3Scalar) -> b3Scalar [b3Vector3.h <536:29 536:36>]
REFERENCE_USAGE void b3Vector3::setX(b3Scalar) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <536:44 536:51>]
REFERENCE_USAGE void b3Vector3::setX(b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <536:44 536:51>]
LOCAL_SYMBOL: b3Vector3.h<536:38> [b3Vector3.h <536:58 536:59>]
SYMBOL_METHOD public void b3Vector3::setY(b3Scalar) [b3Vector3.h <538:3 <538:24 538:27> 538:61>]
REFERENCE_TYPE_USAGE void b3Vector3::setY(b3Scalar) -> void [b3Vector3.h <538:19 538:22>]
LOCAL_SYMBOL: b3Vector3.h<538:38> [b3Vector3.h <538:38 538:39>]
REFERENCE_TYPE_USAGE void b3Vector3::setY(b3Scalar) -> b3Scalar [b3Vector3.h <538:29 538:36>]
REFERENCE_USAGE void b3Vector3::setY(b3Scalar) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <538:44 538:51>]
REFERENCE_USAGE void b3Vector3::setY(b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <538:44 538:51>]
LOCAL_SYMBOL: b3Vector3.h<538:38> [b3Vector3.h <538:58 538:59>]
SYMBOL_METHOD public void b3Vector3::setZ(b3Scalar) [b3Vector3.h <540:3 <540:24 540:27> 540:61>]
REFERENCE_TYPE_USAGE void b3Vector3::setZ(b3Scalar) -> void [b3Vector3.h <540:19 540:22>]
LOCAL_SYMBOL: b3Vector3.h<540:38> [b3Vector3.h <540:38 540:39>]
REFERENCE_TYPE_USAGE void b3Vector3::setZ(b3Scalar) -> b3Scalar [b3Vector3.h <540:29 540:36>]
REFERENCE_USAGE void b3Vector3::setZ(b3Scalar) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <540:44 540:51>]
REFERENCE_USAGE void b3Vector3::setZ(b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <540:44 540:51>]
LOCAL_SYMBOL: b3Vector3.h<540:38> [b3Vector3.h <540:58 540:59>]
SYMBOL_METHOD public void b3Vector3::setW(b3Scalar) [b3Vector3.h <542:3 <542:24 542:27> 542:61>]
REFERENCE_TYPE_USAGE void b3Vector3::setW(b3Scalar) -> void [b3Vector3.h <542:19 542:22>]
LOCAL_SYMBOL: b3Vector3.h<542:38> [b3Vector3.h <542:38 542:39>]
REFERENCE_TYPE_USAGE void b3Vector3::setW(b3Scalar) -> b3Scalar [b3Vector3.h <542:29 542:36>]
REFERENCE_USAGE void b3Vector3::setW(b3Scalar) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <542:44 542:51>]
REFERENCE_USAGE void b3Vector3::setW(b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <542:44 542:51>]
LOCAL_SYMBOL: b3Vector3.h<542:38> [b3Vector3.h <542:58 542:59>]
SYMBOL_METHOD public b3Scalar * b3Vector3::operator float *() [b3Vector3.h <547:2 <547:18 547:42> 547:75>]
REFERENCE_TYPE_USAGE b3Scalar * b3Vector3::operator float *() -> b3Scalar [b3Vector3.h <547:33 547:40>]
REFERENCE_USAGE b3Scalar * b3Vector3::operator float *() -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <547:62 547:69>]
REFERENCE_USAGE b3Scalar * b3Vector3::operator float *() -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <547:62 547:69>]
SYMBOL_METHOD public const b3Scalar * b3Vector3::operator const float *() const [b3Vector3.h <548:2 <548:18 548:42> 548:75>]
REFERENCE_TYPE_USAGE const b3Scalar * b3Vector3::operator const float *() const -> b3Scalar [b3Vector3.h <548:33 548:40>]
REFERENCE_USAGE const b3Scalar * b3Vector3::operator const float *() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <548:62 548:69>]
REFERENCE_USAGE const b3Scalar * b3Vector3::operator const float *() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <548:62 548:69>]
SYMBOL_METHOD public bool b3Vector3::operator==(const b3Vector3 &) const [b3Vector3.h <550:2 <550:23 550:32> 560:2>]
REFERENCE_TYPE_USAGE bool b3Vector3::operator==(const b3Vector3 &) const -> bool [b3Vector3.h <550:18 550:21>]
LOCAL_SYMBOL: b3Vector3.h<550:51> [b3Vector3.h <550:51 550:55>]
REFERENCE_TYPE_USAGE bool b3Vector3::operator==(const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <550:40 550:48>]
SYMBOL_FUNCTION int _mm_movemask_ps(__m128)
REFERENCE_CALL bool b3Vector3::operator==(const b3Vector3 &) const -> int _mm_movemask_ps(__m128) [b3Vector3.h <553:24 553:38>]
REFERENCE_TYPE_USAGE bool b3Vector3::operator==(const b3Vector3 &) const -> __m128 [b3Vector3.h <553:41 553:46>]
SYMBOL_FUNCTION __m128 _mm_cmpeq_ps(__m128, __m128)
REFERENCE_CALL bool b3Vector3::operator==(const b3Vector3 &) const -> __m128 _mm_cmpeq_ps(__m128, __m128) [b3Vector3.h <553:48 553:59>]
REFERENCE_CALL bool b3Vector3::operator==(const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <553:61 553:67>]
REFERENCE_USAGE bool b3Vector3::operator==(const b3Vector3 &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <553:61 553:67>]
REFERENCE_USAGE bool b3Vector3::operator==(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <553:61 553:67>]
REFERENCE_CALL bool b3Vector3::operator==(const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <553:76 553:82>]
REFERENCE_USAGE bool b3Vector3::operator==(const b3Vector3 &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <553:76 553:82>]
REFERENCE_USAGE bool b3Vector3::operator==(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <553:76 553:82>]
LOCAL_SYMBOL: b3Vector3.h<550:51> [b3Vector3.h <553:70 553:74>]
SYMBOL_METHOD public bool b3Vector3::operator!=(const b3Vector3 &) const [b3Vector3.h <562:2 <562:23 562:32> 565:2>]
REFERENCE_TYPE_USAGE bool b3Vector3::operator!=(const b3Vector3 &) const -> bool [b3Vector3.h <562:18 562:21>]
LOCAL_SYMBOL: b3Vector3.h<562:51> [b3Vector3.h <562:51 562:55>]
REFERENCE_TYPE_USAGE bool b3Vector3::operator!=(const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <562:40 562:48>]
SYMBOL_FUNCTION bool b3Vector3::operator==(const b3Vector3 &) const
REFERENCE_CALL bool b3Vector3::operator!=(const b3Vector3 &) const -> bool b3Vector3::operator==(const b3Vector3 &) const [b3Vector3.h <564:18 564:19>]
LOCAL_SYMBOL: b3Vector3.h<562:51> [b3Vector3.h <564:21 564:25>]
SYMBOL_METHOD public void b3Vector3::setMax(const b3Vector3 &) [b3Vector3.h <570:2 <570:23 570:28> 582:2>]
REFERENCE_TYPE_USAGE void b3Vector3::setMax(const b3Vector3 &) -> void [b3Vector3.h <570:18 570:21>]
LOCAL_SYMBOL: b3Vector3.h<570:47> [b3Vector3.h <570:47 570:51>]
REFERENCE_TYPE_USAGE void b3Vector3::setMax(const b3Vector3 &) -> b3Vector3 [b3Vector3.h <570:36 570:44>]
REFERENCE_CALL void b3Vector3::setMax(const b3Vector3 &) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <573:11 573:11>]
REFERENCE_USAGE void b3Vector3::setMax(const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <573:3 573:9>]
REFERENCE_USAGE void b3Vector3::setMax(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <573:3 573:9>]
SYMBOL_FUNCTION __m128 _mm_max_ps(__m128, __m128)
REFERENCE_CALL void b3Vector3::setMax(const b3Vector3 &) -> __m128 _mm_max_ps(__m128, __m128) [b3Vector3.h <573:13 573:22>]
REFERENCE_CALL void b3Vector3::setMax(const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <573:24 573:30>]
REFERENCE_USAGE void b3Vector3::setMax(const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <573:24 573:30>]
REFERENCE_USAGE void b3Vector3::setMax(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <573:24 573:30>]
REFERENCE_CALL void b3Vector3::setMax(const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <573:39 573:45>]
REFERENCE_USAGE void b3Vector3::setMax(const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <573:39 573:45>]
REFERENCE_USAGE void b3Vector3::setMax(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <573:39 573:45>]
LOCAL_SYMBOL: b3Vector3.h<570:47> [b3Vector3.h <573:33 573:37>]
SYMBOL_METHOD public void b3Vector3::setMin(const b3Vector3 &) [b3Vector3.h <587:2 <587:23 587:28> 599:2>]
REFERENCE_TYPE_USAGE void b3Vector3::setMin(const b3Vector3 &) -> void [b3Vector3.h <587:18 587:21>]
LOCAL_SYMBOL: b3Vector3.h<587:47> [b3Vector3.h <587:47 587:51>]
REFERENCE_TYPE_USAGE void b3Vector3::setMin(const b3Vector3 &) -> b3Vector3 [b3Vector3.h <587:36 587:44>]
REFERENCE_CALL void b3Vector3::setMin(const b3Vector3 &) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <590:11 590:11>]
REFERENCE_USAGE void b3Vector3::setMin(const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <590:3 590:9>]
REFERENCE_USAGE void b3Vector3::setMin(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <590:3 590:9>]
SYMBOL_FUNCTION __m128 _mm_min_ps(__m128, __m128)
REFERENCE_CALL void b3Vector3::setMin(const b3Vector3 &) -> __m128 _mm_min_ps(__m128, __m128) [b3Vector3.h <590:13 590:22>]
REFERENCE_CALL void b3Vector3::setMin(const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <590:24 590:30>]
REFERENCE_USAGE void b3Vector3::setMin(const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <590:24 590:30>]
REFERENCE_USAGE void b3Vector3::setMin(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <590:24 590:30>]
REFERENCE_CALL void b3Vector3::setMin(const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <590:39 590:45>]
REFERENCE_USAGE void b3Vector3::setMin(const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <590:39 590:45>]
REFERENCE_USAGE void b3Vector3::setMin(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <590:39 590:45>]
LOCAL_SYMBOL: b3Vector3.h<587:47> [b3Vector3.h <590:33 590:37>]
SYMBOL_METHOD public void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) [b3Vector3.h <601:2 <601:24 601:31> 607:2>]
REFERENCE_TYPE_USAGE void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> void [b3Vector3.h <601:18 601:21>]
LOCAL_SYMBOL: b3Vector3.h<601:49> [b3Vector3.h <601:49 601:50>]
REFERENCE_TYPE_USAGE void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Scalar [b3Vector3.h <601:39 601:46>]
LOCAL_SYMBOL: b3Vector3.h<601:69> [b3Vector3.h <601:69 601:70>]
REFERENCE_TYPE_USAGE void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Scalar [b3Vector3.h <601:59 601:66>]
LOCAL_SYMBOL: b3Vector3.h<601:89> [b3Vector3.h <601:89 601:90>]
REFERENCE_TYPE_USAGE void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Scalar [b3Vector3.h <601:79 601:86>]
REFERENCE_USAGE void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <603:3 603:10>]
REFERENCE_USAGE void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <603:3 603:10>]
LOCAL_SYMBOL: b3Vector3.h<601:49> [b3Vector3.h <603:15 603:16>]
REFERENCE_USAGE void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <604:3 604:10>]
REFERENCE_USAGE void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <604:3 604:10>]
LOCAL_SYMBOL: b3Vector3.h<601:69> [b3Vector3.h <604:15 604:16>]
REFERENCE_USAGE void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <605:3 605:10>]
REFERENCE_USAGE void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <605:3 605:10>]
LOCAL_SYMBOL: b3Vector3.h<601:89> [b3Vector3.h <605:15 605:16>]
REFERENCE_USAGE void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <606:3 606:10>]
REFERENCE_USAGE void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <606:3 606:10>]
REFERENCE_TYPE_USAGE void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Scalar [b3Vector3.h <606:17 606:24>]
SYMBOL_METHOD public void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const [b3Vector3.h <609:2 <609:7 609:28> 630:2>]
REFERENCE_TYPE_USAGE void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> void [b3Vector3.h <609:2 609:5>]
LOCAL_SYMBOL: b3Vector3.h<609:41> [b3Vector3.h <609:41 609:42>]
REFERENCE_TYPE_USAGE void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> b3Vector3 [b3Vector3.h <609:30 609:38>]
LOCAL_SYMBOL: b3Vector3.h<609:55> [b3Vector3.h <609:55 609:56>]
REFERENCE_TYPE_USAGE void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> b3Vector3 [b3Vector3.h <609:44 609:52>]
LOCAL_SYMBOL: b3Vector3.h<609:69> [b3Vector3.h <609:69 609:70>]
REFERENCE_TYPE_USAGE void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> b3Vector3 [b3Vector3.h <609:58 609:66>]
LOCAL_SYMBOL: b3Vector3.h<613:10> [b3Vector3.h <613:10 613:10>]
REFERENCE_TYPE_USAGE void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> __m128 [b3Vector3.h <613:3 613:8>]
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> __m128 _mm_and_ps(__m128, __m128) [b3Vector3.h <613:15 613:24>]
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <613:26 613:32>]
REFERENCE_USAGE void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <613:26 613:32>]
REFERENCE_USAGE void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <613:26 613:32>]
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> __m128 _mm_castsi128_ps(__m128i) [b3Vector3.h <613:35 613:46>]
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> __m128i _mm_set_epi32(int, int, int, int) [b3Vector3.h <50:22 50:34>]
LOCAL_SYMBOL: b3Vector3.h<614:10> [b3Vector3.h <614:10 614:11>]
REFERENCE_TYPE_USAGE void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> __m128 [b3Vector3.h <614:3 614:8>]
SYMBOL_FUNCTION __m128 _mm_xor_ps(__m128, __m128)
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> __m128 _mm_xor_ps(__m128, __m128) [b3Vector3.h <614:15 614:24>]
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <614:26 614:37>]
REFERENCE_USAGE void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> const __m128 b3vMzeroMask [b3Vector3.h <614:26 614:37>]
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <614:40 614:40>]
LOCAL_SYMBOL: b3Vector3.h<613:10> [b3Vector3.h <614:40 614:40>]
LOCAL_SYMBOL: b3Vector3.h<615:10> [b3Vector3.h <615:10 615:11>]
REFERENCE_TYPE_USAGE void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> __m128 [b3Vector3.h <615:3 615:8>]
SYMBOL_FUNCTION __m128 _mm_movelh_ps(__m128, __m128)
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.h <615:15 615:27>]
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <615:29 615:30>]
LOCAL_SYMBOL: b3Vector3.h<614:10> [b3Vector3.h <615:29 615:30>]
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <615:33 615:33>]
LOCAL_SYMBOL: b3Vector3.h<613:10> [b3Vector3.h <615:33 615:33>]
LOCAL_SYMBOL: b3Vector3.h<617:10> [b3Vector3.h <617:10 617:11>]
REFERENCE_TYPE_USAGE void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> __m128 [b3Vector3.h <617:3 617:8>]
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.h <617:15 617:28>]
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <617:30 617:30>]
LOCAL_SYMBOL: b3Vector3.h<613:10> [b3Vector3.h <617:30 617:30>]
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <617:33 617:34>]
LOCAL_SYMBOL: b3Vector3.h<614:10> [b3Vector3.h <617:33 617:34>]
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <619:12 619:12>]
LOCAL_SYMBOL: b3Vector3.h<614:10> [b3Vector3.h <619:9 619:10>]
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.h <619:14 619:27>]
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <619:29 619:30>]
LOCAL_SYMBOL: b3Vector3.h<614:10> [b3Vector3.h <619:29 619:30>]
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <619:33 619:33>]
LOCAL_SYMBOL: b3Vector3.h<613:10> [b3Vector3.h <619:33 619:33>]
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <620:6 620:6>]
LOCAL_SYMBOL: b3Vector3.h<615:10> [b3Vector3.h <620:3 620:4>]
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.h <620:8 620:21>]
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <620:23 620:24>]
LOCAL_SYMBOL: b3Vector3.h<615:10> [b3Vector3.h <620:23 620:24>]
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <620:27 620:27>]
LOCAL_SYMBOL: b3Vector3.h<613:10> [b3Vector3.h <620:27 620:27>]
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.h <622:15 622:15>]
REFERENCE_USAGE void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <622:7 622:13>]
REFERENCE_USAGE void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <622:7 622:13>]
LOCAL_SYMBOL: b3Vector3.h<609:41> [b3Vector3.h <622:3 622:4>]
LOCAL_SYMBOL: b3Vector3.h<614:10> [b3Vector3.h <622:17 622:18>]
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.h <623:15 623:15>]
REFERENCE_USAGE void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <623:7 623:13>]
REFERENCE_USAGE void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <623:7 623:13>]
LOCAL_SYMBOL: b3Vector3.h<609:55> [b3Vector3.h <623:3 623:4>]
LOCAL_SYMBOL: b3Vector3.h<617:10> [b3Vector3.h <623:17 623:18>]
REFERENCE_CALL void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.h <624:15 624:15>]
REFERENCE_USAGE void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <624:7 624:13>]
REFERENCE_USAGE void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <624:7 624:13>]
LOCAL_SYMBOL: b3Vector3.h<609:69> [b3Vector3.h <624:3 624:4>]
LOCAL_SYMBOL: b3Vector3.h<615:10> [b3Vector3.h <624:17 624:18>]
SYMBOL_METHOD public void b3Vector3::setZero() [b3Vector3.h <632:2 <632:7 632:13> 642:2>]
REFERENCE_TYPE_USAGE void b3Vector3::setZero() -> void [b3Vector3.h <632:2 632:5>]
REFERENCE_CALL void b3Vector3::setZero() -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <635:11 635:11>]
REFERENCE_USAGE void b3Vector3::setZero() -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <635:3 635:9>]
REFERENCE_USAGE void b3Vector3::setZero() -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <635:3 635:9>]
REFERENCE_TYPE_USAGE void b3Vector3::setZero() -> __m128 [b3Vector3.h <635:14 635:19>]
REFERENCE_CALL void b3Vector3::setZero() -> __m128 _mm_xor_ps(__m128, __m128) [b3Vector3.h <635:21 635:30>]
REFERENCE_CALL void b3Vector3::setZero() -> void __m128::__m128(const __m128 &) [b3Vector3.h <635:32 635:38>]
REFERENCE_USAGE void b3Vector3::setZero() -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <635:32 635:38>]
REFERENCE_USAGE void b3Vector3::setZero() -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <635:32 635:38>]
REFERENCE_CALL void b3Vector3::setZero() -> void __m128::__m128(const __m128 &) [b3Vector3.h <635:41 635:47>]
REFERENCE_USAGE void b3Vector3::setZero() -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <635:41 635:47>]
REFERENCE_USAGE void b3Vector3::setZero() -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <635:41 635:47>]
SYMBOL_METHOD public bool b3Vector3::isZero() const [b3Vector3.h <644:2 <644:23 644:28> 647:2>]
REFERENCE_TYPE_USAGE bool b3Vector3::isZero() const -> bool [b3Vector3.h <644:18 644:21>]
REFERENCE_USAGE bool b3Vector3::isZero() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <646:10 646:17>]
REFERENCE_USAGE bool b3Vector3::isZero() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <646:10 646:17>]
REFERENCE_TYPE_USAGE bool b3Vector3::isZero() const -> b3Scalar [b3Vector3.h <646:25 646:32>]
REFERENCE_USAGE bool b3Vector3::isZero() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <646:40 646:47>]
REFERENCE_USAGE bool b3Vector3::isZero() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <646:40 646:47>]
REFERENCE_TYPE_USAGE bool b3Vector3::isZero() const -> b3Scalar [b3Vector3.h <646:55 646:62>]
REFERENCE_USAGE bool b3Vector3::isZero() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <646:70 646:77>]
REFERENCE_USAGE bool b3Vector3::isZero() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <646:70 646:77>]
REFERENCE_TYPE_USAGE bool b3Vector3::isZero() const -> b3Scalar [b3Vector3.h <646:85 646:92>]
SYMBOL_METHOD public bool b3Vector3::fuzzyZero() const [b3Vector3.h <649:2 <649:23 649:31> 652:2>]
REFERENCE_TYPE_USAGE bool b3Vector3::fuzzyZero() const -> bool [b3Vector3.h <649:18 649:21>]
REFERENCE_CALL bool b3Vector3::fuzzyZero() const -> b3Scalar b3Vector3::length2() const [b3Vector3.h <651:10 651:16>]
SYMBOL_STRUCT b3Vector3FloatData [b3Vector3.h <654:40 654:52>]
SYMBOL_METHOD public void b3Vector3::serialize(b3Vector3FloatData &) const [b3Vector3.h <654:23 654:31>]
REFERENCE_TYPE_USAGE void b3Vector3::serialize(b3Vector3FloatData &) const -> void [b3Vector3.h <654:18 654:21>]
LOCAL_SYMBOL: b3Vector3.h<654:55> [b3Vector3.h <654:55 654:61>]
REFERENCE_TYPE_USAGE void b3Vector3::serialize(b3Vector3FloatData &) const -> b3Vector3FloatData [b3Vector3.h <654:40 654:52>]
SYMBOL_METHOD public void b3Vector3::deSerialize(const b3Vector3FloatData &) [b3Vector3.h <656:23 656:33>]
REFERENCE_TYPE_USAGE void b3Vector3::deSerialize(const b3Vector3FloatData &) -> void [b3Vector3.h <656:18 656:21>]
LOCAL_SYMBOL: b3Vector3.h<656:63> [b3Vector3.h <656:63 656:68>]
REFERENCE_TYPE_USAGE void b3Vector3::deSerialize(const b3Vector3FloatData &) -> b3Vector3FloatData [b3Vector3.h <656:48 656:60>]
SYMBOL_METHOD public void b3Vector3::serializeFloat(b3Vector3FloatData &) const [b3Vector3.h <658:23 658:36>]
REFERENCE_TYPE_USAGE void b3Vector3::serializeFloat(b3Vector3FloatData &) const -> void [b3Vector3.h <658:18 658:21>]
LOCAL_SYMBOL: b3Vector3.h<658:65> [b3Vector3.h <658:65 658:71>]
REFERENCE_TYPE_USAGE void b3Vector3::serializeFloat(b3Vector3FloatData &) const -> b3Vector3FloatData [b3Vector3.h <658:45 658:62>]
SYMBOL_METHOD public void b3Vector3::deSerializeFloat(const b3Vector3FloatData &) [b3Vector3.h <660:23 660:38>]
REFERENCE_TYPE_USAGE void b3Vector3::deSerializeFloat(const b3Vector3FloatData &) -> void [b3Vector3.h <660:18 660:21>]
LOCAL_SYMBOL: b3Vector3.h<660:73> [b3Vector3.h <660:73 660:78>]
REFERENCE_TYPE_USAGE void b3Vector3::deSerializeFloat(const b3Vector3FloatData &) -> b3Vector3FloatData [b3Vector3.h <660:53 660:70>]
SYMBOL_STRUCT b3Vector3DoubleData [b3Vector3.h <662:46 662:64>]
SYMBOL_METHOD public void b3Vector3::serializeDouble(b3Vector3DoubleData &) const [b3Vector3.h <662:23 662:37>]
REFERENCE_TYPE_USAGE void b3Vector3::serializeDouble(b3Vector3DoubleData &) const -> void [b3Vector3.h <662:18 662:21>]
LOCAL_SYMBOL: b3Vector3.h<662:67> [b3Vector3.h <662:67 662:73>]
REFERENCE_TYPE_USAGE void b3Vector3::serializeDouble(b3Vector3DoubleData &) const -> b3Vector3DoubleData [b3Vector3.h <662:46 662:64>]
SYMBOL_METHOD public void b3Vector3::deSerializeDouble(const b3Vector3DoubleData &) [b3Vector3.h <664:23 664:39>]
REFERENCE_TYPE_USAGE void b3Vector3::deSerializeDouble(const b3Vector3DoubleData &) -> void [b3Vector3.h <664:18 664:21>]
LOCAL_SYMBOL: b3Vector3.h<664:75> [b3Vector3.h <664:75 664:80>]
REFERENCE_TYPE_USAGE void b3Vector3::deSerializeDouble(const b3Vector3DoubleData &) -> b3Vector3DoubleData [b3Vector3.h <664:54 664:72>]
SYMBOL_METHOD public long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const [b3Vector3.h <670:35 670:40>]
REFERENCE_TYPE_USAGE long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> long [b3Vector3.h <670:27 670:30>]
LOCAL_SYMBOL: b3Vector3.h<670:60> [b3Vector3.h <670:60 670:64>]
REFERENCE_TYPE_USAGE long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> b3Vector3 [b3Vector3.h <670:49 670:57>]
LOCAL_SYMBOL: b3Vector3.h<670:72> [b3Vector3.h <670:72 670:82>]
REFERENCE_TYPE_USAGE long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> long [b3Vector3.h <670:67 670:70>]
LOCAL_SYMBOL: b3Vector3.h<670:95> [b3Vector3.h <670:95 670:100>]
REFERENCE_TYPE_USAGE long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> b3Scalar [b3Vector3.h <670:85 670:92>]
SYMBOL_METHOD public long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const [b3Vector3.h <676:35 676:40>]
REFERENCE_TYPE_USAGE long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> long [b3Vector3.h <676:27 676:30>]
LOCAL_SYMBOL: b3Vector3.h<676:60> [b3Vector3.h <676:60 676:64>]
REFERENCE_TYPE_USAGE long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> b3Vector3 [b3Vector3.h <676:49 676:57>]
LOCAL_SYMBOL: b3Vector3.h<676:72> [b3Vector3.h <676:72 676:82>]
REFERENCE_TYPE_USAGE long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> long [b3Vector3.h <676:67 676:70>]
LOCAL_SYMBOL: b3Vector3.h<676:95> [b3Vector3.h <676:95 676:100>]
REFERENCE_TYPE_USAGE long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> b3Scalar [b3Vector3.h <676:85 676:92>]
SYMBOL_METHOD public b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const [b3Vector3.h <679:5 <679:32 679:35> 708:5>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <679:21 679:29>]
LOCAL_SYMBOL: b3Vector3.h<679:55> [b3Vector3.h <679:55 679:56>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <679:44 679:52>]
LOCAL_SYMBOL: b3Vector3.h<679:76> [b3Vector3.h <679:76 679:77>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <679:65 679:73>]
LOCAL_SYMBOL: b3Vector3.h<679:97> [b3Vector3.h <679:97 679:98>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <679:86 679:94>]
LOCAL_SYMBOL: b3Vector3.h<683:16> [b3Vector3.h <683:16 683:17>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 [b3Vector3.h <683:9 683:14>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_mul_ps(__m128, __m128) [b3Vector3.h <683:21 683:30>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <683:36 683:42>]
REFERENCE_USAGE b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <683:36 683:42>]
REFERENCE_USAGE b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <683:36 683:42>]
LOCAL_SYMBOL: b3Vector3.h<679:55> [b3Vector3.h <683:33 683:34>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <683:51 683:57>]
REFERENCE_USAGE b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <683:51 683:57>]
REFERENCE_USAGE b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <683:51 683:57>]
LOCAL_SYMBOL: b3Vector3.h<684:16> [b3Vector3.h <684:16 684:17>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 [b3Vector3.h <684:9 684:14>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_mul_ps(__m128, __m128) [b3Vector3.h <684:21 684:30>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <684:36 684:42>]
REFERENCE_USAGE b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <684:36 684:42>]
REFERENCE_USAGE b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <684:36 684:42>]
LOCAL_SYMBOL: b3Vector3.h<679:76> [b3Vector3.h <684:33 684:34>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <684:51 684:57>]
REFERENCE_USAGE b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <684:51 684:57>]
REFERENCE_USAGE b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <684:51 684:57>]
LOCAL_SYMBOL: b3Vector3.h<685:16> [b3Vector3.h <685:16 685:17>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 [b3Vector3.h <685:9 685:14>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_mul_ps(__m128, __m128) [b3Vector3.h <685:21 685:30>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <685:36 685:42>]
REFERENCE_USAGE b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <685:36 685:42>]
REFERENCE_USAGE b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <685:36 685:42>]
LOCAL_SYMBOL: b3Vector3.h<679:97> [b3Vector3.h <685:33 685:34>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <685:51 685:57>]
REFERENCE_USAGE b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <685:51 685:57>]
REFERENCE_USAGE b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <685:51 685:57>]
LOCAL_SYMBOL: b3Vector3.h<686:16> [b3Vector3.h <686:16 686:17>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 [b3Vector3.h <686:9 686:14>]
SYMBOL_FUNCTION __m128 _mm_unpacklo_ps(__m128, __m128)
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_unpacklo_ps(__m128, __m128) [b3Vector3.h <686:21 686:35>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <686:38 686:39>]
LOCAL_SYMBOL: b3Vector3.h<683:16> [b3Vector3.h <686:38 686:39>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <686:42 686:43>]
LOCAL_SYMBOL: b3Vector3.h<684:16> [b3Vector3.h <686:42 686:43>]
LOCAL_SYMBOL: b3Vector3.h<687:16> [b3Vector3.h <687:16 687:17>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 [b3Vector3.h <687:9 687:14>]
SYMBOL_FUNCTION __m128 _mm_unpackhi_ps(__m128, __m128)
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_unpackhi_ps(__m128, __m128) [b3Vector3.h <687:21 687:35>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <687:38 687:39>]
LOCAL_SYMBOL: b3Vector3.h<683:16> [b3Vector3.h <687:38 687:39>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <687:42 687:43>]
LOCAL_SYMBOL: b3Vector3.h<684:16> [b3Vector3.h <687:42 687:43>]
LOCAL_SYMBOL: b3Vector3.h<688:16> [b3Vector3.h <688:16 688:17>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 [b3Vector3.h <688:9 688:14>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_unpacklo_ps(__m128, __m128) [b3Vector3.h <688:21 688:35>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <688:38 688:39>]
LOCAL_SYMBOL: b3Vector3.h<685:16> [b3Vector3.h <688:38 688:39>]
SYMBOL_FUNCTION __m128 _mm_setzero_ps()
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_setzero_ps() [b3Vector3.h <688:42 688:55>]
LOCAL_SYMBOL: b3Vector3.h<689:16> [b3Vector3.h <689:16 689:16>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 [b3Vector3.h <689:9 689:14>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.h <689:20 689:32>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <689:35 689:36>]
LOCAL_SYMBOL: b3Vector3.h<686:16> [b3Vector3.h <689:35 689:36>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <689:39 689:40>]
LOCAL_SYMBOL: b3Vector3.h<688:16> [b3Vector3.h <689:39 689:40>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <690:11 690:11>]
LOCAL_SYMBOL: b3Vector3.h<689:16> [b3Vector3.h <690:9 690:9>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_add_ps(__m128, __m128) [b3Vector3.h <690:13 690:22>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <690:25 690:25>]
LOCAL_SYMBOL: b3Vector3.h<689:16> [b3Vector3.h <690:25 690:25>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.h <690:28 690:40>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <690:43 690:44>]
LOCAL_SYMBOL: b3Vector3.h<688:16> [b3Vector3.h <690:43 690:44>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <690:47 690:48>]
LOCAL_SYMBOL: b3Vector3.h<686:16> [b3Vector3.h <690:47 690:48>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <691:12 691:12>]
LOCAL_SYMBOL: b3Vector3.h<685:16> [b3Vector3.h <691:9 691:10>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_and_ps(__m128, __m128) [b3Vector3.h <691:14 691:23>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <691:26 691:27>]
LOCAL_SYMBOL: b3Vector3.h<685:16> [b3Vector3.h <691:26 691:27>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_castsi128_ps(__m128i) [b3Vector3.h <691:30 691:40>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128i _mm_set_epi32(int, int, int, int) [b3Vector3.h <50:22 50:34>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <692:11 692:11>]
LOCAL_SYMBOL: b3Vector3.h<689:16> [b3Vector3.h <692:9 692:9>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_add_ps(__m128, __m128) [b3Vector3.h <692:13 692:22>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <692:25 692:25>]
LOCAL_SYMBOL: b3Vector3.h<689:16> [b3Vector3.h <692:25 692:25>]
SYMBOL_FUNCTION __m128 _mm_castpd_ps(__m128d)
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128 _mm_castpd_ps(__m128d) [b3Vector3.h <692:28 692:40>]
SYMBOL_FUNCTION __m128d _mm_move_sd(__m128d, __m128d)
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128d _mm_move_sd(__m128d, __m128d) [b3Vector3.h <692:43 692:53>]
SYMBOL_FUNCTION __m128d _mm_castps_pd(__m128)
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> __m128d _mm_castps_pd(__m128) [b3Scalar.h <301:27 301:39>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <692:70 692:71>]
LOCAL_SYMBOL: b3Vector3.h<685:16> [b3Vector3.h <692:70 692:71>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <692:89 692:90>]
LOCAL_SYMBOL: b3Vector3.h<687:16> [b3Vector3.h <692:89 692:90>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3Vector3 b3MakeVector3(b3SimdFloat4) [b3Vector3.h <693:16 693:28>]
REFERENCE_CALL b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <693:30 693:30>]
LOCAL_SYMBOL: b3Vector3.h<689:16> [b3Vector3.h <693:30 693:30>]
SYMBOL_METHOD public void b3Vector3::b3Vector3() [b3Vector3.h <92:31 <92:31 92:39> 92:39>]
SYMBOL_METHOD public void b3Vector3::b3Vector3(const b3Vector3 &) [b3Vector3.h <92:31 <92:31 92:39> 92:39>]
REFERENCE_USAGE void b3Vector3::b3Vector3(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <92:31 92:39>]
SYMBOL_FUNCTION void b3Vector3::anonymous union (b3Vector3.h<96:9>)::(const b3Vector3::anonymous union (b3Vector3.h<96:9>) &)
REFERENCE_CALL void b3Vector3::b3Vector3(const b3Vector3 &) -> void b3Vector3::anonymous union (b3Vector3.h<96:9>)::(const b3Vector3::anonymous union (b3Vector3.h<96:9>) &) [b3Vector3.h <92:31 92:39>]
LOCAL_SYMBOL: b3Vector3.h<92:31> [b3Vector3.h <92:31 92:39>]
SYMBOL_METHOD public void b3Vector3::b3Vector3(b3Vector3 &&) [b3Vector3.h <92:31 <92:31 92:39> 92:39>]
REFERENCE_USAGE void b3Vector3::b3Vector3(b3Vector3 &&) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <92:31 92:39>]
SYMBOL_FUNCTION void b3Vector3::anonymous union (b3Vector3.h<96:9>)::(b3Vector3::anonymous union (b3Vector3.h<96:9>) &&)
REFERENCE_CALL void b3Vector3::b3Vector3(b3Vector3 &&) -> void b3Vector3::anonymous union (b3Vector3.h<96:9>)::(b3Vector3::anonymous union (b3Vector3.h<96:9>) &&) [b3Vector3.h <92:31 92:39>]
REFERENCE_TYPE_USAGE void b3Vector3::b3Vector3(b3Vector3 &&) -> b3Vector3 [b3Vector3.h <92:31 92:39>]
SYMBOL_METHOD public void b3Vector3::~b3Vector3() [b3Vector3.h <92:31 92:39>]
SYMBOL_METHOD public b3Vector3 & b3Vector3::operator=(const b3Vector3 &) [b3Vector3.h <92:31 <92:31 92:39> 92:39>]
SYMBOL_FUNCTION b3Vector3::anonymous union (b3Vector3.h<96:9>) & b3Vector3::anonymous union (b3Vector3.h<96:9>)::operator=(const b3Vector3::anonymous union (b3Vector3.h<96:9>) &)
REFERENCE_CALL b3Vector3 & b3Vector3::operator=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) & b3Vector3::anonymous union (b3Vector3.h<96:9>)::operator=(const b3Vector3::anonymous union (b3Vector3.h<96:9>) &) [b3Vector3.h <92:31 92:39>]
SYMBOL_UNION b3Vector3::anonymous union (b3Vector3.h<96:9>)
QUALIFIER: b3Vector3::anonymous union (b3Vector3.h<96:9>) [b3Vector3.h <92:31 92:39>]
REFERENCE_USAGE b3Vector3 & b3Vector3::operator=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <92:31 92:39>]
SYMBOL_METHOD public b3Vector3 & b3Vector3::operator=(b3Vector3 &&) [b3Vector3.h <92:31 92:39>]
SYMBOL_FUNCTION b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <712:1 <713:1 713:9> 725:1>]
REFERENCE_TYPE_USAGE b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <712:17 712:25>]
LOCAL_SYMBOL: b3Vector3.h<713:28> [b3Vector3.h <713:28 713:29>]
REFERENCE_TYPE_USAGE b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <713:17 713:25>]
LOCAL_SYMBOL: b3Vector3.h<713:49> [b3Vector3.h <713:49 713:50>]
REFERENCE_TYPE_USAGE b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <713:38 713:46>]
REFERENCE_CALL b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 b3MakeVector3(b3SimdFloat4) [b3Vector3.h <716:9 716:21>]
REFERENCE_CALL b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> __m128 _mm_add_ps(__m128, __m128) [b3Vector3.h <716:23 716:32>]
REFERENCE_CALL b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <716:37 716:43>]
REFERENCE_USAGE b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <716:37 716:43>]
REFERENCE_USAGE b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <716:37 716:43>]
LOCAL_SYMBOL: b3Vector3.h<713:28> [b3Vector3.h <716:34 716:35>]
REFERENCE_CALL b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <716:49 716:55>]
REFERENCE_USAGE b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <716:49 716:55>]
REFERENCE_USAGE b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <716:49 716:55>]
LOCAL_SYMBOL: b3Vector3.h<713:49> [b3Vector3.h <716:46 716:47>]
SYMBOL_FUNCTION b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <728:1 <729:1 729:9> 741:1>]
REFERENCE_TYPE_USAGE b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <728:17 728:25>]
LOCAL_SYMBOL: b3Vector3.h<729:28> [b3Vector3.h <729:28 729:29>]
REFERENCE_TYPE_USAGE b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <729:17 729:25>]
LOCAL_SYMBOL: b3Vector3.h<729:49> [b3Vector3.h <729:49 729:50>]
REFERENCE_TYPE_USAGE b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <729:38 729:46>]
REFERENCE_CALL b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 b3MakeVector3(b3SimdFloat4) [b3Vector3.h <732:9 732:21>]
REFERENCE_CALL b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> __m128 _mm_mul_ps(__m128, __m128) [b3Vector3.h <732:23 732:32>]
REFERENCE_CALL b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <732:37 732:43>]
REFERENCE_USAGE b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <732:37 732:43>]
REFERENCE_USAGE b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <732:37 732:43>]
LOCAL_SYMBOL: b3Vector3.h<729:28> [b3Vector3.h <732:34 732:35>]
REFERENCE_CALL b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <732:49 732:55>]
REFERENCE_USAGE b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <732:49 732:55>]
REFERENCE_USAGE b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <732:49 732:55>]
LOCAL_SYMBOL: b3Vector3.h<729:49> [b3Vector3.h <732:46 732:47>]
SYMBOL_FUNCTION b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <744:1 <745:1 745:9> 761:1>]
REFERENCE_TYPE_USAGE b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <744:17 744:25>]
LOCAL_SYMBOL: b3Vector3.h<745:28> [b3Vector3.h <745:28 745:29>]
REFERENCE_TYPE_USAGE b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <745:17 745:25>]
LOCAL_SYMBOL: b3Vector3.h<745:49> [b3Vector3.h <745:49 745:50>]
REFERENCE_TYPE_USAGE b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <745:38 745:46>]
LOCAL_SYMBOL: b3Vector3.h<750:9> [b3Vector3.h <750:9 750:9>]
REFERENCE_TYPE_USAGE b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> __m128 [b3Vector3.h <750:2 750:7>]
REFERENCE_CALL b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> __m128 _mm_sub_ps(__m128, __m128) [b3Vector3.h <750:13 750:22>]
REFERENCE_CALL b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <750:27 750:33>]
REFERENCE_USAGE b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <750:27 750:33>]
REFERENCE_USAGE b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <750:27 750:33>]
LOCAL_SYMBOL: b3Vector3.h<745:28> [b3Vector3.h <750:24 750:25>]
REFERENCE_CALL b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <750:39 750:45>]
REFERENCE_USAGE b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <750:39 750:45>]
REFERENCE_USAGE b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <750:39 750:45>]
LOCAL_SYMBOL: b3Vector3.h<745:49> [b3Vector3.h <750:36 750:37>]
REFERENCE_CALL b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 b3MakeVector3(b3SimdFloat4) [b3Vector3.h <751:9 751:21>]
REFERENCE_CALL b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> __m128 _mm_and_ps(__m128, __m128) [b3Vector3.h <751:23 751:32>]
REFERENCE_CALL b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <751:34 751:34>]
LOCAL_SYMBOL: b3Vector3.h<750:9> [b3Vector3.h <751:34 751:34>]
REFERENCE_CALL b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> __m128 _mm_castsi128_ps(__m128i) [b3Vector3.h <751:37 751:48>]
REFERENCE_CALL b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> __m128i _mm_set_epi32(int, int, int, int) [b3Vector3.h <50:22 50:34>]
SYMBOL_FUNCTION b3Vector3 operator-(const b3Vector3 &) [b3Vector3.h <764:1 <765:1 765:9> 775:1>]
REFERENCE_TYPE_USAGE b3Vector3 operator-(const b3Vector3 &) -> b3Vector3 [b3Vector3.h <764:17 764:25>]
LOCAL_SYMBOL: b3Vector3.h<765:28> [b3Vector3.h <765:28 765:28>]
REFERENCE_TYPE_USAGE b3Vector3 operator-(const b3Vector3 &) -> b3Vector3 [b3Vector3.h <765:17 765:25>]
LOCAL_SYMBOL: b3Vector3.h<768:9> [b3Vector3.h <768:9 768:9>]
REFERENCE_TYPE_USAGE b3Vector3 operator-(const b3Vector3 &) -> __m128 [b3Vector3.h <768:2 768:7>]
REFERENCE_CALL b3Vector3 operator-(const b3Vector3 &) -> __m128 _mm_xor_ps(__m128, __m128) [b3Vector3.h <768:13 768:22>]
REFERENCE_CALL b3Vector3 operator-(const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <768:26 768:32>]
REFERENCE_USAGE b3Vector3 operator-(const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <768:26 768:32>]
REFERENCE_USAGE b3Vector3 operator-(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <768:26 768:32>]
LOCAL_SYMBOL: b3Vector3.h<765:28> [b3Vector3.h <768:24 768:24>]
REFERENCE_CALL b3Vector3 operator-(const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <768:35 768:46>]
REFERENCE_USAGE b3Vector3 operator-(const b3Vector3 &) -> const __m128 b3vMzeroMask [b3Vector3.h <768:35 768:46>]
REFERENCE_CALL b3Vector3 operator-(const b3Vector3 &) -> b3Vector3 b3MakeVector3(b3SimdFloat4) [b3Vector3.h <769:9 769:21>]
REFERENCE_CALL b3Vector3 operator-(const b3Vector3 &) -> __m128 _mm_and_ps(__m128, __m128) [b3Vector3.h <769:23 769:32>]
REFERENCE_CALL b3Vector3 operator-(const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <769:34 769:34>]
LOCAL_SYMBOL: b3Vector3.h<768:9> [b3Vector3.h <769:34 769:34>]
REFERENCE_CALL b3Vector3 operator-(const b3Vector3 &) -> __m128 _mm_castsi128_ps(__m128i) [b3Vector3.h <769:37 769:48>]
REFERENCE_CALL b3Vector3 operator-(const b3Vector3 &) -> __m128i _mm_set_epi32(int, int, int, int) [b3Vector3.h <50:22 50:34>]
SYMBOL_FUNCTION b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) [b3Vector3.h <778:1 <779:1 779:9> 791:1>]
REFERENCE_TYPE_USAGE b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> b3Vector3 [b3Vector3.h <778:17 778:25>]
LOCAL_SYMBOL: b3Vector3.h<779:28> [b3Vector3.h <779:28 779:28>]
REFERENCE_TYPE_USAGE b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> b3Vector3 [b3Vector3.h <779:17 779:25>]
LOCAL_SYMBOL: b3Vector3.h<779:47> [b3Vector3.h <779:47 779:47>]
REFERENCE_TYPE_USAGE b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> b3Scalar [b3Vector3.h <779:37 779:44>]
LOCAL_SYMBOL: b3Vector3.h<782:9> [b3Vector3.h <782:9 782:10>]
REFERENCE_TYPE_USAGE b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> __m128 [b3Vector3.h <782:2 782:7>]
REFERENCE_CALL b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> __m128 _mm_load_ss(const float *) [b3Vector3.h <782:14 782:24>]
LOCAL_SYMBOL: b3Vector3.h<779:47> [b3Vector3.h <782:27 782:27>]
REFERENCE_CALL b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <783:5 783:5>]
LOCAL_SYMBOL: b3Vector3.h<782:9> [b3Vector3.h <783:2 783:3>]
REFERENCE_CALL b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.h <783:7 783:18>]
REFERENCE_CALL b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <783:7 783:18>]
LOCAL_SYMBOL: b3Vector3.h<782:9> [b3Vector3.h <783:20 783:21>]
REFERENCE_CALL b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> b3Vector3 b3MakeVector3(b3SimdFloat4) [b3Vector3.h <784:9 784:21>]
REFERENCE_CALL b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> __m128 _mm_mul_ps(__m128, __m128) [b3Vector3.h <784:23 784:32>]
REFERENCE_CALL b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <784:36 784:42>]
REFERENCE_USAGE b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <784:36 784:42>]
REFERENCE_USAGE b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <784:36 784:42>]
LOCAL_SYMBOL: b3Vector3.h<779:28> [b3Vector3.h <784:34 784:34>]
REFERENCE_CALL b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <784:45 784:46>]
LOCAL_SYMBOL: b3Vector3.h<782:9> [b3Vector3.h <784:45 784:46>]
SYMBOL_FUNCTION b3Vector3 operator*(const b3Scalar &, const b3Vector3 &) [b3Vector3.h <794:1 <795:1 795:9> 798:1>]
REFERENCE_TYPE_USAGE b3Vector3 operator*(const b3Scalar &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <794:17 794:25>]
LOCAL_SYMBOL: b3Vector3.h<795:27> [b3Vector3.h <795:27 795:27>]
REFERENCE_TYPE_USAGE b3Vector3 operator*(const b3Scalar &, const b3Vector3 &) -> b3Scalar [b3Vector3.h <795:17 795:24>]
LOCAL_SYMBOL: b3Vector3.h<795:47> [b3Vector3.h <795:47 795:47>]
REFERENCE_TYPE_USAGE b3Vector3 operator*(const b3Scalar &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <795:36 795:44>]
SYMBOL_FUNCTION b3Vector3 operator*(const b3Vector3 &, const b3Scalar &)
REFERENCE_CALL b3Vector3 operator*(const b3Scalar &, const b3Vector3 &) -> b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) [b3Vector3.h <797:11 797:11>]
LOCAL_SYMBOL: b3Vector3.h<795:47> [b3Vector3.h <797:9 797:9>]
LOCAL_SYMBOL: b3Vector3.h<795:27> [b3Vector3.h <797:13 797:13>]
SYMBOL_FUNCTION b3Vector3 operator/(const b3Vector3 &, const b3Scalar &) [b3Vector3.h <801:1 <802:1 802:9> 815:1>]
REFERENCE_TYPE_USAGE b3Vector3 operator/(const b3Vector3 &, const b3Scalar &) -> b3Vector3 [b3Vector3.h <801:17 801:25>]
LOCAL_SYMBOL: b3Vector3.h<802:28> [b3Vector3.h <802:28 802:28>]
REFERENCE_TYPE_USAGE b3Vector3 operator/(const b3Vector3 &, const b3Scalar &) -> b3Vector3 [b3Vector3.h <802:17 802:25>]
LOCAL_SYMBOL: b3Vector3.h<802:47> [b3Vector3.h <802:47 802:47>]
REFERENCE_TYPE_USAGE b3Vector3 operator/(const b3Vector3 &, const b3Scalar &) -> b3Scalar [b3Vector3.h <802:37 802:44>]
REFERENCE_CALL b3Vector3 operator/(const b3Vector3 &, const b3Scalar &) -> b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) [b3Vector3.h <813:11 813:11>]
LOCAL_SYMBOL: b3Vector3.h<802:28> [b3Vector3.h <813:9 813:9>]
REFERENCE_TYPE_USAGE b3Vector3 operator/(const b3Vector3 &, const b3Scalar &) -> b3Scalar [b3Vector3.h <813:14 813:21>]
LOCAL_SYMBOL: b3Vector3.h<802:47> [b3Vector3.h <813:30 813:30>]
SYMBOL_FUNCTION b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <818:1 <819:1 819:9> 845:1>]
REFERENCE_TYPE_USAGE b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <818:17 818:25>]
LOCAL_SYMBOL: b3Vector3.h<819:28> [b3Vector3.h <819:28 819:29>]
REFERENCE_TYPE_USAGE b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <819:17 819:25>]
LOCAL_SYMBOL: b3Vector3.h<819:49> [b3Vector3.h <819:49 819:50>]
REFERENCE_TYPE_USAGE b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <819:38 819:46>]
LOCAL_SYMBOL: b3Vector3.h<822:9> [b3Vector3.h <822:9 822:11>]
REFERENCE_TYPE_USAGE b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> __m128 [b3Vector3.h <822:2 822:7>]
SYMBOL_FUNCTION __m128 _mm_div_ps(__m128, __m128)
REFERENCE_CALL b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> __m128 _mm_div_ps(__m128, __m128) [b3Vector3.h <822:15 822:24>]
REFERENCE_CALL b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <822:29 822:35>]
REFERENCE_USAGE b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <822:29 822:35>]
REFERENCE_USAGE b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <822:29 822:35>]
LOCAL_SYMBOL: b3Vector3.h<819:28> [b3Vector3.h <822:26 822:27>]
REFERENCE_CALL b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <822:41 822:47>]
REFERENCE_USAGE b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <822:41 822:47>]
REFERENCE_USAGE b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <822:41 822:47>]
LOCAL_SYMBOL: b3Vector3.h<819:49> [b3Vector3.h <822:38 822:39>]
REFERENCE_CALL b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <823:6 823:6>]
LOCAL_SYMBOL: b3Vector3.h<822:9> [b3Vector3.h <823:2 823:4>]
REFERENCE_CALL b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> __m128 _mm_and_ps(__m128, __m128) [b3Vector3.h <823:8 823:17>]
REFERENCE_CALL b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <823:19 823:21>]
LOCAL_SYMBOL: b3Vector3.h<822:9> [b3Vector3.h <823:19 823:21>]
REFERENCE_CALL b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> __m128 _mm_castsi128_ps(__m128i) [b3Vector3.h <823:24 823:35>]
REFERENCE_CALL b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> __m128i _mm_set_epi32(int, int, int, int) [b3Vector3.h <50:22 50:34>]
REFERENCE_CALL b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 b3MakeVector3(b3SimdFloat4) [b3Vector3.h <824:9 824:21>]
REFERENCE_CALL b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> void __m128::__m128(const __m128 &) [b3Vector3.h <824:23 824:25>]
LOCAL_SYMBOL: b3Vector3.h<822:9> [b3Vector3.h <824:23 824:25>]
SYMBOL_FUNCTION b3Scalar b3Dot(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <848:1 <849:1 849:5> 852:1>]
REFERENCE_TYPE_USAGE b3Scalar b3Dot(const b3Vector3 &, const b3Vector3 &) -> b3Scalar [b3Vector3.h <848:17 848:24>]
LOCAL_SYMBOL: b3Vector3.h<849:24> [b3Vector3.h <849:24 849:25>]
REFERENCE_TYPE_USAGE b3Scalar b3Dot(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <849:13 849:21>]
LOCAL_SYMBOL: b3Vector3.h<849:45> [b3Vector3.h <849:45 849:46>]
REFERENCE_TYPE_USAGE b3Scalar b3Dot(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <849:34 849:42>]
REFERENCE_CALL b3Scalar b3Dot(const b3Vector3 &, const b3Vector3 &) -> b3Scalar b3Vector3::dot(const b3Vector3 &) const [b3Vector3.h <851:12 851:14>]
LOCAL_SYMBOL: b3Vector3.h<849:24> [b3Vector3.h <851:9 851:10>]
LOCAL_SYMBOL: b3Vector3.h<849:45> [b3Vector3.h <851:16 851:17>]
SYMBOL_FUNCTION b3Scalar b3Distance2(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <856:1 <857:1 857:11> 860:1>]
REFERENCE_TYPE_USAGE b3Scalar b3Distance2(const b3Vector3 &, const b3Vector3 &) -> b3Scalar [b3Vector3.h <856:17 856:24>]
LOCAL_SYMBOL: b3Vector3.h<857:30> [b3Vector3.h <857:30 857:31>]
REFERENCE_TYPE_USAGE b3Scalar b3Distance2(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <857:19 857:27>]
LOCAL_SYMBOL: b3Vector3.h<857:51> [b3Vector3.h <857:51 857:52>]
REFERENCE_TYPE_USAGE b3Scalar b3Distance2(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <857:40 857:48>]
SYMBOL_FUNCTION b3Scalar b3Vector3::distance2(const b3Vector3 &) const
REFERENCE_CALL b3Scalar b3Distance2(const b3Vector3 &, const b3Vector3 &) -> b3Scalar b3Vector3::distance2(const b3Vector3 &) const [b3Vector3.h <859:12 859:20>]
LOCAL_SYMBOL: b3Vector3.h<857:30> [b3Vector3.h <859:9 859:10>]
LOCAL_SYMBOL: b3Vector3.h<857:51> [b3Vector3.h <859:22 859:23>]
SYMBOL_FUNCTION b3Scalar b3Distance(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <864:1 <865:1 865:10> 868:1>]
REFERENCE_TYPE_USAGE b3Scalar b3Distance(const b3Vector3 &, const b3Vector3 &) -> b3Scalar [b3Vector3.h <864:17 864:24>]
LOCAL_SYMBOL: b3Vector3.h<865:29> [b3Vector3.h <865:29 865:30>]
REFERENCE_TYPE_USAGE b3Scalar b3Distance(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <865:18 865:26>]
LOCAL_SYMBOL: b3Vector3.h<865:50> [b3Vector3.h <865:50 865:51>]
REFERENCE_TYPE_USAGE b3Scalar b3Distance(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <865:39 865:47>]
SYMBOL_FUNCTION b3Scalar b3Vector3::distance(const b3Vector3 &) const
REFERENCE_CALL b3Scalar b3Distance(const b3Vector3 &, const b3Vector3 &) -> b3Scalar b3Vector3::distance(const b3Vector3 &) const [b3Vector3.h <867:12 867:19>]
LOCAL_SYMBOL: b3Vector3.h<865:29> [b3Vector3.h <867:9 867:10>]
LOCAL_SYMBOL: b3Vector3.h<865:50> [b3Vector3.h <867:21 867:22>]
SYMBOL_FUNCTION b3Scalar b3Angle(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <871:1 <872:1 872:7> 875:1>]
REFERENCE_TYPE_USAGE b3Scalar b3Angle(const b3Vector3 &, const b3Vector3 &) -> b3Scalar [b3Vector3.h <871:17 871:24>]
LOCAL_SYMBOL: b3Vector3.h<872:26> [b3Vector3.h <872:26 872:27>]
REFERENCE_TYPE_USAGE b3Scalar b3Angle(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <872:15 872:23>]
LOCAL_SYMBOL: b3Vector3.h<872:47> [b3Vector3.h <872:47 872:48>]
REFERENCE_TYPE_USAGE b3Scalar b3Angle(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <872:36 872:44>]
SYMBOL_FUNCTION b3Scalar b3Vector3::angle(const b3Vector3 &) const
REFERENCE_CALL b3Scalar b3Angle(const b3Vector3 &, const b3Vector3 &) -> b3Scalar b3Vector3::angle(const b3Vector3 &) const [b3Vector3.h <874:12 874:16>]
LOCAL_SYMBOL: b3Vector3.h<872:26> [b3Vector3.h <874:9 874:10>]
LOCAL_SYMBOL: b3Vector3.h<872:47> [b3Vector3.h <874:18 874:19>]
SYMBOL_FUNCTION b3Vector3 b3Cross(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <878:1 <879:1 879:7> 882:1>]
REFERENCE_TYPE_USAGE b3Vector3 b3Cross(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <878:17 878:25>]
LOCAL_SYMBOL: b3Vector3.h<879:26> [b3Vector3.h <879:26 879:27>]
REFERENCE_TYPE_USAGE b3Vector3 b3Cross(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <879:15 879:23>]
LOCAL_SYMBOL: b3Vector3.h<879:47> [b3Vector3.h <879:47 879:48>]
REFERENCE_TYPE_USAGE b3Vector3 b3Cross(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <879:36 879:44>]
SYMBOL_FUNCTION b3Vector3 b3Vector3::cross(const b3Vector3 &) const
REFERENCE_CALL b3Vector3 b3Cross(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 b3Vector3::cross(const b3Vector3 &) const [b3Vector3.h <881:12 881:16>]
LOCAL_SYMBOL: b3Vector3.h<879:26> [b3Vector3.h <881:9 881:10>]
LOCAL_SYMBOL: b3Vector3.h<879:47> [b3Vector3.h <881:18 881:19>]
SYMBOL_FUNCTION b3Scalar b3Triple(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <884:1 <885:1 885:8> 888:1>]
REFERENCE_TYPE_USAGE b3Scalar b3Triple(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) -> b3Scalar [b3Vector3.h <884:17 884:24>]
LOCAL_SYMBOL: b3Vector3.h<885:27> [b3Vector3.h <885:27 885:28>]
REFERENCE_TYPE_USAGE b3Scalar b3Triple(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <885:16 885:24>]
LOCAL_SYMBOL: b3Vector3.h<885:48> [b3Vector3.h <885:48 885:49>]
REFERENCE_TYPE_USAGE b3Scalar b3Triple(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <885:37 885:45>]
LOCAL_SYMBOL: b3Vector3.h<885:69> [b3Vector3.h <885:69 885:70>]
REFERENCE_TYPE_USAGE b3Scalar b3Triple(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <885:58 885:66>]
SYMBOL_FUNCTION b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const
REFERENCE_CALL b3Scalar b3Triple(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) -> b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const [b3Vector3.h <887:12 887:17>]
LOCAL_SYMBOL: b3Vector3.h<885:27> [b3Vector3.h <887:9 887:10>]
LOCAL_SYMBOL: b3Vector3.h<885:48> [b3Vector3.h <887:19 887:20>]
LOCAL_SYMBOL: b3Vector3.h<885:69> [b3Vector3.h <887:23 887:24>]
SYMBOL_FUNCTION b3Vector3 b3Lerp(const b3Vector3 &, const b3Vector3 &, const b3Scalar &) [b3Vector3.h <894:1 <895:1 895:6> 898:1>]
REFERENCE_TYPE_USAGE b3Vector3 b3Lerp(const b3Vector3 &, const b3Vector3 &, const b3Scalar &) -> b3Vector3 [b3Vector3.h <894:17 894:25>]
LOCAL_SYMBOL: b3Vector3.h<895:25> [b3Vector3.h <895:25 895:26>]
REFERENCE_TYPE_USAGE b3Vector3 b3Lerp(const b3Vector3 &, const b3Vector3 &, const b3Scalar &) -> b3Vector3 [b3Vector3.h <895:14 895:22>]
LOCAL_SYMBOL: b3Vector3.h<895:46> [b3Vector3.h <895:46 895:47>]
REFERENCE_TYPE_USAGE b3Vector3 b3Lerp(const b3Vector3 &, const b3Vector3 &, const b3Scalar &) -> b3Vector3 [b3Vector3.h <895:35 895:43>]
LOCAL_SYMBOL: b3Vector3.h<895:66> [b3Vector3.h <895:66 895:66>]
REFERENCE_TYPE_USAGE b3Vector3 b3Lerp(const b3Vector3 &, const b3Vector3 &, const b3Scalar &) -> b3Scalar [b3Vector3.h <895:56 895:63>]
SYMBOL_FUNCTION b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const
REFERENCE_CALL b3Vector3 b3Lerp(const b3Vector3 &, const b3Vector3 &, const b3Scalar &) -> b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const [b3Vector3.h <897:12 897:15>]
LOCAL_SYMBOL: b3Vector3.h<895:25> [b3Vector3.h <897:9 897:10>]
LOCAL_SYMBOL: b3Vector3.h<895:46> [b3Vector3.h <897:17 897:18>]
LOCAL_SYMBOL: b3Vector3.h<895:66> [b3Vector3.h <897:21 897:21>]
SYMBOL_METHOD public b3Scalar b3Vector3::distance2(const b3Vector3 &) const [b3Vector3.h <902:1 <902:37 902:45> 905:1>]
SYMBOL_CLASS b3Vector3
QUALIFIER: b3Vector3 [b3Vector3.h <902:26 902:34>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::distance2(const b3Vector3 &) const -> b3Scalar [b3Vector3.h <902:17 902:24>]
LOCAL_SYMBOL: b3Vector3.h<902:64> [b3Vector3.h <902:64 902:64>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::distance2(const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <902:53 902:61>]
REFERENCE_CALL b3Scalar b3Vector3::distance2(const b3Vector3 &) const -> b3Scalar b3Vector3::length2() const [b3Vector3.h <904:21 904:27>]
SYMBOL_FUNCTION b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &)
REFERENCE_CALL b3Scalar b3Vector3::distance2(const b3Vector3 &) const -> b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <904:12 904:12>]
LOCAL_SYMBOL: b3Vector3.h<902:64> [b3Vector3.h <904:10 904:10>]
SYMBOL_METHOD public b3Scalar b3Vector3::distance(const b3Vector3 &) const [b3Vector3.h <907:1 <907:37 907:44> 910:1>]
QUALIFIER: b3Vector3 [b3Vector3.h <907:26 907:34>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::distance(const b3Vector3 &) const -> b3Scalar [b3Vector3.h <907:17 907:24>]
LOCAL_SYMBOL: b3Vector3.h<907:63> [b3Vector3.h <907:63 907:63>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector3::distance(const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <907:52 907:60>]
SYMBOL_FUNCTION b3Scalar b3Vector3::length() const
REFERENCE_CALL b3Scalar b3Vector3::distance(const b3Vector3 &) const -> b3Scalar b3Vector3::length() const [b3Vector3.h <909:21 909:26>]
REFERENCE_CALL b3Scalar b3Vector3::distance(const b3Vector3 &) const -> b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <909:12 909:12>]
LOCAL_SYMBOL: b3Vector3.h<907:63> [b3Vector3.h <909:10 909:10>]
SYMBOL_METHOD public b3Vector3 b3Vector3::normalized() const [b3Vector3.h <912:1 <912:38 912:47> 921:1>]
QUALIFIER: b3Vector3 [b3Vector3.h <912:27 912:35>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::normalized() const -> b3Vector3 [b3Vector3.h <912:17 912:25>]
LOCAL_SYMBOL: b3Vector3.h<915:12> [b3Vector3.h <915:12 915:15>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::normalized() const -> b3Vector3 [b3Vector3.h <915:2 915:10>]
SYMBOL_FUNCTION void b3Vector3::b3Vector3(const b3Vector3 &)
REFERENCE_CALL b3Vector3 b3Vector3::normalized() const -> void b3Vector3::b3Vector3(const b3Vector3 &) [b3Vector3.h <915:20 915:23>]
REFERENCE_CALL b3Vector3 b3Vector3::normalized() const -> void b3Vector3::b3Vector3(const b3Vector3 &) [b3Vector3.h <917:24 917:24>]
SYMBOL_FUNCTION b3Vector3 & b3Vector3::normalize()
REFERENCE_CALL b3Vector3 b3Vector3::normalized() const -> b3Vector3 & b3Vector3::normalize() [b3Vector3.h <917:14 917:22>]
LOCAL_SYMBOL: b3Vector3.h<915:12> [b3Vector3.h <917:9 917:12>]
SYMBOL_METHOD public b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const [b3Vector3.h <923:1 <923:38 923:43> 963:1>]
QUALIFIER: b3Vector3 [b3Vector3.h <923:27 923:35>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3 [b3Vector3.h <923:17 923:25>]
LOCAL_SYMBOL: b3Vector3.h<923:63> [b3Vector3.h <923:63 923:67>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3 [b3Vector3.h <923:52 923:60>]
LOCAL_SYMBOL: b3Vector3.h<923:85> [b3Vector3.h <923:85 923:90>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Scalar [b3Vector3.h <923:76 923:83>]
LOCAL_SYMBOL: b3Vector3.h<929:12> [b3Vector3.h <929:12 929:12>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 [b3Vector3.h <929:5 929:10>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 _mm_mul_ps(__m128, __m128) [b3Vector3.h <929:16 929:25>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <929:33 929:39>]
REFERENCE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <929:33 929:39>]
REFERENCE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <929:33 929:39>]
LOCAL_SYMBOL: b3Vector3.h<923:63> [b3Vector3.h <929:27 929:31>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <929:42 929:48>]
REFERENCE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <929:42 929:48>]
REFERENCE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <929:42 929:48>]
LOCAL_SYMBOL: b3Vector3.h<930:11> [b3Vector3.h <930:11 930:14>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Scalar [b3Vector3.h <930:2 930:9>]
SYMBOL_FUNCTION b3Scalar b3Sin(b3Scalar)
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Scalar b3Sin(b3Scalar) [b3Vector3.h <930:18 930:22>]
LOCAL_SYMBOL: b3Vector3.h<923:85> [b3Vector3.h <930:25 930:30>]
LOCAL_SYMBOL: b3Vector3.h<931:12> [b3Vector3.h <931:12 931:12>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 [b3Vector3.h <931:5 931:10>]
SYMBOL_FUNCTION void __m128::__m128(__m128 &&)
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(__m128 &&) [b3Vector3.h <931:54 931:60>]
REFERENCE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <931:54 931:60>]
REFERENCE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <931:54 931:60>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3 b3Vector3::cross(const b3Vector3 &) const [b3Vector3.h <931:22 931:26>]
LOCAL_SYMBOL: b3Vector3.h<923:63> [b3Vector3.h <931:16 931:20>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3 b3MakeVector3(b3SimdFloat4) [b3Vector3.h <931:29 931:41>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <931:43 931:49>]
REFERENCE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <931:43 931:49>]
REFERENCE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <931:43 931:49>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <932:4 932:4>]
LOCAL_SYMBOL: b3Vector3.h<929:12> [b3Vector3.h <932:2 932:2>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 _mm_and_ps(__m128, __m128) [b3Vector3.h <932:6 932:15>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <932:17 932:17>]
LOCAL_SYMBOL: b3Vector3.h<929:12> [b3Vector3.h <932:17 932:17>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 _mm_castsi128_ps(__m128i) [b3Vector3.h <932:20 932:31>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128i _mm_set_epi32(int, int, int, int) [b3Vector3.h <50:22 50:34>]
LOCAL_SYMBOL: b3Vector3.h<933:14> [b3Vector3.h <933:14 933:17>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Scalar [b3Vector3.h <933:5 933:12>]
SYMBOL_FUNCTION b3Scalar b3Cos(b3Scalar)
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Scalar b3Cos(b3Scalar) [b3Vector3.h <933:21 933:25>]
LOCAL_SYMBOL: b3Vector3.h<923:85> [b3Vector3.h <933:28 933:33>]
LOCAL_SYMBOL: b3Vector3.h<935:9> [b3Vector3.h <935:9 935:12>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 [b3Vector3.h <935:2 935:7>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 _mm_load_ss(const float *) [b3Vector3.h <935:16 935:26>]
LOCAL_SYMBOL: b3Vector3.h<930:11> [b3Vector3.h <935:29 935:32>]
LOCAL_SYMBOL: b3Vector3.h<936:12> [b3Vector3.h <936:12 936:15>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 [b3Vector3.h <936:5 936:10>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 _mm_load_ss(const float *) [b3Vector3.h <936:19 936:29>]
LOCAL_SYMBOL: b3Vector3.h<933:14> [b3Vector3.h <936:32 936:35>]
LOCAL_SYMBOL: b3Vector3.h<938:9> [b3Vector3.h <938:9 938:9>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 [b3Vector3.h <938:2 938:7>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.h <938:13 938:24>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <938:13 938:24>]
LOCAL_SYMBOL: b3Vector3.h<929:12> [b3Vector3.h <938:26 938:26>]
LOCAL_SYMBOL: b3Vector3.h<939:9> [b3Vector3.h <939:9 939:9>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 [b3Vector3.h <939:2 939:7>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.h <939:13 939:24>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <939:13 939:24>]
LOCAL_SYMBOL: b3Vector3.h<929:12> [b3Vector3.h <939:26 939:26>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <940:4 940:4>]
LOCAL_SYMBOL: b3Vector3.h<929:12> [b3Vector3.h <940:2 940:2>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 _mm_add_ps(__m128, __m128) [b3Vector3.h <940:6 940:15>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <940:17 940:17>]
LOCAL_SYMBOL: b3Vector3.h<929:12> [b3Vector3.h <940:17 940:17>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <940:20 940:20>]
LOCAL_SYMBOL: b3Vector3.h<938:9> [b3Vector3.h <940:20 940:20>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <941:7 941:7>]
LOCAL_SYMBOL: b3Vector3.h<935:9> [b3Vector3.h <941:2 941:5>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.h <941:9 941:20>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <941:9 941:20>]
LOCAL_SYMBOL: b3Vector3.h<935:9> [b3Vector3.h <941:22 941:25>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <942:4 942:4>]
LOCAL_SYMBOL: b3Vector3.h<929:12> [b3Vector3.h <942:2 942:2>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 _mm_add_ps(__m128, __m128) [b3Vector3.h <942:6 942:15>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <942:17 942:17>]
LOCAL_SYMBOL: b3Vector3.h<929:12> [b3Vector3.h <942:17 942:17>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <942:20 942:20>]
LOCAL_SYMBOL: b3Vector3.h<939:9> [b3Vector3.h <942:20 942:20>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <943:10 943:10>]
LOCAL_SYMBOL: b3Vector3.h<936:12> [b3Vector3.h <943:5 943:8>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.h <943:12 943:23>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <943:12 943:23>]
LOCAL_SYMBOL: b3Vector3.h<936:12> [b3Vector3.h <943:25 943:28>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <945:10 945:10>]
LOCAL_SYMBOL: b3Vector3.h<935:9> [b3Vector3.h <945:5 945:8>]
SYMBOL_FUNCTION __m128 operator*(const __m128, const __m128)
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 operator*(const __m128, const __m128) [b3Vector3.h <945:17 945:17>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <945:12 945:15>]
LOCAL_SYMBOL: b3Vector3.h<935:9> [b3Vector3.h <945:12 945:15>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <945:19 945:19>]
LOCAL_SYMBOL: b3Vector3.h<931:12> [b3Vector3.h <945:19 945:19>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <946:4 946:4>]
LOCAL_SYMBOL: b3Vector3.h<929:12> [b3Vector3.h <946:2 946:2>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 operator*(const __m128, const __m128) [b3Vector3.h <946:8 946:8>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <946:6 946:6>]
LOCAL_SYMBOL: b3Vector3.h<929:12> [b3Vector3.h <946:6 946:6>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <946:16 946:22>]
REFERENCE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <946:16 946:22>]
REFERENCE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <946:16 946:22>]
LOCAL_SYMBOL: b3Vector3.h<923:63> [b3Vector3.h <946:10 946:14>]
LOCAL_SYMBOL: b3Vector3.h<947:9> [b3Vector3.h <947:9 947:9>]
REFERENCE_TYPE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 [b3Vector3.h <947:2 947:7>]
SYMBOL_FUNCTION __m128 operator-(const __m128, const __m128)
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 operator-(const __m128, const __m128) [b3Vector3.h <947:21 947:21>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <947:13 947:19>]
REFERENCE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <947:13 947:19>]
REFERENCE_USAGE b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <947:13 947:19>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <947:23 947:23>]
LOCAL_SYMBOL: b3Vector3.h<929:12> [b3Vector3.h <947:23 947:23>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <949:7 949:7>]
LOCAL_SYMBOL: b3Vector3.h<929:12> [b3Vector3.h <949:5 949:5>]
SYMBOL_FUNCTION __m128 operator+(const __m128, const __m128)
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 operator+(const __m128, const __m128) [b3Vector3.h <949:11 949:11>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <949:9 949:9>]
LOCAL_SYMBOL: b3Vector3.h<929:12> [b3Vector3.h <949:9 949:9>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <949:13 949:16>]
LOCAL_SYMBOL: b3Vector3.h<935:9> [b3Vector3.h <949:13 949:16>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <950:7 950:7>]
LOCAL_SYMBOL: b3Vector3.h<936:12> [b3Vector3.h <950:2 950:5>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 operator*(const __m128, const __m128) [b3Vector3.h <950:14 950:14>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <950:9 950:12>]
LOCAL_SYMBOL: b3Vector3.h<936:12> [b3Vector3.h <950:9 950:12>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <950:16 950:16>]
LOCAL_SYMBOL: b3Vector3.h<947:9> [b3Vector3.h <950:16 950:16>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.h <951:4 951:4>]
LOCAL_SYMBOL: b3Vector3.h<929:12> [b3Vector3.h <951:2 951:2>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> __m128 operator+(const __m128, const __m128) [b3Vector3.h <951:8 951:8>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <951:6 951:6>]
LOCAL_SYMBOL: b3Vector3.h<929:12> [b3Vector3.h <951:6 951:6>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <951:10 951:13>]
LOCAL_SYMBOL: b3Vector3.h<936:12> [b3Vector3.h <951:10 951:13>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3 b3MakeVector3(b3SimdFloat4) [b3Vector3.h <953:9 953:21>]
REFERENCE_CALL b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void __m128::__m128(const __m128 &) [b3Vector3.h <953:23 953:23>]
LOCAL_SYMBOL: b3Vector3.h<929:12> [b3Vector3.h <953:23 953:23>]
SYMBOL_METHOD public long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const [b3Vector3.h <965:1 <965:38 965:43> 1005:1>]
QUALIFIER: b3Vector3 [b3Vector3.h <965:27 965:35>]
REFERENCE_TYPE_USAGE long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> long [b3Vector3.h <965:19 965:22>]
LOCAL_SYMBOL: b3Vector3.h<965:63> [b3Vector3.h <965:63 965:67>]
REFERENCE_TYPE_USAGE long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> b3Vector3 [b3Vector3.h <965:52 965:60>]
LOCAL_SYMBOL: b3Vector3.h<965:75> [b3Vector3.h <965:75 965:85>]
REFERENCE_TYPE_USAGE long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> long [b3Vector3.h <965:70 965:73>]
LOCAL_SYMBOL: b3Vector3.h<965:98> [b3Vector3.h <965:98 965:103>]
REFERENCE_TYPE_USAGE long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> b3Scalar [b3Vector3.h <965:88 965:95>]
LOCAL_SYMBOL: b3Vector3.h<969:20> [b3Vector3.h <969:20 969:32>]
REFERENCE_TYPE_USAGE long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> long [b3Vector3.h <969:15 969:18>]
SYMBOL_FUNCTION long b3_maxdot_large(const float *, const float *, unsigned long, float *) [b3Vector3.h <970:14 970:28>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> long [b3Vector3.h <970:9 970:12>]
LOCAL_SYMBOL: b3Vector3.h<970:44> [b3Vector3.h <970:44 970:48>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.h <970:37 970:41>]
LOCAL_SYMBOL: b3Vector3.h<970:64> [b3Vector3.h <970:64 970:66>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.h <970:57 970:61>]
LOCAL_SYMBOL: b3Vector3.h<970:83> [b3Vector3.h <970:83 970:93>]
SYMBOL_BUILTIN_TYPE unsigned long
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> unsigned long [b3Vector3.h <970:69 970:76>]
LOCAL_SYMBOL: b3Vector3.h<970:103> [b3Vector3.h <970:103 970:108>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.h <970:96 970:100>]
LOCAL_SYMBOL: b3Vector3.h<965:75> [b3Vector3.h <975:9 975:19>]
LOCAL_SYMBOL: b3Vector3.h<969:20> [b3Vector3.h <975:23 975:35>]
LOCAL_SYMBOL: b3Vector3.h<980:18> [b3Vector3.h <980:18 980:23>]
REFERENCE_TYPE_USAGE long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> b3Scalar [b3Vector3.h <980:9 980:16>]
LOCAL_SYMBOL: b3Vector3.h<981:13> [b3Vector3.h <981:13 981:13>]
REFERENCE_TYPE_USAGE long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> int [b3Vector3.h <981:9 981:11>]
LOCAL_SYMBOL: b3Vector3.h<982:13> [b3Vector3.h <982:13 982:19>]
REFERENCE_TYPE_USAGE long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> int [b3Vector3.h <982:9 982:11>]
LOCAL_SYMBOL: b3Vector3.h<981:13> [b3Vector3.h <983:14 983:14>]
LOCAL_SYMBOL: b3Vector3.h<981:13> [b3Vector3.h <983:21 983:21>]
LOCAL_SYMBOL: b3Vector3.h<965:75> [b3Vector3.h <983:25 983:35>]
LOCAL_SYMBOL: b3Vector3.h<981:13> [b3Vector3.h <983:38 983:38>]
LOCAL_SYMBOL: b3Vector3.h<985:22> [b3Vector3.h <985:22 985:24>]
REFERENCE_TYPE_USAGE long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> b3Scalar [b3Vector3.h <985:13 985:20>]
REFERENCE_CALL long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> b3Scalar b3Vector3::dot(const b3Vector3 &) const [b3Vector3.h <985:37 985:39>]
LOCAL_SYMBOL: b3Vector3.h<965:63> [b3Vector3.h <985:28 985:32>]
LOCAL_SYMBOL: b3Vector3.h<981:13> [b3Vector3.h <985:34 985:34>]
LOCAL_SYMBOL: b3Vector3.h<985:22> [b3Vector3.h <987:17 987:19>]
LOCAL_SYMBOL: b3Vector3.h<980:18> [b3Vector3.h <987:23 987:28>]
LOCAL_SYMBOL: b3Vector3.h<980:18> [b3Vector3.h <989:17 989:22>]
LOCAL_SYMBOL: b3Vector3.h<985:22> [b3Vector3.h <989:26 989:28>]
LOCAL_SYMBOL: b3Vector3.h<982:13> [b3Vector3.h <990:17 990:23>]
LOCAL_SYMBOL: b3Vector3.h<981:13> [b3Vector3.h <990:27 990:27>]
LOCAL_SYMBOL: b3Vector3.h<982:13> [b3Vector3.h <995:13 995:19>]
LOCAL_SYMBOL: b3Vector3.h<982:13> [b3Vector3.h <997:4 997:10>]
LOCAL_SYMBOL: b3Vector3.h<965:98> [b3Vector3.h <999:9 999:14>]
LOCAL_SYMBOL: b3Vector3.h<980:18> [b3Vector3.h <999:18 999:23>]
LOCAL_SYMBOL: b3Vector3.h<982:13> [b3Vector3.h <1000:16 1000:22>]
SYMBOL_FUNCTION long b3_maxdot_large(const float *, const float *, unsigned long, float *)
REFERENCE_CALL long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> long b3_maxdot_large(const float *, const float *, unsigned long, float *) [b3Vector3.h <1003:12 1003:26>]
REFERENCE_TYPE_USAGE long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> float [b3Vector3.h <1003:30 1003:34>]
LOCAL_SYMBOL: b3Vector3.h<965:63> [b3Vector3.h <1003:38 1003:42>]
REFERENCE_TYPE_USAGE long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> float [b3Vector3.h <1003:46 1003:50>]
REFERENCE_USAGE long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1003:55 1003:62>]
REFERENCE_USAGE long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1003:55 1003:62>]
LOCAL_SYMBOL: b3Vector3.h<965:75> [b3Vector3.h <1003:68 1003:78>]
LOCAL_SYMBOL: b3Vector3.h<965:98> [b3Vector3.h <1003:82 1003:87>]
SYMBOL_METHOD public long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const [b3Vector3.h <1007:1 <1007:38 1007:43> 1045:1>]
QUALIFIER: b3Vector3 [b3Vector3.h <1007:27 1007:35>]
REFERENCE_TYPE_USAGE long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> long [b3Vector3.h <1007:19 1007:22>]
LOCAL_SYMBOL: b3Vector3.h<1007:63> [b3Vector3.h <1007:63 1007:67>]
REFERENCE_TYPE_USAGE long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> b3Vector3 [b3Vector3.h <1007:52 1007:60>]
LOCAL_SYMBOL: b3Vector3.h<1007:75> [b3Vector3.h <1007:75 1007:85>]
REFERENCE_TYPE_USAGE long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> long [b3Vector3.h <1007:70 1007:73>]
LOCAL_SYMBOL: b3Vector3.h<1007:98> [b3Vector3.h <1007:98 1007:103>]
REFERENCE_TYPE_USAGE long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> b3Scalar [b3Vector3.h <1007:88 1007:95>]
LOCAL_SYMBOL: b3Vector3.h<1011:20> [b3Vector3.h <1011:20 1011:32>]
REFERENCE_TYPE_USAGE long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> long [b3Vector3.h <1011:15 1011:18>]
SYMBOL_FUNCTION long b3_mindot_large(const float *, const float *, unsigned long, float *) [b3Vector3.h <1012:14 1012:28>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> long [b3Vector3.h <1012:9 1012:12>]
LOCAL_SYMBOL: b3Vector3.h<1012:44> [b3Vector3.h <1012:44 1012:48>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.h <1012:37 1012:41>]
LOCAL_SYMBOL: b3Vector3.h<1012:64> [b3Vector3.h <1012:64 1012:66>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.h <1012:57 1012:61>]
LOCAL_SYMBOL: b3Vector3.h<1012:83> [b3Vector3.h <1012:83 1012:93>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> unsigned long [b3Vector3.h <1012:69 1012:76>]
LOCAL_SYMBOL: b3Vector3.h<1012:103> [b3Vector3.h <1012:103 1012:108>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.h <1012:96 1012:100>]
LOCAL_SYMBOL: b3Vector3.h<1007:75> [b3Vector3.h <1020:9 1020:19>]
LOCAL_SYMBOL: b3Vector3.h<1011:20> [b3Vector3.h <1020:23 1020:35>]
LOCAL_SYMBOL: b3Vector3.h<1023:19> [b3Vector3.h <1023:19 1023:24>]
REFERENCE_TYPE_USAGE long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> b3Scalar [b3Vector3.h <1023:9 1023:16>]
LOCAL_SYMBOL: b3Vector3.h<1024:13> [b3Vector3.h <1024:13 1024:13>]
REFERENCE_TYPE_USAGE long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> int [b3Vector3.h <1024:9 1024:11>]
LOCAL_SYMBOL: b3Vector3.h<1025:13> [b3Vector3.h <1025:13 1025:19>]
REFERENCE_TYPE_USAGE long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> int [b3Vector3.h <1025:9 1025:11>]
LOCAL_SYMBOL: b3Vector3.h<1024:13> [b3Vector3.h <1027:14 1027:14>]
LOCAL_SYMBOL: b3Vector3.h<1024:13> [b3Vector3.h <1027:21 1027:21>]
LOCAL_SYMBOL: b3Vector3.h<1007:75> [b3Vector3.h <1027:25 1027:35>]
LOCAL_SYMBOL: b3Vector3.h<1024:13> [b3Vector3.h <1027:38 1027:38>]
LOCAL_SYMBOL: b3Vector3.h<1029:22> [b3Vector3.h <1029:22 1029:24>]
REFERENCE_TYPE_USAGE long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> b3Scalar [b3Vector3.h <1029:13 1029:20>]
REFERENCE_CALL long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> b3Scalar b3Vector3::dot(const b3Vector3 &) const [b3Vector3.h <1029:37 1029:39>]
LOCAL_SYMBOL: b3Vector3.h<1007:63> [b3Vector3.h <1029:28 1029:32>]
LOCAL_SYMBOL: b3Vector3.h<1024:13> [b3Vector3.h <1029:34 1029:34>]
LOCAL_SYMBOL: b3Vector3.h<1029:22> [b3Vector3.h <1031:17 1031:19>]
LOCAL_SYMBOL: b3Vector3.h<1023:19> [b3Vector3.h <1031:23 1031:28>]
LOCAL_SYMBOL: b3Vector3.h<1023:19> [b3Vector3.h <1033:17 1033:22>]
LOCAL_SYMBOL: b3Vector3.h<1029:22> [b3Vector3.h <1033:26 1033:28>]
LOCAL_SYMBOL: b3Vector3.h<1025:13> [b3Vector3.h <1034:17 1034:23>]
LOCAL_SYMBOL: b3Vector3.h<1024:13> [b3Vector3.h <1034:27 1034:27>]
LOCAL_SYMBOL: b3Vector3.h<1007:98> [b3Vector3.h <1038:9 1038:14>]
LOCAL_SYMBOL: b3Vector3.h<1023:19> [b3Vector3.h <1038:18 1038:23>]
LOCAL_SYMBOL: b3Vector3.h<1025:13> [b3Vector3.h <1040:16 1040:22>]
SYMBOL_FUNCTION long b3_mindot_large(const float *, const float *, unsigned long, float *)
REFERENCE_CALL long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> long b3_mindot_large(const float *, const float *, unsigned long, float *) [b3Vector3.h <1043:12 1043:26>]
REFERENCE_TYPE_USAGE long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> float [b3Vector3.h <1043:30 1043:34>]
LOCAL_SYMBOL: b3Vector3.h<1007:63> [b3Vector3.h <1043:38 1043:42>]
REFERENCE_TYPE_USAGE long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> float [b3Vector3.h <1043:46 1043:50>]
REFERENCE_USAGE long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1043:55 1043:62>]
REFERENCE_USAGE long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1043:55 1043:62>]
LOCAL_SYMBOL: b3Vector3.h<1007:75> [b3Vector3.h <1043:68 1043:78>]
LOCAL_SYMBOL: b3Vector3.h<1007:98> [b3Vector3.h <1043:82 1043:87>]
SYMBOL_CLASS b3Vector4 [b3Vector3.h <1048:1 <1048:7 1048:15> 1171:1>]
REFERENCE_INHERITANCE b3Vector4 -> b3Vector3 [b3Vector3.h <1048:26 1048:34>]
SYMBOL_METHOD public b3Vector4 b3Vector4::absolute4() const [b3Vector3.h <1057:2 <1057:28 1057:36> 1070:2>]
REFERENCE_TYPE_USAGE b3Vector4 b3Vector4::absolute4() const -> b3Vector4 [b3Vector3.h <1057:18 1057:26>]
SYMBOL_FUNCTION b3Vector4 b3MakeVector4(b3SimdFloat4)
REFERENCE_CALL b3Vector4 b3Vector4::absolute4() const -> b3Vector4 b3MakeVector4(b3SimdFloat4) [b3Vector3.h <1060:10 1060:22>]
REFERENCE_CALL b3Vector4 b3Vector4::absolute4() const -> __m128 _mm_and_ps(__m128, __m128) [b3Vector3.h <1060:24 1060:33>]
REFERENCE_CALL b3Vector4 b3Vector4::absolute4() const -> void __m128::__m128(const __m128 &) [b3Vector3.h <1060:35 1060:41>]
REFERENCE_USAGE b3Vector4 b3Vector4::absolute4() const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <1060:35 1060:41>]
REFERENCE_USAGE b3Vector4 b3Vector4::absolute4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1060:35 1060:41>]
REFERENCE_CALL b3Vector4 b3Vector4::absolute4() const -> __m128 _mm_castsi128_ps(__m128i) [b3Vector3.h <1060:44 1060:54>]
REFERENCE_CALL b3Vector4 b3Vector4::absolute4() const -> __m128i _mm_set_epi32(int, int, int, int) [b3Vector3.h <49:21 49:33>]
SYMBOL_METHOD public b3Scalar b3Vector4::getW() const [b3Vector3.h <1073:2 <1073:11 1073:14> 1073:45>]
REFERENCE_TYPE_USAGE b3Scalar b3Vector4::getW() const -> b3Scalar [b3Vector3.h <1073:2 1073:9>]
REFERENCE_USAGE b3Scalar b3Vector4::getW() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1073:33 1073:40>]
REFERENCE_USAGE b3Scalar b3Vector4::getW() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1073:33 1073:40>]
SYMBOL_METHOD public int b3Vector4::maxAxis4() const [b3Vector3.h <1076:3 <1076:23 1076:30> 1102:2>]
REFERENCE_TYPE_USAGE int b3Vector4::maxAxis4() const -> int [b3Vector3.h <1076:19 1076:21>]
LOCAL_SYMBOL: b3Vector3.h<1078:7> [b3Vector3.h <1078:7 1078:14>]
REFERENCE_TYPE_USAGE int b3Vector4::maxAxis4() const -> int [b3Vector3.h <1078:3 1078:5>]
LOCAL_SYMBOL: b3Vector3.h<1079:12> [b3Vector3.h <1079:12 1079:17>]
REFERENCE_TYPE_USAGE int b3Vector4::maxAxis4() const -> b3Scalar [b3Vector3.h <1079:3 1079:10>]
REFERENCE_TYPE_USAGE int b3Vector4::maxAxis4() const -> b3Scalar [b3Vector3.h <1079:21 1079:28>]
REFERENCE_USAGE int b3Vector4::maxAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1080:7 1080:14>]
REFERENCE_USAGE int b3Vector4::maxAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1080:7 1080:14>]
LOCAL_SYMBOL: b3Vector3.h<1079:12> [b3Vector3.h <1080:21 1080:26>]
LOCAL_SYMBOL: b3Vector3.h<1078:7> [b3Vector3.h <1082:4 1082:11>]
LOCAL_SYMBOL: b3Vector3.h<1079:12> [b3Vector3.h <1083:4 1083:9>]
REFERENCE_USAGE int b3Vector4::maxAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1083:13 1083:20>]
REFERENCE_USAGE int b3Vector4::maxAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1083:13 1083:20>]
REFERENCE_USAGE int b3Vector4::maxAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1085:7 1085:14>]
REFERENCE_USAGE int b3Vector4::maxAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1085:7 1085:14>]
LOCAL_SYMBOL: b3Vector3.h<1079:12> [b3Vector3.h <1085:21 1085:26>]
LOCAL_SYMBOL: b3Vector3.h<1078:7> [b3Vector3.h <1087:4 1087:11>]
LOCAL_SYMBOL: b3Vector3.h<1079:12> [b3Vector3.h <1088:4 1088:9>]
REFERENCE_USAGE int b3Vector4::maxAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1088:13 1088:20>]
REFERENCE_USAGE int b3Vector4::maxAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1088:13 1088:20>]
REFERENCE_USAGE int b3Vector4::maxAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1090:7 1090:14>]
REFERENCE_USAGE int b3Vector4::maxAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1090:7 1090:14>]
LOCAL_SYMBOL: b3Vector3.h<1079:12> [b3Vector3.h <1090:21 1090:26>]
LOCAL_SYMBOL: b3Vector3.h<1078:7> [b3Vector3.h <1092:4 1092:11>]
LOCAL_SYMBOL: b3Vector3.h<1079:12> [b3Vector3.h <1093:4 1093:9>]
REFERENCE_USAGE int b3Vector4::maxAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1093:12 1093:19>]
REFERENCE_USAGE int b3Vector4::maxAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1093:12 1093:19>]
REFERENCE_USAGE int b3Vector4::maxAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1095:7 1095:14>]
REFERENCE_USAGE int b3Vector4::maxAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1095:7 1095:14>]
LOCAL_SYMBOL: b3Vector3.h<1079:12> [b3Vector3.h <1095:21 1095:26>]
LOCAL_SYMBOL: b3Vector3.h<1078:7> [b3Vector3.h <1097:4 1097:11>]
LOCAL_SYMBOL: b3Vector3.h<1079:12> [b3Vector3.h <1098:4 1098:9>]
REFERENCE_USAGE int b3Vector4::maxAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1098:13 1098:20>]
REFERENCE_USAGE int b3Vector4::maxAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1098:13 1098:20>]
LOCAL_SYMBOL: b3Vector3.h<1078:7> [b3Vector3.h <1101:10 1101:17>]
SYMBOL_METHOD public int b3Vector4::minAxis4() const [b3Vector3.h <1105:2 <1105:22 1105:29> 1131:2>]
REFERENCE_TYPE_USAGE int b3Vector4::minAxis4() const -> int [b3Vector3.h <1105:18 1105:20>]
LOCAL_SYMBOL: b3Vector3.h<1107:7> [b3Vector3.h <1107:7 1107:14>]
REFERENCE_TYPE_USAGE int b3Vector4::minAxis4() const -> int [b3Vector3.h <1107:3 1107:5>]
LOCAL_SYMBOL: b3Vector3.h<1108:12> [b3Vector3.h <1108:12 1108:17>]
REFERENCE_TYPE_USAGE int b3Vector4::minAxis4() const -> b3Scalar [b3Vector3.h <1108:3 1108:10>]
REFERENCE_TYPE_USAGE int b3Vector4::minAxis4() const -> b3Scalar [b3Vector3.h <1108:21 1108:28>]
REFERENCE_USAGE int b3Vector4::minAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1109:7 1109:14>]
REFERENCE_USAGE int b3Vector4::minAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1109:7 1109:14>]
LOCAL_SYMBOL: b3Vector3.h<1108:12> [b3Vector3.h <1109:21 1109:26>]
LOCAL_SYMBOL: b3Vector3.h<1107:7> [b3Vector3.h <1111:4 1111:11>]
LOCAL_SYMBOL: b3Vector3.h<1108:12> [b3Vector3.h <1112:4 1112:9>]
REFERENCE_USAGE int b3Vector4::minAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1112:13 1112:20>]
REFERENCE_USAGE int b3Vector4::minAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1112:13 1112:20>]
REFERENCE_USAGE int b3Vector4::minAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1114:7 1114:14>]
REFERENCE_USAGE int b3Vector4::minAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1114:7 1114:14>]
LOCAL_SYMBOL: b3Vector3.h<1108:12> [b3Vector3.h <1114:21 1114:26>]
LOCAL_SYMBOL: b3Vector3.h<1107:7> [b3Vector3.h <1116:4 1116:11>]
LOCAL_SYMBOL: b3Vector3.h<1108:12> [b3Vector3.h <1117:4 1117:9>]
REFERENCE_USAGE int b3Vector4::minAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1117:13 1117:20>]
REFERENCE_USAGE int b3Vector4::minAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1117:13 1117:20>]
REFERENCE_USAGE int b3Vector4::minAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1119:7 1119:14>]
REFERENCE_USAGE int b3Vector4::minAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1119:7 1119:14>]
LOCAL_SYMBOL: b3Vector3.h<1108:12> [b3Vector3.h <1119:21 1119:26>]
LOCAL_SYMBOL: b3Vector3.h<1107:7> [b3Vector3.h <1121:4 1121:11>]
LOCAL_SYMBOL: b3Vector3.h<1108:12> [b3Vector3.h <1122:4 1122:9>]
REFERENCE_USAGE int b3Vector4::minAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1122:12 1122:19>]
REFERENCE_USAGE int b3Vector4::minAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1122:12 1122:19>]
REFERENCE_USAGE int b3Vector4::minAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1124:7 1124:14>]
REFERENCE_USAGE int b3Vector4::minAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1124:7 1124:14>]
LOCAL_SYMBOL: b3Vector3.h<1108:12> [b3Vector3.h <1124:21 1124:26>]
LOCAL_SYMBOL: b3Vector3.h<1107:7> [b3Vector3.h <1126:4 1126:11>]
LOCAL_SYMBOL: b3Vector3.h<1108:12> [b3Vector3.h <1127:4 1127:9>]
REFERENCE_USAGE int b3Vector4::minAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1127:13 1127:20>]
REFERENCE_USAGE int b3Vector4::minAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1127:13 1127:20>]
LOCAL_SYMBOL: b3Vector3.h<1107:7> [b3Vector3.h <1130:10 1130:17>]
SYMBOL_METHOD public int b3Vector4::closestAxis4() const [b3Vector3.h <1134:2 <1134:22 1134:33> 1137:2>]
REFERENCE_TYPE_USAGE int b3Vector4::closestAxis4() const -> int [b3Vector3.h <1134:18 1134:20>]
SYMBOL_FUNCTION int b3Vector4::maxAxis4() const
REFERENCE_CALL int b3Vector4::closestAxis4() const -> int b3Vector4::maxAxis4() const [b3Vector3.h <1136:22 1136:29>]
SYMBOL_FUNCTION b3Vector4 b3Vector4::absolute4() const
REFERENCE_CALL int b3Vector4::closestAxis4() const -> b3Vector4 b3Vector4::absolute4() const [b3Vector3.h <1136:10 1136:18>]
SYMBOL_METHOD public void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) [b3Vector3.h <1162:3 <1162:24 1162:31> 1168:3>]
REFERENCE_TYPE_USAGE void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> void [b3Vector3.h <1162:19 1162:22>]
LOCAL_SYMBOL: b3Vector3.h<1162:49> [b3Vector3.h <1162:49 1162:50>]
REFERENCE_TYPE_USAGE void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Scalar [b3Vector3.h <1162:39 1162:46>]
LOCAL_SYMBOL: b3Vector3.h<1162:69> [b3Vector3.h <1162:69 1162:70>]
REFERENCE_TYPE_USAGE void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Scalar [b3Vector3.h <1162:59 1162:66>]
LOCAL_SYMBOL: b3Vector3.h<1162:89> [b3Vector3.h <1162:89 1162:90>]
REFERENCE_TYPE_USAGE void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Scalar [b3Vector3.h <1162:79 1162:86>]
LOCAL_SYMBOL: b3Vector3.h<1162:108> [b3Vector3.h <1162:108 1162:109>]
REFERENCE_TYPE_USAGE void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Scalar [b3Vector3.h <1162:98 1162:105>]
REFERENCE_USAGE void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1164:4 1164:11>]
REFERENCE_USAGE void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1164:4 1164:11>]
LOCAL_SYMBOL: b3Vector3.h<1162:49> [b3Vector3.h <1164:16 1164:17>]
REFERENCE_USAGE void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1165:4 1165:11>]
REFERENCE_USAGE void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1165:4 1165:11>]
LOCAL_SYMBOL: b3Vector3.h<1162:69> [b3Vector3.h <1165:16 1165:17>]
REFERENCE_USAGE void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1166:4 1166:11>]
REFERENCE_USAGE void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1166:4 1166:11>]
LOCAL_SYMBOL: b3Vector3.h<1162:89> [b3Vector3.h <1166:16 1166:17>]
REFERENCE_USAGE void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1167:4 1167:11>]
REFERENCE_USAGE void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1167:4 1167:11>]
LOCAL_SYMBOL: b3Vector3.h<1162:108> [b3Vector3.h <1167:16 1167:17>]
SYMBOL_METHOD public void b3Vector4::~b3Vector4() [b3Vector3.h <1048:7 1048:15>]
SYMBOL_METHOD public void b3Vector4::b3Vector4() [b3Vector3.h <1048:7 <1048:7 1048:15> 1048:15>]
SYMBOL_FUNCTION void b3Vector3::b3Vector3()
REFERENCE_CALL void b3Vector4::b3Vector4() -> void b3Vector3::b3Vector3() [b3Vector3.h <1048:7 1048:15>]
SYMBOL_METHOD public void b3Vector4::b3Vector4(const b3Vector4 &) [b3Vector3.h <1048:7 1048:15>]
SYMBOL_METHOD public void b3Vector4::b3Vector4(b3Vector4 &&) [b3Vector3.h <1048:7 <1048:7 1048:15> 1048:15>]
SYMBOL_FUNCTION void b3Vector3::b3Vector3(b3Vector3 &&)
REFERENCE_CALL void b3Vector4::b3Vector4(b3Vector4 &&) -> void b3Vector3::b3Vector3(b3Vector3 &&) [b3Vector3.h <1048:7 1048:15>]
REFERENCE_TYPE_USAGE void b3Vector4::b3Vector4(b3Vector4 &&) -> b3Vector4 [b3Vector3.h <1048:7 1048:15>]
LOCAL_SYMBOL: b3Vector3.h<1048:7> [b3Vector3.h <1048:7 1048:15>]
SYMBOL_FUNCTION void b3SwapScalarEndian(const b3Scalar &, b3Scalar &) [b3Vector3.h <1175:1 <1175:22 1175:39> 1196:1>]
REFERENCE_TYPE_USAGE void b3SwapScalarEndian(const b3Scalar &, b3Scalar &) -> void [b3Vector3.h <1175:17 1175:20>]
LOCAL_SYMBOL: b3Vector3.h<1175:57> [b3Vector3.h <1175:57 1175:65>]
REFERENCE_TYPE_USAGE void b3SwapScalarEndian(const b3Scalar &, b3Scalar &) -> b3Scalar [b3Vector3.h <1175:47 1175:54>]
LOCAL_SYMBOL: b3Vector3.h<1175:78> [b3Vector3.h <1175:78 1175:84>]
REFERENCE_TYPE_USAGE void b3SwapScalarEndian(const b3Scalar &, b3Scalar &) -> b3Scalar [b3Vector3.h <1175:68 1175:75>]
LOCAL_SYMBOL: b3Vector3.h<1189:17> [b3Vector3.h <1189:17 1189:20>]
REFERENCE_TYPE_USAGE void b3SwapScalarEndian(const b3Scalar &, b3Scalar &) -> unsigned char [b3Vector3.h <1189:2 1189:9>]
REFERENCE_TYPE_USAGE void b3SwapScalarEndian(const b3Scalar &, b3Scalar &) -> unsigned char [b3Vector3.h <1189:25 1189:32>]
LOCAL_SYMBOL: b3Vector3.h<1175:78> [b3Vector3.h <1189:42 1189:48>]
LOCAL_SYMBOL: b3Vector3.h<1190:17> [b3Vector3.h <1190:17 1190:19>]
REFERENCE_TYPE_USAGE void b3SwapScalarEndian(const b3Scalar &, b3Scalar &) -> unsigned char [b3Vector3.h <1190:2 1190:9>]
REFERENCE_TYPE_USAGE void b3SwapScalarEndian(const b3Scalar &, b3Scalar &) -> unsigned char [b3Vector3.h <1190:25 1190:32>]
LOCAL_SYMBOL: b3Vector3.h<1175:57> [b3Vector3.h <1190:42 1190:50>]
LOCAL_SYMBOL: b3Vector3.h<1189:17> [b3Vector3.h <1191:2 1191:5>]
LOCAL_SYMBOL: b3Vector3.h<1190:17> [b3Vector3.h <1191:12 1191:14>]
LOCAL_SYMBOL: b3Vector3.h<1189:17> [b3Vector3.h <1192:5 1192:8>]
LOCAL_SYMBOL: b3Vector3.h<1190:17> [b3Vector3.h <1192:15 1192:17>]
LOCAL_SYMBOL: b3Vector3.h<1189:17> [b3Vector3.h <1193:5 1193:8>]
LOCAL_SYMBOL: b3Vector3.h<1190:17> [b3Vector3.h <1193:15 1193:17>]
LOCAL_SYMBOL: b3Vector3.h<1189:17> [b3Vector3.h <1194:5 1194:8>]
LOCAL_SYMBOL: b3Vector3.h<1190:17> [b3Vector3.h <1194:15 1194:17>]
SYMBOL_FUNCTION void b3SwapVector3Endian(const b3Vector3 &, b3Vector3 &) [b3Vector3.h <1198:1 <1198:22 1198:40> 1205:1>]
REFERENCE_TYPE_USAGE void b3SwapVector3Endian(const b3Vector3 &, b3Vector3 &) -> void [b3Vector3.h <1198:17 1198:20>]
LOCAL_SYMBOL: b3Vector3.h<1198:59> [b3Vector3.h <1198:59 1198:67>]
REFERENCE_TYPE_USAGE void b3SwapVector3Endian(const b3Vector3 &, b3Vector3 &) -> b3Vector3 [b3Vector3.h <1198:48 1198:56>]
LOCAL_SYMBOL: b3Vector3.h<1198:81> [b3Vector3.h <1198:81 1198:87>]
REFERENCE_TYPE_USAGE void b3SwapVector3Endian(const b3Vector3 &, b3Vector3 &) -> b3Vector3 [b3Vector3.h <1198:70 1198:78>]
LOCAL_SYMBOL: b3Vector3.h<1200:11> [b3Vector3.h <1200:11 1200:11>]
REFERENCE_TYPE_USAGE void b3SwapVector3Endian(const b3Vector3 &, b3Vector3 &) -> int [b3Vector3.h <1200:7 1200:9>]
LOCAL_SYMBOL: b3Vector3.h<1200:11> [b3Vector3.h <1200:15 1200:15>]
LOCAL_SYMBOL: b3Vector3.h<1200:11> [b3Vector3.h <1200:19 1200:19>]
SYMBOL_FUNCTION void b3SwapScalarEndian(const b3Scalar &, b3Scalar &)
REFERENCE_CALL void b3SwapVector3Endian(const b3Vector3 &, b3Vector3 &) -> void b3SwapScalarEndian(const b3Scalar &, b3Scalar &) [b3Vector3.h <1202:3 1202:20>]
LOCAL_SYMBOL: b3Vector3.h<1198:59> [b3Vector3.h <1202:22 1202:30>]
LOCAL_SYMBOL: b3Vector3.h<1200:11> [b3Vector3.h <1202:32 1202:32>]
LOCAL_SYMBOL: b3Vector3.h<1198:81> [b3Vector3.h <1202:35 1202:41>]
LOCAL_SYMBOL: b3Vector3.h<1200:11> [b3Vector3.h <1202:43 1202:43>]
SYMBOL_FUNCTION void b3UnSwapVector3Endian(b3Vector3 &) [b3Vector3.h <1208:1 <1208:22 1208:42> 1217:1>]
REFERENCE_TYPE_USAGE void b3UnSwapVector3Endian(b3Vector3 &) -> void [b3Vector3.h <1208:17 1208:20>]
LOCAL_SYMBOL: b3Vector3.h<1208:55> [b3Vector3.h <1208:55 1208:60>]
REFERENCE_TYPE_USAGE void b3UnSwapVector3Endian(b3Vector3 &) -> b3Vector3 [b3Vector3.h <1208:44 1208:52>]
LOCAL_SYMBOL: b3Vector3.h<1211:12> [b3Vector3.h <1211:12 1211:21>]
REFERENCE_TYPE_USAGE void b3UnSwapVector3Endian(b3Vector3 &) -> b3Vector3 [b3Vector3.h <1211:2 1211:10>]
REFERENCE_CALL void b3UnSwapVector3Endian(b3Vector3 &) -> void b3Vector3::b3Vector3() [b3Vector3.h <1211:12 1211:21>]
LOCAL_SYMBOL: b3Vector3.h<1212:11> [b3Vector3.h <1212:11 1212:11>]
REFERENCE_TYPE_USAGE void b3UnSwapVector3Endian(b3Vector3 &) -> int [b3Vector3.h <1212:7 1212:9>]
LOCAL_SYMBOL: b3Vector3.h<1212:11> [b3Vector3.h <1212:15 1212:15>]
LOCAL_SYMBOL: b3Vector3.h<1212:11> [b3Vector3.h <1212:19 1212:19>]
REFERENCE_CALL void b3UnSwapVector3Endian(b3Vector3 &) -> void b3SwapScalarEndian(const b3Scalar &, b3Scalar &) [b3Vector3.h <1214:3 1214:20>]
LOCAL_SYMBOL: b3Vector3.h<1208:55> [b3Vector3.h <1214:22 1214:27>]
LOCAL_SYMBOL: b3Vector3.h<1212:11> [b3Vector3.h <1214:29 1214:29>]
LOCAL_SYMBOL: b3Vector3.h<1211:12> [b3Vector3.h <1214:32 1214:41>]
LOCAL_SYMBOL: b3Vector3.h<1212:11> [b3Vector3.h <1214:43 1214:43>]
SYMBOL_FUNCTION b3Vector3 & b3Vector3::operator=(const b3Vector3 &)
REFERENCE_CALL void b3UnSwapVector3Endian(b3Vector3 &) -> b3Vector3 & b3Vector3::operator=(const b3Vector3 &) [b3Vector3.h <1216:9 1216:9>]
LOCAL_SYMBOL: b3Vector3.h<1208:55> [b3Vector3.h <1216:2 1216:7>]
LOCAL_SYMBOL: b3Vector3.h<1211:12> [b3Vector3.h <1216:11 1216:20>]
SYMBOL_FUNCTION void b3PlaneSpace1<class T>(const T &, T &, T &) [b3Vector3.h <1219:1 <1220:22 1220:34> 1246:1>]
REFERENCE_TYPE_USAGE void b3PlaneSpace1<class T>(const T &, T &, T &) -> void [b3Vector3.h <1220:17 1220:20>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1220:46 1220:46>]
REFERENCE_TYPE_USAGE void b3PlaneSpace1<class T>(const T &, T &, T &) -> b3PlaneSpace1<class T>::T [b3Vector3.h <1220:43 1220:43>]
LOCAL_SYMBOL: b3Vector3.h<1220:52> [b3Vector3.h <1220:52 1220:52>]
REFERENCE_TYPE_USAGE void b3PlaneSpace1<class T>(const T &, T &, T &) -> b3PlaneSpace1<class T>::T [b3Vector3.h <1220:49 1220:49>]
LOCAL_SYMBOL: b3Vector3.h<1220:58> [b3Vector3.h <1220:58 1220:58>]
REFERENCE_TYPE_USAGE void b3PlaneSpace1<class T>(const T &, T &, T &) -> b3PlaneSpace1<class T>::T [b3Vector3.h <1220:55 1220:55>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1222:14 1222:14>]
REFERENCE_TYPE_USAGE void b3PlaneSpace1<class T>(const T &, T &, T &) -> b3Scalar [b3Vector3.h <1222:22 1222:30>]
LOCAL_SYMBOL: b3Vector3.h<1224:14> [b3Vector3.h <1224:14 1224:14>]
REFERENCE_TYPE_USAGE void b3PlaneSpace1<class T>(const T &, T &, T &) -> b3Scalar [b3Vector3.h <1224:5 1224:12>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1224:18 1224:18>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1224:23 1224:23>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1224:30 1224:30>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1224:35 1224:35>]
LOCAL_SYMBOL: b3Vector3.h<1225:14> [b3Vector3.h <1225:14 1225:14>]
REFERENCE_TYPE_USAGE void b3PlaneSpace1<class T>(const T &, T &, T &) -> b3Scalar [b3Vector3.h <1225:5 1225:12>]
REFERENCE_TYPE_USAGE void b3PlaneSpace1<class T>(const T &, T &, T &) -> b3Scalar [b3Vector3.h <1225:18 1225:28>]
REFERENCE_CALL void b3PlaneSpace1<class T>(const T &, T &, T &) -> b3Scalar b3Sqrt(b3Scalar) [b3Vector3.h <1225:18 1225:28>]
LOCAL_SYMBOL: b3Vector3.h<1224:14> [b3Vector3.h <1225:31 1225:31>]
LOCAL_SYMBOL: b3Vector3.h<1220:52> [b3Vector3.h <1226:5 1226:5>]
LOCAL_SYMBOL: b3Vector3.h<1220:52> [b3Vector3.h <1227:2 1227:2>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1227:10 1227:10>]
LOCAL_SYMBOL: b3Vector3.h<1225:14> [b3Vector3.h <1227:15 1227:15>]
LOCAL_SYMBOL: b3Vector3.h<1220:52> [b3Vector3.h <1228:2 1228:2>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1228:9 1228:9>]
LOCAL_SYMBOL: b3Vector3.h<1225:14> [b3Vector3.h <1228:14 1228:14>]
LOCAL_SYMBOL: b3Vector3.h<1220:58> [b3Vector3.h <1230:5 1230:5>]
LOCAL_SYMBOL: b3Vector3.h<1224:14> [b3Vector3.h <1230:12 1230:12>]
LOCAL_SYMBOL: b3Vector3.h<1225:14> [b3Vector3.h <1230:14 1230:14>]
LOCAL_SYMBOL: b3Vector3.h<1220:58> [b3Vector3.h <1231:2 1231:2>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1231:10 1231:10>]
LOCAL_SYMBOL: b3Vector3.h<1220:52> [b3Vector3.h <1231:15 1231:15>]
LOCAL_SYMBOL: b3Vector3.h<1220:58> [b3Vector3.h <1232:2 1232:2>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1232:9 1232:9>]
LOCAL_SYMBOL: b3Vector3.h<1220:52> [b3Vector3.h <1232:14 1232:14>]
LOCAL_SYMBOL: b3Vector3.h<1236:14> [b3Vector3.h <1236:14 1236:14>]
REFERENCE_TYPE_USAGE void b3PlaneSpace1<class T>(const T &, T &, T &) -> b3Scalar [b3Vector3.h <1236:5 1236:12>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1236:18 1236:18>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1236:23 1236:23>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1236:30 1236:30>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1236:35 1236:35>]
LOCAL_SYMBOL: b3Vector3.h<1237:14> [b3Vector3.h <1237:14 1237:14>]
REFERENCE_TYPE_USAGE void b3PlaneSpace1<class T>(const T &, T &, T &) -> b3Scalar [b3Vector3.h <1237:5 1237:12>]
REFERENCE_TYPE_USAGE void b3PlaneSpace1<class T>(const T &, T &, T &) -> b3Scalar [b3Vector3.h <1237:18 1237:28>]
REFERENCE_CALL void b3PlaneSpace1<class T>(const T &, T &, T &) -> b3Scalar b3Sqrt(b3Scalar) [b3Vector3.h <1237:18 1237:28>]
LOCAL_SYMBOL: b3Vector3.h<1236:14> [b3Vector3.h <1237:31 1237:31>]
LOCAL_SYMBOL: b3Vector3.h<1220:52> [b3Vector3.h <1238:5 1238:5>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1238:13 1238:13>]
LOCAL_SYMBOL: b3Vector3.h<1237:14> [b3Vector3.h <1238:18 1238:18>]
LOCAL_SYMBOL: b3Vector3.h<1220:52> [b3Vector3.h <1239:2 1239:2>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1239:9 1239:9>]
LOCAL_SYMBOL: b3Vector3.h<1237:14> [b3Vector3.h <1239:14 1239:14>]
LOCAL_SYMBOL: b3Vector3.h<1220:52> [b3Vector3.h <1240:2 1240:2>]
LOCAL_SYMBOL: b3Vector3.h<1220:58> [b3Vector3.h <1242:5 1242:5>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1242:13 1242:13>]
LOCAL_SYMBOL: b3Vector3.h<1220:52> [b3Vector3.h <1242:18 1242:18>]
LOCAL_SYMBOL: b3Vector3.h<1220:58> [b3Vector3.h <1243:2 1243:2>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1243:9 1243:9>]
LOCAL_SYMBOL: b3Vector3.h<1220:52> [b3Vector3.h <1243:14 1243:14>]
LOCAL_SYMBOL: b3Vector3.h<1220:58> [b3Vector3.h <1244:2 1244:2>]
LOCAL_SYMBOL: b3Vector3.h<1236:14> [b3Vector3.h <1244:9 1244:9>]
LOCAL_SYMBOL: b3Vector3.h<1237:14> [b3Vector3.h <1244:11 1244:11>]
SYMBOL_TEMPLATE_PARAMETER b3PlaneSpace1<class T>::T [b3Vector3.h <1219:17 1219:17>]
SYMBOL_STRUCT b3Vector3FloatData [b3Vector3.h <1249:1 <1249:8 1249:25> 1252:1>]
SYMBOL_FIELD public float [] b3Vector3FloatData::m_floats [b3Vector3.h <1251:8 1251:15>]
REFERENCE_TYPE_USAGE float [] b3Vector3FloatData::m_floats -> float [b3Vector3.h <1251:2 1251:6>]
SYMBOL_STRUCT b3Vector3DoubleData [b3Vector3.h <1254:1 <1254:8 1254:26> 1258:1>]
SYMBOL_FIELD public double [] b3Vector3DoubleData::m_floats [b3Vector3.h <1256:9 1256:16>]
REFERENCE_TYPE_USAGE double [] b3Vector3DoubleData::m_floats -> double [b3Vector3.h <1256:2 1256:7>]
SYMBOL_METHOD public void b3Vector3::serializeFloat(b3Vector3FloatData &) const [b3Vector3.h <1260:1 <1260:33 1260:46> 1265:1>]
QUALIFIER: b3Vector3 [b3Vector3.h <1260:22 1260:30>]
REFERENCE_TYPE_USAGE void b3Vector3::serializeFloat(b3Vector3FloatData &) const -> void [b3Vector3.h <1260:17 1260:20>]
LOCAL_SYMBOL: b3Vector3.h<1260:75> [b3Vector3.h <1260:75 1260:81>]
REFERENCE_TYPE_USAGE void b3Vector3::serializeFloat(b3Vector3FloatData &) const -> b3Vector3FloatData [b3Vector3.h <1260:55 1260:72>]
LOCAL_SYMBOL: b3Vector3.h<1263:11> [b3Vector3.h <1263:11 1263:11>]
REFERENCE_TYPE_USAGE void b3Vector3::serializeFloat(b3Vector3FloatData &) const -> int [b3Vector3.h <1263:7 1263:9>]
LOCAL_SYMBOL: b3Vector3.h<1263:11> [b3Vector3.h <1263:15 1263:15>]
LOCAL_SYMBOL: b3Vector3.h<1263:11> [b3Vector3.h <1263:19 1263:19>]
REFERENCE_USAGE void b3Vector3::serializeFloat(b3Vector3FloatData &) const -> float [] b3Vector3FloatData::m_floats [b3Vector3.h <1264:11 1264:18>]
LOCAL_SYMBOL: b3Vector3.h<1260:75> [b3Vector3.h <1264:3 1264:9>]
LOCAL_SYMBOL: b3Vector3.h<1263:11> [b3Vector3.h <1264:20 1264:20>]
REFERENCE_TYPE_USAGE void b3Vector3::serializeFloat(b3Vector3FloatData &) const -> float [b3Vector3.h <1264:25 1264:29>]
REFERENCE_USAGE void b3Vector3::serializeFloat(b3Vector3FloatData &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1264:31 1264:38>]
REFERENCE_USAGE void b3Vector3::serializeFloat(b3Vector3FloatData &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1264:31 1264:38>]
LOCAL_SYMBOL: b3Vector3.h<1263:11> [b3Vector3.h <1264:40 1264:40>]
SYMBOL_METHOD public void b3Vector3::deSerializeFloat(const b3Vector3FloatData &) [b3Vector3.h <1267:1 <1267:33 1267:48> 1271:1>]
QUALIFIER: b3Vector3 [b3Vector3.h <1267:22 1267:30>]
REFERENCE_TYPE_USAGE void b3Vector3::deSerializeFloat(const b3Vector3FloatData &) -> void [b3Vector3.h <1267:17 1267:20>]
LOCAL_SYMBOL: b3Vector3.h<1267:83> [b3Vector3.h <1267:83 1267:88>]
REFERENCE_TYPE_USAGE void b3Vector3::deSerializeFloat(const b3Vector3FloatData &) -> b3Vector3FloatData [b3Vector3.h <1267:63 1267:80>]
LOCAL_SYMBOL: b3Vector3.h<1269:11> [b3Vector3.h <1269:11 1269:11>]
REFERENCE_TYPE_USAGE void b3Vector3::deSerializeFloat(const b3Vector3FloatData &) -> int [b3Vector3.h <1269:7 1269:9>]
LOCAL_SYMBOL: b3Vector3.h<1269:11> [b3Vector3.h <1269:15 1269:15>]
LOCAL_SYMBOL: b3Vector3.h<1269:11> [b3Vector3.h <1269:19 1269:19>]
REFERENCE_USAGE void b3Vector3::deSerializeFloat(const b3Vector3FloatData &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1270:3 1270:10>]
REFERENCE_USAGE void b3Vector3::deSerializeFloat(const b3Vector3FloatData &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1270:3 1270:10>]
LOCAL_SYMBOL: b3Vector3.h<1269:11> [b3Vector3.h <1270:12 1270:12>]
REFERENCE_TYPE_USAGE void b3Vector3::deSerializeFloat(const b3Vector3FloatData &) -> b3Scalar [b3Vector3.h <1270:17 1270:24>]
REFERENCE_USAGE void b3Vector3::deSerializeFloat(const b3Vector3FloatData &) -> float [] b3Vector3FloatData::m_floats [b3Vector3.h <1270:33 1270:40>]
LOCAL_SYMBOL: b3Vector3.h<1267:83> [b3Vector3.h <1270:26 1270:31>]
LOCAL_SYMBOL: b3Vector3.h<1269:11> [b3Vector3.h <1270:42 1270:42>]
SYMBOL_METHOD public void b3Vector3::serializeDouble(b3Vector3DoubleData &) const [b3Vector3.h <1274:1 <1274:33 1274:47> 1279:1>]
QUALIFIER: b3Vector3 [b3Vector3.h <1274:22 1274:30>]
REFERENCE_TYPE_USAGE void b3Vector3::serializeDouble(b3Vector3DoubleData &) const -> void [b3Vector3.h <1274:17 1274:20>]
LOCAL_SYMBOL: b3Vector3.h<1274:77> [b3Vector3.h <1274:77 1274:83>]
REFERENCE_TYPE_USAGE void b3Vector3::serializeDouble(b3Vector3DoubleData &) const -> b3Vector3DoubleData [b3Vector3.h <1274:56 1274:74>]
LOCAL_SYMBOL: b3Vector3.h<1277:11> [b3Vector3.h <1277:11 1277:11>]
REFERENCE_TYPE_USAGE void b3Vector3::serializeDouble(b3Vector3DoubleData &) const -> int [b3Vector3.h <1277:7 1277:9>]
LOCAL_SYMBOL: b3Vector3.h<1277:11> [b3Vector3.h <1277:15 1277:15>]
LOCAL_SYMBOL: b3Vector3.h<1277:11> [b3Vector3.h <1277:19 1277:19>]
REFERENCE_USAGE void b3Vector3::serializeDouble(b3Vector3DoubleData &) const -> double [] b3Vector3DoubleData::m_floats [b3Vector3.h <1278:11 1278:18>]
LOCAL_SYMBOL: b3Vector3.h<1274:77> [b3Vector3.h <1278:3 1278:9>]
LOCAL_SYMBOL: b3Vector3.h<1277:11> [b3Vector3.h <1278:20 1278:20>]
REFERENCE_TYPE_USAGE void b3Vector3::serializeDouble(b3Vector3DoubleData &) const -> double [b3Vector3.h <1278:25 1278:30>]
REFERENCE_USAGE void b3Vector3::serializeDouble(b3Vector3DoubleData &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1278:32 1278:39>]
REFERENCE_USAGE void b3Vector3::serializeDouble(b3Vector3DoubleData &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1278:32 1278:39>]
LOCAL_SYMBOL: b3Vector3.h<1277:11> [b3Vector3.h <1278:41 1278:41>]
SYMBOL_METHOD public void b3Vector3::deSerializeDouble(const b3Vector3DoubleData &) [b3Vector3.h <1281:1 <1281:33 1281:49> 1285:1>]
QUALIFIER: b3Vector3 [b3Vector3.h <1281:22 1281:30>]
REFERENCE_TYPE_USAGE void b3Vector3::deSerializeDouble(const b3Vector3DoubleData &) -> void [b3Vector3.h <1281:17 1281:20>]
LOCAL_SYMBOL: b3Vector3.h<1281:85> [b3Vector3.h <1281:85 1281:90>]
REFERENCE_TYPE_USAGE void b3Vector3::deSerializeDouble(const b3Vector3DoubleData &) -> b3Vector3DoubleData [b3Vector3.h <1281:64 1281:82>]
LOCAL_SYMBOL: b3Vector3.h<1283:11> [b3Vector3.h <1283:11 1283:11>]
REFERENCE_TYPE_USAGE void b3Vector3::deSerializeDouble(const b3Vector3DoubleData &) -> int [b3Vector3.h <1283:7 1283:9>]
LOCAL_SYMBOL: b3Vector3.h<1283:11> [b3Vector3.h <1283:15 1283:15>]
LOCAL_SYMBOL: b3Vector3.h<1283:11> [b3Vector3.h <1283:19 1283:19>]
REFERENCE_USAGE void b3Vector3::deSerializeDouble(const b3Vector3DoubleData &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1284:3 1284:10>]
REFERENCE_USAGE void b3Vector3::deSerializeDouble(const b3Vector3DoubleData &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1284:3 1284:10>]
LOCAL_SYMBOL: b3Vector3.h<1283:11> [b3Vector3.h <1284:12 1284:12>]
REFERENCE_TYPE_USAGE void b3Vector3::deSerializeDouble(const b3Vector3DoubleData &) -> b3Scalar [b3Vector3.h <1284:17 1284:24>]
REFERENCE_USAGE void b3Vector3::deSerializeDouble(const b3Vector3DoubleData &) -> double [] b3Vector3DoubleData::m_floats [b3Vector3.h <1284:33 1284:40>]
LOCAL_SYMBOL: b3Vector3.h<1281:85> [b3Vector3.h <1284:26 1284:31>]
LOCAL_SYMBOL: b3Vector3.h<1283:11> [b3Vector3.h <1284:42 1284:42>]
SYMBOL_METHOD public void b3Vector3::serialize(b3Vector3FloatData &) const [b3Vector3.h <1288:1 <1288:33 1288:41> 1293:1>]
QUALIFIER: b3Vector3 [b3Vector3.h <1288:22 1288:30>]
REFERENCE_TYPE_USAGE void b3Vector3::serialize(b3Vector3FloatData &) const -> void [b3Vector3.h <1288:17 1288:20>]
LOCAL_SYMBOL: b3Vector3.h<1288:65> [b3Vector3.h <1288:65 1288:71>]
REFERENCE_TYPE_USAGE void b3Vector3::serialize(b3Vector3FloatData &) const -> b3Vector3FloatData [b3Vector3.h <1288:50 1288:62>]
LOCAL_SYMBOL: b3Vector3.h<1291:11> [b3Vector3.h <1291:11 1291:11>]
REFERENCE_TYPE_USAGE void b3Vector3::serialize(b3Vector3FloatData &) const -> int [b3Vector3.h <1291:7 1291:9>]
LOCAL_SYMBOL: b3Vector3.h<1291:11> [b3Vector3.h <1291:15 1291:15>]
LOCAL_SYMBOL: b3Vector3.h<1291:11> [b3Vector3.h <1291:19 1291:19>]
REFERENCE_USAGE void b3Vector3::serialize(b3Vector3FloatData &) const -> float [] b3Vector3FloatData::m_floats [b3Vector3.h <1292:11 1292:18>]
LOCAL_SYMBOL: b3Vector3.h<1288:65> [b3Vector3.h <1292:3 1292:9>]
LOCAL_SYMBOL: b3Vector3.h<1291:11> [b3Vector3.h <1292:20 1292:20>]
REFERENCE_USAGE void b3Vector3::serialize(b3Vector3FloatData &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1292:25 1292:32>]
REFERENCE_USAGE void b3Vector3::serialize(b3Vector3FloatData &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1292:25 1292:32>]
LOCAL_SYMBOL: b3Vector3.h<1291:11> [b3Vector3.h <1292:34 1292:34>]
SYMBOL_METHOD public void b3Vector3::deSerialize(const b3Vector3FloatData &) [b3Vector3.h <1295:1 <1295:33 1295:43> 1299:1>]
QUALIFIER: b3Vector3 [b3Vector3.h <1295:22 1295:30>]
REFERENCE_TYPE_USAGE void b3Vector3::deSerialize(const b3Vector3FloatData &) -> void [b3Vector3.h <1295:17 1295:20>]
LOCAL_SYMBOL: b3Vector3.h<1295:73> [b3Vector3.h <1295:73 1295:78>]
REFERENCE_TYPE_USAGE void b3Vector3::deSerialize(const b3Vector3FloatData &) -> b3Vector3FloatData [b3Vector3.h <1295:58 1295:70>]
LOCAL_SYMBOL: b3Vector3.h<1297:11> [b3Vector3.h <1297:11 1297:11>]
REFERENCE_TYPE_USAGE void b3Vector3::deSerialize(const b3Vector3FloatData &) -> int [b3Vector3.h <1297:7 1297:9>]
LOCAL_SYMBOL: b3Vector3.h<1297:11> [b3Vector3.h <1297:15 1297:15>]
LOCAL_SYMBOL: b3Vector3.h<1297:11> [b3Vector3.h <1297:19 1297:19>]
REFERENCE_USAGE void b3Vector3::deSerialize(const b3Vector3FloatData &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1298:3 1298:10>]
REFERENCE_USAGE void b3Vector3::deSerialize(const b3Vector3FloatData &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1298:3 1298:10>]
LOCAL_SYMBOL: b3Vector3.h<1297:11> [b3Vector3.h <1298:12 1298:12>]
REFERENCE_USAGE void b3Vector3::deSerialize(const b3Vector3FloatData &) -> float [] b3Vector3FloatData::m_floats [b3Vector3.h <1298:24 1298:31>]
LOCAL_SYMBOL: b3Vector3.h<1295:73> [b3Vector3.h <1298:17 1298:22>]
LOCAL_SYMBOL: b3Vector3.h<1297:11> [b3Vector3.h <1298:33 1298:33>]
SYMBOL_FUNCTION b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) [b3Vector3.h <1304:1 <1304:18 1304:30> 1309:1>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> b3Vector3 [b3Vector3.h <1304:8 1304:16>]
LOCAL_SYMBOL: b3Vector3.h<1304:41> [b3Vector3.h <1304:41 1304:41>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <1304:32 1304:39>]
LOCAL_SYMBOL: b3Vector3.h<1304:52> [b3Vector3.h <1304:52 1304:52>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <1304:43 1304:50>]
LOCAL_SYMBOL: b3Vector3.h<1304:63> [b3Vector3.h <1304:63 1304:63>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <1304:54 1304:61>]
LOCAL_SYMBOL: b3Vector3.h<1306:12> [b3Vector3.h <1306:12 1306:14>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> b3Vector3 [b3Vector3.h <1306:2 1306:10>]
REFERENCE_CALL b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> void b3Vector3::b3Vector3() [b3Vector3.h <1306:12 1306:14>]
REFERENCE_CALL b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) [b3Vector3.h <1307:6 1307:13>]
LOCAL_SYMBOL: b3Vector3.h<1306:12> [b3Vector3.h <1307:2 1307:4>]
LOCAL_SYMBOL: b3Vector3.h<1304:41> [b3Vector3.h <1307:15 1307:15>]
LOCAL_SYMBOL: b3Vector3.h<1304:52> [b3Vector3.h <1307:17 1307:17>]
LOCAL_SYMBOL: b3Vector3.h<1304:63> [b3Vector3.h <1307:19 1307:19>]
REFERENCE_CALL b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> void b3Vector3::b3Vector3(b3Vector3 &&) [b3Vector3.h <1308:9 1308:11>]
LOCAL_SYMBOL: b3Vector3.h<1306:12> [b3Vector3.h <1308:9 1308:11>]
SYMBOL_FUNCTION b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) [b3Vector3.h <1311:1 <1311:18 1311:30> 1317:1>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Vector3 [b3Vector3.h <1311:8 1311:16>]
LOCAL_SYMBOL: b3Vector3.h<1311:41> [b3Vector3.h <1311:41 1311:41>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <1311:32 1311:39>]
LOCAL_SYMBOL: b3Vector3.h<1311:52> [b3Vector3.h <1311:52 1311:52>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <1311:43 1311:50>]
LOCAL_SYMBOL: b3Vector3.h<1311:63> [b3Vector3.h <1311:63 1311:63>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <1311:54 1311:61>]
LOCAL_SYMBOL: b3Vector3.h<1311:75> [b3Vector3.h <1311:75 1311:75>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <1311:66 1311:73>]
LOCAL_SYMBOL: b3Vector3.h<1313:12> [b3Vector3.h <1313:12 1313:14>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Vector3 [b3Vector3.h <1313:2 1313:10>]
REFERENCE_CALL b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> void b3Vector3::b3Vector3() [b3Vector3.h <1313:12 1313:14>]
REFERENCE_CALL b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) [b3Vector3.h <1314:6 1314:13>]
LOCAL_SYMBOL: b3Vector3.h<1313:12> [b3Vector3.h <1314:2 1314:4>]
LOCAL_SYMBOL: b3Vector3.h<1311:41> [b3Vector3.h <1314:15 1314:15>]
LOCAL_SYMBOL: b3Vector3.h<1311:52> [b3Vector3.h <1314:17 1314:17>]
LOCAL_SYMBOL: b3Vector3.h<1311:63> [b3Vector3.h <1314:19 1314:19>]
REFERENCE_USAGE b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> float b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::w [b3Vector3.h <1315:6 1315:6>]
REFERENCE_USAGE b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>) b3Vector3::anonymous union (b3Vector3.h<96:9>):: [b3Vector3.h <1315:6 1315:6>]
REFERENCE_USAGE b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1315:6 1315:6>]
LOCAL_SYMBOL: b3Vector3.h<1313:12> [b3Vector3.h <1315:2 1315:4>]
LOCAL_SYMBOL: b3Vector3.h<1311:75> [b3Vector3.h <1315:10 1315:10>]
REFERENCE_CALL b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> void b3Vector3::b3Vector3(b3Vector3 &&) [b3Vector3.h <1316:9 1316:11>]
LOCAL_SYMBOL: b3Vector3.h<1313:12> [b3Vector3.h <1316:9 1316:11>]
SYMBOL_FUNCTION b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) [b3Vector3.h <1319:1 <1319:18 1319:30> 1324:1>]
REFERENCE_TYPE_USAGE b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Vector4 [b3Vector3.h <1319:8 1319:16>]
LOCAL_SYMBOL: b3Vector3.h<1319:41> [b3Vector3.h <1319:41 1319:41>]
REFERENCE_TYPE_USAGE b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <1319:32 1319:39>]
LOCAL_SYMBOL: b3Vector3.h<1319:52> [b3Vector3.h <1319:52 1319:52>]
REFERENCE_TYPE_USAGE b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <1319:43 1319:50>]
LOCAL_SYMBOL: b3Vector3.h<1319:63> [b3Vector3.h <1319:63 1319:63>]
REFERENCE_TYPE_USAGE b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <1319:54 1319:61>]
LOCAL_SYMBOL: b3Vector3.h<1319:74> [b3Vector3.h <1319:74 1319:74>]
REFERENCE_TYPE_USAGE b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <1319:65 1319:72>]
LOCAL_SYMBOL: b3Vector3.h<1321:12> [b3Vector3.h <1321:12 1321:14>]
REFERENCE_TYPE_USAGE b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Vector4 [b3Vector3.h <1321:2 1321:10>]
SYMBOL_FUNCTION void b3Vector4::b3Vector4()
REFERENCE_CALL b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> void b3Vector4::b3Vector4() [b3Vector3.h <1321:12 1321:14>]
SYMBOL_FUNCTION void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &)
REFERENCE_CALL b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) [b3Vector3.h <1322:6 1322:13>]
LOCAL_SYMBOL: b3Vector3.h<1321:12> [b3Vector3.h <1322:2 1322:4>]
LOCAL_SYMBOL: b3Vector3.h<1319:41> [b3Vector3.h <1322:15 1322:15>]
LOCAL_SYMBOL: b3Vector3.h<1319:52> [b3Vector3.h <1322:17 1322:17>]
LOCAL_SYMBOL: b3Vector3.h<1319:63> [b3Vector3.h <1322:19 1322:19>]
LOCAL_SYMBOL: b3Vector3.h<1319:74> [b3Vector3.h <1322:21 1322:21>]
SYMBOL_FUNCTION void b3Vector4::b3Vector4(b3Vector4 &&)
REFERENCE_CALL b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> void b3Vector4::b3Vector4(b3Vector4 &&) [b3Vector3.h <1323:9 1323:11>]
LOCAL_SYMBOL: b3Vector3.h<1321:12> [b3Vector3.h <1323:9 1323:11>]
SYMBOL_FUNCTION b3Vector3 b3MakeVector3(b3SimdFloat4) [b3Vector3.h <1328:1 <1328:18 1328:30> 1333:1>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3SimdFloat4) -> b3Vector3 [b3Vector3.h <1328:8 1328:16>]
LOCAL_SYMBOL: b3Vector3.h<1328:46> [b3Vector3.h <1328:46 1328:46>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3SimdFloat4) -> b3SimdFloat4 [b3Vector3.h <1328:33 1328:44>]
LOCAL_SYMBOL: b3Vector3.h<1330:19> [b3Vector3.h <1330:19 1330:21>]
REFERENCE_TYPE_USAGE b3Vector3 b3MakeVector3(b3SimdFloat4) -> b3Vector3 [b3Vector3.h <1330:9 1330:17>]
REFERENCE_CALL b3Vector3 b3MakeVector3(b3SimdFloat4) -> void b3Vector3::b3Vector3() [b3Vector3.h <1330:19 1330:21>]
SYMBOL_FUNCTION void b3Vector3::set128(b3SimdFloat4)
REFERENCE_CALL b3Vector3 b3MakeVector3(b3SimdFloat4) -> void b3Vector3::set128(b3SimdFloat4) [b3Vector3.h <1331:13 1331:18>]
LOCAL_SYMBOL: b3Vector3.h<1330:19> [b3Vector3.h <1331:9 1331:11>]
REFERENCE_CALL b3Vector3 b3MakeVector3(b3SimdFloat4) -> void __m128::__m128(const __m128 &) [b3Vector3.h <1331:20 1331:20>]
LOCAL_SYMBOL: b3Vector3.h<1328:46> [b3Vector3.h <1331:20 1331:20>]
REFERENCE_CALL b3Vector3 b3MakeVector3(b3SimdFloat4) -> void b3Vector3::b3Vector3(b3Vector3 &&) [b3Vector3.h <1332:16 1332:18>]
LOCAL_SYMBOL: b3Vector3.h<1330:19> [b3Vector3.h <1332:16 1332:18>]
SYMBOL_FUNCTION b3Vector4 b3MakeVector4(b3SimdFloat4) [b3Vector3.h <1335:1 <1335:18 1335:30> 1340:1>]
REFERENCE_TYPE_USAGE b3Vector4 b3MakeVector4(b3SimdFloat4) -> b3Vector4 [b3Vector3.h <1335:8 1335:16>]
LOCAL_SYMBOL: b3Vector3.h<1335:45> [b3Vector3.h <1335:45 1335:47>]
REFERENCE_TYPE_USAGE b3Vector4 b3MakeVector4(b3SimdFloat4) -> b3SimdFloat4 [b3Vector3.h <1335:32 1335:43>]
LOCAL_SYMBOL: b3Vector3.h<1337:12> [b3Vector3.h <1337:12 1337:14>]
REFERENCE_TYPE_USAGE b3Vector4 b3MakeVector4(b3SimdFloat4) -> b3Vector4 [b3Vector3.h <1337:2 1337:10>]
REFERENCE_CALL b3Vector4 b3MakeVector4(b3SimdFloat4) -> void b3Vector4::b3Vector4() [b3Vector3.h <1337:12 1337:14>]
REFERENCE_CALL b3Vector4 b3MakeVector4(b3SimdFloat4) -> void b3Vector3::set128(b3SimdFloat4) [b3Vector3.h <1338:6 1338:11>]
LOCAL_SYMBOL: b3Vector3.h<1337:12> [b3Vector3.h <1338:2 1338:4>]
REFERENCE_CALL b3Vector4 b3MakeVector4(b3SimdFloat4) -> void __m128::__m128(const __m128 &) [b3Vector3.h <1338:13 1338:15>]
LOCAL_SYMBOL: b3Vector3.h<1335:45> [b3Vector3.h <1338:13 1338:15>]
REFERENCE_CALL b3Vector4 b3MakeVector4(b3SimdFloat4) -> void b3Vector4::b3Vector4(b3Vector4 &&) [b3Vector3.h <1339:9 1339:11>]
LOCAL_SYMBOL: b3Vector3.h<1337:12> [b3Vector3.h <1339:9 1339:11>]
SYMBOL_FUNCTION long b3_maxdot_large(const float *, const float *, unsigned long, float *) [b3Vector3.cpp <41:6 41:20>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> long [b3Vector3.cpp <41:1 41:4>]
LOCAL_SYMBOL: b3Vector3.cpp<41:36> [b3Vector3.cpp <41:36 41:37>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.cpp <41:29 41:33>]
LOCAL_SYMBOL: b3Vector3.cpp<41:53> [b3Vector3.cpp <41:53 41:55>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.cpp <41:46 41:50>]
LOCAL_SYMBOL: b3Vector3.cpp<41:72> [b3Vector3.cpp <41:72 41:76>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> unsigned long [b3Vector3.cpp <41:58 41:65>]
LOCAL_SYMBOL: b3Vector3.cpp<41:86> [b3Vector3.cpp <41:86 41:94>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.cpp <41:79 41:83>]
SYMBOL_FUNCTION long b3_maxdot_large(const float *, const float *, unsigned long, float *) [b3Vector3.cpp <42:1 <42:6 42:20> 423:1>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> long [b3Vector3.cpp <42:1 42:4>]
LOCAL_SYMBOL: b3Vector3.cpp<42:36> [b3Vector3.cpp <42:36 42:37>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.cpp <42:29 42:33>]
LOCAL_SYMBOL: b3Vector3.cpp<42:53> [b3Vector3.cpp <42:53 42:55>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.cpp <42:46 42:50>]
LOCAL_SYMBOL: b3Vector3.cpp<42:72> [b3Vector3.cpp <42:72 42:76>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> unsigned long [b3Vector3.cpp <42:58 42:65>]
LOCAL_SYMBOL: b3Vector3.cpp<42:86> [b3Vector3.cpp <42:86 42:94>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.cpp <42:79 42:83>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <44:19 44:26>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <44:11 44:16>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <44:37 44:42>]
LOCAL_SYMBOL: b3Vector3.cpp<42:36> [b3Vector3.cpp <44:46 44:47>]
LOCAL_SYMBOL: b3Vector3.cpp<45:32> [b3Vector3.cpp <45:32 45:41>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> unsigned char [b3Vector3.cpp <45:18 45:25>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> unsigned char [b3Vector3.cpp <45:51 45:58>]
LOCAL_SYMBOL: b3Vector3.cpp<46:12> [b3Vector3.cpp <46:12 46:17>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <46:5 46:10>]
SYMBOL_FUNCTION __m128 _mm_setr_ps(float, float, float, float)
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_setr_ps(float, float, float, float) [b3Vector3.cpp <46:21 46:31>]
LOCAL_SYMBOL: b3Vector3.cpp<47:12> [b3Vector3.cpp <47:12 47:15>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <47:5 47:10>]
SYMBOL_FUNCTION __m128 _mm_loadu_ps(const float *)
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_loadu_ps(const float *) [b3Vector3.cpp <47:19 47:30>]
LOCAL_SYMBOL: b3Vector3.cpp<42:53> [b3Vector3.cpp <47:33 47:35>]
LOCAL_SYMBOL: b3Vector3.cpp<48:12> [b3Vector3.cpp <48:12 48:14>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <48:5 48:10>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_castsi128_ps(__m128i) [b3Vector3.cpp <48:18 48:30>]
SYMBOL_FUNCTION __m128i _mm_shuffle_epi32(__m128i, int)
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128i _mm_shuffle_epi32(__m128i, int) [b3Vector3.cpp <48:32 48:48>]
SYMBOL_FUNCTION __m128i _mm_castps_si128(__m128)
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128i _mm_castps_si128(__m128) [b3Scalar.h <300:27 300:42>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <48:66 48:69>]
LOCAL_SYMBOL: b3Vector3.cpp<47:12> [b3Vector3.cpp <48:66 48:69>]
LOCAL_SYMBOL: b3Vector3.cpp<49:12> [b3Vector3.cpp <49:12 49:14>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <49:5 49:10>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <49:18 49:30>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <49:33 49:36>]
LOCAL_SYMBOL: b3Vector3.cpp<47:12> [b3Vector3.cpp <49:33 49:36>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <49:39 49:42>]
LOCAL_SYMBOL: b3Vector3.cpp<47:12> [b3Vector3.cpp <49:39 49:42>]
LOCAL_SYMBOL: b3Vector3.cpp<51:10> [b3Vector3.cpp <51:10 51:17>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> long [b3Vector3.cpp <51:5 51:8>]
LOCAL_SYMBOL: b3Vector3.cpp<53:12> [b3Vector3.cpp <53:12 53:18>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> size_t [b3Vector3.cpp <53:5 53:10>]
LOCAL_SYMBOL: b3Vector3.cpp<54:12> [b3Vector3.cpp <54:12 54:22>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <54:5 54:10>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128() [b3Vector3.cpp <54:12 54:22>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <60:12 60:16>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> size_t [b3Vector3.cpp <60:5 60:10>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <61:12 61:14>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <61:5 61:10>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128() [b3Vector3.cpp <61:12 61:14>]
LOCAL_SYMBOL: b3Vector3.cpp<53:12> [b3Vector3.cpp <63:11 63:17>]
LOCAL_SYMBOL: b3Vector3.cpp<53:12> [b3Vector3.cpp <63:24 63:30>]
LOCAL_SYMBOL: b3Vector3.cpp<42:72> [b3Vector3.cpp <63:57 63:61>]
LOCAL_SYMBOL: b3Vector3.cpp<53:12> [b3Vector3.cpp <63:64 63:70>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <65:13 65:13>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <65:9 65:11>]
LOCAL_SYMBOL: b3Vector3.cpp<46:12> [b3Vector3.cpp <65:15 65:20>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <67:14 67:18>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <67:25 67:29>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <67:52 67:56>]
LOCAL_SYMBOL: b3Vector3.cpp<69:20> [b3Vector3.cpp <69:20 69:21>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <69:13 69:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <69:35 69:35>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <69:25 69:32>]
LOCAL_SYMBOL: b3Vector3.cpp<70:20> [b3Vector3.cpp <70:20 70:21>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <70:13 70:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <70:35 70:35>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <70:25 70:32>]
LOCAL_SYMBOL: b3Vector3.cpp<71:20> [b3Vector3.cpp <71:20 71:21>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <71:13 71:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <71:35 71:35>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <71:25 71:32>]
LOCAL_SYMBOL: b3Vector3.cpp<72:20> [b3Vector3.cpp <72:20 72:21>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <72:13 72:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <72:35 72:35>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <72:25 72:32>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <72:49 72:56>]
LOCAL_SYMBOL: b3Vector3.cpp<74:20> [b3Vector3.cpp <74:20 74:22>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <74:13 74:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <74:26 74:38>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <74:41 74:42>]
LOCAL_SYMBOL: b3Vector3.cpp<69:20> [b3Vector3.cpp <74:41 74:42>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <74:45 74:46>]
LOCAL_SYMBOL: b3Vector3.cpp<70:20> [b3Vector3.cpp <74:45 74:46>]
LOCAL_SYMBOL: b3Vector3.cpp<75:20> [b3Vector3.cpp <75:20 75:22>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <75:13 75:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <75:26 75:38>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <75:41 75:42>]
LOCAL_SYMBOL: b3Vector3.cpp<70:20> [b3Vector3.cpp <75:41 75:42>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <75:45 75:46>]
LOCAL_SYMBOL: b3Vector3.cpp<69:20> [b3Vector3.cpp <75:45 75:46>]
LOCAL_SYMBOL: b3Vector3.cpp<76:20> [b3Vector3.cpp <76:20 76:22>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <76:13 76:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <76:26 76:38>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <76:41 76:42>]
LOCAL_SYMBOL: b3Vector3.cpp<71:20> [b3Vector3.cpp <76:41 76:42>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <76:45 76:46>]
LOCAL_SYMBOL: b3Vector3.cpp<72:20> [b3Vector3.cpp <76:45 76:46>]
LOCAL_SYMBOL: b3Vector3.cpp<77:20> [b3Vector3.cpp <77:20 77:22>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <77:13 77:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <77:26 77:38>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <77:41 77:42>]
LOCAL_SYMBOL: b3Vector3.cpp<72:20> [b3Vector3.cpp <77:41 77:42>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <77:45 77:46>]
LOCAL_SYMBOL: b3Vector3.cpp<71:20> [b3Vector3.cpp <77:45 77:46>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <79:17 79:17>]
LOCAL_SYMBOL: b3Vector3.cpp<74:20> [b3Vector3.cpp <79:13 79:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <79:22 79:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <79:19 79:21>]
LOCAL_SYMBOL: b3Vector3.cpp<74:20> [b3Vector3.cpp <79:19 79:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <79:23 79:25>]
LOCAL_SYMBOL: b3Vector3.cpp<49:12> [b3Vector3.cpp <79:23 79:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <80:17 80:17>]
LOCAL_SYMBOL: b3Vector3.cpp<76:20> [b3Vector3.cpp <80:13 80:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <80:22 80:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <80:19 80:21>]
LOCAL_SYMBOL: b3Vector3.cpp<76:20> [b3Vector3.cpp <80:19 80:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <80:23 80:25>]
LOCAL_SYMBOL: b3Vector3.cpp<49:12> [b3Vector3.cpp <80:23 80:25>]
LOCAL_SYMBOL: b3Vector3.cpp<81:20> [b3Vector3.cpp <81:20 81:20>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <81:13 81:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <81:24 81:37>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <81:39 81:41>]
LOCAL_SYMBOL: b3Vector3.cpp<75:20> [b3Vector3.cpp <81:39 81:41>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <81:44 81:46>]
LOCAL_SYMBOL: b3Vector3.cpp<77:20> [b3Vector3.cpp <81:44 81:46>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <82:20 82:20>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <82:13 82:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <82:24 82:37>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <82:39 82:41>]
LOCAL_SYMBOL: b3Vector3.cpp<74:20> [b3Vector3.cpp <82:39 82:41>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <82:44 82:46>]
LOCAL_SYMBOL: b3Vector3.cpp<76:20> [b3Vector3.cpp <82:44 82:46>]
LOCAL_SYMBOL: b3Vector3.cpp<83:20> [b3Vector3.cpp <83:20 83:20>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <83:13 83:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <83:24 83:37>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <83:39 83:41>]
LOCAL_SYMBOL: b3Vector3.cpp<74:20> [b3Vector3.cpp <83:39 83:41>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <83:44 83:46>]
LOCAL_SYMBOL: b3Vector3.cpp<76:20> [b3Vector3.cpp <83:44 83:46>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <84:15 84:15>]
LOCAL_SYMBOL: b3Vector3.cpp<81:20> [b3Vector3.cpp <84:13 84:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <84:18 84:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <84:17 84:17>]
LOCAL_SYMBOL: b3Vector3.cpp<81:20> [b3Vector3.cpp <84:17 84:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <84:19 84:21>]
LOCAL_SYMBOL: b3Vector3.cpp<48:12> [b3Vector3.cpp <84:19 84:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <85:15 85:15>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <85:13 85:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <85:18 85:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <85:17 85:17>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <85:17 85:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <85:19 85:19>]
LOCAL_SYMBOL: b3Vector3.cpp<83:20> [b3Vector3.cpp <85:19 85:19>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <86:15 86:15>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <86:13 86:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <86:18 86:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <86:17 86:17>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <86:17 86:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <86:19 86:19>]
LOCAL_SYMBOL: b3Vector3.cpp<81:20> [b3Vector3.cpp <86:19 86:19>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <87:32 87:32>]
LOCAL_SYMBOL: b3Vector3.cpp<54:12> [b3Vector3.cpp <87:13 87:23>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <87:25 87:29>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <87:34 87:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <88:17 88:17>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <88:13 88:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_max_ps(__m128, __m128) [b3Vector3.cpp <88:19 88:28>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <88:31 88:31>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <88:31 88:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <88:34 88:36>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <88:34 88:36>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <90:16 90:16>]
LOCAL_SYMBOL: b3Vector3.cpp<69:20> [b3Vector3.cpp <90:13 90:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <90:18 90:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <91:16 91:16>]
LOCAL_SYMBOL: b3Vector3.cpp<70:20> [b3Vector3.cpp <91:13 91:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <91:18 91:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <92:16 92:16>]
LOCAL_SYMBOL: b3Vector3.cpp<71:20> [b3Vector3.cpp <92:13 92:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <92:18 92:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <93:16 93:16>]
LOCAL_SYMBOL: b3Vector3.cpp<72:20> [b3Vector3.cpp <93:13 93:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <93:18 93:25>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <93:42 93:49>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <95:17 95:17>]
LOCAL_SYMBOL: b3Vector3.cpp<74:20> [b3Vector3.cpp <95:13 95:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <95:19 95:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <95:34 95:35>]
LOCAL_SYMBOL: b3Vector3.cpp<69:20> [b3Vector3.cpp <95:34 95:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <95:38 95:39>]
LOCAL_SYMBOL: b3Vector3.cpp<70:20> [b3Vector3.cpp <95:38 95:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <96:17 96:17>]
LOCAL_SYMBOL: b3Vector3.cpp<75:20> [b3Vector3.cpp <96:13 96:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <96:19 96:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <96:34 96:35>]
LOCAL_SYMBOL: b3Vector3.cpp<70:20> [b3Vector3.cpp <96:34 96:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <96:38 96:39>]
LOCAL_SYMBOL: b3Vector3.cpp<69:20> [b3Vector3.cpp <96:38 96:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <97:17 97:17>]
LOCAL_SYMBOL: b3Vector3.cpp<76:20> [b3Vector3.cpp <97:13 97:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <97:19 97:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <97:34 97:35>]
LOCAL_SYMBOL: b3Vector3.cpp<71:20> [b3Vector3.cpp <97:34 97:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <97:38 97:39>]
LOCAL_SYMBOL: b3Vector3.cpp<72:20> [b3Vector3.cpp <97:38 97:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <98:17 98:17>]
LOCAL_SYMBOL: b3Vector3.cpp<77:20> [b3Vector3.cpp <98:13 98:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <98:19 98:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <98:34 98:35>]
LOCAL_SYMBOL: b3Vector3.cpp<72:20> [b3Vector3.cpp <98:34 98:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <98:38 98:39>]
LOCAL_SYMBOL: b3Vector3.cpp<71:20> [b3Vector3.cpp <98:38 98:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <100:17 100:17>]
LOCAL_SYMBOL: b3Vector3.cpp<74:20> [b3Vector3.cpp <100:13 100:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <100:22 100:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <100:19 100:21>]
LOCAL_SYMBOL: b3Vector3.cpp<74:20> [b3Vector3.cpp <100:19 100:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <100:23 100:25>]
LOCAL_SYMBOL: b3Vector3.cpp<49:12> [b3Vector3.cpp <100:23 100:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <101:17 101:17>]
LOCAL_SYMBOL: b3Vector3.cpp<76:20> [b3Vector3.cpp <101:13 101:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <101:22 101:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <101:19 101:21>]
LOCAL_SYMBOL: b3Vector3.cpp<76:20> [b3Vector3.cpp <101:19 101:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <101:23 101:25>]
LOCAL_SYMBOL: b3Vector3.cpp<49:12> [b3Vector3.cpp <101:23 101:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <102:15 102:15>]
LOCAL_SYMBOL: b3Vector3.cpp<81:20> [b3Vector3.cpp <102:13 102:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <102:17 102:30>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <102:32 102:34>]
LOCAL_SYMBOL: b3Vector3.cpp<75:20> [b3Vector3.cpp <102:32 102:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <102:37 102:39>]
LOCAL_SYMBOL: b3Vector3.cpp<77:20> [b3Vector3.cpp <102:37 102:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <103:15 103:15>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <103:13 103:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <103:17 103:30>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <103:32 103:34>]
LOCAL_SYMBOL: b3Vector3.cpp<74:20> [b3Vector3.cpp <103:32 103:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <103:37 103:39>]
LOCAL_SYMBOL: b3Vector3.cpp<76:20> [b3Vector3.cpp <103:37 103:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <104:15 104:15>]
LOCAL_SYMBOL: b3Vector3.cpp<83:20> [b3Vector3.cpp <104:13 104:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <104:17 104:30>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <104:32 104:34>]
LOCAL_SYMBOL: b3Vector3.cpp<74:20> [b3Vector3.cpp <104:32 104:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <104:37 104:39>]
LOCAL_SYMBOL: b3Vector3.cpp<76:20> [b3Vector3.cpp <104:37 104:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <105:15 105:15>]
LOCAL_SYMBOL: b3Vector3.cpp<81:20> [b3Vector3.cpp <105:13 105:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <105:18 105:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <105:17 105:17>]
LOCAL_SYMBOL: b3Vector3.cpp<81:20> [b3Vector3.cpp <105:17 105:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <105:19 105:21>]
LOCAL_SYMBOL: b3Vector3.cpp<48:12> [b3Vector3.cpp <105:19 105:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <106:15 106:15>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <106:13 106:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <106:18 106:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <106:17 106:17>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <106:17 106:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <106:19 106:19>]
LOCAL_SYMBOL: b3Vector3.cpp<83:20> [b3Vector3.cpp <106:19 106:19>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <107:15 107:15>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <107:13 107:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <107:18 107:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <107:17 107:17>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <107:17 107:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <107:19 107:19>]
LOCAL_SYMBOL: b3Vector3.cpp<81:20> [b3Vector3.cpp <107:19 107:19>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <108:34 108:34>]
LOCAL_SYMBOL: b3Vector3.cpp<54:12> [b3Vector3.cpp <108:13 108:23>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <108:25 108:29>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <108:36 108:36>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <109:17 109:17>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <109:13 109:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_max_ps(__m128, __m128) [b3Vector3.cpp <109:19 109:28>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <109:31 109:31>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <109:31 109:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <109:34 109:36>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <109:34 109:36>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <111:16 111:16>]
LOCAL_SYMBOL: b3Vector3.cpp<69:20> [b3Vector3.cpp <111:13 111:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <111:18 111:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <112:16 112:16>]
LOCAL_SYMBOL: b3Vector3.cpp<70:20> [b3Vector3.cpp <112:13 112:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <112:18 112:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <113:16 113:16>]
LOCAL_SYMBOL: b3Vector3.cpp<71:20> [b3Vector3.cpp <113:13 113:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <113:18 113:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <114:16 114:16>]
LOCAL_SYMBOL: b3Vector3.cpp<72:20> [b3Vector3.cpp <114:13 114:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <114:18 114:25>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <114:42 114:49>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <116:17 116:17>]
LOCAL_SYMBOL: b3Vector3.cpp<74:20> [b3Vector3.cpp <116:13 116:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <116:19 116:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <116:34 116:35>]
LOCAL_SYMBOL: b3Vector3.cpp<69:20> [b3Vector3.cpp <116:34 116:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <116:38 116:39>]
LOCAL_SYMBOL: b3Vector3.cpp<70:20> [b3Vector3.cpp <116:38 116:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <117:17 117:17>]
LOCAL_SYMBOL: b3Vector3.cpp<75:20> [b3Vector3.cpp <117:13 117:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <117:19 117:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <117:34 117:35>]
LOCAL_SYMBOL: b3Vector3.cpp<70:20> [b3Vector3.cpp <117:34 117:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <117:38 117:39>]
LOCAL_SYMBOL: b3Vector3.cpp<69:20> [b3Vector3.cpp <117:38 117:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <118:17 118:17>]
LOCAL_SYMBOL: b3Vector3.cpp<76:20> [b3Vector3.cpp <118:13 118:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <118:19 118:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <118:34 118:35>]
LOCAL_SYMBOL: b3Vector3.cpp<71:20> [b3Vector3.cpp <118:34 118:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <118:38 118:39>]
LOCAL_SYMBOL: b3Vector3.cpp<72:20> [b3Vector3.cpp <118:38 118:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <119:17 119:17>]
LOCAL_SYMBOL: b3Vector3.cpp<77:20> [b3Vector3.cpp <119:13 119:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <119:19 119:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <119:34 119:35>]
LOCAL_SYMBOL: b3Vector3.cpp<72:20> [b3Vector3.cpp <119:34 119:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <119:38 119:39>]
LOCAL_SYMBOL: b3Vector3.cpp<71:20> [b3Vector3.cpp <119:38 119:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <121:17 121:17>]
LOCAL_SYMBOL: b3Vector3.cpp<74:20> [b3Vector3.cpp <121:13 121:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <121:22 121:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <121:19 121:21>]
LOCAL_SYMBOL: b3Vector3.cpp<74:20> [b3Vector3.cpp <121:19 121:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <121:23 121:25>]
LOCAL_SYMBOL: b3Vector3.cpp<49:12> [b3Vector3.cpp <121:23 121:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <122:17 122:17>]
LOCAL_SYMBOL: b3Vector3.cpp<76:20> [b3Vector3.cpp <122:13 122:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <122:22 122:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <122:19 122:21>]
LOCAL_SYMBOL: b3Vector3.cpp<76:20> [b3Vector3.cpp <122:19 122:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <122:23 122:25>]
LOCAL_SYMBOL: b3Vector3.cpp<49:12> [b3Vector3.cpp <122:23 122:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <123:15 123:15>]
LOCAL_SYMBOL: b3Vector3.cpp<81:20> [b3Vector3.cpp <123:13 123:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <123:17 123:30>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <123:32 123:34>]
LOCAL_SYMBOL: b3Vector3.cpp<75:20> [b3Vector3.cpp <123:32 123:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <123:37 123:39>]
LOCAL_SYMBOL: b3Vector3.cpp<77:20> [b3Vector3.cpp <123:37 123:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <124:15 124:15>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <124:13 124:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <124:17 124:30>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <124:32 124:34>]
LOCAL_SYMBOL: b3Vector3.cpp<74:20> [b3Vector3.cpp <124:32 124:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <124:37 124:39>]
LOCAL_SYMBOL: b3Vector3.cpp<76:20> [b3Vector3.cpp <124:37 124:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <125:15 125:15>]
LOCAL_SYMBOL: b3Vector3.cpp<83:20> [b3Vector3.cpp <125:13 125:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <125:17 125:30>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <125:32 125:34>]
LOCAL_SYMBOL: b3Vector3.cpp<74:20> [b3Vector3.cpp <125:32 125:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <125:37 125:39>]
LOCAL_SYMBOL: b3Vector3.cpp<76:20> [b3Vector3.cpp <125:37 125:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <126:15 126:15>]
LOCAL_SYMBOL: b3Vector3.cpp<81:20> [b3Vector3.cpp <126:13 126:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <126:18 126:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <126:17 126:17>]
LOCAL_SYMBOL: b3Vector3.cpp<81:20> [b3Vector3.cpp <126:17 126:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <126:19 126:21>]
LOCAL_SYMBOL: b3Vector3.cpp<48:12> [b3Vector3.cpp <126:19 126:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <127:15 127:15>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <127:13 127:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <127:18 127:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <127:17 127:17>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <127:17 127:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <127:19 127:19>]
LOCAL_SYMBOL: b3Vector3.cpp<83:20> [b3Vector3.cpp <127:19 127:19>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <128:15 128:15>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <128:13 128:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <128:18 128:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <128:17 128:17>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <128:17 128:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <128:19 128:19>]
LOCAL_SYMBOL: b3Vector3.cpp<81:20> [b3Vector3.cpp <128:19 128:19>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <129:34 129:34>]
LOCAL_SYMBOL: b3Vector3.cpp<54:12> [b3Vector3.cpp <129:13 129:23>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <129:25 129:29>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <129:36 129:36>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <130:17 130:17>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <130:13 130:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_max_ps(__m128, __m128) [b3Vector3.cpp <130:19 130:28>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <130:31 130:31>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <130:31 130:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <130:34 130:36>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <130:34 130:36>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <132:16 132:16>]
LOCAL_SYMBOL: b3Vector3.cpp<69:20> [b3Vector3.cpp <132:13 132:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <132:18 132:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <133:16 133:16>]
LOCAL_SYMBOL: b3Vector3.cpp<70:20> [b3Vector3.cpp <133:13 133:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <133:18 133:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <134:16 134:16>]
LOCAL_SYMBOL: b3Vector3.cpp<71:20> [b3Vector3.cpp <134:13 134:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <134:18 134:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <135:16 135:16>]
LOCAL_SYMBOL: b3Vector3.cpp<72:20> [b3Vector3.cpp <135:13 135:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <135:18 135:25>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <135:42 135:49>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <137:17 137:17>]
LOCAL_SYMBOL: b3Vector3.cpp<74:20> [b3Vector3.cpp <137:13 137:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <137:19 137:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <137:34 137:35>]
LOCAL_SYMBOL: b3Vector3.cpp<69:20> [b3Vector3.cpp <137:34 137:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <137:38 137:39>]
LOCAL_SYMBOL: b3Vector3.cpp<70:20> [b3Vector3.cpp <137:38 137:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <138:17 138:17>]
LOCAL_SYMBOL: b3Vector3.cpp<75:20> [b3Vector3.cpp <138:13 138:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <138:19 138:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <138:34 138:35>]
LOCAL_SYMBOL: b3Vector3.cpp<70:20> [b3Vector3.cpp <138:34 138:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <138:38 138:39>]
LOCAL_SYMBOL: b3Vector3.cpp<69:20> [b3Vector3.cpp <138:38 138:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <139:17 139:17>]
LOCAL_SYMBOL: b3Vector3.cpp<76:20> [b3Vector3.cpp <139:13 139:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <139:19 139:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <139:34 139:35>]
LOCAL_SYMBOL: b3Vector3.cpp<71:20> [b3Vector3.cpp <139:34 139:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <139:38 139:39>]
LOCAL_SYMBOL: b3Vector3.cpp<72:20> [b3Vector3.cpp <139:38 139:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <140:17 140:17>]
LOCAL_SYMBOL: b3Vector3.cpp<77:20> [b3Vector3.cpp <140:13 140:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <140:19 140:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <140:34 140:35>]
LOCAL_SYMBOL: b3Vector3.cpp<72:20> [b3Vector3.cpp <140:34 140:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <140:38 140:39>]
LOCAL_SYMBOL: b3Vector3.cpp<71:20> [b3Vector3.cpp <140:38 140:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <142:17 142:17>]
LOCAL_SYMBOL: b3Vector3.cpp<74:20> [b3Vector3.cpp <142:13 142:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <142:22 142:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <142:19 142:21>]
LOCAL_SYMBOL: b3Vector3.cpp<74:20> [b3Vector3.cpp <142:19 142:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <142:23 142:25>]
LOCAL_SYMBOL: b3Vector3.cpp<49:12> [b3Vector3.cpp <142:23 142:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <143:17 143:17>]
LOCAL_SYMBOL: b3Vector3.cpp<76:20> [b3Vector3.cpp <143:13 143:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <143:22 143:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <143:19 143:21>]
LOCAL_SYMBOL: b3Vector3.cpp<76:20> [b3Vector3.cpp <143:19 143:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <143:23 143:25>]
LOCAL_SYMBOL: b3Vector3.cpp<49:12> [b3Vector3.cpp <143:23 143:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <144:15 144:15>]
LOCAL_SYMBOL: b3Vector3.cpp<81:20> [b3Vector3.cpp <144:13 144:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <144:17 144:30>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <144:32 144:34>]
LOCAL_SYMBOL: b3Vector3.cpp<75:20> [b3Vector3.cpp <144:32 144:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <144:37 144:39>]
LOCAL_SYMBOL: b3Vector3.cpp<77:20> [b3Vector3.cpp <144:37 144:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <145:15 145:15>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <145:13 145:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <145:17 145:30>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <145:32 145:34>]
LOCAL_SYMBOL: b3Vector3.cpp<74:20> [b3Vector3.cpp <145:32 145:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <145:37 145:39>]
LOCAL_SYMBOL: b3Vector3.cpp<76:20> [b3Vector3.cpp <145:37 145:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <146:15 146:15>]
LOCAL_SYMBOL: b3Vector3.cpp<83:20> [b3Vector3.cpp <146:13 146:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <146:17 146:30>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <146:32 146:34>]
LOCAL_SYMBOL: b3Vector3.cpp<74:20> [b3Vector3.cpp <146:32 146:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <146:37 146:39>]
LOCAL_SYMBOL: b3Vector3.cpp<76:20> [b3Vector3.cpp <146:37 146:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <147:15 147:15>]
LOCAL_SYMBOL: b3Vector3.cpp<81:20> [b3Vector3.cpp <147:13 147:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <147:18 147:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <147:17 147:17>]
LOCAL_SYMBOL: b3Vector3.cpp<81:20> [b3Vector3.cpp <147:17 147:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <147:19 147:21>]
LOCAL_SYMBOL: b3Vector3.cpp<48:12> [b3Vector3.cpp <147:19 147:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <148:15 148:15>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <148:13 148:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <148:18 148:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <148:17 148:17>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <148:17 148:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <148:19 148:19>]
LOCAL_SYMBOL: b3Vector3.cpp<83:20> [b3Vector3.cpp <148:19 148:19>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <149:15 149:15>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <149:13 149:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <149:18 149:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <149:17 149:17>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <149:17 149:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <149:19 149:19>]
LOCAL_SYMBOL: b3Vector3.cpp<81:20> [b3Vector3.cpp <149:19 149:19>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <150:34 150:34>]
LOCAL_SYMBOL: b3Vector3.cpp<54:12> [b3Vector3.cpp <150:13 150:23>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <150:25 150:29>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <150:36 150:36>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <151:17 151:17>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <151:13 151:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_max_ps(__m128, __m128) [b3Vector3.cpp <151:19 151:28>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <151:31 151:31>]
LOCAL_SYMBOL: b3Vector3.cpp<82:20> [b3Vector3.cpp <151:31 151:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <151:34 151:36>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <151:34 151:36>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> int _mm_movemask_ps(__m128) [b3Vector3.cpp <157:20 157:34>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <157:38 157:43>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_cmpeq_ps(__m128, __m128) [b3Vector3.cpp <157:46 157:57>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <157:59 157:61>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <157:59 157:61>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <157:64 157:69>]
LOCAL_SYMBOL: b3Vector3.cpp<46:12> [b3Vector3.cpp <157:64 157:69>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <160:17 160:17>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <160:13 160:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_max_ps(__m128, __m128) [b3Vector3.cpp <160:19 160:28>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <160:30 160:32>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <160:30 160:32>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <160:36 160:41>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <160:44 160:57>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <160:60 160:62>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <160:60 160:62>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <160:65 160:67>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <160:65 160:67>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <161:17 161:17>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <161:13 161:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_max_ps(__m128, __m128) [b3Vector3.cpp <161:19 161:28>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <161:30 161:32>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <161:30 161:32>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <161:36 161:41>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <161:44 161:57>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <161:60 161:62>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <161:60 161:62>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <161:65 161:67>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <161:65 161:67>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <163:20 163:20>]
LOCAL_SYMBOL: b3Vector3.cpp<46:12> [b3Vector3.cpp <163:13 163:18>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <163:22 163:24>]
LOCAL_SYMBOL: b3Vector3.cpp<166:20> [b3Vector3.cpp <166:20 166:23>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> size_t [b3Vector3.cpp <166:13 166:18>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <167:18 167:22>]
LOCAL_SYMBOL: b3Vector3.cpp<166:20> [b3Vector3.cpp <167:35 167:38>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> int _mm_movemask_ps(__m128) [b3Vector3.cpp <167:40 167:54>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_cmpeq_ps(__m128, __m128) [b3Vector3.cpp <167:57 167:68>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <167:88 167:88>]
LOCAL_SYMBOL: b3Vector3.cpp<54:12> [b3Vector3.cpp <167:71 167:81>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <167:83 167:87>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <167:91 167:93>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <167:91 167:93>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <167:99 167:103>]
LOCAL_SYMBOL: b3Vector3.cpp<51:10> [b3Vector3.cpp <170:13 170:20>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <170:26 170:30>]
LOCAL_SYMBOL: b3Vector3.cpp<53:12> [b3Vector3.cpp <170:34 170:40>]
LOCAL_SYMBOL: b3Vector3.cpp<45:32> [b3Vector3.cpp <170:44 170:53>]
LOCAL_SYMBOL: b3Vector3.cpp<166:20> [b3Vector3.cpp <170:55 170:58>]
LOCAL_SYMBOL: b3Vector3.cpp<42:72> [b3Vector3.cpp <175:5 175:9>]
LOCAL_SYMBOL: b3Vector3.cpp<53:12> [b3Vector3.cpp <175:14 175:20>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <178:9 178:9>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <178:5 178:7>]
LOCAL_SYMBOL: b3Vector3.cpp<46:12> [b3Vector3.cpp <178:11 178:16>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <179:5 179:9>]
LOCAL_SYMBOL: b3Vector3.cpp<42:72> [b3Vector3.cpp <182:21 182:25>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <184:16 184:20>]
LOCAL_SYMBOL: b3Vector3.cpp<42:72> [b3Vector3.cpp <184:29 184:33>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <184:40 184:44>]
LOCAL_SYMBOL: b3Vector3.cpp<186:20> [b3Vector3.cpp <186:20 186:21>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <186:13 186:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <186:35 186:35>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <186:25 186:32>]
LOCAL_SYMBOL: b3Vector3.cpp<187:20> [b3Vector3.cpp <187:20 187:21>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <187:13 187:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <187:35 187:35>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <187:25 187:32>]
LOCAL_SYMBOL: b3Vector3.cpp<188:20> [b3Vector3.cpp <188:20 188:21>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <188:13 188:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <188:35 188:35>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <188:25 188:32>]
LOCAL_SYMBOL: b3Vector3.cpp<189:20> [b3Vector3.cpp <189:20 189:21>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <189:13 189:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <189:35 189:35>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <189:25 189:32>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <189:49 189:56>]
LOCAL_SYMBOL: b3Vector3.cpp<191:20> [b3Vector3.cpp <191:20 191:22>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <191:13 191:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <191:26 191:38>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <191:41 191:42>]
LOCAL_SYMBOL: b3Vector3.cpp<186:20> [b3Vector3.cpp <191:41 191:42>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <191:45 191:46>]
LOCAL_SYMBOL: b3Vector3.cpp<187:20> [b3Vector3.cpp <191:45 191:46>]
LOCAL_SYMBOL: b3Vector3.cpp<192:20> [b3Vector3.cpp <192:20 192:22>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <192:13 192:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <192:26 192:38>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <192:41 192:42>]
LOCAL_SYMBOL: b3Vector3.cpp<187:20> [b3Vector3.cpp <192:41 192:42>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <192:45 192:46>]
LOCAL_SYMBOL: b3Vector3.cpp<186:20> [b3Vector3.cpp <192:45 192:46>]
LOCAL_SYMBOL: b3Vector3.cpp<193:20> [b3Vector3.cpp <193:20 193:22>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <193:13 193:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <193:26 193:38>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <193:41 193:42>]
LOCAL_SYMBOL: b3Vector3.cpp<188:20> [b3Vector3.cpp <193:41 193:42>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <193:45 193:46>]
LOCAL_SYMBOL: b3Vector3.cpp<189:20> [b3Vector3.cpp <193:45 193:46>]
LOCAL_SYMBOL: b3Vector3.cpp<194:20> [b3Vector3.cpp <194:20 194:22>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <194:13 194:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <194:26 194:38>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <194:41 194:42>]
LOCAL_SYMBOL: b3Vector3.cpp<189:20> [b3Vector3.cpp <194:41 194:42>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <194:45 194:46>]
LOCAL_SYMBOL: b3Vector3.cpp<188:20> [b3Vector3.cpp <194:45 194:46>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <196:17 196:17>]
LOCAL_SYMBOL: b3Vector3.cpp<191:20> [b3Vector3.cpp <196:13 196:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <196:22 196:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <196:19 196:21>]
LOCAL_SYMBOL: b3Vector3.cpp<191:20> [b3Vector3.cpp <196:19 196:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <196:23 196:25>]
LOCAL_SYMBOL: b3Vector3.cpp<49:12> [b3Vector3.cpp <196:23 196:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <197:17 197:17>]
LOCAL_SYMBOL: b3Vector3.cpp<193:20> [b3Vector3.cpp <197:13 197:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <197:22 197:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <197:19 197:21>]
LOCAL_SYMBOL: b3Vector3.cpp<193:20> [b3Vector3.cpp <197:19 197:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <197:23 197:25>]
LOCAL_SYMBOL: b3Vector3.cpp<49:12> [b3Vector3.cpp <197:23 197:25>]
LOCAL_SYMBOL: b3Vector3.cpp<198:20> [b3Vector3.cpp <198:20 198:20>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <198:13 198:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <198:24 198:37>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <198:39 198:41>]
LOCAL_SYMBOL: b3Vector3.cpp<192:20> [b3Vector3.cpp <198:39 198:41>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <198:44 198:46>]
LOCAL_SYMBOL: b3Vector3.cpp<194:20> [b3Vector3.cpp <198:44 198:46>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <199:20 199:20>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <199:13 199:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <199:24 199:37>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <199:39 199:41>]
LOCAL_SYMBOL: b3Vector3.cpp<191:20> [b3Vector3.cpp <199:39 199:41>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <199:44 199:46>]
LOCAL_SYMBOL: b3Vector3.cpp<193:20> [b3Vector3.cpp <199:44 199:46>]
LOCAL_SYMBOL: b3Vector3.cpp<200:20> [b3Vector3.cpp <200:20 200:20>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <200:13 200:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <200:24 200:37>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <200:39 200:41>]
LOCAL_SYMBOL: b3Vector3.cpp<191:20> [b3Vector3.cpp <200:39 200:41>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <200:44 200:46>]
LOCAL_SYMBOL: b3Vector3.cpp<193:20> [b3Vector3.cpp <200:44 200:46>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <201:15 201:15>]
LOCAL_SYMBOL: b3Vector3.cpp<198:20> [b3Vector3.cpp <201:13 201:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <201:18 201:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <201:17 201:17>]
LOCAL_SYMBOL: b3Vector3.cpp<198:20> [b3Vector3.cpp <201:17 201:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <201:19 201:21>]
LOCAL_SYMBOL: b3Vector3.cpp<48:12> [b3Vector3.cpp <201:19 201:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <202:15 202:15>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <202:13 202:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <202:18 202:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <202:17 202:17>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <202:17 202:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <202:19 202:19>]
LOCAL_SYMBOL: b3Vector3.cpp<200:20> [b3Vector3.cpp <202:19 202:19>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <203:15 203:15>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <203:13 203:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <203:18 203:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <203:17 203:17>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <203:17 203:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <203:19 203:19>]
LOCAL_SYMBOL: b3Vector3.cpp<198:20> [b3Vector3.cpp <203:19 203:19>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <204:32 204:32>]
LOCAL_SYMBOL: b3Vector3.cpp<54:12> [b3Vector3.cpp <204:13 204:23>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <204:25 204:29>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <204:34 204:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <205:17 205:17>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <205:13 205:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_max_ps(__m128, __m128) [b3Vector3.cpp <205:19 205:28>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <205:31 205:31>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <205:31 205:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <205:34 205:36>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <205:34 205:36>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <207:16 207:16>]
LOCAL_SYMBOL: b3Vector3.cpp<186:20> [b3Vector3.cpp <207:13 207:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <207:18 207:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <208:16 208:16>]
LOCAL_SYMBOL: b3Vector3.cpp<187:20> [b3Vector3.cpp <208:13 208:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <208:18 208:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <209:16 209:16>]
LOCAL_SYMBOL: b3Vector3.cpp<188:20> [b3Vector3.cpp <209:13 209:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <209:18 209:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <210:16 210:16>]
LOCAL_SYMBOL: b3Vector3.cpp<189:20> [b3Vector3.cpp <210:13 210:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <210:18 210:25>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <210:42 210:49>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <212:17 212:17>]
LOCAL_SYMBOL: b3Vector3.cpp<191:20> [b3Vector3.cpp <212:13 212:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <212:19 212:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <212:34 212:35>]
LOCAL_SYMBOL: b3Vector3.cpp<186:20> [b3Vector3.cpp <212:34 212:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <212:38 212:39>]
LOCAL_SYMBOL: b3Vector3.cpp<187:20> [b3Vector3.cpp <212:38 212:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <213:17 213:17>]
LOCAL_SYMBOL: b3Vector3.cpp<192:20> [b3Vector3.cpp <213:13 213:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <213:19 213:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <213:34 213:35>]
LOCAL_SYMBOL: b3Vector3.cpp<187:20> [b3Vector3.cpp <213:34 213:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <213:38 213:39>]
LOCAL_SYMBOL: b3Vector3.cpp<186:20> [b3Vector3.cpp <213:38 213:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <214:17 214:17>]
LOCAL_SYMBOL: b3Vector3.cpp<193:20> [b3Vector3.cpp <214:13 214:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <214:19 214:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <214:34 214:35>]
LOCAL_SYMBOL: b3Vector3.cpp<188:20> [b3Vector3.cpp <214:34 214:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <214:38 214:39>]
LOCAL_SYMBOL: b3Vector3.cpp<189:20> [b3Vector3.cpp <214:38 214:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <215:17 215:17>]
LOCAL_SYMBOL: b3Vector3.cpp<194:20> [b3Vector3.cpp <215:13 215:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <215:19 215:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <215:34 215:35>]
LOCAL_SYMBOL: b3Vector3.cpp<189:20> [b3Vector3.cpp <215:34 215:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <215:38 215:39>]
LOCAL_SYMBOL: b3Vector3.cpp<188:20> [b3Vector3.cpp <215:38 215:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <217:17 217:17>]
LOCAL_SYMBOL: b3Vector3.cpp<191:20> [b3Vector3.cpp <217:13 217:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <217:22 217:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <217:19 217:21>]
LOCAL_SYMBOL: b3Vector3.cpp<191:20> [b3Vector3.cpp <217:19 217:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <217:23 217:25>]
LOCAL_SYMBOL: b3Vector3.cpp<49:12> [b3Vector3.cpp <217:23 217:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <218:17 218:17>]
LOCAL_SYMBOL: b3Vector3.cpp<193:20> [b3Vector3.cpp <218:13 218:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <218:22 218:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <218:19 218:21>]
LOCAL_SYMBOL: b3Vector3.cpp<193:20> [b3Vector3.cpp <218:19 218:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <218:23 218:25>]
LOCAL_SYMBOL: b3Vector3.cpp<49:12> [b3Vector3.cpp <218:23 218:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <219:15 219:15>]
LOCAL_SYMBOL: b3Vector3.cpp<198:20> [b3Vector3.cpp <219:13 219:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <219:17 219:30>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <219:32 219:34>]
LOCAL_SYMBOL: b3Vector3.cpp<192:20> [b3Vector3.cpp <219:32 219:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <219:37 219:39>]
LOCAL_SYMBOL: b3Vector3.cpp<194:20> [b3Vector3.cpp <219:37 219:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <220:15 220:15>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <220:13 220:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <220:17 220:30>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <220:32 220:34>]
LOCAL_SYMBOL: b3Vector3.cpp<191:20> [b3Vector3.cpp <220:32 220:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <220:37 220:39>]
LOCAL_SYMBOL: b3Vector3.cpp<193:20> [b3Vector3.cpp <220:37 220:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <221:15 221:15>]
LOCAL_SYMBOL: b3Vector3.cpp<200:20> [b3Vector3.cpp <221:13 221:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <221:17 221:30>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <221:32 221:34>]
LOCAL_SYMBOL: b3Vector3.cpp<191:20> [b3Vector3.cpp <221:32 221:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <221:37 221:39>]
LOCAL_SYMBOL: b3Vector3.cpp<193:20> [b3Vector3.cpp <221:37 221:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <222:15 222:15>]
LOCAL_SYMBOL: b3Vector3.cpp<198:20> [b3Vector3.cpp <222:13 222:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <222:18 222:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <222:17 222:17>]
LOCAL_SYMBOL: b3Vector3.cpp<198:20> [b3Vector3.cpp <222:17 222:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <222:19 222:21>]
LOCAL_SYMBOL: b3Vector3.cpp<48:12> [b3Vector3.cpp <222:19 222:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <223:15 223:15>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <223:13 223:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <223:18 223:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <223:17 223:17>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <223:17 223:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <223:19 223:19>]
LOCAL_SYMBOL: b3Vector3.cpp<200:20> [b3Vector3.cpp <223:19 223:19>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <224:15 224:15>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <224:13 224:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <224:18 224:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <224:17 224:17>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <224:17 224:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <224:19 224:19>]
LOCAL_SYMBOL: b3Vector3.cpp<198:20> [b3Vector3.cpp <224:19 224:19>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <225:34 225:34>]
LOCAL_SYMBOL: b3Vector3.cpp<54:12> [b3Vector3.cpp <225:13 225:23>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <225:25 225:29>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <225:36 225:36>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <226:17 226:17>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <226:13 226:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_max_ps(__m128, __m128) [b3Vector3.cpp <226:19 226:28>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <226:31 226:31>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <226:31 226:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <226:34 226:36>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <226:34 226:36>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <228:16 228:16>]
LOCAL_SYMBOL: b3Vector3.cpp<186:20> [b3Vector3.cpp <228:13 228:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <228:18 228:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <229:16 229:16>]
LOCAL_SYMBOL: b3Vector3.cpp<187:20> [b3Vector3.cpp <229:13 229:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <229:18 229:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <230:16 230:16>]
LOCAL_SYMBOL: b3Vector3.cpp<188:20> [b3Vector3.cpp <230:13 230:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <230:18 230:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <231:16 231:16>]
LOCAL_SYMBOL: b3Vector3.cpp<189:20> [b3Vector3.cpp <231:13 231:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <231:18 231:25>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <231:42 231:49>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <233:17 233:17>]
LOCAL_SYMBOL: b3Vector3.cpp<191:20> [b3Vector3.cpp <233:13 233:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <233:19 233:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <233:34 233:35>]
LOCAL_SYMBOL: b3Vector3.cpp<186:20> [b3Vector3.cpp <233:34 233:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <233:38 233:39>]
LOCAL_SYMBOL: b3Vector3.cpp<187:20> [b3Vector3.cpp <233:38 233:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <234:17 234:17>]
LOCAL_SYMBOL: b3Vector3.cpp<192:20> [b3Vector3.cpp <234:13 234:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <234:19 234:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <234:34 234:35>]
LOCAL_SYMBOL: b3Vector3.cpp<187:20> [b3Vector3.cpp <234:34 234:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <234:38 234:39>]
LOCAL_SYMBOL: b3Vector3.cpp<186:20> [b3Vector3.cpp <234:38 234:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <235:17 235:17>]
LOCAL_SYMBOL: b3Vector3.cpp<193:20> [b3Vector3.cpp <235:13 235:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <235:19 235:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <235:34 235:35>]
LOCAL_SYMBOL: b3Vector3.cpp<188:20> [b3Vector3.cpp <235:34 235:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <235:38 235:39>]
LOCAL_SYMBOL: b3Vector3.cpp<189:20> [b3Vector3.cpp <235:38 235:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <236:17 236:17>]
LOCAL_SYMBOL: b3Vector3.cpp<194:20> [b3Vector3.cpp <236:13 236:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <236:19 236:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <236:34 236:35>]
LOCAL_SYMBOL: b3Vector3.cpp<189:20> [b3Vector3.cpp <236:34 236:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <236:38 236:39>]
LOCAL_SYMBOL: b3Vector3.cpp<188:20> [b3Vector3.cpp <236:38 236:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <238:17 238:17>]
LOCAL_SYMBOL: b3Vector3.cpp<191:20> [b3Vector3.cpp <238:13 238:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <238:22 238:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <238:19 238:21>]
LOCAL_SYMBOL: b3Vector3.cpp<191:20> [b3Vector3.cpp <238:19 238:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <238:23 238:25>]
LOCAL_SYMBOL: b3Vector3.cpp<49:12> [b3Vector3.cpp <238:23 238:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <239:17 239:17>]
LOCAL_SYMBOL: b3Vector3.cpp<193:20> [b3Vector3.cpp <239:13 239:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <239:22 239:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <239:19 239:21>]
LOCAL_SYMBOL: b3Vector3.cpp<193:20> [b3Vector3.cpp <239:19 239:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <239:23 239:25>]
LOCAL_SYMBOL: b3Vector3.cpp<49:12> [b3Vector3.cpp <239:23 239:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <240:15 240:15>]
LOCAL_SYMBOL: b3Vector3.cpp<198:20> [b3Vector3.cpp <240:13 240:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <240:17 240:30>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <240:32 240:34>]
LOCAL_SYMBOL: b3Vector3.cpp<192:20> [b3Vector3.cpp <240:32 240:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <240:37 240:39>]
LOCAL_SYMBOL: b3Vector3.cpp<194:20> [b3Vector3.cpp <240:37 240:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <241:15 241:15>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <241:13 241:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <241:17 241:30>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <241:32 241:34>]
LOCAL_SYMBOL: b3Vector3.cpp<191:20> [b3Vector3.cpp <241:32 241:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <241:37 241:39>]
LOCAL_SYMBOL: b3Vector3.cpp<193:20> [b3Vector3.cpp <241:37 241:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <242:15 242:15>]
LOCAL_SYMBOL: b3Vector3.cpp<200:20> [b3Vector3.cpp <242:13 242:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <242:17 242:30>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <242:32 242:34>]
LOCAL_SYMBOL: b3Vector3.cpp<191:20> [b3Vector3.cpp <242:32 242:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <242:37 242:39>]
LOCAL_SYMBOL: b3Vector3.cpp<193:20> [b3Vector3.cpp <242:37 242:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <243:15 243:15>]
LOCAL_SYMBOL: b3Vector3.cpp<198:20> [b3Vector3.cpp <243:13 243:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <243:18 243:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <243:17 243:17>]
LOCAL_SYMBOL: b3Vector3.cpp<198:20> [b3Vector3.cpp <243:17 243:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <243:19 243:21>]
LOCAL_SYMBOL: b3Vector3.cpp<48:12> [b3Vector3.cpp <243:19 243:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <244:15 244:15>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <244:13 244:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <244:18 244:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <244:17 244:17>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <244:17 244:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <244:19 244:19>]
LOCAL_SYMBOL: b3Vector3.cpp<200:20> [b3Vector3.cpp <244:19 244:19>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <245:15 245:15>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <245:13 245:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <245:18 245:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <245:17 245:17>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <245:17 245:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <245:19 245:19>]
LOCAL_SYMBOL: b3Vector3.cpp<198:20> [b3Vector3.cpp <245:19 245:19>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <246:34 246:34>]
LOCAL_SYMBOL: b3Vector3.cpp<54:12> [b3Vector3.cpp <246:13 246:23>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <246:25 246:29>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <246:36 246:36>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <247:17 247:17>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <247:13 247:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_max_ps(__m128, __m128) [b3Vector3.cpp <247:19 247:28>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <247:31 247:31>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <247:31 247:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <247:34 247:36>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <247:34 247:36>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <249:16 249:16>]
LOCAL_SYMBOL: b3Vector3.cpp<186:20> [b3Vector3.cpp <249:13 249:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <249:18 249:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <250:16 250:16>]
LOCAL_SYMBOL: b3Vector3.cpp<187:20> [b3Vector3.cpp <250:13 250:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <250:18 250:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <251:16 251:16>]
LOCAL_SYMBOL: b3Vector3.cpp<188:20> [b3Vector3.cpp <251:13 251:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <251:18 251:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <252:16 252:16>]
LOCAL_SYMBOL: b3Vector3.cpp<189:20> [b3Vector3.cpp <252:13 252:14>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <252:18 252:25>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <252:42 252:49>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <254:17 254:17>]
LOCAL_SYMBOL: b3Vector3.cpp<191:20> [b3Vector3.cpp <254:13 254:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <254:19 254:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <254:34 254:35>]
LOCAL_SYMBOL: b3Vector3.cpp<186:20> [b3Vector3.cpp <254:34 254:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <254:38 254:39>]
LOCAL_SYMBOL: b3Vector3.cpp<187:20> [b3Vector3.cpp <254:38 254:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <255:17 255:17>]
LOCAL_SYMBOL: b3Vector3.cpp<192:20> [b3Vector3.cpp <255:13 255:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <255:19 255:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <255:34 255:35>]
LOCAL_SYMBOL: b3Vector3.cpp<187:20> [b3Vector3.cpp <255:34 255:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <255:38 255:39>]
LOCAL_SYMBOL: b3Vector3.cpp<186:20> [b3Vector3.cpp <255:38 255:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <256:17 256:17>]
LOCAL_SYMBOL: b3Vector3.cpp<193:20> [b3Vector3.cpp <256:13 256:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <256:19 256:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <256:34 256:35>]
LOCAL_SYMBOL: b3Vector3.cpp<188:20> [b3Vector3.cpp <256:34 256:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <256:38 256:39>]
LOCAL_SYMBOL: b3Vector3.cpp<189:20> [b3Vector3.cpp <256:38 256:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <257:17 257:17>]
LOCAL_SYMBOL: b3Vector3.cpp<194:20> [b3Vector3.cpp <257:13 257:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <257:19 257:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <257:34 257:35>]
LOCAL_SYMBOL: b3Vector3.cpp<189:20> [b3Vector3.cpp <257:34 257:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <257:38 257:39>]
LOCAL_SYMBOL: b3Vector3.cpp<188:20> [b3Vector3.cpp <257:38 257:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <259:17 259:17>]
LOCAL_SYMBOL: b3Vector3.cpp<191:20> [b3Vector3.cpp <259:13 259:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <259:22 259:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <259:19 259:21>]
LOCAL_SYMBOL: b3Vector3.cpp<191:20> [b3Vector3.cpp <259:19 259:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <259:23 259:25>]
LOCAL_SYMBOL: b3Vector3.cpp<49:12> [b3Vector3.cpp <259:23 259:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <260:17 260:17>]
LOCAL_SYMBOL: b3Vector3.cpp<193:20> [b3Vector3.cpp <260:13 260:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <260:22 260:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <260:19 260:21>]
LOCAL_SYMBOL: b3Vector3.cpp<193:20> [b3Vector3.cpp <260:19 260:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <260:23 260:25>]
LOCAL_SYMBOL: b3Vector3.cpp<49:12> [b3Vector3.cpp <260:23 260:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <261:15 261:15>]
LOCAL_SYMBOL: b3Vector3.cpp<198:20> [b3Vector3.cpp <261:13 261:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <261:17 261:30>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <261:32 261:34>]
LOCAL_SYMBOL: b3Vector3.cpp<192:20> [b3Vector3.cpp <261:32 261:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <261:37 261:39>]
LOCAL_SYMBOL: b3Vector3.cpp<194:20> [b3Vector3.cpp <261:37 261:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <262:15 262:15>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <262:13 262:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <262:17 262:30>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <262:32 262:34>]
LOCAL_SYMBOL: b3Vector3.cpp<191:20> [b3Vector3.cpp <262:32 262:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <262:37 262:39>]
LOCAL_SYMBOL: b3Vector3.cpp<193:20> [b3Vector3.cpp <262:37 262:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <263:15 263:15>]
LOCAL_SYMBOL: b3Vector3.cpp<200:20> [b3Vector3.cpp <263:13 263:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <263:17 263:30>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <263:32 263:34>]
LOCAL_SYMBOL: b3Vector3.cpp<191:20> [b3Vector3.cpp <263:32 263:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <263:37 263:39>]
LOCAL_SYMBOL: b3Vector3.cpp<193:20> [b3Vector3.cpp <263:37 263:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <264:15 264:15>]
LOCAL_SYMBOL: b3Vector3.cpp<198:20> [b3Vector3.cpp <264:13 264:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <264:18 264:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <264:17 264:17>]
LOCAL_SYMBOL: b3Vector3.cpp<198:20> [b3Vector3.cpp <264:17 264:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <264:19 264:21>]
LOCAL_SYMBOL: b3Vector3.cpp<48:12> [b3Vector3.cpp <264:19 264:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <265:15 265:15>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <265:13 265:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <265:18 265:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <265:17 265:17>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <265:17 265:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <265:19 265:19>]
LOCAL_SYMBOL: b3Vector3.cpp<200:20> [b3Vector3.cpp <265:19 265:19>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <266:15 266:15>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <266:13 266:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <266:18 266:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <266:17 266:17>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <266:17 266:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <266:19 266:19>]
LOCAL_SYMBOL: b3Vector3.cpp<198:20> [b3Vector3.cpp <266:19 266:19>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <267:34 267:34>]
LOCAL_SYMBOL: b3Vector3.cpp<54:12> [b3Vector3.cpp <267:13 267:23>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <267:25 267:29>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <267:36 267:36>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <268:17 268:17>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <268:13 268:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_max_ps(__m128, __m128) [b3Vector3.cpp <268:19 268:28>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <268:31 268:31>]
LOCAL_SYMBOL: b3Vector3.cpp<199:20> [b3Vector3.cpp <268:31 268:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <268:34 268:36>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <268:34 268:36>]
LOCAL_SYMBOL: b3Vector3.cpp<274:12> [b3Vector3.cpp <274:12 274:21>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> size_t [b3Vector3.cpp <274:5 274:10>]
LOCAL_SYMBOL: b3Vector3.cpp<42:72> [b3Vector3.cpp <274:26 274:30>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <274:43 274:47>]
LOCAL_SYMBOL: b3Vector3.cpp<274:12> [b3Vector3.cpp <275:9 275:18>]
LOCAL_SYMBOL: b3Vector3.cpp<317:31> [b3Vector3.cpp <317:31 317:31>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> unsigned int [b3Vector3.cpp <317:18 317:25>]
LOCAL_SYMBOL: b3Vector3.cpp<317:31> [b3Vector3.cpp <317:36 317:36>]
LOCAL_SYMBOL: b3Vector3.cpp<274:12> [b3Vector3.cpp <317:38 317:47>]
LOCAL_SYMBOL: b3Vector3.cpp<317:31> [b3Vector3.cpp <317:52 317:52>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <317:56 317:60>]
LOCAL_SYMBOL: b3Vector3.cpp<319:24> [b3Vector3.cpp <319:24 319:25>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <319:17 319:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <319:39 319:39>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <319:29 319:36>]
LOCAL_SYMBOL: b3Vector3.cpp<320:24> [b3Vector3.cpp <320:24 320:25>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <320:17 320:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <320:39 320:39>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <320:29 320:36>]
LOCAL_SYMBOL: b3Vector3.cpp<321:24> [b3Vector3.cpp <321:24 321:25>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <321:17 321:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <321:39 321:39>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <321:29 321:36>]
LOCAL_SYMBOL: b3Vector3.cpp<322:24> [b3Vector3.cpp <322:24 322:25>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <322:17 322:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <322:39 322:39>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <322:29 322:36>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <323:17 323:24>]
LOCAL_SYMBOL: b3Vector3.cpp<325:24> [b3Vector3.cpp <325:24 325:26>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <325:17 325:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <325:30 325:42>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <325:45 325:46>]
LOCAL_SYMBOL: b3Vector3.cpp<319:24> [b3Vector3.cpp <325:45 325:46>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <325:49 325:50>]
LOCAL_SYMBOL: b3Vector3.cpp<320:24> [b3Vector3.cpp <325:49 325:50>]
LOCAL_SYMBOL: b3Vector3.cpp<326:24> [b3Vector3.cpp <326:24 326:26>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <326:17 326:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <326:30 326:42>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <326:45 326:46>]
LOCAL_SYMBOL: b3Vector3.cpp<320:24> [b3Vector3.cpp <326:45 326:46>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <326:49 326:50>]
LOCAL_SYMBOL: b3Vector3.cpp<319:24> [b3Vector3.cpp <326:49 326:50>]
LOCAL_SYMBOL: b3Vector3.cpp<327:24> [b3Vector3.cpp <327:24 327:26>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <327:17 327:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <327:30 327:42>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <327:45 327:46>]
LOCAL_SYMBOL: b3Vector3.cpp<321:24> [b3Vector3.cpp <327:45 327:46>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <327:49 327:50>]
LOCAL_SYMBOL: b3Vector3.cpp<322:24> [b3Vector3.cpp <327:49 327:50>]
LOCAL_SYMBOL: b3Vector3.cpp<328:24> [b3Vector3.cpp <328:24 328:26>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <328:17 328:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <328:30 328:42>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <328:45 328:46>]
LOCAL_SYMBOL: b3Vector3.cpp<322:24> [b3Vector3.cpp <328:45 328:46>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <328:49 328:50>]
LOCAL_SYMBOL: b3Vector3.cpp<321:24> [b3Vector3.cpp <328:49 328:50>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <330:21 330:21>]
LOCAL_SYMBOL: b3Vector3.cpp<325:24> [b3Vector3.cpp <330:17 330:19>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <330:26 330:26>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <330:23 330:25>]
LOCAL_SYMBOL: b3Vector3.cpp<325:24> [b3Vector3.cpp <330:23 330:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <330:27 330:29>]
LOCAL_SYMBOL: b3Vector3.cpp<49:12> [b3Vector3.cpp <330:27 330:29>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <331:21 331:21>]
LOCAL_SYMBOL: b3Vector3.cpp<327:24> [b3Vector3.cpp <331:17 331:19>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <331:26 331:26>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <331:23 331:25>]
LOCAL_SYMBOL: b3Vector3.cpp<327:24> [b3Vector3.cpp <331:23 331:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <331:27 331:29>]
LOCAL_SYMBOL: b3Vector3.cpp<49:12> [b3Vector3.cpp <331:27 331:29>]
LOCAL_SYMBOL: b3Vector3.cpp<332:24> [b3Vector3.cpp <332:24 332:24>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <332:17 332:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <332:28 332:41>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <332:43 332:45>]
LOCAL_SYMBOL: b3Vector3.cpp<326:24> [b3Vector3.cpp <332:43 332:45>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <332:48 332:50>]
LOCAL_SYMBOL: b3Vector3.cpp<328:24> [b3Vector3.cpp <332:48 332:50>]
LOCAL_SYMBOL: b3Vector3.cpp<333:24> [b3Vector3.cpp <333:24 333:24>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <333:17 333:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <333:28 333:41>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <333:43 333:45>]
LOCAL_SYMBOL: b3Vector3.cpp<325:24> [b3Vector3.cpp <333:43 333:45>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <333:48 333:50>]
LOCAL_SYMBOL: b3Vector3.cpp<327:24> [b3Vector3.cpp <333:48 333:50>]
LOCAL_SYMBOL: b3Vector3.cpp<334:24> [b3Vector3.cpp <334:24 334:24>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <334:17 334:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <334:28 334:41>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <334:43 334:45>]
LOCAL_SYMBOL: b3Vector3.cpp<325:24> [b3Vector3.cpp <334:43 334:45>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <334:48 334:50>]
LOCAL_SYMBOL: b3Vector3.cpp<327:24> [b3Vector3.cpp <334:48 334:50>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <335:19 335:19>]
LOCAL_SYMBOL: b3Vector3.cpp<332:24> [b3Vector3.cpp <335:17 335:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <335:22 335:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <335:21 335:21>]
LOCAL_SYMBOL: b3Vector3.cpp<332:24> [b3Vector3.cpp <335:21 335:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <335:23 335:25>]
LOCAL_SYMBOL: b3Vector3.cpp<48:12> [b3Vector3.cpp <335:23 335:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <336:19 336:19>]
LOCAL_SYMBOL: b3Vector3.cpp<333:24> [b3Vector3.cpp <336:17 336:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <336:22 336:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <336:21 336:21>]
LOCAL_SYMBOL: b3Vector3.cpp<333:24> [b3Vector3.cpp <336:21 336:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <336:23 336:23>]
LOCAL_SYMBOL: b3Vector3.cpp<334:24> [b3Vector3.cpp <336:23 336:23>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <337:19 337:19>]
LOCAL_SYMBOL: b3Vector3.cpp<333:24> [b3Vector3.cpp <337:17 337:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <337:22 337:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <337:21 337:21>]
LOCAL_SYMBOL: b3Vector3.cpp<333:24> [b3Vector3.cpp <337:21 337:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <337:23 337:23>]
LOCAL_SYMBOL: b3Vector3.cpp<332:24> [b3Vector3.cpp <337:23 337:23>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <338:36 338:36>]
LOCAL_SYMBOL: b3Vector3.cpp<54:12> [b3Vector3.cpp <338:17 338:27>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <338:29 338:33>]
LOCAL_SYMBOL: b3Vector3.cpp<333:24> [b3Vector3.cpp <338:38 338:38>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <339:21 339:21>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <339:17 339:19>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_max_ps(__m128, __m128) [b3Vector3.cpp <339:23 339:32>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <339:35 339:35>]
LOCAL_SYMBOL: b3Vector3.cpp<333:24> [b3Vector3.cpp <339:35 339:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <339:38 339:40>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <339:38 339:40>]
LOCAL_SYMBOL: b3Vector3.cpp<42:72> [b3Vector3.cpp <346:9 346:13>]
LOCAL_SYMBOL: b3Vector3.cpp<348:16> [b3Vector3.cpp <348:16 348:17>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <348:9 348:14>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128() [b3Vector3.cpp <348:16 348:17>]
LOCAL_SYMBOL: b3Vector3.cpp<348:20> [b3Vector3.cpp <348:20 348:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128() [b3Vector3.cpp <348:20 348:21>]
LOCAL_SYMBOL: b3Vector3.cpp<348:24> [b3Vector3.cpp <348:24 348:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128() [b3Vector3.cpp <348:24 348:25>]
LOCAL_SYMBOL: b3Vector3.cpp<348:28> [b3Vector3.cpp <348:28 348:28>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128() [b3Vector3.cpp <348:28 348:28>]
LOCAL_SYMBOL: b3Vector3.cpp<348:31> [b3Vector3.cpp <348:31 348:31>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128() [b3Vector3.cpp <348:31 348:31>]
LOCAL_SYMBOL: b3Vector3.cpp<348:34> [b3Vector3.cpp <348:34 348:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128() [b3Vector3.cpp <348:34 348:34>]
LOCAL_SYMBOL: b3Vector3.cpp<42:72> [b3Vector3.cpp <349:17 349:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <353:20 353:20>]
LOCAL_SYMBOL: b3Vector3.cpp<348:16> [b3Vector3.cpp <353:17 353:18>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <353:22 353:29>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <354:20 354:20>]
LOCAL_SYMBOL: b3Vector3.cpp<348:20> [b3Vector3.cpp <354:17 354:18>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <354:22 354:29>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <355:20 355:20>]
LOCAL_SYMBOL: b3Vector3.cpp<348:24> [b3Vector3.cpp <355:17 355:18>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <355:22 355:29>]
LOCAL_SYMBOL: b3Vector3.cpp<358:24> [b3Vector3.cpp <358:24 358:26>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <358:17 358:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <358:30 358:42>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <358:45 358:46>]
LOCAL_SYMBOL: b3Vector3.cpp<348:16> [b3Vector3.cpp <358:45 358:46>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <358:49 358:50>]
LOCAL_SYMBOL: b3Vector3.cpp<348:20> [b3Vector3.cpp <358:49 358:50>]
LOCAL_SYMBOL: b3Vector3.cpp<359:24> [b3Vector3.cpp <359:24 359:26>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <359:17 359:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <359:30 359:42>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <359:45 359:46>]
LOCAL_SYMBOL: b3Vector3.cpp<348:20> [b3Vector3.cpp <359:45 359:46>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <359:49 359:50>]
LOCAL_SYMBOL: b3Vector3.cpp<348:16> [b3Vector3.cpp <359:49 359:50>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <360:21 360:21>]
LOCAL_SYMBOL: b3Vector3.cpp<358:24> [b3Vector3.cpp <360:17 360:19>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <360:26 360:26>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <360:23 360:25>]
LOCAL_SYMBOL: b3Vector3.cpp<358:24> [b3Vector3.cpp <360:23 360:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <360:27 360:29>]
LOCAL_SYMBOL: b3Vector3.cpp<49:12> [b3Vector3.cpp <360:27 360:29>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <361:19 361:19>]
LOCAL_SYMBOL: b3Vector3.cpp<348:34> [b3Vector3.cpp <361:17 361:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <361:21 361:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <361:36 361:38>]
LOCAL_SYMBOL: b3Vector3.cpp<359:24> [b3Vector3.cpp <361:36 361:38>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <361:41 361:42>]
LOCAL_SYMBOL: b3Vector3.cpp<348:24> [b3Vector3.cpp <361:41 361:42>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <362:19 362:19>]
LOCAL_SYMBOL: b3Vector3.cpp<348:34> [b3Vector3.cpp <362:17 362:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <362:22 362:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <362:21 362:21>]
LOCAL_SYMBOL: b3Vector3.cpp<348:34> [b3Vector3.cpp <362:21 362:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <362:23 362:25>]
LOCAL_SYMBOL: b3Vector3.cpp<48:12> [b3Vector3.cpp <362:23 362:25>]
LOCAL_SYMBOL: b3Vector3.cpp<363:24> [b3Vector3.cpp <363:24 363:26>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <363:17 363:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <363:30 363:42>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <363:44 363:45>]
LOCAL_SYMBOL: b3Vector3.cpp<348:24> [b3Vector3.cpp <363:44 363:45>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <363:48 363:49>]
LOCAL_SYMBOL: b3Vector3.cpp<348:24> [b3Vector3.cpp <363:48 363:49>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <364:21 364:21>]
LOCAL_SYMBOL: b3Vector3.cpp<363:24> [b3Vector3.cpp <364:17 364:19>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <364:26 364:26>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <364:23 364:25>]
LOCAL_SYMBOL: b3Vector3.cpp<363:24> [b3Vector3.cpp <364:23 364:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <364:27 364:29>]
LOCAL_SYMBOL: b3Vector3.cpp<49:12> [b3Vector3.cpp <364:27 364:29>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <365:19 365:19>]
LOCAL_SYMBOL: b3Vector3.cpp<348:28> [b3Vector3.cpp <365:17 365:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <365:21 365:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <365:36 365:38>]
LOCAL_SYMBOL: b3Vector3.cpp<358:24> [b3Vector3.cpp <365:36 365:38>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <365:41 365:43>]
LOCAL_SYMBOL: b3Vector3.cpp<363:24> [b3Vector3.cpp <365:41 365:43>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <366:19 366:19>]
LOCAL_SYMBOL: b3Vector3.cpp<348:31> [b3Vector3.cpp <366:17 366:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <366:21 366:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <366:36 366:38>]
LOCAL_SYMBOL: b3Vector3.cpp<358:24> [b3Vector3.cpp <366:36 366:38>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <366:41 366:43>]
LOCAL_SYMBOL: b3Vector3.cpp<363:24> [b3Vector3.cpp <366:41 366:43>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <371:20 371:20>]
LOCAL_SYMBOL: b3Vector3.cpp<348:16> [b3Vector3.cpp <371:17 371:18>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <371:22 371:29>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <372:20 372:20>]
LOCAL_SYMBOL: b3Vector3.cpp<348:20> [b3Vector3.cpp <372:17 372:18>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <372:22 372:29>]
LOCAL_SYMBOL: b3Vector3.cpp<373:24> [b3Vector3.cpp <373:24 373:25>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <373:17 373:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <373:29 373:41>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <373:43 373:44>]
LOCAL_SYMBOL: b3Vector3.cpp<348:16> [b3Vector3.cpp <373:43 373:44>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <373:47 373:48>]
LOCAL_SYMBOL: b3Vector3.cpp<348:20> [b3Vector3.cpp <373:47 373:48>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <374:19 374:19>]
LOCAL_SYMBOL: b3Vector3.cpp<348:34> [b3Vector3.cpp <374:17 374:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <374:21 374:33>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <374:35 374:36>]
LOCAL_SYMBOL: b3Vector3.cpp<348:20> [b3Vector3.cpp <374:35 374:36>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <374:39 374:40>]
LOCAL_SYMBOL: b3Vector3.cpp<348:16> [b3Vector3.cpp <374:39 374:40>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <375:20 375:20>]
LOCAL_SYMBOL: b3Vector3.cpp<373:24> [b3Vector3.cpp <375:17 375:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <375:24 375:24>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <375:22 375:23>]
LOCAL_SYMBOL: b3Vector3.cpp<373:24> [b3Vector3.cpp <375:22 375:23>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <375:25 375:27>]
LOCAL_SYMBOL: b3Vector3.cpp<49:12> [b3Vector3.cpp <375:25 375:27>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <376:19 376:19>]
LOCAL_SYMBOL: b3Vector3.cpp<348:34> [b3Vector3.cpp <376:17 376:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <376:21 376:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <376:37 376:37>]
LOCAL_SYMBOL: b3Vector3.cpp<348:34> [b3Vector3.cpp <376:37 376:37>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <376:40 376:40>]
LOCAL_SYMBOL: b3Vector3.cpp<348:34> [b3Vector3.cpp <376:40 376:40>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <377:19 377:19>]
LOCAL_SYMBOL: b3Vector3.cpp<348:28> [b3Vector3.cpp <377:17 377:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <377:21 377:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <377:37 377:38>]
LOCAL_SYMBOL: b3Vector3.cpp<373:24> [b3Vector3.cpp <377:37 377:38>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <377:41 377:42>]
LOCAL_SYMBOL: b3Vector3.cpp<373:24> [b3Vector3.cpp <377:41 377:42>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <378:19 378:19>]
LOCAL_SYMBOL: b3Vector3.cpp<348:31> [b3Vector3.cpp <378:17 378:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <378:21 378:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <378:37 378:38>]
LOCAL_SYMBOL: b3Vector3.cpp<373:24> [b3Vector3.cpp <378:37 378:38>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <378:41 378:42>]
LOCAL_SYMBOL: b3Vector3.cpp<373:24> [b3Vector3.cpp <378:41 378:42>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <379:19 379:19>]
LOCAL_SYMBOL: b3Vector3.cpp<348:34> [b3Vector3.cpp <379:17 379:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <379:22 379:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <379:21 379:21>]
LOCAL_SYMBOL: b3Vector3.cpp<348:34> [b3Vector3.cpp <379:21 379:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <379:23 379:25>]
LOCAL_SYMBOL: b3Vector3.cpp<48:12> [b3Vector3.cpp <379:23 379:25>]
LOCAL_SYMBOL: b3Vector3.cpp<384:24> [b3Vector3.cpp <384:24 384:25>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <384:17 384:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <384:39 384:39>]
LOCAL_SYMBOL: b3Vector3.cpp<44:19> [b3Vector3.cpp <384:29 384:36>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <385:19 385:19>]
LOCAL_SYMBOL: b3Vector3.cpp<348:34> [b3Vector3.cpp <385:17 385:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <385:22 385:35>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <385:38 385:39>]
LOCAL_SYMBOL: b3Vector3.cpp<384:24> [b3Vector3.cpp <385:38 385:39>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <385:42 385:43>]
LOCAL_SYMBOL: b3Vector3.cpp<384:24> [b3Vector3.cpp <385:42 385:43>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <386:20 386:20>]
LOCAL_SYMBOL: b3Vector3.cpp<384:24> [b3Vector3.cpp <386:17 386:18>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <386:24 386:24>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <386:22 386:23>]
LOCAL_SYMBOL: b3Vector3.cpp<384:24> [b3Vector3.cpp <386:22 386:23>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <386:25 386:27>]
LOCAL_SYMBOL: b3Vector3.cpp<49:12> [b3Vector3.cpp <386:25 386:27>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <387:19 387:19>]
LOCAL_SYMBOL: b3Vector3.cpp<348:34> [b3Vector3.cpp <387:17 387:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <387:22 387:22>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <387:21 387:21>]
LOCAL_SYMBOL: b3Vector3.cpp<348:34> [b3Vector3.cpp <387:21 387:21>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <387:23 387:25>]
LOCAL_SYMBOL: b3Vector3.cpp<48:12> [b3Vector3.cpp <387:23 387:25>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <388:19 388:19>]
LOCAL_SYMBOL: b3Vector3.cpp<348:28> [b3Vector3.cpp <388:17 388:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <388:21 388:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <388:36 388:37>]
LOCAL_SYMBOL: b3Vector3.cpp<384:24> [b3Vector3.cpp <388:36 388:37>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <388:40 388:41>]
LOCAL_SYMBOL: b3Vector3.cpp<384:24> [b3Vector3.cpp <388:40 388:41>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <389:19 389:19>]
LOCAL_SYMBOL: b3Vector3.cpp<348:31> [b3Vector3.cpp <389:17 389:17>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <389:21 389:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <389:36 389:37>]
LOCAL_SYMBOL: b3Vector3.cpp<384:24> [b3Vector3.cpp <389:36 389:37>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <389:40 389:41>]
LOCAL_SYMBOL: b3Vector3.cpp<384:24> [b3Vector3.cpp <389:40 389:41>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <393:11 393:11>]
LOCAL_SYMBOL: b3Vector3.cpp<348:28> [b3Vector3.cpp <393:9 393:9>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <393:14 393:14>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <393:13 393:13>]
LOCAL_SYMBOL: b3Vector3.cpp<348:28> [b3Vector3.cpp <393:13 393:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <393:15 393:15>]
LOCAL_SYMBOL: b3Vector3.cpp<348:31> [b3Vector3.cpp <393:15 393:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <394:11 394:11>]
LOCAL_SYMBOL: b3Vector3.cpp<348:28> [b3Vector3.cpp <394:9 394:9>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <394:14 394:14>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <394:13 394:13>]
LOCAL_SYMBOL: b3Vector3.cpp<348:28> [b3Vector3.cpp <394:13 394:13>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <394:15 394:15>]
LOCAL_SYMBOL: b3Vector3.cpp<348:34> [b3Vector3.cpp <394:15 394:15>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <395:28 395:28>]
LOCAL_SYMBOL: b3Vector3.cpp<54:12> [b3Vector3.cpp <395:9 395:19>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <395:21 395:25>]
LOCAL_SYMBOL: b3Vector3.cpp<348:28> [b3Vector3.cpp <395:30 395:30>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <396:13 396:13>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <396:9 396:11>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_max_ps(__m128, __m128) [b3Vector3.cpp <396:15 396:24>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <396:27 396:27>]
LOCAL_SYMBOL: b3Vector3.cpp<348:28> [b3Vector3.cpp <396:27 396:27>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <396:30 396:32>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <396:30 396:32>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <397:9 397:13>]
LOCAL_SYMBOL: b3Vector3.cpp<53:12> [b3Vector3.cpp <401:14 401:20>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> int _mm_movemask_ps(__m128) [b3Vector3.cpp <401:32 401:46>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <401:50 401:55>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_cmpeq_ps(__m128, __m128) [b3Vector3.cpp <401:58 401:69>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <401:71 401:73>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <401:71 401:73>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <401:76 401:81>]
LOCAL_SYMBOL: b3Vector3.cpp<46:12> [b3Vector3.cpp <401:76 401:81>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <404:13 404:13>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <404:9 404:11>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_max_ps(__m128, __m128) [b3Vector3.cpp <404:15 404:24>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <404:26 404:28>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <404:26 404:28>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <404:32 404:37>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <404:40 404:53>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <404:56 404:58>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <404:56 404:58>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <404:61 404:63>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <404:61 404:63>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <405:13 405:13>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <405:9 405:11>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_max_ps(__m128, __m128) [b3Vector3.cpp <405:15 405:24>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <405:26 405:28>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <405:26 405:28>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <405:32 405:37>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <405:40 405:53>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <405:56 405:58>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <405:56 405:58>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <405:61 405:63>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <405:61 405:63>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <412:16 412:16>]
LOCAL_SYMBOL: b3Vector3.cpp<46:12> [b3Vector3.cpp <412:9 412:14>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <412:18 412:20>]
LOCAL_SYMBOL: b3Vector3.cpp<415:16> [b3Vector3.cpp <415:16 415:19>]
REFERENCE_TYPE_USAGE long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> size_t [b3Vector3.cpp <415:9 415:14>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <416:14 416:18>]
LOCAL_SYMBOL: b3Vector3.cpp<415:16> [b3Vector3.cpp <416:31 416:34>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> int _mm_movemask_ps(__m128) [b3Vector3.cpp <416:36 416:50>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_cmpeq_ps(__m128, __m128) [b3Vector3.cpp <416:53 416:64>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <416:84 416:84>]
LOCAL_SYMBOL: b3Vector3.cpp<54:12> [b3Vector3.cpp <416:67 416:77>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <416:79 416:83>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <416:87 416:89>]
LOCAL_SYMBOL: b3Vector3.cpp<61:12> [b3Vector3.cpp <416:87 416:89>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <416:95 416:99>]
LOCAL_SYMBOL: b3Vector3.cpp<51:10> [b3Vector3.cpp <418:9 418:16>]
LOCAL_SYMBOL: b3Vector3.cpp<60:12> [b3Vector3.cpp <418:22 418:26>]
LOCAL_SYMBOL: b3Vector3.cpp<53:12> [b3Vector3.cpp <418:30 418:36>]
LOCAL_SYMBOL: b3Vector3.cpp<45:32> [b3Vector3.cpp <418:40 418:49>]
LOCAL_SYMBOL: b3Vector3.cpp<415:16> [b3Vector3.cpp <418:51 418:54>]
SYMBOL_FUNCTION void _mm_store_ss(float *, __m128)
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void _mm_store_ss(float *, __m128) [b3Vector3.cpp <421:5 421:16>]
LOCAL_SYMBOL: b3Vector3.cpp<42:86> [b3Vector3.cpp <421:19 421:27>]
REFERENCE_CALL long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <421:30 421:35>]
LOCAL_SYMBOL: b3Vector3.cpp<46:12> [b3Vector3.cpp <421:30 421:35>]
LOCAL_SYMBOL: b3Vector3.cpp<51:10> [b3Vector3.cpp <422:12 422:19>]
SYMBOL_FUNCTION long b3_mindot_large(const float *, const float *, unsigned long, float *) [b3Vector3.cpp <425:6 425:20>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> long [b3Vector3.cpp <425:1 425:4>]
LOCAL_SYMBOL: b3Vector3.cpp<425:36> [b3Vector3.cpp <425:36 425:37>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.cpp <425:29 425:33>]
LOCAL_SYMBOL: b3Vector3.cpp<425:53> [b3Vector3.cpp <425:53 425:55>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.cpp <425:46 425:50>]
LOCAL_SYMBOL: b3Vector3.cpp<425:72> [b3Vector3.cpp <425:72 425:76>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> unsigned long [b3Vector3.cpp <425:58 425:65>]
LOCAL_SYMBOL: b3Vector3.cpp<425:86> [b3Vector3.cpp <425:86 425:94>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.cpp <425:79 425:83>]
SYMBOL_FUNCTION long b3_mindot_large(const float *, const float *, unsigned long, float *) [b3Vector3.cpp <427:1 <427:6 427:20> 812:1>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> long [b3Vector3.cpp <427:1 427:4>]
LOCAL_SYMBOL: b3Vector3.cpp<427:36> [b3Vector3.cpp <427:36 427:37>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.cpp <427:29 427:33>]
LOCAL_SYMBOL: b3Vector3.cpp<427:53> [b3Vector3.cpp <427:53 427:55>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.cpp <427:46 427:50>]
LOCAL_SYMBOL: b3Vector3.cpp<427:72> [b3Vector3.cpp <427:72 427:76>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> unsigned long [b3Vector3.cpp <427:58 427:65>]
LOCAL_SYMBOL: b3Vector3.cpp<427:86> [b3Vector3.cpp <427:86 427:94>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.cpp <427:79 427:83>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <429:19 429:26>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <429:11 429:16>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <429:37 429:42>]
LOCAL_SYMBOL: b3Vector3.cpp<427:36> [b3Vector3.cpp <429:46 429:47>]
LOCAL_SYMBOL: b3Vector3.cpp<430:32> [b3Vector3.cpp <430:32 430:41>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> unsigned char [b3Vector3.cpp <430:18 430:25>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> unsigned char [b3Vector3.cpp <430:51 430:58>]
LOCAL_SYMBOL: b3Vector3.cpp<432:12> [b3Vector3.cpp <432:12 432:17>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <432:5 432:10>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_setr_ps(float, float, float, float) [b3Vector3.cpp <432:21 432:31>]
LOCAL_SYMBOL: b3Vector3.cpp<433:12> [b3Vector3.cpp <433:12 433:15>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <433:5 433:10>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_loadu_ps(const float *) [b3Vector3.cpp <433:19 433:30>]
LOCAL_SYMBOL: b3Vector3.cpp<427:53> [b3Vector3.cpp <433:33 433:35>]
LOCAL_SYMBOL: b3Vector3.cpp<434:12> [b3Vector3.cpp <434:12 434:14>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <434:5 434:10>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_castsi128_ps(__m128i) [b3Vector3.cpp <434:18 434:30>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128i _mm_shuffle_epi32(__m128i, int) [b3Vector3.cpp <434:32 434:48>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128i _mm_castps_si128(__m128) [b3Scalar.h <300:27 300:42>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <434:66 434:69>]
LOCAL_SYMBOL: b3Vector3.cpp<433:12> [b3Vector3.cpp <434:66 434:69>]
LOCAL_SYMBOL: b3Vector3.cpp<435:12> [b3Vector3.cpp <435:12 435:14>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <435:5 435:10>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <435:18 435:30>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <435:33 435:36>]
LOCAL_SYMBOL: b3Vector3.cpp<433:12> [b3Vector3.cpp <435:33 435:36>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <435:39 435:42>]
LOCAL_SYMBOL: b3Vector3.cpp<433:12> [b3Vector3.cpp <435:39 435:42>]
LOCAL_SYMBOL: b3Vector3.cpp<437:10> [b3Vector3.cpp <437:10 437:17>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> long [b3Vector3.cpp <437:5 437:8>]
LOCAL_SYMBOL: b3Vector3.cpp<439:12> [b3Vector3.cpp <439:12 439:18>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> size_t [b3Vector3.cpp <439:5 439:10>]
LOCAL_SYMBOL: b3Vector3.cpp<440:12> [b3Vector3.cpp <440:12 440:22>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <440:5 440:10>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128() [b3Vector3.cpp <440:12 440:22>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <446:12 446:16>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> size_t [b3Vector3.cpp <446:5 446:10>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <447:12 447:14>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <447:5 447:10>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128() [b3Vector3.cpp <447:12 447:14>]
LOCAL_SYMBOL: b3Vector3.cpp<439:12> [b3Vector3.cpp <449:11 449:17>]
LOCAL_SYMBOL: b3Vector3.cpp<439:12> [b3Vector3.cpp <449:24 449:30>]
LOCAL_SYMBOL: b3Vector3.cpp<427:72> [b3Vector3.cpp <449:57 449:61>]
LOCAL_SYMBOL: b3Vector3.cpp<439:12> [b3Vector3.cpp <449:64 449:70>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <451:13 451:13>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <451:9 451:11>]
LOCAL_SYMBOL: b3Vector3.cpp<432:12> [b3Vector3.cpp <451:15 451:20>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <453:14 453:18>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <453:25 453:29>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <453:52 453:56>]
LOCAL_SYMBOL: b3Vector3.cpp<455:20> [b3Vector3.cpp <455:20 455:21>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <455:13 455:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <455:35 455:35>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <455:25 455:32>]
LOCAL_SYMBOL: b3Vector3.cpp<456:20> [b3Vector3.cpp <456:20 456:21>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <456:13 456:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <456:35 456:35>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <456:25 456:32>]
LOCAL_SYMBOL: b3Vector3.cpp<457:20> [b3Vector3.cpp <457:20 457:21>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <457:13 457:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <457:35 457:35>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <457:25 457:32>]
LOCAL_SYMBOL: b3Vector3.cpp<458:20> [b3Vector3.cpp <458:20 458:21>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <458:13 458:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <458:35 458:35>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <458:25 458:32>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <458:49 458:56>]
LOCAL_SYMBOL: b3Vector3.cpp<460:20> [b3Vector3.cpp <460:20 460:22>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <460:13 460:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <460:26 460:38>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <460:41 460:42>]
LOCAL_SYMBOL: b3Vector3.cpp<455:20> [b3Vector3.cpp <460:41 460:42>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <460:45 460:46>]
LOCAL_SYMBOL: b3Vector3.cpp<456:20> [b3Vector3.cpp <460:45 460:46>]
LOCAL_SYMBOL: b3Vector3.cpp<461:20> [b3Vector3.cpp <461:20 461:22>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <461:13 461:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <461:26 461:38>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <461:41 461:42>]
LOCAL_SYMBOL: b3Vector3.cpp<456:20> [b3Vector3.cpp <461:41 461:42>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <461:45 461:46>]
LOCAL_SYMBOL: b3Vector3.cpp<455:20> [b3Vector3.cpp <461:45 461:46>]
LOCAL_SYMBOL: b3Vector3.cpp<462:20> [b3Vector3.cpp <462:20 462:22>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <462:13 462:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <462:26 462:38>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <462:41 462:42>]
LOCAL_SYMBOL: b3Vector3.cpp<457:20> [b3Vector3.cpp <462:41 462:42>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <462:45 462:46>]
LOCAL_SYMBOL: b3Vector3.cpp<458:20> [b3Vector3.cpp <462:45 462:46>]
LOCAL_SYMBOL: b3Vector3.cpp<463:20> [b3Vector3.cpp <463:20 463:22>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <463:13 463:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <463:26 463:38>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <463:41 463:42>]
LOCAL_SYMBOL: b3Vector3.cpp<458:20> [b3Vector3.cpp <463:41 463:42>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <463:45 463:46>]
LOCAL_SYMBOL: b3Vector3.cpp<457:20> [b3Vector3.cpp <463:45 463:46>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <465:17 465:17>]
LOCAL_SYMBOL: b3Vector3.cpp<460:20> [b3Vector3.cpp <465:13 465:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <465:22 465:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <465:19 465:21>]
LOCAL_SYMBOL: b3Vector3.cpp<460:20> [b3Vector3.cpp <465:19 465:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <465:23 465:25>]
LOCAL_SYMBOL: b3Vector3.cpp<435:12> [b3Vector3.cpp <465:23 465:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <466:17 466:17>]
LOCAL_SYMBOL: b3Vector3.cpp<462:20> [b3Vector3.cpp <466:13 466:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <466:22 466:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <466:19 466:21>]
LOCAL_SYMBOL: b3Vector3.cpp<462:20> [b3Vector3.cpp <466:19 466:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <466:23 466:25>]
LOCAL_SYMBOL: b3Vector3.cpp<435:12> [b3Vector3.cpp <466:23 466:25>]
LOCAL_SYMBOL: b3Vector3.cpp<467:20> [b3Vector3.cpp <467:20 467:20>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <467:13 467:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <467:24 467:37>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <467:39 467:41>]
LOCAL_SYMBOL: b3Vector3.cpp<461:20> [b3Vector3.cpp <467:39 467:41>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <467:44 467:46>]
LOCAL_SYMBOL: b3Vector3.cpp<463:20> [b3Vector3.cpp <467:44 467:46>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <468:20 468:20>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <468:13 468:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <468:24 468:37>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <468:39 468:41>]
LOCAL_SYMBOL: b3Vector3.cpp<460:20> [b3Vector3.cpp <468:39 468:41>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <468:44 468:46>]
LOCAL_SYMBOL: b3Vector3.cpp<462:20> [b3Vector3.cpp <468:44 468:46>]
LOCAL_SYMBOL: b3Vector3.cpp<469:20> [b3Vector3.cpp <469:20 469:20>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <469:13 469:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <469:24 469:37>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <469:39 469:41>]
LOCAL_SYMBOL: b3Vector3.cpp<460:20> [b3Vector3.cpp <469:39 469:41>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <469:44 469:46>]
LOCAL_SYMBOL: b3Vector3.cpp<462:20> [b3Vector3.cpp <469:44 469:46>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <470:15 470:15>]
LOCAL_SYMBOL: b3Vector3.cpp<467:20> [b3Vector3.cpp <470:13 470:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <470:18 470:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <470:17 470:17>]
LOCAL_SYMBOL: b3Vector3.cpp<467:20> [b3Vector3.cpp <470:17 470:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <470:19 470:21>]
LOCAL_SYMBOL: b3Vector3.cpp<434:12> [b3Vector3.cpp <470:19 470:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <471:15 471:15>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <471:13 471:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <471:18 471:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <471:17 471:17>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <471:17 471:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <471:19 471:19>]
LOCAL_SYMBOL: b3Vector3.cpp<469:20> [b3Vector3.cpp <471:19 471:19>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <472:15 472:15>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <472:13 472:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <472:18 472:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <472:17 472:17>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <472:17 472:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <472:19 472:19>]
LOCAL_SYMBOL: b3Vector3.cpp<467:20> [b3Vector3.cpp <472:19 472:19>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <473:32 473:32>]
LOCAL_SYMBOL: b3Vector3.cpp<440:12> [b3Vector3.cpp <473:13 473:23>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <473:25 473:29>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <473:34 473:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <474:17 474:17>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <474:13 474:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_min_ps(__m128, __m128) [b3Vector3.cpp <474:19 474:28>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <474:31 474:31>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <474:31 474:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <474:34 474:36>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <474:34 474:36>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <476:16 476:16>]
LOCAL_SYMBOL: b3Vector3.cpp<455:20> [b3Vector3.cpp <476:13 476:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <476:18 476:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <477:16 477:16>]
LOCAL_SYMBOL: b3Vector3.cpp<456:20> [b3Vector3.cpp <477:13 477:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <477:18 477:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <478:16 478:16>]
LOCAL_SYMBOL: b3Vector3.cpp<457:20> [b3Vector3.cpp <478:13 478:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <478:18 478:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <479:16 479:16>]
LOCAL_SYMBOL: b3Vector3.cpp<458:20> [b3Vector3.cpp <479:13 479:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <479:18 479:25>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <479:42 479:49>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <481:17 481:17>]
LOCAL_SYMBOL: b3Vector3.cpp<460:20> [b3Vector3.cpp <481:13 481:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <481:19 481:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <481:34 481:35>]
LOCAL_SYMBOL: b3Vector3.cpp<455:20> [b3Vector3.cpp <481:34 481:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <481:38 481:39>]
LOCAL_SYMBOL: b3Vector3.cpp<456:20> [b3Vector3.cpp <481:38 481:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <482:17 482:17>]
LOCAL_SYMBOL: b3Vector3.cpp<461:20> [b3Vector3.cpp <482:13 482:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <482:19 482:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <482:34 482:35>]
LOCAL_SYMBOL: b3Vector3.cpp<456:20> [b3Vector3.cpp <482:34 482:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <482:38 482:39>]
LOCAL_SYMBOL: b3Vector3.cpp<455:20> [b3Vector3.cpp <482:38 482:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <483:17 483:17>]
LOCAL_SYMBOL: b3Vector3.cpp<462:20> [b3Vector3.cpp <483:13 483:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <483:19 483:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <483:34 483:35>]
LOCAL_SYMBOL: b3Vector3.cpp<457:20> [b3Vector3.cpp <483:34 483:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <483:38 483:39>]
LOCAL_SYMBOL: b3Vector3.cpp<458:20> [b3Vector3.cpp <483:38 483:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <484:17 484:17>]
LOCAL_SYMBOL: b3Vector3.cpp<463:20> [b3Vector3.cpp <484:13 484:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <484:19 484:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <484:34 484:35>]
LOCAL_SYMBOL: b3Vector3.cpp<458:20> [b3Vector3.cpp <484:34 484:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <484:38 484:39>]
LOCAL_SYMBOL: b3Vector3.cpp<457:20> [b3Vector3.cpp <484:38 484:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <486:17 486:17>]
LOCAL_SYMBOL: b3Vector3.cpp<460:20> [b3Vector3.cpp <486:13 486:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <486:22 486:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <486:19 486:21>]
LOCAL_SYMBOL: b3Vector3.cpp<460:20> [b3Vector3.cpp <486:19 486:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <486:23 486:25>]
LOCAL_SYMBOL: b3Vector3.cpp<435:12> [b3Vector3.cpp <486:23 486:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <487:17 487:17>]
LOCAL_SYMBOL: b3Vector3.cpp<462:20> [b3Vector3.cpp <487:13 487:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <487:22 487:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <487:19 487:21>]
LOCAL_SYMBOL: b3Vector3.cpp<462:20> [b3Vector3.cpp <487:19 487:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <487:23 487:25>]
LOCAL_SYMBOL: b3Vector3.cpp<435:12> [b3Vector3.cpp <487:23 487:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <488:15 488:15>]
LOCAL_SYMBOL: b3Vector3.cpp<467:20> [b3Vector3.cpp <488:13 488:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <488:17 488:30>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <488:32 488:34>]
LOCAL_SYMBOL: b3Vector3.cpp<461:20> [b3Vector3.cpp <488:32 488:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <488:37 488:39>]
LOCAL_SYMBOL: b3Vector3.cpp<463:20> [b3Vector3.cpp <488:37 488:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <489:15 489:15>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <489:13 489:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <489:17 489:30>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <489:32 489:34>]
LOCAL_SYMBOL: b3Vector3.cpp<460:20> [b3Vector3.cpp <489:32 489:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <489:37 489:39>]
LOCAL_SYMBOL: b3Vector3.cpp<462:20> [b3Vector3.cpp <489:37 489:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <490:15 490:15>]
LOCAL_SYMBOL: b3Vector3.cpp<469:20> [b3Vector3.cpp <490:13 490:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <490:17 490:30>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <490:32 490:34>]
LOCAL_SYMBOL: b3Vector3.cpp<460:20> [b3Vector3.cpp <490:32 490:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <490:37 490:39>]
LOCAL_SYMBOL: b3Vector3.cpp<462:20> [b3Vector3.cpp <490:37 490:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <491:15 491:15>]
LOCAL_SYMBOL: b3Vector3.cpp<467:20> [b3Vector3.cpp <491:13 491:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <491:18 491:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <491:17 491:17>]
LOCAL_SYMBOL: b3Vector3.cpp<467:20> [b3Vector3.cpp <491:17 491:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <491:19 491:21>]
LOCAL_SYMBOL: b3Vector3.cpp<434:12> [b3Vector3.cpp <491:19 491:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <492:15 492:15>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <492:13 492:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <492:18 492:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <492:17 492:17>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <492:17 492:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <492:19 492:19>]
LOCAL_SYMBOL: b3Vector3.cpp<469:20> [b3Vector3.cpp <492:19 492:19>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <493:15 493:15>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <493:13 493:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <493:18 493:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <493:17 493:17>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <493:17 493:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <493:19 493:19>]
LOCAL_SYMBOL: b3Vector3.cpp<467:20> [b3Vector3.cpp <493:19 493:19>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <494:34 494:34>]
LOCAL_SYMBOL: b3Vector3.cpp<440:12> [b3Vector3.cpp <494:13 494:23>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <494:25 494:29>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <494:36 494:36>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <495:17 495:17>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <495:13 495:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_min_ps(__m128, __m128) [b3Vector3.cpp <495:19 495:28>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <495:31 495:31>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <495:31 495:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <495:34 495:36>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <495:34 495:36>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <497:16 497:16>]
LOCAL_SYMBOL: b3Vector3.cpp<455:20> [b3Vector3.cpp <497:13 497:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <497:18 497:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <498:16 498:16>]
LOCAL_SYMBOL: b3Vector3.cpp<456:20> [b3Vector3.cpp <498:13 498:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <498:18 498:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <499:16 499:16>]
LOCAL_SYMBOL: b3Vector3.cpp<457:20> [b3Vector3.cpp <499:13 499:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <499:18 499:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <500:16 500:16>]
LOCAL_SYMBOL: b3Vector3.cpp<458:20> [b3Vector3.cpp <500:13 500:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <500:18 500:25>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <500:42 500:49>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <502:17 502:17>]
LOCAL_SYMBOL: b3Vector3.cpp<460:20> [b3Vector3.cpp <502:13 502:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <502:19 502:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <502:34 502:35>]
LOCAL_SYMBOL: b3Vector3.cpp<455:20> [b3Vector3.cpp <502:34 502:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <502:38 502:39>]
LOCAL_SYMBOL: b3Vector3.cpp<456:20> [b3Vector3.cpp <502:38 502:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <503:17 503:17>]
LOCAL_SYMBOL: b3Vector3.cpp<461:20> [b3Vector3.cpp <503:13 503:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <503:19 503:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <503:34 503:35>]
LOCAL_SYMBOL: b3Vector3.cpp<456:20> [b3Vector3.cpp <503:34 503:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <503:38 503:39>]
LOCAL_SYMBOL: b3Vector3.cpp<455:20> [b3Vector3.cpp <503:38 503:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <504:17 504:17>]
LOCAL_SYMBOL: b3Vector3.cpp<462:20> [b3Vector3.cpp <504:13 504:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <504:19 504:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <504:34 504:35>]
LOCAL_SYMBOL: b3Vector3.cpp<457:20> [b3Vector3.cpp <504:34 504:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <504:38 504:39>]
LOCAL_SYMBOL: b3Vector3.cpp<458:20> [b3Vector3.cpp <504:38 504:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <505:17 505:17>]
LOCAL_SYMBOL: b3Vector3.cpp<463:20> [b3Vector3.cpp <505:13 505:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <505:19 505:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <505:34 505:35>]
LOCAL_SYMBOL: b3Vector3.cpp<458:20> [b3Vector3.cpp <505:34 505:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <505:38 505:39>]
LOCAL_SYMBOL: b3Vector3.cpp<457:20> [b3Vector3.cpp <505:38 505:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <507:17 507:17>]
LOCAL_SYMBOL: b3Vector3.cpp<460:20> [b3Vector3.cpp <507:13 507:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <507:22 507:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <507:19 507:21>]
LOCAL_SYMBOL: b3Vector3.cpp<460:20> [b3Vector3.cpp <507:19 507:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <507:23 507:25>]
LOCAL_SYMBOL: b3Vector3.cpp<435:12> [b3Vector3.cpp <507:23 507:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <508:17 508:17>]
LOCAL_SYMBOL: b3Vector3.cpp<462:20> [b3Vector3.cpp <508:13 508:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <508:22 508:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <508:19 508:21>]
LOCAL_SYMBOL: b3Vector3.cpp<462:20> [b3Vector3.cpp <508:19 508:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <508:23 508:25>]
LOCAL_SYMBOL: b3Vector3.cpp<435:12> [b3Vector3.cpp <508:23 508:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <509:15 509:15>]
LOCAL_SYMBOL: b3Vector3.cpp<467:20> [b3Vector3.cpp <509:13 509:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <509:17 509:30>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <509:32 509:34>]
LOCAL_SYMBOL: b3Vector3.cpp<461:20> [b3Vector3.cpp <509:32 509:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <509:37 509:39>]
LOCAL_SYMBOL: b3Vector3.cpp<463:20> [b3Vector3.cpp <509:37 509:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <510:15 510:15>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <510:13 510:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <510:17 510:30>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <510:32 510:34>]
LOCAL_SYMBOL: b3Vector3.cpp<460:20> [b3Vector3.cpp <510:32 510:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <510:37 510:39>]
LOCAL_SYMBOL: b3Vector3.cpp<462:20> [b3Vector3.cpp <510:37 510:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <511:15 511:15>]
LOCAL_SYMBOL: b3Vector3.cpp<469:20> [b3Vector3.cpp <511:13 511:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <511:17 511:30>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <511:32 511:34>]
LOCAL_SYMBOL: b3Vector3.cpp<460:20> [b3Vector3.cpp <511:32 511:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <511:37 511:39>]
LOCAL_SYMBOL: b3Vector3.cpp<462:20> [b3Vector3.cpp <511:37 511:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <512:15 512:15>]
LOCAL_SYMBOL: b3Vector3.cpp<467:20> [b3Vector3.cpp <512:13 512:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <512:18 512:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <512:17 512:17>]
LOCAL_SYMBOL: b3Vector3.cpp<467:20> [b3Vector3.cpp <512:17 512:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <512:19 512:21>]
LOCAL_SYMBOL: b3Vector3.cpp<434:12> [b3Vector3.cpp <512:19 512:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <513:15 513:15>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <513:13 513:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <513:18 513:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <513:17 513:17>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <513:17 513:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <513:19 513:19>]
LOCAL_SYMBOL: b3Vector3.cpp<469:20> [b3Vector3.cpp <513:19 513:19>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <514:15 514:15>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <514:13 514:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <514:18 514:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <514:17 514:17>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <514:17 514:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <514:19 514:19>]
LOCAL_SYMBOL: b3Vector3.cpp<467:20> [b3Vector3.cpp <514:19 514:19>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <515:34 515:34>]
LOCAL_SYMBOL: b3Vector3.cpp<440:12> [b3Vector3.cpp <515:13 515:23>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <515:25 515:29>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <515:36 515:36>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <516:17 516:17>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <516:13 516:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_min_ps(__m128, __m128) [b3Vector3.cpp <516:19 516:28>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <516:31 516:31>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <516:31 516:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <516:34 516:36>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <516:34 516:36>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <518:16 518:16>]
LOCAL_SYMBOL: b3Vector3.cpp<455:20> [b3Vector3.cpp <518:13 518:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <518:18 518:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <519:16 519:16>]
LOCAL_SYMBOL: b3Vector3.cpp<456:20> [b3Vector3.cpp <519:13 519:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <519:18 519:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <520:16 520:16>]
LOCAL_SYMBOL: b3Vector3.cpp<457:20> [b3Vector3.cpp <520:13 520:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <520:18 520:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <521:16 521:16>]
LOCAL_SYMBOL: b3Vector3.cpp<458:20> [b3Vector3.cpp <521:13 521:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <521:18 521:25>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <521:42 521:49>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <523:17 523:17>]
LOCAL_SYMBOL: b3Vector3.cpp<460:20> [b3Vector3.cpp <523:13 523:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <523:19 523:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <523:34 523:35>]
LOCAL_SYMBOL: b3Vector3.cpp<455:20> [b3Vector3.cpp <523:34 523:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <523:38 523:39>]
LOCAL_SYMBOL: b3Vector3.cpp<456:20> [b3Vector3.cpp <523:38 523:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <524:17 524:17>]
LOCAL_SYMBOL: b3Vector3.cpp<461:20> [b3Vector3.cpp <524:13 524:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <524:19 524:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <524:34 524:35>]
LOCAL_SYMBOL: b3Vector3.cpp<456:20> [b3Vector3.cpp <524:34 524:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <524:38 524:39>]
LOCAL_SYMBOL: b3Vector3.cpp<455:20> [b3Vector3.cpp <524:38 524:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <525:17 525:17>]
LOCAL_SYMBOL: b3Vector3.cpp<462:20> [b3Vector3.cpp <525:13 525:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <525:19 525:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <525:34 525:35>]
LOCAL_SYMBOL: b3Vector3.cpp<457:20> [b3Vector3.cpp <525:34 525:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <525:38 525:39>]
LOCAL_SYMBOL: b3Vector3.cpp<458:20> [b3Vector3.cpp <525:38 525:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <526:17 526:17>]
LOCAL_SYMBOL: b3Vector3.cpp<463:20> [b3Vector3.cpp <526:13 526:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <526:19 526:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <526:34 526:35>]
LOCAL_SYMBOL: b3Vector3.cpp<458:20> [b3Vector3.cpp <526:34 526:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <526:38 526:39>]
LOCAL_SYMBOL: b3Vector3.cpp<457:20> [b3Vector3.cpp <526:38 526:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <528:17 528:17>]
LOCAL_SYMBOL: b3Vector3.cpp<460:20> [b3Vector3.cpp <528:13 528:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <528:22 528:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <528:19 528:21>]
LOCAL_SYMBOL: b3Vector3.cpp<460:20> [b3Vector3.cpp <528:19 528:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <528:23 528:25>]
LOCAL_SYMBOL: b3Vector3.cpp<435:12> [b3Vector3.cpp <528:23 528:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <529:17 529:17>]
LOCAL_SYMBOL: b3Vector3.cpp<462:20> [b3Vector3.cpp <529:13 529:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <529:22 529:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <529:19 529:21>]
LOCAL_SYMBOL: b3Vector3.cpp<462:20> [b3Vector3.cpp <529:19 529:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <529:23 529:25>]
LOCAL_SYMBOL: b3Vector3.cpp<435:12> [b3Vector3.cpp <529:23 529:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <530:15 530:15>]
LOCAL_SYMBOL: b3Vector3.cpp<467:20> [b3Vector3.cpp <530:13 530:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <530:17 530:30>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <530:32 530:34>]
LOCAL_SYMBOL: b3Vector3.cpp<461:20> [b3Vector3.cpp <530:32 530:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <530:37 530:39>]
LOCAL_SYMBOL: b3Vector3.cpp<463:20> [b3Vector3.cpp <530:37 530:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <531:15 531:15>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <531:13 531:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <531:17 531:30>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <531:32 531:34>]
LOCAL_SYMBOL: b3Vector3.cpp<460:20> [b3Vector3.cpp <531:32 531:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <531:37 531:39>]
LOCAL_SYMBOL: b3Vector3.cpp<462:20> [b3Vector3.cpp <531:37 531:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <532:15 532:15>]
LOCAL_SYMBOL: b3Vector3.cpp<469:20> [b3Vector3.cpp <532:13 532:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <532:17 532:30>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <532:32 532:34>]
LOCAL_SYMBOL: b3Vector3.cpp<460:20> [b3Vector3.cpp <532:32 532:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <532:37 532:39>]
LOCAL_SYMBOL: b3Vector3.cpp<462:20> [b3Vector3.cpp <532:37 532:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <533:15 533:15>]
LOCAL_SYMBOL: b3Vector3.cpp<467:20> [b3Vector3.cpp <533:13 533:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <533:18 533:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <533:17 533:17>]
LOCAL_SYMBOL: b3Vector3.cpp<467:20> [b3Vector3.cpp <533:17 533:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <533:19 533:21>]
LOCAL_SYMBOL: b3Vector3.cpp<434:12> [b3Vector3.cpp <533:19 533:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <534:15 534:15>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <534:13 534:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <534:18 534:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <534:17 534:17>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <534:17 534:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <534:19 534:19>]
LOCAL_SYMBOL: b3Vector3.cpp<469:20> [b3Vector3.cpp <534:19 534:19>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <535:15 535:15>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <535:13 535:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <535:18 535:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <535:17 535:17>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <535:17 535:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <535:19 535:19>]
LOCAL_SYMBOL: b3Vector3.cpp<467:20> [b3Vector3.cpp <535:19 535:19>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <536:34 536:34>]
LOCAL_SYMBOL: b3Vector3.cpp<440:12> [b3Vector3.cpp <536:13 536:23>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <536:25 536:29>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <536:36 536:36>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <537:17 537:17>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <537:13 537:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_min_ps(__m128, __m128) [b3Vector3.cpp <537:19 537:28>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <537:31 537:31>]
LOCAL_SYMBOL: b3Vector3.cpp<468:20> [b3Vector3.cpp <537:31 537:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <537:34 537:36>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <537:34 537:36>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> int _mm_movemask_ps(__m128) [b3Vector3.cpp <543:20 543:34>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <543:38 543:43>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_cmpeq_ps(__m128, __m128) [b3Vector3.cpp <543:46 543:57>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <543:59 543:61>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <543:59 543:61>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <543:64 543:69>]
LOCAL_SYMBOL: b3Vector3.cpp<432:12> [b3Vector3.cpp <543:64 543:69>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <546:17 546:17>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <546:13 546:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_min_ps(__m128, __m128) [b3Vector3.cpp <546:19 546:28>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <546:30 546:32>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <546:30 546:32>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <546:36 546:41>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <546:44 546:57>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <546:60 546:62>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <546:60 546:62>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <546:65 546:67>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <546:65 546:67>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <547:17 547:17>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <547:13 547:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_min_ps(__m128, __m128) [b3Vector3.cpp <547:19 547:28>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <547:30 547:32>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <547:30 547:32>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <547:36 547:41>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <547:44 547:57>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <547:60 547:62>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <547:60 547:62>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <547:65 547:67>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <547:65 547:67>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <549:20 549:20>]
LOCAL_SYMBOL: b3Vector3.cpp<432:12> [b3Vector3.cpp <549:13 549:18>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <549:22 549:24>]
LOCAL_SYMBOL: b3Vector3.cpp<552:20> [b3Vector3.cpp <552:20 552:23>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> size_t [b3Vector3.cpp <552:13 552:18>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <553:18 553:22>]
LOCAL_SYMBOL: b3Vector3.cpp<552:20> [b3Vector3.cpp <553:35 553:38>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> int _mm_movemask_ps(__m128) [b3Vector3.cpp <553:40 553:54>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_cmpeq_ps(__m128, __m128) [b3Vector3.cpp <553:57 553:68>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <553:88 553:88>]
LOCAL_SYMBOL: b3Vector3.cpp<440:12> [b3Vector3.cpp <553:71 553:81>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <553:83 553:87>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <553:91 553:93>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <553:91 553:93>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <553:99 553:103>]
LOCAL_SYMBOL: b3Vector3.cpp<437:10> [b3Vector3.cpp <556:13 556:20>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <556:26 556:30>]
LOCAL_SYMBOL: b3Vector3.cpp<439:12> [b3Vector3.cpp <556:34 556:40>]
LOCAL_SYMBOL: b3Vector3.cpp<430:32> [b3Vector3.cpp <556:44 556:53>]
LOCAL_SYMBOL: b3Vector3.cpp<552:20> [b3Vector3.cpp <556:55 556:58>]
LOCAL_SYMBOL: b3Vector3.cpp<427:72> [b3Vector3.cpp <561:5 561:9>]
LOCAL_SYMBOL: b3Vector3.cpp<439:12> [b3Vector3.cpp <561:14 561:20>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <564:9 564:9>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <564:5 564:7>]
LOCAL_SYMBOL: b3Vector3.cpp<432:12> [b3Vector3.cpp <564:11 564:16>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <565:5 565:9>]
LOCAL_SYMBOL: b3Vector3.cpp<427:72> [b3Vector3.cpp <568:20 568:24>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <570:16 570:20>]
LOCAL_SYMBOL: b3Vector3.cpp<427:72> [b3Vector3.cpp <570:29 570:33>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <570:40 570:44>]
LOCAL_SYMBOL: b3Vector3.cpp<572:20> [b3Vector3.cpp <572:20 572:21>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <572:13 572:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <572:35 572:35>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <572:25 572:32>]
LOCAL_SYMBOL: b3Vector3.cpp<573:20> [b3Vector3.cpp <573:20 573:21>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <573:13 573:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <573:35 573:35>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <573:25 573:32>]
LOCAL_SYMBOL: b3Vector3.cpp<574:20> [b3Vector3.cpp <574:20 574:21>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <574:13 574:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <574:35 574:35>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <574:25 574:32>]
LOCAL_SYMBOL: b3Vector3.cpp<575:20> [b3Vector3.cpp <575:20 575:21>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <575:13 575:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <575:35 575:35>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <575:25 575:32>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <575:49 575:56>]
LOCAL_SYMBOL: b3Vector3.cpp<577:20> [b3Vector3.cpp <577:20 577:22>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <577:13 577:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <577:26 577:38>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <577:41 577:42>]
LOCAL_SYMBOL: b3Vector3.cpp<572:20> [b3Vector3.cpp <577:41 577:42>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <577:45 577:46>]
LOCAL_SYMBOL: b3Vector3.cpp<573:20> [b3Vector3.cpp <577:45 577:46>]
LOCAL_SYMBOL: b3Vector3.cpp<578:20> [b3Vector3.cpp <578:20 578:22>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <578:13 578:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <578:26 578:38>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <578:41 578:42>]
LOCAL_SYMBOL: b3Vector3.cpp<573:20> [b3Vector3.cpp <578:41 578:42>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <578:45 578:46>]
LOCAL_SYMBOL: b3Vector3.cpp<572:20> [b3Vector3.cpp <578:45 578:46>]
LOCAL_SYMBOL: b3Vector3.cpp<579:20> [b3Vector3.cpp <579:20 579:22>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <579:13 579:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <579:26 579:38>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <579:41 579:42>]
LOCAL_SYMBOL: b3Vector3.cpp<574:20> [b3Vector3.cpp <579:41 579:42>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <579:45 579:46>]
LOCAL_SYMBOL: b3Vector3.cpp<575:20> [b3Vector3.cpp <579:45 579:46>]
LOCAL_SYMBOL: b3Vector3.cpp<580:20> [b3Vector3.cpp <580:20 580:22>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <580:13 580:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <580:26 580:38>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <580:41 580:42>]
LOCAL_SYMBOL: b3Vector3.cpp<575:20> [b3Vector3.cpp <580:41 580:42>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <580:45 580:46>]
LOCAL_SYMBOL: b3Vector3.cpp<574:20> [b3Vector3.cpp <580:45 580:46>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <582:17 582:17>]
LOCAL_SYMBOL: b3Vector3.cpp<577:20> [b3Vector3.cpp <582:13 582:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <582:22 582:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <582:19 582:21>]
LOCAL_SYMBOL: b3Vector3.cpp<577:20> [b3Vector3.cpp <582:19 582:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <582:23 582:25>]
LOCAL_SYMBOL: b3Vector3.cpp<435:12> [b3Vector3.cpp <582:23 582:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <583:17 583:17>]
LOCAL_SYMBOL: b3Vector3.cpp<579:20> [b3Vector3.cpp <583:13 583:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <583:22 583:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <583:19 583:21>]
LOCAL_SYMBOL: b3Vector3.cpp<579:20> [b3Vector3.cpp <583:19 583:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <583:23 583:25>]
LOCAL_SYMBOL: b3Vector3.cpp<435:12> [b3Vector3.cpp <583:23 583:25>]
LOCAL_SYMBOL: b3Vector3.cpp<584:20> [b3Vector3.cpp <584:20 584:20>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <584:13 584:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <584:24 584:37>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <584:39 584:41>]
LOCAL_SYMBOL: b3Vector3.cpp<578:20> [b3Vector3.cpp <584:39 584:41>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <584:44 584:46>]
LOCAL_SYMBOL: b3Vector3.cpp<580:20> [b3Vector3.cpp <584:44 584:46>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <585:20 585:20>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <585:13 585:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <585:24 585:37>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <585:39 585:41>]
LOCAL_SYMBOL: b3Vector3.cpp<577:20> [b3Vector3.cpp <585:39 585:41>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <585:44 585:46>]
LOCAL_SYMBOL: b3Vector3.cpp<579:20> [b3Vector3.cpp <585:44 585:46>]
LOCAL_SYMBOL: b3Vector3.cpp<586:20> [b3Vector3.cpp <586:20 586:20>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <586:13 586:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <586:24 586:37>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <586:39 586:41>]
LOCAL_SYMBOL: b3Vector3.cpp<577:20> [b3Vector3.cpp <586:39 586:41>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <586:44 586:46>]
LOCAL_SYMBOL: b3Vector3.cpp<579:20> [b3Vector3.cpp <586:44 586:46>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <587:15 587:15>]
LOCAL_SYMBOL: b3Vector3.cpp<584:20> [b3Vector3.cpp <587:13 587:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <587:18 587:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <587:17 587:17>]
LOCAL_SYMBOL: b3Vector3.cpp<584:20> [b3Vector3.cpp <587:17 587:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <587:19 587:21>]
LOCAL_SYMBOL: b3Vector3.cpp<434:12> [b3Vector3.cpp <587:19 587:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <588:15 588:15>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <588:13 588:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <588:18 588:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <588:17 588:17>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <588:17 588:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <588:19 588:19>]
LOCAL_SYMBOL: b3Vector3.cpp<586:20> [b3Vector3.cpp <588:19 588:19>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <589:15 589:15>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <589:13 589:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <589:18 589:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <589:17 589:17>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <589:17 589:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <589:19 589:19>]
LOCAL_SYMBOL: b3Vector3.cpp<584:20> [b3Vector3.cpp <589:19 589:19>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <590:32 590:32>]
LOCAL_SYMBOL: b3Vector3.cpp<440:12> [b3Vector3.cpp <590:13 590:23>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <590:25 590:29>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <590:34 590:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <591:17 591:17>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <591:13 591:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_min_ps(__m128, __m128) [b3Vector3.cpp <591:19 591:28>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <591:31 591:31>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <591:31 591:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <591:34 591:36>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <591:34 591:36>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <593:16 593:16>]
LOCAL_SYMBOL: b3Vector3.cpp<572:20> [b3Vector3.cpp <593:13 593:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <593:18 593:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <594:16 594:16>]
LOCAL_SYMBOL: b3Vector3.cpp<573:20> [b3Vector3.cpp <594:13 594:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <594:18 594:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <595:16 595:16>]
LOCAL_SYMBOL: b3Vector3.cpp<574:20> [b3Vector3.cpp <595:13 595:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <595:18 595:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <596:16 596:16>]
LOCAL_SYMBOL: b3Vector3.cpp<575:20> [b3Vector3.cpp <596:13 596:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <596:18 596:25>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <596:42 596:49>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <598:17 598:17>]
LOCAL_SYMBOL: b3Vector3.cpp<577:20> [b3Vector3.cpp <598:13 598:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <598:19 598:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <598:34 598:35>]
LOCAL_SYMBOL: b3Vector3.cpp<572:20> [b3Vector3.cpp <598:34 598:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <598:38 598:39>]
LOCAL_SYMBOL: b3Vector3.cpp<573:20> [b3Vector3.cpp <598:38 598:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <599:17 599:17>]
LOCAL_SYMBOL: b3Vector3.cpp<578:20> [b3Vector3.cpp <599:13 599:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <599:19 599:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <599:34 599:35>]
LOCAL_SYMBOL: b3Vector3.cpp<573:20> [b3Vector3.cpp <599:34 599:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <599:38 599:39>]
LOCAL_SYMBOL: b3Vector3.cpp<572:20> [b3Vector3.cpp <599:38 599:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <600:17 600:17>]
LOCAL_SYMBOL: b3Vector3.cpp<579:20> [b3Vector3.cpp <600:13 600:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <600:19 600:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <600:34 600:35>]
LOCAL_SYMBOL: b3Vector3.cpp<574:20> [b3Vector3.cpp <600:34 600:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <600:38 600:39>]
LOCAL_SYMBOL: b3Vector3.cpp<575:20> [b3Vector3.cpp <600:38 600:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <601:17 601:17>]
LOCAL_SYMBOL: b3Vector3.cpp<580:20> [b3Vector3.cpp <601:13 601:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <601:19 601:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <601:34 601:35>]
LOCAL_SYMBOL: b3Vector3.cpp<575:20> [b3Vector3.cpp <601:34 601:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <601:38 601:39>]
LOCAL_SYMBOL: b3Vector3.cpp<574:20> [b3Vector3.cpp <601:38 601:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <603:17 603:17>]
LOCAL_SYMBOL: b3Vector3.cpp<577:20> [b3Vector3.cpp <603:13 603:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <603:22 603:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <603:19 603:21>]
LOCAL_SYMBOL: b3Vector3.cpp<577:20> [b3Vector3.cpp <603:19 603:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <603:23 603:25>]
LOCAL_SYMBOL: b3Vector3.cpp<435:12> [b3Vector3.cpp <603:23 603:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <604:17 604:17>]
LOCAL_SYMBOL: b3Vector3.cpp<579:20> [b3Vector3.cpp <604:13 604:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <604:22 604:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <604:19 604:21>]
LOCAL_SYMBOL: b3Vector3.cpp<579:20> [b3Vector3.cpp <604:19 604:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <604:23 604:25>]
LOCAL_SYMBOL: b3Vector3.cpp<435:12> [b3Vector3.cpp <604:23 604:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <605:15 605:15>]
LOCAL_SYMBOL: b3Vector3.cpp<584:20> [b3Vector3.cpp <605:13 605:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <605:17 605:30>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <605:32 605:34>]
LOCAL_SYMBOL: b3Vector3.cpp<578:20> [b3Vector3.cpp <605:32 605:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <605:37 605:39>]
LOCAL_SYMBOL: b3Vector3.cpp<580:20> [b3Vector3.cpp <605:37 605:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <606:15 606:15>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <606:13 606:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <606:17 606:30>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <606:32 606:34>]
LOCAL_SYMBOL: b3Vector3.cpp<577:20> [b3Vector3.cpp <606:32 606:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <606:37 606:39>]
LOCAL_SYMBOL: b3Vector3.cpp<579:20> [b3Vector3.cpp <606:37 606:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <607:15 607:15>]
LOCAL_SYMBOL: b3Vector3.cpp<586:20> [b3Vector3.cpp <607:13 607:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <607:17 607:30>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <607:32 607:34>]
LOCAL_SYMBOL: b3Vector3.cpp<577:20> [b3Vector3.cpp <607:32 607:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <607:37 607:39>]
LOCAL_SYMBOL: b3Vector3.cpp<579:20> [b3Vector3.cpp <607:37 607:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <608:15 608:15>]
LOCAL_SYMBOL: b3Vector3.cpp<584:20> [b3Vector3.cpp <608:13 608:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <608:18 608:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <608:17 608:17>]
LOCAL_SYMBOL: b3Vector3.cpp<584:20> [b3Vector3.cpp <608:17 608:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <608:19 608:21>]
LOCAL_SYMBOL: b3Vector3.cpp<434:12> [b3Vector3.cpp <608:19 608:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <609:15 609:15>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <609:13 609:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <609:18 609:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <609:17 609:17>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <609:17 609:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <609:19 609:19>]
LOCAL_SYMBOL: b3Vector3.cpp<586:20> [b3Vector3.cpp <609:19 609:19>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <610:15 610:15>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <610:13 610:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <610:18 610:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <610:17 610:17>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <610:17 610:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <610:19 610:19>]
LOCAL_SYMBOL: b3Vector3.cpp<584:20> [b3Vector3.cpp <610:19 610:19>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <611:34 611:34>]
LOCAL_SYMBOL: b3Vector3.cpp<440:12> [b3Vector3.cpp <611:13 611:23>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <611:25 611:29>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <611:36 611:36>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <612:17 612:17>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <612:13 612:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_min_ps(__m128, __m128) [b3Vector3.cpp <612:19 612:28>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <612:31 612:31>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <612:31 612:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <612:34 612:36>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <612:34 612:36>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <614:16 614:16>]
LOCAL_SYMBOL: b3Vector3.cpp<572:20> [b3Vector3.cpp <614:13 614:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <614:18 614:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <615:16 615:16>]
LOCAL_SYMBOL: b3Vector3.cpp<573:20> [b3Vector3.cpp <615:13 615:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <615:18 615:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <616:16 616:16>]
LOCAL_SYMBOL: b3Vector3.cpp<574:20> [b3Vector3.cpp <616:13 616:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <616:18 616:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <617:16 617:16>]
LOCAL_SYMBOL: b3Vector3.cpp<575:20> [b3Vector3.cpp <617:13 617:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <617:18 617:25>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <617:42 617:49>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <619:17 619:17>]
LOCAL_SYMBOL: b3Vector3.cpp<577:20> [b3Vector3.cpp <619:13 619:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <619:19 619:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <619:34 619:35>]
LOCAL_SYMBOL: b3Vector3.cpp<572:20> [b3Vector3.cpp <619:34 619:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <619:38 619:39>]
LOCAL_SYMBOL: b3Vector3.cpp<573:20> [b3Vector3.cpp <619:38 619:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <620:17 620:17>]
LOCAL_SYMBOL: b3Vector3.cpp<578:20> [b3Vector3.cpp <620:13 620:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <620:19 620:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <620:34 620:35>]
LOCAL_SYMBOL: b3Vector3.cpp<573:20> [b3Vector3.cpp <620:34 620:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <620:38 620:39>]
LOCAL_SYMBOL: b3Vector3.cpp<572:20> [b3Vector3.cpp <620:38 620:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <621:17 621:17>]
LOCAL_SYMBOL: b3Vector3.cpp<579:20> [b3Vector3.cpp <621:13 621:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <621:19 621:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <621:34 621:35>]
LOCAL_SYMBOL: b3Vector3.cpp<574:20> [b3Vector3.cpp <621:34 621:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <621:38 621:39>]
LOCAL_SYMBOL: b3Vector3.cpp<575:20> [b3Vector3.cpp <621:38 621:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <622:17 622:17>]
LOCAL_SYMBOL: b3Vector3.cpp<580:20> [b3Vector3.cpp <622:13 622:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <622:19 622:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <622:34 622:35>]
LOCAL_SYMBOL: b3Vector3.cpp<575:20> [b3Vector3.cpp <622:34 622:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <622:38 622:39>]
LOCAL_SYMBOL: b3Vector3.cpp<574:20> [b3Vector3.cpp <622:38 622:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <624:17 624:17>]
LOCAL_SYMBOL: b3Vector3.cpp<577:20> [b3Vector3.cpp <624:13 624:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <624:22 624:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <624:19 624:21>]
LOCAL_SYMBOL: b3Vector3.cpp<577:20> [b3Vector3.cpp <624:19 624:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <624:23 624:25>]
LOCAL_SYMBOL: b3Vector3.cpp<435:12> [b3Vector3.cpp <624:23 624:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <625:17 625:17>]
LOCAL_SYMBOL: b3Vector3.cpp<579:20> [b3Vector3.cpp <625:13 625:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <625:22 625:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <625:19 625:21>]
LOCAL_SYMBOL: b3Vector3.cpp<579:20> [b3Vector3.cpp <625:19 625:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <625:23 625:25>]
LOCAL_SYMBOL: b3Vector3.cpp<435:12> [b3Vector3.cpp <625:23 625:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <626:15 626:15>]
LOCAL_SYMBOL: b3Vector3.cpp<584:20> [b3Vector3.cpp <626:13 626:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <626:17 626:30>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <626:32 626:34>]
LOCAL_SYMBOL: b3Vector3.cpp<578:20> [b3Vector3.cpp <626:32 626:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <626:37 626:39>]
LOCAL_SYMBOL: b3Vector3.cpp<580:20> [b3Vector3.cpp <626:37 626:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <627:15 627:15>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <627:13 627:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <627:17 627:30>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <627:32 627:34>]
LOCAL_SYMBOL: b3Vector3.cpp<577:20> [b3Vector3.cpp <627:32 627:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <627:37 627:39>]
LOCAL_SYMBOL: b3Vector3.cpp<579:20> [b3Vector3.cpp <627:37 627:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <628:15 628:15>]
LOCAL_SYMBOL: b3Vector3.cpp<586:20> [b3Vector3.cpp <628:13 628:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <628:17 628:30>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <628:32 628:34>]
LOCAL_SYMBOL: b3Vector3.cpp<577:20> [b3Vector3.cpp <628:32 628:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <628:37 628:39>]
LOCAL_SYMBOL: b3Vector3.cpp<579:20> [b3Vector3.cpp <628:37 628:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <629:15 629:15>]
LOCAL_SYMBOL: b3Vector3.cpp<584:20> [b3Vector3.cpp <629:13 629:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <629:18 629:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <629:17 629:17>]
LOCAL_SYMBOL: b3Vector3.cpp<584:20> [b3Vector3.cpp <629:17 629:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <629:19 629:21>]
LOCAL_SYMBOL: b3Vector3.cpp<434:12> [b3Vector3.cpp <629:19 629:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <630:15 630:15>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <630:13 630:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <630:18 630:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <630:17 630:17>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <630:17 630:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <630:19 630:19>]
LOCAL_SYMBOL: b3Vector3.cpp<586:20> [b3Vector3.cpp <630:19 630:19>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <631:15 631:15>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <631:13 631:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <631:18 631:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <631:17 631:17>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <631:17 631:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <631:19 631:19>]
LOCAL_SYMBOL: b3Vector3.cpp<584:20> [b3Vector3.cpp <631:19 631:19>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <632:34 632:34>]
LOCAL_SYMBOL: b3Vector3.cpp<440:12> [b3Vector3.cpp <632:13 632:23>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <632:25 632:29>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <632:36 632:36>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <633:17 633:17>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <633:13 633:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_min_ps(__m128, __m128) [b3Vector3.cpp <633:19 633:28>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <633:31 633:31>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <633:31 633:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <633:34 633:36>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <633:34 633:36>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <635:16 635:16>]
LOCAL_SYMBOL: b3Vector3.cpp<572:20> [b3Vector3.cpp <635:13 635:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <635:18 635:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <636:16 636:16>]
LOCAL_SYMBOL: b3Vector3.cpp<573:20> [b3Vector3.cpp <636:13 636:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <636:18 636:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <637:16 637:16>]
LOCAL_SYMBOL: b3Vector3.cpp<574:20> [b3Vector3.cpp <637:13 637:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <637:18 637:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <638:16 638:16>]
LOCAL_SYMBOL: b3Vector3.cpp<575:20> [b3Vector3.cpp <638:13 638:14>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <638:18 638:25>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <638:42 638:49>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <640:17 640:17>]
LOCAL_SYMBOL: b3Vector3.cpp<577:20> [b3Vector3.cpp <640:13 640:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <640:19 640:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <640:34 640:35>]
LOCAL_SYMBOL: b3Vector3.cpp<572:20> [b3Vector3.cpp <640:34 640:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <640:38 640:39>]
LOCAL_SYMBOL: b3Vector3.cpp<573:20> [b3Vector3.cpp <640:38 640:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <641:17 641:17>]
LOCAL_SYMBOL: b3Vector3.cpp<578:20> [b3Vector3.cpp <641:13 641:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <641:19 641:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <641:34 641:35>]
LOCAL_SYMBOL: b3Vector3.cpp<573:20> [b3Vector3.cpp <641:34 641:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <641:38 641:39>]
LOCAL_SYMBOL: b3Vector3.cpp<572:20> [b3Vector3.cpp <641:38 641:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <642:17 642:17>]
LOCAL_SYMBOL: b3Vector3.cpp<579:20> [b3Vector3.cpp <642:13 642:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <642:19 642:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <642:34 642:35>]
LOCAL_SYMBOL: b3Vector3.cpp<574:20> [b3Vector3.cpp <642:34 642:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <642:38 642:39>]
LOCAL_SYMBOL: b3Vector3.cpp<575:20> [b3Vector3.cpp <642:38 642:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <643:17 643:17>]
LOCAL_SYMBOL: b3Vector3.cpp<580:20> [b3Vector3.cpp <643:13 643:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <643:19 643:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <643:34 643:35>]
LOCAL_SYMBOL: b3Vector3.cpp<575:20> [b3Vector3.cpp <643:34 643:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <643:38 643:39>]
LOCAL_SYMBOL: b3Vector3.cpp<574:20> [b3Vector3.cpp <643:38 643:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <645:17 645:17>]
LOCAL_SYMBOL: b3Vector3.cpp<577:20> [b3Vector3.cpp <645:13 645:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <645:22 645:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <645:19 645:21>]
LOCAL_SYMBOL: b3Vector3.cpp<577:20> [b3Vector3.cpp <645:19 645:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <645:23 645:25>]
LOCAL_SYMBOL: b3Vector3.cpp<435:12> [b3Vector3.cpp <645:23 645:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <646:17 646:17>]
LOCAL_SYMBOL: b3Vector3.cpp<579:20> [b3Vector3.cpp <646:13 646:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <646:22 646:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <646:19 646:21>]
LOCAL_SYMBOL: b3Vector3.cpp<579:20> [b3Vector3.cpp <646:19 646:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <646:23 646:25>]
LOCAL_SYMBOL: b3Vector3.cpp<435:12> [b3Vector3.cpp <646:23 646:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <647:15 647:15>]
LOCAL_SYMBOL: b3Vector3.cpp<584:20> [b3Vector3.cpp <647:13 647:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <647:17 647:30>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <647:32 647:34>]
LOCAL_SYMBOL: b3Vector3.cpp<578:20> [b3Vector3.cpp <647:32 647:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <647:37 647:39>]
LOCAL_SYMBOL: b3Vector3.cpp<580:20> [b3Vector3.cpp <647:37 647:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <648:15 648:15>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <648:13 648:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <648:17 648:30>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <648:32 648:34>]
LOCAL_SYMBOL: b3Vector3.cpp<577:20> [b3Vector3.cpp <648:32 648:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <648:37 648:39>]
LOCAL_SYMBOL: b3Vector3.cpp<579:20> [b3Vector3.cpp <648:37 648:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <649:15 649:15>]
LOCAL_SYMBOL: b3Vector3.cpp<586:20> [b3Vector3.cpp <649:13 649:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <649:17 649:30>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <649:32 649:34>]
LOCAL_SYMBOL: b3Vector3.cpp<577:20> [b3Vector3.cpp <649:32 649:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <649:37 649:39>]
LOCAL_SYMBOL: b3Vector3.cpp<579:20> [b3Vector3.cpp <649:37 649:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <650:15 650:15>]
LOCAL_SYMBOL: b3Vector3.cpp<584:20> [b3Vector3.cpp <650:13 650:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <650:18 650:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <650:17 650:17>]
LOCAL_SYMBOL: b3Vector3.cpp<584:20> [b3Vector3.cpp <650:17 650:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <650:19 650:21>]
LOCAL_SYMBOL: b3Vector3.cpp<434:12> [b3Vector3.cpp <650:19 650:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <651:15 651:15>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <651:13 651:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <651:18 651:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <651:17 651:17>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <651:17 651:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <651:19 651:19>]
LOCAL_SYMBOL: b3Vector3.cpp<586:20> [b3Vector3.cpp <651:19 651:19>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <652:15 652:15>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <652:13 652:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <652:18 652:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <652:17 652:17>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <652:17 652:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <652:19 652:19>]
LOCAL_SYMBOL: b3Vector3.cpp<584:20> [b3Vector3.cpp <652:19 652:19>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <653:34 653:34>]
LOCAL_SYMBOL: b3Vector3.cpp<440:12> [b3Vector3.cpp <653:13 653:23>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <653:25 653:29>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <653:36 653:36>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <654:17 654:17>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <654:13 654:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_min_ps(__m128, __m128) [b3Vector3.cpp <654:19 654:28>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <654:31 654:31>]
LOCAL_SYMBOL: b3Vector3.cpp<585:20> [b3Vector3.cpp <654:31 654:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <654:34 654:36>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <654:34 654:36>]
LOCAL_SYMBOL: b3Vector3.cpp<660:12> [b3Vector3.cpp <660:12 660:21>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> size_t [b3Vector3.cpp <660:5 660:10>]
LOCAL_SYMBOL: b3Vector3.cpp<427:72> [b3Vector3.cpp <660:26 660:30>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <660:43 660:47>]
LOCAL_SYMBOL: b3Vector3.cpp<660:12> [b3Vector3.cpp <661:9 661:18>]
LOCAL_SYMBOL: b3Vector3.cpp<705:31> [b3Vector3.cpp <705:31 705:31>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> unsigned int [b3Vector3.cpp <705:18 705:25>]
LOCAL_SYMBOL: b3Vector3.cpp<705:31> [b3Vector3.cpp <705:36 705:36>]
LOCAL_SYMBOL: b3Vector3.cpp<660:12> [b3Vector3.cpp <705:38 705:47>]
LOCAL_SYMBOL: b3Vector3.cpp<705:31> [b3Vector3.cpp <705:52 705:52>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <705:56 705:60>]
LOCAL_SYMBOL: b3Vector3.cpp<707:24> [b3Vector3.cpp <707:24 707:25>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <707:17 707:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <707:39 707:39>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <707:29 707:36>]
LOCAL_SYMBOL: b3Vector3.cpp<708:24> [b3Vector3.cpp <708:24 708:25>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <708:17 708:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <708:39 708:39>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <708:29 708:36>]
LOCAL_SYMBOL: b3Vector3.cpp<709:24> [b3Vector3.cpp <709:24 709:25>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <709:17 709:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <709:39 709:39>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <709:29 709:36>]
LOCAL_SYMBOL: b3Vector3.cpp<710:24> [b3Vector3.cpp <710:24 710:25>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <710:17 710:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <710:39 710:39>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <710:29 710:36>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <711:17 711:24>]
LOCAL_SYMBOL: b3Vector3.cpp<713:24> [b3Vector3.cpp <713:24 713:26>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <713:17 713:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <713:30 713:42>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <713:45 713:46>]
LOCAL_SYMBOL: b3Vector3.cpp<707:24> [b3Vector3.cpp <713:45 713:46>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <713:49 713:50>]
LOCAL_SYMBOL: b3Vector3.cpp<708:24> [b3Vector3.cpp <713:49 713:50>]
LOCAL_SYMBOL: b3Vector3.cpp<714:24> [b3Vector3.cpp <714:24 714:26>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <714:17 714:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <714:30 714:42>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <714:45 714:46>]
LOCAL_SYMBOL: b3Vector3.cpp<708:24> [b3Vector3.cpp <714:45 714:46>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <714:49 714:50>]
LOCAL_SYMBOL: b3Vector3.cpp<707:24> [b3Vector3.cpp <714:49 714:50>]
LOCAL_SYMBOL: b3Vector3.cpp<715:24> [b3Vector3.cpp <715:24 715:26>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <715:17 715:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <715:30 715:42>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <715:45 715:46>]
LOCAL_SYMBOL: b3Vector3.cpp<709:24> [b3Vector3.cpp <715:45 715:46>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <715:49 715:50>]
LOCAL_SYMBOL: b3Vector3.cpp<710:24> [b3Vector3.cpp <715:49 715:50>]
LOCAL_SYMBOL: b3Vector3.cpp<716:24> [b3Vector3.cpp <716:24 716:26>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <716:17 716:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <716:30 716:42>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <716:45 716:46>]
LOCAL_SYMBOL: b3Vector3.cpp<710:24> [b3Vector3.cpp <716:45 716:46>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <716:49 716:50>]
LOCAL_SYMBOL: b3Vector3.cpp<709:24> [b3Vector3.cpp <716:49 716:50>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <718:21 718:21>]
LOCAL_SYMBOL: b3Vector3.cpp<713:24> [b3Vector3.cpp <718:17 718:19>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <718:26 718:26>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <718:23 718:25>]
LOCAL_SYMBOL: b3Vector3.cpp<713:24> [b3Vector3.cpp <718:23 718:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <718:27 718:29>]
LOCAL_SYMBOL: b3Vector3.cpp<435:12> [b3Vector3.cpp <718:27 718:29>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <719:21 719:21>]
LOCAL_SYMBOL: b3Vector3.cpp<715:24> [b3Vector3.cpp <719:17 719:19>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <719:26 719:26>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <719:23 719:25>]
LOCAL_SYMBOL: b3Vector3.cpp<715:24> [b3Vector3.cpp <719:23 719:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <719:27 719:29>]
LOCAL_SYMBOL: b3Vector3.cpp<435:12> [b3Vector3.cpp <719:27 719:29>]
LOCAL_SYMBOL: b3Vector3.cpp<720:24> [b3Vector3.cpp <720:24 720:24>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <720:17 720:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <720:28 720:41>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <720:43 720:45>]
LOCAL_SYMBOL: b3Vector3.cpp<714:24> [b3Vector3.cpp <720:43 720:45>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <720:48 720:50>]
LOCAL_SYMBOL: b3Vector3.cpp<716:24> [b3Vector3.cpp <720:48 720:50>]
LOCAL_SYMBOL: b3Vector3.cpp<721:24> [b3Vector3.cpp <721:24 721:24>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <721:17 721:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <721:28 721:41>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <721:43 721:45>]
LOCAL_SYMBOL: b3Vector3.cpp<713:24> [b3Vector3.cpp <721:43 721:45>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <721:48 721:50>]
LOCAL_SYMBOL: b3Vector3.cpp<715:24> [b3Vector3.cpp <721:48 721:50>]
LOCAL_SYMBOL: b3Vector3.cpp<722:24> [b3Vector3.cpp <722:24 722:24>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <722:17 722:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <722:28 722:41>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <722:43 722:45>]
LOCAL_SYMBOL: b3Vector3.cpp<713:24> [b3Vector3.cpp <722:43 722:45>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <722:48 722:50>]
LOCAL_SYMBOL: b3Vector3.cpp<715:24> [b3Vector3.cpp <722:48 722:50>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <723:19 723:19>]
LOCAL_SYMBOL: b3Vector3.cpp<720:24> [b3Vector3.cpp <723:17 723:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <723:22 723:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <723:21 723:21>]
LOCAL_SYMBOL: b3Vector3.cpp<720:24> [b3Vector3.cpp <723:21 723:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <723:23 723:25>]
LOCAL_SYMBOL: b3Vector3.cpp<434:12> [b3Vector3.cpp <723:23 723:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <724:19 724:19>]
LOCAL_SYMBOL: b3Vector3.cpp<721:24> [b3Vector3.cpp <724:17 724:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <724:22 724:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <724:21 724:21>]
LOCAL_SYMBOL: b3Vector3.cpp<721:24> [b3Vector3.cpp <724:21 724:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <724:23 724:23>]
LOCAL_SYMBOL: b3Vector3.cpp<722:24> [b3Vector3.cpp <724:23 724:23>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <725:19 725:19>]
LOCAL_SYMBOL: b3Vector3.cpp<721:24> [b3Vector3.cpp <725:17 725:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <725:22 725:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <725:21 725:21>]
LOCAL_SYMBOL: b3Vector3.cpp<721:24> [b3Vector3.cpp <725:21 725:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <725:23 725:23>]
LOCAL_SYMBOL: b3Vector3.cpp<720:24> [b3Vector3.cpp <725:23 725:23>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <726:36 726:36>]
LOCAL_SYMBOL: b3Vector3.cpp<440:12> [b3Vector3.cpp <726:17 726:27>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <726:29 726:33>]
LOCAL_SYMBOL: b3Vector3.cpp<721:24> [b3Vector3.cpp <726:38 726:38>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <727:21 727:21>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <727:17 727:19>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_min_ps(__m128, __m128) [b3Vector3.cpp <727:23 727:32>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <727:35 727:35>]
LOCAL_SYMBOL: b3Vector3.cpp<721:24> [b3Vector3.cpp <727:35 727:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <727:38 727:40>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <727:38 727:40>]
LOCAL_SYMBOL: b3Vector3.cpp<427:72> [b3Vector3.cpp <735:9 735:13>]
LOCAL_SYMBOL: b3Vector3.cpp<737:16> [b3Vector3.cpp <737:16 737:17>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <737:9 737:14>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128() [b3Vector3.cpp <737:16 737:17>]
LOCAL_SYMBOL: b3Vector3.cpp<737:20> [b3Vector3.cpp <737:20 737:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128() [b3Vector3.cpp <737:20 737:21>]
LOCAL_SYMBOL: b3Vector3.cpp<737:24> [b3Vector3.cpp <737:24 737:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128() [b3Vector3.cpp <737:24 737:25>]
LOCAL_SYMBOL: b3Vector3.cpp<737:28> [b3Vector3.cpp <737:28 737:28>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128() [b3Vector3.cpp <737:28 737:28>]
LOCAL_SYMBOL: b3Vector3.cpp<737:31> [b3Vector3.cpp <737:31 737:31>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128() [b3Vector3.cpp <737:31 737:31>]
LOCAL_SYMBOL: b3Vector3.cpp<737:34> [b3Vector3.cpp <737:34 737:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128() [b3Vector3.cpp <737:34 737:34>]
LOCAL_SYMBOL: b3Vector3.cpp<427:72> [b3Vector3.cpp <738:17 738:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <742:20 742:20>]
LOCAL_SYMBOL: b3Vector3.cpp<737:16> [b3Vector3.cpp <742:17 742:18>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <742:22 742:29>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <743:20 743:20>]
LOCAL_SYMBOL: b3Vector3.cpp<737:20> [b3Vector3.cpp <743:17 743:18>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <743:22 743:29>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <744:20 744:20>]
LOCAL_SYMBOL: b3Vector3.cpp<737:24> [b3Vector3.cpp <744:17 744:18>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <744:22 744:29>]
LOCAL_SYMBOL: b3Vector3.cpp<747:24> [b3Vector3.cpp <747:24 747:26>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <747:17 747:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <747:30 747:42>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <747:45 747:46>]
LOCAL_SYMBOL: b3Vector3.cpp<737:16> [b3Vector3.cpp <747:45 747:46>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <747:49 747:50>]
LOCAL_SYMBOL: b3Vector3.cpp<737:20> [b3Vector3.cpp <747:49 747:50>]
LOCAL_SYMBOL: b3Vector3.cpp<748:24> [b3Vector3.cpp <748:24 748:26>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <748:17 748:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <748:30 748:42>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <748:45 748:46>]
LOCAL_SYMBOL: b3Vector3.cpp<737:20> [b3Vector3.cpp <748:45 748:46>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <748:49 748:50>]
LOCAL_SYMBOL: b3Vector3.cpp<737:16> [b3Vector3.cpp <748:49 748:50>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <749:21 749:21>]
LOCAL_SYMBOL: b3Vector3.cpp<747:24> [b3Vector3.cpp <749:17 749:19>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <749:26 749:26>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <749:23 749:25>]
LOCAL_SYMBOL: b3Vector3.cpp<747:24> [b3Vector3.cpp <749:23 749:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <749:27 749:29>]
LOCAL_SYMBOL: b3Vector3.cpp<435:12> [b3Vector3.cpp <749:27 749:29>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <750:19 750:19>]
LOCAL_SYMBOL: b3Vector3.cpp<737:34> [b3Vector3.cpp <750:17 750:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <750:21 750:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <750:36 750:38>]
LOCAL_SYMBOL: b3Vector3.cpp<748:24> [b3Vector3.cpp <750:36 750:38>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <750:41 750:42>]
LOCAL_SYMBOL: b3Vector3.cpp<737:24> [b3Vector3.cpp <750:41 750:42>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <751:19 751:19>]
LOCAL_SYMBOL: b3Vector3.cpp<737:34> [b3Vector3.cpp <751:17 751:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <751:22 751:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <751:21 751:21>]
LOCAL_SYMBOL: b3Vector3.cpp<737:34> [b3Vector3.cpp <751:21 751:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <751:23 751:25>]
LOCAL_SYMBOL: b3Vector3.cpp<434:12> [b3Vector3.cpp <751:23 751:25>]
LOCAL_SYMBOL: b3Vector3.cpp<752:24> [b3Vector3.cpp <752:24 752:26>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <752:17 752:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <752:30 752:42>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <752:44 752:45>]
LOCAL_SYMBOL: b3Vector3.cpp<737:24> [b3Vector3.cpp <752:44 752:45>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <752:48 752:49>]
LOCAL_SYMBOL: b3Vector3.cpp<737:24> [b3Vector3.cpp <752:48 752:49>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <753:21 753:21>]
LOCAL_SYMBOL: b3Vector3.cpp<752:24> [b3Vector3.cpp <753:17 753:19>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <753:26 753:26>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <753:23 753:25>]
LOCAL_SYMBOL: b3Vector3.cpp<752:24> [b3Vector3.cpp <753:23 753:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <753:27 753:29>]
LOCAL_SYMBOL: b3Vector3.cpp<435:12> [b3Vector3.cpp <753:27 753:29>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <754:19 754:19>]
LOCAL_SYMBOL: b3Vector3.cpp<737:28> [b3Vector3.cpp <754:17 754:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <754:21 754:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <754:36 754:38>]
LOCAL_SYMBOL: b3Vector3.cpp<747:24> [b3Vector3.cpp <754:36 754:38>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <754:41 754:43>]
LOCAL_SYMBOL: b3Vector3.cpp<752:24> [b3Vector3.cpp <754:41 754:43>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <755:19 755:19>]
LOCAL_SYMBOL: b3Vector3.cpp<737:31> [b3Vector3.cpp <755:17 755:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <755:21 755:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <755:36 755:38>]
LOCAL_SYMBOL: b3Vector3.cpp<747:24> [b3Vector3.cpp <755:36 755:38>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <755:41 755:43>]
LOCAL_SYMBOL: b3Vector3.cpp<752:24> [b3Vector3.cpp <755:41 755:43>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <760:20 760:20>]
LOCAL_SYMBOL: b3Vector3.cpp<737:16> [b3Vector3.cpp <760:17 760:18>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <760:22 760:29>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <761:20 761:20>]
LOCAL_SYMBOL: b3Vector3.cpp<737:20> [b3Vector3.cpp <761:17 761:18>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <761:22 761:29>]
LOCAL_SYMBOL: b3Vector3.cpp<762:24> [b3Vector3.cpp <762:24 762:25>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <762:17 762:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movelh_ps(__m128, __m128) [b3Vector3.cpp <762:29 762:41>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <762:43 762:44>]
LOCAL_SYMBOL: b3Vector3.cpp<737:16> [b3Vector3.cpp <762:43 762:44>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <762:47 762:48>]
LOCAL_SYMBOL: b3Vector3.cpp<737:20> [b3Vector3.cpp <762:47 762:48>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <763:19 763:19>]
LOCAL_SYMBOL: b3Vector3.cpp<737:34> [b3Vector3.cpp <763:17 763:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_movehl_ps(__m128, __m128) [b3Vector3.cpp <763:21 763:33>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <763:35 763:36>]
LOCAL_SYMBOL: b3Vector3.cpp<737:20> [b3Vector3.cpp <763:35 763:36>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <763:39 763:40>]
LOCAL_SYMBOL: b3Vector3.cpp<737:16> [b3Vector3.cpp <763:39 763:40>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <764:20 764:20>]
LOCAL_SYMBOL: b3Vector3.cpp<762:24> [b3Vector3.cpp <764:17 764:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <764:24 764:24>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <764:22 764:23>]
LOCAL_SYMBOL: b3Vector3.cpp<762:24> [b3Vector3.cpp <764:22 764:23>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <764:25 764:27>]
LOCAL_SYMBOL: b3Vector3.cpp<435:12> [b3Vector3.cpp <764:25 764:27>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <765:19 765:19>]
LOCAL_SYMBOL: b3Vector3.cpp<737:34> [b3Vector3.cpp <765:17 765:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <765:21 765:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <765:37 765:37>]
LOCAL_SYMBOL: b3Vector3.cpp<737:34> [b3Vector3.cpp <765:37 765:37>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <765:40 765:40>]
LOCAL_SYMBOL: b3Vector3.cpp<737:34> [b3Vector3.cpp <765:40 765:40>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <766:19 766:19>]
LOCAL_SYMBOL: b3Vector3.cpp<737:28> [b3Vector3.cpp <766:17 766:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <766:21 766:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <766:37 766:38>]
LOCAL_SYMBOL: b3Vector3.cpp<762:24> [b3Vector3.cpp <766:37 766:38>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <766:41 766:42>]
LOCAL_SYMBOL: b3Vector3.cpp<762:24> [b3Vector3.cpp <766:41 766:42>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <767:19 767:19>]
LOCAL_SYMBOL: b3Vector3.cpp<737:31> [b3Vector3.cpp <767:17 767:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <767:21 767:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <767:37 767:38>]
LOCAL_SYMBOL: b3Vector3.cpp<762:24> [b3Vector3.cpp <767:37 767:38>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <767:41 767:42>]
LOCAL_SYMBOL: b3Vector3.cpp<762:24> [b3Vector3.cpp <767:41 767:42>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <768:19 768:19>]
LOCAL_SYMBOL: b3Vector3.cpp<737:34> [b3Vector3.cpp <768:17 768:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <768:22 768:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <768:21 768:21>]
LOCAL_SYMBOL: b3Vector3.cpp<737:34> [b3Vector3.cpp <768:21 768:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <768:23 768:25>]
LOCAL_SYMBOL: b3Vector3.cpp<434:12> [b3Vector3.cpp <768:23 768:25>]
LOCAL_SYMBOL: b3Vector3.cpp<773:24> [b3Vector3.cpp <773:24 773:25>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <773:17 773:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <773:39 773:39>]
LOCAL_SYMBOL: b3Vector3.cpp<429:19> [b3Vector3.cpp <773:29 773:36>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <774:19 774:19>]
LOCAL_SYMBOL: b3Vector3.cpp<737:34> [b3Vector3.cpp <774:17 774:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <774:22 774:35>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <774:38 774:39>]
LOCAL_SYMBOL: b3Vector3.cpp<773:24> [b3Vector3.cpp <774:38 774:39>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <774:42 774:43>]
LOCAL_SYMBOL: b3Vector3.cpp<773:24> [b3Vector3.cpp <774:42 774:43>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <775:20 775:20>]
LOCAL_SYMBOL: b3Vector3.cpp<773:24> [b3Vector3.cpp <775:17 775:18>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <775:24 775:24>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <775:22 775:23>]
LOCAL_SYMBOL: b3Vector3.cpp<773:24> [b3Vector3.cpp <775:22 775:23>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <775:25 775:27>]
LOCAL_SYMBOL: b3Vector3.cpp<435:12> [b3Vector3.cpp <775:25 775:27>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <776:19 776:19>]
LOCAL_SYMBOL: b3Vector3.cpp<737:34> [b3Vector3.cpp <776:17 776:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator*(const __m128, const __m128) [b3Vector3.cpp <776:22 776:22>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <776:21 776:21>]
LOCAL_SYMBOL: b3Vector3.cpp<737:34> [b3Vector3.cpp <776:21 776:21>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <776:23 776:25>]
LOCAL_SYMBOL: b3Vector3.cpp<434:12> [b3Vector3.cpp <776:23 776:25>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <777:19 777:19>]
LOCAL_SYMBOL: b3Vector3.cpp<737:28> [b3Vector3.cpp <777:17 777:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <777:21 777:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <777:36 777:37>]
LOCAL_SYMBOL: b3Vector3.cpp<773:24> [b3Vector3.cpp <777:36 777:37>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <777:40 777:41>]
LOCAL_SYMBOL: b3Vector3.cpp<773:24> [b3Vector3.cpp <777:40 777:41>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <778:19 778:19>]
LOCAL_SYMBOL: b3Vector3.cpp<737:31> [b3Vector3.cpp <778:17 778:17>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <778:21 778:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <778:36 778:37>]
LOCAL_SYMBOL: b3Vector3.cpp<773:24> [b3Vector3.cpp <778:36 778:37>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <778:40 778:41>]
LOCAL_SYMBOL: b3Vector3.cpp<773:24> [b3Vector3.cpp <778:40 778:41>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <782:11 782:11>]
LOCAL_SYMBOL: b3Vector3.cpp<737:28> [b3Vector3.cpp <782:9 782:9>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <782:14 782:14>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <782:13 782:13>]
LOCAL_SYMBOL: b3Vector3.cpp<737:28> [b3Vector3.cpp <782:13 782:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <782:15 782:15>]
LOCAL_SYMBOL: b3Vector3.cpp<737:31> [b3Vector3.cpp <782:15 782:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <783:11 783:11>]
LOCAL_SYMBOL: b3Vector3.cpp<737:28> [b3Vector3.cpp <783:9 783:9>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 operator+(const __m128, const __m128) [b3Vector3.cpp <783:14 783:14>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <783:13 783:13>]
LOCAL_SYMBOL: b3Vector3.cpp<737:28> [b3Vector3.cpp <783:13 783:13>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <783:15 783:15>]
LOCAL_SYMBOL: b3Vector3.cpp<737:34> [b3Vector3.cpp <783:15 783:15>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <784:28 784:28>]
LOCAL_SYMBOL: b3Vector3.cpp<440:12> [b3Vector3.cpp <784:9 784:19>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <784:21 784:25>]
LOCAL_SYMBOL: b3Vector3.cpp<737:28> [b3Vector3.cpp <784:30 784:30>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <785:13 785:13>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <785:9 785:11>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_min_ps(__m128, __m128) [b3Vector3.cpp <785:15 785:24>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <785:27 785:27>]
LOCAL_SYMBOL: b3Vector3.cpp<737:28> [b3Vector3.cpp <785:27 785:27>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <785:30 785:32>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <785:30 785:32>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <786:9 786:13>]
LOCAL_SYMBOL: b3Vector3.cpp<439:12> [b3Vector3.cpp <790:14 790:20>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> int _mm_movemask_ps(__m128) [b3Vector3.cpp <790:32 790:46>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <790:50 790:55>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_cmpeq_ps(__m128, __m128) [b3Vector3.cpp <790:58 790:69>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <790:71 790:73>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <790:71 790:73>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <790:76 790:81>]
LOCAL_SYMBOL: b3Vector3.cpp<432:12> [b3Vector3.cpp <790:76 790:81>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <793:13 793:13>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <793:9 793:11>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_min_ps(__m128, __m128) [b3Vector3.cpp <793:15 793:24>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <793:26 793:28>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <793:26 793:28>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <793:32 793:37>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <793:40 793:53>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <793:56 793:58>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <793:56 793:58>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <793:61 793:63>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <793:61 793:63>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(__m128 &&) [b3Vector3.cpp <794:13 794:13>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <794:9 794:11>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_min_ps(__m128, __m128) [b3Vector3.cpp <794:15 794:24>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <794:26 794:28>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <794:26 794:28>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 [b3Vector3.cpp <794:32 794:37>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_shuffle_ps(__m128, __m128, unsigned int) [b3Vector3.cpp <794:40 794:53>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <794:56 794:58>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <794:56 794:58>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <794:61 794:63>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <794:61 794:63>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.cpp <801:16 801:16>]
LOCAL_SYMBOL: b3Vector3.cpp<432:12> [b3Vector3.cpp <801:9 801:14>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <801:18 801:20>]
LOCAL_SYMBOL: b3Vector3.cpp<804:16> [b3Vector3.cpp <804:16 804:19>]
REFERENCE_TYPE_USAGE long b3_mindot_large(const float *, const float *, unsigned long, float *) -> size_t [b3Vector3.cpp <804:9 804:14>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <805:14 805:18>]
LOCAL_SYMBOL: b3Vector3.cpp<804:16> [b3Vector3.cpp <805:31 805:34>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> int _mm_movemask_ps(__m128) [b3Vector3.cpp <805:36 805:50>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> __m128 _mm_cmpeq_ps(__m128, __m128) [b3Vector3.cpp <805:53 805:64>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <805:84 805:84>]
LOCAL_SYMBOL: b3Vector3.cpp<440:12> [b3Vector3.cpp <805:67 805:77>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <805:79 805:83>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <805:87 805:89>]
LOCAL_SYMBOL: b3Vector3.cpp<447:12> [b3Vector3.cpp <805:87 805:89>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <805:95 805:99>]
LOCAL_SYMBOL: b3Vector3.cpp<437:10> [b3Vector3.cpp <807:9 807:16>]
LOCAL_SYMBOL: b3Vector3.cpp<446:12> [b3Vector3.cpp <807:22 807:26>]
LOCAL_SYMBOL: b3Vector3.cpp<439:12> [b3Vector3.cpp <807:30 807:36>]
LOCAL_SYMBOL: b3Vector3.cpp<430:32> [b3Vector3.cpp <807:40 807:49>]
LOCAL_SYMBOL: b3Vector3.cpp<804:16> [b3Vector3.cpp <807:51 807:54>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void _mm_store_ss(float *, __m128) [b3Vector3.cpp <810:5 810:16>]
LOCAL_SYMBOL: b3Vector3.cpp<427:86> [b3Vector3.cpp <810:19 810:27>]
REFERENCE_CALL long b3_mindot_large(const float *, const float *, unsigned long, float *) -> void __m128::__m128(const __m128 &) [b3Vector3.cpp <810:30 810:35>]
LOCAL_SYMBOL: b3Vector3.cpp<432:12> [b3Vector3.cpp <810:30 810:35>]
LOCAL_SYMBOL: b3Vector3.cpp<437:10> [b3Vector3.cpp <811:12 811:19>]
