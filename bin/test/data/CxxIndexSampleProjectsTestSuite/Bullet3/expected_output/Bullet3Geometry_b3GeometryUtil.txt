FILE: b3GeometryUtil.cpp
FILE: b3GeometryUtil.h
FILE: b3Vector3.h
FILE: b3Scalar.h
FILE: math.h non-indexed
FILE: corecrt.h non-indexed
FILE: vcruntime.h non-indexed
FILE: sal.h non-indexed
FILE: concurrencysal.h non-indexed
FILE: vadefs.h non-indexed
FILE: stdlib.h non-indexed
FILE: corecrt_malloc.h non-indexed
FILE: corecrt_search.h non-indexed
FILE: stddef.h non-indexed
FILE: corecrt_wstdlib.h non-indexed
FILE: limits.h non-indexed
FILE: float.h non-indexed
FILE: b3Logging.h
FILE: emmintrin.h non-indexed
FILE: xmmintrin.h non-indexed
FILE: mmintrin.h non-indexed
FILE: malloc.h non-indexed
FILE: b3MinMax.h
FILE: b3AlignedAllocator.h
FILE: b3AlignedObjectArray.h
FILE: new non-indexed
FILE: exception non-indexed
FILE: yvals.h non-indexed
FILE: yvals_core.h non-indexed
FILE: xkeycheck.h non-indexed
FILE: crtdefs.h non-indexed
FILE: crtdbg.h non-indexed
FILE: vcruntime_new_debug.h non-indexed
FILE: vcruntime_new.h non-indexed
FILE: use_ansi.h non-indexed
FILE: type_traits non-indexed
FILE: xstddef non-indexed
FILE: cstddef non-indexed
FILE: xtr1common non-indexed
FILE: cstdlib non-indexed
FILE: initializer_list non-indexed
FILE: vcruntime_exception.h non-indexed
FILE: eh.h non-indexed
FILE: corecrt_terminate.h non-indexed
SYMBOL_MACRO: B3_GEOMETRY_UTIL_H [b3GeometryUtil.h <17:9 17:26>]
SYMBOL_MACRO: B3_VECTOR3_H [b3Vector3.h <18:9 18:20>]
SYMBOL_MACRO: B3_SCALAR_H [b3Scalar.h <18:9 18:19>]
SYMBOL_MACRO: B3_BULLET_VERSION [b3Scalar.h <32:9 <32:9 32:25> 32:26>]
SYMBOL_MACRO: B3_LOGGING_H [b3Logging.h <3:9 3:20>]
SYMBOL_MACRO: b3Printf [b3Logging.h <11:9 <11:9 11:16> 11:63>]
SYMBOL_MACRO: b3Warning [b3Logging.h <17:9 <17:9 17:17> 17:166>]
SYMBOL_MACRO: b3Error [b3Logging.h <18:9 <18:9 18:15> 18:159>]
SYMBOL_MACRO: B3_PROFILE [b3Logging.h <41:9 <41:9 41:18> 41:59>]
SYMBOL_MACRO: B3_FORCE_INLINE [b3Scalar.h <61:12 <61:12 61:26> 61:27>]
SYMBOL_MACRO: B3_ATTRIBUTE_ALIGNED16 [b3Scalar.h <62:12 <62:12 62:33> 62:59>]
SYMBOL_MACRO: B3_ATTRIBUTE_ALIGNED64 [b3Scalar.h <63:12 <63:12 63:33> 63:59>]
SYMBOL_MACRO: B3_ATTRIBUTE_ALIGNED128 [b3Scalar.h <64:12 <64:12 64:34> 64:62>]
SYMBOL_MACRO: B3_USE_SSE [b3Scalar.h <75:12 75:21>]
SYMBOL_MACRO: b3Assert [b3Scalar.h <102:11 <102:11 102:18> 102:20>]
SYMBOL_MACRO: b3FullAssert [b3Scalar.h <105:11 <105:11 105:22> 105:24>]
SYMBOL_MACRO: b3Likely [b3Scalar.h <107:11 <107:11 107:18> 107:24>]
SYMBOL_MACRO: b3Unlikely [b3Scalar.h <108:11 <108:11 108:20> 108:25>]
SYMBOL_MACRO: B3_LARGE_FLOAT [b3Scalar.h <265:9 <265:9 265:22> 265:23>]
SYMBOL_MACRO: B3_DECLARE_ALIGNED_ALLOCATOR [b3Scalar.h <331:9 <331:9 331:36> 339:64>]
SYMBOL_MACRO: B3_2_PI [b3Scalar.h <408:9 <408:9 408:15> 408:53>]
SYMBOL_MACRO: B3_PI [b3Scalar.h <409:9 <409:9 409:13> 409:48>]
SYMBOL_MACRO: B3_HALF_PI [b3Scalar.h <410:9 <410:9 410:18> 410:49>]
SYMBOL_MACRO: B3_RADS_PER_DEG [b3Scalar.h <411:9 <411:9 411:23> 411:50>]
SYMBOL_MACRO: B3_DEGS_PER_RAD [b3Scalar.h <412:9 <412:9 412:23> 412:51>]
SYMBOL_MACRO: B3_SQRT12 [b3Scalar.h <413:9 <413:9 413:17> 413:63>]
SYMBOL_MACRO: b3RecipSqrt [b3Scalar.h <415:9 <415:9 415:19> 415:69>]
SYMBOL_MACRO: B3_EPSILON [b3Scalar.h <422:9 <422:9 422:18> 422:24>]
SYMBOL_MACRO: B3_INFINITY [b3Scalar.h <423:9 <423:9 423:19> 423:24>]
SYMBOL_MACRO: B3_DECLARE_HANDLE [b3Scalar.h <459:9 <459:9 459:25> 459:73>]
SYMBOL_MACRO: b3Fsels [b3Scalar.h <467:9 <467:9 467:15> 467:45>]
SYMBOL_MACRO: B3_GEN_MINMAX_H [b3MinMax.h <18:9 18:23>]
SYMBOL_MACRO: B3_ALIGNED_ALLOCATOR [b3AlignedAllocator.h <17:9 17:28>]
SYMBOL_MACRO: b3AlignedAlloc [b3AlignedAllocator.h <41:10 <41:10 41:23> 41:77>]
SYMBOL_MACRO: b3AlignedFree [b3AlignedAllocator.h <42:10 <42:10 42:22> 42:53>]
SYMBOL_MACRO: b3Vector3Data [b3Vector3.h <29:9 <29:9 29:21> 29:22>]
SYMBOL_MACRO: b3Vector3DataName [b3Vector3.h <30:9 <30:9 30:25> 30:26>]
SYMBOL_MACRO: B3_SHUFFLE [b3Vector3.h <42:9 <42:9 42:18> 42:59>]
SYMBOL_MACRO: b3_pshufd_ps [b3Vector3.h <44:9 <44:9 44:20> 44:69>]
SYMBOL_MACRO: b3_splat3_ps [b3Vector3.h <45:9 <45:9 45:20> 45:74>]
SYMBOL_MACRO: b3_splat_ps [b3Vector3.h <46:9 <46:9 46:19> 46:74>]
SYMBOL_MACRO: b3v3AbsiMask [b3Vector3.h <48:9 <48:9 48:20> 48:83>]
SYMBOL_MACRO: b3vAbsMask [b3Vector3.h <49:9 <49:9 49:18> 49:82>]
SYMBOL_MACRO: b3vFFF0Mask [b3Vector3.h <50:9 <50:9 50:19> 50:82>]
SYMBOL_MACRO: b3v3AbsfMask [b3Vector3.h <51:9 <51:9 51:20> 51:47>]
SYMBOL_MACRO: b3vFFF0fMask [b3Vector3.h <52:9 <52:9 52:20> 52:46>]
SYMBOL_MACRO: b3vxyzMaskf [b3Vector3.h <53:9 <53:9 53:19> 53:20>]
SYMBOL_MACRO: b3vAbsfMask [b3Vector3.h <54:9 <54:9 54:19> 54:44>]
SYMBOL_MACRO: B3_OBJECT_ARRAY__ [b3AlignedObjectArray.h <18:9 18:25>]
SYMBOL_MACRO: B3_USE_PLACEMENT_NEW [b3AlignedObjectArray.h <29:9 <29:9 29:28> 29:29>]
SYMBOL_MACRO: B3_ALLOW_ARRAY_COPY_OPERATOR [b3AlignedObjectArray.h <31:9 31:36>]
SYMBOL_FUNCTION: int b3GetVersion() [b3Scalar.h <34:1 <34:1 <34:12 34:23> 34:25> 37:1>]
SYMBOL_BUILTIN_TYPE: int
SYMBOL_FUNCTION: void b3EnterProfileZone(const char *) [b3Logging.h <23:1 <23:6 23:23> 23:41>]
SYMBOL_BUILTIN_TYPE: void
SYMBOL_BUILTIN_TYPE: char
SYMBOL_FUNCTION: void b3LeaveProfileZone() [b3Logging.h <24:1 <24:6 24:23> 24:25>]
SYMBOL_CLASS: b3ProfileZone [b3Logging.h <27:1 <27:7 27:19> 39:1>]
SYMBOL_METHOD: public void b3ProfileZone::b3ProfileZone(const char *) [b3Logging.h <30:2 <30:2 <30:2 30:14> 30:32> 33:2>]
SYMBOL_METHOD: public void b3ProfileZone::~b3ProfileZone() [b3Logging.h <35:2 <35:2 <35:2 35:15> 35:17> 38:2>]
SYMBOL_TYPEDEF: b3PrintfFunc [b3Logging.h <53:15 53:26>]
SYMBOL_TYPEDEF: b3WarningMessageFunc [b3Logging.h <54:15 54:34>]
SYMBOL_TYPEDEF: b3ErrorMessageFunc [b3Logging.h <55:15 55:32>]
SYMBOL_TYPEDEF: b3EnterProfileZoneFunc [b3Logging.h <56:15 56:36>]
SYMBOL_TYPEDEF: b3LeaveProfileZoneFunc [b3Logging.h <57:15 57:36>]
SYMBOL_FUNCTION: void b3SetCustomPrintfFunc(b3PrintfFunc *) [b3Logging.h <60:1 <60:6 60:26> 60:52>]
SYMBOL_FUNCTION: void b3SetCustomWarningMessageFunc(b3WarningMessageFunc *) [b3Logging.h <61:1 <61:6 61:34> 61:72>]
SYMBOL_FUNCTION: void b3SetCustomErrorMessageFunc(b3ErrorMessageFunc *) [b3Logging.h <62:1 <62:6 62:32> 62:66>]
SYMBOL_FUNCTION: void b3SetCustomEnterProfileZoneFunc(b3EnterProfileZoneFunc *) [b3Logging.h <65:1 <65:6 65:36> 65:71>]
SYMBOL_FUNCTION: void b3SetCustomLeaveProfileZoneFunc(b3LeaveProfileZoneFunc *) [b3Logging.h <66:1 <66:6 66:36> 66:71>]
SYMBOL_FUNCTION: void b3OutputPrintfVarArgsInternal(const char *) [b3Logging.h <69:1 <69:6 69:34> 69:56>]
SYMBOL_FUNCTION: void b3OutputWarningMessageVarArgsInternal(const char *) [b3Logging.h <70:1 <70:6 70:42> 70:64>]
SYMBOL_FUNCTION: void b3OutputErrorMessageVarArgsInternal(const char *) [b3Logging.h <71:1 <71:6 71:40> 71:62>]
SYMBOL_TYPEDEF: b3Scalar [b3Scalar.h <263:15 263:22>]
SYMBOL_BUILTIN_TYPE: float
SYMBOL_TYPEDEF: b3SimdFloat4 [b3Scalar.h <269:16 269:27>]
SYMBOL_FUNCTION: b3Scalar b3Sqrt(b3Scalar) [b3Scalar.h <361:1 <361:1 <361:26 361:31> 361:43> 380:1>]
SYMBOL_FUNCTION: float sqrtf(float)
SYMBOL_FUNCTION: b3Scalar b3Fabs(b3Scalar) [b3Scalar.h <381:1 <381:1 <381:26 381:31> 381:43> 381:64>]
SYMBOL_FUNCTION: float fabsf(float)
SYMBOL_FUNCTION: b3Scalar b3Cos(b3Scalar) [b3Scalar.h <382:1 <382:1 <382:26 382:30> 382:42> 382:62>]
SYMBOL_FUNCTION: float cosf(float)
SYMBOL_FUNCTION: b3Scalar b3Sin(b3Scalar) [b3Scalar.h <383:1 <383:1 <383:26 383:30> 383:42> 383:62>]
SYMBOL_FUNCTION: float sinf(float)
SYMBOL_FUNCTION: b3Scalar b3Tan(b3Scalar) [b3Scalar.h <384:1 <384:1 <384:26 384:30> 384:42> 384:62>]
SYMBOL_FUNCTION: float tanf(float)
SYMBOL_FUNCTION: b3Scalar b3Acos(b3Scalar) [b3Scalar.h <385:1 <385:1 <385:26 385:31> 385:43> 391:1>]
SYMBOL_FUNCTION: float acosf(float)
SYMBOL_FUNCTION: b3Scalar b3Asin(b3Scalar) [b3Scalar.h <392:1 <392:1 <392:26 392:31> 392:43> 398:1>]
SYMBOL_FUNCTION: float asinf(float)
SYMBOL_FUNCTION: b3Scalar b3Atan(b3Scalar) [b3Scalar.h <399:1 <399:1 <399:26 399:31> 399:43> 399:64>]
SYMBOL_FUNCTION: float atanf(float)
SYMBOL_FUNCTION: b3Scalar b3Atan2(b3Scalar, b3Scalar) [b3Scalar.h <400:1 <400:1 <400:26 400:32> 400:56> 400:81>]
SYMBOL_FUNCTION: float atan2f(float, float)
SYMBOL_FUNCTION: b3Scalar b3Exp(b3Scalar) [b3Scalar.h <401:1 <401:1 <401:26 401:30> 401:42> 401:62>]
SYMBOL_FUNCTION: float expf(float)
SYMBOL_FUNCTION: b3Scalar b3Log(b3Scalar) [b3Scalar.h <402:1 <402:1 <402:26 402:30> 402:42> 402:62>]
SYMBOL_FUNCTION: float logf(float)
SYMBOL_FUNCTION: b3Scalar b3Pow(b3Scalar, b3Scalar) [b3Scalar.h <403:1 <403:1 <403:26 403:30> 403:53> 403:75>]
SYMBOL_FUNCTION: float powf(float, float)
SYMBOL_FUNCTION: b3Scalar b3Fmod(b3Scalar, b3Scalar) [b3Scalar.h <404:1 <404:1 <404:26 404:31> 404:54> 404:77>]
SYMBOL_FUNCTION: float fmodf(float, float)
SYMBOL_FUNCTION: b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) [b3Scalar.h <426:1 <426:1 <426:26 426:36> 426:60> 440:1>]
SYMBOL_FUNCTION: bool b3FuzzyZero(b3Scalar) [b3Scalar.h <442:1 <442:1 <442:27 442:37> 442:49> 442:84>]
SYMBOL_BUILTIN_TYPE: bool
SYMBOL_FUNCTION: bool b3Equal(b3Scalar, b3Scalar) [b3Scalar.h <444:1 <444:1 <444:22 444:28> 444:54> 446:1>]
SYMBOL_FUNCTION: bool b3GreaterEqual(b3Scalar, b3Scalar) [b3Scalar.h <447:1 <447:1 <447:22 447:35> 447:62> 449:1>]
SYMBOL_FUNCTION: int b3IsNegative(b3Scalar) [b3Scalar.h <452:1 <452:1 <452:27 452:38> 452:50> 454:1>]
SYMBOL_FUNCTION: b3Scalar b3Radians(b3Scalar) [b3Scalar.h <456:1 <456:1 <456:26 456:34> 456:46> 456:78>]
SYMBOL_FUNCTION: b3Scalar b3Degrees(b3Scalar) [b3Scalar.h <457:1 <457:1 <457:26 457:34> 457:46> 457:78>]
SYMBOL_FUNCTION: b3Scalar b3Fsel(b3Scalar, b3Scalar, b3Scalar) [b3Scalar.h <462:1 <462:1 <462:26 462:31> 462:67> 465:1>]
SYMBOL_FUNCTION: bool b3MachineIsLittleEndian() [b3Scalar.h <470:1 <470:1 <470:22 470:44> 470:46> 478:1>]
SYMBOL_BUILTIN_TYPE: long
SYMBOL_FUNCTION: unsigned int b3Select(unsigned int, unsigned int, unsigned int) [b3Scalar.h <484:1 <484:1 <484:26 484:33> 484:118> 493:1>]
SYMBOL_BUILTIN_TYPE: unsigned int
SYMBOL_FUNCTION: int b3Select(unsigned int, int, int) [b3Scalar.h <494:1 <494:1 <494:21 494:28> 494:103> 499:1>]
SYMBOL_FUNCTION: float b3Select(unsigned int, float, float) [b3Scalar.h <500:1 <500:1 <500:23 500:30> 500:109> 507:1>]
SYMBOL_FUNCTION: void b3Swap<typename T>(T &, T &) [b3Scalar.h <509:1 <509:22 <509:43 509:48> 509:60> 514:1>]
SYMBOL_FUNCTION: unsigned int b3SwapEndian(unsigned int) [b3Scalar.h <518:1 <518:1 <518:26 518:37> 518:51> 521:1>]
SYMBOL_FUNCTION: unsigned short b3SwapEndian(unsigned short) [b3Scalar.h <523:1 <523:1 <523:32 523:43> 523:63> 526:1>]
SYMBOL_BUILTIN_TYPE: unsigned short
SYMBOL_FUNCTION: unsigned int b3SwapEndian(int) [b3Scalar.h <528:1 <528:1 <528:26 528:37> 528:46> 531:1>]
SYMBOL_FUNCTION: unsigned short b3SwapEndian(short) [b3Scalar.h <533:1 <533:1 <533:32 533:43> 533:54> 536:1>]
SYMBOL_BUILTIN_TYPE: short
SYMBOL_FUNCTION: unsigned int b3SwapEndianFloat(float) [b3Scalar.h <544:1 <544:1 <544:31 544:47> 544:56> 555:1>]
SYMBOL_BUILTIN_TYPE: unsigned char
SYMBOL_FUNCTION: float b3UnswapEndianFloat(unsigned int) [b3Scalar.h <558:1 <558:1 <558:23 558:41> 558:57> 570:1>]
SYMBOL_FUNCTION: void b3SwapEndianDouble(double, unsigned char *) [b3Scalar.h <574:1 <574:1 <574:23 574:40> 574:70> 587:1>]
SYMBOL_BUILTIN_TYPE: double
SYMBOL_FUNCTION: double b3UnswapEndianDouble(const unsigned char *) [b3Scalar.h <590:1 <590:1 <590:24 590:43> 590:69> 605:1>]
SYMBOL_FUNCTION: b3Scalar b3NormalizeAngle(b3Scalar) [b3Scalar.h <608:1 <608:1 <608:26 608:41> 608:66> 623:1>]
SYMBOL_STRUCT: b3TypedObject [b3Scalar.h <626:1 <626:8 626:20> 637:1>]
SYMBOL_METHOD: public void b3TypedObject::b3TypedObject(int) [b3Scalar.h <628:2 <628:2 <628:2 628:14> 628:30> 631:2>]
SYMBOL_FIELD: public int b3TypedObject::m_objectType [b3Scalar.h <632:6 632:17>]
SYMBOL_METHOD: public int b3TypedObject::getObjectType() const [b3Scalar.h <633:2 <633:2 <633:13 633:25> 633:33> 636:2>]
SYMBOL_FUNCTION: T * b3AlignPointer<typename T>(T *, size_t) [b3Scalar.h <642:1 <642:22 <642:25 642:38> 642:73> 661:1>]
SYMBOL_STRUCT: b3AlignPointer<typename T>::b3ConvertPointerSizeT [b3Scalar.h <645:2 <645:9 645:29> 652:2>]
SYMBOL_UNION: public b3AlignPointer<typename T>::b3ConvertPointerSizeT::anonymous union (b3Scalar.h<647:3>) [b3Scalar.h <647:3 <647:3 647:7> 651:3>]
SYMBOL_FIELD: public b3AlignPointer<typename T>::T * b3AlignPointer<typename T>::b3ConvertPointerSizeT::anonymous union (b3Scalar.h<647:3>)::ptr [b3Scalar.h <649:8 649:10>]
SYMBOL_FIELD: public size_t b3AlignPointer<typename T>::b3ConvertPointerSizeT::anonymous union (b3Scalar.h<647:3>)::integer [b3Scalar.h <650:12 650:18>]
SYMBOL_FIELD: public b3AlignPointer<typename T>::b3ConvertPointerSizeT::anonymous union (b3Scalar.h<647:3>) b3AlignPointer<typename T>::b3ConvertPointerSizeT:: [b3Scalar.h <647:3 647:7>]
SYMBOL_FUNCTION: const T & b3Min<class T>(const T &, const T &) [b3MinMax.h <22:1 <23:1 <23:26 23:30> 23:54> 26:1>]
SYMBOL_FUNCTION: const T & b3Max<class T>(const T &, const T &) [b3MinMax.h <28:1 <29:1 <29:26 29:30> 29:54> 32:1>]
SYMBOL_FUNCTION: const T & b3Clamped<class T>(const T &, const T &, const T &) [b3MinMax.h <34:1 <35:1 <35:26 35:34> 35:72> 38:1>]
SYMBOL_FUNCTION: void b3SetMin<class T>(T &, const T &) [b3MinMax.h <40:1 <41:1 <41:22 41:29> 41:47> 47:1>]
SYMBOL_FUNCTION: void b3SetMin<float>(float &, const float &) [b3MinMax.h <41:1 <41:1 <41:22 41:29> 41:47> 47:1>]
SYMBOL_FUNCTION: void b3SetMax<class T>(T &, const T &) [b3MinMax.h <49:1 <50:1 <50:22 50:29> 50:47> 56:1>]
SYMBOL_FUNCTION: void b3SetMax<float>(float &, const float &) [b3MinMax.h <50:1 <50:1 <50:22 50:29> 50:47> 56:1>]
SYMBOL_FUNCTION: void b3Clamp<class T>(T &, const T &, const T &) [b3MinMax.h <58:1 <59:1 <59:22 59:28> 59:60> 69:1>]
SYMBOL_FUNCTION: void * b3AlignedAllocInternal(size_t, int) [b3AlignedAllocator.h <38:2 <38:8 38:29> 38:58>]
SYMBOL_FUNCTION: void b3AlignedFreeInternal(void *) [b3AlignedAllocator.h <39:2 <39:7 39:27> 39:39>]
SYMBOL_TYPEDEF: btSizeType [b3AlignedAllocator.h <45:13 45:22>]
SYMBOL_TYPEDEF: b3AlignedAllocFunc [b3AlignedAllocator.h <47:16 47:33>]
SYMBOL_TYPEDEF: b3AlignedFreeFunc [b3AlignedAllocator.h <48:15 48:31>]
SYMBOL_TYPEDEF: b3AllocFunc [b3AlignedAllocator.h <49:16 49:26>]
SYMBOL_TYPEDEF: b3FreeFunc [b3AlignedAllocator.h <50:15 50:24>]
SYMBOL_FUNCTION: void b3AlignedAllocSetCustom(b3AllocFunc *, b3FreeFunc *) [b3AlignedAllocator.h <53:1 <53:6 53:28> 53:74>]
SYMBOL_FUNCTION: void b3AlignedAllocSetCustomAligned(b3AlignedAllocFunc *, b3AlignedFreeFunc *) [b3AlignedAllocator.h <55:1 <55:6 55:35> 55:95>]
SYMBOL_CLASS: b3AlignedAllocator<typename T, unsigned int Alignment> [b3AlignedAllocator.h <60:1 <61:7 61:24> 102:1>]
SYMBOL_TYPEDEF: private b3AlignedAllocator<typename T, unsigned int Alignment>::self_type [b3AlignedAllocator.h <63:46 63:54>]
SYMBOL_METHOD: public void b3AlignedAllocator<typename T, unsigned int Alignment>::b3AlignedAllocator<T, Alignment>() [b3AlignedAllocator.h <68:2 <68:2 <68:2 68:19> 68:21> 68:24>]
SYMBOL_METHOD: public void b3AlignedAllocator<typename T, unsigned int Alignment>::b3AlignedAllocator<T, Alignment><typename Other>(const b3AlignedAllocator<Other, Alignment> &) [b3AlignedAllocator.h <73:2 <74:2 <74:2 74:19> 74:70> 74:73>]
SYMBOL_TYPEDEF: public b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer [b3AlignedAllocator.h <76:27 76:39>]
SYMBOL_TYPEDEF: public b3AlignedAllocator<typename T, unsigned int Alignment>::const_reference [b3AlignedAllocator.h <77:27 77:41>]
SYMBOL_TYPEDEF: public b3AlignedAllocator<typename T, unsigned int Alignment>::pointer [b3AlignedAllocator.h <78:27 78:33>]
SYMBOL_TYPEDEF: public b3AlignedAllocator<typename T, unsigned int Alignment>::reference [b3AlignedAllocator.h <79:27 79:35>]
SYMBOL_TYPEDEF: public b3AlignedAllocator<typename T, unsigned int Alignment>::value_type [b3AlignedAllocator.h <80:27 80:36>]
SYMBOL_METHOD: public b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::address(b3AlignedAllocator<typename T, unsigned int Alignment>::reference) const [b3AlignedAllocator.h <82:2 <82:2 <82:16 82:22> 82:55> 82:98>]
SYMBOL_METHOD: public b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer b3AlignedAllocator<typename T, unsigned int Alignment>::address(b3AlignedAllocator<typename T, unsigned int Alignment>::const_reference) const [b3AlignedAllocator.h <83:2 <83:2 <83:16 83:22> 83:55> 83:98>]
SYMBOL_METHOD: public b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::allocate(btSizeType, b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer *) [b3AlignedAllocator.h <84:2 <84:2 <84:16 84:23> 84:82> 87:2>]
SYMBOL_METHOD: public void b3AlignedAllocator<typename T, unsigned int Alignment>::construct(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer, const b3AlignedAllocator<typename T, unsigned int Alignment>::value_type &) [b3AlignedAllocator.h <88:2 <88:2 <88:16 88:24> 88:81> 88:116>]
SYMBOL_METHOD: public void b3AlignedAllocator<typename T, unsigned int Alignment>::deallocate(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer) [b3AlignedAllocator.h <89:2 <89:2 <89:16 89:25> 89:49> 91:2>]
SYMBOL_METHOD: public void b3AlignedAllocator<typename T, unsigned int Alignment>::destroy(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer) [b3AlignedAllocator.h <92:2 <92:2 <92:16 92:22> 92:49> 92:105>]
SYMBOL_STRUCT: b3AlignedAllocator<typename T, unsigned int Alignment>::rebind<typename O> [b3AlignedAllocator.h <95:2 <95:33 95:38> 97:2>]
SYMBOL_TYPEDEF: public b3AlignedAllocator<typename T, unsigned int Alignment>::rebind<typename O>::other [b3AlignedAllocator.h <96:47 96:51>]
SYMBOL_METHOD: public b3AlignedAllocator<typename T, unsigned int Alignment>::self_type & b3AlignedAllocator<typename T, unsigned int Alignment>::operator=<typename O>(const b3AlignedAllocator<O, Alignment> &) [b3AlignedAllocator.h <98:2 <99:2 <99:14 99:22> 99:69> 99:87>]
SYMBOL_FUNCTION: public bool operator==(const b3AlignedAllocator<typename T, unsigned int Alignment>::self_type &, const b3AlignedAllocator<typename T, unsigned int Alignment>::self_type &) [b3AlignedAllocator.h <101:2 <101:2 <101:14 101:23> 101:64> 101:81>]
SYMBOL_CLASS: b3AlignedAllocator<b3Vector3, 16> [b3AlignedAllocator.h <60:1 <61:7 61:24> 102:1>]
SYMBOL_TYPEDEF: private b3AlignedAllocator<b3Vector3, 16>::self_type [b3AlignedAllocator.h <63:46 63:54>]
SYMBOL_METHOD: public void b3AlignedAllocator<b3Vector3, 16>::b3AlignedAllocator() [b3AlignedAllocator.h <68:2 <68:2 68:19> 68:24>]
SYMBOL_METHOD: public void b3AlignedAllocator<b3Vector3, 16>::b3AlignedAllocator<typename Other>(const b3AlignedAllocator<Other, 16U> &) [b3AlignedAllocator.h <74:2 <74:2 74:19> 74:73>]
SYMBOL_TYPEDEF: public b3AlignedAllocator<b3Vector3, 16>::const_pointer [b3AlignedAllocator.h <76:27 76:39>]
SYMBOL_TYPEDEF: public b3AlignedAllocator<b3Vector3, 16>::const_reference [b3AlignedAllocator.h <77:27 77:41>]
SYMBOL_TYPEDEF: public b3AlignedAllocator<b3Vector3, 16>::pointer [b3AlignedAllocator.h <78:27 78:33>]
SYMBOL_TYPEDEF: public b3AlignedAllocator<b3Vector3, 16>::reference [b3AlignedAllocator.h <79:27 79:35>]
SYMBOL_TYPEDEF: public b3AlignedAllocator<b3Vector3, 16>::value_type [b3AlignedAllocator.h <80:27 80:36>]
SYMBOL_METHOD: public b3AlignedAllocator<b3Vector3, 16>::pointer b3AlignedAllocator<b3Vector3, 16>::address(b3AlignedAllocator<b3Vector3, 16>::reference) const [b3AlignedAllocator.h <82:2 <82:16 82:22> 82:98>]
SYMBOL_METHOD: public b3AlignedAllocator<b3Vector3, 16>::const_pointer b3AlignedAllocator<b3Vector3, 16>::address(b3AlignedAllocator<b3Vector3, 16>::const_reference) const [b3AlignedAllocator.h <83:2 <83:16 83:22> 83:98>]
SYMBOL_METHOD: public b3AlignedAllocator<b3Vector3, 16>::pointer b3AlignedAllocator<b3Vector3, 16>::allocate(btSizeType, b3AlignedAllocator<b3Vector3, 16>::const_pointer *) [b3AlignedAllocator.h <84:2 <84:2 <84:16 84:23> 84:82> 87:2>]
SYMBOL_METHOD: public void b3AlignedAllocator<b3Vector3, 16>::construct(b3AlignedAllocator<b3Vector3, 16>::pointer, const b3AlignedAllocator<b3Vector3, 16>::value_type &) [b3AlignedAllocator.h <88:2 <88:16 88:24> 88:116>]
SYMBOL_METHOD: public void b3AlignedAllocator<b3Vector3, 16>::deallocate(b3AlignedAllocator<b3Vector3, 16>::pointer) [b3AlignedAllocator.h <89:2 <89:2 <89:16 89:25> 89:49> 91:2>]
SYMBOL_METHOD: public void b3AlignedAllocator<b3Vector3, 16>::destroy(b3AlignedAllocator<b3Vector3, 16>::pointer) [b3AlignedAllocator.h <92:2 <92:16 92:22> 92:105>]
SYMBOL_METHOD: public b3AlignedAllocator<b3Vector3, 16>::self_type & b3AlignedAllocator<b3Vector3, 16>::operator=<typename O>(const b3AlignedAllocator<O, 16U> &) [b3AlignedAllocator.h <99:2 <99:14 99:22> 99:87>]
SYMBOL_FUNCTION: bool operator==(const b3AlignedAllocator<b3Vector3, 16>::self_type &, const b3AlignedAllocator<b3Vector3, 16>::self_type &) [b3AlignedAllocator.h <101:2 <101:14 101:23> 101:81>]
SYMBOL_GLOBAL_VARIABLE: const __m128 b3vMzeroMask [b3Vector3.h <58:37 58:48>]
SYMBOL_GLOBAL_VARIABLE: const __m128 b3v1110 [b3Vector3.h <59:37 59:43>]
SYMBOL_GLOBAL_VARIABLE: const __m128 b3vHalf [b3Vector3.h <60:37 60:43>]
SYMBOL_GLOBAL_VARIABLE: const __m128 b3v1_5 [b3Vector3.h <61:37 61:42>]
QUALIFIER: b3Vector3 [b3Vector3.h <902:26 902:34>]
QUALIFIER: b3Vector3 [b3Vector3.h <907:26 907:34>]
QUALIFIER: b3Vector3 [b3Vector3.h <912:27 912:35>]
QUALIFIER: b3Vector3 [b3Vector3.h <923:27 923:35>]
QUALIFIER: b3Vector3 [b3Vector3.h <965:27 965:35>]
QUALIFIER: b3Vector3 [b3Vector3.h <1007:27 1007:35>]
QUALIFIER: b3Vector3 [b3Vector3.h <1260:22 1260:30>]
QUALIFIER: b3Vector3 [b3Vector3.h <1267:22 1267:30>]
QUALIFIER: b3Vector3 [b3Vector3.h <1274:22 1274:30>]
QUALIFIER: b3Vector3 [b3Vector3.h <1281:22 1281:30>]
QUALIFIER: b3Vector3 [b3Vector3.h <1288:22 1288:30>]
QUALIFIER: b3Vector3 [b3Vector3.h <1295:22 1295:30>]
SYMBOL_CLASS: b3Vector3 [b3Vector3.h <74:7 74:15>]
SYMBOL_CLASS: b3Vector3 [b3Vector3.h <92:1 <92:31 92:39> 709:1>]
SYMBOL_CLASS: b3Vector4 [b3Vector3.h <75:7 75:15>]
SYMBOL_CLASS: b3Vector4 [b3Vector3.h <1048:1 <1048:7 1048:15> 1171:1>]
SYMBOL_FUNCTION: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) [b3Vector3.h <83:1 <83:18 83:30> 83:64>]
SYMBOL_FUNCTION: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) [b3Vector3.h <1304:1 <1304:18 1304:30> 1309:1>]
SYMBOL_FUNCTION: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) [b3Vector3.h <84:1 <84:18 84:30> 84:76>]
SYMBOL_FUNCTION: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) [b3Vector3.h <1311:1 <1311:18 1311:30> 1317:1>]
SYMBOL_FUNCTION: b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) [b3Vector3.h <85:1 <85:18 85:30> 85:75>]
SYMBOL_FUNCTION: b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) [b3Vector3.h <1319:1 <1319:18 1319:30> 1324:1>]
QUALIFIER: b3Vector3::anonymous union (b3Vector3.h<96:9>) [b3Vector3.h <92:31 92:39>]
SYMBOL_UNION: public b3Vector3::anonymous union (b3Vector3.h<96:9>) [b3Vector3.h <96:9 <96:9 96:13> 101:9>]
SYMBOL_FIELD: public b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <97:31 97:37>]
SYMBOL_FIELD: public float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <98:19 98:26>]
SYMBOL_STRUCT: public b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>) [b3Vector3.h <99:4 <99:4 99:9> 99:26>]
SYMBOL_FIELD: public float b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::x [b3Vector3.h <99:18 99:18>]
SYMBOL_FIELD: public float b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::y [b3Vector3.h <99:20 99:20>]
SYMBOL_FIELD: public float b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::z [b3Vector3.h <99:22 99:22>]
SYMBOL_FIELD: public float b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::w [b3Vector3.h <99:24 99:24>]
SYMBOL_METHOD: public void b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::() [b3Vector3.h <99:4 <99:4 99:9> 99:9>]
SYMBOL_METHOD: public void b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::~() [b3Vector3.h <99:4 <99:4 99:9> 99:9>]
SYMBOL_METHOD: public void b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::(const b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>) &) [b3Vector3.h <99:4 <99:4 99:9> 99:9>]
SYMBOL_METHOD: public void b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::(b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>) &&) [b3Vector3.h <99:4 <99:4 99:9> 99:9>]
SYMBOL_METHOD: public b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>) & b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::operator=(const b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>) &) [b3Vector3.h <99:4 <99:4 99:9> 99:9>]
SYMBOL_METHOD: public b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>) & b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::operator=(b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>) &&) [b3Vector3.h <99:4 <99:4 99:9> 99:9>]
SYMBOL_FIELD: public b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>) b3Vector3::anonymous union (b3Vector3.h<96:9>):: [b3Vector3.h <99:4 99:9>]
SYMBOL_METHOD: public void b3Vector3::anonymous union (b3Vector3.h<96:9>)::(const b3Vector3::anonymous union (b3Vector3.h<96:9>) &) [b3Vector3.h <96:9 <96:9 96:13> 96:13>]
SYMBOL_METHOD: public void b3Vector3::anonymous union (b3Vector3.h<96:9>)::(b3Vector3::anonymous union (b3Vector3.h<96:9>) &&) [b3Vector3.h <96:9 <96:9 96:13> 96:13>]
SYMBOL_METHOD: public void b3Vector3::anonymous union (b3Vector3.h<96:9>)::~() [b3Vector3.h <96:9 <96:9 96:13> 96:13>]
SYMBOL_METHOD: public void b3Vector3::anonymous union (b3Vector3.h<96:9>)::() [b3Vector3.h <96:9 <96:9 96:13> 96:13>]
SYMBOL_METHOD: public b3Vector3::anonymous union (b3Vector3.h<96:9>) & b3Vector3::anonymous union (b3Vector3.h<96:9>)::operator=(const b3Vector3::anonymous union (b3Vector3.h<96:9>) &) [b3Vector3.h <96:9 <96:9 96:13> 96:13>]
SYMBOL_METHOD: public b3Vector3::anonymous union (b3Vector3.h<96:9>) & b3Vector3::anonymous union (b3Vector3.h<96:9>)::operator=(b3Vector3::anonymous union (b3Vector3.h<96:9>) &&) [b3Vector3.h <96:9 <96:9 96:13> 96:13>]
SYMBOL_FIELD: public b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <96:9 96:13>]
SYMBOL_METHOD: public static void * b3Vector3::operator new(size_t) [b3Vector3.h <113:2 <113:2 113:29> 113:29>]
SYMBOL_METHOD: public static void b3Vector3::operator delete(void *) [b3Vector3.h <113:2 <113:2 113:29> 113:29>]
SYMBOL_METHOD: public static void * b3Vector3::operator new(size_t, void *) [b3Vector3.h <113:2 <113:2 113:29> 113:29>]
SYMBOL_METHOD: public static void b3Vector3::operator delete(void *, void *) [b3Vector3.h <113:2 <113:2 113:29> 113:29>]
SYMBOL_METHOD: public static void * b3Vector3::operator new[](size_t) [b3Vector3.h <113:2 <113:2 113:29> 113:29>]
SYMBOL_METHOD: public static void b3Vector3::operator delete[](void *) [b3Vector3.h <113:2 <113:2 113:29> 113:29>]
SYMBOL_METHOD: public static void * b3Vector3::operator new[](size_t, void *) [b3Vector3.h <113:2 <113:2 113:29> 113:29>]
SYMBOL_METHOD: public static void b3Vector3::operator delete[](void *, void *) [b3Vector3.h <113:2 <113:2 113:29> 113:29>]
SYMBOL_METHOD: public b3SimdFloat4 b3Vector3::get128() const [b3Vector3.h <122:5 <122:5 <122:34 122:39> 122:47> 125:5>]
SYMBOL_FUNCTION: void __m128::__m128(const __m128 &)
SYMBOL_METHOD: public void b3Vector3::set128(b3SimdFloat4) [b3Vector3.h <126:5 <126:5 <126:26 126:31> 126:50> 129:5>]
SYMBOL_FUNCTION: __m128 & __m128::operator=(const __m128 &)
SYMBOL_METHOD: public b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) [b3Vector3.h <138:2 <138:2 <138:29 138:38> 138:58> 150:2>]
SYMBOL_METHOD: public b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) [b3Vector3.h <155:2 <155:2 <155:29 155:38> 155:58> 167:2>]
SYMBOL_METHOD: public b3Vector3 & b3Vector3::operator*=(const b3Scalar &) [b3Vector3.h <171:2 <171:2 <171:29 171:38> 171:57> 185:2>]
SYMBOL_METHOD: public b3Vector3 & b3Vector3::operator/=(const b3Scalar &) [b3Vector3.h <189:2 <189:2 <189:29 189:38> 189:57> 205:2>]
SYMBOL_METHOD: public b3Scalar b3Vector3::dot(const b3Vector3 &) const [b3Vector3.h <209:2 <209:2 <209:27 209:29> 209:55> 228:2>]
SYMBOL_METHOD: public b3Scalar b3Vector3::length2() const [b3Vector3.h <231:2 <231:2 <231:27 231:33> 231:41> 234:2>]
SYMBOL_METHOD: public b3Scalar b3Vector3::length() const [b3Vector3.h <237:2 <237:2 <237:27 237:32> 237:40> 240:2>]
SYMBOL_METHOD: public b3Scalar b3Vector3::distance2(const b3Vector3 &) const [b3Vector3.h <244:2 <244:27 244:35> 244:61>]
SYMBOL_METHOD: public b3Scalar b3Vector3::distance2(const b3Vector3 &) const [b3Vector3.h <902:1 <902:37 902:45> 905:1>]
SYMBOL_METHOD: public b3Scalar b3Vector3::distance(const b3Vector3 &) const [b3Vector3.h <248:2 <248:27 248:34> 248:60>]
SYMBOL_METHOD: public b3Scalar b3Vector3::distance(const b3Vector3 &) const [b3Vector3.h <907:1 <907:37 907:44> 910:1>]
SYMBOL_METHOD: public b3Vector3 & b3Vector3::safeNormalize() [b3Vector3.h <250:2 <250:2 <250:29 250:41> 250:43> 263:2>]
SYMBOL_METHOD: public void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) [b3Vector3.h <601:2 <601:2 <601:24 601:31> 601:91> 607:2>]
SYMBOL_METHOD: public b3Vector3 & b3Vector3::normalize() [b3Vector3.h <267:2 <267:2 <267:29 267:37> 267:39> 307:2>]
SYMBOL_METHOD: public b3Vector3 b3Vector3::normalized() const [b3Vector3.h <310:2 <310:28 310:37> 310:45>]
SYMBOL_METHOD: public b3Vector3 b3Vector3::normalized() const [b3Vector3.h <912:1 <912:38 912:47> 921:1>]
SYMBOL_METHOD: public b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const [b3Vector3.h <315:2 <315:28 315:33> 315:87>]
SYMBOL_METHOD: public b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const [b3Vector3.h <923:1 <923:38 923:43> 963:1>]
SYMBOL_METHOD: public b3Scalar b3Vector3::angle(const b3Vector3 &) const [b3Vector3.h <319:2 <319:2 <319:27 319:31> 319:57> 324:2>]
SYMBOL_METHOD: public b3Vector3 b3Vector3::absolute() const [b3Vector3.h <327:2 <327:2 <327:28 327:35> 327:43> 339:2>]
SYMBOL_METHOD: public b3Vector3 b3Vector3::cross(const b3Vector3 &) const [b3Vector3.h <343:2 <343:2 <343:28 343:32> 343:58> 380:2>]
SYMBOL_METHOD: public b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const [b3Vector3.h <382:2 <382:2 <382:27 382:32> 382:80> 430:2>]
SYMBOL_METHOD: public int b3Vector3::minAxis() const [b3Vector3.h <434:2 <434:2 <434:22 434:28> 434:36> 437:2>]
SYMBOL_METHOD: public int b3Vector3::maxAxis() const [b3Vector3.h <441:2 <441:2 <441:22 441:28> 441:36> 444:2>]
SYMBOL_METHOD: public int b3Vector3::furthestAxis() const [b3Vector3.h <446:2 <446:2 <446:22 446:33> 446:41> 449:2>]
SYMBOL_METHOD: public int b3Vector3::closestAxis() const [b3Vector3.h <451:2 <451:2 <451:22 451:32> 451:40> 454:2>]
SYMBOL_METHOD: public void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) [b3Vector3.h <457:2 <457:2 <457:23 457:37> 457:92> 481:2>]
SYMBOL_METHOD: public b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const [b3Vector3.h <486:2 <486:2 <486:28 486:31> 486:76> 508:2>]
SYMBOL_METHOD: public b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) [b3Vector3.h <512:2 <512:2 <512:29 512:38> 512:58> 524:2>]
SYMBOL_METHOD: public const b3Scalar & b3Vector3::getX() const [b3Vector3.h <527:3 <527:3 <527:35 527:38> 527:46> 527:70>]
SYMBOL_METHOD: public const b3Scalar & b3Vector3::getY() const [b3Vector3.h <529:3 <529:3 <529:35 529:38> 529:46> 529:70>]
SYMBOL_METHOD: public const b3Scalar & b3Vector3::getZ() const [b3Vector3.h <531:3 <531:3 <531:35 531:38> 531:46> 531:70>]
SYMBOL_METHOD: public const b3Scalar & b3Vector3::getW() const [b3Vector3.h <533:3 <533:3 <533:35 533:38> 533:46> 533:70>]
SYMBOL_METHOD: public void b3Vector3::setX(b3Scalar) [b3Vector3.h <536:3 <536:3 <536:24 536:27> 536:40> 536:61>]
SYMBOL_METHOD: public void b3Vector3::setY(b3Scalar) [b3Vector3.h <538:3 <538:3 <538:24 538:27> 538:40> 538:61>]
SYMBOL_METHOD: public void b3Vector3::setZ(b3Scalar) [b3Vector3.h <540:3 <540:3 <540:24 540:27> 540:40> 540:61>]
SYMBOL_METHOD: public void b3Vector3::setW(b3Scalar) [b3Vector3.h <542:3 <542:3 <542:24 542:27> 542:40> 542:61>]
SYMBOL_METHOD: public b3Scalar * b3Vector3::operator float *() [b3Vector3.h <547:2 <547:2 <547:18 547:42> 547:44> 547:75>]
SYMBOL_METHOD: public const b3Scalar * b3Vector3::operator const float *() const [b3Vector3.h <548:2 <548:2 <548:18 548:42> 548:50> 548:75>]
SYMBOL_METHOD: public bool b3Vector3::operator==(const b3Vector3 &) const [b3Vector3.h <550:2 <550:2 <550:23 550:32> 550:62> 560:2>]
SYMBOL_METHOD: public bool b3Vector3::operator!=(const b3Vector3 &) const [b3Vector3.h <562:2 <562:2 <562:23 562:32> 562:62> 565:2>]
SYMBOL_METHOD: public void b3Vector3::setMax(const b3Vector3 &) [b3Vector3.h <570:2 <570:2 <570:23 570:28> 570:52> 582:2>]
SYMBOL_METHOD: public void b3Vector3::setMin(const b3Vector3 &) [b3Vector3.h <587:2 <587:2 <587:23 587:28> 587:52> 599:2>]
SYMBOL_METHOD: public void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const [b3Vector3.h <609:2 <609:2 <609:7 609:28> 609:77> 630:2>]
SYMBOL_METHOD: public void b3Vector3::setZero() [b3Vector3.h <632:2 <632:2 <632:7 632:13> 632:15> 642:2>]
SYMBOL_METHOD: public bool b3Vector3::isZero() const [b3Vector3.h <644:2 <644:2 <644:23 644:28> 644:36> 647:2>]
SYMBOL_METHOD: public bool b3Vector3::fuzzyZero() const [b3Vector3.h <649:2 <649:2 <649:23 649:31> 649:39> 652:2>]
SYMBOL_STRUCT: b3Vector3FloatData [b3Vector3.h <654:40 654:52>]
SYMBOL_STRUCT: b3Vector3FloatData [b3Vector3.h <1249:1 <1249:8 1249:25> 1252:1>]
SYMBOL_METHOD: public void b3Vector3::serialize(b3Vector3FloatData &) const [b3Vector3.h <654:2 <654:23 654:31> 654:68>]
SYMBOL_METHOD: public void b3Vector3::serialize(b3Vector3FloatData &) const [b3Vector3.h <1288:1 <1288:33 1288:41> 1293:1>]
SYMBOL_METHOD: public void b3Vector3::deSerialize(const b3Vector3FloatData &) [b3Vector3.h <656:2 <656:23 656:33> 656:69>]
SYMBOL_METHOD: public void b3Vector3::deSerialize(const b3Vector3FloatData &) [b3Vector3.h <1295:1 <1295:33 1295:43> 1299:1>]
SYMBOL_METHOD: public void b3Vector3::serializeFloat(b3Vector3FloatData &) const [b3Vector3.h <658:2 <658:23 658:36> 658:78>]
SYMBOL_METHOD: public void b3Vector3::serializeFloat(b3Vector3FloatData &) const [b3Vector3.h <1260:1 <1260:33 1260:46> 1265:1>]
SYMBOL_METHOD: public void b3Vector3::deSerializeFloat(const b3Vector3FloatData &) [b3Vector3.h <660:2 <660:23 660:38> 660:79>]
SYMBOL_METHOD: public void b3Vector3::deSerializeFloat(const b3Vector3FloatData &) [b3Vector3.h <1267:1 <1267:33 1267:48> 1271:1>]
SYMBOL_STRUCT: b3Vector3DoubleData [b3Vector3.h <662:46 662:64>]
SYMBOL_STRUCT: b3Vector3DoubleData [b3Vector3.h <1254:1 <1254:8 1254:26> 1258:1>]
SYMBOL_METHOD: public void b3Vector3::serializeDouble(b3Vector3DoubleData &) const [b3Vector3.h <662:2 <662:23 662:37> 662:80>]
SYMBOL_METHOD: public void b3Vector3::serializeDouble(b3Vector3DoubleData &) const [b3Vector3.h <1274:1 <1274:33 1274:47> 1279:1>]
SYMBOL_METHOD: public void b3Vector3::deSerializeDouble(const b3Vector3DoubleData &) [b3Vector3.h <664:2 <664:23 664:39> 664:81>]
SYMBOL_METHOD: public void b3Vector3::deSerializeDouble(const b3Vector3DoubleData &) [b3Vector3.h <1281:1 <1281:33 1281:49> 1285:1>]
SYMBOL_METHOD: public long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const [b3Vector3.h <670:9 <670:35 670:40> 670:108>]
SYMBOL_METHOD: public long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const [b3Vector3.h <965:1 <965:38 965:43> 1005:1>]
SYMBOL_METHOD: public long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const [b3Vector3.h <676:9 <676:35 676:40> 676:108>]
SYMBOL_METHOD: public long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const [b3Vector3.h <1007:1 <1007:38 1007:43> 1045:1>]
SYMBOL_METHOD: public b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const [b3Vector3.h <679:5 <679:5 <679:32 679:35> 679:106> 708:5>]
SYMBOL_METHOD: public void b3Vector3::b3Vector3() [b3Vector3.h <92:31 <92:31 92:39> 92:39>]
SYMBOL_METHOD: public void b3Vector3::b3Vector3(const b3Vector3 &) [b3Vector3.h <92:31 <92:31 92:39> 92:39>]
SYMBOL_METHOD: public void b3Vector3::b3Vector3(b3Vector3 &&) [b3Vector3.h <92:31 <92:31 92:39> 92:39>]
SYMBOL_METHOD: public void b3Vector3::~b3Vector3() [b3Vector3.h <92:31 <92:31 92:39> 92:39>]
SYMBOL_METHOD: public b3Vector3 & b3Vector3::operator=(const b3Vector3 &) [b3Vector3.h <92:31 <92:31 92:39> 92:39>]
SYMBOL_METHOD: public b3Vector3 & b3Vector3::operator=(b3Vector3 &&) [b3Vector3.h <92:31 <92:31 92:39> 92:39>]
SYMBOL_FUNCTION: b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <712:1 <712:1 <713:1 713:9> 713:51> 725:1>]
SYMBOL_FUNCTION: b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <728:1 <728:1 <729:1 729:9> 729:51> 741:1>]
SYMBOL_FUNCTION: b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <744:1 <744:1 <745:1 745:9> 745:51> 761:1>]
SYMBOL_FUNCTION: b3Vector3 operator-(const b3Vector3 &) [b3Vector3.h <764:1 <764:1 <765:1 765:9> 765:29> 775:1>]
SYMBOL_FUNCTION: b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) [b3Vector3.h <778:1 <778:1 <779:1 779:9> 779:48> 791:1>]
SYMBOL_FUNCTION: b3Vector3 operator*(const b3Scalar &, const b3Vector3 &) [b3Vector3.h <794:1 <794:1 <795:1 795:9> 795:48> 798:1>]
SYMBOL_FUNCTION: b3Vector3 operator/(const b3Vector3 &, const b3Scalar &) [b3Vector3.h <801:1 <801:1 <802:1 802:9> 802:48> 815:1>]
SYMBOL_FUNCTION: b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <818:1 <818:1 <819:1 819:9> 819:51> 845:1>]
SYMBOL_FUNCTION: b3Scalar b3Dot(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <848:1 <848:1 <849:1 849:5> 849:47> 852:1>]
SYMBOL_FUNCTION: b3Scalar b3Distance2(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <856:1 <856:1 <857:1 857:11> 857:53> 860:1>]
SYMBOL_FUNCTION: b3Scalar b3Distance(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <864:1 <864:1 <865:1 865:10> 865:52> 868:1>]
SYMBOL_FUNCTION: b3Scalar b3Angle(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <871:1 <871:1 <872:1 872:7> 872:49> 875:1>]
SYMBOL_FUNCTION: b3Vector3 b3Cross(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <878:1 <878:1 <879:1 879:7> 879:49> 882:1>]
SYMBOL_FUNCTION: b3Scalar b3Triple(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <884:1 <884:1 <885:1 885:8> 885:71> 888:1>]
SYMBOL_FUNCTION: b3Vector3 b3Lerp(const b3Vector3 &, const b3Vector3 &, const b3Scalar &) [b3Vector3.h <894:1 <894:1 <895:1 895:6> 895:67> 898:1>]
SYMBOL_FUNCTION: long b3_maxdot_large(const float *, const float *, unsigned long, float *) [b3Vector3.h <970:9 <970:14 970:28> 970:110>]
SYMBOL_BUILTIN_TYPE: unsigned long
SYMBOL_FUNCTION: long b3_mindot_large(const float *, const float *, unsigned long, float *) [b3Vector3.h <1012:9 <1012:14 1012:28> 1012:110>]
SYMBOL_METHOD: public b3Vector4 b3Vector4::absolute4() const [b3Vector3.h <1057:2 <1057:2 <1057:28 1057:36> 1057:44> 1070:2>]
SYMBOL_METHOD: public b3Scalar b3Vector4::getW() const [b3Vector3.h <1073:2 <1073:2 <1073:11 1073:14> 1073:22> 1073:45>]
SYMBOL_METHOD: public int b3Vector4::maxAxis4() const [b3Vector3.h <1076:3 <1076:3 <1076:23 1076:30> 1076:38> 1102:2>]
SYMBOL_METHOD: public int b3Vector4::minAxis4() const [b3Vector3.h <1105:2 <1105:2 <1105:22 1105:29> 1105:37> 1131:2>]
SYMBOL_METHOD: public int b3Vector4::closestAxis4() const [b3Vector3.h <1134:2 <1134:2 <1134:22 1134:33> 1134:41> 1137:2>]
SYMBOL_METHOD: public void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) [b3Vector3.h <1162:3 <1162:3 <1162:24 1162:31> 1162:110> 1168:3>]
SYMBOL_METHOD: public void b3Vector4::~b3Vector4() [b3Vector3.h <1048:7 <1048:7 1048:15> 1048:15>]
SYMBOL_METHOD: public void b3Vector4::b3Vector4() [b3Vector3.h <1048:7 <1048:7 1048:15> 1048:15>]
SYMBOL_METHOD: public void b3Vector4::b3Vector4(const b3Vector4 &) [b3Vector3.h <1048:7 <1048:7 1048:15> 1048:15>]
SYMBOL_METHOD: public void b3Vector4::b3Vector4(b3Vector4 &&) [b3Vector3.h <1048:7 <1048:7 1048:15> 1048:15>]
SYMBOL_FUNCTION: void b3SwapScalarEndian(const b3Scalar &, b3Scalar &) [b3Vector3.h <1175:1 <1175:1 <1175:22 1175:39> 1175:85> 1196:1>]
SYMBOL_FUNCTION: void b3SwapVector3Endian(const b3Vector3 &, b3Vector3 &) [b3Vector3.h <1198:1 <1198:1 <1198:22 1198:40> 1198:88> 1205:1>]
SYMBOL_FUNCTION: void b3UnSwapVector3Endian(b3Vector3 &) [b3Vector3.h <1208:1 <1208:1 <1208:22 1208:42> 1208:61> 1217:1>]
SYMBOL_FUNCTION: void b3PlaneSpace1<class T>(const T &, T &, T &) [b3Vector3.h <1219:1 <1220:1 <1220:22 1220:34> 1220:59> 1246:1>]
SYMBOL_FIELD: public float [] b3Vector3FloatData::m_floats [b3Vector3.h <1251:8 1251:15>]
SYMBOL_FIELD: public double [] b3Vector3DoubleData::m_floats [b3Vector3.h <1256:9 1256:16>]
SYMBOL_CLASS: b3AlignedObjectArray<typename T> [b3AlignedObjectArray.h <45:1 <47:7 47:26> 531:1>]
SYMBOL_FIELD: private b3AlignedAllocator<b3AlignedObjectArray<typename T>::T, 16> b3AlignedObjectArray<typename T>::m_allocator [b3AlignedObjectArray.h <49:29 49:39>]
SYMBOL_FUNCTION: private int b3AlignedObjectArray<typename T>::m_size [b3AlignedObjectArray.h <51:10 51:15>]
SYMBOL_FIELD: private int b3AlignedObjectArray<typename T>::m_capacity [b3AlignedObjectArray.h <52:10 52:19>]
SYMBOL_FUNCTION: private b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <53:9 53:14>]
SYMBOL_FIELD: private bool b3AlignedObjectArray<typename T>::m_ownsMemory [b3AlignedObjectArray.h <55:10 55:21>]
SYMBOL_METHOD: public b3AlignedObjectArray<T> & b3AlignedObjectArray<typename T>::operator=(const b3AlignedObjectArray<T> &) [b3AlignedObjectArray.h <59:2 <59:2 <59:43 59:51> 59:89> 63:2>]
SYMBOL_METHOD: public void b3AlignedObjectArray<typename T>::copyFromArray(const b3AlignedObjectArray<T> &) [b3AlignedObjectArray.h <524:2 <524:2 <524:7 524:19> 524:59> 529:2>]
SYMBOL_METHOD: protected int b3AlignedObjectArray<typename T>::allocSize(int) [b3AlignedObjectArray.h <70:3 <70:3 <70:23 70:31> 70:41> 73:3>]
SYMBOL_METHOD: protected void b3AlignedObjectArray<typename T>::copy(int, int, b3AlignedObjectArray<typename T>::T *) const [b3AlignedObjectArray.h <74:3 <74:3 <74:24 74:27> 74:61> 83:3>]
SYMBOL_METHOD: protected void b3AlignedObjectArray<typename T>::init() [b3AlignedObjectArray.h <85:3 <85:3 <85:24 85:27> 85:29> 92:3>]
SYMBOL_METHOD: protected void b3AlignedObjectArray<typename T>::destroy(int, int) [b3AlignedObjectArray.h <93:3 <93:3 <93:24 93:30> 93:50> 100:3>]
SYMBOL_METHOD: protected void * b3AlignedObjectArray<typename T>::allocate(int) [b3AlignedObjectArray.h <102:3 <102:3 <102:25 102:32> 102:42> 107:3>]
SYMBOL_METHOD: protected void b3AlignedObjectArray<typename T>::deallocate() [b3AlignedObjectArray.h <109:3 <109:3 <109:24 109:33> 109:35> 119:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<typename T>::b3AlignedObjectArray<T>() [b3AlignedObjectArray.h <126:3 <126:3 <126:3 126:22> 126:24> 129:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<typename T>::~b3AlignedObjectArray<T>() [b3AlignedObjectArray.h <131:3 <131:3 <131:3 131:23> 131:25> 134:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<typename T>::clear() [b3AlignedObjectArray.h <184:3 <184:3 <184:24 184:28> 184:30> 191:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<typename T>::b3AlignedObjectArray<T>(const b3AlignedObjectArray<T> &) [b3AlignedObjectArray.h <137:3 <137:3 <137:3 137:22> 137:62> 144:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<typename T>::resize(int, const b3AlignedObjectArray<typename T>::T &) [b3AlignedObjectArray.h <220:3 <220:3 <220:24 220:29> 220:65> 246:3>]
SYMBOL_METHOD: public int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <149:3 <149:3 <149:23 149:26> 149:34> 152:3>]
SYMBOL_METHOD: public const b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::at(int) const [b3AlignedObjectArray.h <154:3 <154:3 <154:28 154:29> 154:42> 159:3>]
SYMBOL_METHOD: public b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::at(int) [b3AlignedObjectArray.h <161:3 <161:3 <161:22 161:23> 161:30> 166:3>]
SYMBOL_METHOD: public const b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::operator[](int) const [b3AlignedObjectArray.h <168:3 <168:3 <168:28 168:37> 168:50> 173:3>]
SYMBOL_METHOD: public b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::operator[](int) [b3AlignedObjectArray.h <175:3 <175:3 <175:22 175:31> 175:38> 180:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<typename T>::pop_back() [b3AlignedObjectArray.h <193:3 <193:3 <193:24 193:31> 193:33> 198:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<typename T>::resizeNoInitialize(int) [b3AlignedObjectArray.h <203:3 <203:3 <203:24 203:41> 203:54> 218:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<typename T>::reserve(int) [b3AlignedObjectArray.h <300:3 <300:3 <300:24 300:30> 300:42> 326:3>]
SYMBOL_METHOD: public b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::expandNonInitializing() [b3AlignedObjectArray.h <247:3 <247:3 <247:23 247:43> 247:46> 257:3>]
SYMBOL_METHOD: public int b3AlignedObjectArray<typename T>::capacity() const [b3AlignedObjectArray.h <295:3 <295:3 <295:23 295:30> 295:38> 298:3>]
SYMBOL_METHOD: public b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::expand(const b3AlignedObjectArray<typename T>::T &) [b3AlignedObjectArray.h <260:3 <260:3 <260:23 260:28> 260:53> 273:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<typename T>::push_back(const b3AlignedObjectArray<typename T>::T &) [b3AlignedObjectArray.h <276:3 <276:3 <276:24 276:32> 276:47> 291:3>]
SYMBOL_CLASS: public b3AlignedObjectArray<typename T>::less [b3AlignedObjectArray.h <329:3 <329:9 329:12> 337:3>]
SYMBOL_METHOD: public bool b3AlignedObjectArray<typename T>::less::operator()(const b3AlignedObjectArray<typename T>::T &, const b3AlignedObjectArray<typename T>::T &) [b3AlignedObjectArray.h <333:5 <333:5 <333:10 333:19> 333:46> 336:5>]
SYMBOL_METHOD: public void b3AlignedObjectArray<typename T>::quickSortInternal<typename L>(const L &, int, int) [b3AlignedObjectArray.h <340:3 <341:3 <341:8 341:24> 341:61> 367:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<typename T>::swap(int, int) [b3AlignedObjectArray.h <413:3 <413:3 <413:8 413:11> 413:34> 426:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<typename T>::quickSort<typename L>(const L &) [b3AlignedObjectArray.h <370:3 <371:3 <371:8 371:16> 371:38> 378:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<typename T>::downHeap<typename L>(b3AlignedObjectArray<typename T>::T *, int, int, const L &) [b3AlignedObjectArray.h <382:3 <383:3 <383:8 383:15> 383:60> 411:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<typename T>::heapSort<typename L>(const L &) [b3AlignedObjectArray.h <428:2 <429:2 <429:7 429:14> 429:36> 449:2>]
SYMBOL_METHOD: public int b3AlignedObjectArray<typename T>::findBinarySearch(const b3AlignedObjectArray<typename T>::T &) const [b3AlignedObjectArray.h <452:2 <452:2 <452:6 452:21> 452:41> 468:2>]
SYMBOL_METHOD: public int b3AlignedObjectArray<typename T>::findLinearSearch(const b3AlignedObjectArray<typename T>::T &) const [b3AlignedObjectArray.h <471:2 <471:2 <471:6 471:21> 471:41> 485:2>]
SYMBOL_METHOD: public int b3AlignedObjectArray<typename T>::findLinearSearch2(const b3AlignedObjectArray<typename T>::T &) const [b3AlignedObjectArray.h <487:5 <487:5 <487:9 487:25> 487:45> 501:5>]
SYMBOL_METHOD: public void b3AlignedObjectArray<typename T>::remove(const b3AlignedObjectArray<typename T>::T &) [b3AlignedObjectArray.h <503:2 <503:2 <503:7 503:12> 503:26> 512:2>]
SYMBOL_METHOD: public void b3AlignedObjectArray<typename T>::initializeFromBuffer(void *, int, int) [b3AlignedObjectArray.h <515:2 <515:2 <515:7 515:26> 515:64> 522:2>]
SYMBOL_CLASS: b3AlignedObjectArray<b3Vector3> [b3AlignedObjectArray.h <45:1 <47:7 47:26> 531:1>]
SYMBOL_FIELD: private b3AlignedAllocator<b3Vector3, 16> b3AlignedObjectArray<b3Vector3>::m_allocator [b3AlignedObjectArray.h <49:29 49:39>]
SYMBOL_FIELD: private int b3AlignedObjectArray<b3Vector3>::m_size [b3AlignedObjectArray.h <51:10 51:15>]
SYMBOL_FIELD: private int b3AlignedObjectArray<b3Vector3>::m_capacity [b3AlignedObjectArray.h <52:10 52:19>]
SYMBOL_FIELD: private b3Vector3 * b3AlignedObjectArray<b3Vector3>::m_data [b3AlignedObjectArray.h <53:9 53:14>]
SYMBOL_FIELD: private bool b3AlignedObjectArray<b3Vector3>::m_ownsMemory [b3AlignedObjectArray.h <55:10 55:21>]
SYMBOL_METHOD: public b3AlignedObjectArray<b3Vector3> & b3AlignedObjectArray<b3Vector3>::operator=(const b3AlignedObjectArray<b3Vector3> &) [b3AlignedObjectArray.h <59:2 <59:43 59:51> 63:2>]
SYMBOL_METHOD: protected int b3AlignedObjectArray<b3Vector3>::allocSize(int) [b3AlignedObjectArray.h <70:3 <70:3 <70:23 70:31> 70:41> 73:3>]
SYMBOL_METHOD: protected void b3AlignedObjectArray<b3Vector3>::copy(int, int, b3Vector3 *) const [b3AlignedObjectArray.h <74:3 <74:3 <74:24 74:27> 74:61> 83:3>]
SYMBOL_METHOD: protected void b3AlignedObjectArray<b3Vector3>::init() [b3AlignedObjectArray.h <85:3 <85:24 85:27> 92:3>]
SYMBOL_METHOD: protected void b3AlignedObjectArray<b3Vector3>::destroy(int, int) [b3AlignedObjectArray.h <93:3 <93:3 <93:24 93:30> 93:50> 100:3>]
SYMBOL_METHOD: protected void * b3AlignedObjectArray<b3Vector3>::allocate(int) [b3AlignedObjectArray.h <102:3 <102:3 <102:25 102:32> 102:42> 107:3>]
SYMBOL_METHOD: protected void b3AlignedObjectArray<b3Vector3>::deallocate() [b3AlignedObjectArray.h <109:3 <109:3 <109:24 109:33> 109:35> 119:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<b3Vector3>::b3AlignedObjectArray() [b3AlignedObjectArray.h <126:3 <126:3 126:22> 129:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<b3Vector3>::~b3AlignedObjectArray() [b3AlignedObjectArray.h <131:3 <131:3 131:23> 134:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<b3Vector3>::b3AlignedObjectArray(const b3AlignedObjectArray<b3Vector3> &) [b3AlignedObjectArray.h <137:3 <137:3 137:22> 144:3>]
SYMBOL_METHOD: public int b3AlignedObjectArray<b3Vector3>::size() const [b3AlignedObjectArray.h <149:3 <149:3 <149:23 149:26> 149:34> 152:3>]
SYMBOL_METHOD: public const b3Vector3 & b3AlignedObjectArray<b3Vector3>::at(int) const [b3AlignedObjectArray.h <154:3 <154:28 154:29> 159:3>]
SYMBOL_METHOD: public b3Vector3 & b3AlignedObjectArray<b3Vector3>::at(int) [b3AlignedObjectArray.h <161:3 <161:22 161:23> 166:3>]
SYMBOL_METHOD: public const b3Vector3 & b3AlignedObjectArray<b3Vector3>::operator[](int) const [b3AlignedObjectArray.h <168:3 <168:3 <168:28 168:37> 168:50> 173:3>]
SYMBOL_METHOD: public b3Vector3 & b3AlignedObjectArray<b3Vector3>::operator[](int) [b3AlignedObjectArray.h <175:3 <175:3 <175:22 175:31> 175:38> 180:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<b3Vector3>::clear() [b3AlignedObjectArray.h <184:3 <184:24 184:28> 191:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<b3Vector3>::pop_back() [b3AlignedObjectArray.h <193:3 <193:24 193:31> 198:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<b3Vector3>::resizeNoInitialize(int) [b3AlignedObjectArray.h <203:3 <203:24 203:41> 218:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<b3Vector3>::resize(int, const b3Vector3 &) [b3AlignedObjectArray.h <220:3 <220:24 220:29> 246:3>]
SYMBOL_METHOD: public b3Vector3 & b3AlignedObjectArray<b3Vector3>::expandNonInitializing() [b3AlignedObjectArray.h <247:3 <247:23 247:43> 257:3>]
SYMBOL_METHOD: public b3Vector3 & b3AlignedObjectArray<b3Vector3>::expand(const b3Vector3 &) [b3AlignedObjectArray.h <260:3 <260:23 260:28> 273:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<b3Vector3>::push_back(const b3Vector3 &) [b3AlignedObjectArray.h <276:3 <276:3 <276:24 276:32> 276:47> 291:3>]
SYMBOL_METHOD: public int b3AlignedObjectArray<b3Vector3>::capacity() const [b3AlignedObjectArray.h <295:3 <295:3 <295:23 295:30> 295:38> 298:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<b3Vector3>::reserve(int) [b3AlignedObjectArray.h <300:3 <300:3 <300:24 300:30> 300:42> 326:3>]
SYMBOL_CLASS: public b3AlignedObjectArray<b3Vector3>::less [b3AlignedObjectArray.h <329:9 329:12>]
SYMBOL_METHOD: public void b3AlignedObjectArray<b3Vector3>::quickSortInternal<typename L>(const L &, int, int) [b3AlignedObjectArray.h <341:3 <341:8 341:24> 367:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<b3Vector3>::quickSort<typename L>(const L &) [b3AlignedObjectArray.h <371:3 <371:8 371:16> 378:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<b3Vector3>::downHeap<typename L>(b3Vector3 *, int, int, const L &) [b3AlignedObjectArray.h <383:3 <383:8 383:15> 411:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<b3Vector3>::swap(int, int) [b3AlignedObjectArray.h <413:3 <413:8 413:11> 426:3>]
SYMBOL_METHOD: public void b3AlignedObjectArray<b3Vector3>::heapSort<typename L>(const L &) [b3AlignedObjectArray.h <429:2 <429:7 429:14> 449:2>]
SYMBOL_METHOD: public int b3AlignedObjectArray<b3Vector3>::findBinarySearch(const b3Vector3 &) const [b3AlignedObjectArray.h <452:2 <452:6 452:21> 468:2>]
SYMBOL_METHOD: public int b3AlignedObjectArray<b3Vector3>::findLinearSearch(const b3Vector3 &) const [b3AlignedObjectArray.h <471:2 <471:6 471:21> 485:2>]
SYMBOL_METHOD: public int b3AlignedObjectArray<b3Vector3>::findLinearSearch2(const b3Vector3 &) const [b3AlignedObjectArray.h <487:5 <487:9 487:25> 501:5>]
SYMBOL_METHOD: public void b3AlignedObjectArray<b3Vector3>::remove(const b3Vector3 &) [b3AlignedObjectArray.h <503:2 <503:7 503:12> 512:2>]
SYMBOL_METHOD: public void b3AlignedObjectArray<b3Vector3>::initializeFromBuffer(void *, int, int) [b3AlignedObjectArray.h <515:2 <515:7 515:26> 522:2>]
SYMBOL_METHOD: public void b3AlignedObjectArray<b3Vector3>::copyFromArray(const b3AlignedObjectArray<b3Vector3> &) [b3AlignedObjectArray.h <524:2 <524:7 524:19> 529:2>]
QUALIFIER: b3GeometryUtil [b3GeometryUtil.cpp <33:6 33:19>]
QUALIFIER: b3GeometryUtil [b3GeometryUtil.cpp <50:6 50:19>]
QUALIFIER: b3GeometryUtil [b3GeometryUtil.cpp <81:6 81:19>]
QUALIFIER: b3GeometryUtil [b3GeometryUtil.cpp <129:6 129:19>]
SYMBOL_CLASS: b3GeometryUtil [b3GeometryUtil.h <23:1 <23:7 23:20> 38:1>]
SYMBOL_METHOD: public static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) [b3GeometryUtil.cpp <81:1 <81:22 81:50> 127:1>]
SYMBOL_METHOD: public static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) [b3GeometryUtil.h <28:3 <28:15 28:43> 28:139>]
SYMBOL_METHOD: public static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) [b3GeometryUtil.cpp <129:1 <129:22 129:50> 184:1>]
SYMBOL_METHOD: public static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) [b3GeometryUtil.h <30:3 <30:15 30:43> 30:146>]
SYMBOL_METHOD: public static bool b3GeometryUtil::isInside(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) [b3GeometryUtil.h <32:3 <32:15 32:22> 32:118>]
SYMBOL_METHOD: public static bool b3GeometryUtil::isPointInsidePlanes(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) [b3GeometryUtil.cpp <33:1 <33:22 33:40> 47:1>]
SYMBOL_METHOD: public static bool b3GeometryUtil::isPointInsidePlanes(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) [b3GeometryUtil.h <33:1 <34:3 <34:15 34:33> 34:129> 47:1>]
SYMBOL_METHOD: public static bool b3GeometryUtil::areVerticesBehindPlane(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &, b3Scalar) [b3GeometryUtil.cpp <50:1 <50:22 50:43> 63:1>]
SYMBOL_METHOD: public static bool b3GeometryUtil::areVerticesBehindPlane(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &, b3Scalar) [b3GeometryUtil.h <36:3 <36:15 36:36> 36:132>]
SYMBOL_FUNCTION: void b3BulletMathProbe() [b3GeometryUtil.cpp <27:2 <27:7 27:23> 27:26>]
SYMBOL_FUNCTION: void b3BulletMathProbe() [b3GeometryUtil.cpp <29:2 <29:7 29:23> 29:29>]
SYMBOL_FUNCTION: bool notExist(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &) [b3GeometryUtil.cpp <65:1 <65:6 65:13> 65:99>]
SYMBOL_FUNCTION: bool notExist(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &) [b3GeometryUtil.cpp <67:1 <67:6 67:13> 79:1>]
REFERENCE_INCLUDE: b3GeometryUtil.cpp -> b3GeometryUtil.h [b3GeometryUtil.cpp <17:10 17:27>]
REFERENCE_MACRO_USAGE: b3GeometryUtil.h -> B3_GEOMETRY_UTIL_H [b3GeometryUtil.h <16:9 16:26>]
REFERENCE_INCLUDE: b3GeometryUtil.h -> b3Vector3.h [b3GeometryUtil.h <19:10 19:36>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_VECTOR3_H [b3Vector3.h <17:9 17:20>]
REFERENCE_INCLUDE: b3Vector3.h -> b3Scalar.h [b3Vector3.h <21:10 21:21>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_SCALAR_H [b3Scalar.h <17:9 17:19>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_MANAGED_CODE [b3Scalar.h <20:8 20:22>]
REFERENCE_INCLUDE: b3Scalar.h -> math.h [b3Scalar.h <27:10 27:17>]
REFERENCE_INCLUDE: math.h -> corecrt.h [math.h <11:10 11:20>]
REFERENCE_INCLUDE: corecrt.h -> vcruntime.h [corecrt.h <10:10 10:22>]
REFERENCE_INCLUDE: vcruntime.h -> sal.h [vcruntime.h <47:10 47:16>]
REFERENCE_INCLUDE: sal.h -> concurrencysal.h [sal.h <2990:10 2990:27>]
REFERENCE_INCLUDE: vcruntime.h -> vadefs.h [vcruntime.h <48:10 48:19>]
REFERENCE_INCLUDE: b3Scalar.h -> stdlib.h [b3Scalar.h <28:10 28:19>]
REFERENCE_INCLUDE: stdlib.h -> corecrt.h [stdlib.h <11:10 11:20>]
REFERENCE_INCLUDE: stdlib.h -> corecrt_malloc.h [stdlib.h <12:10 12:27>]
REFERENCE_INCLUDE: corecrt_malloc.h -> corecrt.h [corecrt_malloc.h <11:10 11:20>]
REFERENCE_INCLUDE: stdlib.h -> corecrt_search.h [stdlib.h <13:10 13:27>]
REFERENCE_INCLUDE: corecrt_search.h -> corecrt.h [corecrt_search.h <13:10 13:20>]
REFERENCE_INCLUDE: corecrt_search.h -> stddef.h [corecrt_search.h <14:10 14:19>]
REFERENCE_INCLUDE: stddef.h -> corecrt.h [stddef.h <11:10 11:20>]
REFERENCE_INCLUDE: stdlib.h -> corecrt_wstdlib.h [stdlib.h <14:10 14:28>]
REFERENCE_INCLUDE: corecrt_wstdlib.h -> corecrt.h [corecrt_wstdlib.h <11:10 11:20>]
REFERENCE_INCLUDE: stdlib.h -> limits.h [stdlib.h <15:10 15:19>]
REFERENCE_INCLUDE: limits.h -> vcruntime.h [limits.h <11:10 11:22>]
REFERENCE_INCLUDE: b3Scalar.h -> float.h [b3Scalar.h <29:10 29:18>]
REFERENCE_INCLUDE: float.h -> corecrt.h [float.h <12:10 12:20>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_BULLET_VERSION [b3Scalar.h <36:9 36:25>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> DEBUG [b3Scalar.h <39:13 39:17>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> _DEBUG [b3Scalar.h <39:32 39:37>]
REFERENCE_INCLUDE: b3Scalar.h -> b3Logging.h [b3Scalar.h <43:10 43:22>]
REFERENCE_MACRO_USAGE: b3Logging.h -> B3_LOGGING_H [b3Logging.h <2:9 2:20>]
REFERENCE_MACRO_USAGE: b3Logging.h -> __cplusplus [b3Logging.h <5:8 5:18>]
REFERENCE_MACRO_USAGE: b3Logging.h -> __cplusplus [b3Logging.h <25:8 25:18>]
REFERENCE_MACRO_USAGE: b3Logging.h -> __cplusplus [b3Logging.h <73:8 73:18>]
REFERENCE_MACRO_USAGE: b3Logging.h -> B3_NO_PROFILE [b3Logging.h <21:9 21:21>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> _WIN32 [b3Scalar.h <46:8 46:13>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> _WIN32 [b3Scalar.h <73:15 73:20>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> __MINGW32__ [b3Scalar.h <48:15 48:25>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> __CYGWIN__ [b3Scalar.h <48:39 48:48>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> _MSC_VER [b3Scalar.h <48:64 48:71>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> _MSC_VER [b3Scalar.h <48:77 48:84>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> _MSC_VER [b3Scalar.h <73:27 73:34>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> _MSC_VER [b3Scalar.h <73:40 73:47>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> _XBOX [b3Scalar.h <65:10 65:14>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_USE_DOUBLE_PRECISION [b3Scalar.h <73:72 73:94>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_USE_DOUBLE_PRECISION [b3Scalar.h <258:13 258:35>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_USE_DOUBLE_PRECISION [b3Scalar.h <343:13 343:35>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_USE_DOUBLE_PRECISION [b3Scalar.h <418:8 418:30>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> _M_IX86 [b3Scalar.h <74:16 74:22>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> _M_X64 [b3Scalar.h <74:37 74:42>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_USE_SSE [b3Scalar.h <76:11 76:20>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_USE_SSE [b3Scalar.h <268:8 268:17>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_USE_SSE [b3Scalar.h <272:43 272:52>]
REFERENCE_INCLUDE: b3Scalar.h -> emmintrin.h [b3Scalar.h <85:13 85:25>]
REFERENCE_INCLUDE: emmintrin.h -> xmmintrin.h [emmintrin.h <42:10 42:22>]
REFERENCE_INCLUDE: xmmintrin.h -> mmintrin.h [xmmintrin.h <46:10 46:21>]
REFERENCE_INCLUDE: xmmintrin.h -> malloc.h [xmmintrin.h <79:10 79:19>]
REFERENCE_INCLUDE: malloc.h -> corecrt.h [malloc.h <11:10 11:20>]
REFERENCE_INCLUDE: malloc.h -> corecrt_malloc.h [malloc.h <12:10 12:27>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_DEBUG [b3Scalar.h <93:8 93:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_USE_SSE_IN_API [b3Scalar.h <272:13 272:29>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_USE_NEON [b3Scalar.h <318:8 318:18>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_DOUBLE_FUNCTIONS [b3Scalar.h <343:49 343:73>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <332:4 332:18>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <333:4 333:18>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <334:4 334:18>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <335:4 335:18>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <336:4 336:18>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <337:4 337:18>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <338:4 338:18>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <339:4 339:18>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <361:1 361:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <381:1 381:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <382:1 382:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <383:1 383:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <384:1 384:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <385:1 385:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <392:1 392:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <399:1 399:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <400:1 400:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <401:1 401:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <402:1 402:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <403:1 403:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <404:1 404:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <426:1 426:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <442:1 442:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <444:1 444:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <447:1 447:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <452:1 452:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <456:1 456:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <457:1 457:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <462:1 462:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <470:1 470:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <484:1 484:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <494:1 494:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <500:1 500:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <509:22 509:36>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <518:1 518:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <523:1 523:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <528:1 528:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <533:1 533:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <544:1 544:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <558:1 558:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <574:1 574:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <590:1 590:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_FORCE_INLINE [b3Scalar.h <608:1 608:15>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> USE_APPROXIMATION [b3Scalar.h <363:8 363:24>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_PI [b3Scalar.h <428:21 428:25>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_PI [b3Scalar.h <611:23 611:27>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_PI [b3Scalar.h <615:27 615:31>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_2_PI [b3Scalar.h <409:26 409:32>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_2_PI [b3Scalar.h <411:26 411:32>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_2_PI [b3Scalar.h <412:45 412:51>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_2_PI [b3Scalar.h <610:42 610:48>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_2_PI [b3Scalar.h <613:27 613:33>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_2_PI [b3Scalar.h <617:27 617:33>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_EPSILON [b3Scalar.h <442:72 442:81>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> FLT_EPSILON [b3Scalar.h <422:25 422:35>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_RADS_PER_DEG [b3Scalar.h <456:61 456:75>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_DEGS_PER_RAD [b3Scalar.h <457:61 457:75>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> b3Fsel [b3Scalar.h <461:9 461:14>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> B3_HAVE_NATIVE_FSEL [b3Scalar.h <502:8 502:26>]
REFERENCE_INCLUDE: b3Vector3.h -> b3MinMax.h [b3Vector3.h <22:10 22:21>]
REFERENCE_MACRO_USAGE: b3MinMax.h -> B3_GEN_MINMAX_H [b3MinMax.h <17:9 17:23>]
REFERENCE_INCLUDE: b3MinMax.h -> b3Scalar.h [b3MinMax.h <20:10 20:21>]
REFERENCE_MACRO_USAGE: b3MinMax.h -> B3_FORCE_INLINE [b3MinMax.h <23:1 23:15>]
REFERENCE_MACRO_USAGE: b3MinMax.h -> B3_FORCE_INLINE [b3MinMax.h <29:1 29:15>]
REFERENCE_MACRO_USAGE: b3MinMax.h -> B3_FORCE_INLINE [b3MinMax.h <35:1 35:15>]
REFERENCE_MACRO_USAGE: b3MinMax.h -> B3_FORCE_INLINE [b3MinMax.h <41:1 41:15>]
REFERENCE_MACRO_USAGE: b3MinMax.h -> B3_FORCE_INLINE [b3MinMax.h <50:1 50:15>]
REFERENCE_MACRO_USAGE: b3MinMax.h -> B3_FORCE_INLINE [b3MinMax.h <59:1 59:15>]
REFERENCE_INCLUDE: b3Vector3.h -> b3AlignedAllocator.h [b3Vector3.h <23:10 23:31>]
REFERENCE_MACRO_USAGE: b3AlignedAllocator.h -> B3_ALIGNED_ALLOCATOR [b3AlignedAllocator.h <16:9 16:28>]
REFERENCE_INCLUDE: b3AlignedAllocator.h -> b3Scalar.h [b3AlignedAllocator.h <23:10 23:21>]
REFERENCE_MACRO_USAGE: b3AlignedAllocator.h -> B3_DEBUG_MEMORY_ALLOCATIONS [b3AlignedAllocator.h <25:8 25:34>]
REFERENCE_MACRO_USAGE: b3AlignedAllocator.h -> b3AlignedAlloc [b3AlignedAllocator.h <86:38 86:51>]
REFERENCE_MACRO_USAGE: b3AlignedAllocator.h -> b3AlignedFree [b3AlignedAllocator.h <90:3 90:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_DOUBLE_PRECISION [b3Vector3.h <25:8 25:30>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_DOUBLE_PRECISION [b3Vector3.h <1177:9 1177:31>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <33:13 33:22>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <77:44 77:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <95:14 95:23>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <115:14 115:23>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <140:44 140:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <157:44 157:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <173:44 173:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <211:44 211:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <269:44 269:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <329:44 329:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <345:44 345:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <384:44 384:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <459:44 459:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <488:44 488:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <514:44 514:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <552:44 552:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <572:44 572:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <589:44 589:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <611:44 611:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <634:44 634:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <681:44 681:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <715:44 715:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <731:44 731:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <747:45 747:54>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <767:45 767:54>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <781:44 781:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <821:44 821:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <914:44 914:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <927:44 927:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <967:14 967:23>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <968:36 968:45>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <1002:14 1002:23>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <1009:14 1009:23>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <1010:17 1010:26>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <1042:14 1042:23>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <1059:44 1059:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE [b3Vector3.h <1326:44 1326:53>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> _MSC_VER [b3Vector3.h <37:8 37:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_ATTRIBUTE_ALIGNED16 [b3Vector3.h <58:14 58:35>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_ATTRIBUTE_ALIGNED16 [b3Vector3.h <59:14 59:35>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_ATTRIBUTE_ALIGNED16 [b3Vector3.h <60:14 60:35>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_ATTRIBUTE_ALIGNED16 [b3Vector3.h <61:14 61:35>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_ATTRIBUTE_ALIGNED16 [b3Vector3.h <92:1 92:22>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <65:8 65:18>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <95:37 95:47>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <115:37 115:47>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <142:15 142:25>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <159:15 159:25>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <177:15 177:25>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <218:15 218:25>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <331:15 331:25>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <357:15 357:25>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <403:15 403:25>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <469:15 469:25>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <496:15 496:25>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <516:15 516:25>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <574:15 574:25>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <591:15 591:25>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <636:15 636:25>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <695:15 695:25>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <717:15 717:25>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <733:15 733:25>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <752:15 752:25>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <770:15 770:25>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <785:15 785:25>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <825:15 825:25>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <967:38 967:48>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <1002:38 1002:48>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <1009:38 1009:48>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <1042:38 1042:48>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_NEON [b3Vector3.h <1061:15 1061:25>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <77:13 77:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <140:13 140:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <157:13 157:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <173:13 173:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <211:13 211:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <269:13 269:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <329:13 329:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <345:13 345:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <384:13 384:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <459:13 459:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <488:13 488:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <514:13 514:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <552:13 552:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <572:13 572:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <589:13 589:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <611:13 611:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <634:13 634:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <681:13 681:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <715:13 715:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <731:13 731:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <747:14 747:30>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <767:14 767:30>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <781:13 781:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <821:14 821:30>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <914:13 914:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <927:13 927:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <1059:13 1059:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_USE_SSE_IN_API [b3Vector3.h <1326:13 1326:29>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_DECLARE_ALIGNED_ALLOCATOR [b3Vector3.h <113:2 113:29>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> b3AlignedAlloc [b3Scalar.h <332:70 332:83>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> b3AlignedAlloc [b3Scalar.h <336:72 336:85>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> b3AlignedFree [b3Scalar.h <333:63 333:75>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> b3AlignedFree [b3Scalar.h <337:65 337:77>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <122:5 122:19>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <126:5 126:19>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <138:2 138:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <155:2 155:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <171:2 171:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <189:2 189:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <209:2 209:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <231:2 231:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <237:2 237:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <244:2 244:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <248:2 248:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <250:2 250:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <267:2 267:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <310:2 310:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <315:2 315:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <319:2 319:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <327:2 327:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <343:2 343:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <382:2 382:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <434:2 434:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <441:2 441:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <446:2 446:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <451:2 451:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <457:2 457:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <486:2 486:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <512:2 512:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <527:3 527:17>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <529:3 529:17>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <531:3 531:17>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <533:3 533:17>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <536:3 536:17>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <538:3 538:17>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <540:3 540:17>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <542:3 542:17>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <547:2 547:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <548:2 548:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <550:2 550:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <562:2 562:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <570:2 570:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <587:2 587:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <601:2 601:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <644:2 644:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <649:2 649:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <654:2 654:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <656:2 656:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <658:2 658:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <660:2 660:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <662:2 662:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <664:2 664:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <670:9 670:23>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <676:9 676:23>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <679:5 679:19>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <712:1 712:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <728:1 728:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <744:1 744:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <764:1 764:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <778:1 778:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <794:1 794:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <801:1 801:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <818:1 818:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <848:1 848:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <856:1 856:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <864:1 864:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <871:1 871:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <878:1 878:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <884:1 884:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <894:1 894:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <902:1 902:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <907:1 907:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <912:1 912:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <923:1 923:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <965:1 965:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1007:1 1007:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1057:2 1057:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1076:3 1076:17>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1105:2 1105:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1134:2 1134:16>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1162:3 1162:17>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1175:1 1175:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1198:1 1198:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1208:1 1208:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1220:1 1220:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1260:1 1260:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1267:1 1267:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1274:1 1274:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1281:1 1281:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1288:1 1288:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_FORCE_INLINE [b3Vector3.h <1295:1 1295:15>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> b3FullAssert [b3Vector3.h <191:3 191:14>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> b3FullAssert [b3Vector3.h <322:3 322:14>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> b3FullAssert [b3Vector3.h <804:2 804:13>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_EPSILON [b3Vector3.h <254:13 254:22>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_EPSILON [b3Vector3.h <254:24 254:33>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_EPSILON [b3Vector3.h <651:22 651:31>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> b3Vector3Data [b3Vector3.h <654:40 654:52>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> b3Vector3Data [b3Vector3.h <656:48 656:60>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> b3Vector3Data [b3Vector3.h <1288:50 1288:62>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> b3Vector3Data [b3Vector3.h <1295:58 1295:70>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> _WIN32 [b3Vector3.h <968:17 968:22>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_INFINITY [b3Vector3.h <980:28 980:38>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_INFINITY [b3Vector3.h <1023:28 1023:38>]
REFERENCE_MACRO_USAGE: b3Scalar.h -> FLT_MAX [b3Scalar.h <423:25 423:31>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> b3Assert [b3Vector3.h <994:3 994:10>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_LARGE_FLOAT [b3Vector3.h <1079:31 1079:44>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_LARGE_FLOAT [b3Vector3.h <1108:30 1108:43>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> B3_SQRT12 [b3Vector3.h <1222:22 1222:30>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> b3RecipSqrt [b3Vector3.h <1225:18 1225:28>]
REFERENCE_MACRO_USAGE: b3Vector3.h -> b3RecipSqrt [b3Vector3.h <1237:18 1237:28>]
REFERENCE_INCLUDE: b3GeometryUtil.h -> b3AlignedObjectArray.h [b3GeometryUtil.h <20:10 20:47>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_OBJECT_ARRAY__ [b3AlignedObjectArray.h <17:9 17:25>]
REFERENCE_INCLUDE: b3AlignedObjectArray.h -> b3Scalar.h [b3AlignedObjectArray.h <20:10 20:21>]
REFERENCE_INCLUDE: b3AlignedObjectArray.h -> b3AlignedAllocator.h [b3AlignedObjectArray.h <21:10 21:31>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_USE_MEMCPY [b3AlignedObjectArray.h <33:8 33:20>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_USE_MEMCPY [b3AlignedObjectArray.h <415:8 415:20>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_USE_PLACEMENT_NEW [b3AlignedObjectArray.h <38:8 38:27>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_USE_PLACEMENT_NEW [b3AlignedObjectArray.h <78:8 78:27>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_USE_PLACEMENT_NEW [b3AlignedObjectArray.h <236:8 236:27>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_USE_PLACEMENT_NEW [b3AlignedObjectArray.h <268:8 268:27>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_USE_PLACEMENT_NEW [b3AlignedObjectArray.h <284:8 284:27>]
REFERENCE_INCLUDE: b3AlignedObjectArray.h -> new [b3AlignedObjectArray.h <39:10 39:14>]
REFERENCE_INCLUDE: new -> exception [new <6:10 6:20>]
REFERENCE_INCLUDE: exception -> yvals.h [exception <7:10 7:18>]
REFERENCE_INCLUDE: yvals.h -> yvals_core.h [yvals.h <7:10 7:23>]
REFERENCE_INCLUDE: yvals_core.h -> xkeycheck.h [yvals_core.h <220:10 220:22>]
REFERENCE_INCLUDE: yvals_core.h -> crtdefs.h [yvals_core.h <221:10 221:20>]
REFERENCE_INCLUDE: crtdefs.h -> vcruntime.h [crtdefs.h <9:10 9:22>]
REFERENCE_INCLUDE: crtdefs.h -> corecrt.h [crtdefs.h <10:10 10:20>]
REFERENCE_INCLUDE: yvals.h -> crtdbg.h [yvals.h <8:10 8:19>]
REFERENCE_INCLUDE: crtdbg.h -> corecrt.h [crtdbg.h <11:10 11:20>]
REFERENCE_INCLUDE: crtdbg.h -> vcruntime_new_debug.h [crtdbg.h <12:10 12:32>]
REFERENCE_INCLUDE: vcruntime_new_debug.h -> vcruntime_new.h [vcruntime_new_debug.h <10:10 10:26>]
REFERENCE_INCLUDE: vcruntime_new.h -> vcruntime.h [vcruntime_new.h <10:10 10:22>]
REFERENCE_INCLUDE: yvals.h -> use_ansi.h [yvals.h <201:10 201:21>]
REFERENCE_INCLUDE: exception -> type_traits [exception <8:10 8:22>]
REFERENCE_INCLUDE: type_traits -> xstddef [type_traits <6:10 6:18>]
REFERENCE_INCLUDE: xstddef -> cstddef [xstddef <6:10 6:18>]
REFERENCE_INCLUDE: cstddef -> stddef.h [cstddef <7:10 7:19>]
REFERENCE_INCLUDE: cstddef -> xtr1common [cstddef <8:10 8:21>]
REFERENCE_INCLUDE: xtr1common -> yvals_core.h [xtr1common <6:10 6:23>]
REFERENCE_INCLUDE: xstddef -> cstdlib [xstddef <7:10 7:18>]
REFERENCE_INCLUDE: cstdlib -> yvals_core.h [cstdlib <7:10 7:23>]
REFERENCE_INCLUDE: cstdlib -> stdlib.h [cstdlib <8:10 8:19>]
REFERENCE_INCLUDE: cstdlib -> math.h [cstdlib <9:10 9:17>]
REFERENCE_INCLUDE: xstddef -> initializer_list [xstddef <8:10 8:27>]
REFERENCE_INCLUDE: initializer_list -> cstddef [initializer_list <6:10 6:18>]
REFERENCE_INCLUDE: xstddef -> xtr1common [xstddef <9:10 9:21>]
REFERENCE_INCLUDE: exception -> malloc.h [exception <26:10 26:19>]
REFERENCE_INCLUDE: exception -> vcruntime_exception.h [exception <27:10 27:32>]
REFERENCE_INCLUDE: vcruntime_exception.h -> eh.h [vcruntime_exception.h <10:10 10:15>]
REFERENCE_INCLUDE: eh.h -> corecrt_terminate.h [eh.h <11:10 11:30>]
REFERENCE_INCLUDE: corecrt_terminate.h -> corecrt.h [corecrt_terminate.h <10:10 10:20>]
REFERENCE_INCLUDE: new -> vcruntime_new.h [new <7:10 7:26>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_ALLOW_ARRAY_COPY_OPERATOR [b3AlignedObjectArray.h <57:8 57:35>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_FORCE_INLINE [b3AlignedObjectArray.h <59:2 59:16>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_FORCE_INLINE [b3AlignedObjectArray.h <70:3 70:17>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_FORCE_INLINE [b3AlignedObjectArray.h <74:3 74:17>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_FORCE_INLINE [b3AlignedObjectArray.h <85:3 85:17>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_FORCE_INLINE [b3AlignedObjectArray.h <93:3 93:17>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_FORCE_INLINE [b3AlignedObjectArray.h <102:3 102:17>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_FORCE_INLINE [b3AlignedObjectArray.h <109:3 109:17>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_FORCE_INLINE [b3AlignedObjectArray.h <149:3 149:17>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_FORCE_INLINE [b3AlignedObjectArray.h <154:3 154:17>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_FORCE_INLINE [b3AlignedObjectArray.h <161:3 161:17>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_FORCE_INLINE [b3AlignedObjectArray.h <168:3 168:17>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_FORCE_INLINE [b3AlignedObjectArray.h <175:3 175:17>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_FORCE_INLINE [b3AlignedObjectArray.h <184:3 184:17>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_FORCE_INLINE [b3AlignedObjectArray.h <193:3 193:17>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_FORCE_INLINE [b3AlignedObjectArray.h <203:3 203:17>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_FORCE_INLINE [b3AlignedObjectArray.h <220:3 220:17>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_FORCE_INLINE [b3AlignedObjectArray.h <247:3 247:17>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_FORCE_INLINE [b3AlignedObjectArray.h <260:3 260:17>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_FORCE_INLINE [b3AlignedObjectArray.h <276:3 276:17>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_FORCE_INLINE [b3AlignedObjectArray.h <295:3 295:17>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> B3_FORCE_INLINE [b3AlignedObjectArray.h <300:3 300:17>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> b3Assert [b3AlignedObjectArray.h <156:4 156:11>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> b3Assert [b3AlignedObjectArray.h <157:4 157:11>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> b3Assert [b3AlignedObjectArray.h <163:4 163:11>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> b3Assert [b3AlignedObjectArray.h <164:4 164:11>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> b3Assert [b3AlignedObjectArray.h <170:4 170:11>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> b3Assert [b3AlignedObjectArray.h <171:4 171:11>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> b3Assert [b3AlignedObjectArray.h <177:4 177:11>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> b3Assert [b3AlignedObjectArray.h <178:4 178:11>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> b3Assert [b3AlignedObjectArray.h <195:4 195:11>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> b3Assert [b3AlignedObjectArray.h <305:5 305:12>]
REFERENCE_MACRO_USAGE: b3AlignedObjectArray.h -> b3Error [b3AlignedObjectArray.h <308:6 308:12>]
REFERENCE_MACRO_USAGE: b3Logging.h -> __FILE__ [b3Logging.h <18:82 18:89>]
REFERENCE_MACRO_USAGE: b3Logging.h -> __LINE__ [b3Logging.h <18:91 18:98>]
REFERENCE_TYPE_USAGE: int b3GetVersion() -> int [b3Scalar.h <34:8 34:10>]
REFERENCE_TYPE_USAGE: void b3EnterProfileZone(const char *) -> void [b3Logging.h <23:1 23:4>]
REFERENCE_TYPE_USAGE: void b3EnterProfileZone(const char *) -> char [b3Logging.h <23:31 23:34>]
REFERENCE_TYPE_USAGE: void b3LeaveProfileZone() -> void [b3Logging.h <24:1 24:4>]
REFERENCE_TYPE_USAGE: void b3ProfileZone::b3ProfileZone(const char *) -> char [b3Logging.h <30:22 30:25>]
REFERENCE_CALL: void b3ProfileZone::b3ProfileZone(const char *) -> void b3EnterProfileZone(const char *) [b3Logging.h <32:3 32:20>]
REFERENCE_CALL: void b3ProfileZone::~b3ProfileZone() -> void b3LeaveProfileZone() [b3Logging.h <37:3 37:20>]
REFERENCE_TYPE_USAGE: b3PrintfFunc -> void [b3Logging.h <53:9 53:12>]
REFERENCE_TYPE_USAGE: b3PrintfFunc -> char [b3Logging.h <53:35 53:38>]
REFERENCE_TYPE_USAGE: b3WarningMessageFunc -> void [b3Logging.h <54:9 54:12>]
REFERENCE_TYPE_USAGE: b3WarningMessageFunc -> char [b3Logging.h <54:43 54:46>]
REFERENCE_TYPE_USAGE: b3ErrorMessageFunc -> void [b3Logging.h <55:9 55:12>]
REFERENCE_TYPE_USAGE: b3ErrorMessageFunc -> char [b3Logging.h <55:41 55:44>]
REFERENCE_TYPE_USAGE: b3EnterProfileZoneFunc -> void [b3Logging.h <56:9 56:12>]
REFERENCE_TYPE_USAGE: b3EnterProfileZoneFunc -> char [b3Logging.h <56:45 56:48>]
REFERENCE_TYPE_USAGE: b3LeaveProfileZoneFunc -> void [b3Logging.h <57:9 57:12>]
REFERENCE_TYPE_USAGE: void b3SetCustomPrintfFunc(b3PrintfFunc *) -> void [b3Logging.h <60:1 60:4>]
REFERENCE_TYPE_USAGE: void b3SetCustomPrintfFunc(b3PrintfFunc *) -> b3PrintfFunc [b3Logging.h <60:28 60:39>]
REFERENCE_TYPE_USAGE: void b3SetCustomWarningMessageFunc(b3WarningMessageFunc *) -> void [b3Logging.h <61:1 61:4>]
REFERENCE_TYPE_USAGE: void b3SetCustomWarningMessageFunc(b3WarningMessageFunc *) -> b3WarningMessageFunc [b3Logging.h <61:36 61:55>]
REFERENCE_TYPE_USAGE: void b3SetCustomErrorMessageFunc(b3ErrorMessageFunc *) -> void [b3Logging.h <62:1 62:4>]
REFERENCE_TYPE_USAGE: void b3SetCustomErrorMessageFunc(b3ErrorMessageFunc *) -> b3ErrorMessageFunc [b3Logging.h <62:34 62:51>]
REFERENCE_TYPE_USAGE: void b3SetCustomEnterProfileZoneFunc(b3EnterProfileZoneFunc *) -> void [b3Logging.h <65:1 65:4>]
REFERENCE_TYPE_USAGE: void b3SetCustomEnterProfileZoneFunc(b3EnterProfileZoneFunc *) -> b3EnterProfileZoneFunc [b3Logging.h <65:38 65:59>]
REFERENCE_TYPE_USAGE: void b3SetCustomLeaveProfileZoneFunc(b3LeaveProfileZoneFunc *) -> void [b3Logging.h <66:1 66:4>]
REFERENCE_TYPE_USAGE: void b3SetCustomLeaveProfileZoneFunc(b3LeaveProfileZoneFunc *) -> b3LeaveProfileZoneFunc [b3Logging.h <66:38 66:59>]
REFERENCE_TYPE_USAGE: void b3OutputPrintfVarArgsInternal(const char *) -> void [b3Logging.h <69:1 69:4>]
REFERENCE_TYPE_USAGE: void b3OutputPrintfVarArgsInternal(const char *) -> char [b3Logging.h <69:42 69:45>]
REFERENCE_TYPE_USAGE: void b3OutputWarningMessageVarArgsInternal(const char *) -> void [b3Logging.h <70:1 70:4>]
REFERENCE_TYPE_USAGE: void b3OutputWarningMessageVarArgsInternal(const char *) -> char [b3Logging.h <70:50 70:53>]
REFERENCE_TYPE_USAGE: void b3OutputErrorMessageVarArgsInternal(const char *) -> void [b3Logging.h <71:1 71:4>]
REFERENCE_TYPE_USAGE: void b3OutputErrorMessageVarArgsInternal(const char *) -> char [b3Logging.h <71:48 71:51>]
REFERENCE_TYPE_USAGE: b3Scalar -> float [b3Scalar.h <263:9 263:13>]
REFERENCE_TYPE_USAGE: b3SimdFloat4 -> __m128 [b3Scalar.h <269:9 269:14>]
REFERENCE_TYPE_USAGE: b3Scalar b3Sqrt(b3Scalar) -> b3Scalar [b3Scalar.h <361:17 361:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Sqrt(b3Scalar) -> b3Scalar [b3Scalar.h <361:33 361:40>]
REFERENCE_CALL: b3Scalar b3Sqrt(b3Scalar) -> float sqrtf(float) [b3Scalar.h <378:9 378:13>]
REFERENCE_TYPE_USAGE: b3Scalar b3Fabs(b3Scalar) -> b3Scalar [b3Scalar.h <381:17 381:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Fabs(b3Scalar) -> b3Scalar [b3Scalar.h <381:33 381:40>]
REFERENCE_CALL: b3Scalar b3Fabs(b3Scalar) -> float fabsf(float) [b3Scalar.h <381:54 381:58>]
REFERENCE_TYPE_USAGE: b3Scalar b3Cos(b3Scalar) -> b3Scalar [b3Scalar.h <382:17 382:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Cos(b3Scalar) -> b3Scalar [b3Scalar.h <382:32 382:39>]
REFERENCE_CALL: b3Scalar b3Cos(b3Scalar) -> float cosf(float) [b3Scalar.h <382:53 382:56>]
REFERENCE_TYPE_USAGE: b3Scalar b3Sin(b3Scalar) -> b3Scalar [b3Scalar.h <383:17 383:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Sin(b3Scalar) -> b3Scalar [b3Scalar.h <383:32 383:39>]
REFERENCE_CALL: b3Scalar b3Sin(b3Scalar) -> float sinf(float) [b3Scalar.h <383:53 383:56>]
REFERENCE_TYPE_USAGE: b3Scalar b3Tan(b3Scalar) -> b3Scalar [b3Scalar.h <384:17 384:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Tan(b3Scalar) -> b3Scalar [b3Scalar.h <384:32 384:39>]
REFERENCE_CALL: b3Scalar b3Tan(b3Scalar) -> float tanf(float) [b3Scalar.h <384:53 384:56>]
REFERENCE_TYPE_USAGE: b3Scalar b3Acos(b3Scalar) -> b3Scalar [b3Scalar.h <385:17 385:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Acos(b3Scalar) -> b3Scalar [b3Scalar.h <385:33 385:40>]
REFERENCE_TYPE_USAGE: b3Scalar b3Acos(b3Scalar) -> b3Scalar [b3Scalar.h <386:8 386:15>]
REFERENCE_TYPE_USAGE: b3Scalar b3Acos(b3Scalar) -> b3Scalar [b3Scalar.h <387:5 387:12>]
REFERENCE_TYPE_USAGE: b3Scalar b3Acos(b3Scalar) -> b3Scalar [b3Scalar.h <388:8 388:15>]
REFERENCE_TYPE_USAGE: b3Scalar b3Acos(b3Scalar) -> b3Scalar [b3Scalar.h <389:5 389:12>]
REFERENCE_CALL: b3Scalar b3Acos(b3Scalar) -> float acosf(float) [b3Scalar.h <390:9 390:13>]
REFERENCE_TYPE_USAGE: b3Scalar b3Asin(b3Scalar) -> b3Scalar [b3Scalar.h <392:17 392:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Asin(b3Scalar) -> b3Scalar [b3Scalar.h <392:33 392:40>]
REFERENCE_TYPE_USAGE: b3Scalar b3Asin(b3Scalar) -> b3Scalar [b3Scalar.h <393:8 393:15>]
REFERENCE_TYPE_USAGE: b3Scalar b3Asin(b3Scalar) -> b3Scalar [b3Scalar.h <394:5 394:12>]
REFERENCE_TYPE_USAGE: b3Scalar b3Asin(b3Scalar) -> b3Scalar [b3Scalar.h <395:8 395:15>]
REFERENCE_TYPE_USAGE: b3Scalar b3Asin(b3Scalar) -> b3Scalar [b3Scalar.h <396:5 396:12>]
REFERENCE_CALL: b3Scalar b3Asin(b3Scalar) -> float asinf(float) [b3Scalar.h <397:9 397:13>]
REFERENCE_TYPE_USAGE: b3Scalar b3Atan(b3Scalar) -> b3Scalar [b3Scalar.h <399:17 399:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Atan(b3Scalar) -> b3Scalar [b3Scalar.h <399:33 399:40>]
REFERENCE_CALL: b3Scalar b3Atan(b3Scalar) -> float atanf(float) [b3Scalar.h <399:54 399:58>]
REFERENCE_TYPE_USAGE: b3Scalar b3Atan2(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <400:17 400:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Atan2(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <400:34 400:41>]
REFERENCE_TYPE_USAGE: b3Scalar b3Atan2(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <400:46 400:53>]
REFERENCE_CALL: b3Scalar b3Atan2(b3Scalar, b3Scalar) -> float atan2f(float, float) [b3Scalar.h <400:67 400:72>]
REFERENCE_TYPE_USAGE: b3Scalar b3Exp(b3Scalar) -> b3Scalar [b3Scalar.h <401:17 401:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Exp(b3Scalar) -> b3Scalar [b3Scalar.h <401:32 401:39>]
REFERENCE_CALL: b3Scalar b3Exp(b3Scalar) -> float expf(float) [b3Scalar.h <401:53 401:56>]
REFERENCE_TYPE_USAGE: b3Scalar b3Log(b3Scalar) -> b3Scalar [b3Scalar.h <402:17 402:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Log(b3Scalar) -> b3Scalar [b3Scalar.h <402:32 402:39>]
REFERENCE_CALL: b3Scalar b3Log(b3Scalar) -> float logf(float) [b3Scalar.h <402:53 402:56>]
REFERENCE_TYPE_USAGE: b3Scalar b3Pow(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <403:17 403:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Pow(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <403:32 403:39>]
REFERENCE_TYPE_USAGE: b3Scalar b3Pow(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <403:43 403:50>]
REFERENCE_CALL: b3Scalar b3Pow(b3Scalar, b3Scalar) -> float powf(float, float) [b3Scalar.h <403:64 403:67>]
REFERENCE_TYPE_USAGE: b3Scalar b3Fmod(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <404:17 404:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Fmod(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <404:33 404:40>]
REFERENCE_TYPE_USAGE: b3Scalar b3Fmod(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <404:44 404:51>]
REFERENCE_CALL: b3Scalar b3Fmod(b3Scalar, b3Scalar) -> float fmodf(float, float) [b3Scalar.h <404:65 404:69>]
REFERENCE_TYPE_USAGE: b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <426:17 426:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <426:38 426:45>]
REFERENCE_TYPE_USAGE: b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <426:50 426:57>]
REFERENCE_TYPE_USAGE: b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <428:2 428:9>]
REFERENCE_TYPE_USAGE: b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <428:21 428:25>]
REFERENCE_TYPE_USAGE: b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <429:2 429:9>]
REFERENCE_TYPE_USAGE: b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <430:2 430:9>]
REFERENCE_TYPE_USAGE: b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <431:2 431:9>]
REFERENCE_TYPE_USAGE: b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <433:3 433:10>]
REFERENCE_TYPE_USAGE: b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <436:3 436:10>]
REFERENCE_CALL: b3Scalar b3Atan2Fast(b3Scalar, b3Scalar) -> b3Scalar b3Fabs(b3Scalar) [b3Scalar.h <430:19 430:24>]
REFERENCE_TYPE_USAGE: bool b3FuzzyZero(b3Scalar) -> bool [b3Scalar.h <442:17 442:20>]
REFERENCE_TYPE_USAGE: bool b3FuzzyZero(b3Scalar) -> b3Scalar [b3Scalar.h <442:39 442:46>]
REFERENCE_CALL: bool b3FuzzyZero(b3Scalar) -> b3Scalar b3Fabs(b3Scalar) [b3Scalar.h <442:60 442:65>]
REFERENCE_TYPE_USAGE: bool b3Equal(b3Scalar, b3Scalar) -> bool [b3Scalar.h <444:17 444:20>]
REFERENCE_TYPE_USAGE: bool b3Equal(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <444:30 444:37>]
REFERENCE_TYPE_USAGE: bool b3Equal(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <444:42 444:49>]
REFERENCE_TYPE_USAGE: bool b3GreaterEqual(b3Scalar, b3Scalar) -> bool [b3Scalar.h <447:17 447:20>]
REFERENCE_TYPE_USAGE: bool b3GreaterEqual(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <447:38 447:45>]
REFERENCE_TYPE_USAGE: bool b3GreaterEqual(b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <447:50 447:57>]
REFERENCE_TYPE_USAGE: int b3IsNegative(b3Scalar) -> int [b3Scalar.h <452:17 452:19>]
REFERENCE_TYPE_USAGE: int b3IsNegative(b3Scalar) -> b3Scalar [b3Scalar.h <452:40 452:47>]
REFERENCE_TYPE_USAGE: int b3IsNegative(b3Scalar) -> b3Scalar [b3Scalar.h <453:16 453:23>]
REFERENCE_TYPE_USAGE: b3Scalar b3Radians(b3Scalar) -> b3Scalar [b3Scalar.h <456:17 456:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Radians(b3Scalar) -> b3Scalar [b3Scalar.h <456:36 456:43>]
REFERENCE_TYPE_USAGE: b3Scalar b3Radians(b3Scalar) -> b3Scalar [b3Scalar.h <456:61 456:75>]
REFERENCE_TYPE_USAGE: b3Scalar b3Degrees(b3Scalar) -> b3Scalar [b3Scalar.h <457:17 457:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Degrees(b3Scalar) -> b3Scalar [b3Scalar.h <457:36 457:43>]
REFERENCE_TYPE_USAGE: b3Scalar b3Degrees(b3Scalar) -> b3Scalar [b3Scalar.h <457:61 457:75>]
REFERENCE_TYPE_USAGE: b3Scalar b3Fsel(b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <462:17 462:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Fsel(b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <462:33 462:40>]
REFERENCE_TYPE_USAGE: b3Scalar b3Fsel(b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <462:45 462:52>]
REFERENCE_TYPE_USAGE: b3Scalar b3Fsel(b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Scalar.h <462:57 462:64>]
REFERENCE_TYPE_USAGE: bool b3MachineIsLittleEndian() -> bool [b3Scalar.h <470:17 470:20>]
REFERENCE_TYPE_USAGE: bool b3MachineIsLittleEndian() -> long [b3Scalar.h <472:4 472:7>]
REFERENCE_TYPE_USAGE: bool b3MachineIsLittleEndian() -> char [b3Scalar.h <473:10 473:13>]
REFERENCE_TYPE_USAGE: bool b3MachineIsLittleEndian() -> char [b3Scalar.h <473:27 473:30>]
REFERENCE_TYPE_USAGE: unsigned int b3Select(unsigned int, unsigned int, unsigned int) -> unsigned int [b3Scalar.h <484:17 484:24>]
REFERENCE_TYPE_USAGE: unsigned int b3Select(unsigned int, unsigned int, unsigned int) -> unsigned int [b3Scalar.h <484:35 484:42>]
REFERENCE_TYPE_USAGE: unsigned int b3Select(unsigned int, unsigned int, unsigned int) -> unsigned int [b3Scalar.h <484:55 484:62>]
REFERENCE_TYPE_USAGE: unsigned int b3Select(unsigned int, unsigned int, unsigned int) -> unsigned int [b3Scalar.h <484:89 484:96>]
REFERENCE_TYPE_USAGE: unsigned int b3Select(unsigned int, unsigned int, unsigned int) -> unsigned int [b3Scalar.h <490:5 490:12>]
REFERENCE_TYPE_USAGE: unsigned int b3Select(unsigned int, unsigned int, unsigned int) -> unsigned int [b3Scalar.h <490:24 490:31>]
REFERENCE_TYPE_USAGE: unsigned int b3Select(unsigned int, unsigned int, unsigned int) -> unsigned int [b3Scalar.h <491:5 491:12>]
REFERENCE_TYPE_USAGE: unsigned int b3Select(unsigned int, unsigned int, unsigned int) -> int [b3Scalar.h <490:36 490:38>]
REFERENCE_TYPE_USAGE: unsigned int b3Select(unsigned int, unsigned int, unsigned int) -> int [b3Scalar.h <490:54 490:56>]
REFERENCE_TYPE_USAGE: int b3Select(unsigned int, int, int) -> int [b3Scalar.h <494:17 494:19>]
REFERENCE_TYPE_USAGE: int b3Select(unsigned int, int, int) -> int [b3Scalar.h <494:50 494:52>]
REFERENCE_TYPE_USAGE: int b3Select(unsigned int, int, int) -> int [b3Scalar.h <494:79 494:81>]
REFERENCE_TYPE_USAGE: int b3Select(unsigned int, int, int) -> int [b3Scalar.h <496:36 496:38>]
REFERENCE_TYPE_USAGE: int b3Select(unsigned int, int, int) -> int [b3Scalar.h <496:54 496:56>]
REFERENCE_TYPE_USAGE: int b3Select(unsigned int, int, int) -> int [b3Scalar.h <498:24 498:26>]
REFERENCE_TYPE_USAGE: int b3Select(unsigned int, int, int) -> unsigned int [b3Scalar.h <494:30 494:37>]
REFERENCE_TYPE_USAGE: int b3Select(unsigned int, int, int) -> unsigned int [b3Scalar.h <496:5 496:12>]
REFERENCE_TYPE_USAGE: int b3Select(unsigned int, int, int) -> unsigned int [b3Scalar.h <496:24 496:31>]
REFERENCE_TYPE_USAGE: int b3Select(unsigned int, int, int) -> unsigned int [b3Scalar.h <497:5 497:12>]
REFERENCE_TYPE_USAGE: float b3Select(unsigned int, float, float) -> float [b3Scalar.h <500:17 500:21>]
REFERENCE_TYPE_USAGE: float b3Select(unsigned int, float, float) -> float [b3Scalar.h <500:52 500:56>]
REFERENCE_TYPE_USAGE: float b3Select(unsigned int, float, float) -> float [b3Scalar.h <500:83 500:87>]
REFERENCE_TYPE_USAGE: float b3Select(unsigned int, float, float) -> unsigned int [b3Scalar.h <500:32 500:39>]
REFERENCE_TYPE_USAGE: void b3Swap<typename T>(T &, T &) -> void [b3Scalar.h <509:38 509:41>]
REFERENCE_TYPE_USAGE: unsigned int b3SwapEndian(unsigned int) -> unsigned int [b3Scalar.h <518:17 518:24>]
REFERENCE_TYPE_USAGE: unsigned int b3SwapEndian(unsigned int) -> unsigned int [b3Scalar.h <518:39 518:46>]
REFERENCE_TYPE_USAGE: unsigned short b3SwapEndian(unsigned short) -> unsigned short [b3Scalar.h <523:17 523:24>]
REFERENCE_TYPE_USAGE: unsigned short b3SwapEndian(unsigned short) -> unsigned short [b3Scalar.h <523:45 523:52>]
REFERENCE_TYPE_USAGE: unsigned short b3SwapEndian(unsigned short) -> unsigned short [b3Scalar.h <525:21 525:28>]
REFERENCE_TYPE_USAGE: unsigned int b3SwapEndian(int) -> unsigned int [b3Scalar.h <528:17 528:24>]
REFERENCE_TYPE_USAGE: unsigned int b3SwapEndian(int) -> unsigned int [b3Scalar.h <530:23 530:30>]
REFERENCE_TYPE_USAGE: unsigned int b3SwapEndian(int) -> int [b3Scalar.h <528:39 528:41>]
REFERENCE_CALL: unsigned int b3SwapEndian(int) -> unsigned int b3SwapEndian(unsigned int) [b3Scalar.h <530:9 530:20>]
REFERENCE_TYPE_USAGE: unsigned short b3SwapEndian(short) -> unsigned short [b3Scalar.h <533:17 533:24>]
REFERENCE_TYPE_USAGE: unsigned short b3SwapEndian(short) -> unsigned short [b3Scalar.h <535:23 535:30>]
REFERENCE_TYPE_USAGE: unsigned short b3SwapEndian(short) -> short [b3Scalar.h <533:45 533:49>]
REFERENCE_CALL: unsigned short b3SwapEndian(short) -> unsigned short b3SwapEndian(unsigned short) [b3Scalar.h <535:9 535:20>]
REFERENCE_TYPE_USAGE: unsigned int b3SwapEndianFloat(float) -> unsigned int [b3Scalar.h <544:17 544:24>]
REFERENCE_TYPE_USAGE: unsigned int b3SwapEndianFloat(float) -> unsigned int [b3Scalar.h <546:5 546:12>]
REFERENCE_TYPE_USAGE: unsigned int b3SwapEndianFloat(float) -> float [b3Scalar.h <544:49 544:53>]
REFERENCE_TYPE_USAGE: unsigned int b3SwapEndianFloat(float) -> unsigned char [b3Scalar.h <547:5 547:12>]
REFERENCE_TYPE_USAGE: unsigned int b3SwapEndianFloat(float) -> unsigned char [b3Scalar.h <547:27 547:34>]
REFERENCE_TYPE_USAGE: unsigned int b3SwapEndianFloat(float) -> unsigned char [b3Scalar.h <548:5 548:12>]
REFERENCE_TYPE_USAGE: unsigned int b3SwapEndianFloat(float) -> unsigned char [b3Scalar.h <548:27 548:34>]
REFERENCE_TYPE_USAGE: float b3UnswapEndianFloat(unsigned int) -> float [b3Scalar.h <558:17 558:21>]
REFERENCE_TYPE_USAGE: float b3UnswapEndianFloat(unsigned int) -> float [b3Scalar.h <560:5 560:9>]
REFERENCE_TYPE_USAGE: float b3UnswapEndianFloat(unsigned int) -> unsigned int [b3Scalar.h <558:43 558:50>]
REFERENCE_TYPE_USAGE: float b3UnswapEndianFloat(unsigned int) -> unsigned char [b3Scalar.h <561:5 561:12>]
REFERENCE_TYPE_USAGE: float b3UnswapEndianFloat(unsigned int) -> unsigned char [b3Scalar.h <561:27 561:34>]
REFERENCE_TYPE_USAGE: float b3UnswapEndianFloat(unsigned int) -> unsigned char [b3Scalar.h <562:5 562:12>]
REFERENCE_TYPE_USAGE: float b3UnswapEndianFloat(unsigned int) -> unsigned char [b3Scalar.h <562:27 562:34>]
REFERENCE_TYPE_USAGE: void b3SwapEndianDouble(double, unsigned char *) -> void [b3Scalar.h <574:17 574:20>]
REFERENCE_TYPE_USAGE: void b3SwapEndianDouble(double, unsigned char *) -> double [b3Scalar.h <574:42 574:47>]
REFERENCE_TYPE_USAGE: void b3SwapEndianDouble(double, unsigned char *) -> unsigned char [b3Scalar.h <574:52 574:59>]
REFERENCE_TYPE_USAGE: void b3SwapEndianDouble(double, unsigned char *) -> unsigned char [b3Scalar.h <576:5 576:12>]
REFERENCE_TYPE_USAGE: void b3SwapEndianDouble(double, unsigned char *) -> unsigned char [b3Scalar.h <576:27 576:34>]
REFERENCE_TYPE_USAGE: double b3UnswapEndianDouble(const unsigned char *) -> double [b3Scalar.h <590:17 590:22>]
REFERENCE_TYPE_USAGE: double b3UnswapEndianDouble(const unsigned char *) -> double [b3Scalar.h <592:5 592:10>]
REFERENCE_TYPE_USAGE: double b3UnswapEndianDouble(const unsigned char *) -> unsigned char [b3Scalar.h <590:51 590:58>]
REFERENCE_TYPE_USAGE: double b3UnswapEndianDouble(const unsigned char *) -> unsigned char [b3Scalar.h <593:5 593:12>]
REFERENCE_TYPE_USAGE: double b3UnswapEndianDouble(const unsigned char *) -> unsigned char [b3Scalar.h <593:27 593:34>]
REFERENCE_TYPE_USAGE: b3Scalar b3NormalizeAngle(b3Scalar) -> b3Scalar [b3Scalar.h <608:17 608:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3NormalizeAngle(b3Scalar) -> b3Scalar [b3Scalar.h <608:43 608:50>]
REFERENCE_TYPE_USAGE: b3Scalar b3NormalizeAngle(b3Scalar) -> b3Scalar [b3Scalar.h <610:42 610:48>]
REFERENCE_TYPE_USAGE: b3Scalar b3NormalizeAngle(b3Scalar) -> b3Scalar [b3Scalar.h <611:23 611:27>]
REFERENCE_TYPE_USAGE: b3Scalar b3NormalizeAngle(b3Scalar) -> b3Scalar [b3Scalar.h <613:27 613:33>]
REFERENCE_TYPE_USAGE: b3Scalar b3NormalizeAngle(b3Scalar) -> b3Scalar [b3Scalar.h <615:27 615:31>]
REFERENCE_TYPE_USAGE: b3Scalar b3NormalizeAngle(b3Scalar) -> b3Scalar [b3Scalar.h <617:27 617:33>]
REFERENCE_CALL: b3Scalar b3NormalizeAngle(b3Scalar) -> b3Scalar b3Fmod(b3Scalar, b3Scalar) [b3Scalar.h <610:19 610:24>]
REFERENCE_TYPE_USAGE: void b3TypedObject::b3TypedObject(int) -> int [b3Scalar.h <628:16 628:18>]
REFERENCE_USAGE: void b3TypedObject::b3TypedObject(int) -> int b3TypedObject::m_objectType [b3Scalar.h <629:4 629:15>]
REFERENCE_TYPE_USAGE: int b3TypedObject::m_objectType -> int [b3Scalar.h <632:2 632:4>]
REFERENCE_TYPE_USAGE: int b3TypedObject::getObjectType() const -> int [b3Scalar.h <633:9 633:11>]
REFERENCE_USAGE: int b3TypedObject::getObjectType() const -> int b3TypedObject::m_objectType [b3Scalar.h <635:10 635:21>]
REFERENCE_TYPE_USAGE: T * b3AlignPointer<typename T>(T *, size_t) -> size_t [b3Scalar.h <642:57 642:62>]
REFERENCE_TYPE_USAGE: T * b3AlignPointer<typename T>(T *, size_t) -> size_t [b3Scalar.h <656:8 656:13>]
REFERENCE_TYPE_USAGE: size_t b3AlignPointer<typename T>::b3ConvertPointerSizeT::anonymous union (b3Scalar.h<647:3>)::integer -> size_t [b3Scalar.h <650:5 650:10>]
REFERENCE_TYPE_USAGE: b3AlignPointer<typename T>::b3ConvertPointerSizeT::anonymous union (b3Scalar.h<647:3>) b3AlignPointer<typename T>::b3ConvertPointerSizeT:: -> b3AlignPointer<typename T>::b3ConvertPointerSizeT::anonymous union (b3Scalar.h<647:3>) [b3Scalar.h <647:3 647:7>]
REFERENCE_TYPE_USAGE: T * b3AlignPointer<typename T>(T *, size_t) -> b3AlignPointer<typename T>::b3ConvertPointerSizeT [b3Scalar.h <653:5 653:25>]
REFERENCE_TYPE_USAGE: void b3SetMin<class T>(T &, const T &) -> void [b3MinMax.h <41:17 41:20>]
REFERENCE_TEMPLATE_SPECIALIZATION: void b3SetMin<float>(float &, const float &) -> void b3SetMin<class T>(T &, const T &) [b3MinMax.h <41:22 41:29>]
REFERENCE_TYPE_USAGE: void b3SetMin<float>(float &, const float &) -> void [b3MinMax.h <41:17 41:20>]
REFERENCE_TYPE_USAGE: void b3SetMax<class T>(T &, const T &) -> void [b3MinMax.h <50:17 50:20>]
REFERENCE_TEMPLATE_SPECIALIZATION: void b3SetMax<float>(float &, const float &) -> void b3SetMax<class T>(T &, const T &) [b3MinMax.h <50:22 50:29>]
REFERENCE_TYPE_USAGE: void b3SetMax<float>(float &, const float &) -> void [b3MinMax.h <50:17 50:20>]
REFERENCE_TYPE_USAGE: void b3Clamp<class T>(T &, const T &, const T &) -> void [b3MinMax.h <59:17 59:20>]
REFERENCE_TYPE_USAGE: void * b3AlignedAllocInternal(size_t, int) -> void [b3AlignedAllocator.h <38:2 38:5>]
REFERENCE_TYPE_USAGE: void * b3AlignedAllocInternal(size_t, int) -> size_t [b3AlignedAllocator.h <38:32 38:37>]
REFERENCE_TYPE_USAGE: void * b3AlignedAllocInternal(size_t, int) -> int [b3AlignedAllocator.h <38:45 38:47>]
REFERENCE_TYPE_USAGE: void b3AlignedFreeInternal(void *) -> void [b3AlignedAllocator.h <39:2 39:5>]
REFERENCE_TYPE_USAGE: void b3AlignedFreeInternal(void *) -> void [b3AlignedAllocator.h <39:30 39:33>]
REFERENCE_TYPE_USAGE: btSizeType -> int [b3AlignedAllocator.h <45:9 45:11>]
REFERENCE_TYPE_USAGE: b3AlignedAllocFunc -> void [b3AlignedAllocator.h <47:9 47:12>]
REFERENCE_TYPE_USAGE: b3AlignedAllocFunc -> size_t [b3AlignedAllocator.h <47:36 47:41>]
REFERENCE_TYPE_USAGE: b3AlignedAllocFunc -> int [b3AlignedAllocator.h <47:49 47:51>]
REFERENCE_TYPE_USAGE: b3AlignedFreeFunc -> void [b3AlignedAllocator.h <48:9 48:12>]
REFERENCE_TYPE_USAGE: b3AlignedFreeFunc -> void [b3AlignedAllocator.h <48:34 48:37>]
REFERENCE_TYPE_USAGE: b3AllocFunc -> void [b3AlignedAllocator.h <49:9 49:12>]
REFERENCE_TYPE_USAGE: b3AllocFunc -> size_t [b3AlignedAllocator.h <49:29 49:34>]
REFERENCE_TYPE_USAGE: b3FreeFunc -> void [b3AlignedAllocator.h <50:9 50:12>]
REFERENCE_TYPE_USAGE: b3FreeFunc -> void [b3AlignedAllocator.h <50:27 50:30>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocSetCustom(b3AllocFunc *, b3FreeFunc *) -> void [b3AlignedAllocator.h <53:1 53:4>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocSetCustom(b3AllocFunc *, b3FreeFunc *) -> b3AllocFunc [b3AlignedAllocator.h <53:30 53:40>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocSetCustom(b3AllocFunc *, b3FreeFunc *) -> b3FreeFunc [b3AlignedAllocator.h <53:54 53:63>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocSetCustomAligned(b3AlignedAllocFunc *, b3AlignedFreeFunc *) -> void [b3AlignedAllocator.h <55:1 55:4>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocSetCustomAligned(b3AlignedAllocFunc *, b3AlignedFreeFunc *) -> b3AlignedAllocFunc [b3AlignedAllocator.h <55:37 55:54>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocSetCustomAligned(b3AlignedAllocFunc *, b3AlignedFreeFunc *) -> b3AlignedFreeFunc [b3AlignedAllocator.h <55:68 55:84>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<typename T, unsigned int Alignment> -> unsigned int [b3AlignedAllocator.h <60:25 60:32>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<typename T, unsigned int Alignment>::self_type -> b3AlignedAllocator<T, Alignment> [b3AlignedAllocator.h <63:10 63:27>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocator<typename T, unsigned int Alignment>::b3AlignedAllocator<T, Alignment><typename Other>(const b3AlignedAllocator<Other, Alignment> &) -> b3AlignedAllocator<b3AlignedAllocator<T, Alignment><typename Other>::Other, Alignment> [b3AlignedAllocator.h <74:28 74:45>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::address(b3AlignedAllocator<typename T, unsigned int Alignment>::reference) const -> b3AlignedAllocator<typename T, unsigned int Alignment>::pointer [b3AlignedAllocator.h <82:2 82:8>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::address(b3AlignedAllocator<typename T, unsigned int Alignment>::reference) const -> b3AlignedAllocator<typename T, unsigned int Alignment>::reference [b3AlignedAllocator.h <82:28 82:36>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer b3AlignedAllocator<typename T, unsigned int Alignment>::address(b3AlignedAllocator<typename T, unsigned int Alignment>::const_reference) const -> b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer [b3AlignedAllocator.h <83:2 83:14>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer b3AlignedAllocator<typename T, unsigned int Alignment>::address(b3AlignedAllocator<typename T, unsigned int Alignment>::const_reference) const -> b3AlignedAllocator<typename T, unsigned int Alignment>::const_reference [b3AlignedAllocator.h <83:28 83:42>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::allocate(btSizeType, b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer *) -> b3AlignedAllocator<typename T, unsigned int Alignment>::pointer [b3AlignedAllocator.h <84:2 84:8>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::allocate(btSizeType, b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer *) -> b3AlignedAllocator<typename T, unsigned int Alignment>::pointer [b3AlignedAllocator.h <86:28 86:34>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::allocate(btSizeType, b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer *) -> btSizeType [b3AlignedAllocator.h <84:28 84:37>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::allocate(btSizeType, b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer *) -> b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer [b3AlignedAllocator.h <84:52 84:64>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::allocate(btSizeType, b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer *) -> void [b3AlignedAllocator.h <85:4 85:7>]
REFERENCE_CALL: b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::allocate(btSizeType, b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer *) -> void * b3AlignedAllocInternal(size_t, int) [b3AlignedAllocator.h <86:38 86:51>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::allocate(btSizeType, b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer *) -> b3AlignedAllocator<typename T, unsigned int Alignment>::value_type [b3AlignedAllocator.h <86:61 86:70>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocator<typename T, unsigned int Alignment>::construct(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer, const b3AlignedAllocator<typename T, unsigned int Alignment>::value_type &) -> void [b3AlignedAllocator.h <88:2 88:5>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocator<typename T, unsigned int Alignment>::construct(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer, const b3AlignedAllocator<typename T, unsigned int Alignment>::value_type &) -> b3AlignedAllocator<typename T, unsigned int Alignment>::pointer [b3AlignedAllocator.h <88:28 88:34>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocator<typename T, unsigned int Alignment>::construct(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer, const b3AlignedAllocator<typename T, unsigned int Alignment>::value_type &) -> b3AlignedAllocator<typename T, unsigned int Alignment>::value_type [b3AlignedAllocator.h <88:57 88:66>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocator<typename T, unsigned int Alignment>::construct(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer, const b3AlignedAllocator<typename T, unsigned int Alignment>::value_type &) -> b3AlignedAllocator<typename T, unsigned int Alignment>::value_type [b3AlignedAllocator.h <88:95 88:104>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocator<typename T, unsigned int Alignment>::deallocate(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer) -> void [b3AlignedAllocator.h <89:2 89:5>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocator<typename T, unsigned int Alignment>::deallocate(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer) -> void [b3AlignedAllocator.h <90:36 90:39>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocator<typename T, unsigned int Alignment>::deallocate(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer) -> b3AlignedAllocator<typename T, unsigned int Alignment>::pointer [b3AlignedAllocator.h <89:28 89:34>]
REFERENCE_CALL: void b3AlignedAllocator<typename T, unsigned int Alignment>::deallocate(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer) -> void b3AlignedFreeInternal(void *) [b3AlignedAllocator.h <90:3 90:15>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocator<typename T, unsigned int Alignment>::destroy(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer) -> void [b3AlignedAllocator.h <92:2 92:5>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocator<typename T, unsigned int Alignment>::destroy(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer) -> b3AlignedAllocator<typename T, unsigned int Alignment>::pointer [b3AlignedAllocator.h <92:28 92:34>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocator<typename T, unsigned int Alignment>::destroy(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer) -> b3AlignedAllocator<typename T, unsigned int Alignment>::value_type [b3AlignedAllocator.h <92:91 92:100>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<typename T, unsigned int Alignment>::rebind<typename O>::other -> b3AlignedAllocator<rebind<typename O>::O, Alignment> [b3AlignedAllocator.h <96:11 96:28>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<typename T, unsigned int Alignment>::self_type & b3AlignedAllocator<typename T, unsigned int Alignment>::operator=<typename O>(const b3AlignedAllocator<O, Alignment> &) -> b3AlignedAllocator<typename T, unsigned int Alignment>::self_type [b3AlignedAllocator.h <99:2 99:10>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<typename T, unsigned int Alignment>::self_type & b3AlignedAllocator<typename T, unsigned int Alignment>::operator=<typename O>(const b3AlignedAllocator<O, Alignment> &) -> b3AlignedAllocator<operator=<typename O>::O, Alignment> [b3AlignedAllocator.h <99:31 99:48>]
REFERENCE_TYPE_USAGE: bool operator==(const b3AlignedAllocator<typename T, unsigned int Alignment>::self_type &, const b3AlignedAllocator<typename T, unsigned int Alignment>::self_type &) -> bool [b3AlignedAllocator.h <101:9 101:12>]
REFERENCE_TYPE_USAGE: bool operator==(const b3AlignedAllocator<typename T, unsigned int Alignment>::self_type &, const b3AlignedAllocator<typename T, unsigned int Alignment>::self_type &) -> b3AlignedAllocator<typename T, unsigned int Alignment>::self_type [b3AlignedAllocator.h <101:32 101:40>]
REFERENCE_TYPE_USAGE: bool operator==(const b3AlignedAllocator<typename T, unsigned int Alignment>::self_type &, const b3AlignedAllocator<typename T, unsigned int Alignment>::self_type &) -> b3AlignedAllocator<typename T, unsigned int Alignment>::self_type [b3AlignedAllocator.h <101:52 101:60>]
REFERENCE_TEMPLATE_SPECIALIZATION: b3AlignedAllocator<b3Vector3, 16> -> b3AlignedAllocator<typename T, unsigned int Alignment> [b3AlignedAllocator.h <61:7 61:24>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<b3Vector3, 16>::self_type -> b3AlignedAllocator<b3Vector3, 16> [b3AlignedAllocator.h <63:10 63:27>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: void b3AlignedAllocator<b3Vector3, 16>::b3AlignedAllocator() -> void b3AlignedAllocator<typename T, unsigned int Alignment>::b3AlignedAllocator<T, Alignment>() [b3AlignedAllocator.h <68:2 68:19>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocator<b3Vector3, 16>::b3AlignedAllocator<typename Other>(const b3AlignedAllocator<Other, 16U> &) -> b3AlignedAllocator<b3AlignedAllocator<b3Vector3, 16>::b3AlignedAllocator<typename Other>::Other, 16U> [b3AlignedAllocator.h <74:28 74:45>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: b3AlignedAllocator<b3Vector3, 16>::pointer b3AlignedAllocator<b3Vector3, 16>::address(b3AlignedAllocator<b3Vector3, 16>::reference) const -> b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::address(b3AlignedAllocator<typename T, unsigned int Alignment>::reference) const [b3AlignedAllocator.h <82:16 82:22>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<b3Vector3, 16>::pointer b3AlignedAllocator<b3Vector3, 16>::address(b3AlignedAllocator<b3Vector3, 16>::reference) const -> b3AlignedAllocator<b3Vector3, 16>::pointer [b3AlignedAllocator.h <82:2 82:8>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<b3Vector3, 16>::pointer b3AlignedAllocator<b3Vector3, 16>::address(b3AlignedAllocator<b3Vector3, 16>::reference) const -> b3AlignedAllocator<b3Vector3, 16>::reference [b3AlignedAllocator.h <82:28 82:36>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: b3AlignedAllocator<b3Vector3, 16>::const_pointer b3AlignedAllocator<b3Vector3, 16>::address(b3AlignedAllocator<b3Vector3, 16>::const_reference) const -> b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer b3AlignedAllocator<typename T, unsigned int Alignment>::address(b3AlignedAllocator<typename T, unsigned int Alignment>::const_reference) const [b3AlignedAllocator.h <83:16 83:22>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<b3Vector3, 16>::const_pointer b3AlignedAllocator<b3Vector3, 16>::address(b3AlignedAllocator<b3Vector3, 16>::const_reference) const -> b3AlignedAllocator<b3Vector3, 16>::const_pointer [b3AlignedAllocator.h <83:2 83:14>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<b3Vector3, 16>::const_pointer b3AlignedAllocator<b3Vector3, 16>::address(b3AlignedAllocator<b3Vector3, 16>::const_reference) const -> b3AlignedAllocator<b3Vector3, 16>::const_reference [b3AlignedAllocator.h <83:28 83:42>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: b3AlignedAllocator<b3Vector3, 16>::pointer b3AlignedAllocator<b3Vector3, 16>::allocate(btSizeType, b3AlignedAllocator<b3Vector3, 16>::const_pointer *) -> b3AlignedAllocator<typename T, unsigned int Alignment>::pointer b3AlignedAllocator<typename T, unsigned int Alignment>::allocate(btSizeType, b3AlignedAllocator<typename T, unsigned int Alignment>::const_pointer *) [b3AlignedAllocator.h <84:16 84:23>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<b3Vector3, 16>::pointer b3AlignedAllocator<b3Vector3, 16>::allocate(btSizeType, b3AlignedAllocator<b3Vector3, 16>::const_pointer *) -> b3AlignedAllocator<b3Vector3, 16>::pointer [b3AlignedAllocator.h <84:2 84:8>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<b3Vector3, 16>::pointer b3AlignedAllocator<b3Vector3, 16>::allocate(btSizeType, b3AlignedAllocator<b3Vector3, 16>::const_pointer *) -> b3AlignedAllocator<b3Vector3, 16>::pointer [b3AlignedAllocator.h <86:28 86:34>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<b3Vector3, 16>::pointer b3AlignedAllocator<b3Vector3, 16>::allocate(btSizeType, b3AlignedAllocator<b3Vector3, 16>::const_pointer *) -> btSizeType [b3AlignedAllocator.h <84:28 84:37>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<b3Vector3, 16>::pointer b3AlignedAllocator<b3Vector3, 16>::allocate(btSizeType, b3AlignedAllocator<b3Vector3, 16>::const_pointer *) -> b3AlignedAllocator<b3Vector3, 16>::const_pointer [b3AlignedAllocator.h <84:52 84:64>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<b3Vector3, 16>::pointer b3AlignedAllocator<b3Vector3, 16>::allocate(btSizeType, b3AlignedAllocator<b3Vector3, 16>::const_pointer *) -> void [b3AlignedAllocator.h <85:4 85:7>]
REFERENCE_CALL: b3AlignedAllocator<b3Vector3, 16>::pointer b3AlignedAllocator<b3Vector3, 16>::allocate(btSizeType, b3AlignedAllocator<b3Vector3, 16>::const_pointer *) -> void * b3AlignedAllocInternal(size_t, int) [b3AlignedAllocator.h <86:38 86:51>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<b3Vector3, 16>::pointer b3AlignedAllocator<b3Vector3, 16>::allocate(btSizeType, b3AlignedAllocator<b3Vector3, 16>::const_pointer *) -> b3AlignedAllocator<b3Vector3, 16>::value_type [b3AlignedAllocator.h <86:61 86:70>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: void b3AlignedAllocator<b3Vector3, 16>::construct(b3AlignedAllocator<b3Vector3, 16>::pointer, const b3AlignedAllocator<b3Vector3, 16>::value_type &) -> void b3AlignedAllocator<typename T, unsigned int Alignment>::construct(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer, const b3AlignedAllocator<typename T, unsigned int Alignment>::value_type &) [b3AlignedAllocator.h <88:16 88:24>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocator<b3Vector3, 16>::construct(b3AlignedAllocator<b3Vector3, 16>::pointer, const b3AlignedAllocator<b3Vector3, 16>::value_type &) -> void [b3AlignedAllocator.h <88:2 88:5>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocator<b3Vector3, 16>::construct(b3AlignedAllocator<b3Vector3, 16>::pointer, const b3AlignedAllocator<b3Vector3, 16>::value_type &) -> b3AlignedAllocator<b3Vector3, 16>::pointer [b3AlignedAllocator.h <88:28 88:34>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocator<b3Vector3, 16>::construct(b3AlignedAllocator<b3Vector3, 16>::pointer, const b3AlignedAllocator<b3Vector3, 16>::value_type &) -> b3AlignedAllocator<b3Vector3, 16>::value_type [b3AlignedAllocator.h <88:57 88:66>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: void b3AlignedAllocator<b3Vector3, 16>::deallocate(b3AlignedAllocator<b3Vector3, 16>::pointer) -> void b3AlignedAllocator<typename T, unsigned int Alignment>::deallocate(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer) [b3AlignedAllocator.h <89:16 89:25>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocator<b3Vector3, 16>::deallocate(b3AlignedAllocator<b3Vector3, 16>::pointer) -> void [b3AlignedAllocator.h <89:2 89:5>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocator<b3Vector3, 16>::deallocate(b3AlignedAllocator<b3Vector3, 16>::pointer) -> void [b3AlignedAllocator.h <90:36 90:39>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocator<b3Vector3, 16>::deallocate(b3AlignedAllocator<b3Vector3, 16>::pointer) -> b3AlignedAllocator<b3Vector3, 16>::pointer [b3AlignedAllocator.h <89:28 89:34>]
REFERENCE_CALL: void b3AlignedAllocator<b3Vector3, 16>::deallocate(b3AlignedAllocator<b3Vector3, 16>::pointer) -> void b3AlignedFreeInternal(void *) [b3AlignedAllocator.h <90:3 90:15>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: void b3AlignedAllocator<b3Vector3, 16>::destroy(b3AlignedAllocator<b3Vector3, 16>::pointer) -> void b3AlignedAllocator<typename T, unsigned int Alignment>::destroy(b3AlignedAllocator<typename T, unsigned int Alignment>::pointer) [b3AlignedAllocator.h <92:16 92:22>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocator<b3Vector3, 16>::destroy(b3AlignedAllocator<b3Vector3, 16>::pointer) -> void [b3AlignedAllocator.h <92:2 92:5>]
REFERENCE_TYPE_USAGE: void b3AlignedAllocator<b3Vector3, 16>::destroy(b3AlignedAllocator<b3Vector3, 16>::pointer) -> b3AlignedAllocator<b3Vector3, 16>::pointer [b3AlignedAllocator.h <92:28 92:34>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<b3Vector3, 16>::self_type & b3AlignedAllocator<b3Vector3, 16>::operator=<typename O>(const b3AlignedAllocator<O, 16U> &) -> b3AlignedAllocator<b3Vector3, 16>::self_type [b3AlignedAllocator.h <99:2 99:10>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<b3Vector3, 16>::self_type & b3AlignedAllocator<b3Vector3, 16>::operator=<typename O>(const b3AlignedAllocator<O, 16U> &) -> b3AlignedAllocator<b3AlignedAllocator<b3Vector3, 16>::operator=<typename O>::O, 16U> [b3AlignedAllocator.h <99:31 99:48>]
REFERENCE_TYPE_USAGE: bool operator==(const b3AlignedAllocator<b3Vector3, 16>::self_type &, const b3AlignedAllocator<b3Vector3, 16>::self_type &) -> bool [b3AlignedAllocator.h <101:9 101:12>]
REFERENCE_TYPE_USAGE: bool operator==(const b3AlignedAllocator<b3Vector3, 16>::self_type &, const b3AlignedAllocator<b3Vector3, 16>::self_type &) -> b3AlignedAllocator<b3Vector3, 16>::self_type [b3AlignedAllocator.h <101:32 101:40>]
REFERENCE_TYPE_USAGE: bool operator==(const b3AlignedAllocator<b3Vector3, 16>::self_type &, const b3AlignedAllocator<b3Vector3, 16>::self_type &) -> b3AlignedAllocator<b3Vector3, 16>::self_type [b3AlignedAllocator.h <101:52 101:60>]
REFERENCE_TYPE_USAGE: const __m128 b3vMzeroMask -> __m128 [b3Vector3.h <58:7 58:12>]
REFERENCE_TYPE_USAGE: const __m128 b3v1110 -> __m128 [b3Vector3.h <59:7 59:12>]
REFERENCE_TYPE_USAGE: const __m128 b3vHalf -> __m128 [b3Vector3.h <60:7 60:12>]
REFERENCE_TYPE_USAGE: const __m128 b3v1_5 -> __m128 [b3Vector3.h <61:7 61:12>]
REFERENCE_TYPE_USAGE: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> b3Vector3 [b3Vector3.h <83:8 83:16>]
REFERENCE_TYPE_USAGE: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> b3Vector3 [b3Vector3.h <1304:8 1304:16>]
REFERENCE_TYPE_USAGE: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> b3Vector3 [b3Vector3.h <1306:2 1306:10>]
REFERENCE_TYPE_USAGE: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <83:32 83:39>]
REFERENCE_TYPE_USAGE: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <83:43 83:50>]
REFERENCE_TYPE_USAGE: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <83:54 83:61>]
REFERENCE_TYPE_USAGE: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <1304:32 1304:39>]
REFERENCE_TYPE_USAGE: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <1304:43 1304:50>]
REFERENCE_TYPE_USAGE: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <1304:54 1304:61>]
REFERENCE_TYPE_USAGE: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Vector3 [b3Vector3.h <84:8 84:16>]
REFERENCE_TYPE_USAGE: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Vector3 [b3Vector3.h <1311:8 1311:16>]
REFERENCE_TYPE_USAGE: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Vector3 [b3Vector3.h <1313:2 1313:10>]
REFERENCE_TYPE_USAGE: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <84:32 84:39>]
REFERENCE_TYPE_USAGE: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <84:43 84:50>]
REFERENCE_TYPE_USAGE: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <84:54 84:61>]
REFERENCE_TYPE_USAGE: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <84:66 84:73>]
REFERENCE_TYPE_USAGE: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <1311:32 1311:39>]
REFERENCE_TYPE_USAGE: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <1311:43 1311:50>]
REFERENCE_TYPE_USAGE: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <1311:54 1311:61>]
REFERENCE_TYPE_USAGE: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <1311:66 1311:73>]
REFERENCE_TYPE_USAGE: b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Vector4 [b3Vector3.h <85:8 85:16>]
REFERENCE_TYPE_USAGE: b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Vector4 [b3Vector3.h <1319:8 1319:16>]
REFERENCE_TYPE_USAGE: b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Vector4 [b3Vector3.h <1321:2 1321:10>]
REFERENCE_TYPE_USAGE: b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <85:32 85:39>]
REFERENCE_TYPE_USAGE: b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <85:43 85:50>]
REFERENCE_TYPE_USAGE: b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <85:54 85:61>]
REFERENCE_TYPE_USAGE: b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <85:65 85:72>]
REFERENCE_TYPE_USAGE: b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <1319:32 1319:39>]
REFERENCE_TYPE_USAGE: b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <1319:43 1319:50>]
REFERENCE_TYPE_USAGE: b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <1319:54 1319:61>]
REFERENCE_TYPE_USAGE: b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Scalar [b3Vector3.h <1319:65 1319:72>]
REFERENCE_TYPE_USAGE: b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 -> b3SimdFloat4 [b3Vector3.h <97:13 97:24>]
REFERENCE_TYPE_USAGE: float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats -> float [b3Vector3.h <98:13 98:17>]
REFERENCE_TYPE_USAGE: float b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::x -> float [b3Vector3.h <99:12 99:16>]
REFERENCE_TYPE_USAGE: float b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::y -> float [b3Vector3.h <99:12 99:16>]
REFERENCE_TYPE_USAGE: float b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::z -> float [b3Vector3.h <99:12 99:16>]
REFERENCE_TYPE_USAGE: float b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::w -> float [b3Vector3.h <99:12 99:16>]
REFERENCE_TYPE_USAGE: b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>) b3Vector3::anonymous union (b3Vector3.h<96:9>):: -> b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>) [b3Vector3.h <99:4 99:9>]
REFERENCE_TYPE_USAGE: b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: -> b3Vector3::anonymous union (b3Vector3.h<96:9>) [b3Vector3.h <96:9 96:13>]
REFERENCE_TYPE_USAGE: static void * b3Vector3::operator new(size_t) -> void [b3Vector3.h <113:2 113:29>]
REFERENCE_TYPE_USAGE: static void * b3Vector3::operator new(size_t) -> size_t [b3Vector3.h <113:2 113:29>]
REFERENCE_CALL: static void * b3Vector3::operator new(size_t) -> void * b3AlignedAllocInternal(size_t, int) [b3Vector3.h <113:2 113:29>]
REFERENCE_TYPE_USAGE: static void b3Vector3::operator delete(void *) -> void [b3Vector3.h <113:2 113:29>]
REFERENCE_CALL: static void b3Vector3::operator delete(void *) -> void b3AlignedFreeInternal(void *) [b3Vector3.h <113:2 113:29>]
REFERENCE_TYPE_USAGE: static void * b3Vector3::operator new(size_t, void *) -> void [b3Vector3.h <113:2 113:29>]
REFERENCE_TYPE_USAGE: static void * b3Vector3::operator new(size_t, void *) -> size_t [b3Vector3.h <113:2 113:29>]
REFERENCE_TYPE_USAGE: static void b3Vector3::operator delete(void *, void *) -> void [b3Vector3.h <113:2 113:29>]
REFERENCE_TYPE_USAGE: static void * b3Vector3::operator new[](size_t) -> void [b3Vector3.h <113:2 113:29>]
REFERENCE_TYPE_USAGE: static void * b3Vector3::operator new[](size_t) -> size_t [b3Vector3.h <113:2 113:29>]
REFERENCE_CALL: static void * b3Vector3::operator new[](size_t) -> void * b3AlignedAllocInternal(size_t, int) [b3Vector3.h <113:2 113:29>]
REFERENCE_TYPE_USAGE: static void b3Vector3::operator delete[](void *) -> void [b3Vector3.h <113:2 113:29>]
REFERENCE_CALL: static void b3Vector3::operator delete[](void *) -> void b3AlignedFreeInternal(void *) [b3Vector3.h <113:2 113:29>]
REFERENCE_TYPE_USAGE: static void * b3Vector3::operator new[](size_t, void *) -> void [b3Vector3.h <113:2 113:29>]
REFERENCE_TYPE_USAGE: static void * b3Vector3::operator new[](size_t, void *) -> size_t [b3Vector3.h <113:2 113:29>]
REFERENCE_TYPE_USAGE: static void b3Vector3::operator delete[](void *, void *) -> void [b3Vector3.h <113:2 113:29>]
REFERENCE_TYPE_USAGE: b3SimdFloat4 b3Vector3::get128() const -> b3SimdFloat4 [b3Vector3.h <122:21 122:32>]
REFERENCE_CALL: b3SimdFloat4 b3Vector3::get128() const -> void __m128::__m128(const __m128 &) [b3Vector3.h <124:16 124:22>]
REFERENCE_USAGE: b3SimdFloat4 b3Vector3::get128() const -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <124:16 124:22>]
REFERENCE_USAGE: b3SimdFloat4 b3Vector3::get128() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <124:16 124:22>]
REFERENCE_TYPE_USAGE: void b3Vector3::set128(b3SimdFloat4) -> void [b3Vector3.h <126:21 126:24>]
REFERENCE_TYPE_USAGE: void b3Vector3::set128(b3SimdFloat4) -> b3SimdFloat4 [b3Vector3.h <126:33 126:44>]
REFERENCE_CALL: void b3Vector3::set128(b3SimdFloat4) -> __m128 & __m128::operator=(const __m128 &) [b3Vector3.h <128:17 128:17>]
REFERENCE_USAGE: void b3Vector3::set128(b3SimdFloat4) -> b3SimdFloat4 b3Vector3::anonymous union (b3Vector3.h<96:9>)::mVec128 [b3Vector3.h <128:9 128:15>]
REFERENCE_USAGE: void b3Vector3::set128(b3SimdFloat4) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <128:9 128:15>]
REFERENCE_TYPE_USAGE: b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> b3Vector3 [b3Vector3.h <138:18 138:26>]
REFERENCE_TYPE_USAGE: b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> b3Vector3 [b3Vector3.h <138:46 138:54>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <145:3 145:10>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <145:20 145:27>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <146:3 146:10>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <146:20 146:27>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <147:3 147:10>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <147:20 147:27>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <145:3 145:10>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <145:20 145:27>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <146:3 146:10>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <146:20 146:27>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <147:3 147:10>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <147:20 147:27>]
REFERENCE_TYPE_USAGE: b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> b3Vector3 [b3Vector3.h <155:18 155:26>]
REFERENCE_TYPE_USAGE: b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> b3Vector3 [b3Vector3.h <155:46 155:54>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <162:3 162:10>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <162:20 162:27>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <163:3 163:10>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <163:20 163:27>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <164:3 164:10>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <164:20 164:27>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <162:3 162:10>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <162:20 162:27>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <163:3 163:10>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <163:20 163:27>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <164:3 164:10>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator-=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <164:20 164:27>]
REFERENCE_TYPE_USAGE: b3Vector3 & b3Vector3::operator*=(const b3Scalar &) -> b3Vector3 [b3Vector3.h <171:18 171:26>]
REFERENCE_TYPE_USAGE: b3Vector3 & b3Vector3::operator*=(const b3Scalar &) -> b3Scalar [b3Vector3.h <171:46 171:53>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator*=(const b3Scalar &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <180:3 180:10>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator*=(const b3Scalar &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <181:3 181:10>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator*=(const b3Scalar &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <182:3 182:10>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator*=(const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <180:3 180:10>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator*=(const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <181:3 181:10>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator*=(const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <182:3 182:10>]
REFERENCE_TYPE_USAGE: b3Vector3 & b3Vector3::operator/=(const b3Scalar &) -> b3Vector3 [b3Vector3.h <189:18 189:26>]
REFERENCE_TYPE_USAGE: b3Vector3 & b3Vector3::operator/=(const b3Scalar &) -> b3Scalar [b3Vector3.h <189:46 189:53>]
REFERENCE_TYPE_USAGE: b3Vector3 & b3Vector3::operator/=(const b3Scalar &) -> b3Scalar [b3Vector3.h <203:19 203:26>]
REFERENCE_CALL: b3Vector3 & b3Vector3::operator/=(const b3Scalar &) -> b3Vector3 & b3Vector3::operator*=(const b3Scalar &) [b3Vector3.h <203:16 203:17>]
REFERENCE_TYPE_USAGE: b3Scalar b3Vector3::dot(const b3Vector3 &) const -> b3Scalar [b3Vector3.h <209:18 209:25>]
REFERENCE_TYPE_USAGE: b3Scalar b3Vector3::dot(const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <209:37 209:45>]
REFERENCE_USAGE: b3Scalar b3Vector3::dot(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <224:10 224:17>]
REFERENCE_USAGE: b3Scalar b3Vector3::dot(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <224:26 224:33>]
REFERENCE_USAGE: b3Scalar b3Vector3::dot(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <225:5 225:12>]
REFERENCE_USAGE: b3Scalar b3Vector3::dot(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <225:21 225:28>]
REFERENCE_USAGE: b3Scalar b3Vector3::dot(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <226:5 226:12>]
REFERENCE_USAGE: b3Scalar b3Vector3::dot(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <226:21 226:28>]
REFERENCE_USAGE: b3Scalar b3Vector3::dot(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <224:10 224:17>]
REFERENCE_USAGE: b3Scalar b3Vector3::dot(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <224:26 224:33>]
REFERENCE_USAGE: b3Scalar b3Vector3::dot(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <225:5 225:12>]
REFERENCE_USAGE: b3Scalar b3Vector3::dot(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <225:21 225:28>]
REFERENCE_USAGE: b3Scalar b3Vector3::dot(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <226:5 226:12>]
REFERENCE_USAGE: b3Scalar b3Vector3::dot(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <226:21 226:28>]
REFERENCE_TYPE_USAGE: b3Scalar b3Vector3::length2() const -> b3Scalar [b3Vector3.h <231:18 231:25>]
REFERENCE_CALL: b3Scalar b3Vector3::length2() const -> b3Scalar b3Vector3::dot(const b3Vector3 &) const [b3Vector3.h <233:10 233:12>]
REFERENCE_TYPE_USAGE: b3Scalar b3Vector3::length() const -> b3Scalar [b3Vector3.h <237:18 237:25>]
REFERENCE_CALL: b3Scalar b3Vector3::length() const -> b3Scalar b3Sqrt(b3Scalar) [b3Vector3.h <239:10 239:15>]
REFERENCE_CALL: b3Scalar b3Vector3::length() const -> b3Scalar b3Vector3::length2() const [b3Vector3.h <239:17 239:23>]
REFERENCE_TYPE_USAGE: b3Scalar b3Vector3::distance2(const b3Vector3 &) const -> b3Scalar [b3Vector3.h <244:18 244:25>]
REFERENCE_TYPE_USAGE: b3Scalar b3Vector3::distance2(const b3Vector3 &) const -> b3Scalar [b3Vector3.h <902:17 902:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Vector3::distance2(const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <244:43 244:51>]
REFERENCE_TYPE_USAGE: b3Scalar b3Vector3::distance2(const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <902:53 902:61>]
REFERENCE_TYPE_USAGE: b3Scalar b3Vector3::distance(const b3Vector3 &) const -> b3Scalar [b3Vector3.h <248:18 248:25>]
REFERENCE_TYPE_USAGE: b3Scalar b3Vector3::distance(const b3Vector3 &) const -> b3Scalar [b3Vector3.h <907:17 907:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Vector3::distance(const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <248:42 248:50>]
REFERENCE_TYPE_USAGE: b3Scalar b3Vector3::distance(const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <907:52 907:60>]
REFERENCE_TYPE_USAGE: b3Vector3 & b3Vector3::safeNormalize() -> b3Vector3 [b3Vector3.h <250:18 250:26>]
REFERENCE_TYPE_USAGE: b3Vector3 & b3Vector3::safeNormalize() -> b3Scalar [b3Vector3.h <252:3 252:10>]
REFERENCE_CALL: b3Vector3 & b3Vector3::safeNormalize() -> b3Scalar b3Vector3::length2() const [b3Vector3.h <252:17 252:23>]
REFERENCE_CALL: b3Vector3 & b3Vector3::safeNormalize() -> b3Vector3 & b3Vector3::operator/=(const b3Scalar &) [b3Vector3.h <256:12 256:13>]
REFERENCE_CALL: b3Vector3 & b3Vector3::safeNormalize() -> b3Scalar b3Sqrt(b3Scalar) [b3Vector3.h <256:15 256:20>]
REFERENCE_CALL: b3Vector3 & b3Vector3::safeNormalize() -> void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) [b3Vector3.h <260:4 260:11>]
REFERENCE_TYPE_USAGE: b3Vector3 & b3Vector3::normalize() -> b3Vector3 [b3Vector3.h <267:18 267:26>]
REFERENCE_CALL: b3Vector3 & b3Vector3::normalize() -> b3Vector3 & b3Vector3::operator/=(const b3Scalar &) [b3Vector3.h <305:16 305:17>]
REFERENCE_CALL: b3Vector3 & b3Vector3::normalize() -> b3Scalar b3Vector3::length() const [b3Vector3.h <305:19 305:24>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Vector3::normalized() const -> b3Vector3 [b3Vector3.h <310:18 310:26>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Vector3::normalized() const -> b3Vector3 [b3Vector3.h <912:17 912:25>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3 [b3Vector3.h <315:18 315:26>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3 [b3Vector3.h <315:42 315:50>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3 [b3Vector3.h <923:17 923:25>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3 [b3Vector3.h <923:52 923:60>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3 [b3Vector3.h <955:2 955:10>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3 [b3Vector3.h <956:2 956:10>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3 [b3Vector3.h <957:2 957:10>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Scalar [b3Vector3.h <315:66 315:73>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Scalar [b3Vector3.h <923:76 923:83>]
REFERENCE_TYPE_USAGE: b3Scalar b3Vector3::angle(const b3Vector3 &) const -> b3Scalar [b3Vector3.h <319:18 319:25>]
REFERENCE_TYPE_USAGE: b3Scalar b3Vector3::angle(const b3Vector3 &) const -> b3Scalar [b3Vector3.h <321:3 321:10>]
REFERENCE_TYPE_USAGE: b3Scalar b3Vector3::angle(const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <319:39 319:47>]
REFERENCE_CALL: b3Scalar b3Vector3::angle(const b3Vector3 &) const -> b3Scalar b3Sqrt(b3Scalar) [b3Vector3.h <321:16 321:21>]
REFERENCE_CALL: b3Scalar b3Vector3::angle(const b3Vector3 &) const -> b3Scalar b3Vector3::length2() const [b3Vector3.h <321:23 321:29>]
REFERENCE_CALL: b3Scalar b3Vector3::angle(const b3Vector3 &) const -> b3Scalar b3Vector3::length2() const [b3Vector3.h <321:37 321:43>]
REFERENCE_CALL: b3Scalar b3Vector3::angle(const b3Vector3 &) const -> b3Scalar b3Acos(b3Scalar) [b3Vector3.h <323:10 323:15>]
REFERENCE_CALL: b3Scalar b3Vector3::angle(const b3Vector3 &) const -> b3Scalar b3Vector3::dot(const b3Vector3 &) const [b3Vector3.h <323:17 323:19>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Vector3::absolute() const -> b3Vector3 [b3Vector3.h <327:18 327:26>]
REFERENCE_CALL: b3Vector3 b3Vector3::absolute() const -> b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) [b3Vector3.h <334:10 334:22>]
REFERENCE_CALL: b3Vector3 b3Vector3::absolute() const -> b3Scalar b3Fabs(b3Scalar) [b3Vector3.h <335:4 335:9>]
REFERENCE_CALL: b3Vector3 b3Vector3::absolute() const -> b3Scalar b3Fabs(b3Scalar) [b3Vector3.h <336:4 336:9>]
REFERENCE_CALL: b3Vector3 b3Vector3::absolute() const -> b3Scalar b3Fabs(b3Scalar) [b3Vector3.h <337:4 337:9>]
REFERENCE_USAGE: b3Vector3 b3Vector3::absolute() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <335:11 335:18>]
REFERENCE_USAGE: b3Vector3 b3Vector3::absolute() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <336:11 336:18>]
REFERENCE_USAGE: b3Vector3 b3Vector3::absolute() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <337:11 337:18>]
REFERENCE_USAGE: b3Vector3 b3Vector3::absolute() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <335:11 335:18>]
REFERENCE_USAGE: b3Vector3 b3Vector3::absolute() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <336:11 336:18>]
REFERENCE_USAGE: b3Vector3 b3Vector3::absolute() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <337:11 337:18>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <343:18 343:26>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <343:40 343:48>]
REFERENCE_CALL: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) [b3Vector3.h <375:10 375:22>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <376:4 376:11>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <376:20 376:27>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <376:34 376:41>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <376:50 376:57>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <377:4 377:11>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <377:20 377:27>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <377:34 377:41>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <377:50 377:57>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <378:4 378:11>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <378:20 378:27>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <378:34 378:41>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <378:50 378:57>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <376:4 376:11>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <376:20 376:27>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <376:34 376:41>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <376:50 376:57>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <377:4 377:11>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <377:20 377:27>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <377:34 377:41>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <377:50 377:57>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <378:4 378:11>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <378:20 378:27>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <378:34 378:41>]
REFERENCE_USAGE: b3Vector3 b3Vector3::cross(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <378:50 378:57>]
REFERENCE_TYPE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Scalar [b3Vector3.h <382:18 382:25>]
REFERENCE_TYPE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <382:40 382:48>]
REFERENCE_TYPE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <382:61 382:69>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <426:4 426:11>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <426:22 426:29>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <426:39 426:46>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <426:56 426:63>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <426:73 426:80>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <427:4 427:11>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <427:22 427:29>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <427:39 427:46>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <427:56 427:63>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <427:73 427:80>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <428:4 428:11>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <428:22 428:29>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <428:39 428:46>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <428:56 428:63>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <428:73 428:80>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <426:4 426:11>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <426:22 426:29>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <426:39 426:46>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <426:56 426:63>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <426:73 426:80>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <427:4 427:11>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <427:22 427:29>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <427:39 427:46>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <427:56 427:63>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <427:73 427:80>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <428:4 428:11>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <428:22 428:29>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <428:39 428:46>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <428:56 428:63>]
REFERENCE_USAGE: b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <428:73 428:80>]
REFERENCE_TYPE_USAGE: int b3Vector3::minAxis() const -> int [b3Vector3.h <434:18 434:20>]
REFERENCE_USAGE: int b3Vector3::minAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <436:10 436:17>]
REFERENCE_USAGE: int b3Vector3::minAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <436:24 436:31>]
REFERENCE_USAGE: int b3Vector3::minAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <436:39 436:46>]
REFERENCE_USAGE: int b3Vector3::minAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <436:52 436:59>]
REFERENCE_USAGE: int b3Vector3::minAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <436:76 436:83>]
REFERENCE_USAGE: int b3Vector3::minAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <436:89 436:96>]
REFERENCE_USAGE: int b3Vector3::minAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <436:10 436:17>]
REFERENCE_USAGE: int b3Vector3::minAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <436:24 436:31>]
REFERENCE_USAGE: int b3Vector3::minAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <436:39 436:46>]
REFERENCE_USAGE: int b3Vector3::minAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <436:52 436:59>]
REFERENCE_USAGE: int b3Vector3::minAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <436:76 436:83>]
REFERENCE_USAGE: int b3Vector3::minAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <436:89 436:96>]
REFERENCE_TYPE_USAGE: int b3Vector3::maxAxis() const -> int [b3Vector3.h <441:18 441:20>]
REFERENCE_USAGE: int b3Vector3::maxAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <443:10 443:17>]
REFERENCE_USAGE: int b3Vector3::maxAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <443:24 443:31>]
REFERENCE_USAGE: int b3Vector3::maxAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <443:39 443:46>]
REFERENCE_USAGE: int b3Vector3::maxAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <443:52 443:59>]
REFERENCE_USAGE: int b3Vector3::maxAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <443:76 443:83>]
REFERENCE_USAGE: int b3Vector3::maxAxis() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <443:89 443:96>]
REFERENCE_USAGE: int b3Vector3::maxAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <443:10 443:17>]
REFERENCE_USAGE: int b3Vector3::maxAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <443:24 443:31>]
REFERENCE_USAGE: int b3Vector3::maxAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <443:39 443:46>]
REFERENCE_USAGE: int b3Vector3::maxAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <443:52 443:59>]
REFERENCE_USAGE: int b3Vector3::maxAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <443:76 443:83>]
REFERENCE_USAGE: int b3Vector3::maxAxis() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <443:89 443:96>]
REFERENCE_TYPE_USAGE: int b3Vector3::furthestAxis() const -> int [b3Vector3.h <446:18 446:20>]
REFERENCE_CALL: int b3Vector3::furthestAxis() const -> int b3Vector3::minAxis() const [b3Vector3.h <448:21 448:27>]
REFERENCE_CALL: int b3Vector3::furthestAxis() const -> b3Vector3 b3Vector3::absolute() const [b3Vector3.h <448:10 448:17>]
REFERENCE_TYPE_USAGE: int b3Vector3::closestAxis() const -> int [b3Vector3.h <451:18 451:20>]
REFERENCE_CALL: int b3Vector3::closestAxis() const -> int b3Vector3::maxAxis() const [b3Vector3.h <453:21 453:27>]
REFERENCE_CALL: int b3Vector3::closestAxis() const -> b3Vector3 b3Vector3::absolute() const [b3Vector3.h <453:10 453:17>]
REFERENCE_TYPE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> void [b3Vector3.h <457:18 457:21>]
REFERENCE_TYPE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3Vector3 [b3Vector3.h <457:45 457:53>]
REFERENCE_TYPE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3Vector3 [b3Vector3.h <457:66 457:74>]
REFERENCE_TYPE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3Scalar [b3Vector3.h <457:81 457:88>]
REFERENCE_TYPE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3Scalar [b3Vector3.h <474:3 474:10>]
REFERENCE_TYPE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3Scalar [b3Vector3.h <474:16 474:23>]
REFERENCE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <475:3 475:10>]
REFERENCE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <475:24 475:31>]
REFERENCE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <475:46 475:53>]
REFERENCE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <476:3 476:10>]
REFERENCE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <476:24 476:31>]
REFERENCE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <476:46 476:53>]
REFERENCE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <477:3 477:10>]
REFERENCE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <477:24 477:31>]
REFERENCE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <477:46 477:53>]
REFERENCE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <475:3 475:10>]
REFERENCE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <475:24 475:31>]
REFERENCE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <475:46 475:53>]
REFERENCE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <476:3 476:10>]
REFERENCE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <476:24 476:31>]
REFERENCE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <476:46 476:53>]
REFERENCE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <477:3 477:10>]
REFERENCE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <477:24 477:31>]
REFERENCE_USAGE: void b3Vector3::setInterpolate3(const b3Vector3 &, const b3Vector3 &, b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <477:46 477:53>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> b3Vector3 [b3Vector3.h <486:18 486:26>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> b3Vector3 [b3Vector3.h <486:39 486:47>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> b3Scalar [b3Vector3.h <486:59 486:66>]
REFERENCE_CALL: b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) [b3Vector3.h <504:4 504:16>]
REFERENCE_USAGE: b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <504:19 504:26>]
REFERENCE_USAGE: b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <504:36 504:43>]
REFERENCE_USAGE: b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <504:50 504:57>]
REFERENCE_USAGE: b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <505:7 505:14>]
REFERENCE_USAGE: b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <505:24 505:31>]
REFERENCE_USAGE: b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <505:38 505:45>]
REFERENCE_USAGE: b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <506:7 506:14>]
REFERENCE_USAGE: b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <506:24 506:31>]
REFERENCE_USAGE: b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <506:38 506:45>]
REFERENCE_USAGE: b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <504:19 504:26>]
REFERENCE_USAGE: b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <504:36 504:43>]
REFERENCE_USAGE: b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <504:50 504:57>]
REFERENCE_USAGE: b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <505:7 505:14>]
REFERENCE_USAGE: b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <505:24 505:31>]
REFERENCE_USAGE: b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <505:38 505:45>]
REFERENCE_USAGE: b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <506:7 506:14>]
REFERENCE_USAGE: b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <506:24 506:31>]
REFERENCE_USAGE: b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <506:38 506:45>]
REFERENCE_TYPE_USAGE: b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> b3Vector3 [b3Vector3.h <512:18 512:26>]
REFERENCE_TYPE_USAGE: b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> b3Vector3 [b3Vector3.h <512:46 512:54>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <519:3 519:10>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <519:20 519:27>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <520:3 520:10>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <520:20 520:27>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <521:3 521:10>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <521:20 521:27>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <519:3 519:10>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <519:20 519:27>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <520:3 520:10>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <520:20 520:27>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <521:3 521:10>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator*=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <521:20 521:27>]
REFERENCE_TYPE_USAGE: const b3Scalar & b3Vector3::getX() const -> b3Scalar [b3Vector3.h <527:25 527:32>]
REFERENCE_USAGE: const b3Scalar & b3Vector3::getX() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <527:57 527:64>]
REFERENCE_USAGE: const b3Scalar & b3Vector3::getX() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <527:57 527:64>]
REFERENCE_TYPE_USAGE: const b3Scalar & b3Vector3::getY() const -> b3Scalar [b3Vector3.h <529:25 529:32>]
REFERENCE_USAGE: const b3Scalar & b3Vector3::getY() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <529:57 529:64>]
REFERENCE_USAGE: const b3Scalar & b3Vector3::getY() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <529:57 529:64>]
REFERENCE_TYPE_USAGE: const b3Scalar & b3Vector3::getZ() const -> b3Scalar [b3Vector3.h <531:25 531:32>]
REFERENCE_USAGE: const b3Scalar & b3Vector3::getZ() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <531:57 531:64>]
REFERENCE_USAGE: const b3Scalar & b3Vector3::getZ() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <531:57 531:64>]
REFERENCE_TYPE_USAGE: const b3Scalar & b3Vector3::getW() const -> b3Scalar [b3Vector3.h <533:25 533:32>]
REFERENCE_USAGE: const b3Scalar & b3Vector3::getW() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <533:57 533:64>]
REFERENCE_USAGE: const b3Scalar & b3Vector3::getW() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <533:57 533:64>]
REFERENCE_TYPE_USAGE: void b3Vector3::setX(b3Scalar) -> void [b3Vector3.h <536:19 536:22>]
REFERENCE_TYPE_USAGE: void b3Vector3::setX(b3Scalar) -> b3Scalar [b3Vector3.h <536:29 536:36>]
REFERENCE_USAGE: void b3Vector3::setX(b3Scalar) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <536:44 536:51>]
REFERENCE_USAGE: void b3Vector3::setX(b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <536:44 536:51>]
REFERENCE_TYPE_USAGE: void b3Vector3::setY(b3Scalar) -> void [b3Vector3.h <538:19 538:22>]
REFERENCE_TYPE_USAGE: void b3Vector3::setY(b3Scalar) -> b3Scalar [b3Vector3.h <538:29 538:36>]
REFERENCE_USAGE: void b3Vector3::setY(b3Scalar) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <538:44 538:51>]
REFERENCE_USAGE: void b3Vector3::setY(b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <538:44 538:51>]
REFERENCE_TYPE_USAGE: void b3Vector3::setZ(b3Scalar) -> void [b3Vector3.h <540:19 540:22>]
REFERENCE_TYPE_USAGE: void b3Vector3::setZ(b3Scalar) -> b3Scalar [b3Vector3.h <540:29 540:36>]
REFERENCE_USAGE: void b3Vector3::setZ(b3Scalar) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <540:44 540:51>]
REFERENCE_USAGE: void b3Vector3::setZ(b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <540:44 540:51>]
REFERENCE_TYPE_USAGE: void b3Vector3::setW(b3Scalar) -> void [b3Vector3.h <542:19 542:22>]
REFERENCE_TYPE_USAGE: void b3Vector3::setW(b3Scalar) -> b3Scalar [b3Vector3.h <542:29 542:36>]
REFERENCE_USAGE: void b3Vector3::setW(b3Scalar) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <542:44 542:51>]
REFERENCE_USAGE: void b3Vector3::setW(b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <542:44 542:51>]
REFERENCE_TYPE_USAGE: b3Scalar * b3Vector3::operator float *() -> b3Scalar [b3Vector3.h <547:33 547:40>]
REFERENCE_USAGE: b3Scalar * b3Vector3::operator float *() -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <547:62 547:69>]
REFERENCE_USAGE: b3Scalar * b3Vector3::operator float *() -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <547:62 547:69>]
REFERENCE_TYPE_USAGE: const b3Scalar * b3Vector3::operator const float *() const -> b3Scalar [b3Vector3.h <548:33 548:40>]
REFERENCE_USAGE: const b3Scalar * b3Vector3::operator const float *() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <548:62 548:69>]
REFERENCE_USAGE: const b3Scalar * b3Vector3::operator const float *() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <548:62 548:69>]
REFERENCE_TYPE_USAGE: bool b3Vector3::operator==(const b3Vector3 &) const -> bool [b3Vector3.h <550:18 550:21>]
REFERENCE_TYPE_USAGE: bool b3Vector3::operator==(const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <550:40 550:48>]
REFERENCE_USAGE: bool b3Vector3::operator==(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <555:12 555:19>]
REFERENCE_USAGE: bool b3Vector3::operator==(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <555:31 555:38>]
REFERENCE_USAGE: bool b3Vector3::operator==(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <556:18 556:25>]
REFERENCE_USAGE: bool b3Vector3::operator==(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <556:37 556:44>]
REFERENCE_USAGE: bool b3Vector3::operator==(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <557:18 557:25>]
REFERENCE_USAGE: bool b3Vector3::operator==(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <557:37 557:44>]
REFERENCE_USAGE: bool b3Vector3::operator==(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <558:18 558:25>]
REFERENCE_USAGE: bool b3Vector3::operator==(const b3Vector3 &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <558:37 558:44>]
REFERENCE_USAGE: bool b3Vector3::operator==(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <555:12 555:19>]
REFERENCE_USAGE: bool b3Vector3::operator==(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <555:31 555:38>]
REFERENCE_USAGE: bool b3Vector3::operator==(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <556:18 556:25>]
REFERENCE_USAGE: bool b3Vector3::operator==(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <556:37 556:44>]
REFERENCE_USAGE: bool b3Vector3::operator==(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <557:18 557:25>]
REFERENCE_USAGE: bool b3Vector3::operator==(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <557:37 557:44>]
REFERENCE_USAGE: bool b3Vector3::operator==(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <558:18 558:25>]
REFERENCE_USAGE: bool b3Vector3::operator==(const b3Vector3 &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <558:37 558:44>]
REFERENCE_TYPE_USAGE: bool b3Vector3::operator!=(const b3Vector3 &) const -> bool [b3Vector3.h <562:18 562:21>]
REFERENCE_TYPE_USAGE: bool b3Vector3::operator!=(const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <562:40 562:48>]
REFERENCE_CALL: bool b3Vector3::operator!=(const b3Vector3 &) const -> bool b3Vector3::operator==(const b3Vector3 &) const [b3Vector3.h <564:18 564:19>]
REFERENCE_TYPE_USAGE: void b3Vector3::setMax(const b3Vector3 &) -> void [b3Vector3.h <570:18 570:21>]
REFERENCE_TYPE_USAGE: void b3Vector3::setMax(const b3Vector3 &) -> b3Vector3 [b3Vector3.h <570:36 570:44>]
REFERENCE_CALL: void b3Vector3::setMax(const b3Vector3 &) -> void b3SetMax<float>(float &, const float &) [b3Vector3.h <577:3 577:10>]
REFERENCE_CALL: void b3Vector3::setMax(const b3Vector3 &) -> void b3SetMax<float>(float &, const float &) [b3Vector3.h <578:3 578:10>]
REFERENCE_CALL: void b3Vector3::setMax(const b3Vector3 &) -> void b3SetMax<float>(float &, const float &) [b3Vector3.h <579:3 579:10>]
REFERENCE_CALL: void b3Vector3::setMax(const b3Vector3 &) -> void b3SetMax<float>(float &, const float &) [b3Vector3.h <580:3 580:10>]
REFERENCE_USAGE: void b3Vector3::setMax(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <577:12 577:19>]
REFERENCE_USAGE: void b3Vector3::setMax(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <577:31 577:38>]
REFERENCE_USAGE: void b3Vector3::setMax(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <578:12 578:19>]
REFERENCE_USAGE: void b3Vector3::setMax(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <578:31 578:38>]
REFERENCE_USAGE: void b3Vector3::setMax(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <579:12 579:19>]
REFERENCE_USAGE: void b3Vector3::setMax(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <579:31 579:38>]
REFERENCE_USAGE: void b3Vector3::setMax(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <580:12 580:19>]
REFERENCE_USAGE: void b3Vector3::setMax(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <580:31 580:38>]
REFERENCE_USAGE: void b3Vector3::setMax(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <577:12 577:19>]
REFERENCE_USAGE: void b3Vector3::setMax(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <577:31 577:38>]
REFERENCE_USAGE: void b3Vector3::setMax(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <578:12 578:19>]
REFERENCE_USAGE: void b3Vector3::setMax(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <578:31 578:38>]
REFERENCE_USAGE: void b3Vector3::setMax(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <579:12 579:19>]
REFERENCE_USAGE: void b3Vector3::setMax(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <579:31 579:38>]
REFERENCE_USAGE: void b3Vector3::setMax(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <580:12 580:19>]
REFERENCE_USAGE: void b3Vector3::setMax(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <580:31 580:38>]
REFERENCE_TYPE_USAGE: void b3Vector3::setMin(const b3Vector3 &) -> void [b3Vector3.h <587:18 587:21>]
REFERENCE_TYPE_USAGE: void b3Vector3::setMin(const b3Vector3 &) -> b3Vector3 [b3Vector3.h <587:36 587:44>]
REFERENCE_CALL: void b3Vector3::setMin(const b3Vector3 &) -> void b3SetMin<float>(float &, const float &) [b3Vector3.h <594:3 594:10>]
REFERENCE_CALL: void b3Vector3::setMin(const b3Vector3 &) -> void b3SetMin<float>(float &, const float &) [b3Vector3.h <595:3 595:10>]
REFERENCE_CALL: void b3Vector3::setMin(const b3Vector3 &) -> void b3SetMin<float>(float &, const float &) [b3Vector3.h <596:3 596:10>]
REFERENCE_CALL: void b3Vector3::setMin(const b3Vector3 &) -> void b3SetMin<float>(float &, const float &) [b3Vector3.h <597:3 597:10>]
REFERENCE_USAGE: void b3Vector3::setMin(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <594:12 594:19>]
REFERENCE_USAGE: void b3Vector3::setMin(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <594:31 594:38>]
REFERENCE_USAGE: void b3Vector3::setMin(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <595:12 595:19>]
REFERENCE_USAGE: void b3Vector3::setMin(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <595:31 595:38>]
REFERENCE_USAGE: void b3Vector3::setMin(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <596:12 596:19>]
REFERENCE_USAGE: void b3Vector3::setMin(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <596:31 596:38>]
REFERENCE_USAGE: void b3Vector3::setMin(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <597:12 597:19>]
REFERENCE_USAGE: void b3Vector3::setMin(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <597:31 597:38>]
REFERENCE_USAGE: void b3Vector3::setMin(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <594:12 594:19>]
REFERENCE_USAGE: void b3Vector3::setMin(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <594:31 594:38>]
REFERENCE_USAGE: void b3Vector3::setMin(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <595:12 595:19>]
REFERENCE_USAGE: void b3Vector3::setMin(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <595:31 595:38>]
REFERENCE_USAGE: void b3Vector3::setMin(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <596:12 596:19>]
REFERENCE_USAGE: void b3Vector3::setMin(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <596:31 596:38>]
REFERENCE_USAGE: void b3Vector3::setMin(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <597:12 597:19>]
REFERENCE_USAGE: void b3Vector3::setMin(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <597:31 597:38>]
REFERENCE_TYPE_USAGE: void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> void [b3Vector3.h <601:18 601:21>]
REFERENCE_TYPE_USAGE: void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Scalar [b3Vector3.h <601:39 601:46>]
REFERENCE_TYPE_USAGE: void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Scalar [b3Vector3.h <601:59 601:66>]
REFERENCE_TYPE_USAGE: void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Scalar [b3Vector3.h <601:79 601:86>]
REFERENCE_TYPE_USAGE: void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Scalar [b3Vector3.h <606:17 606:24>]
REFERENCE_USAGE: void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <603:3 603:10>]
REFERENCE_USAGE: void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <604:3 604:10>]
REFERENCE_USAGE: void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <605:3 605:10>]
REFERENCE_USAGE: void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <606:3 606:10>]
REFERENCE_USAGE: void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <603:3 603:10>]
REFERENCE_USAGE: void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <604:3 604:10>]
REFERENCE_USAGE: void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <605:3 605:10>]
REFERENCE_USAGE: void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <606:3 606:10>]
REFERENCE_TYPE_USAGE: void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> void [b3Vector3.h <609:2 609:5>]
REFERENCE_TYPE_USAGE: void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> b3Vector3 [b3Vector3.h <609:30 609:38>]
REFERENCE_TYPE_USAGE: void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> b3Vector3 [b3Vector3.h <609:44 609:52>]
REFERENCE_TYPE_USAGE: void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> b3Vector3 [b3Vector3.h <609:58 609:66>]
REFERENCE_CALL: void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) [b3Vector3.h <626:7 626:14>]
REFERENCE_CALL: void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) [b3Vector3.h <627:7 627:14>]
REFERENCE_CALL: void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) [b3Vector3.h <628:7 628:14>]
REFERENCE_CALL: void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> const b3Scalar & b3Vector3::getZ() const [b3Vector3.h <626:22 626:25>]
REFERENCE_CALL: void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> const b3Scalar & b3Vector3::getZ() const [b3Vector3.h <627:16 627:19>]
REFERENCE_CALL: void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> const b3Scalar & b3Vector3::getY() const [b3Vector3.h <626:31 626:34>]
REFERENCE_CALL: void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> const b3Scalar & b3Vector3::getY() const [b3Vector3.h <628:17 628:20>]
REFERENCE_CALL: void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> const b3Scalar & b3Vector3::getX() const [b3Vector3.h <627:31 627:34>]
REFERENCE_CALL: void b3Vector3::getSkewSymmetricMatrix(b3Vector3 *, b3Vector3 *, b3Vector3 *) const -> const b3Scalar & b3Vector3::getX() const [b3Vector3.h <628:25 628:28>]
REFERENCE_TYPE_USAGE: void b3Vector3::setZero() -> void [b3Vector3.h <632:2 632:5>]
REFERENCE_CALL: void b3Vector3::setZero() -> void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) [b3Vector3.h <640:3 640:10>]
REFERENCE_TYPE_USAGE: void b3Vector3::setZero() -> b3Scalar [b3Vector3.h <640:12 640:19>]
REFERENCE_TYPE_USAGE: void b3Vector3::setZero() -> b3Scalar [b3Vector3.h <640:25 640:32>]
REFERENCE_TYPE_USAGE: void b3Vector3::setZero() -> b3Scalar [b3Vector3.h <640:38 640:45>]
REFERENCE_TYPE_USAGE: bool b3Vector3::isZero() const -> bool [b3Vector3.h <644:18 644:21>]
REFERENCE_USAGE: bool b3Vector3::isZero() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <646:10 646:17>]
REFERENCE_USAGE: bool b3Vector3::isZero() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <646:40 646:47>]
REFERENCE_USAGE: bool b3Vector3::isZero() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <646:70 646:77>]
REFERENCE_USAGE: bool b3Vector3::isZero() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <646:10 646:17>]
REFERENCE_USAGE: bool b3Vector3::isZero() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <646:40 646:47>]
REFERENCE_USAGE: bool b3Vector3::isZero() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <646:70 646:77>]
REFERENCE_TYPE_USAGE: bool b3Vector3::isZero() const -> b3Scalar [b3Vector3.h <646:25 646:32>]
REFERENCE_TYPE_USAGE: bool b3Vector3::isZero() const -> b3Scalar [b3Vector3.h <646:55 646:62>]
REFERENCE_TYPE_USAGE: bool b3Vector3::isZero() const -> b3Scalar [b3Vector3.h <646:85 646:92>]
REFERENCE_TYPE_USAGE: bool b3Vector3::fuzzyZero() const -> bool [b3Vector3.h <649:18 649:21>]
REFERENCE_CALL: bool b3Vector3::fuzzyZero() const -> b3Scalar b3Vector3::length2() const [b3Vector3.h <651:10 651:16>]
REFERENCE_TYPE_USAGE: void b3Vector3::serialize(b3Vector3FloatData &) const -> void [b3Vector3.h <654:18 654:21>]
REFERENCE_TYPE_USAGE: void b3Vector3::serialize(b3Vector3FloatData &) const -> void [b3Vector3.h <1288:17 1288:20>]
REFERENCE_TYPE_USAGE: void b3Vector3::serialize(b3Vector3FloatData &) const -> b3Vector3FloatData [b3Vector3.h <654:40 654:52>]
REFERENCE_TYPE_USAGE: void b3Vector3::serialize(b3Vector3FloatData &) const -> b3Vector3FloatData [b3Vector3.h <1288:50 1288:62>]
REFERENCE_TYPE_USAGE: void b3Vector3::deSerialize(const b3Vector3FloatData &) -> void [b3Vector3.h <656:18 656:21>]
REFERENCE_TYPE_USAGE: void b3Vector3::deSerialize(const b3Vector3FloatData &) -> void [b3Vector3.h <1295:17 1295:20>]
REFERENCE_TYPE_USAGE: void b3Vector3::deSerialize(const b3Vector3FloatData &) -> b3Vector3FloatData [b3Vector3.h <656:48 656:60>]
REFERENCE_TYPE_USAGE: void b3Vector3::deSerialize(const b3Vector3FloatData &) -> b3Vector3FloatData [b3Vector3.h <1295:58 1295:70>]
REFERENCE_TYPE_USAGE: void b3Vector3::serializeFloat(b3Vector3FloatData &) const -> void [b3Vector3.h <658:18 658:21>]
REFERENCE_TYPE_USAGE: void b3Vector3::serializeFloat(b3Vector3FloatData &) const -> void [b3Vector3.h <1260:17 1260:20>]
REFERENCE_TYPE_USAGE: void b3Vector3::serializeFloat(b3Vector3FloatData &) const -> b3Vector3FloatData [b3Vector3.h <658:45 658:62>]
REFERENCE_TYPE_USAGE: void b3Vector3::serializeFloat(b3Vector3FloatData &) const -> b3Vector3FloatData [b3Vector3.h <1260:55 1260:72>]
REFERENCE_TYPE_USAGE: void b3Vector3::deSerializeFloat(const b3Vector3FloatData &) -> void [b3Vector3.h <660:18 660:21>]
REFERENCE_TYPE_USAGE: void b3Vector3::deSerializeFloat(const b3Vector3FloatData &) -> void [b3Vector3.h <1267:17 1267:20>]
REFERENCE_TYPE_USAGE: void b3Vector3::deSerializeFloat(const b3Vector3FloatData &) -> b3Vector3FloatData [b3Vector3.h <660:53 660:70>]
REFERENCE_TYPE_USAGE: void b3Vector3::deSerializeFloat(const b3Vector3FloatData &) -> b3Vector3FloatData [b3Vector3.h <1267:63 1267:80>]
REFERENCE_TYPE_USAGE: void b3Vector3::serializeDouble(b3Vector3DoubleData &) const -> void [b3Vector3.h <662:18 662:21>]
REFERENCE_TYPE_USAGE: void b3Vector3::serializeDouble(b3Vector3DoubleData &) const -> void [b3Vector3.h <1274:17 1274:20>]
REFERENCE_TYPE_USAGE: void b3Vector3::serializeDouble(b3Vector3DoubleData &) const -> b3Vector3DoubleData [b3Vector3.h <662:46 662:64>]
REFERENCE_TYPE_USAGE: void b3Vector3::serializeDouble(b3Vector3DoubleData &) const -> b3Vector3DoubleData [b3Vector3.h <1274:56 1274:74>]
REFERENCE_TYPE_USAGE: void b3Vector3::deSerializeDouble(const b3Vector3DoubleData &) -> void [b3Vector3.h <664:18 664:21>]
REFERENCE_TYPE_USAGE: void b3Vector3::deSerializeDouble(const b3Vector3DoubleData &) -> void [b3Vector3.h <1281:17 1281:20>]
REFERENCE_TYPE_USAGE: void b3Vector3::deSerializeDouble(const b3Vector3DoubleData &) -> b3Vector3DoubleData [b3Vector3.h <664:54 664:72>]
REFERENCE_TYPE_USAGE: void b3Vector3::deSerializeDouble(const b3Vector3DoubleData &) -> b3Vector3DoubleData [b3Vector3.h <1281:64 1281:82>]
REFERENCE_TYPE_USAGE: long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> long [b3Vector3.h <670:27 670:30>]
REFERENCE_TYPE_USAGE: long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> long [b3Vector3.h <670:67 670:70>]
REFERENCE_TYPE_USAGE: long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> long [b3Vector3.h <965:19 965:22>]
REFERENCE_TYPE_USAGE: long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> long [b3Vector3.h <965:70 965:73>]
REFERENCE_TYPE_USAGE: long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> long [b3Vector3.h <969:15 969:18>]
REFERENCE_TYPE_USAGE: long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> b3Vector3 [b3Vector3.h <670:49 670:57>]
REFERENCE_TYPE_USAGE: long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> b3Vector3 [b3Vector3.h <965:52 965:60>]
REFERENCE_TYPE_USAGE: long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> b3Scalar [b3Vector3.h <670:85 670:92>]
REFERENCE_TYPE_USAGE: long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> b3Scalar [b3Vector3.h <965:88 965:95>]
REFERENCE_TYPE_USAGE: long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> b3Scalar [b3Vector3.h <980:9 980:16>]
REFERENCE_TYPE_USAGE: long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> b3Scalar [b3Vector3.h <985:13 985:20>]
REFERENCE_TYPE_USAGE: long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> long [b3Vector3.h <676:27 676:30>]
REFERENCE_TYPE_USAGE: long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> long [b3Vector3.h <676:67 676:70>]
REFERENCE_TYPE_USAGE: long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> long [b3Vector3.h <1007:19 1007:22>]
REFERENCE_TYPE_USAGE: long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> long [b3Vector3.h <1007:70 1007:73>]
REFERENCE_TYPE_USAGE: long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> long [b3Vector3.h <1011:15 1011:18>]
REFERENCE_TYPE_USAGE: long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> b3Vector3 [b3Vector3.h <676:49 676:57>]
REFERENCE_TYPE_USAGE: long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> b3Vector3 [b3Vector3.h <1007:52 1007:60>]
REFERENCE_TYPE_USAGE: long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> b3Scalar [b3Vector3.h <676:85 676:92>]
REFERENCE_TYPE_USAGE: long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> b3Scalar [b3Vector3.h <1007:88 1007:95>]
REFERENCE_TYPE_USAGE: long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> b3Scalar [b3Vector3.h <1023:9 1023:16>]
REFERENCE_TYPE_USAGE: long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> b3Scalar [b3Vector3.h <1029:13 1029:20>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <679:21 679:29>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <679:44 679:52>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <679:65 679:73>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3Vector3 [b3Vector3.h <679:86 679:94>]
REFERENCE_CALL: b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) [b3Vector3.h <706:10 706:22>]
REFERENCE_CALL: b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3Scalar b3Vector3::dot(const b3Vector3 &) const [b3Vector3.h <706:25 706:27>]
REFERENCE_CALL: b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3Scalar b3Vector3::dot(const b3Vector3 &) const [b3Vector3.h <706:34 706:36>]
REFERENCE_CALL: b3Vector3 b3Vector3::dot3(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) const -> b3Scalar b3Vector3::dot(const b3Vector3 &) const [b3Vector3.h <706:43 706:45>]
REFERENCE_USAGE: void b3Vector3::b3Vector3(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <92:31 92:39>]
REFERENCE_CALL: void b3Vector3::b3Vector3(const b3Vector3 &) -> void b3Vector3::anonymous union (b3Vector3.h<96:9>)::(const b3Vector3::anonymous union (b3Vector3.h<96:9>) &) [b3Vector3.h <92:31 92:39>]
REFERENCE_USAGE: void b3Vector3::b3Vector3(b3Vector3 &&) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <92:31 92:39>]
REFERENCE_CALL: void b3Vector3::b3Vector3(b3Vector3 &&) -> void b3Vector3::anonymous union (b3Vector3.h<96:9>)::(b3Vector3::anonymous union (b3Vector3.h<96:9>) &&) [b3Vector3.h <92:31 92:39>]
REFERENCE_TYPE_USAGE: void b3Vector3::b3Vector3(b3Vector3 &&) -> b3Vector3 [b3Vector3.h <92:31 92:39>]
REFERENCE_CALL: b3Vector3 & b3Vector3::operator=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) & b3Vector3::anonymous union (b3Vector3.h<96:9>)::operator=(const b3Vector3::anonymous union (b3Vector3.h<96:9>) &) [b3Vector3.h <92:31 92:39>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator=(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <92:31 92:39>]
REFERENCE_CALL: b3Vector3 & b3Vector3::operator=(b3Vector3 &&) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) & b3Vector3::anonymous union (b3Vector3.h<96:9>)::operator=(b3Vector3::anonymous union (b3Vector3.h<96:9>) &&) [b3Vector3.h <92:31 92:39>]
REFERENCE_USAGE: b3Vector3 & b3Vector3::operator=(b3Vector3 &&) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <92:31 92:39>]
REFERENCE_TYPE_USAGE: b3Vector3 & b3Vector3::operator=(b3Vector3 &&) -> b3Vector3 [b3Vector3.h <92:31 92:39>]
REFERENCE_TYPE_USAGE: b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <712:17 712:25>]
REFERENCE_TYPE_USAGE: b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <713:17 713:25>]
REFERENCE_TYPE_USAGE: b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <713:38 713:46>]
REFERENCE_CALL: b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) [b3Vector3.h <720:9 720:21>]
REFERENCE_USAGE: b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <721:7 721:14>]
REFERENCE_USAGE: b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <721:24 721:31>]
REFERENCE_USAGE: b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <722:7 722:14>]
REFERENCE_USAGE: b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <722:24 722:31>]
REFERENCE_USAGE: b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <723:7 723:14>]
REFERENCE_USAGE: b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <723:24 723:31>]
REFERENCE_USAGE: b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <721:7 721:14>]
REFERENCE_USAGE: b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <721:24 721:31>]
REFERENCE_USAGE: b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <722:7 722:14>]
REFERENCE_USAGE: b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <722:24 722:31>]
REFERENCE_USAGE: b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <723:7 723:14>]
REFERENCE_USAGE: b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <723:24 723:31>]
REFERENCE_TYPE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <728:17 728:25>]
REFERENCE_TYPE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <729:17 729:25>]
REFERENCE_TYPE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <729:38 729:46>]
REFERENCE_CALL: b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) [b3Vector3.h <736:9 736:21>]
REFERENCE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <737:7 737:14>]
REFERENCE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <737:24 737:31>]
REFERENCE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <738:7 738:14>]
REFERENCE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <738:24 738:31>]
REFERENCE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <739:7 739:14>]
REFERENCE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <739:24 739:31>]
REFERENCE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <737:7 737:14>]
REFERENCE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <737:24 737:31>]
REFERENCE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <738:7 738:14>]
REFERENCE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <738:24 738:31>]
REFERENCE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <739:7 739:14>]
REFERENCE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <739:24 739:31>]
REFERENCE_TYPE_USAGE: b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <744:17 744:25>]
REFERENCE_TYPE_USAGE: b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <745:17 745:25>]
REFERENCE_TYPE_USAGE: b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <745:38 745:46>]
REFERENCE_CALL: b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) [b3Vector3.h <756:9 756:21>]
REFERENCE_USAGE: b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <757:7 757:14>]
REFERENCE_USAGE: b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <757:24 757:31>]
REFERENCE_USAGE: b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <758:7 758:14>]
REFERENCE_USAGE: b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <758:24 758:31>]
REFERENCE_USAGE: b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <759:7 759:14>]
REFERENCE_USAGE: b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <759:24 759:31>]
REFERENCE_USAGE: b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <757:7 757:14>]
REFERENCE_USAGE: b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <757:24 757:31>]
REFERENCE_USAGE: b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <758:7 758:14>]
REFERENCE_USAGE: b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <758:24 758:31>]
REFERENCE_USAGE: b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <759:7 759:14>]
REFERENCE_USAGE: b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <759:24 759:31>]
REFERENCE_TYPE_USAGE: b3Vector3 operator-(const b3Vector3 &) -> b3Vector3 [b3Vector3.h <764:17 764:25>]
REFERENCE_TYPE_USAGE: b3Vector3 operator-(const b3Vector3 &) -> b3Vector3 [b3Vector3.h <765:17 765:25>]
REFERENCE_CALL: b3Vector3 operator-(const b3Vector3 &) -> b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) [b3Vector3.h <773:9 773:21>]
REFERENCE_USAGE: b3Vector3 operator-(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <773:26 773:33>]
REFERENCE_USAGE: b3Vector3 operator-(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <773:42 773:49>]
REFERENCE_USAGE: b3Vector3 operator-(const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <773:58 773:65>]
REFERENCE_USAGE: b3Vector3 operator-(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <773:26 773:33>]
REFERENCE_USAGE: b3Vector3 operator-(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <773:42 773:49>]
REFERENCE_USAGE: b3Vector3 operator-(const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <773:58 773:65>]
REFERENCE_TYPE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> b3Vector3 [b3Vector3.h <778:17 778:25>]
REFERENCE_TYPE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> b3Vector3 [b3Vector3.h <779:17 779:25>]
REFERENCE_TYPE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> b3Scalar [b3Vector3.h <779:37 779:44>]
REFERENCE_CALL: b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) [b3Vector3.h <789:9 789:21>]
REFERENCE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <789:25 789:32>]
REFERENCE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <789:44 789:51>]
REFERENCE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <789:63 789:70>]
REFERENCE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <789:25 789:32>]
REFERENCE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <789:44 789:51>]
REFERENCE_USAGE: b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <789:63 789:70>]
REFERENCE_TYPE_USAGE: b3Vector3 operator*(const b3Scalar &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <794:17 794:25>]
REFERENCE_TYPE_USAGE: b3Vector3 operator*(const b3Scalar &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <795:36 795:44>]
REFERENCE_TYPE_USAGE: b3Vector3 operator*(const b3Scalar &, const b3Vector3 &) -> b3Scalar [b3Vector3.h <795:17 795:24>]
REFERENCE_CALL: b3Vector3 operator*(const b3Scalar &, const b3Vector3 &) -> b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) [b3Vector3.h <797:11 797:11>]
REFERENCE_TYPE_USAGE: b3Vector3 operator/(const b3Vector3 &, const b3Scalar &) -> b3Vector3 [b3Vector3.h <801:17 801:25>]
REFERENCE_TYPE_USAGE: b3Vector3 operator/(const b3Vector3 &, const b3Scalar &) -> b3Vector3 [b3Vector3.h <802:17 802:25>]
REFERENCE_TYPE_USAGE: b3Vector3 operator/(const b3Vector3 &, const b3Scalar &) -> b3Scalar [b3Vector3.h <802:37 802:44>]
REFERENCE_TYPE_USAGE: b3Vector3 operator/(const b3Vector3 &, const b3Scalar &) -> b3Scalar [b3Vector3.h <813:14 813:21>]
REFERENCE_CALL: b3Vector3 operator/(const b3Vector3 &, const b3Scalar &) -> b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) [b3Vector3.h <813:11 813:11>]
REFERENCE_TYPE_USAGE: b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <818:17 818:25>]
REFERENCE_TYPE_USAGE: b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <819:17 819:25>]
REFERENCE_TYPE_USAGE: b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <819:38 819:46>]
REFERENCE_CALL: b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) [b3Vector3.h <840:9 840:21>]
REFERENCE_USAGE: b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <841:7 841:14>]
REFERENCE_USAGE: b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <841:24 841:31>]
REFERENCE_USAGE: b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <842:7 842:14>]
REFERENCE_USAGE: b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <842:24 842:31>]
REFERENCE_USAGE: b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <843:7 843:14>]
REFERENCE_USAGE: b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <843:24 843:31>]
REFERENCE_USAGE: b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <841:7 841:14>]
REFERENCE_USAGE: b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <841:24 841:31>]
REFERENCE_USAGE: b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <842:7 842:14>]
REFERENCE_USAGE: b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <842:24 842:31>]
REFERENCE_USAGE: b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <843:7 843:14>]
REFERENCE_USAGE: b3Vector3 operator/(const b3Vector3 &, const b3Vector3 &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <843:24 843:31>]
REFERENCE_TYPE_USAGE: b3Scalar b3Dot(const b3Vector3 &, const b3Vector3 &) -> b3Scalar [b3Vector3.h <848:17 848:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Dot(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <849:13 849:21>]
REFERENCE_TYPE_USAGE: b3Scalar b3Dot(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <849:34 849:42>]
REFERENCE_CALL: b3Scalar b3Dot(const b3Vector3 &, const b3Vector3 &) -> b3Scalar b3Vector3::dot(const b3Vector3 &) const [b3Vector3.h <851:12 851:14>]
REFERENCE_TYPE_USAGE: b3Scalar b3Distance2(const b3Vector3 &, const b3Vector3 &) -> b3Scalar [b3Vector3.h <856:17 856:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Distance2(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <857:19 857:27>]
REFERENCE_TYPE_USAGE: b3Scalar b3Distance2(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <857:40 857:48>]
REFERENCE_CALL: b3Scalar b3Distance2(const b3Vector3 &, const b3Vector3 &) -> b3Scalar b3Vector3::distance2(const b3Vector3 &) const [b3Vector3.h <859:12 859:20>]
REFERENCE_TYPE_USAGE: b3Scalar b3Distance(const b3Vector3 &, const b3Vector3 &) -> b3Scalar [b3Vector3.h <864:17 864:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Distance(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <865:18 865:26>]
REFERENCE_TYPE_USAGE: b3Scalar b3Distance(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <865:39 865:47>]
REFERENCE_CALL: b3Scalar b3Distance(const b3Vector3 &, const b3Vector3 &) -> b3Scalar b3Vector3::distance(const b3Vector3 &) const [b3Vector3.h <867:12 867:19>]
REFERENCE_TYPE_USAGE: b3Scalar b3Angle(const b3Vector3 &, const b3Vector3 &) -> b3Scalar [b3Vector3.h <871:17 871:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Angle(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <872:15 872:23>]
REFERENCE_TYPE_USAGE: b3Scalar b3Angle(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <872:36 872:44>]
REFERENCE_CALL: b3Scalar b3Angle(const b3Vector3 &, const b3Vector3 &) -> b3Scalar b3Vector3::angle(const b3Vector3 &) const [b3Vector3.h <874:12 874:16>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Cross(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <878:17 878:25>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Cross(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <879:15 879:23>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Cross(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <879:36 879:44>]
REFERENCE_CALL: b3Vector3 b3Cross(const b3Vector3 &, const b3Vector3 &) -> b3Vector3 b3Vector3::cross(const b3Vector3 &) const [b3Vector3.h <881:12 881:16>]
REFERENCE_TYPE_USAGE: b3Scalar b3Triple(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) -> b3Scalar [b3Vector3.h <884:17 884:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Triple(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <885:16 885:24>]
REFERENCE_TYPE_USAGE: b3Scalar b3Triple(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <885:37 885:45>]
REFERENCE_TYPE_USAGE: b3Scalar b3Triple(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) -> b3Vector3 [b3Vector3.h <885:58 885:66>]
REFERENCE_CALL: b3Scalar b3Triple(const b3Vector3 &, const b3Vector3 &, const b3Vector3 &) -> b3Scalar b3Vector3::triple(const b3Vector3 &, const b3Vector3 &) const [b3Vector3.h <887:12 887:17>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Lerp(const b3Vector3 &, const b3Vector3 &, const b3Scalar &) -> b3Vector3 [b3Vector3.h <894:17 894:25>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Lerp(const b3Vector3 &, const b3Vector3 &, const b3Scalar &) -> b3Vector3 [b3Vector3.h <895:14 895:22>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Lerp(const b3Vector3 &, const b3Vector3 &, const b3Scalar &) -> b3Vector3 [b3Vector3.h <895:35 895:43>]
REFERENCE_TYPE_USAGE: b3Vector3 b3Lerp(const b3Vector3 &, const b3Vector3 &, const b3Scalar &) -> b3Scalar [b3Vector3.h <895:56 895:63>]
REFERENCE_CALL: b3Vector3 b3Lerp(const b3Vector3 &, const b3Vector3 &, const b3Scalar &) -> b3Vector3 b3Vector3::lerp(const b3Vector3 &, const b3Scalar &) const [b3Vector3.h <897:12 897:15>]
REFERENCE_CALL: b3Scalar b3Vector3::distance2(const b3Vector3 &) const -> b3Scalar b3Vector3::length2() const [b3Vector3.h <904:21 904:27>]
REFERENCE_CALL: b3Scalar b3Vector3::distance2(const b3Vector3 &) const -> b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <904:12 904:12>]
REFERENCE_CALL: b3Scalar b3Vector3::distance(const b3Vector3 &) const -> b3Scalar b3Vector3::length() const [b3Vector3.h <909:21 909:26>]
REFERENCE_CALL: b3Scalar b3Vector3::distance(const b3Vector3 &) const -> b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <909:12 909:12>]
REFERENCE_CALL: b3Vector3 b3Vector3::normalized() const -> b3Vector3 operator/(const b3Vector3 &, const b3Scalar &) [b3Vector3.h <919:15 919:15>]
REFERENCE_CALL: b3Vector3 b3Vector3::normalized() const -> b3Scalar b3Vector3::length() const [b3Vector3.h <919:17 919:22>]
REFERENCE_CALL: b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) [b3Vector3.h <955:22 955:22>]
REFERENCE_CALL: b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) [b3Vector3.h <961:18 961:18>]
REFERENCE_CALL: b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3 operator*(const b3Vector3 &, const b3Scalar &) [b3Vector3.h <961:41 961:41>]
REFERENCE_CALL: b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Scalar b3Vector3::dot(const b3Vector3 &) const [b3Vector3.h <955:30 955:32>]
REFERENCE_CALL: b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <956:23 956:23>]
REFERENCE_CALL: b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> void b3Vector3::b3Vector3() [b3Vector3.h <957:12 957:13>]
REFERENCE_CALL: b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3 & b3Vector3::operator=(b3Vector3 &&) [b3Vector3.h <959:5 959:5>]
REFERENCE_CALL: b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3 b3Vector3::cross(const b3Vector3 &) const [b3Vector3.h <959:13 959:17>]
REFERENCE_CALL: b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <961:13 961:13>]
REFERENCE_CALL: b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Vector3 operator+(const b3Vector3 &, const b3Vector3 &) [b3Vector3.h <961:36 961:36>]
REFERENCE_CALL: b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Scalar b3Cos(b3Scalar) [b3Vector3.h <961:20 961:24>]
REFERENCE_CALL: b3Vector3 b3Vector3::rotate(const b3Vector3 &, const b3Scalar) const -> b3Scalar b3Sin(b3Scalar) [b3Vector3.h <961:43 961:47>]
REFERENCE_TYPE_USAGE: long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> long [b3Vector3.h <970:9 970:12>]
REFERENCE_TYPE_USAGE: long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.h <970:37 970:41>]
REFERENCE_TYPE_USAGE: long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.h <970:57 970:61>]
REFERENCE_TYPE_USAGE: long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.h <970:96 970:100>]
REFERENCE_TYPE_USAGE: long b3_maxdot_large(const float *, const float *, unsigned long, float *) -> unsigned long [b3Vector3.h <970:69 970:76>]
REFERENCE_TYPE_USAGE: long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> int [b3Vector3.h <981:9 981:11>]
REFERENCE_TYPE_USAGE: long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> int [b3Vector3.h <982:9 982:11>]
REFERENCE_CALL: long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> b3Scalar b3Vector3::dot(const b3Vector3 &) const [b3Vector3.h <985:37 985:39>]
REFERENCE_CALL: long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> long b3_maxdot_large(const float *, const float *, unsigned long, float *) [b3Vector3.h <1003:12 1003:26>]
REFERENCE_TYPE_USAGE: long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> float [b3Vector3.h <1003:30 1003:34>]
REFERENCE_TYPE_USAGE: long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> float [b3Vector3.h <1003:46 1003:50>]
REFERENCE_USAGE: long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1003:55 1003:62>]
REFERENCE_USAGE: long b3Vector3::maxDot(const b3Vector3 *, long, b3Scalar &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1003:55 1003:62>]
REFERENCE_TYPE_USAGE: long b3_mindot_large(const float *, const float *, unsigned long, float *) -> long [b3Vector3.h <1012:9 1012:12>]
REFERENCE_TYPE_USAGE: long b3_mindot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.h <1012:37 1012:41>]
REFERENCE_TYPE_USAGE: long b3_mindot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.h <1012:57 1012:61>]
REFERENCE_TYPE_USAGE: long b3_mindot_large(const float *, const float *, unsigned long, float *) -> float [b3Vector3.h <1012:96 1012:100>]
REFERENCE_TYPE_USAGE: long b3_mindot_large(const float *, const float *, unsigned long, float *) -> unsigned long [b3Vector3.h <1012:69 1012:76>]
REFERENCE_TYPE_USAGE: long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> int [b3Vector3.h <1024:9 1024:11>]
REFERENCE_TYPE_USAGE: long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> int [b3Vector3.h <1025:9 1025:11>]
REFERENCE_CALL: long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> b3Scalar b3Vector3::dot(const b3Vector3 &) const [b3Vector3.h <1029:37 1029:39>]
REFERENCE_CALL: long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> long b3_mindot_large(const float *, const float *, unsigned long, float *) [b3Vector3.h <1043:12 1043:26>]
REFERENCE_TYPE_USAGE: long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> float [b3Vector3.h <1043:30 1043:34>]
REFERENCE_TYPE_USAGE: long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> float [b3Vector3.h <1043:46 1043:50>]
REFERENCE_USAGE: long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1043:55 1043:62>]
REFERENCE_USAGE: long b3Vector3::minDot(const b3Vector3 *, long, b3Scalar &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1043:55 1043:62>]
REFERENCE_INHERITANCE: b3Vector4 -> b3Vector3 [b3Vector3.h <1048:26 1048:34>]
REFERENCE_TYPE_USAGE: b3Vector4 b3Vector4::absolute4() const -> b3Vector4 [b3Vector3.h <1057:18 1057:26>]
REFERENCE_CALL: b3Vector4 b3Vector4::absolute4() const -> b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) [b3Vector3.h <1064:10 1064:22>]
REFERENCE_CALL: b3Vector4 b3Vector4::absolute4() const -> b3Scalar b3Fabs(b3Scalar) [b3Vector3.h <1065:4 1065:9>]
REFERENCE_CALL: b3Vector4 b3Vector4::absolute4() const -> b3Scalar b3Fabs(b3Scalar) [b3Vector3.h <1066:4 1066:9>]
REFERENCE_CALL: b3Vector4 b3Vector4::absolute4() const -> b3Scalar b3Fabs(b3Scalar) [b3Vector3.h <1067:4 1067:9>]
REFERENCE_CALL: b3Vector4 b3Vector4::absolute4() const -> b3Scalar b3Fabs(b3Scalar) [b3Vector3.h <1068:4 1068:9>]
REFERENCE_USAGE: b3Vector4 b3Vector4::absolute4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1065:11 1065:18>]
REFERENCE_USAGE: b3Vector4 b3Vector4::absolute4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1066:11 1066:18>]
REFERENCE_USAGE: b3Vector4 b3Vector4::absolute4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1067:11 1067:18>]
REFERENCE_USAGE: b3Vector4 b3Vector4::absolute4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1068:11 1068:18>]
REFERENCE_USAGE: b3Vector4 b3Vector4::absolute4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1065:11 1065:18>]
REFERENCE_USAGE: b3Vector4 b3Vector4::absolute4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1066:11 1066:18>]
REFERENCE_USAGE: b3Vector4 b3Vector4::absolute4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1067:11 1067:18>]
REFERENCE_USAGE: b3Vector4 b3Vector4::absolute4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1068:11 1068:18>]
REFERENCE_TYPE_USAGE: b3Scalar b3Vector4::getW() const -> b3Scalar [b3Vector3.h <1073:2 1073:9>]
REFERENCE_USAGE: b3Scalar b3Vector4::getW() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1073:33 1073:40>]
REFERENCE_USAGE: b3Scalar b3Vector4::getW() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1073:33 1073:40>]
REFERENCE_TYPE_USAGE: int b3Vector4::maxAxis4() const -> int [b3Vector3.h <1076:19 1076:21>]
REFERENCE_TYPE_USAGE: int b3Vector4::maxAxis4() const -> int [b3Vector3.h <1078:3 1078:5>]
REFERENCE_TYPE_USAGE: int b3Vector4::maxAxis4() const -> b3Scalar [b3Vector3.h <1079:3 1079:10>]
REFERENCE_TYPE_USAGE: int b3Vector4::maxAxis4() const -> b3Scalar [b3Vector3.h <1079:21 1079:28>]
REFERENCE_USAGE: int b3Vector4::maxAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1080:7 1080:14>]
REFERENCE_USAGE: int b3Vector4::maxAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1083:13 1083:20>]
REFERENCE_USAGE: int b3Vector4::maxAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1085:7 1085:14>]
REFERENCE_USAGE: int b3Vector4::maxAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1088:13 1088:20>]
REFERENCE_USAGE: int b3Vector4::maxAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1090:7 1090:14>]
REFERENCE_USAGE: int b3Vector4::maxAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1093:12 1093:19>]
REFERENCE_USAGE: int b3Vector4::maxAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1095:7 1095:14>]
REFERENCE_USAGE: int b3Vector4::maxAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1098:13 1098:20>]
REFERENCE_USAGE: int b3Vector4::maxAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1080:7 1080:14>]
REFERENCE_USAGE: int b3Vector4::maxAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1083:13 1083:20>]
REFERENCE_USAGE: int b3Vector4::maxAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1085:7 1085:14>]
REFERENCE_USAGE: int b3Vector4::maxAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1088:13 1088:20>]
REFERENCE_USAGE: int b3Vector4::maxAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1090:7 1090:14>]
REFERENCE_USAGE: int b3Vector4::maxAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1093:12 1093:19>]
REFERENCE_USAGE: int b3Vector4::maxAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1095:7 1095:14>]
REFERENCE_USAGE: int b3Vector4::maxAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1098:13 1098:20>]
REFERENCE_TYPE_USAGE: int b3Vector4::minAxis4() const -> int [b3Vector3.h <1105:18 1105:20>]
REFERENCE_TYPE_USAGE: int b3Vector4::minAxis4() const -> int [b3Vector3.h <1107:3 1107:5>]
REFERENCE_TYPE_USAGE: int b3Vector4::minAxis4() const -> b3Scalar [b3Vector3.h <1108:3 1108:10>]
REFERENCE_TYPE_USAGE: int b3Vector4::minAxis4() const -> b3Scalar [b3Vector3.h <1108:21 1108:28>]
REFERENCE_USAGE: int b3Vector4::minAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1109:7 1109:14>]
REFERENCE_USAGE: int b3Vector4::minAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1112:13 1112:20>]
REFERENCE_USAGE: int b3Vector4::minAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1114:7 1114:14>]
REFERENCE_USAGE: int b3Vector4::minAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1117:13 1117:20>]
REFERENCE_USAGE: int b3Vector4::minAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1119:7 1119:14>]
REFERENCE_USAGE: int b3Vector4::minAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1122:12 1122:19>]
REFERENCE_USAGE: int b3Vector4::minAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1124:7 1124:14>]
REFERENCE_USAGE: int b3Vector4::minAxis4() const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1127:13 1127:20>]
REFERENCE_USAGE: int b3Vector4::minAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1109:7 1109:14>]
REFERENCE_USAGE: int b3Vector4::minAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1112:13 1112:20>]
REFERENCE_USAGE: int b3Vector4::minAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1114:7 1114:14>]
REFERENCE_USAGE: int b3Vector4::minAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1117:13 1117:20>]
REFERENCE_USAGE: int b3Vector4::minAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1119:7 1119:14>]
REFERENCE_USAGE: int b3Vector4::minAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1122:12 1122:19>]
REFERENCE_USAGE: int b3Vector4::minAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1124:7 1124:14>]
REFERENCE_USAGE: int b3Vector4::minAxis4() const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1127:13 1127:20>]
REFERENCE_TYPE_USAGE: int b3Vector4::closestAxis4() const -> int [b3Vector3.h <1134:18 1134:20>]
REFERENCE_CALL: int b3Vector4::closestAxis4() const -> int b3Vector4::maxAxis4() const [b3Vector3.h <1136:22 1136:29>]
REFERENCE_CALL: int b3Vector4::closestAxis4() const -> b3Vector4 b3Vector4::absolute4() const [b3Vector3.h <1136:10 1136:18>]
REFERENCE_TYPE_USAGE: void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> void [b3Vector3.h <1162:19 1162:22>]
REFERENCE_TYPE_USAGE: void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Scalar [b3Vector3.h <1162:39 1162:46>]
REFERENCE_TYPE_USAGE: void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Scalar [b3Vector3.h <1162:59 1162:66>]
REFERENCE_TYPE_USAGE: void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Scalar [b3Vector3.h <1162:79 1162:86>]
REFERENCE_TYPE_USAGE: void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Scalar [b3Vector3.h <1162:98 1162:105>]
REFERENCE_USAGE: void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1164:4 1164:11>]
REFERENCE_USAGE: void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1165:4 1165:11>]
REFERENCE_USAGE: void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1166:4 1166:11>]
REFERENCE_USAGE: void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1167:4 1167:11>]
REFERENCE_USAGE: void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1164:4 1164:11>]
REFERENCE_USAGE: void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1165:4 1165:11>]
REFERENCE_USAGE: void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1166:4 1166:11>]
REFERENCE_USAGE: void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1167:4 1167:11>]
REFERENCE_CALL: void b3Vector4::b3Vector4() -> void b3Vector3::b3Vector3() [b3Vector3.h <1048:7 1048:15>]
REFERENCE_CALL: void b3Vector4::b3Vector4(b3Vector4 &&) -> void b3Vector3::b3Vector3(b3Vector3 &&) [b3Vector3.h <1048:7 1048:15>]
REFERENCE_TYPE_USAGE: void b3Vector4::b3Vector4(b3Vector4 &&) -> b3Vector4 [b3Vector3.h <1048:7 1048:15>]
REFERENCE_TYPE_USAGE: void b3SwapScalarEndian(const b3Scalar &, b3Scalar &) -> void [b3Vector3.h <1175:17 1175:20>]
REFERENCE_TYPE_USAGE: void b3SwapScalarEndian(const b3Scalar &, b3Scalar &) -> b3Scalar [b3Vector3.h <1175:47 1175:54>]
REFERENCE_TYPE_USAGE: void b3SwapScalarEndian(const b3Scalar &, b3Scalar &) -> b3Scalar [b3Vector3.h <1175:68 1175:75>]
REFERENCE_TYPE_USAGE: void b3SwapScalarEndian(const b3Scalar &, b3Scalar &) -> unsigned char [b3Vector3.h <1189:2 1189:9>]
REFERENCE_TYPE_USAGE: void b3SwapScalarEndian(const b3Scalar &, b3Scalar &) -> unsigned char [b3Vector3.h <1189:25 1189:32>]
REFERENCE_TYPE_USAGE: void b3SwapScalarEndian(const b3Scalar &, b3Scalar &) -> unsigned char [b3Vector3.h <1190:2 1190:9>]
REFERENCE_TYPE_USAGE: void b3SwapScalarEndian(const b3Scalar &, b3Scalar &) -> unsigned char [b3Vector3.h <1190:25 1190:32>]
REFERENCE_TYPE_USAGE: void b3SwapVector3Endian(const b3Vector3 &, b3Vector3 &) -> void [b3Vector3.h <1198:17 1198:20>]
REFERENCE_TYPE_USAGE: void b3SwapVector3Endian(const b3Vector3 &, b3Vector3 &) -> b3Vector3 [b3Vector3.h <1198:48 1198:56>]
REFERENCE_TYPE_USAGE: void b3SwapVector3Endian(const b3Vector3 &, b3Vector3 &) -> b3Vector3 [b3Vector3.h <1198:70 1198:78>]
REFERENCE_TYPE_USAGE: void b3SwapVector3Endian(const b3Vector3 &, b3Vector3 &) -> int [b3Vector3.h <1200:7 1200:9>]
REFERENCE_CALL: void b3SwapVector3Endian(const b3Vector3 &, b3Vector3 &) -> void b3SwapScalarEndian(const b3Scalar &, b3Scalar &) [b3Vector3.h <1202:3 1202:20>]
REFERENCE_TYPE_USAGE: void b3UnSwapVector3Endian(b3Vector3 &) -> void [b3Vector3.h <1208:17 1208:20>]
REFERENCE_TYPE_USAGE: void b3UnSwapVector3Endian(b3Vector3 &) -> b3Vector3 [b3Vector3.h <1208:44 1208:52>]
REFERENCE_TYPE_USAGE: void b3UnSwapVector3Endian(b3Vector3 &) -> b3Vector3 [b3Vector3.h <1211:2 1211:10>]
REFERENCE_CALL: void b3UnSwapVector3Endian(b3Vector3 &) -> void b3Vector3::b3Vector3() [b3Vector3.h <1211:12 1211:21>]
REFERENCE_TYPE_USAGE: void b3UnSwapVector3Endian(b3Vector3 &) -> int [b3Vector3.h <1212:7 1212:9>]
REFERENCE_CALL: void b3UnSwapVector3Endian(b3Vector3 &) -> void b3SwapScalarEndian(const b3Scalar &, b3Scalar &) [b3Vector3.h <1214:3 1214:20>]
REFERENCE_CALL: void b3UnSwapVector3Endian(b3Vector3 &) -> b3Vector3 & b3Vector3::operator=(const b3Vector3 &) [b3Vector3.h <1216:9 1216:9>]
REFERENCE_TYPE_USAGE: void b3PlaneSpace1<class T>(const T &, T &, T &) -> void [b3Vector3.h <1220:17 1220:20>]
REFERENCE_TYPE_USAGE: void b3PlaneSpace1<class T>(const T &, T &, T &) -> b3Scalar [b3Vector3.h <1222:22 1222:30>]
REFERENCE_TYPE_USAGE: void b3PlaneSpace1<class T>(const T &, T &, T &) -> b3Scalar [b3Vector3.h <1224:5 1224:12>]
REFERENCE_TYPE_USAGE: void b3PlaneSpace1<class T>(const T &, T &, T &) -> b3Scalar [b3Vector3.h <1225:5 1225:12>]
REFERENCE_TYPE_USAGE: void b3PlaneSpace1<class T>(const T &, T &, T &) -> b3Scalar [b3Vector3.h <1225:18 1225:28>]
REFERENCE_TYPE_USAGE: void b3PlaneSpace1<class T>(const T &, T &, T &) -> b3Scalar [b3Vector3.h <1236:5 1236:12>]
REFERENCE_TYPE_USAGE: void b3PlaneSpace1<class T>(const T &, T &, T &) -> b3Scalar [b3Vector3.h <1237:5 1237:12>]
REFERENCE_TYPE_USAGE: void b3PlaneSpace1<class T>(const T &, T &, T &) -> b3Scalar [b3Vector3.h <1237:18 1237:28>]
REFERENCE_CALL: void b3PlaneSpace1<class T>(const T &, T &, T &) -> b3Scalar b3Sqrt(b3Scalar) [b3Vector3.h <1225:18 1225:28>]
REFERENCE_CALL: void b3PlaneSpace1<class T>(const T &, T &, T &) -> b3Scalar b3Sqrt(b3Scalar) [b3Vector3.h <1237:18 1237:28>]
REFERENCE_TYPE_USAGE: float [] b3Vector3FloatData::m_floats -> float [b3Vector3.h <1251:2 1251:6>]
REFERENCE_TYPE_USAGE: double [] b3Vector3DoubleData::m_floats -> double [b3Vector3.h <1256:2 1256:7>]
REFERENCE_TYPE_USAGE: void b3Vector3::serializeFloat(b3Vector3FloatData &) const -> int [b3Vector3.h <1263:7 1263:9>]
REFERENCE_USAGE: void b3Vector3::serializeFloat(b3Vector3FloatData &) const -> float [] b3Vector3FloatData::m_floats [b3Vector3.h <1264:11 1264:18>]
REFERENCE_TYPE_USAGE: void b3Vector3::serializeFloat(b3Vector3FloatData &) const -> float [b3Vector3.h <1264:25 1264:29>]
REFERENCE_USAGE: void b3Vector3::serializeFloat(b3Vector3FloatData &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1264:31 1264:38>]
REFERENCE_USAGE: void b3Vector3::serializeFloat(b3Vector3FloatData &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1264:31 1264:38>]
REFERENCE_TYPE_USAGE: void b3Vector3::deSerializeFloat(const b3Vector3FloatData &) -> int [b3Vector3.h <1269:7 1269:9>]
REFERENCE_USAGE: void b3Vector3::deSerializeFloat(const b3Vector3FloatData &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1270:3 1270:10>]
REFERENCE_USAGE: void b3Vector3::deSerializeFloat(const b3Vector3FloatData &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1270:3 1270:10>]
REFERENCE_TYPE_USAGE: void b3Vector3::deSerializeFloat(const b3Vector3FloatData &) -> b3Scalar [b3Vector3.h <1270:17 1270:24>]
REFERENCE_USAGE: void b3Vector3::deSerializeFloat(const b3Vector3FloatData &) -> float [] b3Vector3FloatData::m_floats [b3Vector3.h <1270:33 1270:40>]
REFERENCE_TYPE_USAGE: void b3Vector3::serializeDouble(b3Vector3DoubleData &) const -> int [b3Vector3.h <1277:7 1277:9>]
REFERENCE_USAGE: void b3Vector3::serializeDouble(b3Vector3DoubleData &) const -> double [] b3Vector3DoubleData::m_floats [b3Vector3.h <1278:11 1278:18>]
REFERENCE_TYPE_USAGE: void b3Vector3::serializeDouble(b3Vector3DoubleData &) const -> double [b3Vector3.h <1278:25 1278:30>]
REFERENCE_USAGE: void b3Vector3::serializeDouble(b3Vector3DoubleData &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1278:32 1278:39>]
REFERENCE_USAGE: void b3Vector3::serializeDouble(b3Vector3DoubleData &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1278:32 1278:39>]
REFERENCE_TYPE_USAGE: void b3Vector3::deSerializeDouble(const b3Vector3DoubleData &) -> int [b3Vector3.h <1283:7 1283:9>]
REFERENCE_USAGE: void b3Vector3::deSerializeDouble(const b3Vector3DoubleData &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1284:3 1284:10>]
REFERENCE_USAGE: void b3Vector3::deSerializeDouble(const b3Vector3DoubleData &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1284:3 1284:10>]
REFERENCE_TYPE_USAGE: void b3Vector3::deSerializeDouble(const b3Vector3DoubleData &) -> b3Scalar [b3Vector3.h <1284:17 1284:24>]
REFERENCE_USAGE: void b3Vector3::deSerializeDouble(const b3Vector3DoubleData &) -> double [] b3Vector3DoubleData::m_floats [b3Vector3.h <1284:33 1284:40>]
REFERENCE_TYPE_USAGE: void b3Vector3::serialize(b3Vector3FloatData &) const -> int [b3Vector3.h <1291:7 1291:9>]
REFERENCE_USAGE: void b3Vector3::serialize(b3Vector3FloatData &) const -> float [] b3Vector3FloatData::m_floats [b3Vector3.h <1292:11 1292:18>]
REFERENCE_USAGE: void b3Vector3::serialize(b3Vector3FloatData &) const -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1292:25 1292:32>]
REFERENCE_USAGE: void b3Vector3::serialize(b3Vector3FloatData &) const -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1292:25 1292:32>]
REFERENCE_TYPE_USAGE: void b3Vector3::deSerialize(const b3Vector3FloatData &) -> int [b3Vector3.h <1297:7 1297:9>]
REFERENCE_USAGE: void b3Vector3::deSerialize(const b3Vector3FloatData &) -> float [] b3Vector3::anonymous union (b3Vector3.h<96:9>)::m_floats [b3Vector3.h <1298:3 1298:10>]
REFERENCE_USAGE: void b3Vector3::deSerialize(const b3Vector3FloatData &) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1298:3 1298:10>]
REFERENCE_USAGE: void b3Vector3::deSerialize(const b3Vector3FloatData &) -> float [] b3Vector3FloatData::m_floats [b3Vector3.h <1298:24 1298:31>]
REFERENCE_CALL: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> void b3Vector3::b3Vector3() [b3Vector3.h <1306:12 1306:14>]
REFERENCE_CALL: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) [b3Vector3.h <1307:6 1307:13>]
REFERENCE_CALL: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar) -> void b3Vector3::b3Vector3(b3Vector3 &&) [b3Vector3.h <1308:9 1308:11>]
REFERENCE_CALL: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> void b3Vector3::b3Vector3() [b3Vector3.h <1313:12 1313:14>]
REFERENCE_CALL: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> void b3Vector3::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &) [b3Vector3.h <1314:6 1314:13>]
REFERENCE_USAGE: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> float b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>)::w [b3Vector3.h <1315:6 1315:6>]
REFERENCE_USAGE: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>)::anonymous struct (b3Vector3.h<99:4>) b3Vector3::anonymous union (b3Vector3.h<96:9>):: [b3Vector3.h <1315:6 1315:6>]
REFERENCE_USAGE: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> b3Vector3::anonymous union (b3Vector3.h<96:9>) b3Vector3:: [b3Vector3.h <1315:6 1315:6>]
REFERENCE_CALL: b3Vector3 b3MakeVector3(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> void b3Vector3::b3Vector3(b3Vector3 &&) [b3Vector3.h <1316:9 1316:11>]
REFERENCE_CALL: b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> void b3Vector4::b3Vector4() [b3Vector3.h <1321:12 1321:14>]
REFERENCE_CALL: b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> void b3Vector4::setValue(const b3Scalar &, const b3Scalar &, const b3Scalar &, const b3Scalar &) [b3Vector3.h <1322:6 1322:13>]
REFERENCE_CALL: b3Vector4 b3MakeVector4(b3Scalar, b3Scalar, b3Scalar, b3Scalar) -> void b3Vector4::b3Vector4(b3Vector4 &&) [b3Vector3.h <1323:9 1323:11>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<b3AlignedObjectArray<typename T>::T, 16> b3AlignedObjectArray<typename T>::m_allocator -> b3AlignedAllocator<b3AlignedObjectArray<typename T>::T, 16> [b3AlignedObjectArray.h <49:2 49:19>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<typename T>::m_size -> int [b3AlignedObjectArray.h <51:2 51:4>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<typename T>::m_capacity -> int [b3AlignedObjectArray.h <52:2 52:4>]
REFERENCE_TYPE_USAGE: bool b3AlignedObjectArray<typename T>::m_ownsMemory -> bool [b3AlignedObjectArray.h <55:2 55:5>]
REFERENCE_TYPE_USAGE: b3AlignedObjectArray<T> & b3AlignedObjectArray<typename T>::operator=(const b3AlignedObjectArray<T> &) -> b3AlignedObjectArray<T> [b3AlignedObjectArray.h <59:18 59:37>]
REFERENCE_TYPE_USAGE: b3AlignedObjectArray<T> & b3AlignedObjectArray<typename T>::operator=(const b3AlignedObjectArray<T> &) -> b3AlignedObjectArray<T> [b3AlignedObjectArray.h <59:59 59:78>]
REFERENCE_CALL: b3AlignedObjectArray<T> & b3AlignedObjectArray<typename T>::operator=(const b3AlignedObjectArray<T> &) -> void b3AlignedObjectArray<typename T>::copyFromArray(const b3AlignedObjectArray<T> &) [b3AlignedObjectArray.h <61:3 61:15>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<typename T>::allocSize(int) -> int [b3AlignedObjectArray.h <70:19 70:21>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<typename T>::allocSize(int) -> int [b3AlignedObjectArray.h <70:33 70:35>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::copy(int, int, b3AlignedObjectArray<typename T>::T *) const -> void [b3AlignedObjectArray.h <74:19 74:22>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::copy(int, int, b3AlignedObjectArray<typename T>::T *) const -> int [b3AlignedObjectArray.h <74:29 74:31>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::copy(int, int, b3AlignedObjectArray<typename T>::T *) const -> int [b3AlignedObjectArray.h <74:39 74:41>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::copy(int, int, b3AlignedObjectArray<typename T>::T *) const -> int [b3AlignedObjectArray.h <76:4 76:6>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::copy(int, int, b3AlignedObjectArray<typename T>::T *) const -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <79:22 79:27>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::init() -> void [b3AlignedObjectArray.h <85:19 85:22>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::init() -> bool b3AlignedObjectArray<typename T>::m_ownsMemory [b3AlignedObjectArray.h <88:4 88:15>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::init() -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <89:4 89:9>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::init() -> int b3AlignedObjectArray<typename T>::m_size [b3AlignedObjectArray.h <90:4 90:9>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::init() -> int b3AlignedObjectArray<typename T>::m_capacity [b3AlignedObjectArray.h <91:4 91:13>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::destroy(int, int) -> void [b3AlignedObjectArray.h <93:19 93:22>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::destroy(int, int) -> int [b3AlignedObjectArray.h <93:32 93:34>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::destroy(int, int) -> int [b3AlignedObjectArray.h <93:42 93:44>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::destroy(int, int) -> int [b3AlignedObjectArray.h <95:4 95:6>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::destroy(int, int) -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <98:5 98:10>]
REFERENCE_TYPE_USAGE: void * b3AlignedObjectArray<typename T>::allocate(int) -> void [b3AlignedObjectArray.h <102:19 102:22>]
REFERENCE_TYPE_USAGE: void * b3AlignedObjectArray<typename T>::allocate(int) -> int [b3AlignedObjectArray.h <102:34 102:36>]
REFERENCE_USAGE: void * b3AlignedObjectArray<typename T>::allocate(int) -> b3AlignedAllocator<b3AlignedObjectArray<typename T>::T, 16> b3AlignedObjectArray<typename T>::m_allocator [b3AlignedObjectArray.h <105:12 105:22>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::deallocate() -> void [b3AlignedObjectArray.h <109:19 109:22>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::deallocate() -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <111:7 111:12>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::deallocate() -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <115:29 115:34>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::deallocate() -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <117:5 117:10>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::deallocate() -> bool b3AlignedObjectArray<typename T>::m_ownsMemory [b3AlignedObjectArray.h <113:9 113:20>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::deallocate() -> b3AlignedAllocator<b3AlignedObjectArray<typename T>::T, 16> b3AlignedObjectArray<typename T>::m_allocator [b3AlignedObjectArray.h <115:6 115:16>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::b3AlignedObjectArray<T>() -> void b3AlignedObjectArray<typename T>::init() [b3AlignedObjectArray.h <128:4 128:7>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::~b3AlignedObjectArray<T>() -> void b3AlignedObjectArray<typename T>::clear() [b3AlignedObjectArray.h <133:4 133:8>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::b3AlignedObjectArray<T>(const b3AlignedObjectArray<T> &) -> b3AlignedObjectArray<T> [b3AlignedObjectArray.h <137:30 137:49>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::b3AlignedObjectArray<T>(const b3AlignedObjectArray<T> &) -> void b3AlignedObjectArray<typename T>::init() [b3AlignedObjectArray.h <139:4 139:7>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::b3AlignedObjectArray<T>(const b3AlignedObjectArray<T> &) -> int [b3AlignedObjectArray.h <141:4 141:6>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::b3AlignedObjectArray<T>(const b3AlignedObjectArray<T> &) -> void b3AlignedObjectArray<typename T>::resize(int, const b3AlignedObjectArray<typename T>::T &) [b3AlignedObjectArray.h <142:4 142:9>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::b3AlignedObjectArray<T>(const b3AlignedObjectArray<T> &) -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <143:34 143:39>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<typename T>::size() const -> int [b3AlignedObjectArray.h <149:19 149:21>]
REFERENCE_USAGE: int b3AlignedObjectArray<typename T>::size() const -> int b3AlignedObjectArray<typename T>::m_size [b3AlignedObjectArray.h <151:11 151:16>]
REFERENCE_TYPE_USAGE: const b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::at(int) const -> int [b3AlignedObjectArray.h <154:31 154:33>]
REFERENCE_USAGE: const b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::at(int) const -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <158:11 158:16>]
REFERENCE_TYPE_USAGE: b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::at(int) -> int [b3AlignedObjectArray.h <161:25 161:27>]
REFERENCE_USAGE: b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::at(int) -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <165:11 165:16>]
REFERENCE_TYPE_USAGE: const b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::operator[](int) const -> int [b3AlignedObjectArray.h <168:39 168:41>]
REFERENCE_USAGE: const b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::operator[](int) const -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <172:11 172:16>]
REFERENCE_TYPE_USAGE: b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::operator[](int) -> int [b3AlignedObjectArray.h <175:33 175:35>]
REFERENCE_USAGE: b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::operator[](int) -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <179:11 179:16>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::clear() -> void [b3AlignedObjectArray.h <184:19 184:22>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::clear() -> void b3AlignedObjectArray<typename T>::destroy(int, int) [b3AlignedObjectArray.h <186:4 186:10>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::clear() -> int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <186:14 186:17>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::clear() -> void b3AlignedObjectArray<typename T>::deallocate() [b3AlignedObjectArray.h <188:4 188:13>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::clear() -> void b3AlignedObjectArray<typename T>::init() [b3AlignedObjectArray.h <190:4 190:7>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::pop_back() -> void [b3AlignedObjectArray.h <193:19 193:22>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::pop_back() -> int b3AlignedObjectArray<typename T>::m_size [b3AlignedObjectArray.h <196:4 196:9>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::pop_back() -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <197:4 197:9>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::pop_back() -> int b3AlignedObjectArray<typename T>::m_size [b3AlignedObjectArray.h <197:11 197:16>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::resizeNoInitialize(int) -> void [b3AlignedObjectArray.h <203:19 203:22>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::resizeNoInitialize(int) -> int [b3AlignedObjectArray.h <203:43 203:45>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::resizeNoInitialize(int) -> int [b3AlignedObjectArray.h <205:4 205:6>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::resizeNoInitialize(int) -> int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <205:18 205:21>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::resizeNoInitialize(int) -> int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <211:19 211:22>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::resizeNoInitialize(int) -> void b3AlignedObjectArray<typename T>::reserve(int) [b3AlignedObjectArray.h <213:6 213:12>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::resizeNoInitialize(int) -> int b3AlignedObjectArray<typename T>::m_size [b3AlignedObjectArray.h <217:4 217:9>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::resize(int, const b3AlignedObjectArray<typename T>::T &) -> void [b3AlignedObjectArray.h <220:19 220:22>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::resize(int, const b3AlignedObjectArray<typename T>::T &) -> int [b3AlignedObjectArray.h <220:31 220:33>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::resize(int, const b3AlignedObjectArray<typename T>::T &) -> int [b3AlignedObjectArray.h <222:4 222:6>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::resize(int, const b3AlignedObjectArray<typename T>::T &) -> int [b3AlignedObjectArray.h <226:9 226:11>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::resize(int, const b3AlignedObjectArray<typename T>::T &) -> int [b3AlignedObjectArray.h <237:10 237:12>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::resize(int, const b3AlignedObjectArray<typename T>::T &) -> int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <222:18 222:21>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::resize(int, const b3AlignedObjectArray<typename T>::T &) -> int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <232:19 232:22>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::resize(int, const b3AlignedObjectArray<typename T>::T &) -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <228:6 228:11>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::resize(int, const b3AlignedObjectArray<typename T>::T &) -> void b3AlignedObjectArray<typename T>::reserve(int) [b3AlignedObjectArray.h <234:6 234:12>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::resize(int, const b3AlignedObjectArray<typename T>::T &) -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <239:13 239:18>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::resize(int, const b3AlignedObjectArray<typename T>::T &) -> int b3AlignedObjectArray<typename T>::m_size [b3AlignedObjectArray.h <245:4 245:9>]
REFERENCE_TYPE_USAGE: b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::expandNonInitializing() -> int [b3AlignedObjectArray.h <249:4 249:6>]
REFERENCE_CALL: b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::expandNonInitializing() -> int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <249:13 249:16>]
REFERENCE_CALL: b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::expandNonInitializing() -> int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <252:24 252:27>]
REFERENCE_CALL: b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::expandNonInitializing() -> int b3AlignedObjectArray<typename T>::capacity() const [b3AlignedObjectArray.h <250:14 250:21>]
REFERENCE_CALL: b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::expandNonInitializing() -> void b3AlignedObjectArray<typename T>::reserve(int) [b3AlignedObjectArray.h <252:5 252:11>]
REFERENCE_CALL: b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::expandNonInitializing() -> int b3AlignedObjectArray<typename T>::allocSize(int) [b3AlignedObjectArray.h <252:14 252:22>]
REFERENCE_USAGE: b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::expandNonInitializing() -> int b3AlignedObjectArray<typename T>::m_size [b3AlignedObjectArray.h <254:4 254:9>]
REFERENCE_USAGE: b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::expandNonInitializing() -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <256:11 256:16>]
REFERENCE_TYPE_USAGE: b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::expand(const b3AlignedObjectArray<typename T>::T &) -> int [b3AlignedObjectArray.h <262:4 262:6>]
REFERENCE_CALL: b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::expand(const b3AlignedObjectArray<typename T>::T &) -> int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <262:13 262:16>]
REFERENCE_CALL: b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::expand(const b3AlignedObjectArray<typename T>::T &) -> int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <265:24 265:27>]
REFERENCE_CALL: b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::expand(const b3AlignedObjectArray<typename T>::T &) -> int b3AlignedObjectArray<typename T>::capacity() const [b3AlignedObjectArray.h <263:14 263:21>]
REFERENCE_CALL: b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::expand(const b3AlignedObjectArray<typename T>::T &) -> void b3AlignedObjectArray<typename T>::reserve(int) [b3AlignedObjectArray.h <265:5 265:11>]
REFERENCE_CALL: b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::expand(const b3AlignedObjectArray<typename T>::T &) -> int b3AlignedObjectArray<typename T>::allocSize(int) [b3AlignedObjectArray.h <265:14 265:22>]
REFERENCE_USAGE: b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::expand(const b3AlignedObjectArray<typename T>::T &) -> int b3AlignedObjectArray<typename T>::m_size [b3AlignedObjectArray.h <267:4 267:9>]
REFERENCE_USAGE: b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::expand(const b3AlignedObjectArray<typename T>::T &) -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <269:10 269:15>]
REFERENCE_USAGE: b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::expand(const b3AlignedObjectArray<typename T>::T &) -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <272:11 272:16>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::push_back(const b3AlignedObjectArray<typename T>::T &) -> void [b3AlignedObjectArray.h <276:19 276:22>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::push_back(const b3AlignedObjectArray<typename T>::T &) -> int [b3AlignedObjectArray.h <278:4 278:6>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::push_back(const b3AlignedObjectArray<typename T>::T &) -> int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <278:13 278:16>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::push_back(const b3AlignedObjectArray<typename T>::T &) -> int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <281:24 281:27>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::push_back(const b3AlignedObjectArray<typename T>::T &) -> int b3AlignedObjectArray<typename T>::capacity() const [b3AlignedObjectArray.h <279:14 279:21>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::push_back(const b3AlignedObjectArray<typename T>::T &) -> void b3AlignedObjectArray<typename T>::reserve(int) [b3AlignedObjectArray.h <281:5 281:11>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::push_back(const b3AlignedObjectArray<typename T>::T &) -> int b3AlignedObjectArray<typename T>::allocSize(int) [b3AlignedObjectArray.h <281:14 281:22>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::push_back(const b3AlignedObjectArray<typename T>::T &) -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <285:11 285:16>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::push_back(const b3AlignedObjectArray<typename T>::T &) -> int b3AlignedObjectArray<typename T>::m_size [b3AlignedObjectArray.h <285:18 285:23>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::push_back(const b3AlignedObjectArray<typename T>::T &) -> int b3AlignedObjectArray<typename T>::m_size [b3AlignedObjectArray.h <290:4 290:9>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<typename T>::capacity() const -> int [b3AlignedObjectArray.h <295:19 295:21>]
REFERENCE_USAGE: int b3AlignedObjectArray<typename T>::capacity() const -> int b3AlignedObjectArray<typename T>::m_capacity [b3AlignedObjectArray.h <297:11 297:20>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::reserve(int) -> void [b3AlignedObjectArray.h <300:19 300:22>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::reserve(int) -> int [b3AlignedObjectArray.h <300:32 300:34>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::reserve(int) -> int b3AlignedObjectArray<typename T>::capacity() const [b3AlignedObjectArray.h <302:8 302:15>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::reserve(int) -> void * b3AlignedObjectArray<typename T>::allocate(int) [b3AlignedObjectArray.h <304:16 304:23>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::reserve(int) -> void b3OutputErrorMessageVarArgsInternal(const char *) [b3AlignedObjectArray.h <308:6 308:12>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::reserve(int) -> int b3AlignedObjectArray<typename T>::m_size [b3AlignedObjectArray.h <310:6 310:11>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::reserve(int) -> void b3AlignedObjectArray<typename T>::copy(int, int, b3AlignedObjectArray<typename T>::T *) const [b3AlignedObjectArray.h <312:5 312:8>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::reserve(int) -> int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <312:13 312:16>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::reserve(int) -> int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <314:15 314:18>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::reserve(int) -> void b3AlignedObjectArray<typename T>::destroy(int, int) [b3AlignedObjectArray.h <314:5 314:11>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::reserve(int) -> void b3AlignedObjectArray<typename T>::deallocate() [b3AlignedObjectArray.h <316:5 316:14>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::reserve(int) -> bool b3AlignedObjectArray<typename T>::m_ownsMemory [b3AlignedObjectArray.h <319:5 319:16>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::reserve(int) -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <321:5 321:10>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::reserve(int) -> int b3AlignedObjectArray<typename T>::m_capacity [b3AlignedObjectArray.h <323:5 323:14>]
REFERENCE_TYPE_USAGE: bool b3AlignedObjectArray<typename T>::less::operator()(const b3AlignedObjectArray<typename T>::T &, const b3AlignedObjectArray<typename T>::T &) -> bool [b3AlignedObjectArray.h <333:5 333:8>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::quickSortInternal<typename L>(const L &, int, int) -> void [b3AlignedObjectArray.h <341:3 341:6>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::quickSortInternal<typename L>(const L &, int, int) -> int [b3AlignedObjectArray.h <341:47 341:49>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::quickSortInternal<typename L>(const L &, int, int) -> int [b3AlignedObjectArray.h <341:55 341:57>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::quickSortInternal<typename L>(const L &, int, int) -> int [b3AlignedObjectArray.h <345:4 345:6>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::quickSortInternal<typename L>(const L &, int, int) -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <346:8 346:13>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::quickSortInternal<typename L>(const L &, int, int) -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <351:24 351:29>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::quickSortInternal<typename L>(const L &, int, int) -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <353:26 353:31>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::quickSortInternal<typename L>(const L &, int, int) -> void b3AlignedObjectArray<typename T>::swap(int, int) [b3AlignedObjectArray.h <357:6 357:9>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::quickSort<typename L>(const L &) -> void [b3AlignedObjectArray.h <371:3 371:6>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::quickSort<typename L>(const L &) -> int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <374:8 374:11>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::quickSort<typename L>(const L &) -> int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <376:37 376:40>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::downHeap<typename L>(b3AlignedObjectArray<typename T>::T *, int, int, const L &) -> void [b3AlignedObjectArray.h <383:3 383:6>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::downHeap<typename L>(b3AlignedObjectArray<typename T>::T *, int, int, const L &) -> int [b3AlignedObjectArray.h <383:26 383:28>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::downHeap<typename L>(b3AlignedObjectArray<typename T>::T *, int, int, const L &) -> int [b3AlignedObjectArray.h <383:33 383:35>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::downHeap<typename L>(b3AlignedObjectArray<typename T>::T *, int, int, const L &) -> int [b3AlignedObjectArray.h <392:5 392:7>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::swap(int, int) -> void [b3AlignedObjectArray.h <413:3 413:6>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::swap(int, int) -> int [b3AlignedObjectArray.h <413:13 413:15>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::swap(int, int) -> int [b3AlignedObjectArray.h <413:24 413:26>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::swap(int, int) -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <421:13 421:18>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::swap(int, int) -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <422:4 422:9>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::swap(int, int) -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <422:21 422:26>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::swap(int, int) -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <423:4 423:9>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::heapSort<typename L>(const L &) -> void [b3AlignedObjectArray.h <429:2 429:5>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::heapSort<typename L>(const L &) -> int [b3AlignedObjectArray.h <432:3 432:5>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::heapSort<typename L>(const L &) -> int [b3AlignedObjectArray.h <433:3 433:5>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::heapSort<typename L>(const L &) -> int b3AlignedObjectArray<typename T>::m_size [b3AlignedObjectArray.h <433:11 433:16>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::heapSort<typename L>(const L &) -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <436:13 436:18>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::heapSort<typename L>(const L &) -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <447:13 447:18>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::heapSort<typename L>(const L &) -> void b3AlignedObjectArray<typename T>::swap(int, int) [b3AlignedObjectArray.h <442:4 442:7>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<typename T>::findBinarySearch(const b3AlignedObjectArray<typename T>::T &) const -> int [b3AlignedObjectArray.h <452:2 452:4>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<typename T>::findBinarySearch(const b3AlignedObjectArray<typename T>::T &) const -> int [b3AlignedObjectArray.h <454:3 454:5>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<typename T>::findBinarySearch(const b3AlignedObjectArray<typename T>::T &) const -> int [b3AlignedObjectArray.h <455:3 455:5>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<typename T>::findBinarySearch(const b3AlignedObjectArray<typename T>::T &) const -> int [b3AlignedObjectArray.h <459:4 459:6>]
REFERENCE_CALL: int b3AlignedObjectArray<typename T>::findBinarySearch(const b3AlignedObjectArray<typename T>::T &) const -> int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <455:14 455:17>]
REFERENCE_CALL: int b3AlignedObjectArray<typename T>::findBinarySearch(const b3AlignedObjectArray<typename T>::T &) const -> int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <467:10 467:13>]
REFERENCE_USAGE: int b3AlignedObjectArray<typename T>::findBinarySearch(const b3AlignedObjectArray<typename T>::T &) const -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <460:14 460:19>]
REFERENCE_USAGE: int b3AlignedObjectArray<typename T>::findBinarySearch(const b3AlignedObjectArray<typename T>::T &) const -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <462:19 462:24>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<typename T>::findLinearSearch(const b3AlignedObjectArray<typename T>::T &) const -> int [b3AlignedObjectArray.h <471:2 471:4>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<typename T>::findLinearSearch(const b3AlignedObjectArray<typename T>::T &) const -> int [b3AlignedObjectArray.h <473:3 473:5>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<typename T>::findLinearSearch(const b3AlignedObjectArray<typename T>::T &) const -> int [b3AlignedObjectArray.h <474:3 474:5>]
REFERENCE_CALL: int b3AlignedObjectArray<typename T>::findLinearSearch(const b3AlignedObjectArray<typename T>::T &) const -> int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <473:13 473:16>]
REFERENCE_CALL: int b3AlignedObjectArray<typename T>::findLinearSearch(const b3AlignedObjectArray<typename T>::T &) const -> int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <476:14 476:17>]
REFERENCE_USAGE: int b3AlignedObjectArray<typename T>::findLinearSearch(const b3AlignedObjectArray<typename T>::T &) const -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <478:8 478:13>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<typename T>::findLinearSearch2(const b3AlignedObjectArray<typename T>::T &) const -> int [b3AlignedObjectArray.h <487:5 487:7>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<typename T>::findLinearSearch2(const b3AlignedObjectArray<typename T>::T &) const -> int [b3AlignedObjectArray.h <489:9 489:11>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<typename T>::findLinearSearch2(const b3AlignedObjectArray<typename T>::T &) const -> int [b3AlignedObjectArray.h <490:9 490:11>]
REFERENCE_CALL: int b3AlignedObjectArray<typename T>::findLinearSearch2(const b3AlignedObjectArray<typename T>::T &) const -> int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <492:20 492:23>]
REFERENCE_USAGE: int b3AlignedObjectArray<typename T>::findLinearSearch2(const b3AlignedObjectArray<typename T>::T &) const -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <494:17 494:22>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::remove(const b3AlignedObjectArray<typename T>::T &) -> void [b3AlignedObjectArray.h <503:2 503:5>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::remove(const b3AlignedObjectArray<typename T>::T &) -> int [b3AlignedObjectArray.h <506:3 506:5>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::remove(const b3AlignedObjectArray<typename T>::T &) -> int b3AlignedObjectArray<typename T>::findLinearSearch(const b3AlignedObjectArray<typename T>::T &) const [b3AlignedObjectArray.h <506:19 506:34>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::remove(const b3AlignedObjectArray<typename T>::T &) -> int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <507:17 507:20>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::remove(const b3AlignedObjectArray<typename T>::T &) -> int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <509:20 509:23>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::remove(const b3AlignedObjectArray<typename T>::T &) -> void b3AlignedObjectArray<typename T>::swap(int, int) [b3AlignedObjectArray.h <509:4 509:7>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::remove(const b3AlignedObjectArray<typename T>::T &) -> void b3AlignedObjectArray<typename T>::pop_back() [b3AlignedObjectArray.h <510:4 510:11>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::initializeFromBuffer(void *, int, int) -> void [b3AlignedObjectArray.h <515:2 515:5>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::initializeFromBuffer(void *, int, int) -> void [b3AlignedObjectArray.h <515:28 515:31>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::initializeFromBuffer(void *, int, int) -> int [b3AlignedObjectArray.h <515:42 515:44>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::initializeFromBuffer(void *, int, int) -> int [b3AlignedObjectArray.h <515:52 515:54>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::initializeFromBuffer(void *, int, int) -> void b3AlignedObjectArray<typename T>::clear() [b3AlignedObjectArray.h <517:3 517:7>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::initializeFromBuffer(void *, int, int) -> bool b3AlignedObjectArray<typename T>::m_ownsMemory [b3AlignedObjectArray.h <518:3 518:14>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::initializeFromBuffer(void *, int, int) -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <519:3 519:8>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::initializeFromBuffer(void *, int, int) -> int b3AlignedObjectArray<typename T>::m_size [b3AlignedObjectArray.h <520:3 520:8>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::initializeFromBuffer(void *, int, int) -> int b3AlignedObjectArray<typename T>::m_capacity [b3AlignedObjectArray.h <521:3 521:12>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::copyFromArray(const b3AlignedObjectArray<T> &) -> void [b3AlignedObjectArray.h <524:2 524:5>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::copyFromArray(const b3AlignedObjectArray<T> &) -> b3AlignedObjectArray<T> [b3AlignedObjectArray.h <524:27 524:46>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<typename T>::copyFromArray(const b3AlignedObjectArray<T> &) -> int [b3AlignedObjectArray.h <526:3 526:5>]
REFERENCE_CALL: void b3AlignedObjectArray<typename T>::copyFromArray(const b3AlignedObjectArray<T> &) -> void b3AlignedObjectArray<typename T>::resize(int, const b3AlignedObjectArray<typename T>::T &) [b3AlignedObjectArray.h <527:3 527:8>]
REFERENCE_USAGE: void b3AlignedObjectArray<typename T>::copyFromArray(const b3AlignedObjectArray<T> &) -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <528:33 528:38>]
REFERENCE_TEMPLATE_SPECIALIZATION: b3AlignedObjectArray<b3Vector3> -> b3AlignedObjectArray<typename T> [b3AlignedObjectArray.h <47:7 47:26>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: b3AlignedAllocator<b3Vector3, 16> b3AlignedObjectArray<b3Vector3>::m_allocator -> b3AlignedAllocator<b3AlignedObjectArray<typename T>::T, 16> b3AlignedObjectArray<typename T>::m_allocator [b3AlignedObjectArray.h <49:29 49:39>]
REFERENCE_TYPE_USAGE: b3AlignedAllocator<b3Vector3, 16> b3AlignedObjectArray<b3Vector3>::m_allocator -> b3AlignedAllocator<b3Vector3, 16> [b3AlignedObjectArray.h <49:2 49:19>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: int b3AlignedObjectArray<b3Vector3>::m_size -> int b3AlignedObjectArray<typename T>::m_size [b3AlignedObjectArray.h <51:10 51:15>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<b3Vector3>::m_size -> int [b3AlignedObjectArray.h <51:2 51:4>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: int b3AlignedObjectArray<b3Vector3>::m_capacity -> int b3AlignedObjectArray<typename T>::m_capacity [b3AlignedObjectArray.h <52:10 52:19>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<b3Vector3>::m_capacity -> int [b3AlignedObjectArray.h <52:2 52:4>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: b3Vector3 * b3AlignedObjectArray<b3Vector3>::m_data -> b3AlignedObjectArray<typename T>::T * b3AlignedObjectArray<typename T>::m_data [b3AlignedObjectArray.h <53:9 53:14>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: bool b3AlignedObjectArray<b3Vector3>::m_ownsMemory -> bool b3AlignedObjectArray<typename T>::m_ownsMemory [b3AlignedObjectArray.h <55:10 55:21>]
REFERENCE_TYPE_USAGE: bool b3AlignedObjectArray<b3Vector3>::m_ownsMemory -> bool [b3AlignedObjectArray.h <55:2 55:5>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: b3AlignedObjectArray<b3Vector3> & b3AlignedObjectArray<b3Vector3>::operator=(const b3AlignedObjectArray<b3Vector3> &) -> b3AlignedObjectArray<T> & b3AlignedObjectArray<typename T>::operator=(const b3AlignedObjectArray<T> &) [b3AlignedObjectArray.h <59:43 59:50>]
REFERENCE_TYPE_USAGE: b3AlignedObjectArray<b3Vector3> & b3AlignedObjectArray<b3Vector3>::operator=(const b3AlignedObjectArray<b3Vector3> &) -> b3AlignedObjectArray<b3Vector3> [b3AlignedObjectArray.h <59:18 59:37>]
REFERENCE_TYPE_USAGE: b3AlignedObjectArray<b3Vector3> & b3AlignedObjectArray<b3Vector3>::operator=(const b3AlignedObjectArray<b3Vector3> &) -> b3AlignedObjectArray<b3Vector3> [b3AlignedObjectArray.h <59:59 59:78>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: int b3AlignedObjectArray<b3Vector3>::allocSize(int) -> int b3AlignedObjectArray<typename T>::allocSize(int) [b3AlignedObjectArray.h <70:23 70:31>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<b3Vector3>::allocSize(int) -> int [b3AlignedObjectArray.h <70:19 70:21>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<b3Vector3>::allocSize(int) -> int [b3AlignedObjectArray.h <70:33 70:35>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: void b3AlignedObjectArray<b3Vector3>::copy(int, int, b3Vector3 *) const -> void b3AlignedObjectArray<typename T>::copy(int, int, b3AlignedObjectArray<typename T>::T *) const [b3AlignedObjectArray.h <74:24 74:27>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::copy(int, int, b3Vector3 *) const -> void [b3AlignedObjectArray.h <74:19 74:22>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::copy(int, int, b3Vector3 *) const -> int [b3AlignedObjectArray.h <74:29 74:31>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::copy(int, int, b3Vector3 *) const -> int [b3AlignedObjectArray.h <74:39 74:41>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::copy(int, int, b3Vector3 *) const -> int [b3AlignedObjectArray.h <76:4 76:6>]
REFERENCE_CALL: void b3AlignedObjectArray<b3Vector3>::copy(int, int, b3Vector3 *) const -> void b3Vector3::b3Vector3(const b3Vector3 &) [b3AlignedObjectArray.h <79:20 79:20>]
REFERENCE_USAGE: void b3AlignedObjectArray<b3Vector3>::copy(int, int, b3Vector3 *) const -> b3Vector3 * b3AlignedObjectArray<b3Vector3>::m_data [b3AlignedObjectArray.h <79:22 79:27>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: void b3AlignedObjectArray<b3Vector3>::init() -> void b3AlignedObjectArray<typename T>::init() [b3AlignedObjectArray.h <85:24 85:27>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::init() -> void [b3AlignedObjectArray.h <85:19 85:22>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: void b3AlignedObjectArray<b3Vector3>::destroy(int, int) -> void b3AlignedObjectArray<typename T>::destroy(int, int) [b3AlignedObjectArray.h <93:24 93:30>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::destroy(int, int) -> void [b3AlignedObjectArray.h <93:19 93:22>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::destroy(int, int) -> int [b3AlignedObjectArray.h <93:32 93:34>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::destroy(int, int) -> int [b3AlignedObjectArray.h <93:42 93:44>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::destroy(int, int) -> int [b3AlignedObjectArray.h <95:4 95:6>]
REFERENCE_CALL: void b3AlignedObjectArray<b3Vector3>::destroy(int, int) -> void b3Vector3::~b3Vector3() [b3AlignedObjectArray.h <98:16 98:16>]
REFERENCE_USAGE: void b3AlignedObjectArray<b3Vector3>::destroy(int, int) -> b3Vector3 * b3AlignedObjectArray<b3Vector3>::m_data [b3AlignedObjectArray.h <98:5 98:10>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: void * b3AlignedObjectArray<b3Vector3>::allocate(int) -> void * b3AlignedObjectArray<typename T>::allocate(int) [b3AlignedObjectArray.h <102:25 102:32>]
REFERENCE_TYPE_USAGE: void * b3AlignedObjectArray<b3Vector3>::allocate(int) -> void [b3AlignedObjectArray.h <102:19 102:22>]
REFERENCE_TYPE_USAGE: void * b3AlignedObjectArray<b3Vector3>::allocate(int) -> int [b3AlignedObjectArray.h <102:34 102:36>]
REFERENCE_CALL: void * b3AlignedObjectArray<b3Vector3>::allocate(int) -> b3AlignedAllocator<b3Vector3, 16>::pointer b3AlignedAllocator<b3Vector3, 16>::allocate(btSizeType, b3AlignedAllocator<b3Vector3, 16>::const_pointer *) [b3AlignedObjectArray.h <105:24 105:31>]
REFERENCE_USAGE: void * b3AlignedObjectArray<b3Vector3>::allocate(int) -> b3AlignedAllocator<b3Vector3, 16> b3AlignedObjectArray<b3Vector3>::m_allocator [b3AlignedObjectArray.h <105:12 105:22>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: void b3AlignedObjectArray<b3Vector3>::deallocate() -> void b3AlignedObjectArray<typename T>::deallocate() [b3AlignedObjectArray.h <109:24 109:33>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::deallocate() -> void [b3AlignedObjectArray.h <109:19 109:22>]
REFERENCE_USAGE: void b3AlignedObjectArray<b3Vector3>::deallocate() -> b3Vector3 * b3AlignedObjectArray<b3Vector3>::m_data [b3AlignedObjectArray.h <111:7 111:12>]
REFERENCE_USAGE: void b3AlignedObjectArray<b3Vector3>::deallocate() -> b3Vector3 * b3AlignedObjectArray<b3Vector3>::m_data [b3AlignedObjectArray.h <115:29 115:34>]
REFERENCE_USAGE: void b3AlignedObjectArray<b3Vector3>::deallocate() -> b3Vector3 * b3AlignedObjectArray<b3Vector3>::m_data [b3AlignedObjectArray.h <117:5 117:10>]
REFERENCE_USAGE: void b3AlignedObjectArray<b3Vector3>::deallocate() -> bool b3AlignedObjectArray<b3Vector3>::m_ownsMemory [b3AlignedObjectArray.h <113:9 113:20>]
REFERENCE_CALL: void b3AlignedObjectArray<b3Vector3>::deallocate() -> void b3AlignedAllocator<b3Vector3, 16>::deallocate(b3AlignedAllocator<b3Vector3, 16>::pointer) [b3AlignedObjectArray.h <115:18 115:27>]
REFERENCE_USAGE: void b3AlignedObjectArray<b3Vector3>::deallocate() -> b3AlignedAllocator<b3Vector3, 16> b3AlignedObjectArray<b3Vector3>::m_allocator [b3AlignedObjectArray.h <115:6 115:16>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: void b3AlignedObjectArray<b3Vector3>::b3AlignedObjectArray() -> void b3AlignedObjectArray<typename T>::b3AlignedObjectArray<T>() [b3AlignedObjectArray.h <126:3 126:22>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: void b3AlignedObjectArray<b3Vector3>::~b3AlignedObjectArray() -> void b3AlignedObjectArray<typename T>::~b3AlignedObjectArray<T>() [b3AlignedObjectArray.h <131:3 131:3>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: void b3AlignedObjectArray<b3Vector3>::b3AlignedObjectArray(const b3AlignedObjectArray<b3Vector3> &) -> void b3AlignedObjectArray<typename T>::b3AlignedObjectArray<T>(const b3AlignedObjectArray<T> &) [b3AlignedObjectArray.h <137:3 137:22>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::b3AlignedObjectArray(const b3AlignedObjectArray<b3Vector3> &) -> b3AlignedObjectArray<b3Vector3> [b3AlignedObjectArray.h <137:30 137:49>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: int b3AlignedObjectArray<b3Vector3>::size() const -> int b3AlignedObjectArray<typename T>::size() const [b3AlignedObjectArray.h <149:23 149:26>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<b3Vector3>::size() const -> int [b3AlignedObjectArray.h <149:19 149:21>]
REFERENCE_USAGE: int b3AlignedObjectArray<b3Vector3>::size() const -> int b3AlignedObjectArray<b3Vector3>::m_size [b3AlignedObjectArray.h <151:11 151:16>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: const b3Vector3 & b3AlignedObjectArray<b3Vector3>::at(int) const -> const b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::at(int) const [b3AlignedObjectArray.h <154:28 154:29>]
REFERENCE_TYPE_USAGE: const b3Vector3 & b3AlignedObjectArray<b3Vector3>::at(int) const -> int [b3AlignedObjectArray.h <154:31 154:33>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: b3Vector3 & b3AlignedObjectArray<b3Vector3>::at(int) -> b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::at(int) [b3AlignedObjectArray.h <161:22 161:23>]
REFERENCE_TYPE_USAGE: b3Vector3 & b3AlignedObjectArray<b3Vector3>::at(int) -> int [b3AlignedObjectArray.h <161:25 161:27>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: const b3Vector3 & b3AlignedObjectArray<b3Vector3>::operator[](int) const -> const b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::operator[](int) const [b3AlignedObjectArray.h <168:28 168:35>]
REFERENCE_TYPE_USAGE: const b3Vector3 & b3AlignedObjectArray<b3Vector3>::operator[](int) const -> int [b3AlignedObjectArray.h <168:39 168:41>]
REFERENCE_USAGE: const b3Vector3 & b3AlignedObjectArray<b3Vector3>::operator[](int) const -> b3Vector3 * b3AlignedObjectArray<b3Vector3>::m_data [b3AlignedObjectArray.h <172:11 172:16>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: b3Vector3 & b3AlignedObjectArray<b3Vector3>::operator[](int) -> b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::operator[](int) [b3AlignedObjectArray.h <175:22 175:29>]
REFERENCE_TYPE_USAGE: b3Vector3 & b3AlignedObjectArray<b3Vector3>::operator[](int) -> int [b3AlignedObjectArray.h <175:33 175:35>]
REFERENCE_USAGE: b3Vector3 & b3AlignedObjectArray<b3Vector3>::operator[](int) -> b3Vector3 * b3AlignedObjectArray<b3Vector3>::m_data [b3AlignedObjectArray.h <179:11 179:16>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: void b3AlignedObjectArray<b3Vector3>::clear() -> void b3AlignedObjectArray<typename T>::clear() [b3AlignedObjectArray.h <184:24 184:28>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::clear() -> void [b3AlignedObjectArray.h <184:19 184:22>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: void b3AlignedObjectArray<b3Vector3>::pop_back() -> void b3AlignedObjectArray<typename T>::pop_back() [b3AlignedObjectArray.h <193:24 193:31>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::pop_back() -> void [b3AlignedObjectArray.h <193:19 193:22>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: void b3AlignedObjectArray<b3Vector3>::resizeNoInitialize(int) -> void b3AlignedObjectArray<typename T>::resizeNoInitialize(int) [b3AlignedObjectArray.h <203:24 203:41>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::resizeNoInitialize(int) -> void [b3AlignedObjectArray.h <203:19 203:22>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::resizeNoInitialize(int) -> int [b3AlignedObjectArray.h <203:43 203:45>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: void b3AlignedObjectArray<b3Vector3>::resize(int, const b3Vector3 &) -> void b3AlignedObjectArray<typename T>::resize(int, const b3AlignedObjectArray<typename T>::T &) [b3AlignedObjectArray.h <220:24 220:29>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::resize(int, const b3Vector3 &) -> void [b3AlignedObjectArray.h <220:19 220:22>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::resize(int, const b3Vector3 &) -> int [b3AlignedObjectArray.h <220:31 220:33>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: b3Vector3 & b3AlignedObjectArray<b3Vector3>::expandNonInitializing() -> b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::expandNonInitializing() [b3AlignedObjectArray.h <247:23 247:43>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: b3Vector3 & b3AlignedObjectArray<b3Vector3>::expand(const b3Vector3 &) -> b3AlignedObjectArray<typename T>::T & b3AlignedObjectArray<typename T>::expand(const b3AlignedObjectArray<typename T>::T &) [b3AlignedObjectArray.h <260:23 260:28>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: void b3AlignedObjectArray<b3Vector3>::push_back(const b3Vector3 &) -> void b3AlignedObjectArray<typename T>::push_back(const b3AlignedObjectArray<typename T>::T &) [b3AlignedObjectArray.h <276:24 276:32>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::push_back(const b3Vector3 &) -> void [b3AlignedObjectArray.h <276:19 276:22>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::push_back(const b3Vector3 &) -> int [b3AlignedObjectArray.h <278:4 278:6>]
REFERENCE_CALL: void b3AlignedObjectArray<b3Vector3>::push_back(const b3Vector3 &) -> int b3AlignedObjectArray<b3Vector3>::size() const [b3AlignedObjectArray.h <278:13 278:16>]
REFERENCE_CALL: void b3AlignedObjectArray<b3Vector3>::push_back(const b3Vector3 &) -> int b3AlignedObjectArray<b3Vector3>::size() const [b3AlignedObjectArray.h <281:24 281:27>]
REFERENCE_CALL: void b3AlignedObjectArray<b3Vector3>::push_back(const b3Vector3 &) -> int b3AlignedObjectArray<b3Vector3>::capacity() const [b3AlignedObjectArray.h <279:14 279:21>]
REFERENCE_CALL: void b3AlignedObjectArray<b3Vector3>::push_back(const b3Vector3 &) -> void b3AlignedObjectArray<b3Vector3>::reserve(int) [b3AlignedObjectArray.h <281:5 281:11>]
REFERENCE_CALL: void b3AlignedObjectArray<b3Vector3>::push_back(const b3Vector3 &) -> int b3AlignedObjectArray<b3Vector3>::allocSize(int) [b3AlignedObjectArray.h <281:14 281:22>]
REFERENCE_CALL: void b3AlignedObjectArray<b3Vector3>::push_back(const b3Vector3 &) -> void b3Vector3::b3Vector3(const b3Vector3 &) [b3AlignedObjectArray.h <285:28 285:28>]
REFERENCE_USAGE: void b3AlignedObjectArray<b3Vector3>::push_back(const b3Vector3 &) -> b3Vector3 * b3AlignedObjectArray<b3Vector3>::m_data [b3AlignedObjectArray.h <285:11 285:16>]
REFERENCE_USAGE: void b3AlignedObjectArray<b3Vector3>::push_back(const b3Vector3 &) -> int b3AlignedObjectArray<b3Vector3>::m_size [b3AlignedObjectArray.h <285:18 285:23>]
REFERENCE_USAGE: void b3AlignedObjectArray<b3Vector3>::push_back(const b3Vector3 &) -> int b3AlignedObjectArray<b3Vector3>::m_size [b3AlignedObjectArray.h <290:4 290:9>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: int b3AlignedObjectArray<b3Vector3>::capacity() const -> int b3AlignedObjectArray<typename T>::capacity() const [b3AlignedObjectArray.h <295:23 295:30>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<b3Vector3>::capacity() const -> int [b3AlignedObjectArray.h <295:19 295:21>]
REFERENCE_USAGE: int b3AlignedObjectArray<b3Vector3>::capacity() const -> int b3AlignedObjectArray<b3Vector3>::m_capacity [b3AlignedObjectArray.h <297:11 297:20>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: void b3AlignedObjectArray<b3Vector3>::reserve(int) -> void b3AlignedObjectArray<typename T>::reserve(int) [b3AlignedObjectArray.h <300:24 300:30>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::reserve(int) -> void [b3AlignedObjectArray.h <300:19 300:22>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::reserve(int) -> int [b3AlignedObjectArray.h <300:32 300:34>]
REFERENCE_CALL: void b3AlignedObjectArray<b3Vector3>::reserve(int) -> int b3AlignedObjectArray<b3Vector3>::capacity() const [b3AlignedObjectArray.h <302:8 302:15>]
REFERENCE_CALL: void b3AlignedObjectArray<b3Vector3>::reserve(int) -> void * b3AlignedObjectArray<b3Vector3>::allocate(int) [b3AlignedObjectArray.h <304:16 304:23>]
REFERENCE_CALL: void b3AlignedObjectArray<b3Vector3>::reserve(int) -> void b3OutputErrorMessageVarArgsInternal(const char *) [b3AlignedObjectArray.h <308:6 308:12>]
REFERENCE_USAGE: void b3AlignedObjectArray<b3Vector3>::reserve(int) -> int b3AlignedObjectArray<b3Vector3>::m_size [b3AlignedObjectArray.h <310:6 310:11>]
REFERENCE_CALL: void b3AlignedObjectArray<b3Vector3>::reserve(int) -> void b3AlignedObjectArray<b3Vector3>::copy(int, int, b3Vector3 *) const [b3AlignedObjectArray.h <312:5 312:8>]
REFERENCE_CALL: void b3AlignedObjectArray<b3Vector3>::reserve(int) -> int b3AlignedObjectArray<b3Vector3>::size() const [b3AlignedObjectArray.h <312:13 312:16>]
REFERENCE_CALL: void b3AlignedObjectArray<b3Vector3>::reserve(int) -> int b3AlignedObjectArray<b3Vector3>::size() const [b3AlignedObjectArray.h <314:15 314:18>]
REFERENCE_CALL: void b3AlignedObjectArray<b3Vector3>::reserve(int) -> void b3AlignedObjectArray<b3Vector3>::destroy(int, int) [b3AlignedObjectArray.h <314:5 314:11>]
REFERENCE_CALL: void b3AlignedObjectArray<b3Vector3>::reserve(int) -> void b3AlignedObjectArray<b3Vector3>::deallocate() [b3AlignedObjectArray.h <316:5 316:14>]
REFERENCE_USAGE: void b3AlignedObjectArray<b3Vector3>::reserve(int) -> bool b3AlignedObjectArray<b3Vector3>::m_ownsMemory [b3AlignedObjectArray.h <319:5 319:16>]
REFERENCE_USAGE: void b3AlignedObjectArray<b3Vector3>::reserve(int) -> b3Vector3 * b3AlignedObjectArray<b3Vector3>::m_data [b3AlignedObjectArray.h <321:5 321:10>]
REFERENCE_USAGE: void b3AlignedObjectArray<b3Vector3>::reserve(int) -> int b3AlignedObjectArray<b3Vector3>::m_capacity [b3AlignedObjectArray.h <323:5 323:14>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: b3AlignedObjectArray<b3Vector3>::less -> b3AlignedObjectArray<typename T>::less [b3AlignedObjectArray.h <329:9 329:12>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::quickSortInternal<typename L>(const L &, int, int) -> void [b3AlignedObjectArray.h <341:3 341:6>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::quickSortInternal<typename L>(const L &, int, int) -> int [b3AlignedObjectArray.h <341:47 341:49>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::quickSortInternal<typename L>(const L &, int, int) -> int [b3AlignedObjectArray.h <341:55 341:57>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::quickSort<typename L>(const L &) -> void [b3AlignedObjectArray.h <371:3 371:6>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::downHeap<typename L>(b3Vector3 *, int, int, const L &) -> void [b3AlignedObjectArray.h <383:3 383:6>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::downHeap<typename L>(b3Vector3 *, int, int, const L &) -> int [b3AlignedObjectArray.h <383:26 383:28>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::downHeap<typename L>(b3Vector3 *, int, int, const L &) -> int [b3AlignedObjectArray.h <383:33 383:35>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: void b3AlignedObjectArray<b3Vector3>::swap(int, int) -> void b3AlignedObjectArray<typename T>::swap(int, int) [b3AlignedObjectArray.h <413:8 413:11>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::swap(int, int) -> void [b3AlignedObjectArray.h <413:3 413:6>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::swap(int, int) -> int [b3AlignedObjectArray.h <413:13 413:15>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::swap(int, int) -> int [b3AlignedObjectArray.h <413:24 413:26>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::heapSort<typename L>(const L &) -> void [b3AlignedObjectArray.h <429:2 429:5>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: int b3AlignedObjectArray<b3Vector3>::findBinarySearch(const b3Vector3 &) const -> int b3AlignedObjectArray<typename T>::findBinarySearch(const b3AlignedObjectArray<typename T>::T &) const [b3AlignedObjectArray.h <452:6 452:21>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<b3Vector3>::findBinarySearch(const b3Vector3 &) const -> int [b3AlignedObjectArray.h <452:2 452:4>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: int b3AlignedObjectArray<b3Vector3>::findLinearSearch(const b3Vector3 &) const -> int b3AlignedObjectArray<typename T>::findLinearSearch(const b3AlignedObjectArray<typename T>::T &) const [b3AlignedObjectArray.h <471:6 471:21>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<b3Vector3>::findLinearSearch(const b3Vector3 &) const -> int [b3AlignedObjectArray.h <471:2 471:4>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: int b3AlignedObjectArray<b3Vector3>::findLinearSearch2(const b3Vector3 &) const -> int b3AlignedObjectArray<typename T>::findLinearSearch2(const b3AlignedObjectArray<typename T>::T &) const [b3AlignedObjectArray.h <487:9 487:25>]
REFERENCE_TYPE_USAGE: int b3AlignedObjectArray<b3Vector3>::findLinearSearch2(const b3Vector3 &) const -> int [b3AlignedObjectArray.h <487:5 487:7>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: void b3AlignedObjectArray<b3Vector3>::remove(const b3Vector3 &) -> void b3AlignedObjectArray<typename T>::remove(const b3AlignedObjectArray<typename T>::T &) [b3AlignedObjectArray.h <503:7 503:12>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::remove(const b3Vector3 &) -> void [b3AlignedObjectArray.h <503:2 503:5>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: void b3AlignedObjectArray<b3Vector3>::initializeFromBuffer(void *, int, int) -> void b3AlignedObjectArray<typename T>::initializeFromBuffer(void *, int, int) [b3AlignedObjectArray.h <515:7 515:26>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::initializeFromBuffer(void *, int, int) -> void [b3AlignedObjectArray.h <515:2 515:5>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::initializeFromBuffer(void *, int, int) -> void [b3AlignedObjectArray.h <515:28 515:31>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::initializeFromBuffer(void *, int, int) -> int [b3AlignedObjectArray.h <515:42 515:44>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::initializeFromBuffer(void *, int, int) -> int [b3AlignedObjectArray.h <515:52 515:54>]
REFERENCE_TEMPLATE_MEMBER_SPECIALIZATION: void b3AlignedObjectArray<b3Vector3>::copyFromArray(const b3AlignedObjectArray<b3Vector3> &) -> void b3AlignedObjectArray<typename T>::copyFromArray(const b3AlignedObjectArray<T> &) [b3AlignedObjectArray.h <524:7 524:19>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::copyFromArray(const b3AlignedObjectArray<b3Vector3> &) -> void [b3AlignedObjectArray.h <524:2 524:5>]
REFERENCE_TYPE_USAGE: void b3AlignedObjectArray<b3Vector3>::copyFromArray(const b3AlignedObjectArray<b3Vector3> &) -> b3AlignedObjectArray<b3Vector3> [b3AlignedObjectArray.h <524:27 524:46>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> void [b3GeometryUtil.cpp <81:1 81:4>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> void [b3GeometryUtil.h <28:10 28:13>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3AlignedObjectArray<b3Vector3> [b3GeometryUtil.cpp <81:52 81:71>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3AlignedObjectArray<b3Vector3> [b3GeometryUtil.cpp <81:95 81:114>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3AlignedObjectArray<b3Vector3> [b3GeometryUtil.h <28:45 28:64>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3AlignedObjectArray<b3Vector3> [b3GeometryUtil.h <28:88 28:107>]
REFERENCE_TEMPLATE_ARGUMENT: b3AlignedObjectArray<b3Vector3> -> b3Vector3 [b3GeometryUtil.cpp <33:69 33:77>]
REFERENCE_TEMPLATE_ARGUMENT: b3AlignedObjectArray<b3Vector3> -> b3Vector3 [b3GeometryUtil.cpp <50:102 50:110>]
REFERENCE_TEMPLATE_ARGUMENT: b3AlignedObjectArray<b3Vector3> -> b3Vector3 [b3GeometryUtil.cpp <65:73 65:81>]
REFERENCE_TEMPLATE_ARGUMENT: b3AlignedObjectArray<b3Vector3> -> b3Vector3 [b3GeometryUtil.cpp <67:73 67:81>]
REFERENCE_TEMPLATE_ARGUMENT: b3AlignedObjectArray<b3Vector3> -> b3Vector3 [b3GeometryUtil.cpp <81:73 81:81>]
REFERENCE_TEMPLATE_ARGUMENT: b3AlignedObjectArray<b3Vector3> -> b3Vector3 [b3GeometryUtil.cpp <81:116 81:124>]
REFERENCE_TEMPLATE_ARGUMENT: b3AlignedObjectArray<b3Vector3> -> b3Vector3 [b3GeometryUtil.cpp <129:79 129:87>]
REFERENCE_TEMPLATE_ARGUMENT: b3AlignedObjectArray<b3Vector3> -> b3Vector3 [b3GeometryUtil.cpp <129:129 129:137>]
REFERENCE_TEMPLATE_ARGUMENT: b3AlignedObjectArray<b3Vector3> -> b3Vector3 [b3GeometryUtil.h <28:66 28:74>]
REFERENCE_TEMPLATE_ARGUMENT: b3AlignedObjectArray<b3Vector3> -> b3Vector3 [b3GeometryUtil.h <28:109 28:117>]
REFERENCE_TEMPLATE_ARGUMENT: b3AlignedObjectArray<b3Vector3> -> b3Vector3 [b3GeometryUtil.h <30:72 30:80>]
REFERENCE_TEMPLATE_ARGUMENT: b3AlignedObjectArray<b3Vector3> -> b3Vector3 [b3GeometryUtil.h <30:122 30:130>]
REFERENCE_TEMPLATE_ARGUMENT: b3AlignedObjectArray<b3Vector3> -> b3Vector3 [b3GeometryUtil.h <32:51 32:59>]
REFERENCE_TEMPLATE_ARGUMENT: b3AlignedObjectArray<b3Vector3> -> b3Vector3 [b3GeometryUtil.h <34:62 34:70>]
REFERENCE_TEMPLATE_ARGUMENT: b3AlignedObjectArray<b3Vector3> -> b3Vector3 [b3GeometryUtil.h <36:95 36:103>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.cpp <81:73 81:81>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.cpp <81:116 81:124>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.cpp <87:9 87:17>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.cpp <92:10 92:18>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.cpp <97:11 97:19>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.cpp <99:5 99:13>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.h <28:66 28:74>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.h <28:109 28:117>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> void [b3GeometryUtil.cpp <129:1 129:4>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> void [b3GeometryUtil.h <30:10 30:13>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3AlignedObjectArray<b3Vector3> [b3GeometryUtil.cpp <129:58 129:77>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3AlignedObjectArray<b3Vector3> [b3GeometryUtil.cpp <129:108 129:127>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3AlignedObjectArray<b3Vector3> [b3GeometryUtil.h <30:51 30:70>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3AlignedObjectArray<b3Vector3> [b3GeometryUtil.h <30:101 30:120>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.cpp <129:79 129:87>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.cpp <129:129 129:137>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.cpp <135:9 135:17>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.cpp <140:10 140:18>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.cpp <145:11 145:19>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.cpp <147:5 147:13>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.cpp <148:5 148:13>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.cpp <149:5 149:13>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.cpp <169:7 169:15>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.h <30:72 30:80>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.h <30:122 30:130>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::isInside(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> bool [b3GeometryUtil.h <32:10 32:13>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::isInside(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> b3AlignedObjectArray<b3Vector3> [b3GeometryUtil.h <32:30 32:49>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::isInside(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> b3Vector3 [b3GeometryUtil.h <32:51 32:59>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::isInside(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> b3Vector3 [b3GeometryUtil.h <32:79 32:87>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::isInside(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> b3Scalar [b3GeometryUtil.h <32:103 32:110>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::isPointInsidePlanes(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> bool [b3GeometryUtil.cpp <33:1 33:4>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::isPointInsidePlanes(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> bool [b3GeometryUtil.h <34:10 34:13>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::isPointInsidePlanes(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> b3AlignedObjectArray<b3Vector3> [b3GeometryUtil.cpp <33:48 33:67>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::isPointInsidePlanes(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> b3AlignedObjectArray<b3Vector3> [b3GeometryUtil.h <34:41 34:60>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::isPointInsidePlanes(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> b3Vector3 [b3GeometryUtil.cpp <33:69 33:77>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::isPointInsidePlanes(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> b3Vector3 [b3GeometryUtil.cpp <33:103 33:111>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::isPointInsidePlanes(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> b3Vector3 [b3GeometryUtil.cpp <38:9 38:17>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::isPointInsidePlanes(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> b3Vector3 [b3GeometryUtil.h <34:62 34:70>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::isPointInsidePlanes(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> b3Vector3 [b3GeometryUtil.h <34:96 34:104>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::isPointInsidePlanes(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> b3Scalar [b3GeometryUtil.cpp <33:121 33:128>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::isPointInsidePlanes(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> b3Scalar [b3GeometryUtil.cpp <39:3 39:10>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::isPointInsidePlanes(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> b3Scalar [b3GeometryUtil.cpp <39:19 39:26>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::isPointInsidePlanes(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> b3Scalar [b3GeometryUtil.cpp <39:43 39:50>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::isPointInsidePlanes(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> b3Scalar [b3GeometryUtil.cpp <40:12 40:19>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::isPointInsidePlanes(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> b3Scalar [b3GeometryUtil.h <34:114 34:121>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::areVerticesBehindPlane(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &, b3Scalar) -> bool [b3GeometryUtil.cpp <50:1 50:4>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::areVerticesBehindPlane(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &, b3Scalar) -> bool [b3GeometryUtil.h <36:10 36:13>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::areVerticesBehindPlane(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &, b3Scalar) -> b3Vector3 [b3GeometryUtil.cpp <50:51 50:59>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::areVerticesBehindPlane(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &, b3Scalar) -> b3Vector3 [b3GeometryUtil.cpp <50:102 50:110>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::areVerticesBehindPlane(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &, b3Scalar) -> b3Vector3 [b3GeometryUtil.cpp <55:9 55:17>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::areVerticesBehindPlane(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &, b3Scalar) -> b3Vector3 [b3GeometryUtil.h <36:44 36:52>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::areVerticesBehindPlane(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &, b3Scalar) -> b3Vector3 [b3GeometryUtil.h <36:95 36:103>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::areVerticesBehindPlane(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &, b3Scalar) -> b3AlignedObjectArray<b3Vector3> [b3GeometryUtil.cpp <50:81 50:100>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::areVerticesBehindPlane(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &, b3Scalar) -> b3AlignedObjectArray<b3Vector3> [b3GeometryUtil.h <36:74 36:93>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::areVerticesBehindPlane(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &, b3Scalar) -> b3Scalar [b3GeometryUtil.cpp <50:124 50:131>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::areVerticesBehindPlane(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &, b3Scalar) -> b3Scalar [b3GeometryUtil.cpp <56:3 56:10>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::areVerticesBehindPlane(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &, b3Scalar) -> b3Scalar [b3GeometryUtil.cpp <56:19 56:26>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::areVerticesBehindPlane(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &, b3Scalar) -> b3Scalar [b3GeometryUtil.cpp <56:49 56:56>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::areVerticesBehindPlane(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &, b3Scalar) -> b3Scalar [b3GeometryUtil.cpp <57:12 57:19>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::areVerticesBehindPlane(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &, b3Scalar) -> b3Scalar [b3GeometryUtil.h <36:117 36:124>]
REFERENCE_TYPE_USAGE: void b3BulletMathProbe() -> void [b3GeometryUtil.cpp <27:2 27:5>]
REFERENCE_TYPE_USAGE: void b3BulletMathProbe() -> void [b3GeometryUtil.cpp <29:2 29:5>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::isPointInsidePlanes(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> int [b3GeometryUtil.cpp <35:2 35:4>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::isPointInsidePlanes(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> int [b3GeometryUtil.cpp <36:7 36:9>]
REFERENCE_CALL: static bool b3GeometryUtil::isPointInsidePlanes(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> int b3AlignedObjectArray<b3Vector3>::size() const [b3GeometryUtil.cpp <35:34 35:37>]
REFERENCE_CALL: static bool b3GeometryUtil::isPointInsidePlanes(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> const b3Vector3 & b3AlignedObjectArray<b3Vector3>::operator[](int) const [b3GeometryUtil.cpp <38:39 38:39>]
REFERENCE_CALL: static bool b3GeometryUtil::isPointInsidePlanes(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) -> b3Scalar b3Vector3::dot(const b3Vector3 &) const [b3GeometryUtil.cpp <39:31 39:33>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::areVerticesBehindPlane(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &, b3Scalar) -> int [b3GeometryUtil.cpp <52:2 52:4>]
REFERENCE_TYPE_USAGE: static bool b3GeometryUtil::areVerticesBehindPlane(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &, b3Scalar) -> int [b3GeometryUtil.cpp <53:7 53:9>]
REFERENCE_CALL: static bool b3GeometryUtil::areVerticesBehindPlane(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &, b3Scalar) -> int b3AlignedObjectArray<b3Vector3>::size() const [b3GeometryUtil.cpp <52:29 52:32>]
REFERENCE_CALL: static bool b3GeometryUtil::areVerticesBehindPlane(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &, b3Scalar) -> const b3Vector3 & b3AlignedObjectArray<b3Vector3>::operator[](int) const [b3GeometryUtil.cpp <55:33 55:33>]
REFERENCE_CALL: static bool b3GeometryUtil::areVerticesBehindPlane(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &, b3Scalar) -> b3Scalar b3Vector3::dot(const b3Vector3 &) const [b3GeometryUtil.cpp <56:40 56:42>]
REFERENCE_TYPE_USAGE: bool notExist(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &) -> bool [b3GeometryUtil.cpp <65:1 65:4>]
REFERENCE_TYPE_USAGE: bool notExist(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &) -> bool [b3GeometryUtil.cpp <67:1 67:4>]
REFERENCE_TYPE_USAGE: bool notExist(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.cpp <65:21 65:29>]
REFERENCE_TYPE_USAGE: bool notExist(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.cpp <65:73 65:81>]
REFERENCE_TYPE_USAGE: bool notExist(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.cpp <67:21 67:29>]
REFERENCE_TYPE_USAGE: bool notExist(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.cpp <67:73 67:81>]
REFERENCE_TYPE_USAGE: bool notExist(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 [b3GeometryUtil.cpp <72:9 72:17>]
REFERENCE_TYPE_USAGE: bool notExist(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &) -> b3AlignedObjectArray<b3Vector3> [b3GeometryUtil.cpp <65:52 65:71>]
REFERENCE_TYPE_USAGE: bool notExist(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &) -> b3AlignedObjectArray<b3Vector3> [b3GeometryUtil.cpp <67:52 67:71>]
REFERENCE_TYPE_USAGE: bool notExist(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &) -> int [b3GeometryUtil.cpp <69:2 69:4>]
REFERENCE_TYPE_USAGE: bool notExist(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &) -> int [b3GeometryUtil.cpp <70:7 70:9>]
REFERENCE_CALL: bool notExist(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &) -> int b3AlignedObjectArray<b3Vector3>::size() const [b3GeometryUtil.cpp <69:34 69:37>]
REFERENCE_CALL: bool notExist(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &) -> const b3Vector3 & b3AlignedObjectArray<b3Vector3>::operator[](int) const [b3GeometryUtil.cpp <72:39 72:39>]
REFERENCE_CALL: bool notExist(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &) -> b3Scalar b3Vector3::dot(const b3Vector3 &) const [b3GeometryUtil.cpp <73:21 73:23>]
REFERENCE_TYPE_USAGE: bool notExist(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &) -> b3Scalar [b3GeometryUtil.cpp <73:31 73:38>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> int [b3GeometryUtil.cpp <83:9 83:11>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> int [b3GeometryUtil.cpp <85:7 85:9>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> int [b3GeometryUtil.cpp <90:8 90:10>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> int [b3GeometryUtil.cpp <94:9 94:11>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> int [b3GeometryUtil.cpp <103:10 103:12>]
REFERENCE_CALL: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> int b3AlignedObjectArray<b3Vector3>::size() const [b3GeometryUtil.cpp <83:36 83:39>]
REFERENCE_CALL: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 & b3AlignedObjectArray<b3Vector3>::operator[](int) [b3GeometryUtil.cpp <87:33 87:33>]
REFERENCE_CALL: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 & b3AlignedObjectArray<b3Vector3>::operator[](int) [b3GeometryUtil.cpp <92:34 92:34>]
REFERENCE_CALL: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 & b3AlignedObjectArray<b3Vector3>::operator[](int) [b3GeometryUtil.cpp <97:35 97:35>]
REFERENCE_CALL: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> void b3Vector3::b3Vector3() [b3GeometryUtil.cpp <99:15 99:27>]
REFERENCE_CALL: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> void b3Vector3::b3Vector3() [b3GeometryUtil.cpp <99:29 99:33>]
REFERENCE_CALL: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> void b3Vector3::b3Vector3() [b3GeometryUtil.cpp <99:35 99:39>]
REFERENCE_CALL: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 & b3Vector3::operator=(b3Vector3 &&) [b3GeometryUtil.cpp <100:11 100:11>]
REFERENCE_CALL: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 & b3Vector3::operator=(b3Vector3 &&) [b3GeometryUtil.cpp <101:11 101:11>]
REFERENCE_CALL: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 & b3Vector3::operator=(b3Vector3 &&) [b3GeometryUtil.cpp <105:20 105:20>]
REFERENCE_CALL: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) [b3GeometryUtil.cpp <100:15 100:15>]
REFERENCE_CALL: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 operator-(const b3Vector3 &, const b3Vector3 &) [b3GeometryUtil.cpp <101:15 101:15>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Scalar [b3GeometryUtil.cpp <102:5 102:12>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Scalar [b3GeometryUtil.cpp <102:27 102:34>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Scalar [b3GeometryUtil.cpp <106:36 106:43>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Scalar [b3GeometryUtil.cpp <114:59 114:66>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Scalar [b3GeometryUtil.cpp <120:19 120:26>]
REFERENCE_CALL: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 operator*(const b3Scalar &, const b3Vector3 &) [b3GeometryUtil.cpp <105:33 105:33>]
REFERENCE_CALL: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 b3Vector3::cross(const b3Vector3 &) const [b3GeometryUtil.cpp <105:41 105:45>]
REFERENCE_CALL: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Scalar b3Vector3::length2() const [b3GeometryUtil.cpp <106:24 106:30>]
REFERENCE_CALL: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 & b3Vector3::normalize() [b3GeometryUtil.cpp <108:21 108:29>]
REFERENCE_CALL: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> bool notExist(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &) [b3GeometryUtil.cpp <109:11 109:18>]
REFERENCE_CALL: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Scalar b3Vector3::dot(const b3Vector3 &) const [b3GeometryUtil.cpp <111:42 111:44>]
REFERENCE_CALL: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> static bool b3GeometryUtil::areVerticesBehindPlane(const b3Vector3 &, const b3AlignedObjectArray<b3Vector3> &, b3Scalar) [b3GeometryUtil.cpp <114:13 114:34>]
REFERENCE_CALL: static void b3GeometryUtil::getPlaneEquationsFromVertices(b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> void b3AlignedObjectArray<b3Vector3>::push_back(const b3Vector3 &) [b3GeometryUtil.cpp <116:28 116:36>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> int [b3GeometryUtil.cpp <131:8 131:10>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> int [b3GeometryUtil.cpp <133:7 133:9>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> int [b3GeometryUtil.cpp <138:8 138:10>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> int [b3GeometryUtil.cpp <142:9 142:11>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> int b3AlignedObjectArray<b3Vector3>::size() const [b3GeometryUtil.cpp <131:40 131:43>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> const b3Vector3 & b3AlignedObjectArray<b3Vector3>::operator[](int) const [b3GeometryUtil.cpp <135:39 135:39>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> const b3Vector3 & b3AlignedObjectArray<b3Vector3>::operator[](int) const [b3GeometryUtil.cpp <140:40 140:40>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> const b3Vector3 & b3AlignedObjectArray<b3Vector3>::operator[](int) const [b3GeometryUtil.cpp <145:41 145:41>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> void b3Vector3::b3Vector3() [b3GeometryUtil.cpp <147:15 147:18>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> void b3Vector3::b3Vector3() [b3GeometryUtil.cpp <148:15 148:18>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> void b3Vector3::b3Vector3() [b3GeometryUtil.cpp <149:15 149:18>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 & b3Vector3::operator=(b3Vector3 &&) [b3GeometryUtil.cpp <147:26 147:26>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 & b3Vector3::operator=(b3Vector3 &&) [b3GeometryUtil.cpp <148:26 148:26>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 & b3Vector3::operator=(b3Vector3 &&) [b3GeometryUtil.cpp <149:26 149:26>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 b3Vector3::cross(const b3Vector3 &) const [b3GeometryUtil.cpp <147:31 147:35>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 b3Vector3::cross(const b3Vector3 &) const [b3GeometryUtil.cpp <148:31 148:35>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 b3Vector3::cross(const b3Vector3 &) const [b3GeometryUtil.cpp <149:31 149:35>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Scalar b3Vector3::length2() const [b3GeometryUtil.cpp <151:17 151:23>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Scalar b3Vector3::length2() const [b3GeometryUtil.cpp <152:14 152:20>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Scalar b3Vector3::length2() const [b3GeometryUtil.cpp <153:14 153:20>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Scalar [b3GeometryUtil.cpp <151:29 151:36>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Scalar [b3GeometryUtil.cpp <152:26 152:33>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Scalar [b3GeometryUtil.cpp <153:26 153:33>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Scalar [b3GeometryUtil.cpp <162:6 162:13>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Scalar [b3GeometryUtil.cpp <163:29 163:36>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Scalar [b3GeometryUtil.cpp <165:18 165:25>]
REFERENCE_TYPE_USAGE: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Scalar [b3GeometryUtil.cpp <175:62 175:69>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Scalar b3Vector3::dot(const b3Vector3 &) const [b3GeometryUtil.cpp <162:30 162:32>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Scalar b3Fabs(b3Scalar) [b3GeometryUtil.cpp <163:10 163:15>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 & b3Vector3::operator*=(const b3Scalar &) [b3GeometryUtil.cpp <166:12 166:13>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 & b3Vector3::operator*=(const b3Scalar &) [b3GeometryUtil.cpp <167:12 167:13>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 & b3Vector3::operator*=(const b3Scalar &) [b3GeometryUtil.cpp <168:12 168:13>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 & b3Vector3::operator*=(const b3Scalar &) [b3GeometryUtil.cpp <172:23 172:24>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> void b3Vector3::b3Vector3(const b3Vector3 &) [b3GeometryUtil.cpp <169:35 169:38>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) [b3GeometryUtil.cpp <170:23 170:24>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> b3Vector3 & b3Vector3::operator+=(const b3Vector3 &) [b3GeometryUtil.cpp <171:23 171:24>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> static bool b3GeometryUtil::isPointInsidePlanes(const b3AlignedObjectArray<b3Vector3> &, const b3Vector3 &, b3Scalar) [b3GeometryUtil.cpp <175:11 175:29>]
REFERENCE_CALL: static void b3GeometryUtil::getVerticesFromPlaneEquations(const b3AlignedObjectArray<b3Vector3> &, b3AlignedObjectArray<b3Vector3> &) -> void b3AlignedObjectArray<b3Vector3>::push_back(const b3Vector3 &) [b3GeometryUtil.cpp <177:20 177:28>]
LOCAL_SYMBOL: b3AlignedAllocator.h<101:66> [b3AlignedAllocator.h <101:66 101:66>]
LOCAL_SYMBOL: b3AlignedAllocator.h<101:66> [b3AlignedAllocator.h <101:81 101:81>]
LOCAL_SYMBOL: b3AlignedAllocator.h<38:39> [b3AlignedAllocator.h <38:39 38:42>]
LOCAL_SYMBOL: b3AlignedAllocator.h<38:49> [b3AlignedAllocator.h <38:49 38:57>]
LOCAL_SYMBOL: b3AlignedAllocator.h<39:36> [b3AlignedAllocator.h <39:36 39:38>]
LOCAL_SYMBOL: b3AlignedAllocator.h<47:43> [b3AlignedAllocator.h <47:43 47:46>]
LOCAL_SYMBOL: b3AlignedAllocator.h<47:53> [b3AlignedAllocator.h <47:53 47:61>]
LOCAL_SYMBOL: b3AlignedAllocator.h<48:40> [b3AlignedAllocator.h <48:40 48:47>]
LOCAL_SYMBOL: b3AlignedAllocator.h<49:36> [b3AlignedAllocator.h <49:36 49:39>]
LOCAL_SYMBOL: b3AlignedAllocator.h<50:33> [b3AlignedAllocator.h <50:33 50:40>]
LOCAL_SYMBOL: b3AlignedAllocator.h<53:43> [b3AlignedAllocator.h <53:43 53:51>]
LOCAL_SYMBOL: b3AlignedAllocator.h<53:66> [b3AlignedAllocator.h <53:66 53:73>]
LOCAL_SYMBOL: b3AlignedAllocator.h<55:57> [b3AlignedAllocator.h <55:57 55:65>]
LOCAL_SYMBOL: b3AlignedAllocator.h<55:87> [b3AlignedAllocator.h <55:87 55:94>]
LOCAL_SYMBOL: b3AlignedAllocator.h<60:21> [b3AlignedAllocator.h <60:21 60:21>]
LOCAL_SYMBOL: b3AlignedAllocator.h<60:21> [b3AlignedAllocator.h <63:30 63:30>]
LOCAL_SYMBOL: b3AlignedAllocator.h<60:21> [b3AlignedAllocator.h <76:16 76:16>]
LOCAL_SYMBOL: b3AlignedAllocator.h<60:21> [b3AlignedAllocator.h <77:16 77:16>]
LOCAL_SYMBOL: b3AlignedAllocator.h<60:21> [b3AlignedAllocator.h <78:10 78:10>]
LOCAL_SYMBOL: b3AlignedAllocator.h<60:21> [b3AlignedAllocator.h <79:10 79:10>]
LOCAL_SYMBOL: b3AlignedAllocator.h<60:21> [b3AlignedAllocator.h <80:10 80:10>]
LOCAL_SYMBOL: b3AlignedAllocator.h<60:34> [b3AlignedAllocator.h <60:34 60:42>]
LOCAL_SYMBOL: b3AlignedAllocator.h<60:34> [b3AlignedAllocator.h <63:34 63:42>]
LOCAL_SYMBOL: b3AlignedAllocator.h<60:34> [b3AlignedAllocator.h <74:56 74:64>]
LOCAL_SYMBOL: b3AlignedAllocator.h<60:34> [b3AlignedAllocator.h <86:79 86:87>]
LOCAL_SYMBOL: b3AlignedAllocator.h<60:34> [b3AlignedAllocator.h <96:35 96:43>]
LOCAL_SYMBOL: b3AlignedAllocator.h<60:34> [b3AlignedAllocator.h <99:55 99:63>]
LOCAL_SYMBOL: b3AlignedAllocator.h<61:26> [b3AlignedAllocator.h <61:26 61:26>]
LOCAL_SYMBOL: b3AlignedAllocator.h<61:26> [b3AlignedAllocator.h <102:1 102:1>]
LOCAL_SYMBOL: b3AlignedAllocator.h<68:23> [b3AlignedAllocator.h <68:23 68:23>]
LOCAL_SYMBOL: b3AlignedAllocator.h<68:23> [b3AlignedAllocator.h <68:24 68:24>]
LOCAL_SYMBOL: b3AlignedAllocator.h<73:22> [b3AlignedAllocator.h <73:22 73:26>]
LOCAL_SYMBOL: b3AlignedAllocator.h<73:22> [b3AlignedAllocator.h <74:48 74:52>]
LOCAL_SYMBOL: b3AlignedAllocator.h<74:72> [b3AlignedAllocator.h <74:72 74:72>]
LOCAL_SYMBOL: b3AlignedAllocator.h<74:72> [b3AlignedAllocator.h <74:73 74:73>]
LOCAL_SYMBOL: b3AlignedAllocator.h<82:45> [b3AlignedAllocator.h <82:45 82:47>]
LOCAL_SYMBOL: b3AlignedAllocator.h<82:45> [b3AlignedAllocator.h <82:93 82:95>]
LOCAL_SYMBOL: b3AlignedAllocator.h<82:83> [b3AlignedAllocator.h <82:83 82:83>]
LOCAL_SYMBOL: b3AlignedAllocator.h<82:83> [b3AlignedAllocator.h <82:98 82:98>]
LOCAL_SYMBOL: b3AlignedAllocator.h<83:45> [b3AlignedAllocator.h <83:45 83:47>]
LOCAL_SYMBOL: b3AlignedAllocator.h<83:45> [b3AlignedAllocator.h <83:93 83:95>]
LOCAL_SYMBOL: b3AlignedAllocator.h<83:83> [b3AlignedAllocator.h <83:83 83:83>]
LOCAL_SYMBOL: b3AlignedAllocator.h<83:83> [b3AlignedAllocator.h <83:98 83:98>]
LOCAL_SYMBOL: b3AlignedAllocator.h<84:46> [b3AlignedAllocator.h <84:46 84:46>]
LOCAL_SYMBOL: b3AlignedAllocator.h<84:46> [b3AlignedAllocator.h <86:75 86:75>]
LOCAL_SYMBOL: b3AlignedAllocator.h<84:73> [b3AlignedAllocator.h <84:73 84:76>]
LOCAL_SYMBOL: b3AlignedAllocator.h<84:73> [b3AlignedAllocator.h <85:9 85:12>]
LOCAL_SYMBOL: b3AlignedAllocator.h<84:84> [b3AlignedAllocator.h <84:84 84:84>]
LOCAL_SYMBOL: b3AlignedAllocator.h<84:84> [b3AlignedAllocator.h <87:2 87:2>]
LOCAL_SYMBOL: b3AlignedAllocator.h<88:45> [b3AlignedAllocator.h <88:45 88:47>]
LOCAL_SYMBOL: b3AlignedAllocator.h<88:45> [b3AlignedAllocator.h <88:90 88:92>]
LOCAL_SYMBOL: b3AlignedAllocator.h<88:72> [b3AlignedAllocator.h <88:72 88:76>]
LOCAL_SYMBOL: b3AlignedAllocator.h<88:72> [b3AlignedAllocator.h <88:107 88:111>]
LOCAL_SYMBOL: b3AlignedAllocator.h<88:83> [b3AlignedAllocator.h <88:83 88:83>]
LOCAL_SYMBOL: b3AlignedAllocator.h<88:83> [b3AlignedAllocator.h <88:116 88:116>]
LOCAL_SYMBOL: b3AlignedAllocator.h<89:45> [b3AlignedAllocator.h <89:45 89:47>]
LOCAL_SYMBOL: b3AlignedAllocator.h<89:45> [b3AlignedAllocator.h <90:46 90:48>]
LOCAL_SYMBOL: b3AlignedAllocator.h<89:51> [b3AlignedAllocator.h <89:51 89:51>]
LOCAL_SYMBOL: b3AlignedAllocator.h<89:51> [b3AlignedAllocator.h <91:2 91:2>]
LOCAL_SYMBOL: b3AlignedAllocator.h<92:45> [b3AlignedAllocator.h <92:45 92:47>]
LOCAL_SYMBOL: b3AlignedAllocator.h<92:45> [b3AlignedAllocator.h <92:85 92:87>]
LOCAL_SYMBOL: b3AlignedAllocator.h<92:83> [b3AlignedAllocator.h <92:83 92:83>]
LOCAL_SYMBOL: b3AlignedAllocator.h<92:83> [b3AlignedAllocator.h <92:105 92:105>]
LOCAL_SYMBOL: b3AlignedAllocator.h<95:22> [b3AlignedAllocator.h <95:22 95:22>]
LOCAL_SYMBOL: b3AlignedAllocator.h<95:22> [b3AlignedAllocator.h <96:31 96:31>]
LOCAL_SYMBOL: b3AlignedAllocator.h<95:40> [b3AlignedAllocator.h <95:40 95:40>]
LOCAL_SYMBOL: b3AlignedAllocator.h<95:40> [b3AlignedAllocator.h <97:2 97:2>]
LOCAL_SYMBOL: b3AlignedAllocator.h<98:22> [b3AlignedAllocator.h <98:22 98:22>]
LOCAL_SYMBOL: b3AlignedAllocator.h<98:22> [b3AlignedAllocator.h <99:51 99:51>]
LOCAL_SYMBOL: b3AlignedAllocator.h<99:71> [b3AlignedAllocator.h <99:71 99:71>]
LOCAL_SYMBOL: b3AlignedAllocator.h<99:71> [b3AlignedAllocator.h <99:87 99:87>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<102:38> [b3AlignedObjectArray.h <102:38 102:41>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<102:38> [b3AlignedObjectArray.h <104:8 104:11>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<102:38> [b3AlignedObjectArray.h <105:33 105:36>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<103:3> [b3AlignedObjectArray.h <103:3 103:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<103:3> [b3AlignedObjectArray.h <107:3 107:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<110:3> [b3AlignedObjectArray.h <110:3 110:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<110:3> [b3AlignedObjectArray.h <119:3 119:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<111:15> [b3AlignedObjectArray.h <111:15 111:15>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<111:15> [b3AlignedObjectArray.h <118:4 118:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<114:5> [b3AlignedObjectArray.h <114:5 114:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<114:5> [b3AlignedObjectArray.h <116:5 116:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<127:3> [b3AlignedObjectArray.h <127:3 127:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<127:3> [b3AlignedObjectArray.h <129:3 129:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<132:3> [b3AlignedObjectArray.h <132:3 132:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<132:3> [b3AlignedObjectArray.h <134:3 134:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<137:52> [b3AlignedObjectArray.h <137:52 137:61>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<137:52> [b3AlignedObjectArray.h <141:20 141:29>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<137:52> [b3AlignedObjectArray.h <143:4 143:13>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<138:3> [b3AlignedObjectArray.h <138:3 138:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<138:3> [b3AlignedObjectArray.h <144:3 144:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<141:8> [b3AlignedObjectArray.h <141:8 141:16>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<141:8> [b3AlignedObjectArray.h <142:12 142:20>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<141:8> [b3AlignedObjectArray.h <143:23 143:31>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<150:3> [b3AlignedObjectArray.h <150:3 150:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<150:3> [b3AlignedObjectArray.h <152:3 152:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<154:35> [b3AlignedObjectArray.h <154:35 154:35>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<154:35> [b3AlignedObjectArray.h <158:18 158:18>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<155:3> [b3AlignedObjectArray.h <155:3 155:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<155:3> [b3AlignedObjectArray.h <159:3 159:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<161:29> [b3AlignedObjectArray.h <161:29 161:29>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<161:29> [b3AlignedObjectArray.h <165:18 165:18>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<162:3> [b3AlignedObjectArray.h <162:3 162:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<162:3> [b3AlignedObjectArray.h <166:3 166:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<168:43> [b3AlignedObjectArray.h <168:43 168:43>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<168:43> [b3AlignedObjectArray.h <172:18 172:18>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<169:3> [b3AlignedObjectArray.h <169:3 169:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<169:3> [b3AlignedObjectArray.h <173:3 173:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<175:37> [b3AlignedObjectArray.h <175:37 175:37>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<175:37> [b3AlignedObjectArray.h <179:18 179:18>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<176:3> [b3AlignedObjectArray.h <176:3 176:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<176:3> [b3AlignedObjectArray.h <180:3 180:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<185:3> [b3AlignedObjectArray.h <185:3 185:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<185:3> [b3AlignedObjectArray.h <191:3 191:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<194:3> [b3AlignedObjectArray.h <194:3 194:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<194:3> [b3AlignedObjectArray.h <198:3 198:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<203:47> [b3AlignedObjectArray.h <203:47 203:53>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<203:47> [b3AlignedObjectArray.h <207:8 207:14>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<203:47> [b3AlignedObjectArray.h <211:9 211:15>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<203:47> [b3AlignedObjectArray.h <213:14 213:20>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<203:47> [b3AlignedObjectArray.h <217:13 217:19>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<204:3> [b3AlignedObjectArray.h <204:3 204:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<204:3> [b3AlignedObjectArray.h <218:3 218:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<205:8> [b3AlignedObjectArray.h <205:8 205:14>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<205:8> [b3AlignedObjectArray.h <207:18 207:24>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<208:4> [b3AlignedObjectArray.h <208:4 208:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<208:4> [b3AlignedObjectArray.h <209:4 209:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<210:4> [b3AlignedObjectArray.h <210:4 210:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<210:4> [b3AlignedObjectArray.h <216:4 216:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<212:5> [b3AlignedObjectArray.h <212:5 212:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<212:5> [b3AlignedObjectArray.h <214:5 214:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<220:35> [b3AlignedObjectArray.h <220:35 220:41>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<220:35> [b3AlignedObjectArray.h <224:8 224:14>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<220:35> [b3AlignedObjectArray.h <226:17 226:23>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<220:35> [b3AlignedObjectArray.h <232:9 232:15>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<220:35> [b3AlignedObjectArray.h <234:14 234:20>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<220:35> [b3AlignedObjectArray.h <237:26 237:32>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<220:35> [b3AlignedObjectArray.h <245:13 245:19>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<220:53> [b3AlignedObjectArray.h <220:53 220:60>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<220:53> [b3AlignedObjectArray.h <239:26 239:33>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<221:3> [b3AlignedObjectArray.h <221:3 221:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<221:3> [b3AlignedObjectArray.h <246:3 246:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<222:8> [b3AlignedObjectArray.h <222:8 222:14>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<222:8> [b3AlignedObjectArray.h <224:18 224:24>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<222:8> [b3AlignedObjectArray.h <226:30 226:36>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<222:8> [b3AlignedObjectArray.h <237:16 237:22>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<225:4> [b3AlignedObjectArray.h <225:4 225:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<225:4> [b3AlignedObjectArray.h <230:4 230:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<226:13> [b3AlignedObjectArray.h <226:13 226:13>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<226:13> [b3AlignedObjectArray.h <226:26 226:26>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<226:13> [b3AlignedObjectArray.h <226:39 226:39>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<226:13> [b3AlignedObjectArray.h <228:13 228:13>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<227:5> [b3AlignedObjectArray.h <227:5 227:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<227:5> [b3AlignedObjectArray.h <229:5 229:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<231:4> [b3AlignedObjectArray.h <231:4 231:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<231:4> [b3AlignedObjectArray.h <243:4 243:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<233:5> [b3AlignedObjectArray.h <233:5 233:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<233:5> [b3AlignedObjectArray.h <235:5 235:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<237:14> [b3AlignedObjectArray.h <237:14 237:14>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<237:14> [b3AlignedObjectArray.h <237:24 237:24>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<237:14> [b3AlignedObjectArray.h <237:34 237:34>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<237:14> [b3AlignedObjectArray.h <239:20 239:20>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<238:5> [b3AlignedObjectArray.h <238:5 238:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<238:5> [b3AlignedObjectArray.h <240:5 240:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<248:3> [b3AlignedObjectArray.h <248:3 248:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<248:3> [b3AlignedObjectArray.h <257:3 257:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<249:8> [b3AlignedObjectArray.h <249:8 249:9>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<249:8> [b3AlignedObjectArray.h <250:8 250:9>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<249:8> [b3AlignedObjectArray.h <256:18 256:19>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<251:4> [b3AlignedObjectArray.h <251:4 251:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<251:4> [b3AlignedObjectArray.h <253:4 253:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<260:40> [b3AlignedObjectArray.h <260:40 260:48>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<260:40> [b3AlignedObjectArray.h <269:24 269:32>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<261:3> [b3AlignedObjectArray.h <261:3 261:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<261:3> [b3AlignedObjectArray.h <273:3 273:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<262:8> [b3AlignedObjectArray.h <262:8 262:9>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<262:8> [b3AlignedObjectArray.h <263:8 263:9>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<262:8> [b3AlignedObjectArray.h <269:17 269:18>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<262:8> [b3AlignedObjectArray.h <272:18 272:19>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<264:4> [b3AlignedObjectArray.h <264:4 264:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<264:4> [b3AlignedObjectArray.h <266:4 266:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<276:43> [b3AlignedObjectArray.h <276:43 276:46>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<276:43> [b3AlignedObjectArray.h <285:30 285:33>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<277:3> [b3AlignedObjectArray.h <277:3 277:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<277:3> [b3AlignedObjectArray.h <291:3 291:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<278:8> [b3AlignedObjectArray.h <278:8 278:9>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<278:8> [b3AlignedObjectArray.h <279:8 279:9>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<280:4> [b3AlignedObjectArray.h <280:4 280:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<280:4> [b3AlignedObjectArray.h <282:4 282:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<296:3> [b3AlignedObjectArray.h <296:3 296:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<296:3> [b3AlignedObjectArray.h <298:3 298:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<300:36> [b3AlignedObjectArray.h <300:36 300:41>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<300:36> [b3AlignedObjectArray.h <302:21 302:26>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<300:36> [b3AlignedObjectArray.h <304:25 304:30>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<300:36> [b3AlignedObjectArray.h <309:6 309:11>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<300:36> [b3AlignedObjectArray.h <323:18 323:23>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<301:3> [b3AlignedObjectArray.h <301:3 301:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<301:3> [b3AlignedObjectArray.h <326:3 326:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<303:4> [b3AlignedObjectArray.h <303:4 303:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<303:4> [b3AlignedObjectArray.h <325:4 325:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<304:8> [b3AlignedObjectArray.h <304:8 304:8>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<304:8> [b3AlignedObjectArray.h <306:9 306:9>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<304:8> [b3AlignedObjectArray.h <312:21 312:21>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<304:8> [b3AlignedObjectArray.h <321:14 321:14>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<307:5> [b3AlignedObjectArray.h <307:5 307:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<307:5> [b3AlignedObjectArray.h <311:5 311:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<330:3> [b3AlignedObjectArray.h <330:3 330:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<330:3> [b3AlignedObjectArray.h <337:3 337:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<333:32> [b3AlignedObjectArray.h <333:32 333:32>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<333:32> [b3AlignedObjectArray.h <335:15 335:15>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<333:44> [b3AlignedObjectArray.h <333:44 333:44>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<333:44> [b3AlignedObjectArray.h <335:19 335:19>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<334:5> [b3AlignedObjectArray.h <334:5 334:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<334:5> [b3AlignedObjectArray.h <336:5 336:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<340:22> [b3AlignedObjectArray.h <340:22 340:22>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<340:22> [b3AlignedObjectArray.h <341:32 341:32>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<341:35> [b3AlignedObjectArray.h <341:35 341:45>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<341:35> [b3AlignedObjectArray.h <351:12 351:22>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<341:35> [b3AlignedObjectArray.h <353:12 353:22>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<341:35> [b3AlignedObjectArray.h <364:24 364:34>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<341:35> [b3AlignedObjectArray.h <366:24 366:34>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<341:51> [b3AlignedObjectArray.h <341:51 341:52>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<341:51> [b3AlignedObjectArray.h <345:10 345:11>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<341:51> [b3AlignedObjectArray.h <346:16 346:17>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<341:51> [b3AlignedObjectArray.h <363:8 363:9>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<341:51> [b3AlignedObjectArray.h <364:37 364:38>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<341:59> [b3AlignedObjectArray.h <341:59 341:60>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<341:59> [b3AlignedObjectArray.h <345:16 345:17>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<341:59> [b3AlignedObjectArray.h <346:19 346:20>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<341:59> [b3AlignedObjectArray.h <365:10 365:11>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<341:59> [b3AlignedObjectArray.h <366:40 366:41>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<342:3> [b3AlignedObjectArray.h <342:3 342:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<342:3> [b3AlignedObjectArray.h <367:3 367:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<345:14> [b3AlignedObjectArray.h <345:14 345:14>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<345:14> [b3AlignedObjectArray.h <353:33 353:33>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<345:14> [b3AlignedObjectArray.h <354:6 354:6>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<345:14> [b3AlignedObjectArray.h <355:12 355:12>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<345:14> [b3AlignedObjectArray.h <357:13 357:13>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<345:14> [b3AlignedObjectArray.h <358:11 358:11>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<345:14> [b3AlignedObjectArray.h <360:16 360:16>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<345:14> [b3AlignedObjectArray.h <363:11 363:11>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<345:14> [b3AlignedObjectArray.h <364:41 364:41>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<345:8> [b3AlignedObjectArray.h <345:8 345:8>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<345:8> [b3AlignedObjectArray.h <351:31 351:31>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<345:8> [b3AlignedObjectArray.h <352:6 352:6>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<345:8> [b3AlignedObjectArray.h <355:9 355:9>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<345:8> [b3AlignedObjectArray.h <357:11 357:11>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<345:8> [b3AlignedObjectArray.h <358:6 358:6>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<345:8> [b3AlignedObjectArray.h <360:13 360:13>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<345:8> [b3AlignedObjectArray.h <365:8 365:8>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<345:8> [b3AlignedObjectArray.h <366:37 366:37>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<346:6> [b3AlignedObjectArray.h <346:6 346:6>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<346:6> [b3AlignedObjectArray.h <351:34 351:34>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<346:6> [b3AlignedObjectArray.h <353:24 353:24>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<350:4> [b3AlignedObjectArray.h <350:4 350:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<350:4> [b3AlignedObjectArray.h <360:4 360:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<356:5> [b3AlignedObjectArray.h <356:5 356:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<356:5> [b3AlignedObjectArray.h <359:5 359:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<370:22> [b3AlignedObjectArray.h <370:22 370:22>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<370:22> [b3AlignedObjectArray.h <371:24 371:24>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<371:27> [b3AlignedObjectArray.h <371:27 371:37>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<371:27> [b3AlignedObjectArray.h <376:23 376:33>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<372:3> [b3AlignedObjectArray.h <372:3 372:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<372:3> [b3AlignedObjectArray.h <378:3 378:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<375:4> [b3AlignedObjectArray.h <375:4 375:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<375:4> [b3AlignedObjectArray.h <377:4 377:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<382:22> [b3AlignedObjectArray.h <382:22 382:22>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<382:22> [b3AlignedObjectArray.h <383:46 383:46>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<383:20> [b3AlignedObjectArray.h <383:20 383:23>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<383:20> [b3AlignedObjectArray.h <388:13 388:16>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<383:20> [b3AlignedObjectArray.h <394:36 394:39>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<383:20> [b3AlignedObjectArray.h <394:54 394:57>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<383:20> [b3AlignedObjectArray.h <399:28 399:31>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<383:20> [b3AlignedObjectArray.h <402:6 402:9>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<383:20> [b3AlignedObjectArray.h <402:20 402:23>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<383:20> [b3AlignedObjectArray.h <410:4 410:7>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<383:30> [b3AlignedObjectArray.h <383:30 383:30>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<383:30> [b3AlignedObjectArray.h <388:18 388:18>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<383:30> [b3AlignedObjectArray.h <390:11 390:11>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<383:30> [b3AlignedObjectArray.h <392:19 392:19>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<383:30> [b3AlignedObjectArray.h <402:11 402:11>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<383:30> [b3AlignedObjectArray.h <403:6 403:6>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<383:30> [b3AlignedObjectArray.h <410:9 410:9>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<383:37> [b3AlignedObjectArray.h <383:37 383:37>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<383:37> [b3AlignedObjectArray.h <390:16 390:16>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<383:37> [b3AlignedObjectArray.h <394:18 394:18>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<383:49> [b3AlignedObjectArray.h <383:49 383:59>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<383:49> [b3AlignedObjectArray.h <394:24 394:34>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<383:49> [b3AlignedObjectArray.h <399:9 399:19>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<384:3> [b3AlignedObjectArray.h <384:3 384:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<384:3> [b3AlignedObjectArray.h <411:3 411:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<388:6> [b3AlignedObjectArray.h <388:6 388:9>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<388:6> [b3AlignedObjectArray.h <399:21 399:24>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<388:6> [b3AlignedObjectArray.h <410:18 410:21>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<391:4> [b3AlignedObjectArray.h <391:4 391:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<391:4> [b3AlignedObjectArray.h <409:4 409:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<392:9> [b3AlignedObjectArray.h <392:9 392:13>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<392:9> [b3AlignedObjectArray.h <394:10 394:14>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<392:9> [b3AlignedObjectArray.h <394:41 394:45>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<392:9> [b3AlignedObjectArray.h <394:59 394:63>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<392:9> [b3AlignedObjectArray.h <396:6 396:10>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<392:9> [b3AlignedObjectArray.h <399:33 399:37>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<392:9> [b3AlignedObjectArray.h <402:25 402:29>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<392:9> [b3AlignedObjectArray.h <403:10 403:14>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<395:5> [b3AlignedObjectArray.h <395:5 395:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<395:5> [b3AlignedObjectArray.h <397:5 397:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<400:5> [b3AlignedObjectArray.h <400:5 400:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<400:5> [b3AlignedObjectArray.h <404:5 404:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<406:5> [b3AlignedObjectArray.h <406:5 406:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<406:5> [b3AlignedObjectArray.h <408:5 408:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<413:17> [b3AlignedObjectArray.h <413:17 413:22>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<413:17> [b3AlignedObjectArray.h <421:20 421:25>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<413:17> [b3AlignedObjectArray.h <422:11 422:16>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<413:28> [b3AlignedObjectArray.h <413:28 413:33>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<413:28> [b3AlignedObjectArray.h <422:28 422:33>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<413:28> [b3AlignedObjectArray.h <423:11 423:16>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<414:3> [b3AlignedObjectArray.h <414:3 414:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<414:3> [b3AlignedObjectArray.h <426:3 426:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<421:6> [b3AlignedObjectArray.h <421:6 421:9>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<421:6> [b3AlignedObjectArray.h <423:21 423:24>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<428:21> [b3AlignedObjectArray.h <428:21 428:21>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<428:21> [b3AlignedObjectArray.h <429:22 429:22>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<429:25> [b3AlignedObjectArray.h <429:25 429:35>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<429:25> [b3AlignedObjectArray.h <436:27 436:37>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<429:25> [b3AlignedObjectArray.h <447:27 447:37>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<430:2> [b3AlignedObjectArray.h <430:2 430:2>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<430:2> [b3AlignedObjectArray.h <449:2 449:2>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<432:7> [b3AlignedObjectArray.h <432:7 432:7>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<432:7> [b3AlignedObjectArray.h <434:8 434:8>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<432:7> [b3AlignedObjectArray.h <434:17 434:17>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<432:7> [b3AlignedObjectArray.h <434:24 434:24>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<432:7> [b3AlignedObjectArray.h <436:21 436:21>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<433:7> [b3AlignedObjectArray.h <433:7 433:7>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<433:7> [b3AlignedObjectArray.h <434:12 434:12>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<433:7> [b3AlignedObjectArray.h <436:24 436:24>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<433:7> [b3AlignedObjectArray.h <440:11 440:11>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<433:7> [b3AlignedObjectArray.h <442:11 442:11>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<433:7> [b3AlignedObjectArray.h <445:4 445:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<433:7> [b3AlignedObjectArray.h <445:8 445:8>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<433:7> [b3AlignedObjectArray.h <447:24 447:24>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<435:3> [b3AlignedObjectArray.h <435:3 435:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<435:3> [b3AlignedObjectArray.h <437:3 437:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<441:3> [b3AlignedObjectArray.h <441:3 441:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<441:3> [b3AlignedObjectArray.h <448:3 448:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<452:32> [b3AlignedObjectArray.h <452:32 452:34>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<452:32> [b3AlignedObjectArray.h <460:8 460:10>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<452:32> [b3AlignedObjectArray.h <462:13 462:15>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<453:2> [b3AlignedObjectArray.h <453:2 453:2>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<453:2> [b3AlignedObjectArray.h <468:2 468:2>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<454:7> [b3AlignedObjectArray.h <454:7 454:11>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<454:7> [b3AlignedObjectArray.h <458:10 458:14>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<454:7> [b3AlignedObjectArray.h <459:15 459:19>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<454:7> [b3AlignedObjectArray.h <461:5 461:9>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<455:7> [b3AlignedObjectArray.h <455:7 455:10>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<455:7> [b3AlignedObjectArray.h <458:19 458:22>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<455:7> [b3AlignedObjectArray.h <459:23 459:26>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<455:7> [b3AlignedObjectArray.h <463:5 463:8>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<458:25> [b3AlignedObjectArray.h <458:25 458:25>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<458:25> [b3AlignedObjectArray.h <466:3 466:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<459:8> [b3AlignedObjectArray.h <459:8 459:10>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<459:8> [b3AlignedObjectArray.h <460:21 460:23>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<459:8> [b3AlignedObjectArray.h <461:13 461:15>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<459:8> [b3AlignedObjectArray.h <462:26 462:28>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<459:8> [b3AlignedObjectArray.h <463:12 463:14>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<459:8> [b3AlignedObjectArray.h <465:12 465:14>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <45:20 45:20>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <49:21 49:21>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <53:2 53:2>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <59:39 59:39>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <59:80 59:80>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <74:48 74:48>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <79:20 79:20>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <98:16 98:16>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <154:25 154:25>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <161:19 161:19>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <168:25 168:25>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <175:19 175:19>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <197:20 197:20>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <220:50 220:50>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <220:62 220:62>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <228:17 228:17>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <239:24 239:24>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <247:19 247:19>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <260:19 260:19>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <260:37 260:37>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <260:50 260:50>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <269:22 269:22>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <276:40 276:40>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <285:28 285:28>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <304:5 304:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <304:13 304:13>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <333:29 333:29>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <333:41 333:41>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <346:4 346:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <383:17 383:17>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <388:4 388:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <421:4 421:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <452:29 452:29>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <471:29 471:29>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <487:33 487:33>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <503:20 503:20>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<45:20> [b3AlignedObjectArray.h <519:13 519:13>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<471:32> [b3AlignedObjectArray.h <471:32 471:34>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<471:32> [b3AlignedObjectArray.h <478:21 478:23>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<472:2> [b3AlignedObjectArray.h <472:2 472:2>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<472:2> [b3AlignedObjectArray.h <485:2 485:2>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<473:7> [b3AlignedObjectArray.h <473:7 473:11>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<473:7> [b3AlignedObjectArray.h <480:5 480:9>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<473:7> [b3AlignedObjectArray.h <484:10 484:14>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<474:7> [b3AlignedObjectArray.h <474:7 474:7>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<474:7> [b3AlignedObjectArray.h <476:8 476:8>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<474:7> [b3AlignedObjectArray.h <476:12 476:12>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<474:7> [b3AlignedObjectArray.h <476:21 476:21>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<474:7> [b3AlignedObjectArray.h <478:15 478:15>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<474:7> [b3AlignedObjectArray.h <480:13 480:13>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<477:3> [b3AlignedObjectArray.h <477:3 477:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<477:3> [b3AlignedObjectArray.h <483:3 483:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<479:4> [b3AlignedObjectArray.h <479:4 479:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<479:4> [b3AlignedObjectArray.h <482:4 482:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<487:36> [b3AlignedObjectArray.h <487:36 487:38>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<487:36> [b3AlignedObjectArray.h <494:30 494:32>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<488:5> [b3AlignedObjectArray.h <488:5 488:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<488:5> [b3AlignedObjectArray.h <501:5 501:5>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<489:13> [b3AlignedObjectArray.h <489:13 489:17>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<489:13> [b3AlignedObjectArray.h <496:17 496:21>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<489:13> [b3AlignedObjectArray.h <500:16 500:20>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<48:1> [b3AlignedObjectArray.h <48:1 48:1>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<48:1> [b3AlignedObjectArray.h <531:1 531:1>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<490:13> [b3AlignedObjectArray.h <490:13 490:13>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<490:13> [b3AlignedObjectArray.h <492:14 492:14>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<490:13> [b3AlignedObjectArray.h <492:18 492:18>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<490:13> [b3AlignedObjectArray.h <492:27 492:27>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<490:13> [b3AlignedObjectArray.h <494:24 494:24>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<490:13> [b3AlignedObjectArray.h <496:25 496:25>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<493:9> [b3AlignedObjectArray.h <493:9 493:9>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<493:9> [b3AlignedObjectArray.h <499:9 499:9>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<495:13> [b3AlignedObjectArray.h <495:13 495:13>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<495:13> [b3AlignedObjectArray.h <498:13 498:13>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<503:23> [b3AlignedObjectArray.h <503:23 503:25>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<503:23> [b3AlignedObjectArray.h <506:36 506:38>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<504:2> [b3AlignedObjectArray.h <504:2 504:2>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<504:2> [b3AlignedObjectArray.h <512:2 512:2>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<506:7> [b3AlignedObjectArray.h <506:7 506:15>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<506:7> [b3AlignedObjectArray.h <507:7 507:15>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<506:7> [b3AlignedObjectArray.h <509:10 509:18>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<508:3> [b3AlignedObjectArray.h <508:3 508:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<508:3> [b3AlignedObjectArray.h <511:3 511:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<515:34> [b3AlignedObjectArray.h <515:34 515:39>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<515:34> [b3AlignedObjectArray.h <519:16 519:21>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<515:46> [b3AlignedObjectArray.h <515:46 515:49>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<515:46> [b3AlignedObjectArray.h <520:12 520:15>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<515:56> [b3AlignedObjectArray.h <515:56 515:63>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<515:56> [b3AlignedObjectArray.h <521:16 521:23>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<516:2> [b3AlignedObjectArray.h <516:2 516:2>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<516:2> [b3AlignedObjectArray.h <522:2 522:2>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<524:49> [b3AlignedObjectArray.h <524:49 524:58>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<524:49> [b3AlignedObjectArray.h <526:19 526:28>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<524:49> [b3AlignedObjectArray.h <528:3 528:12>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<525:2> [b3AlignedObjectArray.h <525:2 525:2>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<525:2> [b3AlignedObjectArray.h <529:2 529:2>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<526:7> [b3AlignedObjectArray.h <526:7 526:15>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<526:7> [b3AlignedObjectArray.h <527:11 527:19>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<526:7> [b3AlignedObjectArray.h <528:22 528:30>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<59:84> [b3AlignedObjectArray.h <59:84 59:88>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<59:84> [b3AlignedObjectArray.h <61:17 61:21>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<60:2> [b3AlignedObjectArray.h <60:2 60:2>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<60:2> [b3AlignedObjectArray.h <63:2 63:2>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<70:37> [b3AlignedObjectArray.h <70:37 70:40>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<70:37> [b3AlignedObjectArray.h <72:12 72:15>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<70:37> [b3AlignedObjectArray.h <72:19 72:22>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<71:3> [b3AlignedObjectArray.h <71:3 71:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<71:3> [b3AlignedObjectArray.h <73:3 73:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<74:33> [b3AlignedObjectArray.h <74:33 74:37>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<74:33> [b3AlignedObjectArray.h <77:11 77:15>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<74:43> [b3AlignedObjectArray.h <74:43 74:45>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<74:43> [b3AlignedObjectArray.h <77:19 77:21>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<74:51> [b3AlignedObjectArray.h <74:51 74:54>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<74:51> [b3AlignedObjectArray.h <79:11 79:14>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<75:3> [b3AlignedObjectArray.h <75:3 75:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<75:3> [b3AlignedObjectArray.h <83:3 83:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<76:8> [b3AlignedObjectArray.h <76:8 76:8>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<76:8> [b3AlignedObjectArray.h <77:9 77:9>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<76:8> [b3AlignedObjectArray.h <77:17 77:17>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<76:8> [b3AlignedObjectArray.h <77:25 77:25>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<76:8> [b3AlignedObjectArray.h <79:16 79:16>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<76:8> [b3AlignedObjectArray.h <79:29 79:29>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<86:3> [b3AlignedObjectArray.h <86:3 86:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<86:3> [b3AlignedObjectArray.h <92:3 92:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<93:36> [b3AlignedObjectArray.h <93:36 93:40>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<93:36> [b3AlignedObjectArray.h <96:11 96:15>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<93:46> [b3AlignedObjectArray.h <93:46 93:49>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<93:46> [b3AlignedObjectArray.h <96:20 96:23>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<94:3> [b3AlignedObjectArray.h <94:3 94:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<94:3> [b3AlignedObjectArray.h <100:3 100:3>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<95:8> [b3AlignedObjectArray.h <95:8 95:8>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<95:8> [b3AlignedObjectArray.h <96:9 96:9>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<95:8> [b3AlignedObjectArray.h <96:18 96:18>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<95:8> [b3AlignedObjectArray.h <96:25 96:25>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<95:8> [b3AlignedObjectArray.h <98:12 98:12>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<97:4> [b3AlignedObjectArray.h <97:4 97:4>]
LOCAL_SYMBOL: b3AlignedObjectArray.h<97:4> [b3AlignedObjectArray.h <99:4 99:4>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<102:14> [b3GeometryUtil.cpp <102:14 102:23>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<102:14> [b3GeometryUtil.cpp <105:22 105:31>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<102:14> [b3GeometryUtil.cpp <120:6 120:15>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<103:14> [b3GeometryUtil.cpp <103:14 103:15>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<103:14> [b3GeometryUtil.cpp <103:19 103:20>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<103:14> [b3GeometryUtil.cpp <103:24 103:25>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<104:5> [b3GeometryUtil.cpp <104:5 104:5>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<104:5> [b3GeometryUtil.cpp <121:5 121:5>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<107:6> [b3GeometryUtil.cpp <107:6 107:6>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<107:6> [b3GeometryUtil.cpp <119:6 119:6>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<110:7> [b3GeometryUtil.cpp <110:7 110:7>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<110:7> [b3GeometryUtil.cpp <118:7 118:7>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<115:9> [b3GeometryUtil.cpp <115:9 115:9>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<115:9> [b3GeometryUtil.cpp <117:9 117:9>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<129:141> [b3GeometryUtil.cpp <129:141 129:151>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<129:141> [b3GeometryUtil.cpp <177:8 177:18>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<129:91> [b3GeometryUtil.cpp <129:91 129:104>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<129:91> [b3GeometryUtil.cpp <131:25 131:38>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<129:91> [b3GeometryUtil.cpp <135:25 135:38>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<129:91> [b3GeometryUtil.cpp <140:26 140:39>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<129:91> [b3GeometryUtil.cpp <145:27 145:40>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<129:91> [b3GeometryUtil.cpp <175:31 175:44>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<130:1> [b3GeometryUtil.cpp <130:1 130:1>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<130:1> [b3GeometryUtil.cpp <184:1 184:1>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<131:12> [b3GeometryUtil.cpp <131:12 131:21>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<131:12> [b3GeometryUtil.cpp <133:17 133:26>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<131:12> [b3GeometryUtil.cpp <138:20 138:29>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<131:12> [b3GeometryUtil.cpp <142:21 142:30>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<133:11> [b3GeometryUtil.cpp <133:11 133:11>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<133:11> [b3GeometryUtil.cpp <133:15 133:15>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<133:11> [b3GeometryUtil.cpp <133:28 133:28>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<133:11> [b3GeometryUtil.cpp <135:40 135:40>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<133:11> [b3GeometryUtil.cpp <138:14 138:14>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<134:2> [b3GeometryUtil.cpp <134:2 134:2>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<134:2> [b3GeometryUtil.cpp <183:2 183:2>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<135:20> [b3GeometryUtil.cpp <135:20 135:21>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<135:20> [b3GeometryUtil.cpp <148:37 148:38>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<135:20> [b3GeometryUtil.cpp <149:28 149:29>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<135:20> [b3GeometryUtil.cpp <162:27 162:28>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<135:20> [b3GeometryUtil.cpp <166:15 166:16>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<138:12> [b3GeometryUtil.cpp <138:12 138:12>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<138:12> [b3GeometryUtil.cpp <138:18 138:18>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<138:12> [b3GeometryUtil.cpp <138:31 138:31>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<138:12> [b3GeometryUtil.cpp <140:41 140:41>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<138:12> [b3GeometryUtil.cpp <142:15 142:15>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<139:3> [b3GeometryUtil.cpp <139:3 139:3>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<139:3> [b3GeometryUtil.cpp <182:3 182:3>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<140:21> [b3GeometryUtil.cpp <140:21 140:22>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<140:21> [b3GeometryUtil.cpp <147:28 147:29>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<140:21> [b3GeometryUtil.cpp <149:37 149:38>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<140:21> [b3GeometryUtil.cpp <167:15 167:16>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<142:13> [b3GeometryUtil.cpp <142:13 142:13>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<142:13> [b3GeometryUtil.cpp <142:19 142:19>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<142:13> [b3GeometryUtil.cpp <142:32 142:32>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<142:13> [b3GeometryUtil.cpp <145:42 145:42>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<143:4> [b3GeometryUtil.cpp <143:4 143:4>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<143:4> [b3GeometryUtil.cpp <181:4 181:4>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<145:22> [b3GeometryUtil.cpp <145:22 145:23>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<145:22> [b3GeometryUtil.cpp <147:37 147:38>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<145:22> [b3GeometryUtil.cpp <148:28 148:29>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<145:22> [b3GeometryUtil.cpp <168:15 168:16>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<147:15> [b3GeometryUtil.cpp <147:15 147:18>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<147:15> [b3GeometryUtil.cpp <147:21 147:24>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<147:15> [b3GeometryUtil.cpp <151:12 151:15>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<147:15> [b3GeometryUtil.cpp <162:34 162:37>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<147:15> [b3GeometryUtil.cpp <166:7 166:10>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<147:15> [b3GeometryUtil.cpp <169:35 169:38>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<148:15> [b3GeometryUtil.cpp <148:15 148:18>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<148:15> [b3GeometryUtil.cpp <148:21 148:24>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<148:15> [b3GeometryUtil.cpp <152:9 152:12>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<148:15> [b3GeometryUtil.cpp <167:7 167:10>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<148:15> [b3GeometryUtil.cpp <170:26 170:29>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<149:15> [b3GeometryUtil.cpp <149:15 149:18>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<149:15> [b3GeometryUtil.cpp <149:21 149:24>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<149:15> [b3GeometryUtil.cpp <153:9 153:12>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<149:15> [b3GeometryUtil.cpp <168:7 168:10>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<149:15> [b3GeometryUtil.cpp <171:26 171:29>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<154:5> [b3GeometryUtil.cpp <154:5 154:5>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<154:5> [b3GeometryUtil.cpp <180:5 180:5>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<162:15> [b3GeometryUtil.cpp <162:15 162:22>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<162:15> [b3GeometryUtil.cpp <163:17 163:24>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<162:15> [b3GeometryUtil.cpp <165:7 165:14>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<162:15> [b3GeometryUtil.cpp <165:34 165:41>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<162:15> [b3GeometryUtil.cpp <172:26 172:33>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<164:6> [b3GeometryUtil.cpp <164:6 164:6>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<164:6> [b3GeometryUtil.cpp <179:6 179:6>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<169:17> [b3GeometryUtil.cpp <169:17 169:31>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<169:17> [b3GeometryUtil.cpp <170:7 170:21>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<169:17> [b3GeometryUtil.cpp <171:7 171:21>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<169:17> [b3GeometryUtil.cpp <172:7 172:21>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<169:17> [b3GeometryUtil.cpp <175:46 175:60>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<169:17> [b3GeometryUtil.cpp <177:30 177:44>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<176:7> [b3GeometryUtil.cpp <176:7 176:7>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<176:7> [b3GeometryUtil.cpp <178:7 178:7>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<29:28> [b3GeometryUtil.cpp <29:28 29:28>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<29:28> [b3GeometryUtil.cpp <29:29 29:29>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<33:114> [b3GeometryUtil.cpp <33:114 33:118>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<33:114> [b3GeometryUtil.cpp <39:35 39:39>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<33:130> [b3GeometryUtil.cpp <33:130 33:135>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<33:130> [b3GeometryUtil.cpp <39:59 39:64>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<33:81> [b3GeometryUtil.cpp <33:81 33:94>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<33:81> [b3GeometryUtil.cpp <35:19 35:32>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<33:81> [b3GeometryUtil.cpp <38:25 38:38>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<34:1> [b3GeometryUtil.cpp <34:1 34:1>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<34:1> [b3GeometryUtil.cpp <47:1 47:1>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<35:6> [b3GeometryUtil.cpp <35:6 35:15>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<35:6> [b3GeometryUtil.cpp <36:17 36:26>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<36:11> [b3GeometryUtil.cpp <36:11 36:11>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<36:11> [b3GeometryUtil.cpp <36:15 36:15>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<36:11> [b3GeometryUtil.cpp <36:28 36:28>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<36:11> [b3GeometryUtil.cpp <38:40 38:40>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<37:2> [b3GeometryUtil.cpp <37:2 37:2>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<37:2> [b3GeometryUtil.cpp <44:2 44:2>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<38:20> [b3GeometryUtil.cpp <38:20 38:21>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<38:20> [b3GeometryUtil.cpp <39:28 39:29>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<38:20> [b3GeometryUtil.cpp <39:52 39:53>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<39:12> [b3GeometryUtil.cpp <39:12 39:15>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<39:12> [b3GeometryUtil.cpp <40:7 40:10>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<41:3> [b3GeometryUtil.cpp <41:3 41:3>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<41:3> [b3GeometryUtil.cpp <43:3 43:3>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<50:114> [b3GeometryUtil.cpp <50:114 50:121>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<50:114> [b3GeometryUtil.cpp <52:20 52:27>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<50:114> [b3GeometryUtil.cpp <55:25 55:32>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<50:133> [b3GeometryUtil.cpp <50:133 50:138>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<50:133> [b3GeometryUtil.cpp <56:74 56:79>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<50:62> [b3GeometryUtil.cpp <50:62 50:72>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<50:62> [b3GeometryUtil.cpp <56:28 56:38>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<50:62> [b3GeometryUtil.cpp <56:58 56:68>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<51:1> [b3GeometryUtil.cpp <51:1 51:1>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<51:1> [b3GeometryUtil.cpp <63:1 63:1>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<52:6> [b3GeometryUtil.cpp <52:6 52:16>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<52:6> [b3GeometryUtil.cpp <53:17 53:27>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<53:11> [b3GeometryUtil.cpp <53:11 53:11>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<53:11> [b3GeometryUtil.cpp <53:15 53:15>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<53:11> [b3GeometryUtil.cpp <53:29 53:29>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<53:11> [b3GeometryUtil.cpp <55:34 55:34>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<54:2> [b3GeometryUtil.cpp <54:2 54:2>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<54:2> [b3GeometryUtil.cpp <61:2 61:2>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<55:20> [b3GeometryUtil.cpp <55:20 55:21>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<55:20> [b3GeometryUtil.cpp <56:44 56:45>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<56:12> [b3GeometryUtil.cpp <56:12 56:15>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<56:12> [b3GeometryUtil.cpp <57:7 57:10>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<58:3> [b3GeometryUtil.cpp <58:3 58:3>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<58:3> [b3GeometryUtil.cpp <60:3 60:3>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<65:32> [b3GeometryUtil.cpp <65:32 65:44>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<65:85> [b3GeometryUtil.cpp <65:85 65:98>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<67:32> [b3GeometryUtil.cpp <67:32 67:44>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<67:32> [b3GeometryUtil.cpp <73:7 73:19>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<67:85> [b3GeometryUtil.cpp <67:85 67:98>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<67:85> [b3GeometryUtil.cpp <69:19 69:32>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<67:85> [b3GeometryUtil.cpp <72:25 72:38>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<68:1> [b3GeometryUtil.cpp <68:1 68:1>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<68:1> [b3GeometryUtil.cpp <79:1 79:1>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<69:6> [b3GeometryUtil.cpp <69:6 69:15>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<69:6> [b3GeometryUtil.cpp <70:17 70:26>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<70:11> [b3GeometryUtil.cpp <70:11 70:11>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<70:11> [b3GeometryUtil.cpp <70:15 70:15>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<70:11> [b3GeometryUtil.cpp <70:28 70:28>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<70:11> [b3GeometryUtil.cpp <72:40 72:40>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<71:2> [b3GeometryUtil.cpp <71:2 71:2>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<71:2> [b3GeometryUtil.cpp <77:2 77:2>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<72:20> [b3GeometryUtil.cpp <72:20 72:21>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<72:20> [b3GeometryUtil.cpp <73:25 73:26>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<74:3> [b3GeometryUtil.cpp <74:3 74:3>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<74:3> [b3GeometryUtil.cpp <76:3 76:3>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<81:128> [b3GeometryUtil.cpp <81:128 81:144>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<81:128> [b3GeometryUtil.cpp <109:34 109:50>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<81:128> [b3GeometryUtil.cpp <116:10 116:26>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<81:85> [b3GeometryUtil.cpp <81:85 81:92>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<81:85> [b3GeometryUtil.cpp <83:27 83:34>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<81:85> [b3GeometryUtil.cpp <87:25 87:32>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<81:85> [b3GeometryUtil.cpp <92:26 92:33>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<81:85> [b3GeometryUtil.cpp <97:27 97:34>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<81:85> [b3GeometryUtil.cpp <114:50 114:57>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<82:1> [b3GeometryUtil.cpp <82:1 82:1>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<82:1> [b3GeometryUtil.cpp <127:1 127:1>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<83:13> [b3GeometryUtil.cpp <83:13 83:23>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<83:13> [b3GeometryUtil.cpp <85:17 85:27>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<83:13> [b3GeometryUtil.cpp <90:20 90:30>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<83:13> [b3GeometryUtil.cpp <94:21 94:31>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<85:11> [b3GeometryUtil.cpp <85:11 85:11>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<85:11> [b3GeometryUtil.cpp <85:15 85:15>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<85:11> [b3GeometryUtil.cpp <85:29 85:29>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<85:11> [b3GeometryUtil.cpp <87:34 87:34>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<85:11> [b3GeometryUtil.cpp <90:14 90:14>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<86:2> [b3GeometryUtil.cpp <86:2 86:2>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<86:2> [b3GeometryUtil.cpp <125:2 125:2>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<87:20> [b3GeometryUtil.cpp <87:20 87:21>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<87:20> [b3GeometryUtil.cpp <100:16 100:17>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<87:20> [b3GeometryUtil.cpp <101:16 101:17>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<87:20> [b3GeometryUtil.cpp <111:46 111:47>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<90:12> [b3GeometryUtil.cpp <90:12 90:12>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<90:12> [b3GeometryUtil.cpp <90:18 90:18>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<90:12> [b3GeometryUtil.cpp <90:32 90:32>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<90:12> [b3GeometryUtil.cpp <92:35 92:35>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<90:12> [b3GeometryUtil.cpp <94:15 94:15>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<91:3> [b3GeometryUtil.cpp <91:3 91:3>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<91:3> [b3GeometryUtil.cpp <124:3 124:3>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<92:21> [b3GeometryUtil.cpp <92:21 92:22>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<92:21> [b3GeometryUtil.cpp <100:13 100:14>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<94:13> [b3GeometryUtil.cpp <94:13 94:13>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<94:13> [b3GeometryUtil.cpp <94:19 94:19>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<94:13> [b3GeometryUtil.cpp <94:33 94:33>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<94:13> [b3GeometryUtil.cpp <97:36 97:36>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<95:4> [b3GeometryUtil.cpp <95:4 95:4>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<95:4> [b3GeometryUtil.cpp <123:4 123:4>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<97:22> [b3GeometryUtil.cpp <97:22 97:23>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<97:22> [b3GeometryUtil.cpp <101:13 101:14>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<99:15> [b3GeometryUtil.cpp <99:15 99:27>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<99:15> [b3GeometryUtil.cpp <105:6 105:18>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<99:15> [b3GeometryUtil.cpp <106:10 106:22>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<99:15> [b3GeometryUtil.cpp <108:7 108:19>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<99:15> [b3GeometryUtil.cpp <109:20 109:32>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<99:15> [b3GeometryUtil.cpp <111:8 111:20>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<99:15> [b3GeometryUtil.cpp <111:28 111:40>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<99:15> [b3GeometryUtil.cpp <114:36 114:48>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<99:15> [b3GeometryUtil.cpp <116:38 116:50>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<99:29> [b3GeometryUtil.cpp <99:29 99:33>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<99:29> [b3GeometryUtil.cpp <100:5 100:9>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<99:29> [b3GeometryUtil.cpp <105:35 105:39>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<99:35> [b3GeometryUtil.cpp <99:35 99:39>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<99:35> [b3GeometryUtil.cpp <101:5 101:9>]
LOCAL_SYMBOL: b3GeometryUtil.cpp<99:35> [b3GeometryUtil.cpp <105:47 105:51>]
LOCAL_SYMBOL: b3GeometryUtil.h<24:1> [b3GeometryUtil.h <24:1 24:1>]
LOCAL_SYMBOL: b3GeometryUtil.h<24:1> [b3GeometryUtil.h <38:1 38:1>]
LOCAL_SYMBOL: b3GeometryUtil.h<28:121> [b3GeometryUtil.h <28:121 28:137>]
LOCAL_SYMBOL: b3GeometryUtil.h<28:78> [b3GeometryUtil.h <28:78 28:85>]
LOCAL_SYMBOL: b3GeometryUtil.h<30:134> [b3GeometryUtil.h <30:134 30:144>]
LOCAL_SYMBOL: b3GeometryUtil.h<30:84> [b3GeometryUtil.h <30:84 30:97>]
LOCAL_SYMBOL: b3GeometryUtil.h<32:112> [b3GeometryUtil.h <32:112 32:117>]
LOCAL_SYMBOL: b3GeometryUtil.h<32:63> [b3GeometryUtil.h <32:63 32:70>]
LOCAL_SYMBOL: b3GeometryUtil.h<32:90> [b3GeometryUtil.h <32:90 32:100>]
LOCAL_SYMBOL: b3GeometryUtil.h<34:107> [b3GeometryUtil.h <34:107 34:111>]
LOCAL_SYMBOL: b3GeometryUtil.h<34:123> [b3GeometryUtil.h <34:123 34:128>]
LOCAL_SYMBOL: b3GeometryUtil.h<34:74> [b3GeometryUtil.h <34:74 34:87>]
LOCAL_SYMBOL: b3GeometryUtil.h<36:107> [b3GeometryUtil.h <36:107 36:114>]
LOCAL_SYMBOL: b3GeometryUtil.h<36:126> [b3GeometryUtil.h <36:126 36:131>]
LOCAL_SYMBOL: b3GeometryUtil.h<36:55> [b3GeometryUtil.h <36:55 36:65>]
LOCAL_SYMBOL: b3Logging.h<23:37> [b3Logging.h <23:37 23:40>]
LOCAL_SYMBOL: b3Logging.h<28:1> [b3Logging.h <28:1 28:1>]
LOCAL_SYMBOL: b3Logging.h<28:1> [b3Logging.h <39:1 39:1>]
LOCAL_SYMBOL: b3Logging.h<30:28> [b3Logging.h <30:28 30:31>]
LOCAL_SYMBOL: b3Logging.h<30:28> [b3Logging.h <32:23 32:26>]
LOCAL_SYMBOL: b3Logging.h<31:2> [b3Logging.h <31:2 31:2>]
LOCAL_SYMBOL: b3Logging.h<31:2> [b3Logging.h <33:2 33:2>]
LOCAL_SYMBOL: b3Logging.h<36:2> [b3Logging.h <36:2 36:2>]
LOCAL_SYMBOL: b3Logging.h<36:2> [b3Logging.h <38:2 38:2>]
LOCAL_SYMBOL: b3Logging.h<53:41> [b3Logging.h <53:41 53:43>]
LOCAL_SYMBOL: b3Logging.h<54:49> [b3Logging.h <54:49 54:51>]
LOCAL_SYMBOL: b3Logging.h<55:47> [b3Logging.h <55:47 55:49>]
LOCAL_SYMBOL: b3Logging.h<56:51> [b3Logging.h <56:51 56:53>]
LOCAL_SYMBOL: b3Logging.h<60:42> [b3Logging.h <60:42 60:51>]
LOCAL_SYMBOL: b3Logging.h<61:58> [b3Logging.h <61:58 61:71>]
LOCAL_SYMBOL: b3Logging.h<62:54> [b3Logging.h <62:54 62:65>]
LOCAL_SYMBOL: b3Logging.h<65:62> [b3Logging.h <65:62 65:70>]
LOCAL_SYMBOL: b3Logging.h<66:62> [b3Logging.h <66:62 66:70>]
LOCAL_SYMBOL: b3Logging.h<69:48> [b3Logging.h <69:48 69:50>]
LOCAL_SYMBOL: b3Logging.h<70:56> [b3Logging.h <70:56 70:58>]
LOCAL_SYMBOL: b3Logging.h<71:54> [b3Logging.h <71:54 71:56>]
LOCAL_SYMBOL: b3MinMax.h<22:17> [b3MinMax.h <22:17 22:17>]
LOCAL_SYMBOL: b3MinMax.h<22:17> [b3MinMax.h <23:23 23:23>]
LOCAL_SYMBOL: b3MinMax.h<22:17> [b3MinMax.h <23:38 23:38>]
LOCAL_SYMBOL: b3MinMax.h<22:17> [b3MinMax.h <23:50 23:50>]
LOCAL_SYMBOL: b3MinMax.h<23:41> [b3MinMax.h <23:41 23:41>]
LOCAL_SYMBOL: b3MinMax.h<23:41> [b3MinMax.h <25:10 25:10>]
LOCAL_SYMBOL: b3MinMax.h<23:41> [b3MinMax.h <25:18 25:18>]
LOCAL_SYMBOL: b3MinMax.h<23:53> [b3MinMax.h <23:53 23:53>]
LOCAL_SYMBOL: b3MinMax.h<23:53> [b3MinMax.h <25:14 25:14>]
LOCAL_SYMBOL: b3MinMax.h<23:53> [b3MinMax.h <25:22 25:22>]
LOCAL_SYMBOL: b3MinMax.h<24:1> [b3MinMax.h <24:1 24:1>]
LOCAL_SYMBOL: b3MinMax.h<24:1> [b3MinMax.h <26:1 26:1>]
LOCAL_SYMBOL: b3MinMax.h<28:17> [b3MinMax.h <28:17 28:17>]
LOCAL_SYMBOL: b3MinMax.h<28:17> [b3MinMax.h <29:23 29:23>]
LOCAL_SYMBOL: b3MinMax.h<28:17> [b3MinMax.h <29:38 29:38>]
LOCAL_SYMBOL: b3MinMax.h<28:17> [b3MinMax.h <29:50 29:50>]
LOCAL_SYMBOL: b3MinMax.h<29:41> [b3MinMax.h <29:41 29:41>]
LOCAL_SYMBOL: b3MinMax.h<29:41> [b3MinMax.h <31:11 31:11>]
LOCAL_SYMBOL: b3MinMax.h<29:41> [b3MinMax.h <31:19 31:19>]
LOCAL_SYMBOL: b3MinMax.h<29:53> [b3MinMax.h <29:53 29:53>]
LOCAL_SYMBOL: b3MinMax.h<29:53> [b3MinMax.h <31:15 31:15>]
LOCAL_SYMBOL: b3MinMax.h<29:53> [b3MinMax.h <31:23 31:23>]
LOCAL_SYMBOL: b3MinMax.h<30:1> [b3MinMax.h <30:1 30:1>]
LOCAL_SYMBOL: b3MinMax.h<30:1> [b3MinMax.h <32:1 32:1>]
LOCAL_SYMBOL: b3MinMax.h<34:17> [b3MinMax.h <34:17 34:17>]
LOCAL_SYMBOL: b3MinMax.h<34:17> [b3MinMax.h <35:23 35:23>]
LOCAL_SYMBOL: b3MinMax.h<34:17> [b3MinMax.h <35:42 35:42>]
LOCAL_SYMBOL: b3MinMax.h<34:17> [b3MinMax.h <35:54 35:54>]
LOCAL_SYMBOL: b3MinMax.h<34:17> [b3MinMax.h <35:67 35:67>]
LOCAL_SYMBOL: b3MinMax.h<35:45> [b3MinMax.h <35:45 35:45>]
LOCAL_SYMBOL: b3MinMax.h<35:45> [b3MinMax.h <37:9 37:9>]
LOCAL_SYMBOL: b3MinMax.h<35:45> [b3MinMax.h <37:29 37:29>]
LOCAL_SYMBOL: b3MinMax.h<35:45> [b3MinMax.h <37:38 37:38>]
LOCAL_SYMBOL: b3MinMax.h<35:57> [b3MinMax.h <35:57 35:58>]
LOCAL_SYMBOL: b3MinMax.h<35:57> [b3MinMax.h <37:13 37:14>]
LOCAL_SYMBOL: b3MinMax.h<35:57> [b3MinMax.h <37:18 37:19>]
LOCAL_SYMBOL: b3MinMax.h<35:70> [b3MinMax.h <35:70 35:71>]
LOCAL_SYMBOL: b3MinMax.h<35:70> [b3MinMax.h <37:24 37:25>]
LOCAL_SYMBOL: b3MinMax.h<35:70> [b3MinMax.h <37:33 37:34>]
LOCAL_SYMBOL: b3MinMax.h<36:1> [b3MinMax.h <36:1 36:1>]
LOCAL_SYMBOL: b3MinMax.h<36:1> [b3MinMax.h <38:1 38:1>]
LOCAL_SYMBOL: b3MinMax.h<40:17> [b3MinMax.h <40:17 40:17>]
LOCAL_SYMBOL: b3MinMax.h<40:17> [b3MinMax.h <41:31 41:31>]
LOCAL_SYMBOL: b3MinMax.h<40:17> [b3MinMax.h <41:43 41:43>]
LOCAL_SYMBOL: b3MinMax.h<41:34> [b3MinMax.h <41:34 41:34>]
LOCAL_SYMBOL: b3MinMax.h<41:34> [b3MinMax.h <43:13 43:13>]
LOCAL_SYMBOL: b3MinMax.h<41:34> [b3MinMax.h <45:3 45:3>]
LOCAL_SYMBOL: b3MinMax.h<41:46> [b3MinMax.h <41:46 41:46>]
LOCAL_SYMBOL: b3MinMax.h<41:46> [b3MinMax.h <43:9 43:9>]
LOCAL_SYMBOL: b3MinMax.h<41:46> [b3MinMax.h <45:7 45:7>]
LOCAL_SYMBOL: b3MinMax.h<42:1> [b3MinMax.h <42:1 42:1>]
LOCAL_SYMBOL: b3MinMax.h<42:1> [b3MinMax.h <47:1 47:1>]
LOCAL_SYMBOL: b3MinMax.h<44:2> [b3MinMax.h <44:2 44:2>]
LOCAL_SYMBOL: b3MinMax.h<44:2> [b3MinMax.h <46:2 46:2>]
LOCAL_SYMBOL: b3MinMax.h<49:17> [b3MinMax.h <49:17 49:17>]
LOCAL_SYMBOL: b3MinMax.h<49:17> [b3MinMax.h <50:31 50:31>]
LOCAL_SYMBOL: b3MinMax.h<49:17> [b3MinMax.h <50:43 50:43>]
LOCAL_SYMBOL: b3MinMax.h<50:34> [b3MinMax.h <50:34 50:34>]
LOCAL_SYMBOL: b3MinMax.h<50:34> [b3MinMax.h <52:9 52:9>]
LOCAL_SYMBOL: b3MinMax.h<50:34> [b3MinMax.h <54:3 54:3>]
LOCAL_SYMBOL: b3MinMax.h<50:46> [b3MinMax.h <50:46 50:46>]
LOCAL_SYMBOL: b3MinMax.h<50:46> [b3MinMax.h <52:13 52:13>]
LOCAL_SYMBOL: b3MinMax.h<50:46> [b3MinMax.h <54:7 54:7>]
LOCAL_SYMBOL: b3MinMax.h<51:1> [b3MinMax.h <51:1 51:1>]
LOCAL_SYMBOL: b3MinMax.h<51:1> [b3MinMax.h <56:1 56:1>]
LOCAL_SYMBOL: b3MinMax.h<53:2> [b3MinMax.h <53:2 53:2>]
LOCAL_SYMBOL: b3MinMax.h<53:2> [b3MinMax.h <55:2 55:2>]
LOCAL_SYMBOL: b3MinMax.h<58:17> [b3MinMax.h <58:17 58:17>]
LOCAL_SYMBOL: b3MinMax.h<58:17> [b3MinMax.h <59:30 59:30>]
LOCAL_SYMBOL: b3MinMax.h<58:17> [b3MinMax.h <59:42 59:42>]
LOCAL_SYMBOL: b3MinMax.h<58:17> [b3MinMax.h <59:55 59:55>]
LOCAL_SYMBOL: b3MinMax.h<59:33> [b3MinMax.h <59:33 59:33>]
LOCAL_SYMBOL: b3MinMax.h<59:33> [b3MinMax.h <61:6 61:6>]
LOCAL_SYMBOL: b3MinMax.h<59:33> [b3MinMax.h <63:3 63:3>]
LOCAL_SYMBOL: b3MinMax.h<59:33> [b3MinMax.h <65:16 65:16>]
LOCAL_SYMBOL: b3MinMax.h<59:33> [b3MinMax.h <67:3 67:3>]
LOCAL_SYMBOL: b3MinMax.h<59:45> [b3MinMax.h <59:45 59:46>]
LOCAL_SYMBOL: b3MinMax.h<59:45> [b3MinMax.h <61:10 61:11>]
LOCAL_SYMBOL: b3MinMax.h<59:45> [b3MinMax.h <63:7 63:8>]
LOCAL_SYMBOL: b3MinMax.h<59:58> [b3MinMax.h <59:58 59:59>]
LOCAL_SYMBOL: b3MinMax.h<59:58> [b3MinMax.h <65:11 65:12>]
LOCAL_SYMBOL: b3MinMax.h<59:58> [b3MinMax.h <67:7 67:8>]
LOCAL_SYMBOL: b3MinMax.h<60:1> [b3MinMax.h <60:1 60:1>]
LOCAL_SYMBOL: b3MinMax.h<60:1> [b3MinMax.h <69:1 69:1>]
LOCAL_SYMBOL: b3MinMax.h<62:2> [b3MinMax.h <62:2 62:2>]
LOCAL_SYMBOL: b3MinMax.h<62:2> [b3MinMax.h <64:2 64:2>]
LOCAL_SYMBOL: b3MinMax.h<66:2> [b3MinMax.h <66:2 66:2>]
LOCAL_SYMBOL: b3MinMax.h<66:2> [b3MinMax.h <68:2 68:2>]
LOCAL_SYMBOL: b3Scalar.h<35:1> [b3Scalar.h <35:1 35:1>]
LOCAL_SYMBOL: b3Scalar.h<35:1> [b3Scalar.h <37:1 37:1>]
LOCAL_SYMBOL: b3Scalar.h<361:42> [b3Scalar.h <361:42 361:42>]
LOCAL_SYMBOL: b3Scalar.h<361:42> [b3Scalar.h <378:15 378:15>]
LOCAL_SYMBOL: b3Scalar.h<362:1> [b3Scalar.h <362:1 362:1>]
LOCAL_SYMBOL: b3Scalar.h<362:1> [b3Scalar.h <380:1 380:1>]
LOCAL_SYMBOL: b3Scalar.h<381:42> [b3Scalar.h <381:42 381:42>]
LOCAL_SYMBOL: b3Scalar.h<381:42> [b3Scalar.h <381:60 381:60>]
LOCAL_SYMBOL: b3Scalar.h<381:45> [b3Scalar.h <381:45 381:45>]
LOCAL_SYMBOL: b3Scalar.h<381:45> [b3Scalar.h <381:64 381:64>]
LOCAL_SYMBOL: b3Scalar.h<382:41> [b3Scalar.h <382:41 382:41>]
LOCAL_SYMBOL: b3Scalar.h<382:41> [b3Scalar.h <382:58 382:58>]
LOCAL_SYMBOL: b3Scalar.h<382:44> [b3Scalar.h <382:44 382:44>]
LOCAL_SYMBOL: b3Scalar.h<382:44> [b3Scalar.h <382:62 382:62>]
LOCAL_SYMBOL: b3Scalar.h<383:41> [b3Scalar.h <383:41 383:41>]
LOCAL_SYMBOL: b3Scalar.h<383:41> [b3Scalar.h <383:58 383:58>]
LOCAL_SYMBOL: b3Scalar.h<383:44> [b3Scalar.h <383:44 383:44>]
LOCAL_SYMBOL: b3Scalar.h<383:44> [b3Scalar.h <383:62 383:62>]
LOCAL_SYMBOL: b3Scalar.h<384:41> [b3Scalar.h <384:41 384:41>]
LOCAL_SYMBOL: b3Scalar.h<384:41> [b3Scalar.h <384:58 384:58>]
LOCAL_SYMBOL: b3Scalar.h<384:44> [b3Scalar.h <384:44 384:44>]
LOCAL_SYMBOL: b3Scalar.h<384:44> [b3Scalar.h <384:62 384:62>]
LOCAL_SYMBOL: b3Scalar.h<385:42> [b3Scalar.h <385:42 385:42>]
LOCAL_SYMBOL: b3Scalar.h<385:42> [b3Scalar.h <386:6 386:6>]
LOCAL_SYMBOL: b3Scalar.h<385:42> [b3Scalar.h <387:3 387:3>]
LOCAL_SYMBOL: b3Scalar.h<385:42> [b3Scalar.h <388:6 388:6>]
LOCAL_SYMBOL: b3Scalar.h<385:42> [b3Scalar.h <389:3 389:3>]
LOCAL_SYMBOL: b3Scalar.h<385:42> [b3Scalar.h <390:15 390:15>]
LOCAL_SYMBOL: b3Scalar.h<385:45> [b3Scalar.h <385:45 385:45>]
LOCAL_SYMBOL: b3Scalar.h<385:45> [b3Scalar.h <391:1 391:1>]
LOCAL_SYMBOL: b3Scalar.h<392:42> [b3Scalar.h <392:42 392:42>]
LOCAL_SYMBOL: b3Scalar.h<392:42> [b3Scalar.h <393:6 393:6>]
LOCAL_SYMBOL: b3Scalar.h<392:42> [b3Scalar.h <394:3 394:3>]
LOCAL_SYMBOL: b3Scalar.h<392:42> [b3Scalar.h <395:6 395:6>]
LOCAL_SYMBOL: b3Scalar.h<392:42> [b3Scalar.h <396:3 396:3>]
LOCAL_SYMBOL: b3Scalar.h<392:42> [b3Scalar.h <397:15 397:15>]
LOCAL_SYMBOL: b3Scalar.h<392:45> [b3Scalar.h <392:45 392:45>]
LOCAL_SYMBOL: b3Scalar.h<392:45> [b3Scalar.h <398:1 398:1>]
LOCAL_SYMBOL: b3Scalar.h<399:42> [b3Scalar.h <399:42 399:42>]
LOCAL_SYMBOL: b3Scalar.h<399:42> [b3Scalar.h <399:60 399:60>]
LOCAL_SYMBOL: b3Scalar.h<399:45> [b3Scalar.h <399:45 399:45>]
LOCAL_SYMBOL: b3Scalar.h<399:45> [b3Scalar.h <399:64 399:64>]
LOCAL_SYMBOL: b3Scalar.h<400:43> [b3Scalar.h <400:43 400:43>]
LOCAL_SYMBOL: b3Scalar.h<400:43> [b3Scalar.h <400:74 400:74>]
LOCAL_SYMBOL: b3Scalar.h<400:55> [b3Scalar.h <400:55 400:55>]
LOCAL_SYMBOL: b3Scalar.h<400:55> [b3Scalar.h <400:77 400:77>]
LOCAL_SYMBOL: b3Scalar.h<400:58> [b3Scalar.h <400:58 400:58>]
LOCAL_SYMBOL: b3Scalar.h<400:58> [b3Scalar.h <400:81 400:81>]
LOCAL_SYMBOL: b3Scalar.h<401:41> [b3Scalar.h <401:41 401:41>]
LOCAL_SYMBOL: b3Scalar.h<401:41> [b3Scalar.h <401:58 401:58>]
LOCAL_SYMBOL: b3Scalar.h<401:44> [b3Scalar.h <401:44 401:44>]
LOCAL_SYMBOL: b3Scalar.h<401:44> [b3Scalar.h <401:62 401:62>]
LOCAL_SYMBOL: b3Scalar.h<402:41> [b3Scalar.h <402:41 402:41>]
LOCAL_SYMBOL: b3Scalar.h<402:41> [b3Scalar.h <402:58 402:58>]
LOCAL_SYMBOL: b3Scalar.h<402:44> [b3Scalar.h <402:44 402:44>]
LOCAL_SYMBOL: b3Scalar.h<402:44> [b3Scalar.h <402:62 402:62>]
LOCAL_SYMBOL: b3Scalar.h<403:41> [b3Scalar.h <403:41 403:41>]
LOCAL_SYMBOL: b3Scalar.h<403:41> [b3Scalar.h <403:69 403:69>]
LOCAL_SYMBOL: b3Scalar.h<403:52> [b3Scalar.h <403:52 403:52>]
LOCAL_SYMBOL: b3Scalar.h<403:52> [b3Scalar.h <403:71 403:71>]
LOCAL_SYMBOL: b3Scalar.h<403:55> [b3Scalar.h <403:55 403:55>]
LOCAL_SYMBOL: b3Scalar.h<403:55> [b3Scalar.h <403:75 403:75>]
LOCAL_SYMBOL: b3Scalar.h<404:42> [b3Scalar.h <404:42 404:42>]
LOCAL_SYMBOL: b3Scalar.h<404:42> [b3Scalar.h <404:71 404:71>]
LOCAL_SYMBOL: b3Scalar.h<404:53> [b3Scalar.h <404:53 404:53>]
LOCAL_SYMBOL: b3Scalar.h<404:53> [b3Scalar.h <404:73 404:73>]
LOCAL_SYMBOL: b3Scalar.h<404:56> [b3Scalar.h <404:56 404:56>]
LOCAL_SYMBOL: b3Scalar.h<404:56> [b3Scalar.h <404:77 404:77>]
LOCAL_SYMBOL: b3Scalar.h<426:47> [b3Scalar.h <426:47 426:47>]
LOCAL_SYMBOL: b3Scalar.h<426:47> [b3Scalar.h <430:26 430:26>]
LOCAL_SYMBOL: b3Scalar.h<426:47> [b3Scalar.h <439:10 439:10>]
LOCAL_SYMBOL: b3Scalar.h<426:59> [b3Scalar.h <426:59 426:59>]
LOCAL_SYMBOL: b3Scalar.h<426:59> [b3Scalar.h <432:6 432:6>]
LOCAL_SYMBOL: b3Scalar.h<426:59> [b3Scalar.h <433:17 433:17>]
LOCAL_SYMBOL: b3Scalar.h<426:59> [b3Scalar.h <433:31 433:31>]
LOCAL_SYMBOL: b3Scalar.h<426:59> [b3Scalar.h <436:17 436:17>]
LOCAL_SYMBOL: b3Scalar.h<426:59> [b3Scalar.h <436:39 436:39>]
LOCAL_SYMBOL: b3Scalar.h<427:1> [b3Scalar.h <427:1 427:1>]
LOCAL_SYMBOL: b3Scalar.h<427:1> [b3Scalar.h <440:1 440:1>]
LOCAL_SYMBOL: b3Scalar.h<428:11> [b3Scalar.h <428:11 428:17>]
LOCAL_SYMBOL: b3Scalar.h<428:11> [b3Scalar.h <429:28 429:34>]
LOCAL_SYMBOL: b3Scalar.h<428:11> [b3Scalar.h <434:11 434:17>]
LOCAL_SYMBOL: b3Scalar.h<428:11> [b3Scalar.h <434:21 434:27>]
LOCAL_SYMBOL: b3Scalar.h<428:11> [b3Scalar.h <437:21 437:27>]
LOCAL_SYMBOL: b3Scalar.h<429:11> [b3Scalar.h <429:11 429:17>]
LOCAL_SYMBOL: b3Scalar.h<429:11> [b3Scalar.h <437:11 437:17>]
LOCAL_SYMBOL: b3Scalar.h<430:11> [b3Scalar.h <430:11 430:15>]
LOCAL_SYMBOL: b3Scalar.h<430:11> [b3Scalar.h <433:21 433:25>]
LOCAL_SYMBOL: b3Scalar.h<430:11> [b3Scalar.h <433:35 433:39>]
LOCAL_SYMBOL: b3Scalar.h<430:11> [b3Scalar.h <436:21 436:25>]
LOCAL_SYMBOL: b3Scalar.h<430:11> [b3Scalar.h <436:31 436:35>]
LOCAL_SYMBOL: b3Scalar.h<431:11> [b3Scalar.h <431:11 431:15>]
LOCAL_SYMBOL: b3Scalar.h<431:11> [b3Scalar.h <434:3 434:7>]
LOCAL_SYMBOL: b3Scalar.h<431:11> [b3Scalar.h <437:3 437:7>]
LOCAL_SYMBOL: b3Scalar.h<431:11> [b3Scalar.h <439:23 439:27>]
LOCAL_SYMBOL: b3Scalar.h<431:11> [b3Scalar.h <439:31 439:35>]
LOCAL_SYMBOL: b3Scalar.h<432:17> [b3Scalar.h <432:17 432:17>]
LOCAL_SYMBOL: b3Scalar.h<432:17> [b3Scalar.h <435:2 435:2>]
LOCAL_SYMBOL: b3Scalar.h<433:12> [b3Scalar.h <433:12 433:12>]
LOCAL_SYMBOL: b3Scalar.h<433:12> [b3Scalar.h <434:31 434:31>]
LOCAL_SYMBOL: b3Scalar.h<435:9> [b3Scalar.h <435:9 435:9>]
LOCAL_SYMBOL: b3Scalar.h<435:9> [b3Scalar.h <438:2 438:2>]
LOCAL_SYMBOL: b3Scalar.h<436:12> [b3Scalar.h <436:12 436:12>]
LOCAL_SYMBOL: b3Scalar.h<436:12> [b3Scalar.h <437:31 437:31>]
LOCAL_SYMBOL: b3Scalar.h<442:48> [b3Scalar.h <442:48 442:48>]
LOCAL_SYMBOL: b3Scalar.h<442:48> [b3Scalar.h <442:67 442:67>]
LOCAL_SYMBOL: b3Scalar.h<442:51> [b3Scalar.h <442:51 442:51>]
LOCAL_SYMBOL: b3Scalar.h<442:51> [b3Scalar.h <442:84 442:84>]
LOCAL_SYMBOL: b3Scalar.h<444:39> [b3Scalar.h <444:39 444:39>]
LOCAL_SYMBOL: b3Scalar.h<444:39> [b3Scalar.h <445:12 445:12>]
LOCAL_SYMBOL: b3Scalar.h<444:39> [b3Scalar.h <445:29 445:29>]
LOCAL_SYMBOL: b3Scalar.h<444:51> [b3Scalar.h <444:51 444:53>]
LOCAL_SYMBOL: b3Scalar.h<444:51> [b3Scalar.h <445:18 445:20>]
LOCAL_SYMBOL: b3Scalar.h<444:51> [b3Scalar.h <445:35 445:37>]
LOCAL_SYMBOL: b3Scalar.h<444:56> [b3Scalar.h <444:56 444:56>]
LOCAL_SYMBOL: b3Scalar.h<444:56> [b3Scalar.h <446:1 446:1>]
LOCAL_SYMBOL: b3Scalar.h<447:47> [b3Scalar.h <447:47 447:47>]
LOCAL_SYMBOL: b3Scalar.h<447:47> [b3Scalar.h <448:13 448:13>]
LOCAL_SYMBOL: b3Scalar.h<447:59> [b3Scalar.h <447:59 447:61>]
LOCAL_SYMBOL: b3Scalar.h<447:59> [b3Scalar.h <448:19 448:21>]
LOCAL_SYMBOL: b3Scalar.h<447:64> [b3Scalar.h <447:64 447:64>]
LOCAL_SYMBOL: b3Scalar.h<447:64> [b3Scalar.h <449:1 449:1>]
LOCAL_SYMBOL: b3Scalar.h<452:49> [b3Scalar.h <452:49 452:49>]
LOCAL_SYMBOL: b3Scalar.h<452:49> [b3Scalar.h <453:12 453:12>]
LOCAL_SYMBOL: b3Scalar.h<452:52> [b3Scalar.h <452:52 452:52>]
LOCAL_SYMBOL: b3Scalar.h<452:52> [b3Scalar.h <454:1 454:1>]
LOCAL_SYMBOL: b3Scalar.h<456:45> [b3Scalar.h <456:45 456:45>]
LOCAL_SYMBOL: b3Scalar.h<456:45> [b3Scalar.h <456:57 456:57>]
LOCAL_SYMBOL: b3Scalar.h<456:48> [b3Scalar.h <456:48 456:48>]
LOCAL_SYMBOL: b3Scalar.h<456:48> [b3Scalar.h <456:78 456:78>]
LOCAL_SYMBOL: b3Scalar.h<457:45> [b3Scalar.h <457:45 457:45>]
LOCAL_SYMBOL: b3Scalar.h<457:45> [b3Scalar.h <457:57 457:57>]
LOCAL_SYMBOL: b3Scalar.h<457:48> [b3Scalar.h <457:48 457:48>]
LOCAL_SYMBOL: b3Scalar.h<457:48> [b3Scalar.h <457:78 457:78>]
LOCAL_SYMBOL: b3Scalar.h<462:42> [b3Scalar.h <462:42 462:42>]
LOCAL_SYMBOL: b3Scalar.h<462:42> [b3Scalar.h <464:9 464:9>]
LOCAL_SYMBOL: b3Scalar.h<462:54> [b3Scalar.h <462:54 462:54>]
LOCAL_SYMBOL: b3Scalar.h<462:54> [b3Scalar.h <464:18 464:18>]
LOCAL_SYMBOL: b3Scalar.h<462:66> [b3Scalar.h <462:66 462:66>]
LOCAL_SYMBOL: b3Scalar.h<462:66> [b3Scalar.h <464:22 464:22>]
LOCAL_SYMBOL: b3Scalar.h<463:1> [b3Scalar.h <463:1 463:1>]
LOCAL_SYMBOL: b3Scalar.h<463:1> [b3Scalar.h <465:1 465:1>]
LOCAL_SYMBOL: b3Scalar.h<471:1> [b3Scalar.h <471:1 471:1>]
LOCAL_SYMBOL: b3Scalar.h<471:1> [b3Scalar.h <478:1 478:1>]
LOCAL_SYMBOL: b3Scalar.h<472:13> [b3Scalar.h <472:13 472:13>]
LOCAL_SYMBOL: b3Scalar.h<472:13> [b3Scalar.h <473:36 473:36>]
LOCAL_SYMBOL: b3Scalar.h<473:16> [b3Scalar.h <473:16 473:16>]
LOCAL_SYMBOL: b3Scalar.h<473:16> [b3Scalar.h <474:8 474:8>]
LOCAL_SYMBOL: b3Scalar.h<484:44> [b3Scalar.h <484:44 484:52>]
LOCAL_SYMBOL: b3Scalar.h<484:44> [b3Scalar.h <490:40 490:48>]
LOCAL_SYMBOL: b3Scalar.h<484:44> [b3Scalar.h <490:58 490:66>]
LOCAL_SYMBOL: b3Scalar.h<484:64> [b3Scalar.h <484:64 484:86>]
LOCAL_SYMBOL: b3Scalar.h<484:64> [b3Scalar.h <492:14 492:36>]
LOCAL_SYMBOL: b3Scalar.h<484:98> [b3Scalar.h <484:98 484:117>]
LOCAL_SYMBOL: b3Scalar.h<484:98> [b3Scalar.h <492:51 492:70>]
LOCAL_SYMBOL: b3Scalar.h<485:1> [b3Scalar.h <485:1 485:1>]
LOCAL_SYMBOL: b3Scalar.h<485:1> [b3Scalar.h <493:1 493:1>]
LOCAL_SYMBOL: b3Scalar.h<490:14> [b3Scalar.h <490:14 490:19>]
LOCAL_SYMBOL: b3Scalar.h<490:14> [b3Scalar.h <491:25 491:30>]
LOCAL_SYMBOL: b3Scalar.h<490:14> [b3Scalar.h <492:40 492:45>]
LOCAL_SYMBOL: b3Scalar.h<491:14> [b3Scalar.h <491:14 491:20>]
LOCAL_SYMBOL: b3Scalar.h<491:14> [b3Scalar.h <492:74 492:80>]
LOCAL_SYMBOL: b3Scalar.h<494:39> [b3Scalar.h <494:39 494:47>]
LOCAL_SYMBOL: b3Scalar.h<494:39> [b3Scalar.h <496:40 496:48>]
LOCAL_SYMBOL: b3Scalar.h<494:39> [b3Scalar.h <496:58 496:66>]
LOCAL_SYMBOL: b3Scalar.h<494:54> [b3Scalar.h <494:54 494:76>]
LOCAL_SYMBOL: b3Scalar.h<494:54> [b3Scalar.h <498:30 498:52>]
LOCAL_SYMBOL: b3Scalar.h<494:83> [b3Scalar.h <494:83 494:102>]
LOCAL_SYMBOL: b3Scalar.h<494:83> [b3Scalar.h <498:67 498:86>]
LOCAL_SYMBOL: b3Scalar.h<495:1> [b3Scalar.h <495:1 495:1>]
LOCAL_SYMBOL: b3Scalar.h<495:1> [b3Scalar.h <499:1 499:1>]
LOCAL_SYMBOL: b3Scalar.h<496:14> [b3Scalar.h <496:14 496:19>]
LOCAL_SYMBOL: b3Scalar.h<496:14> [b3Scalar.h <497:25 497:30>]
LOCAL_SYMBOL: b3Scalar.h<496:14> [b3Scalar.h <498:56 498:61>]
LOCAL_SYMBOL: b3Scalar.h<497:14> [b3Scalar.h <497:14 497:20>]
LOCAL_SYMBOL: b3Scalar.h<497:14> [b3Scalar.h <498:90 498:96>]
LOCAL_SYMBOL: b3Scalar.h<500:41> [b3Scalar.h <500:41 500:49>]
LOCAL_SYMBOL: b3Scalar.h<500:41> [b3Scalar.h <505:13 505:21>]
LOCAL_SYMBOL: b3Scalar.h<500:58> [b3Scalar.h <500:58 500:80>]
LOCAL_SYMBOL: b3Scalar.h<500:58> [b3Scalar.h <505:31 505:53>]
LOCAL_SYMBOL: b3Scalar.h<500:89> [b3Scalar.h <500:89 500:108>]
LOCAL_SYMBOL: b3Scalar.h<500:89> [b3Scalar.h <505:57 505:76>]
LOCAL_SYMBOL: b3Scalar.h<501:1> [b3Scalar.h <501:1 501:1>]
LOCAL_SYMBOL: b3Scalar.h<501:1> [b3Scalar.h <507:1 507:1>]
LOCAL_SYMBOL: b3Scalar.h<509:19> [b3Scalar.h <509:19 509:19>]
LOCAL_SYMBOL: b3Scalar.h<509:19> [b3Scalar.h <509:50 509:50>]
LOCAL_SYMBOL: b3Scalar.h<509:19> [b3Scalar.h <509:56 509:56>]
LOCAL_SYMBOL: b3Scalar.h<509:19> [b3Scalar.h <511:2 511:2>]
LOCAL_SYMBOL: b3Scalar.h<509:53> [b3Scalar.h <509:53 509:53>]
LOCAL_SYMBOL: b3Scalar.h<509:53> [b3Scalar.h <511:10 511:10>]
LOCAL_SYMBOL: b3Scalar.h<509:53> [b3Scalar.h <512:2 512:2>]
LOCAL_SYMBOL: b3Scalar.h<509:59> [b3Scalar.h <509:59 509:59>]
LOCAL_SYMBOL: b3Scalar.h<509:59> [b3Scalar.h <512:6 512:6>]
LOCAL_SYMBOL: b3Scalar.h<509:59> [b3Scalar.h <513:2 513:2>]
LOCAL_SYMBOL: b3Scalar.h<510:1> [b3Scalar.h <510:1 510:1>]
LOCAL_SYMBOL: b3Scalar.h<510:1> [b3Scalar.h <514:1 514:1>]
LOCAL_SYMBOL: b3Scalar.h<511:4> [b3Scalar.h <511:4 511:6>]
LOCAL_SYMBOL: b3Scalar.h<511:4> [b3Scalar.h <513:6 513:8>]
LOCAL_SYMBOL: b3Scalar.h<518:48> [b3Scalar.h <518:48 518:50>]
LOCAL_SYMBOL: b3Scalar.h<518:48> [b3Scalar.h <520:12 520:14>]
LOCAL_SYMBOL: b3Scalar.h<518:48> [b3Scalar.h <520:41 520:43>]
LOCAL_SYMBOL: b3Scalar.h<518:48> [b3Scalar.h <520:69 520:71>]
LOCAL_SYMBOL: b3Scalar.h<518:48> [b3Scalar.h <520:98 520:100>]
LOCAL_SYMBOL: b3Scalar.h<519:1> [b3Scalar.h <519:1 519:1>]
LOCAL_SYMBOL: b3Scalar.h<519:1> [b3Scalar.h <521:1 521:1>]
LOCAL_SYMBOL: b3Scalar.h<523:60> [b3Scalar.h <523:60 523:62>]
LOCAL_SYMBOL: b3Scalar.h<523:60> [b3Scalar.h <525:39 525:41>]
LOCAL_SYMBOL: b3Scalar.h<523:60> [b3Scalar.h <525:63 525:65>]
LOCAL_SYMBOL: b3Scalar.h<524:1> [b3Scalar.h <524:1 524:1>]
LOCAL_SYMBOL: b3Scalar.h<524:1> [b3Scalar.h <526:1 526:1>]
LOCAL_SYMBOL: b3Scalar.h<528:43> [b3Scalar.h <528:43 528:45>]
LOCAL_SYMBOL: b3Scalar.h<528:43> [b3Scalar.h <530:32 530:34>]
LOCAL_SYMBOL: b3Scalar.h<529:1> [b3Scalar.h <529:1 529:1>]
LOCAL_SYMBOL: b3Scalar.h<529:1> [b3Scalar.h <531:1 531:1>]
LOCAL_SYMBOL: b3Scalar.h<533:51> [b3Scalar.h <533:51 533:53>]
LOCAL_SYMBOL: b3Scalar.h<533:51> [b3Scalar.h <535:39 535:41>]
LOCAL_SYMBOL: b3Scalar.h<534:1> [b3Scalar.h <534:1 534:1>]
LOCAL_SYMBOL: b3Scalar.h<534:1> [b3Scalar.h <536:1 536:1>]
LOCAL_SYMBOL: b3Scalar.h<544:55> [b3Scalar.h <544:55 544:55>]
LOCAL_SYMBOL: b3Scalar.h<544:55> [b3Scalar.h <548:44 548:44>]
LOCAL_SYMBOL: b3Scalar.h<545:1> [b3Scalar.h <545:1 545:1>]
LOCAL_SYMBOL: b3Scalar.h<545:1> [b3Scalar.h <555:1 555:1>]
LOCAL_SYMBOL: b3Scalar.h<546:18> [b3Scalar.h <546:18 546:18>]
LOCAL_SYMBOL: b3Scalar.h<546:18> [b3Scalar.h <547:44 547:44>]
LOCAL_SYMBOL: b3Scalar.h<546:18> [b3Scalar.h <554:12 554:12>]
LOCAL_SYMBOL: b3Scalar.h<547:20> [b3Scalar.h <547:20 547:22>]
LOCAL_SYMBOL: b3Scalar.h<547:20> [b3Scalar.h <550:5 550:7>]
LOCAL_SYMBOL: b3Scalar.h<547:20> [b3Scalar.h <551:5 551:7>]
LOCAL_SYMBOL: b3Scalar.h<547:20> [b3Scalar.h <552:5 552:7>]
LOCAL_SYMBOL: b3Scalar.h<547:20> [b3Scalar.h <553:5 553:7>]
LOCAL_SYMBOL: b3Scalar.h<548:20> [b3Scalar.h <548:20 548:22>]
LOCAL_SYMBOL: b3Scalar.h<548:20> [b3Scalar.h <550:14 550:16>]
LOCAL_SYMBOL: b3Scalar.h<548:20> [b3Scalar.h <551:14 551:16>]
LOCAL_SYMBOL: b3Scalar.h<548:20> [b3Scalar.h <552:14 552:16>]
LOCAL_SYMBOL: b3Scalar.h<548:20> [b3Scalar.h <553:14 553:16>]
LOCAL_SYMBOL: b3Scalar.h<558:56> [b3Scalar.h <558:56 558:56>]
LOCAL_SYMBOL: b3Scalar.h<558:56> [b3Scalar.h <561:44 561:44>]
LOCAL_SYMBOL: b3Scalar.h<559:1> [b3Scalar.h <559:1 559:1>]
LOCAL_SYMBOL: b3Scalar.h<559:1> [b3Scalar.h <570:1 570:1>]
LOCAL_SYMBOL: b3Scalar.h<560:11> [b3Scalar.h <560:11 560:11>]
LOCAL_SYMBOL: b3Scalar.h<560:11> [b3Scalar.h <562:44 562:44>]
LOCAL_SYMBOL: b3Scalar.h<560:11> [b3Scalar.h <569:12 569:12>]
LOCAL_SYMBOL: b3Scalar.h<561:20> [b3Scalar.h <561:20 561:22>]
LOCAL_SYMBOL: b3Scalar.h<561:20> [b3Scalar.h <564:14 564:16>]
LOCAL_SYMBOL: b3Scalar.h<561:20> [b3Scalar.h <565:14 565:16>]
LOCAL_SYMBOL: b3Scalar.h<561:20> [b3Scalar.h <566:14 566:16>]
LOCAL_SYMBOL: b3Scalar.h<561:20> [b3Scalar.h <567:14 567:16>]
LOCAL_SYMBOL: b3Scalar.h<562:20> [b3Scalar.h <562:20 562:22>]
LOCAL_SYMBOL: b3Scalar.h<562:20> [b3Scalar.h <564:5 564:7>]
LOCAL_SYMBOL: b3Scalar.h<562:20> [b3Scalar.h <565:5 565:7>]
LOCAL_SYMBOL: b3Scalar.h<562:20> [b3Scalar.h <566:5 566:7>]
LOCAL_SYMBOL: b3Scalar.h<562:20> [b3Scalar.h <567:5 567:7>]
LOCAL_SYMBOL: b3Scalar.h<574:49> [b3Scalar.h <574:49 574:49>]
LOCAL_SYMBOL: b3Scalar.h<574:49> [b3Scalar.h <576:44 576:44>]
LOCAL_SYMBOL: b3Scalar.h<574:67> [b3Scalar.h <574:67 574:69>]
LOCAL_SYMBOL: b3Scalar.h<574:67> [b3Scalar.h <578:5 578:7>]
LOCAL_SYMBOL: b3Scalar.h<574:67> [b3Scalar.h <579:5 579:7>]
LOCAL_SYMBOL: b3Scalar.h<574:67> [b3Scalar.h <580:5 580:7>]
LOCAL_SYMBOL: b3Scalar.h<574:67> [b3Scalar.h <581:5 581:7>]
LOCAL_SYMBOL: b3Scalar.h<574:67> [b3Scalar.h <582:5 582:7>]
LOCAL_SYMBOL: b3Scalar.h<574:67> [b3Scalar.h <583:5 583:7>]
LOCAL_SYMBOL: b3Scalar.h<574:67> [b3Scalar.h <584:5 584:7>]
LOCAL_SYMBOL: b3Scalar.h<574:67> [b3Scalar.h <585:5 585:7>]
LOCAL_SYMBOL: b3Scalar.h<575:1> [b3Scalar.h <575:1 575:1>]
LOCAL_SYMBOL: b3Scalar.h<575:1> [b3Scalar.h <587:1 587:1>]
LOCAL_SYMBOL: b3Scalar.h<576:20> [b3Scalar.h <576:20 576:22>]
LOCAL_SYMBOL: b3Scalar.h<576:20> [b3Scalar.h <578:14 578:16>]
LOCAL_SYMBOL: b3Scalar.h<576:20> [b3Scalar.h <579:14 579:16>]
LOCAL_SYMBOL: b3Scalar.h<576:20> [b3Scalar.h <580:14 580:16>]
LOCAL_SYMBOL: b3Scalar.h<576:20> [b3Scalar.h <581:14 581:16>]
LOCAL_SYMBOL: b3Scalar.h<576:20> [b3Scalar.h <582:14 582:16>]
LOCAL_SYMBOL: b3Scalar.h<576:20> [b3Scalar.h <583:14 583:16>]
LOCAL_SYMBOL: b3Scalar.h<576:20> [b3Scalar.h <584:14 584:16>]
LOCAL_SYMBOL: b3Scalar.h<576:20> [b3Scalar.h <585:14 585:16>]
LOCAL_SYMBOL: b3Scalar.h<590:66> [b3Scalar.h <590:66 590:68>]
LOCAL_SYMBOL: b3Scalar.h<590:66> [b3Scalar.h <595:14 595:16>]
LOCAL_SYMBOL: b3Scalar.h<590:66> [b3Scalar.h <596:14 596:16>]
LOCAL_SYMBOL: b3Scalar.h<590:66> [b3Scalar.h <597:14 597:16>]
LOCAL_SYMBOL: b3Scalar.h<590:66> [b3Scalar.h <598:14 598:16>]
LOCAL_SYMBOL: b3Scalar.h<590:66> [b3Scalar.h <599:14 599:16>]
LOCAL_SYMBOL: b3Scalar.h<590:66> [b3Scalar.h <600:14 600:16>]
LOCAL_SYMBOL: b3Scalar.h<590:66> [b3Scalar.h <601:14 601:16>]
LOCAL_SYMBOL: b3Scalar.h<590:66> [b3Scalar.h <602:14 602:16>]
LOCAL_SYMBOL: b3Scalar.h<591:1> [b3Scalar.h <591:1 591:1>]
LOCAL_SYMBOL: b3Scalar.h<591:1> [b3Scalar.h <605:1 605:1>]
LOCAL_SYMBOL: b3Scalar.h<592:12> [b3Scalar.h <592:12 592:12>]
LOCAL_SYMBOL: b3Scalar.h<592:12> [b3Scalar.h <593:44 593:44>]
LOCAL_SYMBOL: b3Scalar.h<592:12> [b3Scalar.h <604:9 604:9>]
LOCAL_SYMBOL: b3Scalar.h<593:20> [b3Scalar.h <593:20 593:22>]
LOCAL_SYMBOL: b3Scalar.h<593:20> [b3Scalar.h <595:5 595:7>]
LOCAL_SYMBOL: b3Scalar.h<593:20> [b3Scalar.h <596:5 596:7>]
LOCAL_SYMBOL: b3Scalar.h<593:20> [b3Scalar.h <597:5 597:7>]
LOCAL_SYMBOL: b3Scalar.h<593:20> [b3Scalar.h <598:5 598:7>]
LOCAL_SYMBOL: b3Scalar.h<593:20> [b3Scalar.h <599:5 599:7>]
LOCAL_SYMBOL: b3Scalar.h<593:20> [b3Scalar.h <600:5 600:7>]
LOCAL_SYMBOL: b3Scalar.h<593:20> [b3Scalar.h <601:5 601:7>]
LOCAL_SYMBOL: b3Scalar.h<593:20> [b3Scalar.h <602:5 602:7>]
LOCAL_SYMBOL: b3Scalar.h<608:52> [b3Scalar.h <608:52 608:65>]
LOCAL_SYMBOL: b3Scalar.h<608:52> [b3Scalar.h <610:2 610:15>]
LOCAL_SYMBOL: b3Scalar.h<608:52> [b3Scalar.h <610:26 610:39>]
LOCAL_SYMBOL: b3Scalar.h<608:52> [b3Scalar.h <611:5 611:18>]
LOCAL_SYMBOL: b3Scalar.h<608:52> [b3Scalar.h <613:10 613:23>]
LOCAL_SYMBOL: b3Scalar.h<608:52> [b3Scalar.h <615:10 615:23>]
LOCAL_SYMBOL: b3Scalar.h<608:52> [b3Scalar.h <617:10 617:23>]
LOCAL_SYMBOL: b3Scalar.h<608:52> [b3Scalar.h <621:10 621:23>]
LOCAL_SYMBOL: b3Scalar.h<609:1> [b3Scalar.h <609:1 609:1>]
LOCAL_SYMBOL: b3Scalar.h<609:1> [b3Scalar.h <623:1 623:1>]
LOCAL_SYMBOL: b3Scalar.h<612:2> [b3Scalar.h <612:2 612:2>]
LOCAL_SYMBOL: b3Scalar.h<612:2> [b3Scalar.h <614:2 614:2>]
LOCAL_SYMBOL: b3Scalar.h<616:2> [b3Scalar.h <616:2 616:2>]
LOCAL_SYMBOL: b3Scalar.h<616:2> [b3Scalar.h <618:2 618:2>]
LOCAL_SYMBOL: b3Scalar.h<620:2> [b3Scalar.h <620:2 620:2>]
LOCAL_SYMBOL: b3Scalar.h<620:2> [b3Scalar.h <622:2 622:2>]
LOCAL_SYMBOL: b3Scalar.h<627:1> [b3Scalar.h <627:1 627:1>]
LOCAL_SYMBOL: b3Scalar.h<627:1> [b3Scalar.h <637:1 637:1>]
LOCAL_SYMBOL: b3Scalar.h<628:20> [b3Scalar.h <628:20 628:29>]
LOCAL_SYMBOL: b3Scalar.h<628:20> [b3Scalar.h <629:17 629:26>]
LOCAL_SYMBOL: b3Scalar.h<630:2> [b3Scalar.h <630:2 630:2>]
LOCAL_SYMBOL: b3Scalar.h<630:2> [b3Scalar.h <631:2 631:2>]
LOCAL_SYMBOL: b3Scalar.h<634:2> [b3Scalar.h <634:2 634:2>]
LOCAL_SYMBOL: b3Scalar.h<634:2> [b3Scalar.h <636:2 636:2>]
LOCAL_SYMBOL: b3Scalar.h<642:20> [b3Scalar.h <642:20 642:20>]
LOCAL_SYMBOL: b3Scalar.h<642:20> [b3Scalar.h <642:22 642:22>]
LOCAL_SYMBOL: b3Scalar.h<642:20> [b3Scalar.h <642:40 642:40>]
LOCAL_SYMBOL: b3Scalar.h<642:20> [b3Scalar.h <649:5 649:5>]
LOCAL_SYMBOL: b3Scalar.h<642:43> [b3Scalar.h <642:43 642:54>]
LOCAL_SYMBOL: b3Scalar.h<642:43> [b3Scalar.h <657:21 657:32>]
LOCAL_SYMBOL: b3Scalar.h<642:64> [b3Scalar.h <642:64 642:72>]
LOCAL_SYMBOL: b3Scalar.h<642:64> [b3Scalar.h <656:28 656:36>]
LOCAL_SYMBOL: b3Scalar.h<642:64> [b3Scalar.h <658:23 658:31>]
LOCAL_SYMBOL: b3Scalar.h<643:1> [b3Scalar.h <643:1 643:1>]
LOCAL_SYMBOL: b3Scalar.h<643:1> [b3Scalar.h <661:1 661:1>]
LOCAL_SYMBOL: b3Scalar.h<646:2> [b3Scalar.h <646:2 646:2>]
LOCAL_SYMBOL: b3Scalar.h<646:2> [b3Scalar.h <652:2 652:2>]
LOCAL_SYMBOL: b3Scalar.h<648:3> [b3Scalar.h <648:3 648:3>]
LOCAL_SYMBOL: b3Scalar.h<648:3> [b3Scalar.h <651:3 651:3>]
LOCAL_SYMBOL: b3Scalar.h<653:27> [b3Scalar.h <653:27 653:35>]
LOCAL_SYMBOL: b3Scalar.h<653:27> [b3Scalar.h <657:5 657:13>]
LOCAL_SYMBOL: b3Scalar.h<653:27> [b3Scalar.h <658:2 658:10>]
LOCAL_SYMBOL: b3Scalar.h<653:27> [b3Scalar.h <659:2 659:10>]
LOCAL_SYMBOL: b3Scalar.h<653:27> [b3Scalar.h <660:9 660:17>]
LOCAL_SYMBOL: b3Scalar.h<656:15> [b3Scalar.h <656:15 656:22>]
LOCAL_SYMBOL: b3Scalar.h<656:15> [b3Scalar.h <659:23 659:30>]
LOCAL_SYMBOL: b3Vector3.h<1007:63> [b3Vector3.h <1007:63 1007:67>]
LOCAL_SYMBOL: b3Vector3.h<1007:63> [b3Vector3.h <1029:28 1029:32>]
LOCAL_SYMBOL: b3Vector3.h<1007:63> [b3Vector3.h <1043:38 1043:42>]
LOCAL_SYMBOL: b3Vector3.h<1007:75> [b3Vector3.h <1007:75 1007:85>]
LOCAL_SYMBOL: b3Vector3.h<1007:75> [b3Vector3.h <1020:9 1020:19>]
LOCAL_SYMBOL: b3Vector3.h<1007:75> [b3Vector3.h <1027:25 1027:35>]
LOCAL_SYMBOL: b3Vector3.h<1007:75> [b3Vector3.h <1043:68 1043:78>]
LOCAL_SYMBOL: b3Vector3.h<1007:98> [b3Vector3.h <1007:98 1007:103>]
LOCAL_SYMBOL: b3Vector3.h<1007:98> [b3Vector3.h <1038:9 1038:14>]
LOCAL_SYMBOL: b3Vector3.h<1007:98> [b3Vector3.h <1043:82 1043:87>]
LOCAL_SYMBOL: b3Vector3.h<1008:1> [b3Vector3.h <1008:1 1008:1>]
LOCAL_SYMBOL: b3Vector3.h<1008:1> [b3Vector3.h <1045:1 1045:1>]
LOCAL_SYMBOL: b3Vector3.h<1011:20> [b3Vector3.h <1011:20 1011:32>]
LOCAL_SYMBOL: b3Vector3.h<1011:20> [b3Vector3.h <1020:23 1020:35>]
LOCAL_SYMBOL: b3Vector3.h<1012:103> [b3Vector3.h <1012:103 1012:108>]
LOCAL_SYMBOL: b3Vector3.h<1012:44> [b3Vector3.h <1012:44 1012:48>]
LOCAL_SYMBOL: b3Vector3.h<1012:64> [b3Vector3.h <1012:64 1012:66>]
LOCAL_SYMBOL: b3Vector3.h<1012:83> [b3Vector3.h <1012:83 1012:93>]
LOCAL_SYMBOL: b3Vector3.h<1022:5> [b3Vector3.h <1022:5 1022:5>]
LOCAL_SYMBOL: b3Vector3.h<1022:5> [b3Vector3.h <1041:5 1041:5>]
LOCAL_SYMBOL: b3Vector3.h<1023:19> [b3Vector3.h <1023:19 1023:24>]
LOCAL_SYMBOL: b3Vector3.h<1023:19> [b3Vector3.h <1031:23 1031:28>]
LOCAL_SYMBOL: b3Vector3.h<1023:19> [b3Vector3.h <1033:17 1033:22>]
LOCAL_SYMBOL: b3Vector3.h<1023:19> [b3Vector3.h <1038:18 1038:23>]
LOCAL_SYMBOL: b3Vector3.h<1024:13> [b3Vector3.h <1024:13 1024:13>]
LOCAL_SYMBOL: b3Vector3.h<1024:13> [b3Vector3.h <1027:14 1027:14>]
LOCAL_SYMBOL: b3Vector3.h<1024:13> [b3Vector3.h <1027:21 1027:21>]
LOCAL_SYMBOL: b3Vector3.h<1024:13> [b3Vector3.h <1027:38 1027:38>]
LOCAL_SYMBOL: b3Vector3.h<1024:13> [b3Vector3.h <1029:34 1029:34>]
LOCAL_SYMBOL: b3Vector3.h<1024:13> [b3Vector3.h <1034:27 1034:27>]
LOCAL_SYMBOL: b3Vector3.h<1025:13> [b3Vector3.h <1025:13 1025:19>]
LOCAL_SYMBOL: b3Vector3.h<1025:13> [b3Vector3.h <1034:17 1034:23>]
LOCAL_SYMBOL: b3Vector3.h<1025:13> [b3Vector3.h <1040:16 1040:22>]
LOCAL_SYMBOL: b3Vector3.h<1028:9> [b3Vector3.h <1028:9 1028:9>]
LOCAL_SYMBOL: b3Vector3.h<1028:9> [b3Vector3.h <1036:9 1036:9>]
LOCAL_SYMBOL: b3Vector3.h<1029:22> [b3Vector3.h <1029:22 1029:24>]
LOCAL_SYMBOL: b3Vector3.h<1029:22> [b3Vector3.h <1031:17 1031:19>]
LOCAL_SYMBOL: b3Vector3.h<1029:22> [b3Vector3.h <1033:26 1033:28>]
LOCAL_SYMBOL: b3Vector3.h<1032:13> [b3Vector3.h <1032:13 1032:13>]
LOCAL_SYMBOL: b3Vector3.h<1032:13> [b3Vector3.h <1035:13 1035:13>]
LOCAL_SYMBOL: b3Vector3.h<1049:1> [b3Vector3.h <1049:1 1049:1>]
LOCAL_SYMBOL: b3Vector3.h<1049:1> [b3Vector3.h <1171:1 1171:1>]
LOCAL_SYMBOL: b3Vector3.h<1058:2> [b3Vector3.h <1058:2 1058:2>]
LOCAL_SYMBOL: b3Vector3.h<1058:2> [b3Vector3.h <1070:2 1070:2>]
LOCAL_SYMBOL: b3Vector3.h<1073:24> [b3Vector3.h <1073:24 1073:24>]
LOCAL_SYMBOL: b3Vector3.h<1073:24> [b3Vector3.h <1073:45 1073:45>]
LOCAL_SYMBOL: b3Vector3.h<1077:2> [b3Vector3.h <1077:2 1077:2>]
LOCAL_SYMBOL: b3Vector3.h<1077:2> [b3Vector3.h <1102:2 1102:2>]
LOCAL_SYMBOL: b3Vector3.h<1078:7> [b3Vector3.h <1078:7 1078:14>]
LOCAL_SYMBOL: b3Vector3.h<1078:7> [b3Vector3.h <1082:4 1082:11>]
LOCAL_SYMBOL: b3Vector3.h<1078:7> [b3Vector3.h <1087:4 1087:11>]
LOCAL_SYMBOL: b3Vector3.h<1078:7> [b3Vector3.h <1092:4 1092:11>]
LOCAL_SYMBOL: b3Vector3.h<1078:7> [b3Vector3.h <1097:4 1097:11>]
LOCAL_SYMBOL: b3Vector3.h<1078:7> [b3Vector3.h <1101:10 1101:17>]
LOCAL_SYMBOL: b3Vector3.h<1079:12> [b3Vector3.h <1079:12 1079:17>]
LOCAL_SYMBOL: b3Vector3.h<1079:12> [b3Vector3.h <1080:21 1080:26>]
LOCAL_SYMBOL: b3Vector3.h<1079:12> [b3Vector3.h <1083:4 1083:9>]
LOCAL_SYMBOL: b3Vector3.h<1079:12> [b3Vector3.h <1085:21 1085:26>]
LOCAL_SYMBOL: b3Vector3.h<1079:12> [b3Vector3.h <1088:4 1088:9>]
LOCAL_SYMBOL: b3Vector3.h<1079:12> [b3Vector3.h <1090:21 1090:26>]
LOCAL_SYMBOL: b3Vector3.h<1079:12> [b3Vector3.h <1093:4 1093:9>]
LOCAL_SYMBOL: b3Vector3.h<1079:12> [b3Vector3.h <1095:21 1095:26>]
LOCAL_SYMBOL: b3Vector3.h<1079:12> [b3Vector3.h <1098:4 1098:9>]
LOCAL_SYMBOL: b3Vector3.h<1081:3> [b3Vector3.h <1081:3 1081:3>]
LOCAL_SYMBOL: b3Vector3.h<1081:3> [b3Vector3.h <1084:3 1084:3>]
LOCAL_SYMBOL: b3Vector3.h<1086:3> [b3Vector3.h <1086:3 1086:3>]
LOCAL_SYMBOL: b3Vector3.h<1086:3> [b3Vector3.h <1089:3 1089:3>]
LOCAL_SYMBOL: b3Vector3.h<1091:3> [b3Vector3.h <1091:3 1091:3>]
LOCAL_SYMBOL: b3Vector3.h<1091:3> [b3Vector3.h <1094:3 1094:3>]
LOCAL_SYMBOL: b3Vector3.h<1096:3> [b3Vector3.h <1096:3 1096:3>]
LOCAL_SYMBOL: b3Vector3.h<1096:3> [b3Vector3.h <1099:3 1099:3>]
LOCAL_SYMBOL: b3Vector3.h<1106:2> [b3Vector3.h <1106:2 1106:2>]
LOCAL_SYMBOL: b3Vector3.h<1106:2> [b3Vector3.h <1131:2 1131:2>]
LOCAL_SYMBOL: b3Vector3.h<1107:7> [b3Vector3.h <1107:7 1107:14>]
LOCAL_SYMBOL: b3Vector3.h<1107:7> [b3Vector3.h <1111:4 1111:11>]
LOCAL_SYMBOL: b3Vector3.h<1107:7> [b3Vector3.h <1116:4 1116:11>]
LOCAL_SYMBOL: b3Vector3.h<1107:7> [b3Vector3.h <1121:4 1121:11>]
LOCAL_SYMBOL: b3Vector3.h<1107:7> [b3Vector3.h <1126:4 1126:11>]
LOCAL_SYMBOL: b3Vector3.h<1107:7> [b3Vector3.h <1130:10 1130:17>]
LOCAL_SYMBOL: b3Vector3.h<1108:12> [b3Vector3.h <1108:12 1108:17>]
LOCAL_SYMBOL: b3Vector3.h<1108:12> [b3Vector3.h <1109:21 1109:26>]
LOCAL_SYMBOL: b3Vector3.h<1108:12> [b3Vector3.h <1112:4 1112:9>]
LOCAL_SYMBOL: b3Vector3.h<1108:12> [b3Vector3.h <1114:21 1114:26>]
LOCAL_SYMBOL: b3Vector3.h<1108:12> [b3Vector3.h <1117:4 1117:9>]
LOCAL_SYMBOL: b3Vector3.h<1108:12> [b3Vector3.h <1119:21 1119:26>]
LOCAL_SYMBOL: b3Vector3.h<1108:12> [b3Vector3.h <1122:4 1122:9>]
LOCAL_SYMBOL: b3Vector3.h<1108:12> [b3Vector3.h <1124:21 1124:26>]
LOCAL_SYMBOL: b3Vector3.h<1108:12> [b3Vector3.h <1127:4 1127:9>]
LOCAL_SYMBOL: b3Vector3.h<1110:3> [b3Vector3.h <1110:3 1110:3>]
LOCAL_SYMBOL: b3Vector3.h<1110:3> [b3Vector3.h <1113:3 1113:3>]
LOCAL_SYMBOL: b3Vector3.h<1115:3> [b3Vector3.h <1115:3 1115:3>]
LOCAL_SYMBOL: b3Vector3.h<1115:3> [b3Vector3.h <1118:3 1118:3>]
LOCAL_SYMBOL: b3Vector3.h<1120:3> [b3Vector3.h <1120:3 1120:3>]
LOCAL_SYMBOL: b3Vector3.h<1120:3> [b3Vector3.h <1123:3 1123:3>]
LOCAL_SYMBOL: b3Vector3.h<1125:3> [b3Vector3.h <1125:3 1125:3>]
LOCAL_SYMBOL: b3Vector3.h<1125:3> [b3Vector3.h <1128:3 1128:3>]
LOCAL_SYMBOL: b3Vector3.h<1135:2> [b3Vector3.h <1135:2 1135:2>]
LOCAL_SYMBOL: b3Vector3.h<1135:2> [b3Vector3.h <1137:2 1137:2>]
LOCAL_SYMBOL: b3Vector3.h<113:2> [b3Vector3.h <113:2 113:29>]
LOCAL_SYMBOL: b3Vector3.h<113:2> [b3Scalar.h <332:85 332:95>]
LOCAL_SYMBOL: b3Vector3.h<113:2> [b3Scalar.h <333:77 333:79>]
LOCAL_SYMBOL: b3Vector3.h<113:2> [b3Scalar.h <336:87 336:97>]
LOCAL_SYMBOL: b3Vector3.h<113:2> [b3Scalar.h <337:79 337:81>]
LOCAL_SYMBOL: b3Vector3.h<1162:108> [b3Vector3.h <1162:108 1162:109>]
LOCAL_SYMBOL: b3Vector3.h<1162:108> [b3Vector3.h <1167:16 1167:17>]
LOCAL_SYMBOL: b3Vector3.h<1162:49> [b3Vector3.h <1162:49 1162:50>]
LOCAL_SYMBOL: b3Vector3.h<1162:49> [b3Vector3.h <1164:16 1164:17>]
LOCAL_SYMBOL: b3Vector3.h<1162:69> [b3Vector3.h <1162:69 1162:70>]
LOCAL_SYMBOL: b3Vector3.h<1162:69> [b3Vector3.h <1165:16 1165:17>]
LOCAL_SYMBOL: b3Vector3.h<1162:89> [b3Vector3.h <1162:89 1162:90>]
LOCAL_SYMBOL: b3Vector3.h<1162:89> [b3Vector3.h <1166:16 1166:17>]
LOCAL_SYMBOL: b3Vector3.h<1163:3> [b3Vector3.h <1163:3 1163:3>]
LOCAL_SYMBOL: b3Vector3.h<1163:3> [b3Vector3.h <1168:3 1168:3>]
LOCAL_SYMBOL: b3Vector3.h<1175:57> [b3Vector3.h <1175:57 1175:65>]
LOCAL_SYMBOL: b3Vector3.h<1175:57> [b3Vector3.h <1190:42 1190:50>]
LOCAL_SYMBOL: b3Vector3.h<1175:78> [b3Vector3.h <1175:78 1175:84>]
LOCAL_SYMBOL: b3Vector3.h<1175:78> [b3Vector3.h <1189:42 1189:48>]
LOCAL_SYMBOL: b3Vector3.h<1176:1> [b3Vector3.h <1176:1 1176:1>]
LOCAL_SYMBOL: b3Vector3.h<1176:1> [b3Vector3.h <1196:1 1196:1>]
LOCAL_SYMBOL: b3Vector3.h<1189:17> [b3Vector3.h <1189:17 1189:20>]
LOCAL_SYMBOL: b3Vector3.h<1189:17> [b3Vector3.h <1191:2 1191:5>]
LOCAL_SYMBOL: b3Vector3.h<1189:17> [b3Vector3.h <1192:5 1192:8>]
LOCAL_SYMBOL: b3Vector3.h<1189:17> [b3Vector3.h <1193:5 1193:8>]
LOCAL_SYMBOL: b3Vector3.h<1189:17> [b3Vector3.h <1194:5 1194:8>]
LOCAL_SYMBOL: b3Vector3.h<1190:17> [b3Vector3.h <1190:17 1190:19>]
LOCAL_SYMBOL: b3Vector3.h<1190:17> [b3Vector3.h <1191:12 1191:14>]
LOCAL_SYMBOL: b3Vector3.h<1190:17> [b3Vector3.h <1192:15 1192:17>]
LOCAL_SYMBOL: b3Vector3.h<1190:17> [b3Vector3.h <1193:15 1193:17>]
LOCAL_SYMBOL: b3Vector3.h<1190:17> [b3Vector3.h <1194:15 1194:17>]
LOCAL_SYMBOL: b3Vector3.h<1198:59> [b3Vector3.h <1198:59 1198:67>]
LOCAL_SYMBOL: b3Vector3.h<1198:59> [b3Vector3.h <1202:22 1202:30>]
LOCAL_SYMBOL: b3Vector3.h<1198:81> [b3Vector3.h <1198:81 1198:87>]
LOCAL_SYMBOL: b3Vector3.h<1198:81> [b3Vector3.h <1202:35 1202:41>]
LOCAL_SYMBOL: b3Vector3.h<1199:1> [b3Vector3.h <1199:1 1199:1>]
LOCAL_SYMBOL: b3Vector3.h<1199:1> [b3Vector3.h <1205:1 1205:1>]
LOCAL_SYMBOL: b3Vector3.h<1200:11> [b3Vector3.h <1200:11 1200:11>]
LOCAL_SYMBOL: b3Vector3.h<1200:11> [b3Vector3.h <1200:15 1200:15>]
LOCAL_SYMBOL: b3Vector3.h<1200:11> [b3Vector3.h <1200:19 1200:19>]
LOCAL_SYMBOL: b3Vector3.h<1200:11> [b3Vector3.h <1202:32 1202:32>]
LOCAL_SYMBOL: b3Vector3.h<1200:11> [b3Vector3.h <1202:43 1202:43>]
LOCAL_SYMBOL: b3Vector3.h<1201:2> [b3Vector3.h <1201:2 1201:2>]
LOCAL_SYMBOL: b3Vector3.h<1201:2> [b3Vector3.h <1203:2 1203:2>]
LOCAL_SYMBOL: b3Vector3.h<1208:55> [b3Vector3.h <1208:55 1208:60>]
LOCAL_SYMBOL: b3Vector3.h<1208:55> [b3Vector3.h <1214:22 1214:27>]
LOCAL_SYMBOL: b3Vector3.h<1208:55> [b3Vector3.h <1216:2 1216:7>]
LOCAL_SYMBOL: b3Vector3.h<1209:1> [b3Vector3.h <1209:1 1209:1>]
LOCAL_SYMBOL: b3Vector3.h<1209:1> [b3Vector3.h <1217:1 1217:1>]
LOCAL_SYMBOL: b3Vector3.h<1211:12> [b3Vector3.h <1211:12 1211:21>]
LOCAL_SYMBOL: b3Vector3.h<1211:12> [b3Vector3.h <1214:32 1214:41>]
LOCAL_SYMBOL: b3Vector3.h<1211:12> [b3Vector3.h <1216:11 1216:20>]
LOCAL_SYMBOL: b3Vector3.h<1212:11> [b3Vector3.h <1212:11 1212:11>]
LOCAL_SYMBOL: b3Vector3.h<1212:11> [b3Vector3.h <1212:15 1212:15>]
LOCAL_SYMBOL: b3Vector3.h<1212:11> [b3Vector3.h <1212:19 1212:19>]
LOCAL_SYMBOL: b3Vector3.h<1212:11> [b3Vector3.h <1214:29 1214:29>]
LOCAL_SYMBOL: b3Vector3.h<1212:11> [b3Vector3.h <1214:43 1214:43>]
LOCAL_SYMBOL: b3Vector3.h<1213:2> [b3Vector3.h <1213:2 1213:2>]
LOCAL_SYMBOL: b3Vector3.h<1213:2> [b3Vector3.h <1215:2 1215:2>]
LOCAL_SYMBOL: b3Vector3.h<1219:17> [b3Vector3.h <1219:17 1219:17>]
LOCAL_SYMBOL: b3Vector3.h<1219:17> [b3Vector3.h <1220:43 1220:43>]
LOCAL_SYMBOL: b3Vector3.h<1219:17> [b3Vector3.h <1220:49 1220:49>]
LOCAL_SYMBOL: b3Vector3.h<1219:17> [b3Vector3.h <1220:55 1220:55>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1220:46 1220:46>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1222:14 1222:14>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1224:18 1224:18>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1224:23 1224:23>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1224:30 1224:30>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1224:35 1224:35>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1227:10 1227:10>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1228:9 1228:9>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1231:10 1231:10>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1232:9 1232:9>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1236:18 1236:18>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1236:23 1236:23>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1236:30 1236:30>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1236:35 1236:35>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1238:13 1238:13>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1239:9 1239:9>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1242:13 1242:13>]
LOCAL_SYMBOL: b3Vector3.h<1220:46> [b3Vector3.h <1243:9 1243:9>]
LOCAL_SYMBOL: b3Vector3.h<1220:52> [b3Vector3.h <1220:52 1220:52>]
LOCAL_SYMBOL: b3Vector3.h<1220:52> [b3Vector3.h <1226:5 1226:5>]
LOCAL_SYMBOL: b3Vector3.h<1220:52> [b3Vector3.h <1227:2 1227:2>]
LOCAL_SYMBOL: b3Vector3.h<1220:52> [b3Vector3.h <1228:2 1228:2>]
LOCAL_SYMBOL: b3Vector3.h<1220:52> [b3Vector3.h <1231:15 1231:15>]
LOCAL_SYMBOL: b3Vector3.h<1220:52> [b3Vector3.h <1232:14 1232:14>]
LOCAL_SYMBOL: b3Vector3.h<1220:52> [b3Vector3.h <1238:5 1238:5>]
LOCAL_SYMBOL: b3Vector3.h<1220:52> [b3Vector3.h <1239:2 1239:2>]
LOCAL_SYMBOL: b3Vector3.h<1220:52> [b3Vector3.h <1240:2 1240:2>]
LOCAL_SYMBOL: b3Vector3.h<1220:52> [b3Vector3.h <1242:18 1242:18>]
LOCAL_SYMBOL: b3Vector3.h<1220:52> [b3Vector3.h <1243:14 1243:14>]
LOCAL_SYMBOL: b3Vector3.h<1220:58> [b3Vector3.h <1220:58 1220:58>]
LOCAL_SYMBOL: b3Vector3.h<1220:58> [b3Vector3.h <1230:5 1230:5>]
LOCAL_SYMBOL: b3Vector3.h<1220:58> [b3Vector3.h <1231:2 1231:2>]
LOCAL_SYMBOL: b3Vector3.h<1220:58> [b3Vector3.h <1232:2 1232:2>]
LOCAL_SYMBOL: b3Vector3.h<1220:58> [b3Vector3.h <1242:5 1242:5>]
LOCAL_SYMBOL: b3Vector3.h<1220:58> [b3Vector3.h <1243:2 1243:2>]
LOCAL_SYMBOL: b3Vector3.h<1220:58> [b3Vector3.h <1244:2 1244:2>]
LOCAL_SYMBOL: b3Vector3.h<1221:1> [b3Vector3.h <1221:1 1221:1>]
LOCAL_SYMBOL: b3Vector3.h<1221:1> [b3Vector3.h <1246:1 1246:1>]
LOCAL_SYMBOL: b3Vector3.h<1222:33> [b3Vector3.h <1222:33 1222:33>]
LOCAL_SYMBOL: b3Vector3.h<1222:33> [b3Vector3.h <1233:3 1233:3>]
LOCAL_SYMBOL: b3Vector3.h<1224:14> [b3Vector3.h <1224:14 1224:14>]
LOCAL_SYMBOL: b3Vector3.h<1224:14> [b3Vector3.h <1225:31 1225:31>]
LOCAL_SYMBOL: b3Vector3.h<1224:14> [b3Vector3.h <1230:12 1230:12>]
LOCAL_SYMBOL: b3Vector3.h<1225:14> [b3Vector3.h <1225:14 1225:14>]
LOCAL_SYMBOL: b3Vector3.h<1225:14> [b3Vector3.h <1227:15 1227:15>]
LOCAL_SYMBOL: b3Vector3.h<1225:14> [b3Vector3.h <1228:14 1228:14>]
LOCAL_SYMBOL: b3Vector3.h<1225:14> [b3Vector3.h <1230:14 1230:14>]
LOCAL_SYMBOL: b3Vector3.h<1234:8> [b3Vector3.h <1234:8 1234:8>]
LOCAL_SYMBOL: b3Vector3.h<1234:8> [b3Vector3.h <1245:3 1245:3>]
LOCAL_SYMBOL: b3Vector3.h<1236:14> [b3Vector3.h <1236:14 1236:14>]
LOCAL_SYMBOL: b3Vector3.h<1236:14> [b3Vector3.h <1237:31 1237:31>]
LOCAL_SYMBOL: b3Vector3.h<1236:14> [b3Vector3.h <1244:9 1244:9>]
LOCAL_SYMBOL: b3Vector3.h<1237:14> [b3Vector3.h <1237:14 1237:14>]
LOCAL_SYMBOL: b3Vector3.h<1237:14> [b3Vector3.h <1238:18 1238:18>]
LOCAL_SYMBOL: b3Vector3.h<1237:14> [b3Vector3.h <1239:14 1239:14>]
LOCAL_SYMBOL: b3Vector3.h<1237:14> [b3Vector3.h <1244:11 1244:11>]
LOCAL_SYMBOL: b3Vector3.h<123:5> [b3Vector3.h <123:5 123:5>]
LOCAL_SYMBOL: b3Vector3.h<123:5> [b3Vector3.h <125:5 125:5>]
LOCAL_SYMBOL: b3Vector3.h<1250:1> [b3Vector3.h <1250:1 1250:1>]
LOCAL_SYMBOL: b3Vector3.h<1250:1> [b3Vector3.h <1252:1 1252:1>]
LOCAL_SYMBOL: b3Vector3.h<1255:1> [b3Vector3.h <1255:1 1255:1>]
LOCAL_SYMBOL: b3Vector3.h<1255:1> [b3Vector3.h <1258:1 1258:1>]
LOCAL_SYMBOL: b3Vector3.h<1260:75> [b3Vector3.h <1260:75 1260:81>]
LOCAL_SYMBOL: b3Vector3.h<1260:75> [b3Vector3.h <1264:3 1264:9>]
LOCAL_SYMBOL: b3Vector3.h<1261:1> [b3Vector3.h <1261:1 1261:1>]
LOCAL_SYMBOL: b3Vector3.h<1261:1> [b3Vector3.h <1265:1 1265:1>]
LOCAL_SYMBOL: b3Vector3.h<1263:11> [b3Vector3.h <1263:11 1263:11>]
LOCAL_SYMBOL: b3Vector3.h<1263:11> [b3Vector3.h <1263:15 1263:15>]
LOCAL_SYMBOL: b3Vector3.h<1263:11> [b3Vector3.h <1263:19 1263:19>]
LOCAL_SYMBOL: b3Vector3.h<1263:11> [b3Vector3.h <1264:20 1264:20>]
LOCAL_SYMBOL: b3Vector3.h<1263:11> [b3Vector3.h <1264:40 1264:40>]
LOCAL_SYMBOL: b3Vector3.h<1267:83> [b3Vector3.h <1267:83 1267:88>]
LOCAL_SYMBOL: b3Vector3.h<1267:83> [b3Vector3.h <1270:26 1270:31>]
LOCAL_SYMBOL: b3Vector3.h<1268:1> [b3Vector3.h <1268:1 1268:1>]
LOCAL_SYMBOL: b3Vector3.h<1268:1> [b3Vector3.h <1271:1 1271:1>]
LOCAL_SYMBOL: b3Vector3.h<1269:11> [b3Vector3.h <1269:11 1269:11>]
LOCAL_SYMBOL: b3Vector3.h<1269:11> [b3Vector3.h <1269:15 1269:15>]
LOCAL_SYMBOL: b3Vector3.h<1269:11> [b3Vector3.h <1269:19 1269:19>]
LOCAL_SYMBOL: b3Vector3.h<1269:11> [b3Vector3.h <1270:12 1270:12>]
LOCAL_SYMBOL: b3Vector3.h<1269:11> [b3Vector3.h <1270:42 1270:42>]
LOCAL_SYMBOL: b3Vector3.h<126:46> [b3Vector3.h <126:46 126:49>]
LOCAL_SYMBOL: b3Vector3.h<126:46> [b3Vector3.h <128:19 128:22>]
LOCAL_SYMBOL: b3Vector3.h<1274:77> [b3Vector3.h <1274:77 1274:83>]
LOCAL_SYMBOL: b3Vector3.h<1274:77> [b3Vector3.h <1278:3 1278:9>]
LOCAL_SYMBOL: b3Vector3.h<1275:1> [b3Vector3.h <1275:1 1275:1>]
LOCAL_SYMBOL: b3Vector3.h<1275:1> [b3Vector3.h <1279:1 1279:1>]
LOCAL_SYMBOL: b3Vector3.h<1277:11> [b3Vector3.h <1277:11 1277:11>]
LOCAL_SYMBOL: b3Vector3.h<1277:11> [b3Vector3.h <1277:15 1277:15>]
LOCAL_SYMBOL: b3Vector3.h<1277:11> [b3Vector3.h <1277:19 1277:19>]
LOCAL_SYMBOL: b3Vector3.h<1277:11> [b3Vector3.h <1278:20 1278:20>]
LOCAL_SYMBOL: b3Vector3.h<1277:11> [b3Vector3.h <1278:41 1278:41>]
LOCAL_SYMBOL: b3Vector3.h<127:5> [b3Vector3.h <127:5 127:5>]
LOCAL_SYMBOL: b3Vector3.h<127:5> [b3Vector3.h <129:5 129:5>]
LOCAL_SYMBOL: b3Vector3.h<1281:85> [b3Vector3.h <1281:85 1281:90>]
LOCAL_SYMBOL: b3Vector3.h<1281:85> [b3Vector3.h <1284:26 1284:31>]
LOCAL_SYMBOL: b3Vector3.h<1282:1> [b3Vector3.h <1282:1 1282:1>]
LOCAL_SYMBOL: b3Vector3.h<1282:1> [b3Vector3.h <1285:1 1285:1>]
LOCAL_SYMBOL: b3Vector3.h<1283:11> [b3Vector3.h <1283:11 1283:11>]
LOCAL_SYMBOL: b3Vector3.h<1283:11> [b3Vector3.h <1283:15 1283:15>]
LOCAL_SYMBOL: b3Vector3.h<1283:11> [b3Vector3.h <1283:19 1283:19>]
LOCAL_SYMBOL: b3Vector3.h<1283:11> [b3Vector3.h <1284:12 1284:12>]
LOCAL_SYMBOL: b3Vector3.h<1283:11> [b3Vector3.h <1284:42 1284:42>]
LOCAL_SYMBOL: b3Vector3.h<1288:65> [b3Vector3.h <1288:65 1288:71>]
LOCAL_SYMBOL: b3Vector3.h<1288:65> [b3Vector3.h <1292:3 1292:9>]
LOCAL_SYMBOL: b3Vector3.h<1289:1> [b3Vector3.h <1289:1 1289:1>]
LOCAL_SYMBOL: b3Vector3.h<1289:1> [b3Vector3.h <1293:1 1293:1>]
LOCAL_SYMBOL: b3Vector3.h<1291:11> [b3Vector3.h <1291:11 1291:11>]
LOCAL_SYMBOL: b3Vector3.h<1291:11> [b3Vector3.h <1291:15 1291:15>]
LOCAL_SYMBOL: b3Vector3.h<1291:11> [b3Vector3.h <1291:19 1291:19>]
LOCAL_SYMBOL: b3Vector3.h<1291:11> [b3Vector3.h <1292:20 1292:20>]
LOCAL_SYMBOL: b3Vector3.h<1291:11> [b3Vector3.h <1292:34 1292:34>]
LOCAL_SYMBOL: b3Vector3.h<1295:73> [b3Vector3.h <1295:73 1295:78>]
LOCAL_SYMBOL: b3Vector3.h<1295:73> [b3Vector3.h <1298:17 1298:22>]
LOCAL_SYMBOL: b3Vector3.h<1296:1> [b3Vector3.h <1296:1 1296:1>]
LOCAL_SYMBOL: b3Vector3.h<1296:1> [b3Vector3.h <1299:1 1299:1>]
LOCAL_SYMBOL: b3Vector3.h<1297:11> [b3Vector3.h <1297:11 1297:11>]
LOCAL_SYMBOL: b3Vector3.h<1297:11> [b3Vector3.h <1297:15 1297:15>]
LOCAL_SYMBOL: b3Vector3.h<1297:11> [b3Vector3.h <1297:19 1297:19>]
LOCAL_SYMBOL: b3Vector3.h<1297:11> [b3Vector3.h <1298:12 1298:12>]
LOCAL_SYMBOL: b3Vector3.h<1297:11> [b3Vector3.h <1298:33 1298:33>]
LOCAL_SYMBOL: b3Vector3.h<1304:41> [b3Vector3.h <1304:41 1304:41>]
LOCAL_SYMBOL: b3Vector3.h<1304:41> [b3Vector3.h <1307:15 1307:15>]
LOCAL_SYMBOL: b3Vector3.h<1304:52> [b3Vector3.h <1304:52 1304:52>]
LOCAL_SYMBOL: b3Vector3.h<1304:52> [b3Vector3.h <1307:17 1307:17>]
LOCAL_SYMBOL: b3Vector3.h<1304:63> [b3Vector3.h <1304:63 1304:63>]
LOCAL_SYMBOL: b3Vector3.h<1304:63> [b3Vector3.h <1307:19 1307:19>]
LOCAL_SYMBOL: b3Vector3.h<1305:1> [b3Vector3.h <1305:1 1305:1>]
LOCAL_SYMBOL: b3Vector3.h<1305:1> [b3Vector3.h <1309:1 1309:1>]
LOCAL_SYMBOL: b3Vector3.h<1306:12> [b3Vector3.h <1306:12 1306:14>]
LOCAL_SYMBOL: b3Vector3.h<1306:12> [b3Vector3.h <1307:2 1307:4>]
LOCAL_SYMBOL: b3Vector3.h<1306:12> [b3Vector3.h <1308:9 1308:11>]
LOCAL_SYMBOL: b3Vector3.h<1311:41> [b3Vector3.h <1311:41 1311:41>]
LOCAL_SYMBOL: b3Vector3.h<1311:41> [b3Vector3.h <1314:15 1314:15>]
LOCAL_SYMBOL: b3Vector3.h<1311:52> [b3Vector3.h <1311:52 1311:52>]
LOCAL_SYMBOL: b3Vector3.h<1311:52> [b3Vector3.h <1314:17 1314:17>]
LOCAL_SYMBOL: b3Vector3.h<1311:63> [b3Vector3.h <1311:63 1311:63>]
LOCAL_SYMBOL: b3Vector3.h<1311:63> [b3Vector3.h <1314:19 1314:19>]
LOCAL_SYMBOL: b3Vector3.h<1311:75> [b3Vector3.h <1311:75 1311:75>]
LOCAL_SYMBOL: b3Vector3.h<1311:75> [b3Vector3.h <1315:10 1315:10>]
LOCAL_SYMBOL: b3Vector3.h<1312:1> [b3Vector3.h <1312:1 1312:1>]
LOCAL_SYMBOL: b3Vector3.h<1312:1> [b3Vector3.h <1317:1 1317:1>]
LOCAL_SYMBOL: b3Vector3.h<1313:12> [b3Vector3.h <1313:12 1313:14>]
LOCAL_SYMBOL: b3Vector3.h<1313:12> [b3Vector3.h <1314:2 1314:4>]
LOCAL_SYMBOL: b3Vector3.h<1313:12> [b3Vector3.h <1315:2 1315:4>]
LOCAL_SYMBOL: b3Vector3.h<1313:12> [b3Vector3.h <1316:9 1316:11>]
LOCAL_SYMBOL: b3Vector3.h<1319:41> [b3Vector3.h <1319:41 1319:41>]
LOCAL_SYMBOL: b3Vector3.h<1319:41> [b3Vector3.h <1322:15 1322:15>]
LOCAL_SYMBOL: b3Vector3.h<1319:52> [b3Vector3.h <1319:52 1319:52>]
LOCAL_SYMBOL: b3Vector3.h<1319:52> [b3Vector3.h <1322:17 1322:17>]
LOCAL_SYMBOL: b3Vector3.h<1319:63> [b3Vector3.h <1319:63 1319:63>]
LOCAL_SYMBOL: b3Vector3.h<1319:63> [b3Vector3.h <1322:19 1322:19>]
LOCAL_SYMBOL: b3Vector3.h<1319:74> [b3Vector3.h <1319:74 1319:74>]
LOCAL_SYMBOL: b3Vector3.h<1319:74> [b3Vector3.h <1322:21 1322:21>]
LOCAL_SYMBOL: b3Vector3.h<1320:1> [b3Vector3.h <1320:1 1320:1>]
LOCAL_SYMBOL: b3Vector3.h<1320:1> [b3Vector3.h <1324:1 1324:1>]
LOCAL_SYMBOL: b3Vector3.h<1321:12> [b3Vector3.h <1321:12 1321:14>]
LOCAL_SYMBOL: b3Vector3.h<1321:12> [b3Vector3.h <1322:2 1322:4>]
LOCAL_SYMBOL: b3Vector3.h<1321:12> [b3Vector3.h <1323:9 1323:11>]
LOCAL_SYMBOL: b3Vector3.h<138:57> [b3Vector3.h <138:57 138:57>]
LOCAL_SYMBOL: b3Vector3.h<138:57> [b3Vector3.h <145:18 145:18>]
LOCAL_SYMBOL: b3Vector3.h<138:57> [b3Vector3.h <146:18 146:18>]
LOCAL_SYMBOL: b3Vector3.h<138:57> [b3Vector3.h <147:18 147:18>]
LOCAL_SYMBOL: b3Vector3.h<139:2> [b3Vector3.h <139:2 139:2>]
LOCAL_SYMBOL: b3Vector3.h<139:2> [b3Vector3.h <150:2 150:2>]
LOCAL_SYMBOL: b3Vector3.h<155:57> [b3Vector3.h <155:57 155:57>]
LOCAL_SYMBOL: b3Vector3.h<155:57> [b3Vector3.h <162:18 162:18>]
LOCAL_SYMBOL: b3Vector3.h<155:57> [b3Vector3.h <163:18 163:18>]
LOCAL_SYMBOL: b3Vector3.h<155:57> [b3Vector3.h <164:18 164:18>]
LOCAL_SYMBOL: b3Vector3.h<156:2> [b3Vector3.h <156:2 156:2>]
LOCAL_SYMBOL: b3Vector3.h<156:2> [b3Vector3.h <167:2 167:2>]
LOCAL_SYMBOL: b3Vector3.h<171:56> [b3Vector3.h <171:56 171:56>]
LOCAL_SYMBOL: b3Vector3.h<171:56> [b3Vector3.h <180:18 180:18>]
LOCAL_SYMBOL: b3Vector3.h<171:56> [b3Vector3.h <181:18 181:18>]
LOCAL_SYMBOL: b3Vector3.h<171:56> [b3Vector3.h <182:18 182:18>]
LOCAL_SYMBOL: b3Vector3.h<172:2> [b3Vector3.h <172:2 172:2>]
LOCAL_SYMBOL: b3Vector3.h<172:2> [b3Vector3.h <185:2 185:2>]
LOCAL_SYMBOL: b3Vector3.h<189:56> [b3Vector3.h <189:56 189:56>]
LOCAL_SYMBOL: b3Vector3.h<189:56> [b3Vector3.h <203:35 203:35>]
LOCAL_SYMBOL: b3Vector3.h<190:2> [b3Vector3.h <190:2 190:2>]
LOCAL_SYMBOL: b3Vector3.h<190:2> [b3Vector3.h <205:2 205:2>]
LOCAL_SYMBOL: b3Vector3.h<209:48> [b3Vector3.h <209:48 209:48>]
LOCAL_SYMBOL: b3Vector3.h<209:48> [b3Vector3.h <224:24 224:24>]
LOCAL_SYMBOL: b3Vector3.h<209:48> [b3Vector3.h <225:19 225:19>]
LOCAL_SYMBOL: b3Vector3.h<209:48> [b3Vector3.h <226:19 226:19>]
LOCAL_SYMBOL: b3Vector3.h<210:2> [b3Vector3.h <210:2 210:2>]
LOCAL_SYMBOL: b3Vector3.h<210:2> [b3Vector3.h <228:2 228:2>]
LOCAL_SYMBOL: b3Vector3.h<232:2> [b3Vector3.h <232:2 232:2>]
LOCAL_SYMBOL: b3Vector3.h<232:2> [b3Vector3.h <234:2 234:2>]
LOCAL_SYMBOL: b3Vector3.h<238:2> [b3Vector3.h <238:2 238:2>]
LOCAL_SYMBOL: b3Vector3.h<238:2> [b3Vector3.h <240:2 240:2>]
LOCAL_SYMBOL: b3Vector3.h<244:54> [b3Vector3.h <244:54 244:54>]
LOCAL_SYMBOL: b3Vector3.h<248:53> [b3Vector3.h <248:53 248:53>]
LOCAL_SYMBOL: b3Vector3.h<251:2> [b3Vector3.h <251:2 251:2>]
LOCAL_SYMBOL: b3Vector3.h<251:2> [b3Vector3.h <263:2 263:2>]
LOCAL_SYMBOL: b3Vector3.h<252:12> [b3Vector3.h <252:12 252:13>]
LOCAL_SYMBOL: b3Vector3.h<252:12> [b3Vector3.h <254:7 254:8>]
LOCAL_SYMBOL: b3Vector3.h<252:12> [b3Vector3.h <256:22 256:23>]
LOCAL_SYMBOL: b3Vector3.h<255:3> [b3Vector3.h <255:3 255:3>]
LOCAL_SYMBOL: b3Vector3.h<255:3> [b3Vector3.h <257:3 257:3>]
LOCAL_SYMBOL: b3Vector3.h<259:3> [b3Vector3.h <259:3 259:3>]
LOCAL_SYMBOL: b3Vector3.h<259:3> [b3Vector3.h <261:3 261:3>]
LOCAL_SYMBOL: b3Vector3.h<268:2> [b3Vector3.h <268:2 268:2>]
LOCAL_SYMBOL: b3Vector3.h<268:2> [b3Vector3.h <307:2 307:2>]
LOCAL_SYMBOL: b3Vector3.h<315:53> [b3Vector3.h <315:53 315:57>]
LOCAL_SYMBOL: b3Vector3.h<315:75> [b3Vector3.h <315:75 315:79>]
LOCAL_SYMBOL: b3Vector3.h<319:50> [b3Vector3.h <319:50 319:50>]
LOCAL_SYMBOL: b3Vector3.h<319:50> [b3Vector3.h <321:35 321:35>]
LOCAL_SYMBOL: b3Vector3.h<319:50> [b3Vector3.h <323:21 323:21>]
LOCAL_SYMBOL: b3Vector3.h<320:2> [b3Vector3.h <320:2 320:2>]
LOCAL_SYMBOL: b3Vector3.h<320:2> [b3Vector3.h <324:2 324:2>]
LOCAL_SYMBOL: b3Vector3.h<321:12> [b3Vector3.h <321:12 321:12>]
LOCAL_SYMBOL: b3Vector3.h<321:12> [b3Vector3.h <323:26 323:26>]
LOCAL_SYMBOL: b3Vector3.h<328:2> [b3Vector3.h <328:2 328:2>]
LOCAL_SYMBOL: b3Vector3.h<328:2> [b3Vector3.h <339:2 339:2>]
LOCAL_SYMBOL: b3Vector3.h<343:51> [b3Vector3.h <343:51 343:51>]
LOCAL_SYMBOL: b3Vector3.h<343:51> [b3Vector3.h <376:18 376:18>]
LOCAL_SYMBOL: b3Vector3.h<343:51> [b3Vector3.h <376:48 376:48>]
LOCAL_SYMBOL: b3Vector3.h<343:51> [b3Vector3.h <377:18 377:18>]
LOCAL_SYMBOL: b3Vector3.h<343:51> [b3Vector3.h <377:48 377:48>]
LOCAL_SYMBOL: b3Vector3.h<343:51> [b3Vector3.h <378:18 378:18>]
LOCAL_SYMBOL: b3Vector3.h<343:51> [b3Vector3.h <378:48 378:48>]
LOCAL_SYMBOL: b3Vector3.h<344:2> [b3Vector3.h <344:2 344:2>]
LOCAL_SYMBOL: b3Vector3.h<344:2> [b3Vector3.h <380:2 380:2>]
LOCAL_SYMBOL: b3Vector3.h<382:51> [b3Vector3.h <382:51 382:52>]
LOCAL_SYMBOL: b3Vector3.h<382:51> [b3Vector3.h <426:19 426:20>]
LOCAL_SYMBOL: b3Vector3.h<382:51> [b3Vector3.h <426:53 426:54>]
LOCAL_SYMBOL: b3Vector3.h<382:51> [b3Vector3.h <427:19 427:20>]
LOCAL_SYMBOL: b3Vector3.h<382:51> [b3Vector3.h <427:53 427:54>]
LOCAL_SYMBOL: b3Vector3.h<382:51> [b3Vector3.h <428:19 428:20>]
LOCAL_SYMBOL: b3Vector3.h<382:51> [b3Vector3.h <428:53 428:54>]
LOCAL_SYMBOL: b3Vector3.h<382:72> [b3Vector3.h <382:72 382:73>]
LOCAL_SYMBOL: b3Vector3.h<382:72> [b3Vector3.h <426:36 426:37>]
LOCAL_SYMBOL: b3Vector3.h<382:72> [b3Vector3.h <426:70 426:71>]
LOCAL_SYMBOL: b3Vector3.h<382:72> [b3Vector3.h <427:36 427:37>]
LOCAL_SYMBOL: b3Vector3.h<382:72> [b3Vector3.h <427:70 427:71>]
LOCAL_SYMBOL: b3Vector3.h<382:72> [b3Vector3.h <428:36 428:37>]
LOCAL_SYMBOL: b3Vector3.h<382:72> [b3Vector3.h <428:70 428:71>]
LOCAL_SYMBOL: b3Vector3.h<383:2> [b3Vector3.h <383:2 383:2>]
LOCAL_SYMBOL: b3Vector3.h<383:2> [b3Vector3.h <430:2 430:2>]
LOCAL_SYMBOL: b3Vector3.h<435:2> [b3Vector3.h <435:2 435:2>]
LOCAL_SYMBOL: b3Vector3.h<435:2> [b3Vector3.h <437:2 437:2>]
LOCAL_SYMBOL: b3Vector3.h<442:2> [b3Vector3.h <442:2 442:2>]
LOCAL_SYMBOL: b3Vector3.h<442:2> [b3Vector3.h <444:2 444:2>]
LOCAL_SYMBOL: b3Vector3.h<447:2> [b3Vector3.h <447:2 447:2>]
LOCAL_SYMBOL: b3Vector3.h<447:2> [b3Vector3.h <449:2 449:2>]
LOCAL_SYMBOL: b3Vector3.h<452:2> [b3Vector3.h <452:2 452:2>]
LOCAL_SYMBOL: b3Vector3.h<452:2> [b3Vector3.h <454:2 454:2>]
LOCAL_SYMBOL: b3Vector3.h<457:56> [b3Vector3.h <457:56 457:57>]
LOCAL_SYMBOL: b3Vector3.h<457:56> [b3Vector3.h <475:21 475:22>]
LOCAL_SYMBOL: b3Vector3.h<457:56> [b3Vector3.h <476:21 476:22>]
LOCAL_SYMBOL: b3Vector3.h<457:56> [b3Vector3.h <477:21 477:22>]
LOCAL_SYMBOL: b3Vector3.h<457:77> [b3Vector3.h <457:77 457:78>]
LOCAL_SYMBOL: b3Vector3.h<457:77> [b3Vector3.h <475:43 475:44>]
LOCAL_SYMBOL: b3Vector3.h<457:77> [b3Vector3.h <476:43 476:44>]
LOCAL_SYMBOL: b3Vector3.h<457:77> [b3Vector3.h <477:43 477:44>]
LOCAL_SYMBOL: b3Vector3.h<457:90> [b3Vector3.h <457:90 457:91>]
LOCAL_SYMBOL: b3Vector3.h<457:90> [b3Vector3.h <474:32 474:33>]
LOCAL_SYMBOL: b3Vector3.h<457:90> [b3Vector3.h <475:38 475:39>]
LOCAL_SYMBOL: b3Vector3.h<457:90> [b3Vector3.h <476:38 476:39>]
LOCAL_SYMBOL: b3Vector3.h<457:90> [b3Vector3.h <477:38 477:39>]
LOCAL_SYMBOL: b3Vector3.h<458:2> [b3Vector3.h <458:2 458:2>]
LOCAL_SYMBOL: b3Vector3.h<458:2> [b3Vector3.h <481:2 481:2>]
LOCAL_SYMBOL: b3Vector3.h<474:12> [b3Vector3.h <474:12 474:12>]
LOCAL_SYMBOL: b3Vector3.h<474:12> [b3Vector3.h <475:17 475:17>]
LOCAL_SYMBOL: b3Vector3.h<474:12> [b3Vector3.h <476:17 476:17>]
LOCAL_SYMBOL: b3Vector3.h<474:12> [b3Vector3.h <477:17 477:17>]
LOCAL_SYMBOL: b3Vector3.h<486:50> [b3Vector3.h <486:50 486:50>]
LOCAL_SYMBOL: b3Vector3.h<486:50> [b3Vector3.h <504:34 504:34>]
LOCAL_SYMBOL: b3Vector3.h<486:50> [b3Vector3.h <505:22 505:22>]
LOCAL_SYMBOL: b3Vector3.h<486:50> [b3Vector3.h <506:22 506:22>]
LOCAL_SYMBOL: b3Vector3.h<486:69> [b3Vector3.h <486:69 486:69>]
LOCAL_SYMBOL: b3Vector3.h<486:69> [b3Vector3.h <504:65 504:65>]
LOCAL_SYMBOL: b3Vector3.h<486:69> [b3Vector3.h <505:53 505:53>]
LOCAL_SYMBOL: b3Vector3.h<486:69> [b3Vector3.h <506:53 506:53>]
LOCAL_SYMBOL: b3Vector3.h<487:2> [b3Vector3.h <487:2 487:2>]
LOCAL_SYMBOL: b3Vector3.h<487:2> [b3Vector3.h <508:2 508:2>]
LOCAL_SYMBOL: b3Vector3.h<512:57> [b3Vector3.h <512:57 512:57>]
LOCAL_SYMBOL: b3Vector3.h<512:57> [b3Vector3.h <519:18 519:18>]
LOCAL_SYMBOL: b3Vector3.h<512:57> [b3Vector3.h <520:18 520:18>]
LOCAL_SYMBOL: b3Vector3.h<512:57> [b3Vector3.h <521:18 521:18>]
LOCAL_SYMBOL: b3Vector3.h<513:2> [b3Vector3.h <513:2 513:2>]
LOCAL_SYMBOL: b3Vector3.h<513:2> [b3Vector3.h <524:2 524:2>]
LOCAL_SYMBOL: b3Vector3.h<527:48> [b3Vector3.h <527:48 527:48>]
LOCAL_SYMBOL: b3Vector3.h<527:48> [b3Vector3.h <527:70 527:70>]
LOCAL_SYMBOL: b3Vector3.h<529:48> [b3Vector3.h <529:48 529:48>]
LOCAL_SYMBOL: b3Vector3.h<529:48> [b3Vector3.h <529:70 529:70>]
LOCAL_SYMBOL: b3Vector3.h<531:48> [b3Vector3.h <531:48 531:48>]
LOCAL_SYMBOL: b3Vector3.h<531:48> [b3Vector3.h <531:70 531:70>]
LOCAL_SYMBOL: b3Vector3.h<533:48> [b3Vector3.h <533:48 533:48>]
LOCAL_SYMBOL: b3Vector3.h<533:48> [b3Vector3.h <533:70 533:70>]
LOCAL_SYMBOL: b3Vector3.h<536:38> [b3Vector3.h <536:38 536:39>]
LOCAL_SYMBOL: b3Vector3.h<536:38> [b3Vector3.h <536:58 536:59>]
LOCAL_SYMBOL: b3Vector3.h<536:42> [b3Vector3.h <536:42 536:42>]
LOCAL_SYMBOL: b3Vector3.h<536:42> [b3Vector3.h <536:61 536:61>]
LOCAL_SYMBOL: b3Vector3.h<538:38> [b3Vector3.h <538:38 538:39>]
LOCAL_SYMBOL: b3Vector3.h<538:38> [b3Vector3.h <538:58 538:59>]
LOCAL_SYMBOL: b3Vector3.h<538:42> [b3Vector3.h <538:42 538:42>]
LOCAL_SYMBOL: b3Vector3.h<538:42> [b3Vector3.h <538:61 538:61>]
LOCAL_SYMBOL: b3Vector3.h<540:38> [b3Vector3.h <540:38 540:39>]
LOCAL_SYMBOL: b3Vector3.h<540:38> [b3Vector3.h <540:58 540:59>]
LOCAL_SYMBOL: b3Vector3.h<540:42> [b3Vector3.h <540:42 540:42>]
LOCAL_SYMBOL: b3Vector3.h<540:42> [b3Vector3.h <540:61 540:61>]
LOCAL_SYMBOL: b3Vector3.h<542:38> [b3Vector3.h <542:38 542:39>]
LOCAL_SYMBOL: b3Vector3.h<542:38> [b3Vector3.h <542:58 542:59>]
LOCAL_SYMBOL: b3Vector3.h<542:42> [b3Vector3.h <542:42 542:42>]
LOCAL_SYMBOL: b3Vector3.h<542:42> [b3Vector3.h <542:61 542:61>]
LOCAL_SYMBOL: b3Vector3.h<547:52> [b3Vector3.h <547:52 547:52>]
LOCAL_SYMBOL: b3Vector3.h<547:52> [b3Vector3.h <547:75 547:75>]
LOCAL_SYMBOL: b3Vector3.h<548:52> [b3Vector3.h <548:52 548:52>]
LOCAL_SYMBOL: b3Vector3.h<548:52> [b3Vector3.h <548:75 548:75>]
LOCAL_SYMBOL: b3Vector3.h<550:51> [b3Vector3.h <550:51 550:55>]
LOCAL_SYMBOL: b3Vector3.h<550:51> [b3Vector3.h <555:25 555:29>]
LOCAL_SYMBOL: b3Vector3.h<550:51> [b3Vector3.h <556:31 556:35>]
LOCAL_SYMBOL: b3Vector3.h<550:51> [b3Vector3.h <557:31 557:35>]
LOCAL_SYMBOL: b3Vector3.h<550:51> [b3Vector3.h <558:31 558:35>]
LOCAL_SYMBOL: b3Vector3.h<551:2> [b3Vector3.h <551:2 551:2>]
LOCAL_SYMBOL: b3Vector3.h<551:2> [b3Vector3.h <560:2 560:2>]
LOCAL_SYMBOL: b3Vector3.h<562:51> [b3Vector3.h <562:51 562:55>]
LOCAL_SYMBOL: b3Vector3.h<562:51> [b3Vector3.h <564:21 564:25>]
LOCAL_SYMBOL: b3Vector3.h<563:2> [b3Vector3.h <563:2 563:2>]
LOCAL_SYMBOL: b3Vector3.h<563:2> [b3Vector3.h <565:2 565:2>]
LOCAL_SYMBOL: b3Vector3.h<570:47> [b3Vector3.h <570:47 570:51>]
LOCAL_SYMBOL: b3Vector3.h<570:47> [b3Vector3.h <577:25 577:29>]
LOCAL_SYMBOL: b3Vector3.h<570:47> [b3Vector3.h <578:25 578:29>]
LOCAL_SYMBOL: b3Vector3.h<570:47> [b3Vector3.h <579:25 579:29>]
LOCAL_SYMBOL: b3Vector3.h<570:47> [b3Vector3.h <580:25 580:29>]
LOCAL_SYMBOL: b3Vector3.h<571:2> [b3Vector3.h <571:2 571:2>]
LOCAL_SYMBOL: b3Vector3.h<571:2> [b3Vector3.h <582:2 582:2>]
LOCAL_SYMBOL: b3Vector3.h<587:47> [b3Vector3.h <587:47 587:51>]
LOCAL_SYMBOL: b3Vector3.h<587:47> [b3Vector3.h <594:25 594:29>]
LOCAL_SYMBOL: b3Vector3.h<587:47> [b3Vector3.h <595:25 595:29>]
LOCAL_SYMBOL: b3Vector3.h<587:47> [b3Vector3.h <596:25 596:29>]
LOCAL_SYMBOL: b3Vector3.h<587:47> [b3Vector3.h <597:25 597:29>]
LOCAL_SYMBOL: b3Vector3.h<588:2> [b3Vector3.h <588:2 588:2>]
LOCAL_SYMBOL: b3Vector3.h<588:2> [b3Vector3.h <599:2 599:2>]
LOCAL_SYMBOL: b3Vector3.h<58:53> [b3Vector3.h <58:53 58:53>]
LOCAL_SYMBOL: b3Vector3.h<58:53> [b3Vector3.h <58:80 58:80>]
LOCAL_SYMBOL: b3Vector3.h<58:54> [b3Vector3.h <58:54 58:54>]
LOCAL_SYMBOL: b3Vector3.h<59:48> [b3Vector3.h <59:48 59:48>]
LOCAL_SYMBOL: b3Vector3.h<59:48> [b3Vector3.h <59:71 59:71>]
LOCAL_SYMBOL: b3Vector3.h<601:49> [b3Vector3.h <601:49 601:50>]
LOCAL_SYMBOL: b3Vector3.h<601:49> [b3Vector3.h <603:15 603:16>]
LOCAL_SYMBOL: b3Vector3.h<601:69> [b3Vector3.h <601:69 601:70>]
LOCAL_SYMBOL: b3Vector3.h<601:69> [b3Vector3.h <604:15 604:16>]
LOCAL_SYMBOL: b3Vector3.h<601:89> [b3Vector3.h <601:89 601:90>]
LOCAL_SYMBOL: b3Vector3.h<601:89> [b3Vector3.h <605:15 605:16>]
LOCAL_SYMBOL: b3Vector3.h<602:2> [b3Vector3.h <602:2 602:2>]
LOCAL_SYMBOL: b3Vector3.h<602:2> [b3Vector3.h <607:2 607:2>]
LOCAL_SYMBOL: b3Vector3.h<609:41> [b3Vector3.h <609:41 609:42>]
LOCAL_SYMBOL: b3Vector3.h<609:41> [b3Vector3.h <626:3 626:4>]
LOCAL_SYMBOL: b3Vector3.h<609:55> [b3Vector3.h <609:55 609:56>]
LOCAL_SYMBOL: b3Vector3.h<609:55> [b3Vector3.h <627:3 627:4>]
LOCAL_SYMBOL: b3Vector3.h<609:69> [b3Vector3.h <609:69 609:70>]
LOCAL_SYMBOL: b3Vector3.h<609:69> [b3Vector3.h <628:3 628:4>]
LOCAL_SYMBOL: b3Vector3.h<60:48> [b3Vector3.h <60:48 60:48>]
LOCAL_SYMBOL: b3Vector3.h<60:48> [b3Vector3.h <60:71 60:71>]
LOCAL_SYMBOL: b3Vector3.h<610:2> [b3Vector3.h <610:2 610:2>]
LOCAL_SYMBOL: b3Vector3.h<610:2> [b3Vector3.h <630:2 630:2>]
LOCAL_SYMBOL: b3Vector3.h<61:48> [b3Vector3.h <61:48 61:48>]
LOCAL_SYMBOL: b3Vector3.h<61:48> [b3Vector3.h <61:71 61:71>]
LOCAL_SYMBOL: b3Vector3.h<633:2> [b3Vector3.h <633:2 633:2>]
LOCAL_SYMBOL: b3Vector3.h<633:2> [b3Vector3.h <642:2 642:2>]
LOCAL_SYMBOL: b3Vector3.h<645:2> [b3Vector3.h <645:2 645:2>]
LOCAL_SYMBOL: b3Vector3.h<645:2> [b3Vector3.h <647:2 647:2>]
LOCAL_SYMBOL: b3Vector3.h<650:2> [b3Vector3.h <650:2 650:2>]
LOCAL_SYMBOL: b3Vector3.h<650:2> [b3Vector3.h <652:2 652:2>]
LOCAL_SYMBOL: b3Vector3.h<654:55> [b3Vector3.h <654:55 654:61>]
LOCAL_SYMBOL: b3Vector3.h<656:63> [b3Vector3.h <656:63 656:68>]
LOCAL_SYMBOL: b3Vector3.h<658:65> [b3Vector3.h <658:65 658:71>]
LOCAL_SYMBOL: b3Vector3.h<660:73> [b3Vector3.h <660:73 660:78>]
LOCAL_SYMBOL: b3Vector3.h<662:67> [b3Vector3.h <662:67 662:73>]
LOCAL_SYMBOL: b3Vector3.h<664:75> [b3Vector3.h <664:75 664:80>]
LOCAL_SYMBOL: b3Vector3.h<670:60> [b3Vector3.h <670:60 670:64>]
LOCAL_SYMBOL: b3Vector3.h<670:72> [b3Vector3.h <670:72 670:82>]
LOCAL_SYMBOL: b3Vector3.h<670:95> [b3Vector3.h <670:95 670:100>]
LOCAL_SYMBOL: b3Vector3.h<676:60> [b3Vector3.h <676:60 676:64>]
LOCAL_SYMBOL: b3Vector3.h<676:72> [b3Vector3.h <676:72 676:82>]
LOCAL_SYMBOL: b3Vector3.h<676:95> [b3Vector3.h <676:95 676:100>]
LOCAL_SYMBOL: b3Vector3.h<679:55> [b3Vector3.h <679:55 679:56>]
LOCAL_SYMBOL: b3Vector3.h<679:55> [b3Vector3.h <706:29 706:30>]
LOCAL_SYMBOL: b3Vector3.h<679:76> [b3Vector3.h <679:76 679:77>]
LOCAL_SYMBOL: b3Vector3.h<679:76> [b3Vector3.h <706:38 706:39>]
LOCAL_SYMBOL: b3Vector3.h<679:97> [b3Vector3.h <679:97 679:98>]
LOCAL_SYMBOL: b3Vector3.h<679:97> [b3Vector3.h <706:47 706:48>]
LOCAL_SYMBOL: b3Vector3.h<680:5> [b3Vector3.h <680:5 680:5>]
LOCAL_SYMBOL: b3Vector3.h<680:5> [b3Vector3.h <708:5 708:5>]
LOCAL_SYMBOL: b3Vector3.h<713:28> [b3Vector3.h <713:28 713:29>]
LOCAL_SYMBOL: b3Vector3.h<713:28> [b3Vector3.h <721:4 721:5>]
LOCAL_SYMBOL: b3Vector3.h<713:28> [b3Vector3.h <722:4 722:5>]
LOCAL_SYMBOL: b3Vector3.h<713:28> [b3Vector3.h <723:4 723:5>]
LOCAL_SYMBOL: b3Vector3.h<713:49> [b3Vector3.h <713:49 713:50>]
LOCAL_SYMBOL: b3Vector3.h<713:49> [b3Vector3.h <721:21 721:22>]
LOCAL_SYMBOL: b3Vector3.h<713:49> [b3Vector3.h <722:21 722:22>]
LOCAL_SYMBOL: b3Vector3.h<713:49> [b3Vector3.h <723:21 723:22>]
LOCAL_SYMBOL: b3Vector3.h<714:1> [b3Vector3.h <714:1 714:1>]
LOCAL_SYMBOL: b3Vector3.h<714:1> [b3Vector3.h <725:1 725:1>]
LOCAL_SYMBOL: b3Vector3.h<729:28> [b3Vector3.h <729:28 729:29>]
LOCAL_SYMBOL: b3Vector3.h<729:28> [b3Vector3.h <737:4 737:5>]
LOCAL_SYMBOL: b3Vector3.h<729:28> [b3Vector3.h <738:4 738:5>]
LOCAL_SYMBOL: b3Vector3.h<729:28> [b3Vector3.h <739:4 739:5>]
LOCAL_SYMBOL: b3Vector3.h<729:49> [b3Vector3.h <729:49 729:50>]
LOCAL_SYMBOL: b3Vector3.h<729:49> [b3Vector3.h <737:21 737:22>]
LOCAL_SYMBOL: b3Vector3.h<729:49> [b3Vector3.h <738:21 738:22>]
LOCAL_SYMBOL: b3Vector3.h<729:49> [b3Vector3.h <739:21 739:22>]
LOCAL_SYMBOL: b3Vector3.h<730:1> [b3Vector3.h <730:1 730:1>]
LOCAL_SYMBOL: b3Vector3.h<730:1> [b3Vector3.h <741:1 741:1>]
LOCAL_SYMBOL: b3Vector3.h<745:28> [b3Vector3.h <745:28 745:29>]
LOCAL_SYMBOL: b3Vector3.h<745:28> [b3Vector3.h <757:4 757:5>]
LOCAL_SYMBOL: b3Vector3.h<745:28> [b3Vector3.h <758:4 758:5>]
LOCAL_SYMBOL: b3Vector3.h<745:28> [b3Vector3.h <759:4 759:5>]
LOCAL_SYMBOL: b3Vector3.h<745:49> [b3Vector3.h <745:49 745:50>]
LOCAL_SYMBOL: b3Vector3.h<745:49> [b3Vector3.h <757:21 757:22>]
LOCAL_SYMBOL: b3Vector3.h<745:49> [b3Vector3.h <758:21 758:22>]
LOCAL_SYMBOL: b3Vector3.h<745:49> [b3Vector3.h <759:21 759:22>]
LOCAL_SYMBOL: b3Vector3.h<746:1> [b3Vector3.h <746:1 746:1>]
LOCAL_SYMBOL: b3Vector3.h<746:1> [b3Vector3.h <761:1 761:1>]
LOCAL_SYMBOL: b3Vector3.h<765:28> [b3Vector3.h <765:28 765:28>]
LOCAL_SYMBOL: b3Vector3.h<765:28> [b3Vector3.h <773:24 773:24>]
LOCAL_SYMBOL: b3Vector3.h<765:28> [b3Vector3.h <773:40 773:40>]
LOCAL_SYMBOL: b3Vector3.h<765:28> [b3Vector3.h <773:56 773:56>]
LOCAL_SYMBOL: b3Vector3.h<766:1> [b3Vector3.h <766:1 766:1>]
LOCAL_SYMBOL: b3Vector3.h<766:1> [b3Vector3.h <775:1 775:1>]
LOCAL_SYMBOL: b3Vector3.h<779:28> [b3Vector3.h <779:28 779:28>]
LOCAL_SYMBOL: b3Vector3.h<779:28> [b3Vector3.h <789:23 789:23>]
LOCAL_SYMBOL: b3Vector3.h<779:28> [b3Vector3.h <789:42 789:42>]
LOCAL_SYMBOL: b3Vector3.h<779:28> [b3Vector3.h <789:61 789:61>]
LOCAL_SYMBOL: b3Vector3.h<779:47> [b3Vector3.h <779:47 779:47>]
LOCAL_SYMBOL: b3Vector3.h<779:47> [b3Vector3.h <789:39 789:39>]
LOCAL_SYMBOL: b3Vector3.h<779:47> [b3Vector3.h <789:58 789:58>]
LOCAL_SYMBOL: b3Vector3.h<779:47> [b3Vector3.h <789:77 789:77>]
LOCAL_SYMBOL: b3Vector3.h<780:1> [b3Vector3.h <780:1 780:1>]
LOCAL_SYMBOL: b3Vector3.h<780:1> [b3Vector3.h <791:1 791:1>]
LOCAL_SYMBOL: b3Vector3.h<795:27> [b3Vector3.h <795:27 795:27>]
LOCAL_SYMBOL: b3Vector3.h<795:27> [b3Vector3.h <797:13 797:13>]
LOCAL_SYMBOL: b3Vector3.h<795:47> [b3Vector3.h <795:47 795:47>]
LOCAL_SYMBOL: b3Vector3.h<795:47> [b3Vector3.h <797:9 797:9>]
LOCAL_SYMBOL: b3Vector3.h<796:1> [b3Vector3.h <796:1 796:1>]
LOCAL_SYMBOL: b3Vector3.h<796:1> [b3Vector3.h <798:1 798:1>]
LOCAL_SYMBOL: b3Vector3.h<802:28> [b3Vector3.h <802:28 802:28>]
LOCAL_SYMBOL: b3Vector3.h<802:28> [b3Vector3.h <813:9 813:9>]
LOCAL_SYMBOL: b3Vector3.h<802:47> [b3Vector3.h <802:47 802:47>]
LOCAL_SYMBOL: b3Vector3.h<802:47> [b3Vector3.h <813:30 813:30>]
LOCAL_SYMBOL: b3Vector3.h<803:1> [b3Vector3.h <803:1 803:1>]
LOCAL_SYMBOL: b3Vector3.h<803:1> [b3Vector3.h <815:1 815:1>]
LOCAL_SYMBOL: b3Vector3.h<819:28> [b3Vector3.h <819:28 819:29>]
LOCAL_SYMBOL: b3Vector3.h<819:28> [b3Vector3.h <841:4 841:5>]
LOCAL_SYMBOL: b3Vector3.h<819:28> [b3Vector3.h <842:4 842:5>]
LOCAL_SYMBOL: b3Vector3.h<819:28> [b3Vector3.h <843:4 843:5>]
LOCAL_SYMBOL: b3Vector3.h<819:49> [b3Vector3.h <819:49 819:50>]
LOCAL_SYMBOL: b3Vector3.h<819:49> [b3Vector3.h <841:21 841:22>]
LOCAL_SYMBOL: b3Vector3.h<819:49> [b3Vector3.h <842:21 842:22>]
LOCAL_SYMBOL: b3Vector3.h<819:49> [b3Vector3.h <843:21 843:22>]
LOCAL_SYMBOL: b3Vector3.h<820:1> [b3Vector3.h <820:1 820:1>]
LOCAL_SYMBOL: b3Vector3.h<820:1> [b3Vector3.h <845:1 845:1>]
LOCAL_SYMBOL: b3Vector3.h<83:41> [b3Vector3.h <83:41 83:41>]
LOCAL_SYMBOL: b3Vector3.h<83:52> [b3Vector3.h <83:52 83:52>]
LOCAL_SYMBOL: b3Vector3.h<83:63> [b3Vector3.h <83:63 83:63>]
LOCAL_SYMBOL: b3Vector3.h<849:24> [b3Vector3.h <849:24 849:25>]
LOCAL_SYMBOL: b3Vector3.h<849:24> [b3Vector3.h <851:9 851:10>]
LOCAL_SYMBOL: b3Vector3.h<849:45> [b3Vector3.h <849:45 849:46>]
LOCAL_SYMBOL: b3Vector3.h<849:45> [b3Vector3.h <851:16 851:17>]
LOCAL_SYMBOL: b3Vector3.h<84:41> [b3Vector3.h <84:41 84:41>]
LOCAL_SYMBOL: b3Vector3.h<84:52> [b3Vector3.h <84:52 84:52>]
LOCAL_SYMBOL: b3Vector3.h<84:63> [b3Vector3.h <84:63 84:63>]
LOCAL_SYMBOL: b3Vector3.h<84:75> [b3Vector3.h <84:75 84:75>]
LOCAL_SYMBOL: b3Vector3.h<850:1> [b3Vector3.h <850:1 850:1>]
LOCAL_SYMBOL: b3Vector3.h<850:1> [b3Vector3.h <852:1 852:1>]
LOCAL_SYMBOL: b3Vector3.h<857:30> [b3Vector3.h <857:30 857:31>]
LOCAL_SYMBOL: b3Vector3.h<857:30> [b3Vector3.h <859:9 859:10>]
LOCAL_SYMBOL: b3Vector3.h<857:51> [b3Vector3.h <857:51 857:52>]
LOCAL_SYMBOL: b3Vector3.h<857:51> [b3Vector3.h <859:22 859:23>]
LOCAL_SYMBOL: b3Vector3.h<858:1> [b3Vector3.h <858:1 858:1>]
LOCAL_SYMBOL: b3Vector3.h<858:1> [b3Vector3.h <860:1 860:1>]
LOCAL_SYMBOL: b3Vector3.h<85:41> [b3Vector3.h <85:41 85:41>]
LOCAL_SYMBOL: b3Vector3.h<85:52> [b3Vector3.h <85:52 85:52>]
LOCAL_SYMBOL: b3Vector3.h<85:63> [b3Vector3.h <85:63 85:63>]
LOCAL_SYMBOL: b3Vector3.h<85:74> [b3Vector3.h <85:74 85:74>]
LOCAL_SYMBOL: b3Vector3.h<865:29> [b3Vector3.h <865:29 865:30>]
LOCAL_SYMBOL: b3Vector3.h<865:29> [b3Vector3.h <867:9 867:10>]
LOCAL_SYMBOL: b3Vector3.h<865:50> [b3Vector3.h <865:50 865:51>]
LOCAL_SYMBOL: b3Vector3.h<865:50> [b3Vector3.h <867:21 867:22>]
LOCAL_SYMBOL: b3Vector3.h<866:1> [b3Vector3.h <866:1 866:1>]
LOCAL_SYMBOL: b3Vector3.h<866:1> [b3Vector3.h <868:1 868:1>]
LOCAL_SYMBOL: b3Vector3.h<872:26> [b3Vector3.h <872:26 872:27>]
LOCAL_SYMBOL: b3Vector3.h<872:26> [b3Vector3.h <874:9 874:10>]
LOCAL_SYMBOL: b3Vector3.h<872:47> [b3Vector3.h <872:47 872:48>]
LOCAL_SYMBOL: b3Vector3.h<872:47> [b3Vector3.h <874:18 874:19>]
LOCAL_SYMBOL: b3Vector3.h<873:1> [b3Vector3.h <873:1 873:1>]
LOCAL_SYMBOL: b3Vector3.h<873:1> [b3Vector3.h <875:1 875:1>]
LOCAL_SYMBOL: b3Vector3.h<879:26> [b3Vector3.h <879:26 879:27>]
LOCAL_SYMBOL: b3Vector3.h<879:26> [b3Vector3.h <881:9 881:10>]
LOCAL_SYMBOL: b3Vector3.h<879:47> [b3Vector3.h <879:47 879:48>]
LOCAL_SYMBOL: b3Vector3.h<879:47> [b3Vector3.h <881:18 881:19>]
LOCAL_SYMBOL: b3Vector3.h<880:1> [b3Vector3.h <880:1 880:1>]
LOCAL_SYMBOL: b3Vector3.h<880:1> [b3Vector3.h <882:1 882:1>]
LOCAL_SYMBOL: b3Vector3.h<885:27> [b3Vector3.h <885:27 885:28>]
LOCAL_SYMBOL: b3Vector3.h<885:27> [b3Vector3.h <887:9 887:10>]
LOCAL_SYMBOL: b3Vector3.h<885:48> [b3Vector3.h <885:48 885:49>]
LOCAL_SYMBOL: b3Vector3.h<885:48> [b3Vector3.h <887:19 887:20>]
LOCAL_SYMBOL: b3Vector3.h<885:69> [b3Vector3.h <885:69 885:70>]
LOCAL_SYMBOL: b3Vector3.h<885:69> [b3Vector3.h <887:23 887:24>]
LOCAL_SYMBOL: b3Vector3.h<886:1> [b3Vector3.h <886:1 886:1>]
LOCAL_SYMBOL: b3Vector3.h<886:1> [b3Vector3.h <888:1 888:1>]
LOCAL_SYMBOL: b3Vector3.h<895:25> [b3Vector3.h <895:25 895:26>]
LOCAL_SYMBOL: b3Vector3.h<895:25> [b3Vector3.h <897:9 897:10>]
LOCAL_SYMBOL: b3Vector3.h<895:46> [b3Vector3.h <895:46 895:47>]
LOCAL_SYMBOL: b3Vector3.h<895:46> [b3Vector3.h <897:17 897:18>]
LOCAL_SYMBOL: b3Vector3.h<895:66> [b3Vector3.h <895:66 895:66>]
LOCAL_SYMBOL: b3Vector3.h<895:66> [b3Vector3.h <897:21 897:21>]
LOCAL_SYMBOL: b3Vector3.h<896:1> [b3Vector3.h <896:1 896:1>]
LOCAL_SYMBOL: b3Vector3.h<896:1> [b3Vector3.h <898:1 898:1>]
LOCAL_SYMBOL: b3Vector3.h<902:64> [b3Vector3.h <902:64 902:64>]
LOCAL_SYMBOL: b3Vector3.h<902:64> [b3Vector3.h <904:10 904:10>]
LOCAL_SYMBOL: b3Vector3.h<903:1> [b3Vector3.h <903:1 903:1>]
LOCAL_SYMBOL: b3Vector3.h<903:1> [b3Vector3.h <905:1 905:1>]
LOCAL_SYMBOL: b3Vector3.h<907:63> [b3Vector3.h <907:63 907:63>]
LOCAL_SYMBOL: b3Vector3.h<907:63> [b3Vector3.h <909:10 909:10>]
LOCAL_SYMBOL: b3Vector3.h<908:1> [b3Vector3.h <908:1 908:1>]
LOCAL_SYMBOL: b3Vector3.h<908:1> [b3Vector3.h <910:1 910:1>]
LOCAL_SYMBOL: b3Vector3.h<913:1> [b3Vector3.h <913:1 913:1>]
LOCAL_SYMBOL: b3Vector3.h<913:1> [b3Vector3.h <921:1 921:1>]
LOCAL_SYMBOL: b3Vector3.h<923:63> [b3Vector3.h <923:63 923:67>]
LOCAL_SYMBOL: b3Vector3.h<923:63> [b3Vector3.h <955:16 955:20>]
LOCAL_SYMBOL: b3Vector3.h<923:63> [b3Vector3.h <955:24 955:28>]
LOCAL_SYMBOL: b3Vector3.h<923:63> [b3Vector3.h <959:7 959:11>]
LOCAL_SYMBOL: b3Vector3.h<923:85> [b3Vector3.h <923:85 923:90>]
LOCAL_SYMBOL: b3Vector3.h<923:85> [b3Vector3.h <961:27 961:32>]
LOCAL_SYMBOL: b3Vector3.h<923:85> [b3Vector3.h <961:50 961:55>]
LOCAL_SYMBOL: b3Vector3.h<924:1> [b3Vector3.h <924:1 924:1>]
LOCAL_SYMBOL: b3Vector3.h<924:1> [b3Vector3.h <963:1 963:1>]
LOCAL_SYMBOL: b3Vector3.h<93:1> [b3Vector3.h <93:1 93:1>]
LOCAL_SYMBOL: b3Vector3.h<93:1> [b3Vector3.h <709:1 709:1>]
LOCAL_SYMBOL: b3Vector3.h<955:12> [b3Vector3.h <955:12 955:12>]
LOCAL_SYMBOL: b3Vector3.h<955:12> [b3Vector3.h <956:25 956:25>]
LOCAL_SYMBOL: b3Vector3.h<955:12> [b3Vector3.h <961:11 961:11>]
LOCAL_SYMBOL: b3Vector3.h<956:12> [b3Vector3.h <956:12 956:13>]
LOCAL_SYMBOL: b3Vector3.h<956:12> [b3Vector3.h <961:15 961:16>]
LOCAL_SYMBOL: b3Vector3.h<957:12> [b3Vector3.h <957:12 957:13>]
LOCAL_SYMBOL: b3Vector3.h<957:12> [b3Vector3.h <959:2 959:3>]
LOCAL_SYMBOL: b3Vector3.h<957:12> [b3Vector3.h <961:38 961:39>]
LOCAL_SYMBOL: b3Vector3.h<965:63> [b3Vector3.h <965:63 965:67>]
LOCAL_SYMBOL: b3Vector3.h<965:63> [b3Vector3.h <985:28 985:32>]
LOCAL_SYMBOL: b3Vector3.h<965:63> [b3Vector3.h <1003:38 1003:42>]
LOCAL_SYMBOL: b3Vector3.h<965:75> [b3Vector3.h <965:75 965:85>]
LOCAL_SYMBOL: b3Vector3.h<965:75> [b3Vector3.h <975:9 975:19>]
LOCAL_SYMBOL: b3Vector3.h<965:75> [b3Vector3.h <983:25 983:35>]
LOCAL_SYMBOL: b3Vector3.h<965:75> [b3Vector3.h <1003:68 1003:78>]
LOCAL_SYMBOL: b3Vector3.h<965:98> [b3Vector3.h <965:98 965:103>]
LOCAL_SYMBOL: b3Vector3.h<965:98> [b3Vector3.h <999:9 999:14>]
LOCAL_SYMBOL: b3Vector3.h<965:98> [b3Vector3.h <1003:82 1003:87>]
LOCAL_SYMBOL: b3Vector3.h<966:1> [b3Vector3.h <966:1 966:1>]
LOCAL_SYMBOL: b3Vector3.h<966:1> [b3Vector3.h <1005:1 1005:1>]
LOCAL_SYMBOL: b3Vector3.h<969:20> [b3Vector3.h <969:20 969:32>]
LOCAL_SYMBOL: b3Vector3.h<969:20> [b3Vector3.h <975:23 975:35>]
LOCAL_SYMBOL: b3Vector3.h<96:15> [b3Vector3.h <96:15 96:15>]
LOCAL_SYMBOL: b3Vector3.h<96:15> [b3Vector3.h <101:9 101:9>]
LOCAL_SYMBOL: b3Vector3.h<970:103> [b3Vector3.h <970:103 970:108>]
LOCAL_SYMBOL: b3Vector3.h<970:44> [b3Vector3.h <970:44 970:48>]
LOCAL_SYMBOL: b3Vector3.h<970:64> [b3Vector3.h <970:64 970:66>]
LOCAL_SYMBOL: b3Vector3.h<970:83> [b3Vector3.h <970:83 970:93>]
LOCAL_SYMBOL: b3Vector3.h<979:5> [b3Vector3.h <979:5 979:5>]
LOCAL_SYMBOL: b3Vector3.h<979:5> [b3Vector3.h <1001:5 1001:5>]
LOCAL_SYMBOL: b3Vector3.h<980:18> [b3Vector3.h <980:18 980:23>]
LOCAL_SYMBOL: b3Vector3.h<980:18> [b3Vector3.h <987:23 987:28>]
LOCAL_SYMBOL: b3Vector3.h<980:18> [b3Vector3.h <989:17 989:22>]
LOCAL_SYMBOL: b3Vector3.h<980:18> [b3Vector3.h <999:18 999:23>]
LOCAL_SYMBOL: b3Vector3.h<981:13> [b3Vector3.h <981:13 981:13>]
LOCAL_SYMBOL: b3Vector3.h<981:13> [b3Vector3.h <983:14 983:14>]
LOCAL_SYMBOL: b3Vector3.h<981:13> [b3Vector3.h <983:21 983:21>]
LOCAL_SYMBOL: b3Vector3.h<981:13> [b3Vector3.h <983:38 983:38>]
LOCAL_SYMBOL: b3Vector3.h<981:13> [b3Vector3.h <985:34 985:34>]
LOCAL_SYMBOL: b3Vector3.h<981:13> [b3Vector3.h <990:27 990:27>]
LOCAL_SYMBOL: b3Vector3.h<982:13> [b3Vector3.h <982:13 982:19>]
LOCAL_SYMBOL: b3Vector3.h<982:13> [b3Vector3.h <990:17 990:23>]
LOCAL_SYMBOL: b3Vector3.h<982:13> [b3Vector3.h <995:13 995:19>]
LOCAL_SYMBOL: b3Vector3.h<982:13> [b3Vector3.h <997:4 997:10>]
LOCAL_SYMBOL: b3Vector3.h<982:13> [b3Vector3.h <1000:16 1000:22>]
LOCAL_SYMBOL: b3Vector3.h<984:9> [b3Vector3.h <984:9 984:9>]
LOCAL_SYMBOL: b3Vector3.h<984:9> [b3Vector3.h <992:9 992:9>]
LOCAL_SYMBOL: b3Vector3.h<985:22> [b3Vector3.h <985:22 985:24>]
LOCAL_SYMBOL: b3Vector3.h<985:22> [b3Vector3.h <987:17 987:19>]
LOCAL_SYMBOL: b3Vector3.h<985:22> [b3Vector3.h <989:26 989:28>]
LOCAL_SYMBOL: b3Vector3.h<988:13> [b3Vector3.h <988:13 988:13>]
LOCAL_SYMBOL: b3Vector3.h<988:13> [b3Vector3.h <991:13 991:13>]
LOCAL_SYMBOL: b3Vector3.h<996:3> [b3Vector3.h <996:3 996:3>]
LOCAL_SYMBOL: b3Vector3.h<996:3> [b3Vector3.h <998:3 998:3>]
LOCAL_SYMBOL: b3Vector3.h<99:11> [b3Vector3.h <99:11 99:11>]
LOCAL_SYMBOL: b3Vector3.h<99:11> [b3Vector3.h <99:26 99:26>]
COMMENT: comment [b3GeometryUtil.cpp <1:1 13:3>]
COMMENT: comment [b3GeometryUtil.cpp <20:1 24:3>]
COMMENT: comment [b3GeometryUtil.cpp <84:2 84:17>]
COMMENT: comment [b3GeometryUtil.cpp <113:9 113:69>]
COMMENT: comment [b3GeometryUtil.cpp <132:2 132:17>]
COMMENT: comment [b3GeometryUtil.cpp <155:6 155:41>]
COMMENT: comment [b3GeometryUtil.cpp <157:6 157:59>]
COMMENT: comment [b3GeometryUtil.cpp <158:6 158:88>]
COMMENT: comment [b3GeometryUtil.cpp <159:6 159:29>]
COMMENT: comment [b3GeometryUtil.cpp <174:7 174:67>]
COMMENT: comment [b3GeometryUtil.h <1:1 13:3>]
COMMENT: comment [b3GeometryUtil.h <22:1 22:107>]
COMMENT: comment [b3GeometryUtil.h <41:8 41:28>]
COMMENT: comment [b3Vector3.h <1:1 13:3>]
COMMENT: comment [b3Vector3.h <20:1 20:22>]
COMMENT: comment [b3Vector3.h <31:8 31:33>]
COMMENT: comment [b3Vector3.h <35:1 35:63>]
COMMENT: comment [b3Vector3.h <38:32 38:111>]
COMMENT: comment [b3Vector3.h <43:1 43:88>]
COMMENT: comment [b3Vector3.h <88:1 91:4>]
COMMENT: comment [b3Vector3.h <95:50 95:66>]
COMMENT: comment [b3Vector3.h <115:50 115:66>]
COMMENT: comment [b3Vector3.h <117:2 120:4>]
COMMENT: comment [b3Vector3.h <136:1 137:43>]
COMMENT: comment [b3Vector3.h <153:3 154:38>]
COMMENT: comment [b3Vector3.h <169:3 170:30>]
COMMENT: comment [b3Vector3.h <187:3 188:43>]
COMMENT: comment [b3Vector3.h <193:7 193:35>]
COMMENT: comment [b3Vector3.h <207:3 208:53>]
COMMENT: comment [b3Vector3.h <230:3 230:55>]
COMMENT: comment [b3Vector3.h <236:3 236:47>]
COMMENT: comment [b3Vector3.h <242:3 243:62>]
COMMENT: comment [b3Vector3.h <246:3 247:62>]
COMMENT: comment [b3Vector3.h <253:3 253:27>]
COMMENT: comment [b3Vector3.h <265:3 266:28>]
COMMENT: comment [b3Vector3.h <309:3 309:58>]
COMMENT: comment [b3Vector3.h <312:3 314:44>]
COMMENT: comment [b3Vector3.h <317:3 318:34>]
COMMENT: comment [b3Vector3.h <326:3 326:72>]
COMMENT: comment [b3Vector3.h <341:3 342:34>]
COMMENT: comment [b3Vector3.h <432:3 433:52>]
COMMENT: comment [b3Vector3.h <439:3 440:52>]
COMMENT: comment [b3Vector3.h <478:3 478:36>]
COMMENT: comment [b3Vector3.h <479:3 479:40>]
COMMENT: comment [b3Vector3.h <483:3 485:85>]
COMMENT: comment [b3Vector3.h <510:3 511:34>]
COMMENT: comment [b3Vector3.h <526:3 526:34>]
COMMENT: comment [b3Vector3.h <528:3 528:34>]
COMMENT: comment [b3Vector3.h <530:3 530:34>]
COMMENT: comment [b3Vector3.h <532:1 532:32>]
COMMENT: comment [b3Vector3.h <535:3 535:31>]
COMMENT: comment [b3Vector3.h <537:3 537:31>]
COMMENT: comment [b3Vector3.h <539:3 539:31>]
COMMENT: comment [b3Vector3.h <541:3 541:31>]
COMMENT: comment [b3Vector3.h <544:2 544:89>]
COMMENT: comment [b3Vector3.h <545:2 545:89>]
COMMENT: comment [b3Vector3.h <546:2 546:140>]
COMMENT: comment [b3Vector3.h <567:3 569:6>]
COMMENT: comment [b3Vector3.h <584:3 586:6>]
COMMENT: comment [b3Vector3.h <666:9 669:52>]
COMMENT: comment [b3Vector3.h <672:9 675:52>]
COMMENT: comment [b3Vector3.h <678:5 678:122>]
COMMENT: comment [b3Vector3.h <711:1 711:60>]
COMMENT: comment [b3Vector3.h <727:1 727:59>]
COMMENT: comment [b3Vector3.h <743:1 743:55>]
COMMENT: comment [b3Vector3.h <763:1 763:47>]
COMMENT: comment [b3Vector3.h <777:1 777:43>]
COMMENT: comment [b3Vector3.h <793:1 793:43>]
COMMENT: comment [b3Vector3.h <800:1 800:53>]
COMMENT: comment [b3Vector3.h <805:7 805:35>]
COMMENT: comment [b3Vector3.h <817:1 817:53>]
COMMENT: comment [b3Vector3.h <847:1 847:56>]
COMMENT: comment [b3Vector3.h <855:1 855:61>]
COMMENT: comment [b3Vector3.h <863:1 863:53>]
COMMENT: comment [b3Vector3.h <870:1 870:50>]
COMMENT: comment [b3Vector3.h <877:1 877:53>]
COMMENT: comment [b3Vector3.h <890:1 893:78>]
COMMENT: comment [b3Vector3.h <925:2 925:39>]
COMMENT: comment [b3Vector3.h <978:7 978:34>]
COMMENT: comment [b3Vector3.h <1021:7 1021:34>]
COMMENT: comment [b3Vector3.h <1142:3 1146:6>]
COMMENT: comment [b3Vector3.h <1149:1 1155:3>]
COMMENT: comment [b3Vector3.h <1156:1 1161:6>]
COMMENT: comment [b3Vector3.h <1174:1 1174:100>]
COMMENT: comment [b3Vector3.h <1195:8 1195:33>]
COMMENT: comment [b3Vector3.h <1197:1 1197:100>]
COMMENT: comment [b3Vector3.h <1207:1 1207:102>]
COMMENT: comment [b3Vector3.h <1223:5 1223:29>]
COMMENT: comment [b3Vector3.h <1229:5 1229:21>]
COMMENT: comment [b3Vector3.h <1235:5 1235:29>]
COMMENT: comment [b3Vector3.h <1241:5 1241:21>]
COMMENT: comment [b3Vector3.h <1262:2 1262:52>]
COMMENT: comment [b3Vector3.h <1276:2 1276:52>]
COMMENT: comment [b3Vector3.h <1290:2 1290:52>]
COMMENT: comment [b3Vector3.h <1345:8 1345:22>]
COMMENT: comment [b3Scalar.h <1:1 13:3>]
COMMENT: comment [b3Scalar.h <28:20 28:41>]
COMMENT: comment [b3Scalar.h <31:1 31:67>]
COMMENT: comment [b3Scalar.h <43:23 43:36>]
COMMENT: comment [b3Scalar.h <55:4 55:38>]
COMMENT: comment [b3Scalar.h <56:36 56:62>]
COMMENT: comment [b3Scalar.h <57:1 57:98>]
COMMENT: comment [b3Scalar.h <58:34 58:81>]
COMMENT: comment [b3Scalar.h <59:1 59:80>]
COMMENT: comment [b3Scalar.h <77:4 77:70>]
COMMENT: comment [b3Scalar.h <78:4 78:81>]
COMMENT: comment [b3Scalar.h <79:4 79:78>]
COMMENT: comment [b3Scalar.h <80:4 80:45>]
COMMENT: comment [b3Scalar.h <81:4 81:122>]
COMMENT: comment [b3Scalar.h <82:4 82:135>]
COMMENT: comment [b3Scalar.h <83:4 83:31>]
COMMENT: comment [b3Scalar.h <84:11 84:23>]
COMMENT: comment [b3Scalar.h <89:9 89:16>]
COMMENT: comment [b3Scalar.h <91:10 91:23>]
COMMENT: comment [b3Scalar.h <104:3 104:47>]
COMMENT: comment [b3Scalar.h <257:1 257:124>]
COMMENT: comment [b3Scalar.h <264:1 264:47>]
COMMENT: comment [b3Scalar.h <270:7 270:19>]
COMMENT: comment [b3Scalar.h <316:8 316:27>]
COMMENT: comment [b3Scalar.h <415:73 415:101>]
COMMENT: comment [b3Scalar.h <474:20 474:73>]
COMMENT: comment [b3Scalar.h <482:1 482:110>]
COMMENT: comment [b3Scalar.h <483:1 483:118>]
COMMENT: comment [b3Scalar.h <486:5 486:89>]
COMMENT: comment [b3Scalar.h <487:5 487:73>]
COMMENT: comment [b3Scalar.h <488:5 488:89>]
COMMENT: comment [b3Scalar.h <489:5 489:77>]
COMMENT: comment [b3Scalar.h <517:1 517:33>]
COMMENT: comment [b3Scalar.h <538:1 538:63>]
COMMENT: comment [b3Scalar.h <539:1 539:120>]
COMMENT: comment [b3Scalar.h <540:1 540:101>]
COMMENT: comment [b3Scalar.h <541:1 541:127>]
COMMENT: comment [b3Scalar.h <542:1 542:143>]
COMMENT: comment [b3Scalar.h <543:1 543:79>]
COMMENT: comment [b3Scalar.h <557:1 557:30>]
COMMENT: comment [b3Scalar.h <573:1 573:28>]
COMMENT: comment [b3Scalar.h <589:1 589:30>]
COMMENT: comment [b3Scalar.h <607:1 607:53>]
COMMENT: comment [b3Scalar.h <625:1 625:42>]
COMMENT: comment [b3Scalar.h <641:1 641:54>]
COMMENT: comment [b3Scalar.h <663:8 663:21>]
COMMENT: comment [b3Logging.h <9:1 9:102>]
COMMENT: comment [b3Logging.h <10:1 10:81>]
COMMENT: comment [b3Logging.h <12:1 12:151>]
COMMENT: comment [b3Logging.h <13:1 13:49>]
COMMENT: comment [b3Logging.h <14:1 14:44>]
COMMENT: comment [b3Logging.h <15:1 15:24>]
COMMENT: comment [b3Logging.h <44:7 44:22>]
COMMENT: comment [b3Logging.h <50:8 50:31>]
COMMENT: comment [b3Logging.h <59:1 59:74>]
COMMENT: comment [b3Logging.h <64:1 64:59>]
COMMENT: comment [b3Logging.h <68:1 68:125>]
COMMENT: comment [b3Logging.h <77:7 77:21>]
COMMENT: comment [b3MinMax.h <1:1 13:3>]
COMMENT: comment [b3MinMax.h <71:8 71:25>]
COMMENT: comment [b3AlignedAllocator.h <1:1 14:3>]
COMMENT: comment [b3AlignedAllocator.h <19:1 19:66>]
COMMENT: comment [b3AlignedAllocator.h <20:1 20:64>]
COMMENT: comment [b3AlignedAllocator.h <21:1 21:48>]
COMMENT: comment [b3AlignedAllocator.h <24:1 24:40>]
COMMENT: comment [b3AlignedAllocator.h <52:1 52:123>]
COMMENT: comment [b3AlignedAllocator.h <54:1 54:220>]
COMMENT: comment [b3AlignedAllocator.h <58:1 58:78>]
COMMENT: comment [b3AlignedAllocator.h <59:1 59:171>]
COMMENT: comment [b3AlignedAllocator.h <67:2 67:27>]
COMMENT: comment [b3AlignedAllocator.h <69:2 71:4>]
COMMENT: comment [b3AlignedAllocator.h <106:8 106:30>]
COMMENT: comment [b3AlignedObjectArray.h <1:1 14:3>]
COMMENT: comment [b3AlignedObjectArray.h <20:23 20:62>]
COMMENT: comment [b3AlignedObjectArray.h <23:1 23:87>]
COMMENT: comment [b3AlignedObjectArray.h <24:1 24:120>]
COMMENT: comment [b3AlignedObjectArray.h <25:1 25:106>]
COMMENT: comment [b3AlignedObjectArray.h <26:1 26:92>]
COMMENT: comment [b3AlignedObjectArray.h <27:1 27:71>]
COMMENT: comment [b3AlignedObjectArray.h <30:1 30:171>]
COMMENT: comment [b3AlignedObjectArray.h <31:38 31:120>]
COMMENT: comment [b3AlignedObjectArray.h <36:8 36:23>]
COMMENT: comment [b3AlignedObjectArray.h <39:16 39:35>]
COMMENT: comment [b3AlignedObjectArray.h <40:8 40:30>]
COMMENT: comment [b3AlignedObjectArray.h <43:1 43:102>]
COMMENT: comment [b3AlignedObjectArray.h <44:1 44:123>]
COMMENT: comment [b3AlignedObjectArray.h <46:1 46:22>]
COMMENT: comment [b3AlignedObjectArray.h <54:2 54:24>]
COMMENT: comment [b3AlignedObjectArray.h <64:6 64:36>]
COMMENT: comment [b3AlignedObjectArray.h <67:7 67:37>]
COMMENT: comment [b3AlignedObjectArray.h <82:8 82:30>]
COMMENT: comment [b3AlignedObjectArray.h <87:4 87:26>]
COMMENT: comment [b3AlignedObjectArray.h <112:5 112:51>]
COMMENT: comment [b3AlignedObjectArray.h <136:3 136:140>]
COMMENT: comment [b3AlignedObjectArray.h <148:3 148:49>]
COMMENT: comment [b3AlignedObjectArray.h <183:3 183:156>]
COMMENT: comment [b3AlignedObjectArray.h <201:3 201:157>]
COMMENT: comment [b3AlignedObjectArray.h <202:3 202:177>]
COMMENT: comment [b3AlignedObjectArray.h <215:5 215:31>]
COMMENT: comment [b3AlignedObjectArray.h <241:8 241:30>]
COMMENT: comment [b3AlignedObjectArray.h <269:36 269:94>]
COMMENT: comment [b3AlignedObjectArray.h <288:8 288:30>]
COMMENT: comment [b3AlignedObjectArray.h <294:3 294:135>]
COMMENT: comment [b3AlignedObjectArray.h <301:5 301:57>]
COMMENT: comment [b3AlignedObjectArray.h <303:6 303:36>]
COMMENT: comment [b3AlignedObjectArray.h <318:5 318:27>]
COMMENT: comment [b3AlignedObjectArray.h <343:3 343:51>]
COMMENT: comment [b3AlignedObjectArray.h <344:3 344:52>]
COMMENT: comment [b3AlignedObjectArray.h <348:4 348:17>]
COMMENT: comment [b3AlignedObjectArray.h <362:4 362:17>]
COMMENT: comment [b3AlignedObjectArray.h <373:4 373:32>]
COMMENT: comment [b3AlignedObjectArray.h <381:3 381:79>]
COMMENT: comment [b3AlignedObjectArray.h <385:4 385:35>]
COMMENT: comment [b3AlignedObjectArray.h <386:4 386:35>]
COMMENT: comment [b3AlignedObjectArray.h <389:4 389:24>]
COMMENT: comment [b3AlignedObjectArray.h <398:5 398:28>]
COMMENT: comment [b3AlignedObjectArray.h <401:6 401:25>]
COMMENT: comment [b3AlignedObjectArray.h <411:5 411:17>]
COMMENT: comment [b3AlignedObjectArray.h <424:8 424:30>]
COMMENT: comment [b3AlignedObjectArray.h <431:3 431:39>]
COMMENT: comment [b3AlignedObjectArray.h <439:3 439:30>]
COMMENT: comment [b3AlignedObjectArray.h <442:17 442:43>]
COMMENT: comment [b3AlignedObjectArray.h <446:4 446:32>]
COMMENT: comment [b3AlignedObjectArray.h <451:2 451:54>]
COMMENT: comment [b3AlignedObjectArray.h <457:3 457:24>]
COMMENT: comment [b3AlignedObjectArray.h <459:35 459:56>]
COMMENT: comment [b3AlignedObjectArray.h <461:23 461:52>]
COMMENT: comment [b3AlignedObjectArray.h <463:21 463:53>]
COMMENT: comment [b3AlignedObjectArray.h <465:21 465:55>]
COMMENT: comment [b3AlignedObjectArray.h <467:21 467:42>]
COMMENT: comment [b3AlignedObjectArray.h <514:2 514:23>]
COMMENT: comment [b3AlignedObjectArray.h <533:8 533:27>]
