FILE: b2DistanceJoint.cpp
COMMENT: comment [b2DistanceJoint.cpp <1:1 17:3>]
COMMENT: comment [b2DistanceJoint.cpp <23:1 23:26>]
COMMENT: comment [b2DistanceJoint.cpp <24:1 24:24>]
COMMENT: comment [b2DistanceJoint.cpp <25:1 25:77>]
COMMENT: comment [b2DistanceJoint.cpp <26:1 26:20>]
COMMENT: comment [b2DistanceJoint.cpp <28:1 28:33>]
COMMENT: comment [b2DistanceJoint.cpp <29:1 29:39>]
COMMENT: comment [b2DistanceJoint.cpp <31:1 31:25>]
COMMENT: comment [b2DistanceJoint.cpp <32:1 32:33>]
COMMENT: comment [b2DistanceJoint.cpp <33:1 33:58>]
COMMENT: comment [b2DistanceJoint.cpp <34:1 34:41>]
COMMENT: comment [b2DistanceJoint.cpp <35:1 35:21>]
COMMENT: comment [b2DistanceJoint.cpp <36:1 36:77>]
COMMENT: comment [b2DistanceJoint.cpp <89:2 89:24>]
REFERENCE_MACRO_USAGE b2DistanceJoint.cpp -> b2_linearSlop [b2DistanceJoint.cpp <91:15 91:27>]
COMMENT: comment [b2DistanceJoint.cpp <104:2 104:39>]
COMMENT: comment [b2DistanceJoint.cpp <111:3 111:15>]
REFERENCE_MACRO_USAGE b2DistanceJoint.cpp -> b2_pi [b2DistanceJoint.cpp <112:26 112:30>]
COMMENT: comment [b2DistanceJoint.cpp <114:3 114:25>]
COMMENT: comment [b2DistanceJoint.cpp <117:3 117:22>]
COMMENT: comment [b2DistanceJoint.cpp <120:3 120:20>]
COMMENT: comment [b2DistanceJoint.cpp <137:3 137:56>]
COMMENT: comment [b2DistanceJoint.cpp <164:2 164:35>]
COMMENT: comment [b2DistanceJoint.cpp <188:3 188:68>]
REFERENCE_MACRO_USAGE b2DistanceJoint.cpp -> b2_maxLinearCorrection [b2DistanceJoint.cpp <205:18 205:39>]
REFERENCE_MACRO_USAGE b2DistanceJoint.cpp -> b2_maxLinearCorrection [b2DistanceJoint.cpp <205:42 205:63>]
REFERENCE_MACRO_USAGE b2DistanceJoint.cpp -> b2_linearSlop [b2DistanceJoint.cpp <220:20 220:32>]
REFERENCE_MACRO_USAGE b2DistanceJoint.cpp -> B2_NOT_USED [b2DistanceJoint.cpp <241:2 241:12>]
SYMBOL_METHOD public void b2DistanceJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <38:1 <38:26 38:35> 47:1>]
SYMBOL_STRUCT b2DistanceJointDef
QUALIFIER: b2DistanceJointDef [b2DistanceJoint.cpp <38:6 38:23>]
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2DistanceJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> void [b2DistanceJoint.cpp <38:1 38:4>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<38:45> [b2DistanceJoint.cpp <38:45 38:46>]
REFERENCE_TYPE_USAGE void b2DistanceJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Body [b2DistanceJoint.cpp <38:37 38:42>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<38:57> [b2DistanceJoint.cpp <38:57 38:58>]
REFERENCE_TYPE_USAGE void b2DistanceJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Body [b2DistanceJoint.cpp <38:49 38:54>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<39:24> [b2DistanceJoint.cpp <39:24 39:30>]
REFERENCE_TYPE_USAGE void b2DistanceJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2DistanceJoint.cpp <39:16 39:21>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<39:47> [b2DistanceJoint.cpp <39:47 39:53>]
REFERENCE_TYPE_USAGE void b2DistanceJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2DistanceJoint.cpp <39:39 39:44>]
REFERENCE_USAGE void b2DistanceJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Body * b2JointDef::bodyA [b2DistanceJoint.cpp <41:2 41:6>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<38:45> [b2DistanceJoint.cpp <41:10 41:11>]
REFERENCE_USAGE void b2DistanceJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Body * b2JointDef::bodyB [b2DistanceJoint.cpp <42:2 42:6>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<38:57> [b2DistanceJoint.cpp <42:10 42:11>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &&)
REFERENCE_CALL void b2DistanceJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2DistanceJoint.cpp <43:15 43:15>]
REFERENCE_USAGE void b2DistanceJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2DistanceJointDef::localAnchorA [b2DistanceJoint.cpp <43:2 43:13>]
SYMBOL_FUNCTION b2Vec2 b2Body::GetLocalPoint(const b2Vec2 &) const
REFERENCE_CALL void b2DistanceJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Body::GetLocalPoint(const b2Vec2 &) const [b2DistanceJoint.cpp <43:24 43:36>]
REFERENCE_USAGE void b2DistanceJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Body * b2JointDef::bodyA [b2DistanceJoint.cpp <43:17 43:21>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<39:24> [b2DistanceJoint.cpp <43:38 43:44>]
REFERENCE_CALL void b2DistanceJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2DistanceJoint.cpp <44:15 44:15>]
REFERENCE_USAGE void b2DistanceJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2DistanceJointDef::localAnchorB [b2DistanceJoint.cpp <44:2 44:13>]
REFERENCE_CALL void b2DistanceJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Body::GetLocalPoint(const b2Vec2 &) const [b2DistanceJoint.cpp <44:24 44:36>]
REFERENCE_USAGE void b2DistanceJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Body * b2JointDef::bodyB [b2DistanceJoint.cpp <44:17 44:21>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<39:47> [b2DistanceJoint.cpp <44:38 44:44>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<45:9> [b2DistanceJoint.cpp <45:9 45:9>]
REFERENCE_TYPE_USAGE void b2DistanceJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2DistanceJoint.cpp <45:2 45:7>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2DistanceJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <45:21 45:21>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<39:47> [b2DistanceJoint.cpp <45:13 45:19>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<39:24> [b2DistanceJoint.cpp <45:23 45:29>]
REFERENCE_USAGE void b2DistanceJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> float32 b2DistanceJointDef::length [b2DistanceJoint.cpp <46:2 46:7>]
SYMBOL_FUNCTION float32 b2Vec2::Length() const
REFERENCE_CALL void b2DistanceJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::Length() const [b2DistanceJoint.cpp <46:13 46:18>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<45:9> [b2DistanceJoint.cpp <46:11 46:11>]
SYMBOL_METHOD protected void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) [b2DistanceJoint.cpp <49:1 <49:18 49:32> 60:1>]
SYMBOL_CLASS b2DistanceJoint
QUALIFIER: b2DistanceJoint [b2DistanceJoint.cpp <49:1 49:15>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<49:60> [b2DistanceJoint.cpp <49:60 49:62>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> b2DistanceJointDef [b2DistanceJoint.cpp <49:40 49:57>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> b2Joint [b2DistanceJoint.cpp <50:3 50:9>]
SYMBOL_FUNCTION void b2Joint::b2Joint(const b2JointDef *)
REFERENCE_CALL void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> void b2Joint::b2Joint(const b2JointDef *) [b2DistanceJoint.cpp <50:3 50:9>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<49:60> [b2DistanceJoint.cpp <50:11 50:13>]
REFERENCE_USAGE void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> b2Vec2 b2DistanceJoint::m_localAnchorA [b2DistanceJoint.cpp <49:18 49:32>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> void b2Vec2::b2Vec2() [b2DistanceJoint.cpp <49:18 49:32>]
REFERENCE_USAGE void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> b2Vec2 b2DistanceJoint::m_localAnchorB [b2DistanceJoint.cpp <49:18 49:32>]
REFERENCE_USAGE void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> b2Vec2 b2DistanceJoint::m_u [b2DistanceJoint.cpp <49:18 49:32>]
REFERENCE_USAGE void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> b2Vec2 b2DistanceJoint::m_rA [b2DistanceJoint.cpp <49:18 49:32>]
REFERENCE_USAGE void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> b2Vec2 b2DistanceJoint::m_rB [b2DistanceJoint.cpp <49:18 49:32>]
REFERENCE_USAGE void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> b2Vec2 b2DistanceJoint::m_localCenterA [b2DistanceJoint.cpp <49:18 49:32>]
REFERENCE_USAGE void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> b2Vec2 b2DistanceJoint::m_localCenterB [b2DistanceJoint.cpp <49:18 49:32>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2DistanceJoint.cpp <52:17 52:17>]
REFERENCE_USAGE void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> b2Vec2 b2DistanceJoint::m_localAnchorA [b2DistanceJoint.cpp <52:2 52:15>]
REFERENCE_USAGE void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> b2Vec2 b2DistanceJointDef::localAnchorA [b2DistanceJoint.cpp <52:24 52:35>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<49:60> [b2DistanceJoint.cpp <52:19 52:21>]
REFERENCE_CALL void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2DistanceJoint.cpp <53:17 53:17>]
REFERENCE_USAGE void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> b2Vec2 b2DistanceJoint::m_localAnchorB [b2DistanceJoint.cpp <53:2 53:15>]
REFERENCE_USAGE void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> b2Vec2 b2DistanceJointDef::localAnchorB [b2DistanceJoint.cpp <53:24 53:35>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<49:60> [b2DistanceJoint.cpp <53:19 53:21>]
REFERENCE_USAGE void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> float32 b2DistanceJoint::m_length [b2DistanceJoint.cpp <54:2 54:9>]
REFERENCE_USAGE void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> float32 b2DistanceJointDef::length [b2DistanceJoint.cpp <54:18 54:23>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<49:60> [b2DistanceJoint.cpp <54:13 54:15>]
REFERENCE_USAGE void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> float32 b2DistanceJoint::m_frequencyHz [b2DistanceJoint.cpp <55:2 55:14>]
REFERENCE_USAGE void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> float32 b2DistanceJointDef::frequencyHz [b2DistanceJoint.cpp <55:23 55:33>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<49:60> [b2DistanceJoint.cpp <55:18 55:20>]
REFERENCE_USAGE void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> float32 b2DistanceJoint::m_dampingRatio [b2DistanceJoint.cpp <56:2 56:15>]
REFERENCE_USAGE void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> float32 b2DistanceJointDef::dampingRatio [b2DistanceJoint.cpp <56:24 56:35>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<49:60> [b2DistanceJoint.cpp <56:19 56:21>]
REFERENCE_USAGE void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> float32 b2DistanceJoint::m_impulse [b2DistanceJoint.cpp <57:2 57:10>]
REFERENCE_USAGE void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> float32 b2DistanceJoint::m_gamma [b2DistanceJoint.cpp <58:2 58:8>]
REFERENCE_USAGE void b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef *) -> float32 b2DistanceJoint::m_bias [b2DistanceJoint.cpp <59:2 59:7>]
SYMBOL_METHOD protected void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) [b2DistanceJoint.cpp <62:1 <62:23 62:45> 155:1>]
SYMBOL_FUNCTION void b2Joint::InitVelocityConstraints(const b2SolverData &)
REFERENCE_OVERRIDE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Joint::InitVelocityConstraints(const b2SolverData &) [b2DistanceJoint.cpp <62:23 62:45>]
QUALIFIER: b2DistanceJoint [b2DistanceJoint.cpp <62:6 62:20>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> void [b2DistanceJoint.cpp <62:1 62:4>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<62:67> [b2DistanceJoint.cpp <62:67 62:70>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2SolverData [b2DistanceJoint.cpp <62:53 62:64>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexA [b2DistanceJoint.cpp <64:2 64:9>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2Body::m_islandIndex [b2DistanceJoint.cpp <64:22 64:34>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2DistanceJoint.cpp <64:13 64:19>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexB [b2DistanceJoint.cpp <65:2 65:9>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2Body::m_islandIndex [b2DistanceJoint.cpp <65:22 65:34>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2DistanceJoint.cpp <65:13 65:19>]
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2DistanceJoint.cpp <66:17 66:17>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_localCenterA [b2DistanceJoint.cpp <66:2 66:15>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Sweep::localCenter [b2DistanceJoint.cpp <66:36 66:46>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Sweep b2Body::m_sweep [b2DistanceJoint.cpp <66:28 66:34>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2DistanceJoint.cpp <66:19 66:25>]
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2DistanceJoint.cpp <67:17 67:17>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_localCenterB [b2DistanceJoint.cpp <67:2 67:15>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Sweep::localCenter [b2DistanceJoint.cpp <67:36 67:46>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Sweep b2Body::m_sweep [b2DistanceJoint.cpp <67:28 67:34>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2DistanceJoint.cpp <67:19 67:25>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_invMassA [b2DistanceJoint.cpp <68:2 68:11>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invMass [b2DistanceJoint.cpp <68:24 68:32>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2DistanceJoint.cpp <68:15 68:21>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_invMassB [b2DistanceJoint.cpp <69:2 69:11>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invMass [b2DistanceJoint.cpp <69:24 69:32>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2DistanceJoint.cpp <69:15 69:21>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_invIA [b2DistanceJoint.cpp <70:2 70:8>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invI [b2DistanceJoint.cpp <70:21 70:26>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2DistanceJoint.cpp <70:12 70:18>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_invIB [b2DistanceJoint.cpp <71:2 71:8>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invI [b2DistanceJoint.cpp <71:21 71:26>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2DistanceJoint.cpp <71:12 71:18>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<73:9> [b2DistanceJoint.cpp <73:9 73:10>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2DistanceJoint.cpp <73:2 73:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2DistanceJoint.cpp <73:39 73:39>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2DistanceJoint.cpp <73:39 73:39>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2DistanceJoint.cpp <73:19 73:27>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<62:67> [b2DistanceJoint.cpp <73:14 73:17>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexA [b2DistanceJoint.cpp <73:29 73:36>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<74:10> [b2DistanceJoint.cpp <74:10 74:11>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2DistanceJoint.cpp <74:2 74:8>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Position::a [b2DistanceJoint.cpp <74:40 74:40>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2DistanceJoint.cpp <74:20 74:28>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<62:67> [b2DistanceJoint.cpp <74:15 74:18>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexA [b2DistanceJoint.cpp <74:30 74:37>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<75:9> [b2DistanceJoint.cpp <75:9 75:10>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2DistanceJoint.cpp <75:2 75:7>]
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2DistanceJoint.cpp <75:40 75:40>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2DistanceJoint.cpp <75:40 75:40>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2DistanceJoint.cpp <75:19 75:28>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<62:67> [b2DistanceJoint.cpp <75:14 75:17>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexA [b2DistanceJoint.cpp <75:30 75:37>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<76:10> [b2DistanceJoint.cpp <76:10 76:11>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2DistanceJoint.cpp <76:2 76:8>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2DistanceJoint.cpp <76:41 76:41>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2DistanceJoint.cpp <76:20 76:29>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<62:67> [b2DistanceJoint.cpp <76:15 76:18>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexA [b2DistanceJoint.cpp <76:31 76:38>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<78:9> [b2DistanceJoint.cpp <78:9 78:10>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2DistanceJoint.cpp <78:2 78:7>]
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2DistanceJoint.cpp <78:39 78:39>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2DistanceJoint.cpp <78:39 78:39>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2DistanceJoint.cpp <78:19 78:27>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<62:67> [b2DistanceJoint.cpp <78:14 78:17>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexB [b2DistanceJoint.cpp <78:29 78:36>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<79:10> [b2DistanceJoint.cpp <79:10 79:11>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2DistanceJoint.cpp <79:2 79:8>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Position::a [b2DistanceJoint.cpp <79:40 79:40>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2DistanceJoint.cpp <79:20 79:28>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<62:67> [b2DistanceJoint.cpp <79:15 79:18>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexB [b2DistanceJoint.cpp <79:30 79:37>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<80:9> [b2DistanceJoint.cpp <80:9 80:10>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2DistanceJoint.cpp <80:2 80:7>]
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2DistanceJoint.cpp <80:40 80:40>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2DistanceJoint.cpp <80:40 80:40>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2DistanceJoint.cpp <80:19 80:28>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<62:67> [b2DistanceJoint.cpp <80:14 80:17>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexB [b2DistanceJoint.cpp <80:30 80:37>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<81:10> [b2DistanceJoint.cpp <81:10 81:11>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2DistanceJoint.cpp <81:2 81:8>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2DistanceJoint.cpp <81:41 81:41>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2DistanceJoint.cpp <81:20 81:29>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<62:67> [b2DistanceJoint.cpp <81:15 81:18>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexB [b2DistanceJoint.cpp <81:31 81:38>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<83:8> [b2DistanceJoint.cpp <83:8 83:9>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Rot [b2DistanceJoint.cpp <83:2 83:6>]
SYMBOL_FUNCTION void b2Rot::b2Rot(float32)
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2DistanceJoint.cpp <83:8 83:9>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<74:10> [b2DistanceJoint.cpp <83:11 83:12>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<83:16> [b2DistanceJoint.cpp <83:16 83:17>]
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2DistanceJoint.cpp <83:16 83:17>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<79:10> [b2DistanceJoint.cpp <83:19 83:20>]
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2DistanceJoint.cpp <85:7 85:7>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_rA [b2DistanceJoint.cpp <85:2 85:5>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2DistanceJoint.cpp <85:9 85:13>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<83:8> [b2DistanceJoint.cpp <85:15 85:16>]
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <85:34 85:34>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_localAnchorA [b2DistanceJoint.cpp <85:19 85:32>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_localCenterA [b2DistanceJoint.cpp <85:36 85:49>]
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2DistanceJoint.cpp <86:7 86:7>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_rB [b2DistanceJoint.cpp <86:2 86:5>]
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2DistanceJoint.cpp <86:9 86:13>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<83:16> [b2DistanceJoint.cpp <86:15 86:16>]
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <86:34 86:34>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_localAnchorB [b2DistanceJoint.cpp <86:19 86:32>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_localCenterB [b2DistanceJoint.cpp <86:36 86:49>]
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2DistanceJoint.cpp <87:6 87:6>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_u [b2DistanceJoint.cpp <87:2 87:4>]
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <87:23 87:23>]
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <87:18 87:18>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <87:11 87:11>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<78:9> [b2DistanceJoint.cpp <87:8 87:9>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_rB [b2DistanceJoint.cpp <87:13 87:16>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<73:9> [b2DistanceJoint.cpp <87:20 87:21>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_rA [b2DistanceJoint.cpp <87:25 87:28>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<90:10> [b2DistanceJoint.cpp <90:10 90:15>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2DistanceJoint.cpp <90:2 90:8>]
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::Length() const [b2DistanceJoint.cpp <90:23 90:28>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_u [b2DistanceJoint.cpp <90:19 90:21>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<90:10> [b2DistanceJoint.cpp <91:6 91:11>]
SYMBOL_FUNCTION void b2Vec2::operator*=(float32)
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator*=(float32) [b2DistanceJoint.cpp <93:7 93:8>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_u [b2DistanceJoint.cpp <93:3 93:5>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<90:10> [b2DistanceJoint.cpp <93:17 93:22>]
SYMBOL_FUNCTION void b2Vec2::Set(float32, float32)
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::Set(float32, float32) [b2DistanceJoint.cpp <97:7 97:9>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_u [b2DistanceJoint.cpp <97:3 97:5>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<100:10> [b2DistanceJoint.cpp <100:10 100:13>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2DistanceJoint.cpp <100:2 100:8>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <100:17 100:23>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_rA [b2DistanceJoint.cpp <100:25 100:28>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_u [b2DistanceJoint.cpp <100:31 100:33>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<101:10> [b2DistanceJoint.cpp <101:10 101:13>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2DistanceJoint.cpp <101:2 101:8>]
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <101:17 101:23>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_rB [b2DistanceJoint.cpp <101:25 101:28>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_u [b2DistanceJoint.cpp <101:31 101:33>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<102:10> [b2DistanceJoint.cpp <102:10 102:16>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2DistanceJoint.cpp <102:2 102:8>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_invMassA [b2DistanceJoint.cpp <102:20 102:29>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_invIA [b2DistanceJoint.cpp <102:33 102:39>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<100:10> [b2DistanceJoint.cpp <102:43 102:46>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<100:10> [b2DistanceJoint.cpp <102:50 102:53>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_invMassB [b2DistanceJoint.cpp <102:57 102:66>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_invIB [b2DistanceJoint.cpp <102:70 102:76>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<101:10> [b2DistanceJoint.cpp <102:80 102:83>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<101:10> [b2DistanceJoint.cpp <102:87 102:90>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_mass [b2DistanceJoint.cpp <105:2 105:7>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<102:10> [b2DistanceJoint.cpp <105:11 105:17>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<102:10> [b2DistanceJoint.cpp <105:36 105:42>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_frequencyHz [b2DistanceJoint.cpp <107:6 107:18>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<109:11> [b2DistanceJoint.cpp <109:11 109:11>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2DistanceJoint.cpp <109:3 109:9>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<90:10> [b2DistanceJoint.cpp <109:15 109:20>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_length [b2DistanceJoint.cpp <109:24 109:31>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<112:11> [b2DistanceJoint.cpp <112:11 112:15>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2DistanceJoint.cpp <112:3 112:9>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_frequencyHz [b2DistanceJoint.cpp <112:34 112:46>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<115:11> [b2DistanceJoint.cpp <115:11 115:11>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2DistanceJoint.cpp <115:3 115:9>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_mass [b2DistanceJoint.cpp <115:22 115:27>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_dampingRatio [b2DistanceJoint.cpp <115:31 115:44>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<112:11> [b2DistanceJoint.cpp <115:48 115:52>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<118:11> [b2DistanceJoint.cpp <118:11 118:11>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2DistanceJoint.cpp <118:3 118:9>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_mass [b2DistanceJoint.cpp <118:15 118:20>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<112:11> [b2DistanceJoint.cpp <118:24 118:28>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<112:11> [b2DistanceJoint.cpp <118:32 118:36>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<121:11> [b2DistanceJoint.cpp <121:11 121:11>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2DistanceJoint.cpp <121:3 121:9>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2TimeStep::dt [b2DistanceJoint.cpp <121:25 121:26>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2TimeStep b2SolverData::step [b2DistanceJoint.cpp <121:20 121:23>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<62:67> [b2DistanceJoint.cpp <121:15 121:18>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_gamma [b2DistanceJoint.cpp <122:3 122:9>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<121:11> [b2DistanceJoint.cpp <122:13 122:13>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<115:11> [b2DistanceJoint.cpp <122:18 122:18>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<121:11> [b2DistanceJoint.cpp <122:22 122:22>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<118:11> [b2DistanceJoint.cpp <122:26 122:26>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_gamma [b2DistanceJoint.cpp <123:3 123:9>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_gamma [b2DistanceJoint.cpp <123:13 123:19>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_gamma [b2DistanceJoint.cpp <123:38 123:44>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_bias [b2DistanceJoint.cpp <124:3 124:8>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<109:11> [b2DistanceJoint.cpp <124:12 124:12>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<121:11> [b2DistanceJoint.cpp <124:16 124:16>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<118:11> [b2DistanceJoint.cpp <124:20 124:20>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_gamma [b2DistanceJoint.cpp <124:24 124:30>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<102:10> [b2DistanceJoint.cpp <126:3 126:9>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_gamma [b2DistanceJoint.cpp <126:14 126:20>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_mass [b2DistanceJoint.cpp <127:3 127:8>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<102:10> [b2DistanceJoint.cpp <127:12 127:18>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<102:10> [b2DistanceJoint.cpp <127:37 127:43>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_gamma [b2DistanceJoint.cpp <131:3 131:9>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_bias [b2DistanceJoint.cpp <132:3 132:8>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> bool b2TimeStep::warmStarting [b2DistanceJoint.cpp <135:16 135:27>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2TimeStep b2SolverData::step [b2DistanceJoint.cpp <135:11 135:14>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<62:67> [b2DistanceJoint.cpp <135:6 135:9>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_impulse [b2DistanceJoint.cpp <138:3 138:11>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2TimeStep::dtRatio [b2DistanceJoint.cpp <138:26 138:32>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2TimeStep b2SolverData::step [b2DistanceJoint.cpp <138:21 138:24>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<62:67> [b2DistanceJoint.cpp <138:16 138:19>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<140:10> [b2DistanceJoint.cpp <140:10 140:10>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2DistanceJoint.cpp <140:3 140:8>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2DistanceJoint.cpp <140:24 140:24>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_impulse [b2DistanceJoint.cpp <140:14 140:22>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_u [b2DistanceJoint.cpp <140:26 140:28>]
SYMBOL_FUNCTION void b2Vec2::operator-=(const b2Vec2 &)
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2DistanceJoint.cpp <141:6 141:7>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<75:9> [b2DistanceJoint.cpp <141:3 141:4>]
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2DistanceJoint.cpp <141:20 141:20>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_invMassA [b2DistanceJoint.cpp <141:9 141:18>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<140:10> [b2DistanceJoint.cpp <141:22 141:22>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<76:10> [b2DistanceJoint.cpp <142:3 142:4>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_invIA [b2DistanceJoint.cpp <142:9 142:15>]
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <142:19 142:25>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_rA [b2DistanceJoint.cpp <142:27 142:30>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<140:10> [b2DistanceJoint.cpp <142:33 142:33>]
SYMBOL_FUNCTION void b2Vec2::operator+=(const b2Vec2 &)
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2DistanceJoint.cpp <143:6 143:7>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<80:9> [b2DistanceJoint.cpp <143:3 143:4>]
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2DistanceJoint.cpp <143:20 143:20>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_invMassB [b2DistanceJoint.cpp <143:9 143:18>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<140:10> [b2DistanceJoint.cpp <143:22 143:22>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<81:10> [b2DistanceJoint.cpp <144:3 144:4>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_invIB [b2DistanceJoint.cpp <144:9 144:15>]
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <144:19 144:25>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_rB [b2DistanceJoint.cpp <144:27 144:30>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<140:10> [b2DistanceJoint.cpp <144:33 144:33>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_impulse [b2DistanceJoint.cpp <148:3 148:11>]
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2DistanceJoint.cpp <151:30 151:30>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2DistanceJoint.cpp <151:28 151:28>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2DistanceJoint.cpp <151:7 151:16>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<62:67> [b2DistanceJoint.cpp <151:2 151:5>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexA [b2DistanceJoint.cpp <151:18 151:25>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<75:9> [b2DistanceJoint.cpp <151:32 151:33>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2DistanceJoint.cpp <152:28 152:28>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2DistanceJoint.cpp <152:7 152:16>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<62:67> [b2DistanceJoint.cpp <152:2 152:5>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexA [b2DistanceJoint.cpp <152:18 152:25>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<76:10> [b2DistanceJoint.cpp <152:32 152:33>]
REFERENCE_CALL void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2DistanceJoint.cpp <153:30 153:30>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2DistanceJoint.cpp <153:28 153:28>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2DistanceJoint.cpp <153:7 153:16>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<62:67> [b2DistanceJoint.cpp <153:2 153:5>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexB [b2DistanceJoint.cpp <153:18 153:25>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<80:9> [b2DistanceJoint.cpp <153:32 153:33>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2DistanceJoint.cpp <154:28 154:28>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2DistanceJoint.cpp <154:7 154:16>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<62:67> [b2DistanceJoint.cpp <154:2 154:5>]
REFERENCE_USAGE void b2DistanceJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexB [b2DistanceJoint.cpp <154:18 154:25>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<81:10> [b2DistanceJoint.cpp <154:32 154:33>]
SYMBOL_METHOD protected void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) [b2DistanceJoint.cpp <157:1 <157:23 157:46> 182:1>]
SYMBOL_FUNCTION void b2Joint::SolveVelocityConstraints(const b2SolverData &)
REFERENCE_OVERRIDE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Joint::SolveVelocityConstraints(const b2SolverData &) [b2DistanceJoint.cpp <157:23 157:46>]
QUALIFIER: b2DistanceJoint [b2DistanceJoint.cpp <157:6 157:20>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> void [b2DistanceJoint.cpp <157:1 157:4>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<157:68> [b2DistanceJoint.cpp <157:68 157:71>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2SolverData [b2DistanceJoint.cpp <157:54 157:65>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<159:9> [b2DistanceJoint.cpp <159:9 159:10>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2DistanceJoint.cpp <159:2 159:7>]
REFERENCE_CALL void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2DistanceJoint.cpp <159:40 159:40>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2DistanceJoint.cpp <159:40 159:40>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2DistanceJoint.cpp <159:19 159:28>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<157:68> [b2DistanceJoint.cpp <159:14 159:17>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexA [b2DistanceJoint.cpp <159:30 159:37>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<160:10> [b2DistanceJoint.cpp <160:10 160:11>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2DistanceJoint.cpp <160:2 160:8>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2DistanceJoint.cpp <160:41 160:41>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2DistanceJoint.cpp <160:20 160:29>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<157:68> [b2DistanceJoint.cpp <160:15 160:18>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexA [b2DistanceJoint.cpp <160:31 160:38>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<161:9> [b2DistanceJoint.cpp <161:9 161:10>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2DistanceJoint.cpp <161:2 161:7>]
REFERENCE_CALL void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2DistanceJoint.cpp <161:40 161:40>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2DistanceJoint.cpp <161:40 161:40>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2DistanceJoint.cpp <161:19 161:28>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<157:68> [b2DistanceJoint.cpp <161:14 161:17>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexB [b2DistanceJoint.cpp <161:30 161:37>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<162:10> [b2DistanceJoint.cpp <162:10 162:11>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2DistanceJoint.cpp <162:2 162:8>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2DistanceJoint.cpp <162:41 162:41>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2DistanceJoint.cpp <162:20 162:29>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<157:68> [b2DistanceJoint.cpp <162:15 162:18>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexB [b2DistanceJoint.cpp <162:31 162:38>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<165:9> [b2DistanceJoint.cpp <165:9 165:11>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2DistanceJoint.cpp <165:2 165:7>]
REFERENCE_CALL void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <165:18 165:18>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<159:9> [b2DistanceJoint.cpp <165:15 165:16>]
SYMBOL_FUNCTION b2Vec2 b2Cross(float32, const b2Vec2 &)
REFERENCE_CALL void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Cross(float32, const b2Vec2 &) [b2DistanceJoint.cpp <165:20 165:26>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<160:10> [b2DistanceJoint.cpp <165:28 165:29>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_rA [b2DistanceJoint.cpp <165:32 165:35>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<166:9> [b2DistanceJoint.cpp <166:9 166:11>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2DistanceJoint.cpp <166:2 166:7>]
REFERENCE_CALL void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <166:18 166:18>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<161:9> [b2DistanceJoint.cpp <166:15 166:16>]
REFERENCE_CALL void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Cross(float32, const b2Vec2 &) [b2DistanceJoint.cpp <166:20 166:26>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<162:10> [b2DistanceJoint.cpp <166:28 166:29>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_rB [b2DistanceJoint.cpp <166:32 166:35>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<167:10> [b2DistanceJoint.cpp <167:10 167:13>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2DistanceJoint.cpp <167:2 167:8>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <167:17 167:21>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_u [b2DistanceJoint.cpp <167:23 167:25>]
REFERENCE_CALL void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <167:32 167:32>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<166:9> [b2DistanceJoint.cpp <167:28 167:30>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<165:9> [b2DistanceJoint.cpp <167:34 167:36>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<169:10> [b2DistanceJoint.cpp <169:10 169:16>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2DistanceJoint.cpp <169:2 169:8>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_mass [b2DistanceJoint.cpp <169:21 169:26>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<167:10> [b2DistanceJoint.cpp <169:31 169:34>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_bias [b2DistanceJoint.cpp <169:38 169:43>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_gamma [b2DistanceJoint.cpp <169:47 169:53>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_impulse [b2DistanceJoint.cpp <169:57 169:65>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_impulse [b2DistanceJoint.cpp <170:2 170:10>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<169:10> [b2DistanceJoint.cpp <170:15 170:21>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<172:9> [b2DistanceJoint.cpp <172:9 172:9>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2DistanceJoint.cpp <172:2 172:7>]
REFERENCE_CALL void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2DistanceJoint.cpp <172:21 172:21>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<169:10> [b2DistanceJoint.cpp <172:13 172:19>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_u [b2DistanceJoint.cpp <172:23 172:25>]
REFERENCE_CALL void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2DistanceJoint.cpp <173:5 173:6>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<159:9> [b2DistanceJoint.cpp <173:2 173:3>]
REFERENCE_CALL void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2DistanceJoint.cpp <173:19 173:19>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_invMassA [b2DistanceJoint.cpp <173:8 173:17>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<172:9> [b2DistanceJoint.cpp <173:21 173:21>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<160:10> [b2DistanceJoint.cpp <174:2 174:3>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_invIA [b2DistanceJoint.cpp <174:8 174:14>]
REFERENCE_CALL void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <174:18 174:24>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_rA [b2DistanceJoint.cpp <174:26 174:29>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<172:9> [b2DistanceJoint.cpp <174:32 174:32>]
REFERENCE_CALL void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2DistanceJoint.cpp <175:5 175:6>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<161:9> [b2DistanceJoint.cpp <175:2 175:3>]
REFERENCE_CALL void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2DistanceJoint.cpp <175:19 175:19>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_invMassB [b2DistanceJoint.cpp <175:8 175:17>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<172:9> [b2DistanceJoint.cpp <175:21 175:21>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<162:10> [b2DistanceJoint.cpp <176:2 176:3>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_invIB [b2DistanceJoint.cpp <176:8 176:14>]
REFERENCE_CALL void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <176:18 176:24>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_rB [b2DistanceJoint.cpp <176:26 176:29>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<172:9> [b2DistanceJoint.cpp <176:32 176:32>]
REFERENCE_CALL void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2DistanceJoint.cpp <178:30 178:30>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2DistanceJoint.cpp <178:28 178:28>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2DistanceJoint.cpp <178:7 178:16>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<157:68> [b2DistanceJoint.cpp <178:2 178:5>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexA [b2DistanceJoint.cpp <178:18 178:25>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<159:9> [b2DistanceJoint.cpp <178:32 178:33>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2DistanceJoint.cpp <179:28 179:28>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2DistanceJoint.cpp <179:7 179:16>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<157:68> [b2DistanceJoint.cpp <179:2 179:5>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexA [b2DistanceJoint.cpp <179:18 179:25>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<160:10> [b2DistanceJoint.cpp <179:32 179:33>]
REFERENCE_CALL void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2DistanceJoint.cpp <180:30 180:30>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2DistanceJoint.cpp <180:28 180:28>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2DistanceJoint.cpp <180:7 180:16>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<157:68> [b2DistanceJoint.cpp <180:2 180:5>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexB [b2DistanceJoint.cpp <180:18 180:25>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<161:9> [b2DistanceJoint.cpp <180:32 180:33>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2DistanceJoint.cpp <181:28 181:28>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2DistanceJoint.cpp <181:7 181:16>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<157:68> [b2DistanceJoint.cpp <181:2 181:5>]
REFERENCE_USAGE void b2DistanceJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexB [b2DistanceJoint.cpp <181:18 181:25>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<162:10> [b2DistanceJoint.cpp <181:32 181:33>]
SYMBOL_METHOD protected bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) [b2DistanceJoint.cpp <184:1 <184:23 184:46> 221:1>]
SYMBOL_FUNCTION bool b2Joint::SolvePositionConstraints(const b2SolverData &)
REFERENCE_OVERRIDE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> bool b2Joint::SolvePositionConstraints(const b2SolverData &) [b2DistanceJoint.cpp <184:23 184:46>]
QUALIFIER: b2DistanceJoint [b2DistanceJoint.cpp <184:6 184:20>]
SYMBOL_BUILTIN_TYPE bool
REFERENCE_TYPE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> bool [b2DistanceJoint.cpp <184:1 184:4>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<184:68> [b2DistanceJoint.cpp <184:68 184:71>]
REFERENCE_TYPE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2SolverData [b2DistanceJoint.cpp <184:54 184:65>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_frequencyHz [b2DistanceJoint.cpp <186:6 186:18>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<192:9> [b2DistanceJoint.cpp <192:9 192:10>]
REFERENCE_TYPE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2DistanceJoint.cpp <192:2 192:7>]
REFERENCE_CALL bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2DistanceJoint.cpp <192:39 192:39>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2DistanceJoint.cpp <192:39 192:39>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2DistanceJoint.cpp <192:19 192:27>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<184:68> [b2DistanceJoint.cpp <192:14 192:17>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexA [b2DistanceJoint.cpp <192:29 192:36>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<193:10> [b2DistanceJoint.cpp <193:10 193:11>]
REFERENCE_TYPE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2DistanceJoint.cpp <193:2 193:8>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2DistanceJoint.cpp <193:40 193:40>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2DistanceJoint.cpp <193:20 193:28>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<184:68> [b2DistanceJoint.cpp <193:15 193:18>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexA [b2DistanceJoint.cpp <193:30 193:37>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<194:9> [b2DistanceJoint.cpp <194:9 194:10>]
REFERENCE_TYPE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2DistanceJoint.cpp <194:2 194:7>]
REFERENCE_CALL bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2DistanceJoint.cpp <194:39 194:39>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2DistanceJoint.cpp <194:39 194:39>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2DistanceJoint.cpp <194:19 194:27>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<184:68> [b2DistanceJoint.cpp <194:14 194:17>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexB [b2DistanceJoint.cpp <194:29 194:36>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<195:10> [b2DistanceJoint.cpp <195:10 195:11>]
REFERENCE_TYPE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2DistanceJoint.cpp <195:2 195:8>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2DistanceJoint.cpp <195:40 195:40>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2DistanceJoint.cpp <195:20 195:28>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<184:68> [b2DistanceJoint.cpp <195:15 195:18>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexB [b2DistanceJoint.cpp <195:30 195:37>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<197:8> [b2DistanceJoint.cpp <197:8 197:9>]
REFERENCE_TYPE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Rot [b2DistanceJoint.cpp <197:2 197:6>]
REFERENCE_CALL bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2DistanceJoint.cpp <197:8 197:9>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<193:10> [b2DistanceJoint.cpp <197:11 197:12>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<197:16> [b2DistanceJoint.cpp <197:16 197:17>]
REFERENCE_CALL bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2DistanceJoint.cpp <197:16 197:17>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<195:10> [b2DistanceJoint.cpp <197:19 197:20>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<199:9> [b2DistanceJoint.cpp <199:9 199:10>]
REFERENCE_TYPE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2DistanceJoint.cpp <199:2 199:7>]
REFERENCE_CALL bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2DistanceJoint.cpp <199:14 199:18>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<197:8> [b2DistanceJoint.cpp <199:20 199:21>]
REFERENCE_CALL bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <199:39 199:39>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_localAnchorA [b2DistanceJoint.cpp <199:24 199:37>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_localCenterA [b2DistanceJoint.cpp <199:41 199:54>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<200:9> [b2DistanceJoint.cpp <200:9 200:10>]
REFERENCE_TYPE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2DistanceJoint.cpp <200:2 200:7>]
REFERENCE_CALL bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2DistanceJoint.cpp <200:14 200:18>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<197:16> [b2DistanceJoint.cpp <200:20 200:21>]
REFERENCE_CALL bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <200:39 200:39>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_localAnchorB [b2DistanceJoint.cpp <200:24 200:37>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2DistanceJoint::m_localCenterB [b2DistanceJoint.cpp <200:41 200:54>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<201:9> [b2DistanceJoint.cpp <201:9 201:9>]
REFERENCE_TYPE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2DistanceJoint.cpp <201:2 201:7>]
REFERENCE_CALL bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <201:26 201:26>]
REFERENCE_CALL bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <201:21 201:21>]
REFERENCE_CALL bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <201:16 201:16>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<194:9> [b2DistanceJoint.cpp <201:13 201:14>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<200:9> [b2DistanceJoint.cpp <201:18 201:19>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<192:9> [b2DistanceJoint.cpp <201:23 201:24>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<199:9> [b2DistanceJoint.cpp <201:28 201:29>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<203:10> [b2DistanceJoint.cpp <203:10 203:15>]
REFERENCE_TYPE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2DistanceJoint.cpp <203:2 203:8>]
SYMBOL_FUNCTION float32 b2Vec2::Normalize()
REFERENCE_CALL bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::Normalize() [b2DistanceJoint.cpp <203:21 203:29>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<201:9> [b2DistanceJoint.cpp <203:19 203:19>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<204:10> [b2DistanceJoint.cpp <204:10 204:10>]
REFERENCE_TYPE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2DistanceJoint.cpp <204:2 204:8>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<203:10> [b2DistanceJoint.cpp <204:14 204:19>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_length [b2DistanceJoint.cpp <204:23 204:30>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<204:10> [b2DistanceJoint.cpp <205:2 205:2>]
SYMBOL_FUNCTION float b2Clamp<float>(float, float, float)
REFERENCE_CALL bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> float b2Clamp<float>(float, float, float) [b2DistanceJoint.cpp <205:6 205:12>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<204:10> [b2DistanceJoint.cpp <205:14 205:14>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<207:10> [b2DistanceJoint.cpp <207:10 207:16>]
REFERENCE_TYPE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2DistanceJoint.cpp <207:2 207:8>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_mass [b2DistanceJoint.cpp <207:21 207:26>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<204:10> [b2DistanceJoint.cpp <207:30 207:30>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<208:9> [b2DistanceJoint.cpp <208:9 208:9>]
REFERENCE_TYPE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2DistanceJoint.cpp <208:2 208:7>]
REFERENCE_CALL bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2DistanceJoint.cpp <208:21 208:21>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<207:10> [b2DistanceJoint.cpp <208:13 208:19>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<201:9> [b2DistanceJoint.cpp <208:23 208:23>]
REFERENCE_CALL bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2DistanceJoint.cpp <210:5 210:6>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<192:9> [b2DistanceJoint.cpp <210:2 210:3>]
REFERENCE_CALL bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2DistanceJoint.cpp <210:19 210:19>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_invMassA [b2DistanceJoint.cpp <210:8 210:17>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<208:9> [b2DistanceJoint.cpp <210:21 210:21>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<193:10> [b2DistanceJoint.cpp <211:2 211:3>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_invIA [b2DistanceJoint.cpp <211:8 211:14>]
REFERENCE_CALL bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <211:18 211:24>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<199:9> [b2DistanceJoint.cpp <211:26 211:27>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<208:9> [b2DistanceJoint.cpp <211:30 211:30>]
REFERENCE_CALL bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2DistanceJoint.cpp <212:5 212:6>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<194:9> [b2DistanceJoint.cpp <212:2 212:3>]
REFERENCE_CALL bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2DistanceJoint.cpp <212:19 212:19>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_invMassB [b2DistanceJoint.cpp <212:8 212:17>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<208:9> [b2DistanceJoint.cpp <212:21 212:21>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<195:10> [b2DistanceJoint.cpp <213:2 213:3>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2DistanceJoint::m_invIB [b2DistanceJoint.cpp <213:8 213:14>]
REFERENCE_CALL bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2DistanceJoint.cpp <213:18 213:24>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<200:9> [b2DistanceJoint.cpp <213:26 213:27>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<208:9> [b2DistanceJoint.cpp <213:30 213:30>]
REFERENCE_CALL bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2DistanceJoint.cpp <215:29 215:29>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2DistanceJoint.cpp <215:27 215:27>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2DistanceJoint.cpp <215:7 215:15>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<184:68> [b2DistanceJoint.cpp <215:2 215:5>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexA [b2DistanceJoint.cpp <215:17 215:24>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<192:9> [b2DistanceJoint.cpp <215:31 215:32>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2DistanceJoint.cpp <216:27 216:27>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2DistanceJoint.cpp <216:7 216:15>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<184:68> [b2DistanceJoint.cpp <216:2 216:5>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexA [b2DistanceJoint.cpp <216:17 216:24>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<193:10> [b2DistanceJoint.cpp <216:31 216:32>]
REFERENCE_CALL bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2DistanceJoint.cpp <217:29 217:29>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2DistanceJoint.cpp <217:27 217:27>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2DistanceJoint.cpp <217:7 217:15>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<184:68> [b2DistanceJoint.cpp <217:2 217:5>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexB [b2DistanceJoint.cpp <217:17 217:24>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<194:9> [b2DistanceJoint.cpp <217:31 217:32>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2DistanceJoint.cpp <218:27 218:27>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2DistanceJoint.cpp <218:7 218:15>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<184:68> [b2DistanceJoint.cpp <218:2 218:5>]
REFERENCE_USAGE bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2DistanceJoint::m_indexB [b2DistanceJoint.cpp <218:17 218:24>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<195:10> [b2DistanceJoint.cpp <218:31 218:32>]
SYMBOL_FUNCTION float b2Abs<float>(float)
REFERENCE_CALL bool b2DistanceJoint::SolvePositionConstraints(const b2SolverData &) -> float b2Abs<float>(float) [b2DistanceJoint.cpp <220:9 220:13>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<204:10> [b2DistanceJoint.cpp <220:15 220:15>]
SYMBOL_METHOD public b2Vec2 b2DistanceJoint::GetAnchorA() const [b2DistanceJoint.cpp <223:1 <223:25 223:34> 226:1>]
SYMBOL_FUNCTION b2Vec2 b2Joint::GetAnchorA() const
REFERENCE_OVERRIDE b2Vec2 b2DistanceJoint::GetAnchorA() const -> b2Vec2 b2Joint::GetAnchorA() const [b2DistanceJoint.cpp <223:25 223:34>]
QUALIFIER: b2DistanceJoint [b2DistanceJoint.cpp <223:8 223:22>]
REFERENCE_TYPE_USAGE b2Vec2 b2DistanceJoint::GetAnchorA() const -> b2Vec2 [b2DistanceJoint.cpp <223:1 223:6>]
SYMBOL_FUNCTION b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const
REFERENCE_CALL b2Vec2 b2DistanceJoint::GetAnchorA() const -> b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const [b2DistanceJoint.cpp <225:18 225:30>]
REFERENCE_USAGE b2Vec2 b2DistanceJoint::GetAnchorA() const -> b2Body * b2Joint::m_bodyA [b2DistanceJoint.cpp <225:9 225:15>]
REFERENCE_USAGE b2Vec2 b2DistanceJoint::GetAnchorA() const -> b2Vec2 b2DistanceJoint::m_localAnchorA [b2DistanceJoint.cpp <225:32 225:45>]
SYMBOL_METHOD public b2Vec2 b2DistanceJoint::GetAnchorB() const [b2DistanceJoint.cpp <228:1 <228:25 228:34> 231:1>]
SYMBOL_FUNCTION b2Vec2 b2Joint::GetAnchorB() const
REFERENCE_OVERRIDE b2Vec2 b2DistanceJoint::GetAnchorB() const -> b2Vec2 b2Joint::GetAnchorB() const [b2DistanceJoint.cpp <228:25 228:34>]
QUALIFIER: b2DistanceJoint [b2DistanceJoint.cpp <228:8 228:22>]
REFERENCE_TYPE_USAGE b2Vec2 b2DistanceJoint::GetAnchorB() const -> b2Vec2 [b2DistanceJoint.cpp <228:1 228:6>]
REFERENCE_CALL b2Vec2 b2DistanceJoint::GetAnchorB() const -> b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const [b2DistanceJoint.cpp <230:18 230:30>]
REFERENCE_USAGE b2Vec2 b2DistanceJoint::GetAnchorB() const -> b2Body * b2Joint::m_bodyB [b2DistanceJoint.cpp <230:9 230:15>]
REFERENCE_USAGE b2Vec2 b2DistanceJoint::GetAnchorB() const -> b2Vec2 b2DistanceJoint::m_localAnchorB [b2DistanceJoint.cpp <230:32 230:45>]
SYMBOL_METHOD public b2Vec2 b2DistanceJoint::GetReactionForce(float32) const [b2DistanceJoint.cpp <233:1 <233:25 233:40> 237:1>]
SYMBOL_FUNCTION b2Vec2 b2Joint::GetReactionForce(float32) const
REFERENCE_OVERRIDE b2Vec2 b2DistanceJoint::GetReactionForce(float32) const -> b2Vec2 b2Joint::GetReactionForce(float32) const [b2DistanceJoint.cpp <233:25 233:40>]
QUALIFIER: b2DistanceJoint [b2DistanceJoint.cpp <233:8 233:22>]
REFERENCE_TYPE_USAGE b2Vec2 b2DistanceJoint::GetReactionForce(float32) const -> b2Vec2 [b2DistanceJoint.cpp <233:1 233:6>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<233:50> [b2DistanceJoint.cpp <233:50 233:55>]
REFERENCE_TYPE_USAGE b2Vec2 b2DistanceJoint::GetReactionForce(float32) const -> float32 [b2DistanceJoint.cpp <233:42 233:48>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<235:9> [b2DistanceJoint.cpp <235:9 235:9>]
REFERENCE_TYPE_USAGE b2Vec2 b2DistanceJoint::GetReactionForce(float32) const -> b2Vec2 [b2DistanceJoint.cpp <235:2 235:7>]
REFERENCE_CALL b2Vec2 b2DistanceJoint::GetReactionForce(float32) const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2DistanceJoint.cpp <235:34 235:34>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<233:50> [b2DistanceJoint.cpp <235:14 235:19>]
REFERENCE_USAGE b2Vec2 b2DistanceJoint::GetReactionForce(float32) const -> float32 b2DistanceJoint::m_impulse [b2DistanceJoint.cpp <235:23 235:31>]
REFERENCE_USAGE b2Vec2 b2DistanceJoint::GetReactionForce(float32) const -> b2Vec2 b2DistanceJoint::m_u [b2DistanceJoint.cpp <235:36 235:38>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(b2Vec2 &&)
REFERENCE_CALL b2Vec2 b2DistanceJoint::GetReactionForce(float32) const -> void b2Vec2::b2Vec2(b2Vec2 &&) [b2DistanceJoint.cpp <236:9 236:9>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<235:9> [b2DistanceJoint.cpp <236:9 236:9>]
SYMBOL_METHOD public float32 b2DistanceJoint::GetReactionTorque(float32) const [b2DistanceJoint.cpp <239:1 <239:26 239:42> 243:1>]
SYMBOL_FUNCTION float32 b2Joint::GetReactionTorque(float32) const
REFERENCE_OVERRIDE float32 b2DistanceJoint::GetReactionTorque(float32) const -> float32 b2Joint::GetReactionTorque(float32) const [b2DistanceJoint.cpp <239:26 239:42>]
QUALIFIER: b2DistanceJoint [b2DistanceJoint.cpp <239:9 239:23>]
REFERENCE_TYPE_USAGE float32 b2DistanceJoint::GetReactionTorque(float32) const -> float32 [b2DistanceJoint.cpp <239:1 239:7>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<239:52> [b2DistanceJoint.cpp <239:52 239:57>]
REFERENCE_TYPE_USAGE float32 b2DistanceJoint::GetReactionTorque(float32) const -> float32 [b2DistanceJoint.cpp <239:44 239:50>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<239:52> [b2DistanceJoint.cpp <241:14 241:19>]
SYMBOL_METHOD public void b2DistanceJoint::Dump() [b2DistanceJoint.cpp <245:1 <245:23 245:26> 260:1>]
SYMBOL_FUNCTION void b2Joint::Dump()
REFERENCE_OVERRIDE void b2DistanceJoint::Dump() -> void b2Joint::Dump() [b2DistanceJoint.cpp <245:23 245:26>]
QUALIFIER: b2DistanceJoint [b2DistanceJoint.cpp <245:6 245:20>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::Dump() -> void [b2DistanceJoint.cpp <245:1 245:4>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<247:8> [b2DistanceJoint.cpp <247:8 247:13>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::Dump() -> int32 [b2DistanceJoint.cpp <247:2 247:6>]
REFERENCE_USAGE void b2DistanceJoint::Dump() -> int32 b2Body::m_islandIndex [b2DistanceJoint.cpp <247:26 247:38>]
REFERENCE_USAGE void b2DistanceJoint::Dump() -> b2Body * b2Joint::m_bodyA [b2DistanceJoint.cpp <247:17 247:23>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<248:8> [b2DistanceJoint.cpp <248:8 248:13>]
REFERENCE_TYPE_USAGE void b2DistanceJoint::Dump() -> int32 [b2DistanceJoint.cpp <248:2 248:6>]
REFERENCE_USAGE void b2DistanceJoint::Dump() -> int32 b2Body::m_islandIndex [b2DistanceJoint.cpp <248:26 248:38>]
REFERENCE_USAGE void b2DistanceJoint::Dump() -> b2Body * b2Joint::m_bodyB [b2DistanceJoint.cpp <248:17 248:23>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2DistanceJoint::Dump() -> void b2Log(const char *) [b2DistanceJoint.cpp <250:2 250:6>]
REFERENCE_CALL void b2DistanceJoint::Dump() -> void b2Log(const char *) [b2DistanceJoint.cpp <251:2 251:6>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<247:8> [b2DistanceJoint.cpp <251:38 251:43>]
REFERENCE_CALL void b2DistanceJoint::Dump() -> void b2Log(const char *) [b2DistanceJoint.cpp <252:2 252:6>]
LOCAL_SYMBOL: b2DistanceJoint.cpp<248:8> [b2DistanceJoint.cpp <252:38 252:43>]
REFERENCE_CALL void b2DistanceJoint::Dump() -> void b2Log(const char *) [b2DistanceJoint.cpp <253:2 253:6>]
REFERENCE_USAGE void b2DistanceJoint::Dump() -> bool b2Joint::m_collideConnected [b2DistanceJoint.cpp <253:47 253:64>]
REFERENCE_CALL void b2DistanceJoint::Dump() -> void b2Log(const char *) [b2DistanceJoint.cpp <254:2 254:6>]
REFERENCE_USAGE void b2DistanceJoint::Dump() -> float32 b2Vec2::x [b2DistanceJoint.cpp <254:69 254:69>]
REFERENCE_USAGE void b2DistanceJoint::Dump() -> b2Vec2 b2DistanceJoint::m_localAnchorA [b2DistanceJoint.cpp <254:54 254:67>]
REFERENCE_USAGE void b2DistanceJoint::Dump() -> float32 b2Vec2::y [b2DistanceJoint.cpp <254:87 254:87>]
REFERENCE_USAGE void b2DistanceJoint::Dump() -> b2Vec2 b2DistanceJoint::m_localAnchorA [b2DistanceJoint.cpp <254:72 254:85>]
REFERENCE_CALL void b2DistanceJoint::Dump() -> void b2Log(const char *) [b2DistanceJoint.cpp <255:2 255:6>]
REFERENCE_USAGE void b2DistanceJoint::Dump() -> float32 b2Vec2::x [b2DistanceJoint.cpp <255:69 255:69>]
REFERENCE_USAGE void b2DistanceJoint::Dump() -> b2Vec2 b2DistanceJoint::m_localAnchorB [b2DistanceJoint.cpp <255:54 255:67>]
REFERENCE_USAGE void b2DistanceJoint::Dump() -> float32 b2Vec2::y [b2DistanceJoint.cpp <255:87 255:87>]
REFERENCE_USAGE void b2DistanceJoint::Dump() -> b2Vec2 b2DistanceJoint::m_localAnchorB [b2DistanceJoint.cpp <255:72 255:85>]
REFERENCE_CALL void b2DistanceJoint::Dump() -> void b2Log(const char *) [b2DistanceJoint.cpp <256:2 256:6>]
REFERENCE_USAGE void b2DistanceJoint::Dump() -> float32 b2DistanceJoint::m_length [b2DistanceJoint.cpp <256:36 256:43>]
REFERENCE_CALL void b2DistanceJoint::Dump() -> void b2Log(const char *) [b2DistanceJoint.cpp <257:2 257:6>]
REFERENCE_USAGE void b2DistanceJoint::Dump() -> float32 b2DistanceJoint::m_frequencyHz [b2DistanceJoint.cpp <257:41 257:53>]
REFERENCE_CALL void b2DistanceJoint::Dump() -> void b2Log(const char *) [b2DistanceJoint.cpp <258:2 258:6>]
REFERENCE_USAGE void b2DistanceJoint::Dump() -> float32 b2DistanceJoint::m_dampingRatio [b2DistanceJoint.cpp <258:42 258:55>]
REFERENCE_CALL void b2DistanceJoint::Dump() -> void b2Log(const char *) [b2DistanceJoint.cpp <259:2 259:6>]
REFERENCE_USAGE void b2DistanceJoint::Dump() -> int32 b2Joint::m_index [b2DistanceJoint.cpp <259:55 259:61>]
