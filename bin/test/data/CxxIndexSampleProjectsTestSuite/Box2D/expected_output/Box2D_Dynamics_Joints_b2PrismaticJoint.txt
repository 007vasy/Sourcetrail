FILE: b2PrismaticJoint.cpp
COMMENT: comment [b2PrismaticJoint.cpp <1:1 17:3>]
COMMENT: comment [b2PrismaticJoint.cpp <23:1 23:37>]
COMMENT: comment [b2PrismaticJoint.cpp <24:1 24:35>]
COMMENT: comment [b2PrismaticJoint.cpp <25:1 25:20>]
COMMENT: comment [b2PrismaticJoint.cpp <26:1 26:87>]
COMMENT: comment [b2PrismaticJoint.cpp <27:1 27:99>]
COMMENT: comment [b2PrismaticJoint.cpp <28:1 28:59>]
COMMENT: comment [b2PrismaticJoint.cpp <29:1 29:3>]
COMMENT: comment [b2PrismaticJoint.cpp <30:1 30:22>]
COMMENT: comment [b2PrismaticJoint.cpp <31:1 31:27>]
COMMENT: comment [b2PrismaticJoint.cpp <32:1 32:18>]
COMMENT: comment [b2PrismaticJoint.cpp <33:1 33:22>]
COMMENT: comment [b2PrismaticJoint.cpp <34:1 34:3>]
COMMENT: comment [b2PrismaticJoint.cpp <35:1 35:21>]
COMMENT: comment [b2PrismaticJoint.cpp <36:1 36:3>]
COMMENT: comment [b2PrismaticJoint.cpp <37:1 37:21>]
COMMENT: comment [b2PrismaticJoint.cpp <38:1 38:21>]
COMMENT: comment [b2PrismaticJoint.cpp <39:1 39:12>]
COMMENT: comment [b2PrismaticJoint.cpp <40:1 40:45>]
COMMENT: comment [b2PrismaticJoint.cpp <41:1 41:41>]
COMMENT: comment [b2PrismaticJoint.cpp <44:1 44:33>]
COMMENT: comment [b2PrismaticJoint.cpp <45:1 45:19>]
COMMENT: comment [b2PrismaticJoint.cpp <46:1 46:97>]
COMMENT: comment [b2PrismaticJoint.cpp <47:1 47:49>]
COMMENT: comment [b2PrismaticJoint.cpp <49:1 49:16>]
COMMENT: comment [b2PrismaticJoint.cpp <50:1 50:104>]
COMMENT: comment [b2PrismaticJoint.cpp <51:1 51:97>]
COMMENT: comment [b2PrismaticJoint.cpp <52:1 52:3>]
COMMENT: comment [b2PrismaticJoint.cpp <53:1 53:28>]
COMMENT: comment [b2PrismaticJoint.cpp <54:1 54:33>]
COMMENT: comment [b2PrismaticJoint.cpp <55:1 55:34>]
COMMENT: comment [b2PrismaticJoint.cpp <56:1 56:32>]
COMMENT: comment [b2PrismaticJoint.cpp <57:1 57:3>]
COMMENT: comment [b2PrismaticJoint.cpp <58:1 58:12>]
COMMENT: comment [b2PrismaticJoint.cpp <59:1 59:12>]
COMMENT: comment [b2PrismaticJoint.cpp <60:1 60:44>]
COMMENT: comment [b2PrismaticJoint.cpp <61:1 61:44>]
COMMENT: comment [b2PrismaticJoint.cpp <63:1 63:27>]
COMMENT: comment [b2PrismaticJoint.cpp <64:1 64:17>]
COMMENT: comment [b2PrismaticJoint.cpp <65:1 65:3>]
COMMENT: comment [b2PrismaticJoint.cpp <66:1 66:28>]
COMMENT: comment [b2PrismaticJoint.cpp <67:1 67:36>]
COMMENT: comment [b2PrismaticJoint.cpp <68:1 68:34>]
COMMENT: comment [b2PrismaticJoint.cpp <69:1 69:21>]
COMMENT: comment [b2PrismaticJoint.cpp <70:1 70:24>]
COMMENT: comment [b2PrismaticJoint.cpp <71:1 71:3>]
COMMENT: comment [b2PrismaticJoint.cpp <72:1 72:21>]
COMMENT: comment [b2PrismaticJoint.cpp <73:1 73:16>]
COMMENT: comment [b2PrismaticJoint.cpp <74:1 74:25>]
COMMENT: comment [b2PrismaticJoint.cpp <75:1 75:28>]
COMMENT: comment [b2PrismaticJoint.cpp <76:1 76:3>]
COMMENT: comment [b2PrismaticJoint.cpp <77:1 77:36>]
COMMENT: comment [b2PrismaticJoint.cpp <78:1 78:32>]
COMMENT: comment [b2PrismaticJoint.cpp <79:1 79:32>]
COMMENT: comment [b2PrismaticJoint.cpp <80:1 80:3>]
COMMENT: comment [b2PrismaticJoint.cpp <81:1 81:29>]
COMMENT: comment [b2PrismaticJoint.cpp <82:1 82:75>]
COMMENT: comment [b2PrismaticJoint.cpp <83:1 83:99>]
COMMENT: comment [b2PrismaticJoint.cpp <84:1 84:90>]
COMMENT: comment [b2PrismaticJoint.cpp <85:1 85:81>]
COMMENT: comment [b2PrismaticJoint.cpp <86:1 86:3>]
COMMENT: comment [b2PrismaticJoint.cpp <87:1 87:38>]
COMMENT: comment [b2PrismaticJoint.cpp <88:1 88:16>]
COMMENT: comment [b2PrismaticJoint.cpp <149:2 149:34>]
COMMENT: comment [b2PrismaticJoint.cpp <157:2 157:47>]
COMMENT: comment [b2PrismaticJoint.cpp <170:2 170:26>]
COMMENT: comment [b2PrismaticJoint.cpp <183:4 183:38>]
COMMENT: comment [b2PrismaticJoint.cpp <194:2 194:35>]
REFERENCE_MACRO_USAGE b2PrismaticJoint.cpp -> b2_linearSlop [b2PrismaticJoint.cpp <198:63 198:75>]
COMMENT: comment [b2PrismaticJoint.cpp <237:3 237:37>]
COMMENT: comment [b2PrismaticJoint.cpp <273:2 273:35>]
COMMENT: comment [b2PrismaticJoint.cpp <300:3 300:57>]
COMMENT: comment [b2PrismaticJoint.cpp <318:3 318:83>]
COMMENT: comment [b2PrismaticJoint.cpp <338:3 338:75>]
COMMENT: comment [b2PrismaticJoint.cpp <360:1 360:119>]
COMMENT: comment [b2PrismaticJoint.cpp <361:1 361:103>]
COMMENT: comment [b2PrismaticJoint.cpp <362:1 362:3>]
COMMENT: comment [b2PrismaticJoint.cpp <363:1 363:120>]
COMMENT: comment [b2PrismaticJoint.cpp <364:1 364:3>]
COMMENT: comment [b2PrismaticJoint.cpp <365:1 365:122>]
COMMENT: comment [b2PrismaticJoint.cpp <366:1 366:43>]
COMMENT: comment [b2PrismaticJoint.cpp <379:2 379:28>]
REFERENCE_MACRO_USAGE b2PrismaticJoint.cpp -> b2_linearSlop [b2PrismaticJoint.cpp <405:63 405:75>]
COMMENT: comment [b2PrismaticJoint.cpp <407:4 407:40>]
REFERENCE_MACRO_USAGE b2PrismaticJoint.cpp -> b2_maxLinearCorrection [b2PrismaticJoint.cpp <408:31 408:52>]
REFERENCE_MACRO_USAGE b2PrismaticJoint.cpp -> b2_maxLinearCorrection [b2PrismaticJoint.cpp <408:55 408:76>]
COMMENT: comment [b2PrismaticJoint.cpp <414:4 414:60>]
REFERENCE_MACRO_USAGE b2PrismaticJoint.cpp -> b2_linearSlop [b2PrismaticJoint.cpp <415:52 415:64>]
REFERENCE_MACRO_USAGE b2PrismaticJoint.cpp -> b2_maxLinearCorrection [b2PrismaticJoint.cpp <415:68 415:89>]
COMMENT: comment [b2PrismaticJoint.cpp <421:4 421:60>]
REFERENCE_MACRO_USAGE b2PrismaticJoint.cpp -> b2_linearSlop [b2PrismaticJoint.cpp <422:52 422:64>]
REFERENCE_MACRO_USAGE b2PrismaticJoint.cpp -> b2_maxLinearCorrection [b2PrismaticJoint.cpp <422:73 422:94>]
COMMENT: comment [b2PrismaticJoint.cpp <436:4 436:25>]
REFERENCE_MACRO_USAGE b2PrismaticJoint.cpp -> b2_linearSlop [b2PrismaticJoint.cpp <488:24 488:36>]
REFERENCE_MACRO_USAGE b2PrismaticJoint.cpp -> b2_angularSlop [b2PrismaticJoint.cpp <488:57 488:70>]
REFERENCE_MACRO_USAGE b2Settings.h -> b2_pi [b2Settings.h <76:43 76:47>]
REFERENCE_MACRO_USAGE b2PrismaticJoint.cpp -> b2Assert [b2PrismaticJoint.cpp <571:2 571:9>]
REFERENCE_MACRO_USAGE b2Settings.h -> assert [b2Settings.h <31:21 31:26>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:23 34:31>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:47 34:55>]
REFERENCE_MACRO_USAGE assert.h -> __FILE__ [assert.h <34:57 34:64>]
REFERENCE_MACRO_USAGE assert.h -> __LINE__ [assert.h <34:79 34:86>]
SYMBOL_METHOD public void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <90:1 <90:27 90:36> 98:1>]
SYMBOL_STRUCT b2PrismaticJointDef
QUALIFIER: b2PrismaticJointDef [b2PrismaticJoint.cpp <90:6 90:24>]
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> void [b2PrismaticJoint.cpp <90:1 90:4>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<90:46> [b2PrismaticJoint.cpp <90:46 90:47>]
REFERENCE_TYPE_USAGE void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Body [b2PrismaticJoint.cpp <90:38 90:43>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<90:58> [b2PrismaticJoint.cpp <90:58 90:59>]
REFERENCE_TYPE_USAGE void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Body [b2PrismaticJoint.cpp <90:50 90:55>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<90:76> [b2PrismaticJoint.cpp <90:76 90:81>]
REFERENCE_TYPE_USAGE void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2PrismaticJoint.cpp <90:68 90:73>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<90:98> [b2PrismaticJoint.cpp <90:98 90:101>]
REFERENCE_TYPE_USAGE void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2PrismaticJoint.cpp <90:90 90:95>]
REFERENCE_USAGE void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Body * b2JointDef::bodyA [b2PrismaticJoint.cpp <92:2 92:6>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<90:46> [b2PrismaticJoint.cpp <92:10 92:11>]
REFERENCE_USAGE void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Body * b2JointDef::bodyB [b2PrismaticJoint.cpp <93:2 93:6>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<90:58> [b2PrismaticJoint.cpp <93:10 93:11>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &&)
REFERENCE_CALL void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2PrismaticJoint.cpp <94:15 94:15>]
REFERENCE_USAGE void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2PrismaticJointDef::localAnchorA [b2PrismaticJoint.cpp <94:2 94:13>]
SYMBOL_FUNCTION b2Vec2 b2Body::GetLocalPoint(const b2Vec2 &) const
REFERENCE_CALL void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Body::GetLocalPoint(const b2Vec2 &) const [b2PrismaticJoint.cpp <94:24 94:36>]
REFERENCE_USAGE void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Body * b2JointDef::bodyA [b2PrismaticJoint.cpp <94:17 94:21>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<90:76> [b2PrismaticJoint.cpp <94:38 94:43>]
REFERENCE_CALL void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2PrismaticJoint.cpp <95:15 95:15>]
REFERENCE_USAGE void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2PrismaticJointDef::localAnchorB [b2PrismaticJoint.cpp <95:2 95:13>]
REFERENCE_CALL void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Body::GetLocalPoint(const b2Vec2 &) const [b2PrismaticJoint.cpp <95:24 95:36>]
REFERENCE_USAGE void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Body * b2JointDef::bodyB [b2PrismaticJoint.cpp <95:17 95:21>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<90:76> [b2PrismaticJoint.cpp <95:38 95:43>]
REFERENCE_CALL void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2PrismaticJoint.cpp <96:13 96:13>]
REFERENCE_USAGE void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2PrismaticJointDef::localAxisA [b2PrismaticJoint.cpp <96:2 96:11>]
SYMBOL_FUNCTION b2Vec2 b2Body::GetLocalVector(const b2Vec2 &) const
REFERENCE_CALL void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Body::GetLocalVector(const b2Vec2 &) const [b2PrismaticJoint.cpp <96:22 96:35>]
REFERENCE_USAGE void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Body * b2JointDef::bodyA [b2PrismaticJoint.cpp <96:15 96:19>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<90:98> [b2PrismaticJoint.cpp <96:37 96:40>]
REFERENCE_USAGE void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> float32 b2PrismaticJointDef::referenceAngle [b2PrismaticJoint.cpp <97:2 97:15>]
SYMBOL_FUNCTION float32 b2Body::GetAngle() const
REFERENCE_CALL void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> float32 b2Body::GetAngle() const [b2PrismaticJoint.cpp <97:26 97:33>]
REFERENCE_USAGE void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Body * b2JointDef::bodyB [b2PrismaticJoint.cpp <97:19 97:23>]
REFERENCE_CALL void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> float32 b2Body::GetAngle() const [b2PrismaticJoint.cpp <97:46 97:53>]
REFERENCE_USAGE void b2PrismaticJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Body * b2JointDef::bodyA [b2PrismaticJoint.cpp <97:39 97:43>]
SYMBOL_METHOD protected void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) [b2PrismaticJoint.cpp <100:1 <100:19 100:34> 124:1>]
SYMBOL_CLASS b2PrismaticJoint
QUALIFIER: b2PrismaticJoint [b2PrismaticJoint.cpp <100:1 100:16>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<100:63> [b2PrismaticJoint.cpp <100:63 100:65>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2PrismaticJointDef [b2PrismaticJoint.cpp <100:42 100:60>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Joint [b2PrismaticJoint.cpp <101:3 101:9>]
SYMBOL_FUNCTION void b2Joint::b2Joint(const b2JointDef *)
REFERENCE_CALL void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> void b2Joint::b2Joint(const b2JointDef *) [b2PrismaticJoint.cpp <101:3 101:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<100:63> [b2PrismaticJoint.cpp <101:11 101:13>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 b2PrismaticJoint::m_localAnchorA [b2PrismaticJoint.cpp <100:19 100:34>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> void b2Vec2::b2Vec2() [b2PrismaticJoint.cpp <100:19 100:34>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 b2PrismaticJoint::m_localAnchorB [b2PrismaticJoint.cpp <100:19 100:34>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 b2PrismaticJoint::m_localXAxisA [b2PrismaticJoint.cpp <100:19 100:34>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 b2PrismaticJoint::m_localYAxisA [b2PrismaticJoint.cpp <100:19 100:34>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <100:19 100:34>]
SYMBOL_FUNCTION void b2Vec3::b2Vec3()
REFERENCE_CALL void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> void b2Vec3::b2Vec3() [b2PrismaticJoint.cpp <100:19 100:34>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 b2PrismaticJoint::m_localCenterA [b2PrismaticJoint.cpp <100:19 100:34>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 b2PrismaticJoint::m_localCenterB [b2PrismaticJoint.cpp <100:19 100:34>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 b2PrismaticJoint::m_axis [b2PrismaticJoint.cpp <100:19 100:34>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 b2PrismaticJoint::m_perp [b2PrismaticJoint.cpp <100:19 100:34>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Mat33 b2PrismaticJoint::m_K [b2PrismaticJoint.cpp <100:19 100:34>]
SYMBOL_FUNCTION void b2Mat33::b2Mat33()
REFERENCE_CALL void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> void b2Mat33::b2Mat33() [b2PrismaticJoint.cpp <100:19 100:34>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PrismaticJoint.cpp <103:17 103:17>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 b2PrismaticJoint::m_localAnchorA [b2PrismaticJoint.cpp <103:2 103:15>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 b2PrismaticJointDef::localAnchorA [b2PrismaticJoint.cpp <103:24 103:35>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<100:63> [b2PrismaticJoint.cpp <103:19 103:21>]
REFERENCE_CALL void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PrismaticJoint.cpp <104:17 104:17>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 b2PrismaticJoint::m_localAnchorB [b2PrismaticJoint.cpp <104:2 104:15>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 b2PrismaticJointDef::localAnchorB [b2PrismaticJoint.cpp <104:24 104:35>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<100:63> [b2PrismaticJoint.cpp <104:19 104:21>]
REFERENCE_CALL void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PrismaticJoint.cpp <105:16 105:16>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 b2PrismaticJoint::m_localXAxisA [b2PrismaticJoint.cpp <105:2 105:14>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 b2PrismaticJointDef::localAxisA [b2PrismaticJoint.cpp <105:23 105:32>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<100:63> [b2PrismaticJoint.cpp <105:18 105:20>]
SYMBOL_FUNCTION float32 b2Vec2::Normalize()
REFERENCE_CALL void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> float32 b2Vec2::Normalize() [b2PrismaticJoint.cpp <106:16 106:24>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 b2PrismaticJoint::m_localXAxisA [b2PrismaticJoint.cpp <106:2 106:14>]
REFERENCE_CALL void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2PrismaticJoint.cpp <107:16 107:16>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 b2PrismaticJoint::m_localYAxisA [b2PrismaticJoint.cpp <107:2 107:14>]
SYMBOL_FUNCTION b2Vec2 b2Cross(float32, const b2Vec2 &)
REFERENCE_CALL void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 b2Cross(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <107:18 107:24>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 b2PrismaticJoint::m_localXAxisA [b2PrismaticJoint.cpp <107:32 107:44>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> float32 b2PrismaticJoint::m_referenceAngle [b2PrismaticJoint.cpp <108:2 108:17>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> float32 b2PrismaticJointDef::referenceAngle [b2PrismaticJoint.cpp <108:26 108:39>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<100:63> [b2PrismaticJoint.cpp <108:21 108:23>]
SYMBOL_FUNCTION void b2Vec3::SetZero()
REFERENCE_CALL void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> void b2Vec3::SetZero() [b2PrismaticJoint.cpp <110:12 110:18>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <110:2 110:10>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> float32 b2PrismaticJoint::m_motorMass [b2PrismaticJoint.cpp <111:2 111:12>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> float32 b2PrismaticJoint::m_motorImpulse [b2PrismaticJoint.cpp <112:2 112:15>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> float32 b2PrismaticJoint::m_lowerTranslation [b2PrismaticJoint.cpp <114:2 114:19>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> float32 b2PrismaticJointDef::lowerTranslation [b2PrismaticJoint.cpp <114:28 114:43>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<100:63> [b2PrismaticJoint.cpp <114:23 114:25>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> float32 b2PrismaticJoint::m_upperTranslation [b2PrismaticJoint.cpp <115:2 115:19>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> float32 b2PrismaticJointDef::upperTranslation [b2PrismaticJoint.cpp <115:28 115:43>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<100:63> [b2PrismaticJoint.cpp <115:23 115:25>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> float32 b2PrismaticJoint::m_maxMotorForce [b2PrismaticJoint.cpp <116:2 116:16>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> float32 b2PrismaticJointDef::maxMotorForce [b2PrismaticJoint.cpp <116:25 116:37>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<100:63> [b2PrismaticJoint.cpp <116:20 116:22>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> float32 b2PrismaticJoint::m_motorSpeed [b2PrismaticJoint.cpp <117:2 117:13>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> float32 b2PrismaticJointDef::motorSpeed [b2PrismaticJoint.cpp <117:22 117:31>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<100:63> [b2PrismaticJoint.cpp <117:17 117:19>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> bool b2PrismaticJoint::m_enableLimit [b2PrismaticJoint.cpp <118:2 118:14>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> bool b2PrismaticJointDef::enableLimit [b2PrismaticJoint.cpp <118:23 118:33>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<100:63> [b2PrismaticJoint.cpp <118:18 118:20>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> bool b2PrismaticJoint::m_enableMotor [b2PrismaticJoint.cpp <119:2 119:14>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> bool b2PrismaticJointDef::enableMotor [b2PrismaticJoint.cpp <119:23 119:33>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<100:63> [b2PrismaticJoint.cpp <119:18 119:20>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2LimitState b2PrismaticJoint::m_limitState [b2PrismaticJoint.cpp <120:2 120:13>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2LimitState::e_inactiveLimit [b2PrismaticJoint.cpp <120:17 120:31>]
SYMBOL_FUNCTION void b2Vec2::SetZero()
REFERENCE_CALL void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> void b2Vec2::SetZero() [b2PrismaticJoint.cpp <122:9 122:15>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 b2PrismaticJoint::m_axis [b2PrismaticJoint.cpp <122:2 122:7>]
REFERENCE_CALL void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> void b2Vec2::SetZero() [b2PrismaticJoint.cpp <123:9 123:15>]
REFERENCE_USAGE void b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef *) -> b2Vec2 b2PrismaticJoint::m_perp [b2PrismaticJoint.cpp <123:2 123:7>]
SYMBOL_METHOD protected void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) [b2PrismaticJoint.cpp <126:1 <126:24 126:46> 261:1>]
SYMBOL_FUNCTION void b2Joint::InitVelocityConstraints(const b2SolverData &)
REFERENCE_OVERRIDE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Joint::InitVelocityConstraints(const b2SolverData &) [b2PrismaticJoint.cpp <126:24 126:46>]
QUALIFIER: b2PrismaticJoint [b2PrismaticJoint.cpp <126:6 126:21>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> void [b2PrismaticJoint.cpp <126:1 126:4>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<126:68> [b2PrismaticJoint.cpp <126:68 126:71>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2SolverData [b2PrismaticJoint.cpp <126:54 126:65>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexA [b2PrismaticJoint.cpp <128:2 128:9>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2Body::m_islandIndex [b2PrismaticJoint.cpp <128:22 128:34>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2PrismaticJoint.cpp <128:13 128:19>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexB [b2PrismaticJoint.cpp <129:2 129:9>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2Body::m_islandIndex [b2PrismaticJoint.cpp <129:22 129:34>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2PrismaticJoint.cpp <129:13 129:19>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PrismaticJoint.cpp <130:17 130:17>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_localCenterA [b2PrismaticJoint.cpp <130:2 130:15>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Sweep::localCenter [b2PrismaticJoint.cpp <130:36 130:46>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Sweep b2Body::m_sweep [b2PrismaticJoint.cpp <130:28 130:34>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2PrismaticJoint.cpp <130:19 130:25>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PrismaticJoint.cpp <131:17 131:17>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_localCenterB [b2PrismaticJoint.cpp <131:2 131:15>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Sweep::localCenter [b2PrismaticJoint.cpp <131:36 131:46>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Sweep b2Body::m_sweep [b2PrismaticJoint.cpp <131:28 131:34>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2PrismaticJoint.cpp <131:19 131:25>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_invMassA [b2PrismaticJoint.cpp <132:2 132:11>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invMass [b2PrismaticJoint.cpp <132:24 132:32>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2PrismaticJoint.cpp <132:15 132:21>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_invMassB [b2PrismaticJoint.cpp <133:2 133:11>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invMass [b2PrismaticJoint.cpp <133:24 133:32>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2PrismaticJoint.cpp <133:15 133:21>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_invIA [b2PrismaticJoint.cpp <134:2 134:8>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invI [b2PrismaticJoint.cpp <134:21 134:26>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2PrismaticJoint.cpp <134:12 134:18>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_invIB [b2PrismaticJoint.cpp <135:2 135:8>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invI [b2PrismaticJoint.cpp <135:21 135:26>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2PrismaticJoint.cpp <135:12 135:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<137:9> [b2PrismaticJoint.cpp <137:9 137:10>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <137:2 137:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PrismaticJoint.cpp <137:39 137:39>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2PrismaticJoint.cpp <137:39 137:39>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PrismaticJoint.cpp <137:19 137:27>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<126:68> [b2PrismaticJoint.cpp <137:14 137:17>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexA [b2PrismaticJoint.cpp <137:29 137:36>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<138:10> [b2PrismaticJoint.cpp <138:10 138:11>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <138:2 138:8>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Position::a [b2PrismaticJoint.cpp <138:40 138:40>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PrismaticJoint.cpp <138:20 138:28>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<126:68> [b2PrismaticJoint.cpp <138:15 138:18>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexA [b2PrismaticJoint.cpp <138:30 138:37>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<139:9> [b2PrismaticJoint.cpp <139:9 139:10>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <139:2 139:7>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PrismaticJoint.cpp <139:40 139:40>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2PrismaticJoint.cpp <139:40 139:40>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PrismaticJoint.cpp <139:19 139:28>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<126:68> [b2PrismaticJoint.cpp <139:14 139:17>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexA [b2PrismaticJoint.cpp <139:30 139:37>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<140:10> [b2PrismaticJoint.cpp <140:10 140:11>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <140:2 140:8>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2PrismaticJoint.cpp <140:41 140:41>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PrismaticJoint.cpp <140:20 140:29>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<126:68> [b2PrismaticJoint.cpp <140:15 140:18>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexA [b2PrismaticJoint.cpp <140:31 140:38>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<142:9> [b2PrismaticJoint.cpp <142:9 142:10>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <142:2 142:7>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PrismaticJoint.cpp <142:39 142:39>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2PrismaticJoint.cpp <142:39 142:39>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PrismaticJoint.cpp <142:19 142:27>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<126:68> [b2PrismaticJoint.cpp <142:14 142:17>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexB [b2PrismaticJoint.cpp <142:29 142:36>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<143:10> [b2PrismaticJoint.cpp <143:10 143:11>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <143:2 143:8>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Position::a [b2PrismaticJoint.cpp <143:40 143:40>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PrismaticJoint.cpp <143:20 143:28>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<126:68> [b2PrismaticJoint.cpp <143:15 143:18>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexB [b2PrismaticJoint.cpp <143:30 143:37>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<144:9> [b2PrismaticJoint.cpp <144:9 144:10>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <144:2 144:7>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PrismaticJoint.cpp <144:40 144:40>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2PrismaticJoint.cpp <144:40 144:40>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PrismaticJoint.cpp <144:19 144:28>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<126:68> [b2PrismaticJoint.cpp <144:14 144:17>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexB [b2PrismaticJoint.cpp <144:30 144:37>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<145:10> [b2PrismaticJoint.cpp <145:10 145:11>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <145:2 145:8>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2PrismaticJoint.cpp <145:41 145:41>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PrismaticJoint.cpp <145:20 145:29>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<126:68> [b2PrismaticJoint.cpp <145:15 145:18>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexB [b2PrismaticJoint.cpp <145:31 145:38>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<147:8> [b2PrismaticJoint.cpp <147:8 147:9>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Rot [b2PrismaticJoint.cpp <147:2 147:6>]
SYMBOL_FUNCTION void b2Rot::b2Rot(float32)
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2PrismaticJoint.cpp <147:8 147:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<138:10> [b2PrismaticJoint.cpp <147:11 147:12>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<147:16> [b2PrismaticJoint.cpp <147:16 147:17>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2PrismaticJoint.cpp <147:16 147:17>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<143:10> [b2PrismaticJoint.cpp <147:19 147:20>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<150:9> [b2PrismaticJoint.cpp <150:9 150:10>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <150:2 150:7>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2PrismaticJoint.cpp <150:14 150:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<147:8> [b2PrismaticJoint.cpp <150:20 150:21>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <150:39 150:39>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_localAnchorA [b2PrismaticJoint.cpp <150:24 150:37>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_localCenterA [b2PrismaticJoint.cpp <150:41 150:54>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<151:9> [b2PrismaticJoint.cpp <151:9 151:10>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <151:2 151:7>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2PrismaticJoint.cpp <151:14 151:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<147:16> [b2PrismaticJoint.cpp <151:20 151:21>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <151:39 151:39>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_localAnchorB [b2PrismaticJoint.cpp <151:24 151:37>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_localCenterB [b2PrismaticJoint.cpp <151:41 151:54>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<152:9> [b2PrismaticJoint.cpp <152:9 152:9>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <152:2 152:7>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <152:28 152:28>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <152:23 152:23>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <152:17 152:17>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<142:9> [b2PrismaticJoint.cpp <152:14 152:15>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<137:9> [b2PrismaticJoint.cpp <152:19 152:20>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<151:9> [b2PrismaticJoint.cpp <152:25 152:26>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<150:9> [b2PrismaticJoint.cpp <152:30 152:31>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<154:10> [b2PrismaticJoint.cpp <154:10 154:11>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <154:2 154:8>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_invMassA [b2PrismaticJoint.cpp <154:15 154:24>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<154:27> [b2PrismaticJoint.cpp <154:27 154:28>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_invMassB [b2PrismaticJoint.cpp <154:32 154:41>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<155:10> [b2PrismaticJoint.cpp <155:10 155:11>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <155:2 155:8>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_invIA [b2PrismaticJoint.cpp <155:15 155:21>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<155:24> [b2PrismaticJoint.cpp <155:24 155:25>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_invIB [b2PrismaticJoint.cpp <155:29 155:35>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2PrismaticJoint.cpp <159:10 159:10>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_axis [b2PrismaticJoint.cpp <159:3 159:8>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2PrismaticJoint.cpp <159:12 159:16>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<147:8> [b2PrismaticJoint.cpp <159:18 159:19>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_localXAxisA [b2PrismaticJoint.cpp <159:22 159:34>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a1 [b2PrismaticJoint.cpp <160:3 160:6>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <160:10 160:16>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <160:20 160:20>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<152:9> [b2PrismaticJoint.cpp <160:18 160:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<150:9> [b2PrismaticJoint.cpp <160:22 160:23>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_axis [b2PrismaticJoint.cpp <160:26 160:31>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a2 [b2PrismaticJoint.cpp <161:3 161:6>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <161:10 161:16>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<151:9> [b2PrismaticJoint.cpp <161:18 161:19>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_axis [b2PrismaticJoint.cpp <161:22 161:27>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_motorMass [b2PrismaticJoint.cpp <163:3 163:13>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<154:10> [b2PrismaticJoint.cpp <163:17 163:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<154:27> [b2PrismaticJoint.cpp <163:22 163:23>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<155:10> [b2PrismaticJoint.cpp <163:27 163:28>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a1 [b2PrismaticJoint.cpp <163:32 163:35>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a1 [b2PrismaticJoint.cpp <163:39 163:42>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<155:24> [b2PrismaticJoint.cpp <163:46 163:47>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a2 [b2PrismaticJoint.cpp <163:51 163:54>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a2 [b2PrismaticJoint.cpp <163:58 163:61>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_motorMass [b2PrismaticJoint.cpp <164:7 164:17>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_motorMass [b2PrismaticJoint.cpp <166:4 166:14>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_motorMass [b2PrismaticJoint.cpp <166:25 166:35>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2PrismaticJoint.cpp <172:10 172:10>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_perp [b2PrismaticJoint.cpp <172:3 172:8>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2PrismaticJoint.cpp <172:12 172:16>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<147:8> [b2PrismaticJoint.cpp <172:18 172:19>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_localYAxisA [b2PrismaticJoint.cpp <172:22 172:34>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_s1 [b2PrismaticJoint.cpp <174:3 174:6>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <174:10 174:16>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <174:20 174:20>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<152:9> [b2PrismaticJoint.cpp <174:18 174:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<150:9> [b2PrismaticJoint.cpp <174:22 174:23>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_perp [b2PrismaticJoint.cpp <174:26 174:31>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_s2 [b2PrismaticJoint.cpp <175:3 175:6>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <175:10 175:16>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<151:9> [b2PrismaticJoint.cpp <175:18 175:19>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_perp [b2PrismaticJoint.cpp <175:22 175:27>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<177:11> [b2PrismaticJoint.cpp <177:11 177:13>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <177:3 177:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<154:10> [b2PrismaticJoint.cpp <177:17 177:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<154:27> [b2PrismaticJoint.cpp <177:22 177:23>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<155:10> [b2PrismaticJoint.cpp <177:27 177:28>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_s1 [b2PrismaticJoint.cpp <177:32 177:35>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_s1 [b2PrismaticJoint.cpp <177:39 177:42>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<155:24> [b2PrismaticJoint.cpp <177:46 177:47>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_s2 [b2PrismaticJoint.cpp <177:51 177:54>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_s2 [b2PrismaticJoint.cpp <177:58 177:61>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<178:11> [b2PrismaticJoint.cpp <178:11 178:13>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <178:3 178:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<155:10> [b2PrismaticJoint.cpp <178:17 178:18>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_s1 [b2PrismaticJoint.cpp <178:22 178:25>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<155:24> [b2PrismaticJoint.cpp <178:29 178:30>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_s2 [b2PrismaticJoint.cpp <178:34 178:37>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<179:11> [b2PrismaticJoint.cpp <179:11 179:13>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <179:3 179:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<155:10> [b2PrismaticJoint.cpp <179:17 179:18>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_s1 [b2PrismaticJoint.cpp <179:22 179:25>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a1 [b2PrismaticJoint.cpp <179:29 179:32>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<155:24> [b2PrismaticJoint.cpp <179:36 179:37>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_s2 [b2PrismaticJoint.cpp <179:41 179:44>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a2 [b2PrismaticJoint.cpp <179:48 179:51>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<180:11> [b2PrismaticJoint.cpp <180:11 180:13>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <180:3 180:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<155:10> [b2PrismaticJoint.cpp <180:17 180:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<155:24> [b2PrismaticJoint.cpp <180:22 180:23>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<180:11> [b2PrismaticJoint.cpp <181:7 181:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<180:11> [b2PrismaticJoint.cpp <184:4 184:6>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<186:11> [b2PrismaticJoint.cpp <186:11 186:13>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <186:3 186:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<155:10> [b2PrismaticJoint.cpp <186:17 186:18>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a1 [b2PrismaticJoint.cpp <186:22 186:25>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<155:24> [b2PrismaticJoint.cpp <186:29 186:30>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a2 [b2PrismaticJoint.cpp <186:34 186:37>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<187:11> [b2PrismaticJoint.cpp <187:11 187:13>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <187:3 187:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<154:10> [b2PrismaticJoint.cpp <187:17 187:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<154:27> [b2PrismaticJoint.cpp <187:22 187:23>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<155:10> [b2PrismaticJoint.cpp <187:27 187:28>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a1 [b2PrismaticJoint.cpp <187:32 187:35>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a1 [b2PrismaticJoint.cpp <187:39 187:42>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<155:24> [b2PrismaticJoint.cpp <187:46 187:47>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a2 [b2PrismaticJoint.cpp <187:51 187:54>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a2 [b2PrismaticJoint.cpp <187:58 187:61>]
SYMBOL_FUNCTION void b2Vec3::Set(float32, float32, float32)
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec3::Set(float32, float32, float32) [b2PrismaticJoint.cpp <189:10 189:12>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ex [b2PrismaticJoint.cpp <189:7 189:8>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Mat33 b2PrismaticJoint::m_K [b2PrismaticJoint.cpp <189:3 189:5>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<177:11> [b2PrismaticJoint.cpp <189:14 189:16>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<178:11> [b2PrismaticJoint.cpp <189:19 189:21>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<179:11> [b2PrismaticJoint.cpp <189:24 189:26>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec3::Set(float32, float32, float32) [b2PrismaticJoint.cpp <190:10 190:12>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ey [b2PrismaticJoint.cpp <190:7 190:8>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Mat33 b2PrismaticJoint::m_K [b2PrismaticJoint.cpp <190:3 190:5>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<178:11> [b2PrismaticJoint.cpp <190:14 190:16>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<180:11> [b2PrismaticJoint.cpp <190:19 190:21>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<186:11> [b2PrismaticJoint.cpp <190:24 190:26>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec3::Set(float32, float32, float32) [b2PrismaticJoint.cpp <191:10 191:12>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2PrismaticJoint.cpp <191:7 191:8>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Mat33 b2PrismaticJoint::m_K [b2PrismaticJoint.cpp <191:3 191:5>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<179:11> [b2PrismaticJoint.cpp <191:14 191:16>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<186:11> [b2PrismaticJoint.cpp <191:19 191:21>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<187:11> [b2PrismaticJoint.cpp <191:24 191:26>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> bool b2PrismaticJoint::m_enableLimit [b2PrismaticJoint.cpp <195:6 195:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<197:11> [b2PrismaticJoint.cpp <197:11 197:26>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <197:3 197:9>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <197:30 197:34>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_axis [b2PrismaticJoint.cpp <197:36 197:41>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<152:9> [b2PrismaticJoint.cpp <197:44 197:44>]
SYMBOL_FUNCTION float b2Abs<float>(float)
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float b2Abs<float>(float) [b2PrismaticJoint.cpp <198:7 198:11>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_upperTranslation [b2PrismaticJoint.cpp <198:13 198:30>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_lowerTranslation [b2PrismaticJoint.cpp <198:34 198:51>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState b2PrismaticJoint::m_limitState [b2PrismaticJoint.cpp <200:4 200:15>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState::e_equalLimits [b2PrismaticJoint.cpp <200:19 200:31>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<197:11> [b2PrismaticJoint.cpp <202:12 202:27>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_lowerTranslation [b2PrismaticJoint.cpp <202:32 202:49>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState b2PrismaticJoint::m_limitState [b2PrismaticJoint.cpp <204:8 204:19>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState::e_atLowerLimit [b2PrismaticJoint.cpp <204:24 204:37>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState b2PrismaticJoint::m_limitState [b2PrismaticJoint.cpp <206:5 206:16>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState::e_atLowerLimit [b2PrismaticJoint.cpp <206:20 206:33>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2PrismaticJoint.cpp <207:15 207:15>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <207:5 207:13>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<197:11> [b2PrismaticJoint.cpp <210:12 210:27>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_upperTranslation [b2PrismaticJoint.cpp <210:32 210:49>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState b2PrismaticJoint::m_limitState [b2PrismaticJoint.cpp <212:8 212:19>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState::e_atUpperLimit [b2PrismaticJoint.cpp <212:24 212:37>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState b2PrismaticJoint::m_limitState [b2PrismaticJoint.cpp <214:5 214:16>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState::e_atUpperLimit [b2PrismaticJoint.cpp <214:20 214:33>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2PrismaticJoint.cpp <215:15 215:15>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <215:5 215:13>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState b2PrismaticJoint::m_limitState [b2PrismaticJoint.cpp <220:4 220:15>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState::e_inactiveLimit [b2PrismaticJoint.cpp <220:19 220:33>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2PrismaticJoint.cpp <221:14 221:14>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <221:4 221:12>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState b2PrismaticJoint::m_limitState [b2PrismaticJoint.cpp <226:3 226:14>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState::e_inactiveLimit [b2PrismaticJoint.cpp <226:18 226:32>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2PrismaticJoint.cpp <227:13 227:13>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <227:3 227:11>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> bool b2PrismaticJoint::m_enableMotor [b2PrismaticJoint.cpp <230:6 230:18>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_motorImpulse [b2PrismaticJoint.cpp <232:3 232:16>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> bool b2TimeStep::warmStarting [b2PrismaticJoint.cpp <235:16 235:27>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2TimeStep b2SolverData::step [b2PrismaticJoint.cpp <235:11 235:14>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<126:68> [b2PrismaticJoint.cpp <235:6 235:9>]
SYMBOL_FUNCTION void b2Vec3::operator*=(float32)
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec3::operator*=(float32) [b2PrismaticJoint.cpp <238:13 238:14>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <238:3 238:11>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2TimeStep::dtRatio [b2PrismaticJoint.cpp <238:26 238:32>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2TimeStep b2SolverData::step [b2PrismaticJoint.cpp <238:21 238:24>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<126:68> [b2PrismaticJoint.cpp <238:16 238:19>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_motorImpulse [b2PrismaticJoint.cpp <239:3 239:16>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2TimeStep::dtRatio [b2PrismaticJoint.cpp <239:31 239:37>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2TimeStep b2SolverData::step [b2PrismaticJoint.cpp <239:26 239:29>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<126:68> [b2PrismaticJoint.cpp <239:21 239:24>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<241:10> [b2PrismaticJoint.cpp <241:10 241:10>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <241:3 241:8>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <241:35 241:35>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <241:26 241:26>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2PrismaticJoint.cpp <241:24 241:24>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <241:14 241:22>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_perp [b2PrismaticJoint.cpp <241:28 241:33>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <241:68 241:68>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_motorImpulse [b2PrismaticJoint.cpp <241:38 241:51>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2PrismaticJoint.cpp <241:65 241:65>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <241:55 241:63>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_axis [b2PrismaticJoint.cpp <241:70 241:75>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<242:11> [b2PrismaticJoint.cpp <242:11 242:12>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <242:3 242:9>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2PrismaticJoint.cpp <242:26 242:26>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <242:16 242:24>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_s1 [b2PrismaticJoint.cpp <242:30 242:33>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2PrismaticJoint.cpp <242:47 242:47>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <242:37 242:45>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_motorImpulse [b2PrismaticJoint.cpp <242:52 242:65>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2PrismaticJoint.cpp <242:79 242:79>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <242:69 242:77>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a1 [b2PrismaticJoint.cpp <242:84 242:87>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<243:11> [b2PrismaticJoint.cpp <243:11 243:12>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <243:3 243:9>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2PrismaticJoint.cpp <243:26 243:26>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <243:16 243:24>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_s2 [b2PrismaticJoint.cpp <243:30 243:33>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2PrismaticJoint.cpp <243:47 243:47>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <243:37 243:45>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_motorImpulse [b2PrismaticJoint.cpp <243:52 243:65>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2PrismaticJoint.cpp <243:79 243:79>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <243:69 243:77>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a2 [b2PrismaticJoint.cpp <243:84 243:87>]
SYMBOL_FUNCTION void b2Vec2::operator-=(const b2Vec2 &)
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2PrismaticJoint.cpp <245:6 245:7>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<139:9> [b2PrismaticJoint.cpp <245:3 245:4>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <245:12 245:12>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<154:10> [b2PrismaticJoint.cpp <245:9 245:10>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<241:10> [b2PrismaticJoint.cpp <245:14 245:14>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<140:10> [b2PrismaticJoint.cpp <246:3 246:4>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<155:10> [b2PrismaticJoint.cpp <246:9 246:10>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<242:11> [b2PrismaticJoint.cpp <246:14 246:15>]
SYMBOL_FUNCTION void b2Vec2::operator+=(const b2Vec2 &)
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2PrismaticJoint.cpp <248:6 248:7>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<144:9> [b2PrismaticJoint.cpp <248:3 248:4>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <248:12 248:12>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<154:27> [b2PrismaticJoint.cpp <248:9 248:10>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<241:10> [b2PrismaticJoint.cpp <248:14 248:14>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<145:10> [b2PrismaticJoint.cpp <249:3 249:4>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<155:24> [b2PrismaticJoint.cpp <249:9 249:10>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<243:11> [b2PrismaticJoint.cpp <249:14 249:15>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec3::SetZero() [b2PrismaticJoint.cpp <253:13 253:19>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <253:3 253:11>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_motorImpulse [b2PrismaticJoint.cpp <254:3 254:16>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PrismaticJoint.cpp <257:30 257:30>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2PrismaticJoint.cpp <257:28 257:28>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PrismaticJoint.cpp <257:7 257:16>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<126:68> [b2PrismaticJoint.cpp <257:2 257:5>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexA [b2PrismaticJoint.cpp <257:18 257:25>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<139:9> [b2PrismaticJoint.cpp <257:32 257:33>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2PrismaticJoint.cpp <258:28 258:28>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PrismaticJoint.cpp <258:7 258:16>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<126:68> [b2PrismaticJoint.cpp <258:2 258:5>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexA [b2PrismaticJoint.cpp <258:18 258:25>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<140:10> [b2PrismaticJoint.cpp <258:32 258:33>]
REFERENCE_CALL void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PrismaticJoint.cpp <259:30 259:30>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2PrismaticJoint.cpp <259:28 259:28>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PrismaticJoint.cpp <259:7 259:16>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<126:68> [b2PrismaticJoint.cpp <259:2 259:5>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexB [b2PrismaticJoint.cpp <259:18 259:25>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<144:9> [b2PrismaticJoint.cpp <259:32 259:33>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2PrismaticJoint.cpp <260:28 260:28>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PrismaticJoint.cpp <260:7 260:16>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<126:68> [b2PrismaticJoint.cpp <260:2 260:5>]
REFERENCE_USAGE void b2PrismaticJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexB [b2PrismaticJoint.cpp <260:18 260:25>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<145:10> [b2PrismaticJoint.cpp <260:32 260:33>]
SYMBOL_METHOD protected void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) [b2PrismaticJoint.cpp <263:1 <263:24 263:47> 358:1>]
SYMBOL_FUNCTION void b2Joint::SolveVelocityConstraints(const b2SolverData &)
REFERENCE_OVERRIDE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Joint::SolveVelocityConstraints(const b2SolverData &) [b2PrismaticJoint.cpp <263:24 263:47>]
QUALIFIER: b2PrismaticJoint [b2PrismaticJoint.cpp <263:6 263:21>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> void [b2PrismaticJoint.cpp <263:1 263:4>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<263:69> [b2PrismaticJoint.cpp <263:69 263:72>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2SolverData [b2PrismaticJoint.cpp <263:55 263:66>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<265:9> [b2PrismaticJoint.cpp <265:9 265:10>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <265:2 265:7>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PrismaticJoint.cpp <265:40 265:40>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2PrismaticJoint.cpp <265:40 265:40>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PrismaticJoint.cpp <265:19 265:28>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<263:69> [b2PrismaticJoint.cpp <265:14 265:17>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexA [b2PrismaticJoint.cpp <265:30 265:37>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<266:10> [b2PrismaticJoint.cpp <266:10 266:11>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <266:2 266:8>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2PrismaticJoint.cpp <266:41 266:41>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PrismaticJoint.cpp <266:20 266:29>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<263:69> [b2PrismaticJoint.cpp <266:15 266:18>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexA [b2PrismaticJoint.cpp <266:31 266:38>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<267:9> [b2PrismaticJoint.cpp <267:9 267:10>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <267:2 267:7>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PrismaticJoint.cpp <267:40 267:40>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2PrismaticJoint.cpp <267:40 267:40>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PrismaticJoint.cpp <267:19 267:28>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<263:69> [b2PrismaticJoint.cpp <267:14 267:17>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexB [b2PrismaticJoint.cpp <267:30 267:37>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<268:10> [b2PrismaticJoint.cpp <268:10 268:11>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <268:2 268:8>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2PrismaticJoint.cpp <268:41 268:41>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PrismaticJoint.cpp <268:20 268:29>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<263:69> [b2PrismaticJoint.cpp <268:15 268:18>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexB [b2PrismaticJoint.cpp <268:31 268:38>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<270:10> [b2PrismaticJoint.cpp <270:10 270:11>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <270:2 270:8>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_invMassA [b2PrismaticJoint.cpp <270:15 270:24>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<270:27> [b2PrismaticJoint.cpp <270:27 270:28>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_invMassB [b2PrismaticJoint.cpp <270:32 270:41>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<271:10> [b2PrismaticJoint.cpp <271:10 271:11>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <271:2 271:8>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_invIA [b2PrismaticJoint.cpp <271:15 271:21>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<271:24> [b2PrismaticJoint.cpp <271:24 271:25>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_invIB [b2PrismaticJoint.cpp <271:29 271:35>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> bool b2PrismaticJoint::m_enableMotor [b2PrismaticJoint.cpp <274:6 274:18>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2LimitState b2PrismaticJoint::m_limitState [b2PrismaticJoint.cpp <274:23 274:34>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2LimitState::e_equalLimits [b2PrismaticJoint.cpp <274:39 274:51>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<276:11> [b2PrismaticJoint.cpp <276:11 276:14>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <276:3 276:9>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <276:18 276:22>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_axis [b2PrismaticJoint.cpp <276:24 276:29>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <276:35 276:35>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<267:9> [b2PrismaticJoint.cpp <276:32 276:33>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<265:9> [b2PrismaticJoint.cpp <276:37 276:38>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a2 [b2PrismaticJoint.cpp <276:43 276:46>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<268:10> [b2PrismaticJoint.cpp <276:50 276:51>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a1 [b2PrismaticJoint.cpp <276:55 276:58>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<266:10> [b2PrismaticJoint.cpp <276:62 276:63>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<277:11> [b2PrismaticJoint.cpp <277:11 277:17>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <277:3 277:9>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_motorMass [b2PrismaticJoint.cpp <277:21 277:31>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_motorSpeed [b2PrismaticJoint.cpp <277:36 277:47>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<276:11> [b2PrismaticJoint.cpp <277:51 277:54>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<278:11> [b2PrismaticJoint.cpp <278:11 278:20>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <278:3 278:9>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_motorImpulse [b2PrismaticJoint.cpp <278:24 278:37>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<279:11> [b2PrismaticJoint.cpp <279:11 279:20>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <279:3 279:9>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2TimeStep::dt [b2PrismaticJoint.cpp <279:34 279:35>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2TimeStep b2SolverData::step [b2PrismaticJoint.cpp <279:29 279:32>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<263:69> [b2PrismaticJoint.cpp <279:24 279:27>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_maxMotorForce [b2PrismaticJoint.cpp <279:39 279:53>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_motorImpulse [b2PrismaticJoint.cpp <280:3 280:16>]
SYMBOL_FUNCTION float b2Clamp<float>(float, float, float)
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float b2Clamp<float>(float, float, float) [b2PrismaticJoint.cpp <280:20 280:26>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_motorImpulse [b2PrismaticJoint.cpp <280:28 280:41>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<277:11> [b2PrismaticJoint.cpp <280:45 280:51>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<279:11> [b2PrismaticJoint.cpp <280:55 280:64>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<279:11> [b2PrismaticJoint.cpp <280:67 280:76>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<277:11> [b2PrismaticJoint.cpp <281:3 281:9>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_motorImpulse [b2PrismaticJoint.cpp <281:13 281:26>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<278:11> [b2PrismaticJoint.cpp <281:30 281:39>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<283:10> [b2PrismaticJoint.cpp <283:10 283:10>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <283:3 283:8>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <283:22 283:22>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<277:11> [b2PrismaticJoint.cpp <283:14 283:20>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_axis [b2PrismaticJoint.cpp <283:24 283:29>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<284:11> [b2PrismaticJoint.cpp <284:11 284:12>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <284:3 284:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<277:11> [b2PrismaticJoint.cpp <284:16 284:22>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a1 [b2PrismaticJoint.cpp <284:26 284:29>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<285:11> [b2PrismaticJoint.cpp <285:11 285:12>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <285:3 285:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<277:11> [b2PrismaticJoint.cpp <285:16 285:22>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a2 [b2PrismaticJoint.cpp <285:26 285:29>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2PrismaticJoint.cpp <287:6 287:7>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<265:9> [b2PrismaticJoint.cpp <287:3 287:4>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <287:12 287:12>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<270:10> [b2PrismaticJoint.cpp <287:9 287:10>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<283:10> [b2PrismaticJoint.cpp <287:14 287:14>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<266:10> [b2PrismaticJoint.cpp <288:3 288:4>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<271:10> [b2PrismaticJoint.cpp <288:9 288:10>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<284:11> [b2PrismaticJoint.cpp <288:14 288:15>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2PrismaticJoint.cpp <290:6 290:7>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<267:9> [b2PrismaticJoint.cpp <290:3 290:4>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <290:12 290:12>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<270:27> [b2PrismaticJoint.cpp <290:9 290:10>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<283:10> [b2PrismaticJoint.cpp <290:14 290:14>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<268:10> [b2PrismaticJoint.cpp <291:3 291:4>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<271:24> [b2PrismaticJoint.cpp <291:9 291:10>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<285:11> [b2PrismaticJoint.cpp <291:14 291:15>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<294:9> [b2PrismaticJoint.cpp <294:9 294:13>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <294:2 294:7>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2() [b2PrismaticJoint.cpp <294:9 294:13>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2PrismaticJoint.cpp <295:8 295:8>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<294:9> [b2PrismaticJoint.cpp <295:2 295:6>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <295:12 295:16>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_perp [b2PrismaticJoint.cpp <295:18 295:23>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <295:29 295:29>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<267:9> [b2PrismaticJoint.cpp <295:26 295:27>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<265:9> [b2PrismaticJoint.cpp <295:31 295:32>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_s2 [b2PrismaticJoint.cpp <295:37 295:40>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<268:10> [b2PrismaticJoint.cpp <295:44 295:45>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_s1 [b2PrismaticJoint.cpp <295:49 295:52>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<266:10> [b2PrismaticJoint.cpp <295:56 295:57>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2PrismaticJoint.cpp <296:8 296:8>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<294:9> [b2PrismaticJoint.cpp <296:2 296:6>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<268:10> [b2PrismaticJoint.cpp <296:12 296:13>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<266:10> [b2PrismaticJoint.cpp <296:17 296:18>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> bool b2PrismaticJoint::m_enableLimit [b2PrismaticJoint.cpp <298:6 298:18>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2LimitState b2PrismaticJoint::m_limitState [b2PrismaticJoint.cpp <298:23 298:34>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2LimitState::e_inactiveLimit [b2PrismaticJoint.cpp <298:39 298:53>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<301:11> [b2PrismaticJoint.cpp <301:11 301:15>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <301:3 301:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<301:11> [b2PrismaticJoint.cpp <302:3 302:7>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <302:11 302:15>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_axis [b2PrismaticJoint.cpp <302:17 302:22>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <302:28 302:28>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<267:9> [b2PrismaticJoint.cpp <302:25 302:26>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<265:9> [b2PrismaticJoint.cpp <302:30 302:31>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a2 [b2PrismaticJoint.cpp <302:36 302:39>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<268:10> [b2PrismaticJoint.cpp <302:43 302:44>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a1 [b2PrismaticJoint.cpp <302:48 302:51>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<266:10> [b2PrismaticJoint.cpp <302:55 302:56>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<303:10> [b2PrismaticJoint.cpp <303:10 303:13>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 [b2PrismaticJoint.cpp <303:3 303:8>]
SYMBOL_FUNCTION void b2Vec3::b2Vec3(float32, float32, float32)
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec3::b2Vec3(float32, float32, float32) [b2PrismaticJoint.cpp <303:10 303:13>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2PrismaticJoint.cpp <303:21 303:21>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<294:9> [b2PrismaticJoint.cpp <303:15 303:19>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2PrismaticJoint.cpp <303:30 303:30>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<294:9> [b2PrismaticJoint.cpp <303:24 303:28>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<301:11> [b2PrismaticJoint.cpp <303:33 303:37>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<305:10> [b2PrismaticJoint.cpp <305:10 305:11>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 [b2PrismaticJoint.cpp <305:3 305:8>]
SYMBOL_FUNCTION void b2Vec3::b2Vec3(const b2Vec3 &)
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec3::b2Vec3(const b2Vec3 &) [b2PrismaticJoint.cpp <305:15 305:23>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <305:15 305:23>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<306:10> [b2PrismaticJoint.cpp <306:10 306:11>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 [b2PrismaticJoint.cpp <306:3 306:8>]
SYMBOL_FUNCTION b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const [b2PrismaticJoint.cpp <306:20 306:26>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Mat33 b2PrismaticJoint::m_K [b2PrismaticJoint.cpp <306:16 306:18>]
SYMBOL_FUNCTION b2Vec3 b2Vec3::operator-() const
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Vec3::operator-() const [b2PrismaticJoint.cpp <306:28 306:28>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<303:10> [b2PrismaticJoint.cpp <306:29 306:32>]
SYMBOL_FUNCTION void b2Vec3::operator+=(const b2Vec3 &)
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec3::operator+=(const b2Vec3 &) [b2PrismaticJoint.cpp <307:13 307:14>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <307:3 307:11>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<306:10> [b2PrismaticJoint.cpp <307:16 307:17>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2LimitState b2PrismaticJoint::m_limitState [b2PrismaticJoint.cpp <309:7 309:18>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2LimitState::e_atLowerLimit [b2PrismaticJoint.cpp <309:23 309:36>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2PrismaticJoint.cpp <311:14 311:14>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <311:4 311:12>]
SYMBOL_FUNCTION float b2Max<float>(float, float)
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float b2Max<float>(float, float) [b2PrismaticJoint.cpp <311:18 311:22>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2PrismaticJoint.cpp <311:34 311:34>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <311:24 311:32>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2LimitState b2PrismaticJoint::m_limitState [b2PrismaticJoint.cpp <313:12 313:23>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2LimitState::e_atUpperLimit [b2PrismaticJoint.cpp <313:28 313:41>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2PrismaticJoint.cpp <315:14 315:14>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <315:4 315:12>]
SYMBOL_FUNCTION float b2Min<float>(float, float)
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float b2Min<float>(float, float) [b2PrismaticJoint.cpp <315:18 315:22>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2PrismaticJoint.cpp <315:34 315:34>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <315:24 315:32>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<319:10> [b2PrismaticJoint.cpp <319:10 319:10>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <319:3 319:8>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <319:21 319:21>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Vec2::operator-() const [b2PrismaticJoint.cpp <319:14 319:14>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<294:9> [b2PrismaticJoint.cpp <319:15 319:19>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <319:44 319:44>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2PrismaticJoint.cpp <319:34 319:34>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <319:24 319:32>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2PrismaticJoint.cpp <319:41 319:41>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<305:10> [b2PrismaticJoint.cpp <319:38 319:39>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(float32, float32)
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(float32, float32) [b2PrismaticJoint.cpp <319:46 319:51>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <319:46 319:51>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2PrismaticJoint.cpp <319:60 319:60>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2PrismaticJoint.cpp <319:57 319:58>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Mat33 b2PrismaticJoint::m_K [b2PrismaticJoint.cpp <319:53 319:55>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2PrismaticJoint.cpp <319:70 319:70>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2PrismaticJoint.cpp <319:67 319:68>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Mat33 b2PrismaticJoint::m_K [b2PrismaticJoint.cpp <319:63 319:65>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<320:10> [b2PrismaticJoint.cpp <320:10 320:12>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <320:3 320:8>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <320:31 320:31>]
SYMBOL_FUNCTION b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const [b2PrismaticJoint.cpp <320:20 320:26>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Mat33 b2PrismaticJoint::m_K [b2PrismaticJoint.cpp <320:16 320:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<319:10> [b2PrismaticJoint.cpp <320:28 320:28>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(float32, float32) [b2PrismaticJoint.cpp <320:33 320:38>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <320:33 320:38>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2PrismaticJoint.cpp <320:43 320:43>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<305:10> [b2PrismaticJoint.cpp <320:40 320:41>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2PrismaticJoint.cpp <320:49 320:49>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<305:10> [b2PrismaticJoint.cpp <320:46 320:47>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2PrismaticJoint.cpp <321:13 321:13>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <321:3 321:11>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2PrismaticJoint.cpp <321:21 321:21>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<320:10> [b2PrismaticJoint.cpp <321:17 321:19>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2PrismaticJoint.cpp <322:13 322:13>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <322:3 322:11>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2PrismaticJoint.cpp <322:21 322:21>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<320:10> [b2PrismaticJoint.cpp <322:17 322:19>]
SYMBOL_FUNCTION b2Vec3 & b2Vec3::operator=(b2Vec3 &&)
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 & b2Vec3::operator=(b2Vec3 &&) [b2PrismaticJoint.cpp <324:6 324:6>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<306:10> [b2PrismaticJoint.cpp <324:3 324:4>]
SYMBOL_FUNCTION b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &)
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) [b2PrismaticJoint.cpp <324:18 324:18>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <324:8 324:16>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<305:10> [b2PrismaticJoint.cpp <324:20 324:21>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<326:10> [b2PrismaticJoint.cpp <326:10 326:10>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <326:3 326:8>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <326:28 326:28>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <326:19 326:19>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2PrismaticJoint.cpp <326:17 326:17>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<306:10> [b2PrismaticJoint.cpp <326:14 326:15>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_perp [b2PrismaticJoint.cpp <326:21 326:26>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <326:35 326:35>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2PrismaticJoint.cpp <326:33 326:33>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<306:10> [b2PrismaticJoint.cpp <326:30 326:31>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_axis [b2PrismaticJoint.cpp <326:37 326:42>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<327:11> [b2PrismaticJoint.cpp <327:11 327:12>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <327:3 327:9>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2PrismaticJoint.cpp <327:19 327:19>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<306:10> [b2PrismaticJoint.cpp <327:16 327:17>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_s1 [b2PrismaticJoint.cpp <327:23 327:26>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2PrismaticJoint.cpp <327:33 327:33>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<306:10> [b2PrismaticJoint.cpp <327:30 327:31>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2PrismaticJoint.cpp <327:40 327:40>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<306:10> [b2PrismaticJoint.cpp <327:37 327:38>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a1 [b2PrismaticJoint.cpp <327:44 327:47>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<328:11> [b2PrismaticJoint.cpp <328:11 328:12>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <328:3 328:9>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2PrismaticJoint.cpp <328:19 328:19>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<306:10> [b2PrismaticJoint.cpp <328:16 328:17>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_s2 [b2PrismaticJoint.cpp <328:23 328:26>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2PrismaticJoint.cpp <328:33 328:33>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<306:10> [b2PrismaticJoint.cpp <328:30 328:31>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2PrismaticJoint.cpp <328:40 328:40>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<306:10> [b2PrismaticJoint.cpp <328:37 328:38>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_a2 [b2PrismaticJoint.cpp <328:44 328:47>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2PrismaticJoint.cpp <330:6 330:7>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<265:9> [b2PrismaticJoint.cpp <330:3 330:4>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <330:12 330:12>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<270:10> [b2PrismaticJoint.cpp <330:9 330:10>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<326:10> [b2PrismaticJoint.cpp <330:14 330:14>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<266:10> [b2PrismaticJoint.cpp <331:3 331:4>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<271:10> [b2PrismaticJoint.cpp <331:9 331:10>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<327:11> [b2PrismaticJoint.cpp <331:14 331:15>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2PrismaticJoint.cpp <333:6 333:7>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<267:9> [b2PrismaticJoint.cpp <333:3 333:4>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <333:12 333:12>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<270:27> [b2PrismaticJoint.cpp <333:9 333:10>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<326:10> [b2PrismaticJoint.cpp <333:14 333:14>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<268:10> [b2PrismaticJoint.cpp <334:3 334:4>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<271:24> [b2PrismaticJoint.cpp <334:9 334:10>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<328:11> [b2PrismaticJoint.cpp <334:14 334:15>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<339:10> [b2PrismaticJoint.cpp <339:10 339:11>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <339:3 339:8>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const [b2PrismaticJoint.cpp <339:19 339:25>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Mat33 b2PrismaticJoint::m_K [b2PrismaticJoint.cpp <339:15 339:17>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Vec2::operator-() const [b2PrismaticJoint.cpp <339:27 339:27>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<294:9> [b2PrismaticJoint.cpp <339:28 339:32>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2PrismaticJoint.cpp <340:13 340:13>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <340:3 340:11>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2PrismaticJoint.cpp <340:21 340:21>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<339:10> [b2PrismaticJoint.cpp <340:18 340:19>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2PrismaticJoint.cpp <341:13 341:13>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <341:3 341:11>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2PrismaticJoint.cpp <341:21 341:21>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<339:10> [b2PrismaticJoint.cpp <341:18 341:19>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<343:10> [b2PrismaticJoint.cpp <343:10 343:10>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <343:3 343:8>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <343:19 343:19>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2PrismaticJoint.cpp <343:17 343:17>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<339:10> [b2PrismaticJoint.cpp <343:14 343:15>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_perp [b2PrismaticJoint.cpp <343:21 343:26>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<344:11> [b2PrismaticJoint.cpp <344:11 344:12>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <344:3 344:9>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2PrismaticJoint.cpp <344:19 344:19>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<339:10> [b2PrismaticJoint.cpp <344:16 344:17>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_s1 [b2PrismaticJoint.cpp <344:23 344:26>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2PrismaticJoint.cpp <344:33 344:33>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<339:10> [b2PrismaticJoint.cpp <344:30 344:31>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<345:11> [b2PrismaticJoint.cpp <345:11 345:12>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <345:3 345:9>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2PrismaticJoint.cpp <345:19 345:19>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<339:10> [b2PrismaticJoint.cpp <345:16 345:17>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_s2 [b2PrismaticJoint.cpp <345:23 345:26>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2PrismaticJoint.cpp <345:33 345:33>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<339:10> [b2PrismaticJoint.cpp <345:30 345:31>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2PrismaticJoint.cpp <347:6 347:7>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<265:9> [b2PrismaticJoint.cpp <347:3 347:4>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <347:12 347:12>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<270:10> [b2PrismaticJoint.cpp <347:9 347:10>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<343:10> [b2PrismaticJoint.cpp <347:14 347:14>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<266:10> [b2PrismaticJoint.cpp <348:3 348:4>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<271:10> [b2PrismaticJoint.cpp <348:9 348:10>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<344:11> [b2PrismaticJoint.cpp <348:14 348:15>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2PrismaticJoint.cpp <350:6 350:7>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<267:9> [b2PrismaticJoint.cpp <350:3 350:4>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <350:12 350:12>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<270:27> [b2PrismaticJoint.cpp <350:9 350:10>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<343:10> [b2PrismaticJoint.cpp <350:14 350:14>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<268:10> [b2PrismaticJoint.cpp <351:3 351:4>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<271:24> [b2PrismaticJoint.cpp <351:9 351:10>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<345:11> [b2PrismaticJoint.cpp <351:14 351:15>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PrismaticJoint.cpp <354:30 354:30>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2PrismaticJoint.cpp <354:28 354:28>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PrismaticJoint.cpp <354:7 354:16>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<263:69> [b2PrismaticJoint.cpp <354:2 354:5>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexA [b2PrismaticJoint.cpp <354:18 354:25>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<265:9> [b2PrismaticJoint.cpp <354:32 354:33>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2PrismaticJoint.cpp <355:28 355:28>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PrismaticJoint.cpp <355:7 355:16>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<263:69> [b2PrismaticJoint.cpp <355:2 355:5>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexA [b2PrismaticJoint.cpp <355:18 355:25>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<266:10> [b2PrismaticJoint.cpp <355:32 355:33>]
REFERENCE_CALL void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PrismaticJoint.cpp <356:30 356:30>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2PrismaticJoint.cpp <356:28 356:28>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PrismaticJoint.cpp <356:7 356:16>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<263:69> [b2PrismaticJoint.cpp <356:2 356:5>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexB [b2PrismaticJoint.cpp <356:18 356:25>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<267:9> [b2PrismaticJoint.cpp <356:32 356:33>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2PrismaticJoint.cpp <357:28 357:28>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PrismaticJoint.cpp <357:7 357:16>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<263:69> [b2PrismaticJoint.cpp <357:2 357:5>]
REFERENCE_USAGE void b2PrismaticJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexB [b2PrismaticJoint.cpp <357:18 357:25>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<268:10> [b2PrismaticJoint.cpp <357:32 357:33>]
SYMBOL_METHOD protected bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) [b2PrismaticJoint.cpp <367:1 <367:24 367:47> 489:1>]
SYMBOL_FUNCTION bool b2Joint::SolvePositionConstraints(const b2SolverData &)
REFERENCE_OVERRIDE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> bool b2Joint::SolvePositionConstraints(const b2SolverData &) [b2PrismaticJoint.cpp <367:24 367:47>]
QUALIFIER: b2PrismaticJoint [b2PrismaticJoint.cpp <367:6 367:21>]
SYMBOL_BUILTIN_TYPE bool
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> bool [b2PrismaticJoint.cpp <367:1 367:4>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<367:69> [b2PrismaticJoint.cpp <367:69 367:72>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2SolverData [b2PrismaticJoint.cpp <367:55 367:66>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<369:9> [b2PrismaticJoint.cpp <369:9 369:10>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <369:2 369:7>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PrismaticJoint.cpp <369:39 369:39>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2PrismaticJoint.cpp <369:39 369:39>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PrismaticJoint.cpp <369:19 369:27>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<367:69> [b2PrismaticJoint.cpp <369:14 369:17>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexA [b2PrismaticJoint.cpp <369:29 369:36>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<370:10> [b2PrismaticJoint.cpp <370:10 370:11>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <370:2 370:8>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2PrismaticJoint.cpp <370:40 370:40>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PrismaticJoint.cpp <370:20 370:28>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<367:69> [b2PrismaticJoint.cpp <370:15 370:18>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexA [b2PrismaticJoint.cpp <370:30 370:37>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<371:9> [b2PrismaticJoint.cpp <371:9 371:10>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <371:2 371:7>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PrismaticJoint.cpp <371:39 371:39>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2PrismaticJoint.cpp <371:39 371:39>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PrismaticJoint.cpp <371:19 371:27>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<367:69> [b2PrismaticJoint.cpp <371:14 371:17>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexB [b2PrismaticJoint.cpp <371:29 371:36>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<372:10> [b2PrismaticJoint.cpp <372:10 372:11>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <372:2 372:8>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2PrismaticJoint.cpp <372:40 372:40>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PrismaticJoint.cpp <372:20 372:28>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<367:69> [b2PrismaticJoint.cpp <372:15 372:18>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexB [b2PrismaticJoint.cpp <372:30 372:37>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<374:8> [b2PrismaticJoint.cpp <374:8 374:9>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Rot [b2PrismaticJoint.cpp <374:2 374:6>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2PrismaticJoint.cpp <374:8 374:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<370:10> [b2PrismaticJoint.cpp <374:11 374:12>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<374:16> [b2PrismaticJoint.cpp <374:16 374:17>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2PrismaticJoint.cpp <374:16 374:17>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<372:10> [b2PrismaticJoint.cpp <374:19 374:20>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<376:10> [b2PrismaticJoint.cpp <376:10 376:11>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <376:2 376:8>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_invMassA [b2PrismaticJoint.cpp <376:15 376:24>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<376:27> [b2PrismaticJoint.cpp <376:27 376:28>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_invMassB [b2PrismaticJoint.cpp <376:32 376:41>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<377:10> [b2PrismaticJoint.cpp <377:10 377:11>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <377:2 377:8>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_invIA [b2PrismaticJoint.cpp <377:15 377:21>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<377:24> [b2PrismaticJoint.cpp <377:24 377:25>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_invIB [b2PrismaticJoint.cpp <377:29 377:35>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<380:9> [b2PrismaticJoint.cpp <380:9 380:10>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <380:2 380:7>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2PrismaticJoint.cpp <380:14 380:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<374:8> [b2PrismaticJoint.cpp <380:20 380:21>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <380:39 380:39>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_localAnchorA [b2PrismaticJoint.cpp <380:24 380:37>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_localCenterA [b2PrismaticJoint.cpp <380:41 380:54>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<381:9> [b2PrismaticJoint.cpp <381:9 381:10>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <381:2 381:7>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2PrismaticJoint.cpp <381:14 381:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<374:16> [b2PrismaticJoint.cpp <381:20 381:21>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <381:39 381:39>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_localAnchorB [b2PrismaticJoint.cpp <381:24 381:37>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_localCenterB [b2PrismaticJoint.cpp <381:41 381:54>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<382:9> [b2PrismaticJoint.cpp <382:9 382:9>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <382:2 382:7>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <382:26 382:26>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <382:21 382:21>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <382:16 382:16>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<371:9> [b2PrismaticJoint.cpp <382:13 382:14>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<381:9> [b2PrismaticJoint.cpp <382:18 382:19>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<369:9> [b2PrismaticJoint.cpp <382:23 382:24>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<380:9> [b2PrismaticJoint.cpp <382:28 382:29>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<384:9> [b2PrismaticJoint.cpp <384:9 384:12>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <384:2 384:7>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2PrismaticJoint.cpp <384:16 384:20>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<374:8> [b2PrismaticJoint.cpp <384:22 384:23>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_localXAxisA [b2PrismaticJoint.cpp <384:26 384:38>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<385:10> [b2PrismaticJoint.cpp <385:10 385:11>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <385:2 385:8>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <385:15 385:21>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <385:25 385:25>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<382:9> [b2PrismaticJoint.cpp <385:23 385:23>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<380:9> [b2PrismaticJoint.cpp <385:27 385:28>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<384:9> [b2PrismaticJoint.cpp <385:31 385:34>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<386:10> [b2PrismaticJoint.cpp <386:10 386:11>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <386:2 386:8>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <386:15 386:21>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<381:9> [b2PrismaticJoint.cpp <386:23 386:24>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<384:9> [b2PrismaticJoint.cpp <386:27 386:30>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<387:9> [b2PrismaticJoint.cpp <387:9 387:12>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <387:2 387:7>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2PrismaticJoint.cpp <387:16 387:20>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<374:8> [b2PrismaticJoint.cpp <387:22 387:23>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2PrismaticJoint::m_localYAxisA [b2PrismaticJoint.cpp <387:26 387:38>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<389:10> [b2PrismaticJoint.cpp <389:10 389:11>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <389:2 389:8>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <389:15 389:21>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <389:25 389:25>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<382:9> [b2PrismaticJoint.cpp <389:23 389:23>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<380:9> [b2PrismaticJoint.cpp <389:27 389:28>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<387:9> [b2PrismaticJoint.cpp <389:31 389:34>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<390:10> [b2PrismaticJoint.cpp <390:10 390:11>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <390:2 390:8>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <390:15 390:21>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<381:9> [b2PrismaticJoint.cpp <390:23 390:24>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<387:9> [b2PrismaticJoint.cpp <390:27 390:30>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<392:9> [b2PrismaticJoint.cpp <392:9 392:15>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 [b2PrismaticJoint.cpp <392:2 392:7>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec3::b2Vec3() [b2PrismaticJoint.cpp <392:9 392:15>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<393:9> [b2PrismaticJoint.cpp <393:9 393:10>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <393:2 393:7>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2() [b2PrismaticJoint.cpp <393:9 393:10>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2PrismaticJoint.cpp <394:5 394:5>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<393:9> [b2PrismaticJoint.cpp <394:2 394:3>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <394:9 394:13>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<387:9> [b2PrismaticJoint.cpp <394:15 394:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<382:9> [b2PrismaticJoint.cpp <394:21 394:21>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2PrismaticJoint.cpp <395:5 395:5>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<393:9> [b2PrismaticJoint.cpp <395:2 395:3>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<372:10> [b2PrismaticJoint.cpp <395:9 395:10>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<370:10> [b2PrismaticJoint.cpp <395:14 395:15>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_referenceAngle [b2PrismaticJoint.cpp <395:19 395:34>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<397:10> [b2PrismaticJoint.cpp <397:10 397:20>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <397:2 397:8>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float b2Abs<float>(float) [b2PrismaticJoint.cpp <397:24 397:28>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2PrismaticJoint.cpp <397:33 397:33>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<393:9> [b2PrismaticJoint.cpp <397:30 397:31>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<398:10> [b2PrismaticJoint.cpp <398:10 398:21>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <398:2 398:8>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float b2Abs<float>(float) [b2PrismaticJoint.cpp <398:25 398:29>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2PrismaticJoint.cpp <398:34 398:34>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<393:9> [b2PrismaticJoint.cpp <398:31 398:32>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<400:7> [b2PrismaticJoint.cpp <400:7 400:12>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> bool [b2PrismaticJoint.cpp <400:2 400:5>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<401:10> [b2PrismaticJoint.cpp <401:10 401:11>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <401:2 401:8>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> bool b2PrismaticJoint::m_enableLimit [b2PrismaticJoint.cpp <402:6 402:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<404:11> [b2PrismaticJoint.cpp <404:11 404:21>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <404:3 404:9>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <404:25 404:29>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<384:9> [b2PrismaticJoint.cpp <404:31 404:34>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<382:9> [b2PrismaticJoint.cpp <404:37 404:37>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float b2Abs<float>(float) [b2PrismaticJoint.cpp <405:7 405:11>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_upperTranslation [b2PrismaticJoint.cpp <405:13 405:30>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_lowerTranslation [b2PrismaticJoint.cpp <405:34 405:51>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<401:10> [b2PrismaticJoint.cpp <408:4 408:5>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float b2Clamp<float>(float, float, float) [b2PrismaticJoint.cpp <408:9 408:15>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<404:11> [b2PrismaticJoint.cpp <408:17 408:27>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<397:10> [b2PrismaticJoint.cpp <409:4 409:14>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float b2Max<float>(float, float) [b2PrismaticJoint.cpp <409:18 409:22>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<397:10> [b2PrismaticJoint.cpp <409:24 409:34>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float b2Abs<float>(float) [b2PrismaticJoint.cpp <409:37 409:41>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<404:11> [b2PrismaticJoint.cpp <409:43 409:53>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<400:7> [b2PrismaticJoint.cpp <410:4 410:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<404:11> [b2PrismaticJoint.cpp <412:12 412:22>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_lowerTranslation [b2PrismaticJoint.cpp <412:27 412:44>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<401:10> [b2PrismaticJoint.cpp <415:4 415:5>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float b2Clamp<float>(float, float, float) [b2PrismaticJoint.cpp <415:9 415:15>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<404:11> [b2PrismaticJoint.cpp <415:17 415:27>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_lowerTranslation [b2PrismaticJoint.cpp <415:31 415:48>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<397:10> [b2PrismaticJoint.cpp <416:4 416:14>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float b2Max<float>(float, float) [b2PrismaticJoint.cpp <416:18 416:22>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<397:10> [b2PrismaticJoint.cpp <416:24 416:34>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_lowerTranslation [b2PrismaticJoint.cpp <416:37 416:54>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<404:11> [b2PrismaticJoint.cpp <416:58 416:68>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<400:7> [b2PrismaticJoint.cpp <417:4 417:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<404:11> [b2PrismaticJoint.cpp <419:12 419:22>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_upperTranslation [b2PrismaticJoint.cpp <419:27 419:44>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<401:10> [b2PrismaticJoint.cpp <422:4 422:5>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float b2Clamp<float>(float, float, float) [b2PrismaticJoint.cpp <422:9 422:15>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<404:11> [b2PrismaticJoint.cpp <422:17 422:27>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_upperTranslation [b2PrismaticJoint.cpp <422:31 422:48>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<397:10> [b2PrismaticJoint.cpp <423:4 423:14>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float b2Max<float>(float, float) [b2PrismaticJoint.cpp <423:18 423:22>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<397:10> [b2PrismaticJoint.cpp <423:24 423:34>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<404:11> [b2PrismaticJoint.cpp <423:37 423:47>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PrismaticJoint::m_upperTranslation [b2PrismaticJoint.cpp <423:51 423:68>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<400:7> [b2PrismaticJoint.cpp <424:4 424:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<400:7> [b2PrismaticJoint.cpp <428:6 428:11>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<430:11> [b2PrismaticJoint.cpp <430:11 430:13>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <430:3 430:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<376:10> [b2PrismaticJoint.cpp <430:17 430:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<376:27> [b2PrismaticJoint.cpp <430:22 430:23>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<377:10> [b2PrismaticJoint.cpp <430:27 430:28>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<389:10> [b2PrismaticJoint.cpp <430:32 430:33>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<389:10> [b2PrismaticJoint.cpp <430:37 430:38>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<377:24> [b2PrismaticJoint.cpp <430:42 430:43>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<390:10> [b2PrismaticJoint.cpp <430:47 430:48>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<390:10> [b2PrismaticJoint.cpp <430:52 430:53>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<431:11> [b2PrismaticJoint.cpp <431:11 431:13>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <431:3 431:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<377:10> [b2PrismaticJoint.cpp <431:17 431:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<389:10> [b2PrismaticJoint.cpp <431:22 431:23>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<377:24> [b2PrismaticJoint.cpp <431:27 431:28>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<390:10> [b2PrismaticJoint.cpp <431:32 431:33>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<432:11> [b2PrismaticJoint.cpp <432:11 432:13>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <432:3 432:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<377:10> [b2PrismaticJoint.cpp <432:17 432:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<389:10> [b2PrismaticJoint.cpp <432:22 432:23>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<385:10> [b2PrismaticJoint.cpp <432:27 432:28>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<377:24> [b2PrismaticJoint.cpp <432:32 432:33>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<390:10> [b2PrismaticJoint.cpp <432:37 432:38>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<386:10> [b2PrismaticJoint.cpp <432:42 432:43>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<433:11> [b2PrismaticJoint.cpp <433:11 433:13>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <433:3 433:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<377:10> [b2PrismaticJoint.cpp <433:17 433:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<377:24> [b2PrismaticJoint.cpp <433:22 433:23>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<433:11> [b2PrismaticJoint.cpp <434:7 434:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<433:11> [b2PrismaticJoint.cpp <437:4 437:6>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<439:11> [b2PrismaticJoint.cpp <439:11 439:13>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <439:3 439:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<377:10> [b2PrismaticJoint.cpp <439:17 439:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<385:10> [b2PrismaticJoint.cpp <439:22 439:23>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<377:24> [b2PrismaticJoint.cpp <439:27 439:28>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<386:10> [b2PrismaticJoint.cpp <439:32 439:33>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<440:11> [b2PrismaticJoint.cpp <440:11 440:13>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <440:3 440:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<376:10> [b2PrismaticJoint.cpp <440:17 440:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<376:27> [b2PrismaticJoint.cpp <440:22 440:23>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<377:10> [b2PrismaticJoint.cpp <440:27 440:28>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<385:10> [b2PrismaticJoint.cpp <440:32 440:33>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<385:10> [b2PrismaticJoint.cpp <440:37 440:38>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<377:24> [b2PrismaticJoint.cpp <440:42 440:43>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<386:10> [b2PrismaticJoint.cpp <440:47 440:48>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<386:10> [b2PrismaticJoint.cpp <440:52 440:53>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<442:11> [b2PrismaticJoint.cpp <442:11 442:11>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Mat33 [b2PrismaticJoint.cpp <442:3 442:9>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Mat33::b2Mat33() [b2PrismaticJoint.cpp <442:11 442:11>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec3::Set(float32, float32, float32) [b2PrismaticJoint.cpp <443:8 443:10>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ex [b2PrismaticJoint.cpp <443:5 443:6>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<442:11> [b2PrismaticJoint.cpp <443:3 443:3>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<430:11> [b2PrismaticJoint.cpp <443:12 443:14>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<431:11> [b2PrismaticJoint.cpp <443:17 443:19>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<432:11> [b2PrismaticJoint.cpp <443:22 443:24>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec3::Set(float32, float32, float32) [b2PrismaticJoint.cpp <444:8 444:10>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ey [b2PrismaticJoint.cpp <444:5 444:6>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<442:11> [b2PrismaticJoint.cpp <444:3 444:3>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<431:11> [b2PrismaticJoint.cpp <444:12 444:14>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<433:11> [b2PrismaticJoint.cpp <444:17 444:19>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<439:11> [b2PrismaticJoint.cpp <444:22 444:24>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec3::Set(float32, float32, float32) [b2PrismaticJoint.cpp <445:8 445:10>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2PrismaticJoint.cpp <445:5 445:6>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<442:11> [b2PrismaticJoint.cpp <445:3 445:3>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<432:11> [b2PrismaticJoint.cpp <445:12 445:14>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<439:11> [b2PrismaticJoint.cpp <445:17 445:19>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<440:11> [b2PrismaticJoint.cpp <445:22 445:24>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<447:10> [b2PrismaticJoint.cpp <447:10 447:10>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 [b2PrismaticJoint.cpp <447:3 447:8>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec3::b2Vec3() [b2PrismaticJoint.cpp <447:10 447:10>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2PrismaticJoint.cpp <448:5 448:5>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<447:10> [b2PrismaticJoint.cpp <448:3 448:3>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2PrismaticJoint.cpp <448:12 448:12>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<393:9> [b2PrismaticJoint.cpp <448:9 448:10>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2PrismaticJoint.cpp <449:5 449:5>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<447:10> [b2PrismaticJoint.cpp <449:3 449:3>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2PrismaticJoint.cpp <449:12 449:12>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<393:9> [b2PrismaticJoint.cpp <449:9 449:10>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2PrismaticJoint.cpp <450:5 450:5>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<447:10> [b2PrismaticJoint.cpp <450:3 450:3>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<401:10> [b2PrismaticJoint.cpp <450:9 450:10>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 & b2Vec3::operator=(b2Vec3 &&) [b2PrismaticJoint.cpp <452:11 452:11>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<392:9> [b2PrismaticJoint.cpp <452:3 452:9>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const [b2PrismaticJoint.cpp <452:15 452:21>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<442:11> [b2PrismaticJoint.cpp <452:13 452:13>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 b2Vec3::operator-() const [b2PrismaticJoint.cpp <452:23 452:23>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<447:10> [b2PrismaticJoint.cpp <452:24 452:24>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<456:11> [b2PrismaticJoint.cpp <456:11 456:13>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <456:3 456:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<376:10> [b2PrismaticJoint.cpp <456:17 456:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<376:27> [b2PrismaticJoint.cpp <456:22 456:23>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<377:10> [b2PrismaticJoint.cpp <456:27 456:28>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<389:10> [b2PrismaticJoint.cpp <456:32 456:33>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<389:10> [b2PrismaticJoint.cpp <456:37 456:38>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<377:24> [b2PrismaticJoint.cpp <456:42 456:43>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<390:10> [b2PrismaticJoint.cpp <456:47 456:48>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<390:10> [b2PrismaticJoint.cpp <456:52 456:53>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<457:11> [b2PrismaticJoint.cpp <457:11 457:13>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <457:3 457:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<377:10> [b2PrismaticJoint.cpp <457:17 457:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<389:10> [b2PrismaticJoint.cpp <457:22 457:23>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<377:24> [b2PrismaticJoint.cpp <457:27 457:28>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<390:10> [b2PrismaticJoint.cpp <457:32 457:33>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<458:11> [b2PrismaticJoint.cpp <458:11 458:13>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <458:3 458:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<377:10> [b2PrismaticJoint.cpp <458:17 458:18>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<377:24> [b2PrismaticJoint.cpp <458:22 458:23>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<458:11> [b2PrismaticJoint.cpp <459:7 459:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<458:11> [b2PrismaticJoint.cpp <461:4 461:6>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<464:11> [b2PrismaticJoint.cpp <464:11 464:11>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Mat22 [b2PrismaticJoint.cpp <464:3 464:9>]
SYMBOL_FUNCTION void b2Mat22::b2Mat22()
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Mat22::b2Mat22() [b2PrismaticJoint.cpp <464:11 464:11>]
SYMBOL_FUNCTION void b2Vec2::Set(float32, float32)
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::Set(float32, float32) [b2PrismaticJoint.cpp <465:8 465:10>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mat22::ex [b2PrismaticJoint.cpp <465:5 465:6>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<464:11> [b2PrismaticJoint.cpp <465:3 465:3>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<456:11> [b2PrismaticJoint.cpp <465:12 465:14>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<457:11> [b2PrismaticJoint.cpp <465:17 465:19>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::Set(float32, float32) [b2PrismaticJoint.cpp <466:8 466:10>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mat22::ey [b2PrismaticJoint.cpp <466:5 466:6>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<464:11> [b2PrismaticJoint.cpp <466:3 466:3>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<457:11> [b2PrismaticJoint.cpp <466:12 466:14>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<458:11> [b2PrismaticJoint.cpp <466:17 466:19>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<468:10> [b2PrismaticJoint.cpp <468:10 468:17>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <468:3 468:8>]
SYMBOL_FUNCTION b2Vec2 b2Mat22::Solve(const b2Vec2 &) const
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mat22::Solve(const b2Vec2 &) const [b2PrismaticJoint.cpp <468:23 468:27>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<464:11> [b2PrismaticJoint.cpp <468:21 468:21>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Vec2::operator-() const [b2PrismaticJoint.cpp <468:29 468:29>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<393:9> [b2PrismaticJoint.cpp <468:30 468:31>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2PrismaticJoint.cpp <469:11 469:11>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<392:9> [b2PrismaticJoint.cpp <469:3 469:9>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2PrismaticJoint.cpp <469:24 469:24>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<468:10> [b2PrismaticJoint.cpp <469:15 469:22>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2PrismaticJoint.cpp <470:11 470:11>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<392:9> [b2PrismaticJoint.cpp <470:3 470:9>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2PrismaticJoint.cpp <470:24 470:24>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<468:10> [b2PrismaticJoint.cpp <470:15 470:22>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2PrismaticJoint.cpp <471:11 471:11>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<392:9> [b2PrismaticJoint.cpp <471:3 471:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<474:9> [b2PrismaticJoint.cpp <474:9 474:9>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2PrismaticJoint.cpp <474:2 474:7>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <474:30 474:30>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <474:23 474:23>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2PrismaticJoint.cpp <474:21 474:21>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<392:9> [b2PrismaticJoint.cpp <474:13 474:19>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<387:9> [b2PrismaticJoint.cpp <474:25 474:28>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <474:42 474:42>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2PrismaticJoint.cpp <474:40 474:40>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<392:9> [b2PrismaticJoint.cpp <474:32 474:38>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<384:9> [b2PrismaticJoint.cpp <474:44 474:47>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<475:10> [b2PrismaticJoint.cpp <475:10 475:11>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <475:2 475:8>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2PrismaticJoint.cpp <475:23 475:23>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<392:9> [b2PrismaticJoint.cpp <475:15 475:21>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<389:10> [b2PrismaticJoint.cpp <475:27 475:28>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2PrismaticJoint.cpp <475:40 475:40>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<392:9> [b2PrismaticJoint.cpp <475:32 475:38>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2PrismaticJoint.cpp <475:52 475:52>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<392:9> [b2PrismaticJoint.cpp <475:44 475:50>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<385:10> [b2PrismaticJoint.cpp <475:56 475:57>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<476:10> [b2PrismaticJoint.cpp <476:10 476:11>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PrismaticJoint.cpp <476:2 476:8>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2PrismaticJoint.cpp <476:23 476:23>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<392:9> [b2PrismaticJoint.cpp <476:15 476:21>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<390:10> [b2PrismaticJoint.cpp <476:27 476:28>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2PrismaticJoint.cpp <476:40 476:40>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<392:9> [b2PrismaticJoint.cpp <476:32 476:38>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2PrismaticJoint.cpp <476:52 476:52>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<392:9> [b2PrismaticJoint.cpp <476:44 476:50>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<386:10> [b2PrismaticJoint.cpp <476:56 476:57>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2PrismaticJoint.cpp <478:5 478:6>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<369:9> [b2PrismaticJoint.cpp <478:2 478:3>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <478:11 478:11>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<376:10> [b2PrismaticJoint.cpp <478:8 478:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<474:9> [b2PrismaticJoint.cpp <478:13 478:13>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<370:10> [b2PrismaticJoint.cpp <479:2 479:3>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<377:10> [b2PrismaticJoint.cpp <479:8 479:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<475:10> [b2PrismaticJoint.cpp <479:13 479:14>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2PrismaticJoint.cpp <480:5 480:6>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<371:9> [b2PrismaticJoint.cpp <480:2 480:3>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <480:11 480:11>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<376:27> [b2PrismaticJoint.cpp <480:8 480:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<474:9> [b2PrismaticJoint.cpp <480:13 480:13>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<372:10> [b2PrismaticJoint.cpp <481:2 481:3>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<377:24> [b2PrismaticJoint.cpp <481:8 481:9>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<476:10> [b2PrismaticJoint.cpp <481:13 481:14>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PrismaticJoint.cpp <483:29 483:29>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2PrismaticJoint.cpp <483:27 483:27>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PrismaticJoint.cpp <483:7 483:15>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<367:69> [b2PrismaticJoint.cpp <483:2 483:5>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexA [b2PrismaticJoint.cpp <483:17 483:24>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<369:9> [b2PrismaticJoint.cpp <483:31 483:32>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2PrismaticJoint.cpp <484:27 484:27>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PrismaticJoint.cpp <484:7 484:15>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<367:69> [b2PrismaticJoint.cpp <484:2 484:5>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexA [b2PrismaticJoint.cpp <484:17 484:24>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<370:10> [b2PrismaticJoint.cpp <484:31 484:32>]
REFERENCE_CALL bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PrismaticJoint.cpp <485:29 485:29>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2PrismaticJoint.cpp <485:27 485:27>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PrismaticJoint.cpp <485:7 485:15>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<367:69> [b2PrismaticJoint.cpp <485:2 485:5>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexB [b2PrismaticJoint.cpp <485:17 485:24>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<371:9> [b2PrismaticJoint.cpp <485:31 485:32>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2PrismaticJoint.cpp <486:27 486:27>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PrismaticJoint.cpp <486:7 486:15>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<367:69> [b2PrismaticJoint.cpp <486:2 486:5>]
REFERENCE_USAGE bool b2PrismaticJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2PrismaticJoint::m_indexB [b2PrismaticJoint.cpp <486:17 486:24>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<372:10> [b2PrismaticJoint.cpp <486:31 486:32>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<397:10> [b2PrismaticJoint.cpp <488:9 488:19>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<398:10> [b2PrismaticJoint.cpp <488:41 488:52>]
SYMBOL_METHOD public b2Vec2 b2PrismaticJoint::GetAnchorA() const [b2PrismaticJoint.cpp <491:1 <491:26 491:35> 494:1>]
SYMBOL_FUNCTION b2Vec2 b2Joint::GetAnchorA() const
REFERENCE_OVERRIDE b2Vec2 b2PrismaticJoint::GetAnchorA() const -> b2Vec2 b2Joint::GetAnchorA() const [b2PrismaticJoint.cpp <491:26 491:35>]
QUALIFIER: b2PrismaticJoint [b2PrismaticJoint.cpp <491:8 491:23>]
REFERENCE_TYPE_USAGE b2Vec2 b2PrismaticJoint::GetAnchorA() const -> b2Vec2 [b2PrismaticJoint.cpp <491:1 491:6>]
SYMBOL_FUNCTION b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const
REFERENCE_CALL b2Vec2 b2PrismaticJoint::GetAnchorA() const -> b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const [b2PrismaticJoint.cpp <493:18 493:30>]
REFERENCE_USAGE b2Vec2 b2PrismaticJoint::GetAnchorA() const -> b2Body * b2Joint::m_bodyA [b2PrismaticJoint.cpp <493:9 493:15>]
REFERENCE_USAGE b2Vec2 b2PrismaticJoint::GetAnchorA() const -> b2Vec2 b2PrismaticJoint::m_localAnchorA [b2PrismaticJoint.cpp <493:32 493:45>]
SYMBOL_METHOD public b2Vec2 b2PrismaticJoint::GetAnchorB() const [b2PrismaticJoint.cpp <496:1 <496:26 496:35> 499:1>]
SYMBOL_FUNCTION b2Vec2 b2Joint::GetAnchorB() const
REFERENCE_OVERRIDE b2Vec2 b2PrismaticJoint::GetAnchorB() const -> b2Vec2 b2Joint::GetAnchorB() const [b2PrismaticJoint.cpp <496:26 496:35>]
QUALIFIER: b2PrismaticJoint [b2PrismaticJoint.cpp <496:8 496:23>]
REFERENCE_TYPE_USAGE b2Vec2 b2PrismaticJoint::GetAnchorB() const -> b2Vec2 [b2PrismaticJoint.cpp <496:1 496:6>]
REFERENCE_CALL b2Vec2 b2PrismaticJoint::GetAnchorB() const -> b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const [b2PrismaticJoint.cpp <498:18 498:30>]
REFERENCE_USAGE b2Vec2 b2PrismaticJoint::GetAnchorB() const -> b2Body * b2Joint::m_bodyB [b2PrismaticJoint.cpp <498:9 498:15>]
REFERENCE_USAGE b2Vec2 b2PrismaticJoint::GetAnchorB() const -> b2Vec2 b2PrismaticJoint::m_localAnchorB [b2PrismaticJoint.cpp <498:32 498:45>]
SYMBOL_METHOD public b2Vec2 b2PrismaticJoint::GetReactionForce(float32) const [b2PrismaticJoint.cpp <501:1 <501:26 501:41> 504:1>]
SYMBOL_FUNCTION b2Vec2 b2Joint::GetReactionForce(float32) const
REFERENCE_OVERRIDE b2Vec2 b2PrismaticJoint::GetReactionForce(float32) const -> b2Vec2 b2Joint::GetReactionForce(float32) const [b2PrismaticJoint.cpp <501:26 501:41>]
QUALIFIER: b2PrismaticJoint [b2PrismaticJoint.cpp <501:8 501:23>]
REFERENCE_TYPE_USAGE b2Vec2 b2PrismaticJoint::GetReactionForce(float32) const -> b2Vec2 [b2PrismaticJoint.cpp <501:1 501:6>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<501:51> [b2PrismaticJoint.cpp <501:51 501:56>]
REFERENCE_TYPE_USAGE b2Vec2 b2PrismaticJoint::GetReactionForce(float32) const -> float32 [b2PrismaticJoint.cpp <501:43 501:49>]
REFERENCE_CALL b2Vec2 b2PrismaticJoint::GetReactionForce(float32) const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <503:16 503:16>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<501:51> [b2PrismaticJoint.cpp <503:9 503:14>]
REFERENCE_CALL b2Vec2 b2PrismaticJoint::GetReactionForce(float32) const -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <503:40 503:40>]
REFERENCE_CALL b2Vec2 b2PrismaticJoint::GetReactionForce(float32) const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <503:31 503:31>]
REFERENCE_USAGE b2Vec2 b2PrismaticJoint::GetReactionForce(float32) const -> float32 b2Vec3::x [b2PrismaticJoint.cpp <503:29 503:29>]
REFERENCE_USAGE b2Vec2 b2PrismaticJoint::GetReactionForce(float32) const -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <503:19 503:27>]
REFERENCE_USAGE b2Vec2 b2PrismaticJoint::GetReactionForce(float32) const -> b2Vec2 b2PrismaticJoint::m_perp [b2PrismaticJoint.cpp <503:33 503:38>]
REFERENCE_CALL b2Vec2 b2PrismaticJoint::GetReactionForce(float32) const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <503:73 503:73>]
REFERENCE_USAGE b2Vec2 b2PrismaticJoint::GetReactionForce(float32) const -> float32 b2PrismaticJoint::m_motorImpulse [b2PrismaticJoint.cpp <503:43 503:56>]
REFERENCE_USAGE b2Vec2 b2PrismaticJoint::GetReactionForce(float32) const -> float32 b2Vec3::z [b2PrismaticJoint.cpp <503:70 503:70>]
REFERENCE_USAGE b2Vec2 b2PrismaticJoint::GetReactionForce(float32) const -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <503:60 503:68>]
REFERENCE_USAGE b2Vec2 b2PrismaticJoint::GetReactionForce(float32) const -> b2Vec2 b2PrismaticJoint::m_axis [b2PrismaticJoint.cpp <503:75 503:80>]
SYMBOL_METHOD public float32 b2PrismaticJoint::GetReactionTorque(float32) const [b2PrismaticJoint.cpp <506:1 <506:27 506:43> 509:1>]
SYMBOL_FUNCTION float32 b2Joint::GetReactionTorque(float32) const
REFERENCE_OVERRIDE float32 b2PrismaticJoint::GetReactionTorque(float32) const -> float32 b2Joint::GetReactionTorque(float32) const [b2PrismaticJoint.cpp <506:27 506:43>]
QUALIFIER: b2PrismaticJoint [b2PrismaticJoint.cpp <506:9 506:24>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetReactionTorque(float32) const -> float32 [b2PrismaticJoint.cpp <506:1 506:7>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<506:53> [b2PrismaticJoint.cpp <506:53 506:58>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetReactionTorque(float32) const -> float32 [b2PrismaticJoint.cpp <506:45 506:51>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<506:53> [b2PrismaticJoint.cpp <508:9 508:14>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetReactionTorque(float32) const -> float32 b2Vec3::y [b2PrismaticJoint.cpp <508:28 508:28>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetReactionTorque(float32) const -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <508:18 508:26>]
SYMBOL_METHOD public float32 b2PrismaticJoint::GetJointTranslation() const [b2PrismaticJoint.cpp <511:1 <511:27 511:45> 520:1>]
QUALIFIER: b2PrismaticJoint [b2PrismaticJoint.cpp <511:9 511:24>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetJointTranslation() const -> float32 [b2PrismaticJoint.cpp <511:1 511:7>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<513:9> [b2PrismaticJoint.cpp <513:9 513:10>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetJointTranslation() const -> b2Vec2 [b2PrismaticJoint.cpp <513:2 513:7>]
REFERENCE_CALL float32 b2PrismaticJoint::GetJointTranslation() const -> b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const [b2PrismaticJoint.cpp <513:23 513:35>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointTranslation() const -> b2Body * b2Joint::m_bodyA [b2PrismaticJoint.cpp <513:14 513:20>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointTranslation() const -> b2Vec2 b2PrismaticJoint::m_localAnchorA [b2PrismaticJoint.cpp <513:37 513:50>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<514:9> [b2PrismaticJoint.cpp <514:9 514:10>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetJointTranslation() const -> b2Vec2 [b2PrismaticJoint.cpp <514:2 514:7>]
REFERENCE_CALL float32 b2PrismaticJoint::GetJointTranslation() const -> b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const [b2PrismaticJoint.cpp <514:23 514:35>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointTranslation() const -> b2Body * b2Joint::m_bodyB [b2PrismaticJoint.cpp <514:14 514:20>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointTranslation() const -> b2Vec2 b2PrismaticJoint::m_localAnchorB [b2PrismaticJoint.cpp <514:37 514:50>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<515:9> [b2PrismaticJoint.cpp <515:9 515:9>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetJointTranslation() const -> b2Vec2 [b2PrismaticJoint.cpp <515:2 515:7>]
REFERENCE_CALL float32 b2PrismaticJoint::GetJointTranslation() const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <515:16 515:16>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<514:9> [b2PrismaticJoint.cpp <515:13 515:14>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<513:9> [b2PrismaticJoint.cpp <515:18 515:19>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<516:9> [b2PrismaticJoint.cpp <516:9 516:12>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetJointTranslation() const -> b2Vec2 [b2PrismaticJoint.cpp <516:2 516:7>]
SYMBOL_FUNCTION b2Vec2 b2Body::GetWorldVector(const b2Vec2 &) const
REFERENCE_CALL float32 b2PrismaticJoint::GetJointTranslation() const -> b2Vec2 b2Body::GetWorldVector(const b2Vec2 &) const [b2PrismaticJoint.cpp <516:25 516:38>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointTranslation() const -> b2Body * b2Joint::m_bodyA [b2PrismaticJoint.cpp <516:16 516:22>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointTranslation() const -> b2Vec2 b2PrismaticJoint::m_localXAxisA [b2PrismaticJoint.cpp <516:40 516:52>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<518:10> [b2PrismaticJoint.cpp <518:10 518:20>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetJointTranslation() const -> float32 [b2PrismaticJoint.cpp <518:2 518:8>]
REFERENCE_CALL float32 b2PrismaticJoint::GetJointTranslation() const -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <518:24 518:28>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<515:9> [b2PrismaticJoint.cpp <518:30 518:30>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<516:9> [b2PrismaticJoint.cpp <518:33 518:36>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<518:10> [b2PrismaticJoint.cpp <519:9 519:19>]
SYMBOL_METHOD public float32 b2PrismaticJoint::GetJointSpeed() const [b2PrismaticJoint.cpp <522:1 <522:27 522:39> 541:1>]
QUALIFIER: b2PrismaticJoint [b2PrismaticJoint.cpp <522:9 522:24>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> float32 [b2PrismaticJoint.cpp <522:1 522:7>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<524:10> [b2PrismaticJoint.cpp <524:10 524:11>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Body [b2PrismaticJoint.cpp <524:2 524:7>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Body * b2Joint::m_bodyA [b2PrismaticJoint.cpp <524:15 524:21>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<525:10> [b2PrismaticJoint.cpp <525:10 525:11>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Body [b2PrismaticJoint.cpp <525:2 525:7>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Body * b2Joint::m_bodyB [b2PrismaticJoint.cpp <525:15 525:21>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<527:9> [b2PrismaticJoint.cpp <527:9 527:10>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 [b2PrismaticJoint.cpp <527:2 527:7>]
REFERENCE_CALL float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2PrismaticJoint.cpp <527:14 527:18>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Rot b2Transform::q [b2PrismaticJoint.cpp <527:29 527:29>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Transform b2Body::m_xf [b2PrismaticJoint.cpp <527:24 527:27>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<524:10> [b2PrismaticJoint.cpp <527:20 527:21>]
REFERENCE_CALL float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <527:47 527:47>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 b2PrismaticJoint::m_localAnchorA [b2PrismaticJoint.cpp <527:32 527:45>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 b2Sweep::localCenter [b2PrismaticJoint.cpp <527:61 527:71>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Sweep b2Body::m_sweep [b2PrismaticJoint.cpp <527:53 527:59>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<524:10> [b2PrismaticJoint.cpp <527:49 527:50>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<528:9> [b2PrismaticJoint.cpp <528:9 528:10>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 [b2PrismaticJoint.cpp <528:2 528:7>]
REFERENCE_CALL float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2PrismaticJoint.cpp <528:14 528:18>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Rot b2Transform::q [b2PrismaticJoint.cpp <528:29 528:29>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Transform b2Body::m_xf [b2PrismaticJoint.cpp <528:24 528:27>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<525:10> [b2PrismaticJoint.cpp <528:20 528:21>]
REFERENCE_CALL float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <528:47 528:47>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 b2PrismaticJoint::m_localAnchorB [b2PrismaticJoint.cpp <528:32 528:45>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 b2Sweep::localCenter [b2PrismaticJoint.cpp <528:61 528:71>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Sweep b2Body::m_sweep [b2PrismaticJoint.cpp <528:53 528:59>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<525:10> [b2PrismaticJoint.cpp <528:49 528:50>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<529:9> [b2PrismaticJoint.cpp <529:9 529:10>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 [b2PrismaticJoint.cpp <529:2 529:7>]
REFERENCE_CALL float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <529:28 529:28>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 b2Sweep::c [b2PrismaticJoint.cpp <529:26 529:26>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Sweep b2Body::m_sweep [b2PrismaticJoint.cpp <529:18 529:24>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<524:10> [b2PrismaticJoint.cpp <529:14 529:15>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<527:9> [b2PrismaticJoint.cpp <529:30 529:31>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<530:9> [b2PrismaticJoint.cpp <530:9 530:10>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 [b2PrismaticJoint.cpp <530:2 530:7>]
REFERENCE_CALL float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <530:28 530:28>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 b2Sweep::c [b2PrismaticJoint.cpp <530:26 530:26>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Sweep b2Body::m_sweep [b2PrismaticJoint.cpp <530:18 530:24>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<525:10> [b2PrismaticJoint.cpp <530:14 530:15>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<528:9> [b2PrismaticJoint.cpp <530:30 530:31>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<531:9> [b2PrismaticJoint.cpp <531:9 531:9>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 [b2PrismaticJoint.cpp <531:2 531:7>]
REFERENCE_CALL float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <531:16 531:16>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<530:9> [b2PrismaticJoint.cpp <531:13 531:14>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<529:9> [b2PrismaticJoint.cpp <531:18 531:19>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<532:9> [b2PrismaticJoint.cpp <532:9 532:12>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 [b2PrismaticJoint.cpp <532:2 532:7>]
REFERENCE_CALL float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2PrismaticJoint.cpp <532:16 532:20>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Rot b2Transform::q [b2PrismaticJoint.cpp <532:31 532:31>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Transform b2Body::m_xf [b2PrismaticJoint.cpp <532:26 532:29>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<524:10> [b2PrismaticJoint.cpp <532:22 532:23>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 b2PrismaticJoint::m_localXAxisA [b2PrismaticJoint.cpp <532:34 532:46>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<534:9> [b2PrismaticJoint.cpp <534:9 534:10>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 [b2PrismaticJoint.cpp <534:2 534:7>]
REFERENCE_CALL float32 b2PrismaticJoint::GetJointSpeed() const -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PrismaticJoint.cpp <534:18 534:33>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 b2Body::m_linearVelocity [b2PrismaticJoint.cpp <534:18 534:33>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<524:10> [b2PrismaticJoint.cpp <534:14 534:15>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<535:9> [b2PrismaticJoint.cpp <535:9 535:10>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 [b2PrismaticJoint.cpp <535:2 535:7>]
REFERENCE_CALL float32 b2PrismaticJoint::GetJointSpeed() const -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PrismaticJoint.cpp <535:18 535:33>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 b2Body::m_linearVelocity [b2PrismaticJoint.cpp <535:18 535:33>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<525:10> [b2PrismaticJoint.cpp <535:14 535:15>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<536:10> [b2PrismaticJoint.cpp <536:10 536:11>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> float32 [b2PrismaticJoint.cpp <536:2 536:8>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> float32 b2Body::m_angularVelocity [b2PrismaticJoint.cpp <536:19 536:35>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<524:10> [b2PrismaticJoint.cpp <536:15 536:16>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<537:10> [b2PrismaticJoint.cpp <537:10 537:11>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> float32 [b2PrismaticJoint.cpp <537:2 537:8>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> float32 b2Body::m_angularVelocity [b2PrismaticJoint.cpp <537:19 537:35>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<525:10> [b2PrismaticJoint.cpp <537:15 537:16>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<539:10> [b2PrismaticJoint.cpp <539:10 539:14>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetJointSpeed() const -> float32 [b2PrismaticJoint.cpp <539:2 539:8>]
REFERENCE_CALL float32 b2PrismaticJoint::GetJointSpeed() const -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <539:18 539:22>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<531:9> [b2PrismaticJoint.cpp <539:24 539:24>]
REFERENCE_CALL float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 b2Cross(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <539:27 539:33>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<536:10> [b2PrismaticJoint.cpp <539:35 539:36>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<532:9> [b2PrismaticJoint.cpp <539:39 539:42>]
REFERENCE_CALL float32 b2PrismaticJoint::GetJointSpeed() const -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <539:48 539:52>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<532:9> [b2PrismaticJoint.cpp <539:54 539:57>]
REFERENCE_CALL float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <539:86 539:86>]
REFERENCE_CALL float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <539:81 539:81>]
REFERENCE_CALL float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PrismaticJoint.cpp <539:63 539:63>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<535:9> [b2PrismaticJoint.cpp <539:60 539:61>]
REFERENCE_CALL float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 b2Cross(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <539:65 539:71>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<537:10> [b2PrismaticJoint.cpp <539:73 539:74>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<528:9> [b2PrismaticJoint.cpp <539:77 539:78>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<534:9> [b2PrismaticJoint.cpp <539:83 539:84>]
REFERENCE_CALL float32 b2PrismaticJoint::GetJointSpeed() const -> b2Vec2 b2Cross(float32, const b2Vec2 &) [b2PrismaticJoint.cpp <539:88 539:94>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<536:10> [b2PrismaticJoint.cpp <539:96 539:97>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<527:9> [b2PrismaticJoint.cpp <539:100 539:101>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<539:10> [b2PrismaticJoint.cpp <540:9 540:13>]
SYMBOL_METHOD public bool b2PrismaticJoint::IsLimitEnabled() const [b2PrismaticJoint.cpp <543:1 <543:24 543:37> 546:1>]
QUALIFIER: b2PrismaticJoint [b2PrismaticJoint.cpp <543:6 543:21>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::IsLimitEnabled() const -> bool [b2PrismaticJoint.cpp <543:1 543:4>]
REFERENCE_USAGE bool b2PrismaticJoint::IsLimitEnabled() const -> bool b2PrismaticJoint::m_enableLimit [b2PrismaticJoint.cpp <545:9 545:21>]
SYMBOL_METHOD public void b2PrismaticJoint::EnableLimit(bool) [b2PrismaticJoint.cpp <548:1 <548:24 548:34> 557:1>]
QUALIFIER: b2PrismaticJoint [b2PrismaticJoint.cpp <548:6 548:21>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::EnableLimit(bool) -> void [b2PrismaticJoint.cpp <548:1 548:4>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<548:41> [b2PrismaticJoint.cpp <548:41 548:44>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::EnableLimit(bool) -> bool [b2PrismaticJoint.cpp <548:36 548:39>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<548:41> [b2PrismaticJoint.cpp <550:6 550:9>]
REFERENCE_USAGE void b2PrismaticJoint::EnableLimit(bool) -> bool b2PrismaticJoint::m_enableLimit [b2PrismaticJoint.cpp <550:14 550:26>]
SYMBOL_FUNCTION void b2Body::SetAwake(bool)
REFERENCE_CALL void b2PrismaticJoint::EnableLimit(bool) -> void b2Body::SetAwake(bool) [b2PrismaticJoint.cpp <552:12 552:19>]
REFERENCE_USAGE void b2PrismaticJoint::EnableLimit(bool) -> b2Body * b2Joint::m_bodyA [b2PrismaticJoint.cpp <552:3 552:9>]
REFERENCE_CALL void b2PrismaticJoint::EnableLimit(bool) -> void b2Body::SetAwake(bool) [b2PrismaticJoint.cpp <553:12 553:19>]
REFERENCE_USAGE void b2PrismaticJoint::EnableLimit(bool) -> b2Body * b2Joint::m_bodyB [b2PrismaticJoint.cpp <553:3 553:9>]
REFERENCE_USAGE void b2PrismaticJoint::EnableLimit(bool) -> bool b2PrismaticJoint::m_enableLimit [b2PrismaticJoint.cpp <554:3 554:15>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<548:41> [b2PrismaticJoint.cpp <554:19 554:22>]
REFERENCE_USAGE void b2PrismaticJoint::EnableLimit(bool) -> float32 b2Vec3::z [b2PrismaticJoint.cpp <555:13 555:13>]
REFERENCE_USAGE void b2PrismaticJoint::EnableLimit(bool) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <555:3 555:11>]
SYMBOL_METHOD public float32 b2PrismaticJoint::GetLowerLimit() const [b2PrismaticJoint.cpp <559:1 <559:27 559:39> 562:1>]
QUALIFIER: b2PrismaticJoint [b2PrismaticJoint.cpp <559:9 559:24>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetLowerLimit() const -> float32 [b2PrismaticJoint.cpp <559:1 559:7>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetLowerLimit() const -> float32 b2PrismaticJoint::m_lowerTranslation [b2PrismaticJoint.cpp <561:9 561:26>]
SYMBOL_METHOD public float32 b2PrismaticJoint::GetUpperLimit() const [b2PrismaticJoint.cpp <564:1 <564:27 564:39> 567:1>]
QUALIFIER: b2PrismaticJoint [b2PrismaticJoint.cpp <564:9 564:24>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetUpperLimit() const -> float32 [b2PrismaticJoint.cpp <564:1 564:7>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetUpperLimit() const -> float32 b2PrismaticJoint::m_upperTranslation [b2PrismaticJoint.cpp <566:9 566:26>]
SYMBOL_METHOD public void b2PrismaticJoint::SetLimits(float32, float32) [b2PrismaticJoint.cpp <569:1 <569:24 569:32> 580:1>]
QUALIFIER: b2PrismaticJoint [b2PrismaticJoint.cpp <569:6 569:21>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SetLimits(float32, float32) -> void [b2PrismaticJoint.cpp <569:1 569:4>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<569:42> [b2PrismaticJoint.cpp <569:42 569:46>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SetLimits(float32, float32) -> float32 [b2PrismaticJoint.cpp <569:34 569:40>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<569:57> [b2PrismaticJoint.cpp <569:57 569:61>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SetLimits(float32, float32) -> float32 [b2PrismaticJoint.cpp <569:49 569:55>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<569:42> [b2PrismaticJoint.cpp <571:11 571:15>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<569:57> [b2PrismaticJoint.cpp <571:20 571:24>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<569:42> [b2PrismaticJoint.cpp <572:6 572:10>]
REFERENCE_USAGE void b2PrismaticJoint::SetLimits(float32, float32) -> float32 b2PrismaticJoint::m_lowerTranslation [b2PrismaticJoint.cpp <572:15 572:32>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<569:57> [b2PrismaticJoint.cpp <572:37 572:41>]
REFERENCE_USAGE void b2PrismaticJoint::SetLimits(float32, float32) -> float32 b2PrismaticJoint::m_upperTranslation [b2PrismaticJoint.cpp <572:46 572:63>]
REFERENCE_CALL void b2PrismaticJoint::SetLimits(float32, float32) -> void b2Body::SetAwake(bool) [b2PrismaticJoint.cpp <574:12 574:19>]
REFERENCE_USAGE void b2PrismaticJoint::SetLimits(float32, float32) -> b2Body * b2Joint::m_bodyA [b2PrismaticJoint.cpp <574:3 574:9>]
REFERENCE_CALL void b2PrismaticJoint::SetLimits(float32, float32) -> void b2Body::SetAwake(bool) [b2PrismaticJoint.cpp <575:12 575:19>]
REFERENCE_USAGE void b2PrismaticJoint::SetLimits(float32, float32) -> b2Body * b2Joint::m_bodyB [b2PrismaticJoint.cpp <575:3 575:9>]
REFERENCE_USAGE void b2PrismaticJoint::SetLimits(float32, float32) -> float32 b2PrismaticJoint::m_lowerTranslation [b2PrismaticJoint.cpp <576:3 576:20>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<569:42> [b2PrismaticJoint.cpp <576:24 576:28>]
REFERENCE_USAGE void b2PrismaticJoint::SetLimits(float32, float32) -> float32 b2PrismaticJoint::m_upperTranslation [b2PrismaticJoint.cpp <577:3 577:20>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<569:57> [b2PrismaticJoint.cpp <577:24 577:28>]
REFERENCE_USAGE void b2PrismaticJoint::SetLimits(float32, float32) -> float32 b2Vec3::z [b2PrismaticJoint.cpp <578:13 578:13>]
REFERENCE_USAGE void b2PrismaticJoint::SetLimits(float32, float32) -> b2Vec3 b2PrismaticJoint::m_impulse [b2PrismaticJoint.cpp <578:3 578:11>]
SYMBOL_METHOD public bool b2PrismaticJoint::IsMotorEnabled() const [b2PrismaticJoint.cpp <582:1 <582:24 582:37> 585:1>]
QUALIFIER: b2PrismaticJoint [b2PrismaticJoint.cpp <582:6 582:21>]
REFERENCE_TYPE_USAGE bool b2PrismaticJoint::IsMotorEnabled() const -> bool [b2PrismaticJoint.cpp <582:1 582:4>]
REFERENCE_USAGE bool b2PrismaticJoint::IsMotorEnabled() const -> bool b2PrismaticJoint::m_enableMotor [b2PrismaticJoint.cpp <584:9 584:21>]
SYMBOL_METHOD public void b2PrismaticJoint::EnableMotor(bool) [b2PrismaticJoint.cpp <587:1 <587:24 587:34> 595:1>]
QUALIFIER: b2PrismaticJoint [b2PrismaticJoint.cpp <587:6 587:21>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::EnableMotor(bool) -> void [b2PrismaticJoint.cpp <587:1 587:4>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<587:41> [b2PrismaticJoint.cpp <587:41 587:44>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::EnableMotor(bool) -> bool [b2PrismaticJoint.cpp <587:36 587:39>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<587:41> [b2PrismaticJoint.cpp <589:6 589:9>]
REFERENCE_USAGE void b2PrismaticJoint::EnableMotor(bool) -> bool b2PrismaticJoint::m_enableMotor [b2PrismaticJoint.cpp <589:14 589:26>]
REFERENCE_CALL void b2PrismaticJoint::EnableMotor(bool) -> void b2Body::SetAwake(bool) [b2PrismaticJoint.cpp <591:12 591:19>]
REFERENCE_USAGE void b2PrismaticJoint::EnableMotor(bool) -> b2Body * b2Joint::m_bodyA [b2PrismaticJoint.cpp <591:3 591:9>]
REFERENCE_CALL void b2PrismaticJoint::EnableMotor(bool) -> void b2Body::SetAwake(bool) [b2PrismaticJoint.cpp <592:12 592:19>]
REFERENCE_USAGE void b2PrismaticJoint::EnableMotor(bool) -> b2Body * b2Joint::m_bodyB [b2PrismaticJoint.cpp <592:3 592:9>]
REFERENCE_USAGE void b2PrismaticJoint::EnableMotor(bool) -> bool b2PrismaticJoint::m_enableMotor [b2PrismaticJoint.cpp <593:3 593:15>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<587:41> [b2PrismaticJoint.cpp <593:19 593:22>]
SYMBOL_METHOD public void b2PrismaticJoint::SetMotorSpeed(float32) [b2PrismaticJoint.cpp <597:1 <597:24 597:36> 605:1>]
QUALIFIER: b2PrismaticJoint [b2PrismaticJoint.cpp <597:6 597:21>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SetMotorSpeed(float32) -> void [b2PrismaticJoint.cpp <597:1 597:4>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<597:46> [b2PrismaticJoint.cpp <597:46 597:50>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SetMotorSpeed(float32) -> float32 [b2PrismaticJoint.cpp <597:38 597:44>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<597:46> [b2PrismaticJoint.cpp <599:6 599:10>]
REFERENCE_USAGE void b2PrismaticJoint::SetMotorSpeed(float32) -> float32 b2PrismaticJoint::m_motorSpeed [b2PrismaticJoint.cpp <599:15 599:26>]
REFERENCE_CALL void b2PrismaticJoint::SetMotorSpeed(float32) -> void b2Body::SetAwake(bool) [b2PrismaticJoint.cpp <601:12 601:19>]
REFERENCE_USAGE void b2PrismaticJoint::SetMotorSpeed(float32) -> b2Body * b2Joint::m_bodyA [b2PrismaticJoint.cpp <601:3 601:9>]
REFERENCE_CALL void b2PrismaticJoint::SetMotorSpeed(float32) -> void b2Body::SetAwake(bool) [b2PrismaticJoint.cpp <602:12 602:19>]
REFERENCE_USAGE void b2PrismaticJoint::SetMotorSpeed(float32) -> b2Body * b2Joint::m_bodyB [b2PrismaticJoint.cpp <602:3 602:9>]
REFERENCE_USAGE void b2PrismaticJoint::SetMotorSpeed(float32) -> float32 b2PrismaticJoint::m_motorSpeed [b2PrismaticJoint.cpp <603:3 603:14>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<597:46> [b2PrismaticJoint.cpp <603:18 603:22>]
SYMBOL_METHOD public void b2PrismaticJoint::SetMaxMotorForce(float32) [b2PrismaticJoint.cpp <607:1 <607:24 607:39> 615:1>]
QUALIFIER: b2PrismaticJoint [b2PrismaticJoint.cpp <607:6 607:21>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SetMaxMotorForce(float32) -> void [b2PrismaticJoint.cpp <607:1 607:4>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<607:49> [b2PrismaticJoint.cpp <607:49 607:53>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::SetMaxMotorForce(float32) -> float32 [b2PrismaticJoint.cpp <607:41 607:47>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<607:49> [b2PrismaticJoint.cpp <609:6 609:10>]
REFERENCE_USAGE void b2PrismaticJoint::SetMaxMotorForce(float32) -> float32 b2PrismaticJoint::m_maxMotorForce [b2PrismaticJoint.cpp <609:15 609:29>]
REFERENCE_CALL void b2PrismaticJoint::SetMaxMotorForce(float32) -> void b2Body::SetAwake(bool) [b2PrismaticJoint.cpp <611:12 611:19>]
REFERENCE_USAGE void b2PrismaticJoint::SetMaxMotorForce(float32) -> b2Body * b2Joint::m_bodyA [b2PrismaticJoint.cpp <611:3 611:9>]
REFERENCE_CALL void b2PrismaticJoint::SetMaxMotorForce(float32) -> void b2Body::SetAwake(bool) [b2PrismaticJoint.cpp <612:12 612:19>]
REFERENCE_USAGE void b2PrismaticJoint::SetMaxMotorForce(float32) -> b2Body * b2Joint::m_bodyB [b2PrismaticJoint.cpp <612:3 612:9>]
REFERENCE_USAGE void b2PrismaticJoint::SetMaxMotorForce(float32) -> float32 b2PrismaticJoint::m_maxMotorForce [b2PrismaticJoint.cpp <613:3 613:17>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<607:49> [b2PrismaticJoint.cpp <613:21 613:25>]
SYMBOL_METHOD public float32 b2PrismaticJoint::GetMotorForce(float32) const [b2PrismaticJoint.cpp <617:1 <617:27 617:39> 620:1>]
QUALIFIER: b2PrismaticJoint [b2PrismaticJoint.cpp <617:9 617:24>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetMotorForce(float32) const -> float32 [b2PrismaticJoint.cpp <617:1 617:7>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<617:49> [b2PrismaticJoint.cpp <617:49 617:54>]
REFERENCE_TYPE_USAGE float32 b2PrismaticJoint::GetMotorForce(float32) const -> float32 [b2PrismaticJoint.cpp <617:41 617:47>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<617:49> [b2PrismaticJoint.cpp <619:9 619:14>]
REFERENCE_USAGE float32 b2PrismaticJoint::GetMotorForce(float32) const -> float32 b2PrismaticJoint::m_motorImpulse [b2PrismaticJoint.cpp <619:18 619:31>]
SYMBOL_METHOD public void b2PrismaticJoint::Dump() [b2PrismaticJoint.cpp <622:1 <622:24 622:27> 642:1>]
SYMBOL_FUNCTION void b2Joint::Dump()
REFERENCE_OVERRIDE void b2PrismaticJoint::Dump() -> void b2Joint::Dump() [b2PrismaticJoint.cpp <622:24 622:27>]
QUALIFIER: b2PrismaticJoint [b2PrismaticJoint.cpp <622:6 622:21>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::Dump() -> void [b2PrismaticJoint.cpp <622:1 622:4>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<624:8> [b2PrismaticJoint.cpp <624:8 624:13>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::Dump() -> int32 [b2PrismaticJoint.cpp <624:2 624:6>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> int32 b2Body::m_islandIndex [b2PrismaticJoint.cpp <624:26 624:38>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> b2Body * b2Joint::m_bodyA [b2PrismaticJoint.cpp <624:17 624:23>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<625:8> [b2PrismaticJoint.cpp <625:8 625:13>]
REFERENCE_TYPE_USAGE void b2PrismaticJoint::Dump() -> int32 [b2PrismaticJoint.cpp <625:2 625:6>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> int32 b2Body::m_islandIndex [b2PrismaticJoint.cpp <625:26 625:38>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> b2Body * b2Joint::m_bodyB [b2PrismaticJoint.cpp <625:17 625:23>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2PrismaticJoint::Dump() -> void b2Log(const char *) [b2PrismaticJoint.cpp <627:2 627:6>]
REFERENCE_CALL void b2PrismaticJoint::Dump() -> void b2Log(const char *) [b2PrismaticJoint.cpp <628:2 628:6>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<624:8> [b2PrismaticJoint.cpp <628:38 628:43>]
REFERENCE_CALL void b2PrismaticJoint::Dump() -> void b2Log(const char *) [b2PrismaticJoint.cpp <629:2 629:6>]
LOCAL_SYMBOL: b2PrismaticJoint.cpp<625:8> [b2PrismaticJoint.cpp <629:38 629:43>]
REFERENCE_CALL void b2PrismaticJoint::Dump() -> void b2Log(const char *) [b2PrismaticJoint.cpp <630:2 630:6>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> bool b2Joint::m_collideConnected [b2PrismaticJoint.cpp <630:47 630:64>]
REFERENCE_CALL void b2PrismaticJoint::Dump() -> void b2Log(const char *) [b2PrismaticJoint.cpp <631:2 631:6>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> float32 b2Vec2::x [b2PrismaticJoint.cpp <631:69 631:69>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> b2Vec2 b2PrismaticJoint::m_localAnchorA [b2PrismaticJoint.cpp <631:54 631:67>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> float32 b2Vec2::y [b2PrismaticJoint.cpp <631:87 631:87>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> b2Vec2 b2PrismaticJoint::m_localAnchorA [b2PrismaticJoint.cpp <631:72 631:85>]
REFERENCE_CALL void b2PrismaticJoint::Dump() -> void b2Log(const char *) [b2PrismaticJoint.cpp <632:2 632:6>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> float32 b2Vec2::x [b2PrismaticJoint.cpp <632:69 632:69>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> b2Vec2 b2PrismaticJoint::m_localAnchorB [b2PrismaticJoint.cpp <632:54 632:67>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> float32 b2Vec2::y [b2PrismaticJoint.cpp <632:87 632:87>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> b2Vec2 b2PrismaticJoint::m_localAnchorB [b2PrismaticJoint.cpp <632:72 632:85>]
REFERENCE_CALL void b2PrismaticJoint::Dump() -> void b2Log(const char *) [b2PrismaticJoint.cpp <633:2 633:6>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> float32 b2Vec2::x [b2PrismaticJoint.cpp <633:66 633:66>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> b2Vec2 b2PrismaticJoint::m_localXAxisA [b2PrismaticJoint.cpp <633:52 633:64>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> float32 b2Vec2::y [b2PrismaticJoint.cpp <633:83 633:83>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> b2Vec2 b2PrismaticJoint::m_localXAxisA [b2PrismaticJoint.cpp <633:69 633:81>]
REFERENCE_CALL void b2PrismaticJoint::Dump() -> void b2Log(const char *) [b2PrismaticJoint.cpp <634:2 634:6>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> float32 b2PrismaticJoint::m_referenceAngle [b2PrismaticJoint.cpp <634:44 634:59>]
REFERENCE_CALL void b2PrismaticJoint::Dump() -> void b2Log(const char *) [b2PrismaticJoint.cpp <635:2 635:6>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> bool b2PrismaticJoint::m_enableLimit [b2PrismaticJoint.cpp <635:42 635:54>]
REFERENCE_CALL void b2PrismaticJoint::Dump() -> void b2Log(const char *) [b2PrismaticJoint.cpp <636:2 636:6>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> float32 b2PrismaticJoint::m_lowerTranslation [b2PrismaticJoint.cpp <636:46 636:63>]
REFERENCE_CALL void b2PrismaticJoint::Dump() -> void b2Log(const char *) [b2PrismaticJoint.cpp <637:2 637:6>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> float32 b2PrismaticJoint::m_upperTranslation [b2PrismaticJoint.cpp <637:46 637:63>]
REFERENCE_CALL void b2PrismaticJoint::Dump() -> void b2Log(const char *) [b2PrismaticJoint.cpp <638:2 638:6>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> bool b2PrismaticJoint::m_enableMotor [b2PrismaticJoint.cpp <638:42 638:54>]
REFERENCE_CALL void b2PrismaticJoint::Dump() -> void b2Log(const char *) [b2PrismaticJoint.cpp <639:2 639:6>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> float32 b2PrismaticJoint::m_motorSpeed [b2PrismaticJoint.cpp <639:40 639:51>]
REFERENCE_CALL void b2PrismaticJoint::Dump() -> void b2Log(const char *) [b2PrismaticJoint.cpp <640:2 640:6>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> float32 b2PrismaticJoint::m_maxMotorForce [b2PrismaticJoint.cpp <640:43 640:57>]
REFERENCE_CALL void b2PrismaticJoint::Dump() -> void b2Log(const char *) [b2PrismaticJoint.cpp <641:2 641:6>]
REFERENCE_USAGE void b2PrismaticJoint::Dump() -> int32 b2Joint::m_index [b2PrismaticJoint.cpp <641:55 641:61>]
