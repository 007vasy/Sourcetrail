FILE: b2WeldJoint.cpp
FILE: b2WeldJoint.cpp
COMMENT: comment [b2WeldJoint.cpp <1:1 17:3>]
FILE: b2WeldJoint.cpp
FILE: b2WeldJoint.cpp
FILE: b2WeldJoint.cpp
COMMENT: comment [b2WeldJoint.cpp <23:1 23:29>]
COMMENT: comment [b2WeldJoint.cpp <24:1 24:15>]
COMMENT: comment [b2WeldJoint.cpp <25:1 25:18>]
COMMENT: comment [b2WeldJoint.cpp <26:1 26:50>]
COMMENT: comment [b2WeldJoint.cpp <27:1 27:32>]
COMMENT: comment [b2WeldJoint.cpp <28:1 28:18>]
COMMENT: comment [b2WeldJoint.cpp <29:1 29:44>]
COMMENT: comment [b2WeldJoint.cpp <31:1 31:20>]
COMMENT: comment [b2WeldJoint.cpp <32:1 32:40>]
COMMENT: comment [b2WeldJoint.cpp <33:1 33:18>]
COMMENT: comment [b2WeldJoint.cpp <34:1 34:22>]
COMMENT: comment [b2WeldJoint.cpp <35:1 35:21>]
COMMENT: comment [b2WeldJoint.cpp <82:2 82:32>]
COMMENT: comment [b2WeldJoint.cpp <83:2 83:32>]
COMMENT: comment [b2WeldJoint.cpp <84:2 84:23>]
COMMENT: comment [b2WeldJoint.cpp <86:2 86:11>]
COMMENT: comment [b2WeldJoint.cpp <87:2 87:85>]
COMMENT: comment [b2WeldJoint.cpp <88:2 88:85>]
COMMENT: comment [b2WeldJoint.cpp <89:2 89:85>]
COMMENT: comment [b2WeldJoint.cpp <114:3 114:15>]
REFERENCE_MACRO_USAGE b2WeldJoint.cpp -> b2_pi [b2WeldJoint.cpp <115:26 115:30>]
COMMENT: comment [b2WeldJoint.cpp <117:3 117:25>]
COMMENT: comment [b2WeldJoint.cpp <120:3 120:22>]
COMMENT: comment [b2WeldJoint.cpp <123:3 123:20>]
COMMENT: comment [b2WeldJoint.cpp <147:3 147:53>]
REFERENCE_MACRO_USAGE b2WeldJoint.cpp -> b2_linearSlop [b2WeldJoint.cpp <305:26 305:38>]
REFERENCE_MACRO_USAGE b2WeldJoint.cpp -> b2_angularSlop [b2WeldJoint.cpp <305:59 305:72>]
REFERENCE_MACRO_USAGE b2Settings.h -> b2_pi [b2Settings.h <76:43 76:47>]
SYMBOL_METHOD public void b2WeldJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) [b2WeldJoint.cpp <37:1 <37:22 37:31> 44:1>]
SYMBOL_STRUCT b2WeldJointDef
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2WeldJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> void [b2WeldJoint.cpp <37:1 37:4>]
LOCAL_SYMBOL: b2WeldJoint.cpp<37:41> [b2WeldJoint.cpp <37:41 37:42>]
REFERENCE_TYPE_USAGE void b2WeldJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Body [b2WeldJoint.cpp <37:33 37:38>]
LOCAL_SYMBOL: b2WeldJoint.cpp<37:53> [b2WeldJoint.cpp <37:53 37:54>]
REFERENCE_TYPE_USAGE void b2WeldJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Body [b2WeldJoint.cpp <37:45 37:50>]
LOCAL_SYMBOL: b2WeldJoint.cpp<37:71> [b2WeldJoint.cpp <37:71 37:76>]
REFERENCE_TYPE_USAGE void b2WeldJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Vec2 [b2WeldJoint.cpp <37:63 37:68>]
REFERENCE_USAGE void b2WeldJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Body * b2JointDef::bodyA [b2WeldJoint.cpp <39:2 39:6>]
LOCAL_SYMBOL: b2WeldJoint.cpp<37:41> [b2WeldJoint.cpp <39:10 39:11>]
REFERENCE_USAGE void b2WeldJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Body * b2JointDef::bodyB [b2WeldJoint.cpp <40:2 40:6>]
LOCAL_SYMBOL: b2WeldJoint.cpp<37:53> [b2WeldJoint.cpp <40:10 40:11>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2WeldJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2WeldJoint.cpp <41:15 41:15>]
REFERENCE_USAGE void b2WeldJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Vec2 b2WeldJointDef::localAnchorA [b2WeldJoint.cpp <41:2 41:13>]
SYMBOL_FUNCTION b2Vec2 b2Body::GetLocalPoint(const b2Vec2 &) const
REFERENCE_CALL void b2WeldJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Vec2 b2Body::GetLocalPoint(const b2Vec2 &) const [b2WeldJoint.cpp <41:24 41:36>]
REFERENCE_USAGE void b2WeldJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Body * b2JointDef::bodyA [b2WeldJoint.cpp <41:17 41:21>]
LOCAL_SYMBOL: b2WeldJoint.cpp<37:71> [b2WeldJoint.cpp <41:38 41:43>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2WeldJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2WeldJoint.cpp <42:15 42:15>]
REFERENCE_USAGE void b2WeldJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Vec2 b2WeldJointDef::localAnchorB [b2WeldJoint.cpp <42:2 42:13>]
SYMBOL_FUNCTION b2Vec2 b2Body::GetLocalPoint(const b2Vec2 &) const
REFERENCE_CALL void b2WeldJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Vec2 b2Body::GetLocalPoint(const b2Vec2 &) const [b2WeldJoint.cpp <42:24 42:36>]
REFERENCE_USAGE void b2WeldJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Body * b2JointDef::bodyB [b2WeldJoint.cpp <42:17 42:21>]
LOCAL_SYMBOL: b2WeldJoint.cpp<37:71> [b2WeldJoint.cpp <42:38 42:43>]
REFERENCE_USAGE void b2WeldJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> float32 b2WeldJointDef::referenceAngle [b2WeldJoint.cpp <43:2 43:15>]
SYMBOL_FUNCTION float32 b2Body::GetAngle() const
REFERENCE_CALL void b2WeldJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> float32 b2Body::GetAngle() const [b2WeldJoint.cpp <43:26 43:33>]
REFERENCE_USAGE void b2WeldJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Body * b2JointDef::bodyB [b2WeldJoint.cpp <43:19 43:23>]
SYMBOL_FUNCTION float32 b2Body::GetAngle() const
REFERENCE_CALL void b2WeldJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> float32 b2Body::GetAngle() const [b2WeldJoint.cpp <43:46 43:53>]
REFERENCE_USAGE void b2WeldJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Body * b2JointDef::bodyA [b2WeldJoint.cpp <43:39 43:43>]
SYMBOL_METHOD protected void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) [b2WeldJoint.cpp <46:1 <46:14 46:24> 56:1>]
SYMBOL_CLASS b2WeldJoint
LOCAL_SYMBOL: b2WeldJoint.cpp<46:48> [b2WeldJoint.cpp <46:48 46:50>]
REFERENCE_TYPE_USAGE void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> b2WeldJointDef [b2WeldJoint.cpp <46:32 46:45>]
REFERENCE_TYPE_USAGE void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> b2Joint [b2WeldJoint.cpp <47:3 47:9>]
SYMBOL_FUNCTION void b2Joint::b2Joint(const b2JointDef *)
REFERENCE_CALL void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> void b2Joint::b2Joint(const b2JointDef *) [b2WeldJoint.cpp <47:3 47:9>]
LOCAL_SYMBOL: b2WeldJoint.cpp<46:48> [b2WeldJoint.cpp <47:11 47:13>]
REFERENCE_USAGE void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> b2Vec2 b2WeldJoint::m_localAnchorA [b2WeldJoint.cpp <46:14 46:24>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> void b2Vec2::b2Vec2() [b2WeldJoint.cpp <46:14 46:24>]
REFERENCE_USAGE void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> b2Vec2 b2WeldJoint::m_localAnchorB [b2WeldJoint.cpp <46:14 46:24>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> void b2Vec2::b2Vec2() [b2WeldJoint.cpp <46:14 46:24>]
REFERENCE_USAGE void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> b2Vec3 b2WeldJoint::m_impulse [b2WeldJoint.cpp <46:14 46:24>]
SYMBOL_FUNCTION void b2Vec3::b2Vec3()
REFERENCE_CALL void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> void b2Vec3::b2Vec3() [b2WeldJoint.cpp <46:14 46:24>]
REFERENCE_USAGE void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> b2Vec2 b2WeldJoint::m_rA [b2WeldJoint.cpp <46:14 46:24>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> void b2Vec2::b2Vec2() [b2WeldJoint.cpp <46:14 46:24>]
REFERENCE_USAGE void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> b2Vec2 b2WeldJoint::m_rB [b2WeldJoint.cpp <46:14 46:24>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> void b2Vec2::b2Vec2() [b2WeldJoint.cpp <46:14 46:24>]
REFERENCE_USAGE void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> b2Vec2 b2WeldJoint::m_localCenterA [b2WeldJoint.cpp <46:14 46:24>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> void b2Vec2::b2Vec2() [b2WeldJoint.cpp <46:14 46:24>]
REFERENCE_USAGE void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> b2Vec2 b2WeldJoint::m_localCenterB [b2WeldJoint.cpp <46:14 46:24>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> void b2Vec2::b2Vec2() [b2WeldJoint.cpp <46:14 46:24>]
REFERENCE_USAGE void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> b2Mat33 b2WeldJoint::m_mass [b2WeldJoint.cpp <46:14 46:24>]
SYMBOL_FUNCTION void b2Mat33::b2Mat33()
REFERENCE_CALL void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> void b2Mat33::b2Mat33() [b2WeldJoint.cpp <46:14 46:24>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2WeldJoint.cpp <49:17 49:17>]
REFERENCE_USAGE void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> b2Vec2 b2WeldJoint::m_localAnchorA [b2WeldJoint.cpp <49:2 49:15>]
REFERENCE_USAGE void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> b2Vec2 b2WeldJointDef::localAnchorA [b2WeldJoint.cpp <49:24 49:35>]
LOCAL_SYMBOL: b2WeldJoint.cpp<46:48> [b2WeldJoint.cpp <49:19 49:21>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2WeldJoint.cpp <50:17 50:17>]
REFERENCE_USAGE void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> b2Vec2 b2WeldJoint::m_localAnchorB [b2WeldJoint.cpp <50:2 50:15>]
REFERENCE_USAGE void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> b2Vec2 b2WeldJointDef::localAnchorB [b2WeldJoint.cpp <50:24 50:35>]
LOCAL_SYMBOL: b2WeldJoint.cpp<46:48> [b2WeldJoint.cpp <50:19 50:21>]
REFERENCE_USAGE void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> float32 b2WeldJoint::m_referenceAngle [b2WeldJoint.cpp <51:2 51:17>]
REFERENCE_USAGE void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> float32 b2WeldJointDef::referenceAngle [b2WeldJoint.cpp <51:26 51:39>]
LOCAL_SYMBOL: b2WeldJoint.cpp<46:48> [b2WeldJoint.cpp <51:21 51:23>]
REFERENCE_USAGE void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> float32 b2WeldJoint::m_frequencyHz [b2WeldJoint.cpp <52:2 52:14>]
REFERENCE_USAGE void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> float32 b2WeldJointDef::frequencyHz [b2WeldJoint.cpp <52:23 52:33>]
LOCAL_SYMBOL: b2WeldJoint.cpp<46:48> [b2WeldJoint.cpp <52:18 52:20>]
REFERENCE_USAGE void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> float32 b2WeldJoint::m_dampingRatio [b2WeldJoint.cpp <53:2 53:15>]
REFERENCE_USAGE void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> float32 b2WeldJointDef::dampingRatio [b2WeldJoint.cpp <53:24 53:35>]
LOCAL_SYMBOL: b2WeldJoint.cpp<46:48> [b2WeldJoint.cpp <53:19 53:21>]
SYMBOL_FUNCTION void b2Vec3::SetZero()
REFERENCE_CALL void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> void b2Vec3::SetZero() [b2WeldJoint.cpp <55:12 55:18>]
REFERENCE_USAGE void b2WeldJoint::b2WeldJoint(const b2WeldJointDef *) -> b2Vec3 b2WeldJoint::m_impulse [b2WeldJoint.cpp <55:2 55:10>]
SYMBOL_METHOD protected void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) [b2WeldJoint.cpp <58:1 <58:19 58:41> 167:1>]
SYMBOL_FUNCTION void b2Joint::InitVelocityConstraints(const b2SolverData &)
REFERENCE_OVERRIDE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Joint::InitVelocityConstraints(const b2SolverData &) [b2WeldJoint.cpp <58:19 58:41>]
SYMBOL_CLASS b2WeldJoint
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> void [b2WeldJoint.cpp <58:1 58:4>]
LOCAL_SYMBOL: b2WeldJoint.cpp<58:63> [b2WeldJoint.cpp <58:63 58:66>]
REFERENCE_TYPE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2SolverData [b2WeldJoint.cpp <58:49 58:60>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexA [b2WeldJoint.cpp <60:2 60:9>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2Body::m_islandIndex [b2WeldJoint.cpp <60:22 60:34>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2WeldJoint.cpp <60:13 60:19>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexB [b2WeldJoint.cpp <61:2 61:9>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2Body::m_islandIndex [b2WeldJoint.cpp <61:22 61:34>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2WeldJoint.cpp <61:13 61:19>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2WeldJoint.cpp <62:17 62:17>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_localCenterA [b2WeldJoint.cpp <62:2 62:15>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Sweep::localCenter [b2WeldJoint.cpp <62:36 62:46>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Sweep b2Body::m_sweep [b2WeldJoint.cpp <62:28 62:34>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2WeldJoint.cpp <62:19 62:25>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2WeldJoint.cpp <63:17 63:17>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_localCenterB [b2WeldJoint.cpp <63:2 63:15>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Sweep::localCenter [b2WeldJoint.cpp <63:36 63:46>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Sweep b2Body::m_sweep [b2WeldJoint.cpp <63:28 63:34>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2WeldJoint.cpp <63:19 63:25>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_invMassA [b2WeldJoint.cpp <64:2 64:11>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invMass [b2WeldJoint.cpp <64:24 64:32>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2WeldJoint.cpp <64:15 64:21>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_invMassB [b2WeldJoint.cpp <65:2 65:11>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invMass [b2WeldJoint.cpp <65:24 65:32>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2WeldJoint.cpp <65:15 65:21>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_invIA [b2WeldJoint.cpp <66:2 66:8>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invI [b2WeldJoint.cpp <66:21 66:26>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2WeldJoint.cpp <66:12 66:18>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_invIB [b2WeldJoint.cpp <67:2 67:8>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invI [b2WeldJoint.cpp <67:21 67:26>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2WeldJoint.cpp <67:12 67:18>]
LOCAL_SYMBOL: b2WeldJoint.cpp<69:10> [b2WeldJoint.cpp <69:10 69:11>]
REFERENCE_TYPE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <69:2 69:8>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Position::a [b2WeldJoint.cpp <69:40 69:40>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2WeldJoint.cpp <69:20 69:28>]
LOCAL_SYMBOL: b2WeldJoint.cpp<58:63> [b2WeldJoint.cpp <69:15 69:18>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexA [b2WeldJoint.cpp <69:30 69:37>]
LOCAL_SYMBOL: b2WeldJoint.cpp<70:9> [b2WeldJoint.cpp <70:9 70:10>]
REFERENCE_TYPE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2WeldJoint.cpp <70:2 70:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2WeldJoint.cpp <70:40 70:40>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2WeldJoint.cpp <70:40 70:40>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WeldJoint.cpp <70:19 70:28>]
LOCAL_SYMBOL: b2WeldJoint.cpp<58:63> [b2WeldJoint.cpp <70:14 70:17>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexA [b2WeldJoint.cpp <70:30 70:37>]
LOCAL_SYMBOL: b2WeldJoint.cpp<71:10> [b2WeldJoint.cpp <71:10 71:11>]
REFERENCE_TYPE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <71:2 71:8>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2WeldJoint.cpp <71:41 71:41>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WeldJoint.cpp <71:20 71:29>]
LOCAL_SYMBOL: b2WeldJoint.cpp<58:63> [b2WeldJoint.cpp <71:15 71:18>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexA [b2WeldJoint.cpp <71:31 71:38>]
LOCAL_SYMBOL: b2WeldJoint.cpp<73:10> [b2WeldJoint.cpp <73:10 73:11>]
REFERENCE_TYPE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <73:2 73:8>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Position::a [b2WeldJoint.cpp <73:40 73:40>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2WeldJoint.cpp <73:20 73:28>]
LOCAL_SYMBOL: b2WeldJoint.cpp<58:63> [b2WeldJoint.cpp <73:15 73:18>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexB [b2WeldJoint.cpp <73:30 73:37>]
LOCAL_SYMBOL: b2WeldJoint.cpp<74:9> [b2WeldJoint.cpp <74:9 74:10>]
REFERENCE_TYPE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2WeldJoint.cpp <74:2 74:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2WeldJoint.cpp <74:40 74:40>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2WeldJoint.cpp <74:40 74:40>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WeldJoint.cpp <74:19 74:28>]
LOCAL_SYMBOL: b2WeldJoint.cpp<58:63> [b2WeldJoint.cpp <74:14 74:17>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexB [b2WeldJoint.cpp <74:30 74:37>]
LOCAL_SYMBOL: b2WeldJoint.cpp<75:10> [b2WeldJoint.cpp <75:10 75:11>]
REFERENCE_TYPE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <75:2 75:8>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2WeldJoint.cpp <75:41 75:41>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WeldJoint.cpp <75:20 75:29>]
LOCAL_SYMBOL: b2WeldJoint.cpp<58:63> [b2WeldJoint.cpp <75:15 75:18>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexB [b2WeldJoint.cpp <75:31 75:38>]
LOCAL_SYMBOL: b2WeldJoint.cpp<77:8> [b2WeldJoint.cpp <77:8 77:9>]
REFERENCE_TYPE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Rot [b2WeldJoint.cpp <77:2 77:6>]
SYMBOL_FUNCTION void b2Rot::b2Rot(float32)
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2WeldJoint.cpp <77:8 77:9>]
LOCAL_SYMBOL: b2WeldJoint.cpp<69:10> [b2WeldJoint.cpp <77:11 77:12>]
LOCAL_SYMBOL: b2WeldJoint.cpp<77:16> [b2WeldJoint.cpp <77:16 77:17>]
REFERENCE_TYPE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Rot [b2WeldJoint.cpp <77:2 77:6>]
SYMBOL_FUNCTION void b2Rot::b2Rot(float32)
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2WeldJoint.cpp <77:16 77:17>]
LOCAL_SYMBOL: b2WeldJoint.cpp<73:10> [b2WeldJoint.cpp <77:19 77:20>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2WeldJoint.cpp <79:7 79:7>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rA [b2WeldJoint.cpp <79:2 79:5>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2WeldJoint.cpp <79:9 79:13>]
LOCAL_SYMBOL: b2WeldJoint.cpp<77:8> [b2WeldJoint.cpp <79:15 79:16>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <79:34 79:34>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_localAnchorA [b2WeldJoint.cpp <79:19 79:32>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_localCenterA [b2WeldJoint.cpp <79:36 79:49>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2WeldJoint.cpp <80:7 80:7>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rB [b2WeldJoint.cpp <80:2 80:5>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2WeldJoint.cpp <80:9 80:13>]
LOCAL_SYMBOL: b2WeldJoint.cpp<77:16> [b2WeldJoint.cpp <80:15 80:16>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <80:34 80:34>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_localAnchorB [b2WeldJoint.cpp <80:19 80:32>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_localCenterB [b2WeldJoint.cpp <80:36 80:49>]
LOCAL_SYMBOL: b2WeldJoint.cpp<91:10> [b2WeldJoint.cpp <91:10 91:11>]
REFERENCE_TYPE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <91:2 91:8>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_invMassA [b2WeldJoint.cpp <91:15 91:24>]
LOCAL_SYMBOL: b2WeldJoint.cpp<91:27> [b2WeldJoint.cpp <91:27 91:28>]
REFERENCE_TYPE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <91:2 91:8>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_invMassB [b2WeldJoint.cpp <91:32 91:41>]
LOCAL_SYMBOL: b2WeldJoint.cpp<92:10> [b2WeldJoint.cpp <92:10 92:11>]
REFERENCE_TYPE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <92:2 92:8>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_invIA [b2WeldJoint.cpp <92:15 92:21>]
LOCAL_SYMBOL: b2WeldJoint.cpp<92:24> [b2WeldJoint.cpp <92:24 92:25>]
REFERENCE_TYPE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <92:2 92:8>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_invIB [b2WeldJoint.cpp <92:29 92:35>]
LOCAL_SYMBOL: b2WeldJoint.cpp<94:10> [b2WeldJoint.cpp <94:10 94:10>]
REFERENCE_TYPE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Mat33 [b2WeldJoint.cpp <94:2 94:8>]
SYMBOL_FUNCTION void b2Mat33::b2Mat33()
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Mat33::b2Mat33() [b2WeldJoint.cpp <94:10 94:10>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2WeldJoint.cpp <95:7 95:7>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ex [b2WeldJoint.cpp <95:4 95:5>]
LOCAL_SYMBOL: b2WeldJoint.cpp<94:10> [b2WeldJoint.cpp <95:2 95:2>]
LOCAL_SYMBOL: b2WeldJoint.cpp<91:10> [b2WeldJoint.cpp <95:11 95:12>]
LOCAL_SYMBOL: b2WeldJoint.cpp<91:27> [b2WeldJoint.cpp <95:16 95:17>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2WeldJoint.cpp <95:26 95:26>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rA [b2WeldJoint.cpp <95:21 95:24>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2WeldJoint.cpp <95:35 95:35>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rA [b2WeldJoint.cpp <95:30 95:33>]
LOCAL_SYMBOL: b2WeldJoint.cpp<92:10> [b2WeldJoint.cpp <95:39 95:40>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2WeldJoint.cpp <95:49 95:49>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rB [b2WeldJoint.cpp <95:44 95:47>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2WeldJoint.cpp <95:58 95:58>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rB [b2WeldJoint.cpp <95:53 95:56>]
LOCAL_SYMBOL: b2WeldJoint.cpp<92:24> [b2WeldJoint.cpp <95:62 95:63>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2WeldJoint.cpp <96:7 96:7>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ey [b2WeldJoint.cpp <96:4 96:5>]
LOCAL_SYMBOL: b2WeldJoint.cpp<94:10> [b2WeldJoint.cpp <96:2 96:2>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2WeldJoint.cpp <96:17 96:17>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rA [b2WeldJoint.cpp <96:12 96:15>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2WeldJoint.cpp <96:26 96:26>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rA [b2WeldJoint.cpp <96:21 96:24>]
LOCAL_SYMBOL: b2WeldJoint.cpp<92:10> [b2WeldJoint.cpp <96:30 96:31>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2WeldJoint.cpp <96:40 96:40>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rB [b2WeldJoint.cpp <96:35 96:38>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2WeldJoint.cpp <96:49 96:49>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rB [b2WeldJoint.cpp <96:44 96:47>]
LOCAL_SYMBOL: b2WeldJoint.cpp<92:24> [b2WeldJoint.cpp <96:53 96:54>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2WeldJoint.cpp <97:7 97:7>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2WeldJoint.cpp <97:4 97:5>]
LOCAL_SYMBOL: b2WeldJoint.cpp<94:10> [b2WeldJoint.cpp <97:2 97:2>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2WeldJoint.cpp <97:17 97:17>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rA [b2WeldJoint.cpp <97:12 97:15>]
LOCAL_SYMBOL: b2WeldJoint.cpp<92:10> [b2WeldJoint.cpp <97:21 97:22>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2WeldJoint.cpp <97:31 97:31>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rB [b2WeldJoint.cpp <97:26 97:29>]
LOCAL_SYMBOL: b2WeldJoint.cpp<92:24> [b2WeldJoint.cpp <97:35 97:36>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2WeldJoint.cpp <98:7 98:7>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ex [b2WeldJoint.cpp <98:4 98:5>]
LOCAL_SYMBOL: b2WeldJoint.cpp<94:10> [b2WeldJoint.cpp <98:2 98:2>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2WeldJoint.cpp <98:16 98:16>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ey [b2WeldJoint.cpp <98:13 98:14>]
LOCAL_SYMBOL: b2WeldJoint.cpp<94:10> [b2WeldJoint.cpp <98:11 98:11>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2WeldJoint.cpp <99:7 99:7>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ey [b2WeldJoint.cpp <99:4 99:5>]
LOCAL_SYMBOL: b2WeldJoint.cpp<94:10> [b2WeldJoint.cpp <99:2 99:2>]
LOCAL_SYMBOL: b2WeldJoint.cpp<91:10> [b2WeldJoint.cpp <99:11 99:12>]
LOCAL_SYMBOL: b2WeldJoint.cpp<91:27> [b2WeldJoint.cpp <99:16 99:17>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2WeldJoint.cpp <99:26 99:26>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rA [b2WeldJoint.cpp <99:21 99:24>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2WeldJoint.cpp <99:35 99:35>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rA [b2WeldJoint.cpp <99:30 99:33>]
LOCAL_SYMBOL: b2WeldJoint.cpp<92:10> [b2WeldJoint.cpp <99:39 99:40>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2WeldJoint.cpp <99:49 99:49>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rB [b2WeldJoint.cpp <99:44 99:47>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2WeldJoint.cpp <99:58 99:58>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rB [b2WeldJoint.cpp <99:53 99:56>]
LOCAL_SYMBOL: b2WeldJoint.cpp<92:24> [b2WeldJoint.cpp <99:62 99:63>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2WeldJoint.cpp <100:7 100:7>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2WeldJoint.cpp <100:4 100:5>]
LOCAL_SYMBOL: b2WeldJoint.cpp<94:10> [b2WeldJoint.cpp <100:2 100:2>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2WeldJoint.cpp <100:16 100:16>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rA [b2WeldJoint.cpp <100:11 100:14>]
LOCAL_SYMBOL: b2WeldJoint.cpp<92:10> [b2WeldJoint.cpp <100:20 100:21>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2WeldJoint.cpp <100:30 100:30>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rB [b2WeldJoint.cpp <100:25 100:28>]
LOCAL_SYMBOL: b2WeldJoint.cpp<92:24> [b2WeldJoint.cpp <100:34 100:35>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2WeldJoint.cpp <101:7 101:7>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ex [b2WeldJoint.cpp <101:4 101:5>]
LOCAL_SYMBOL: b2WeldJoint.cpp<94:10> [b2WeldJoint.cpp <101:2 101:2>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2WeldJoint.cpp <101:16 101:16>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2WeldJoint.cpp <101:13 101:14>]
LOCAL_SYMBOL: b2WeldJoint.cpp<94:10> [b2WeldJoint.cpp <101:11 101:11>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2WeldJoint.cpp <102:7 102:7>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ey [b2WeldJoint.cpp <102:4 102:5>]
LOCAL_SYMBOL: b2WeldJoint.cpp<94:10> [b2WeldJoint.cpp <102:2 102:2>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2WeldJoint.cpp <102:16 102:16>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2WeldJoint.cpp <102:13 102:14>]
LOCAL_SYMBOL: b2WeldJoint.cpp<94:10> [b2WeldJoint.cpp <102:11 102:11>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2WeldJoint.cpp <103:7 103:7>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2WeldJoint.cpp <103:4 103:5>]
LOCAL_SYMBOL: b2WeldJoint.cpp<94:10> [b2WeldJoint.cpp <103:2 103:2>]
LOCAL_SYMBOL: b2WeldJoint.cpp<92:10> [b2WeldJoint.cpp <103:11 103:12>]
LOCAL_SYMBOL: b2WeldJoint.cpp<92:24> [b2WeldJoint.cpp <103:16 103:17>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_frequencyHz [b2WeldJoint.cpp <105:6 105:18>]
SYMBOL_FUNCTION void b2Mat33::GetInverse22(b2Mat33 *) const
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Mat33::GetInverse22(b2Mat33 *) const [b2WeldJoint.cpp <107:5 107:16>]
LOCAL_SYMBOL: b2WeldJoint.cpp<94:10> [b2WeldJoint.cpp <107:3 107:3>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Mat33 b2WeldJoint::m_mass [b2WeldJoint.cpp <107:19 107:24>]
LOCAL_SYMBOL: b2WeldJoint.cpp<109:11> [b2WeldJoint.cpp <109:11 109:14>]
REFERENCE_TYPE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <109:3 109:9>]
LOCAL_SYMBOL: b2WeldJoint.cpp<92:10> [b2WeldJoint.cpp <109:18 109:19>]
LOCAL_SYMBOL: b2WeldJoint.cpp<92:24> [b2WeldJoint.cpp <109:23 109:24>]
LOCAL_SYMBOL: b2WeldJoint.cpp<110:11> [b2WeldJoint.cpp <110:11 110:11>]
REFERENCE_TYPE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <110:3 110:9>]
LOCAL_SYMBOL: b2WeldJoint.cpp<109:11> [b2WeldJoint.cpp <110:15 110:18>]
LOCAL_SYMBOL: b2WeldJoint.cpp<109:11> [b2WeldJoint.cpp <110:36 110:39>]
LOCAL_SYMBOL: b2WeldJoint.cpp<112:11> [b2WeldJoint.cpp <112:11 112:11>]
REFERENCE_TYPE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <112:3 112:9>]
LOCAL_SYMBOL: b2WeldJoint.cpp<73:10> [b2WeldJoint.cpp <112:15 112:16>]
LOCAL_SYMBOL: b2WeldJoint.cpp<69:10> [b2WeldJoint.cpp <112:20 112:21>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_referenceAngle [b2WeldJoint.cpp <112:25 112:40>]
LOCAL_SYMBOL: b2WeldJoint.cpp<115:11> [b2WeldJoint.cpp <115:11 115:15>]
REFERENCE_TYPE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <115:3 115:9>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_frequencyHz [b2WeldJoint.cpp <115:34 115:46>]
LOCAL_SYMBOL: b2WeldJoint.cpp<118:11> [b2WeldJoint.cpp <118:11 118:11>]
REFERENCE_TYPE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <118:3 118:9>]
LOCAL_SYMBOL: b2WeldJoint.cpp<110:11> [b2WeldJoint.cpp <118:22 118:22>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_dampingRatio [b2WeldJoint.cpp <118:26 118:39>]
LOCAL_SYMBOL: b2WeldJoint.cpp<115:11> [b2WeldJoint.cpp <118:43 118:47>]
LOCAL_SYMBOL: b2WeldJoint.cpp<121:11> [b2WeldJoint.cpp <121:11 121:11>]
REFERENCE_TYPE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <121:3 121:9>]
LOCAL_SYMBOL: b2WeldJoint.cpp<110:11> [b2WeldJoint.cpp <121:15 121:15>]
LOCAL_SYMBOL: b2WeldJoint.cpp<115:11> [b2WeldJoint.cpp <121:19 121:23>]
LOCAL_SYMBOL: b2WeldJoint.cpp<115:11> [b2WeldJoint.cpp <121:27 121:31>]
LOCAL_SYMBOL: b2WeldJoint.cpp<124:11> [b2WeldJoint.cpp <124:11 124:11>]
REFERENCE_TYPE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <124:3 124:9>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2TimeStep::dt [b2WeldJoint.cpp <124:25 124:26>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2TimeStep b2SolverData::step [b2WeldJoint.cpp <124:20 124:23>]
LOCAL_SYMBOL: b2WeldJoint.cpp<58:63> [b2WeldJoint.cpp <124:15 124:18>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_gamma [b2WeldJoint.cpp <125:3 125:9>]
LOCAL_SYMBOL: b2WeldJoint.cpp<124:11> [b2WeldJoint.cpp <125:13 125:13>]
LOCAL_SYMBOL: b2WeldJoint.cpp<118:11> [b2WeldJoint.cpp <125:18 125:18>]
LOCAL_SYMBOL: b2WeldJoint.cpp<124:11> [b2WeldJoint.cpp <125:22 125:22>]
LOCAL_SYMBOL: b2WeldJoint.cpp<121:11> [b2WeldJoint.cpp <125:26 125:26>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_gamma [b2WeldJoint.cpp <126:3 126:9>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_gamma [b2WeldJoint.cpp <126:13 126:19>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_gamma [b2WeldJoint.cpp <126:38 126:44>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_bias [b2WeldJoint.cpp <127:3 127:8>]
LOCAL_SYMBOL: b2WeldJoint.cpp<112:11> [b2WeldJoint.cpp <127:12 127:12>]
LOCAL_SYMBOL: b2WeldJoint.cpp<124:11> [b2WeldJoint.cpp <127:16 127:16>]
LOCAL_SYMBOL: b2WeldJoint.cpp<121:11> [b2WeldJoint.cpp <127:20 127:20>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_gamma [b2WeldJoint.cpp <127:24 127:30>]
LOCAL_SYMBOL: b2WeldJoint.cpp<109:11> [b2WeldJoint.cpp <129:3 129:6>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_gamma [b2WeldJoint.cpp <129:11 129:17>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2WeldJoint.cpp <130:13 130:13>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2WeldJoint.cpp <130:10 130:11>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Mat33 b2WeldJoint::m_mass [b2WeldJoint.cpp <130:3 130:8>]
LOCAL_SYMBOL: b2WeldJoint.cpp<109:11> [b2WeldJoint.cpp <130:17 130:20>]
LOCAL_SYMBOL: b2WeldJoint.cpp<109:11> [b2WeldJoint.cpp <130:39 130:42>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2WeldJoint.cpp <132:16 132:16>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2WeldJoint.cpp <132:13 132:14>]
LOCAL_SYMBOL: b2WeldJoint.cpp<94:10> [b2WeldJoint.cpp <132:11 132:11>]
SYMBOL_FUNCTION void b2Mat33::GetInverse22(b2Mat33 *) const
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Mat33::GetInverse22(b2Mat33 *) const [b2WeldJoint.cpp <134:5 134:16>]
LOCAL_SYMBOL: b2WeldJoint.cpp<94:10> [b2WeldJoint.cpp <134:3 134:3>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Mat33 b2WeldJoint::m_mass [b2WeldJoint.cpp <134:19 134:24>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_gamma [b2WeldJoint.cpp <135:3 135:9>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_bias [b2WeldJoint.cpp <136:3 136:8>]
SYMBOL_FUNCTION void b2Mat33::GetSymInverse33(b2Mat33 *) const
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Mat33::GetSymInverse33(b2Mat33 *) const [b2WeldJoint.cpp <140:5 140:19>]
LOCAL_SYMBOL: b2WeldJoint.cpp<94:10> [b2WeldJoint.cpp <140:3 140:3>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Mat33 b2WeldJoint::m_mass [b2WeldJoint.cpp <140:22 140:27>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_gamma [b2WeldJoint.cpp <141:3 141:9>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_bias [b2WeldJoint.cpp <142:3 142:8>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> bool b2TimeStep::warmStarting [b2WeldJoint.cpp <145:16 145:27>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2TimeStep b2SolverData::step [b2WeldJoint.cpp <145:11 145:14>]
LOCAL_SYMBOL: b2WeldJoint.cpp<58:63> [b2WeldJoint.cpp <145:6 145:9>]
SYMBOL_FUNCTION void b2Vec3::operator*=(float32)
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec3::operator*=(float32) [b2WeldJoint.cpp <148:13 148:14>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2WeldJoint::m_impulse [b2WeldJoint.cpp <148:3 148:11>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2TimeStep::dtRatio [b2WeldJoint.cpp <148:26 148:32>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2TimeStep b2SolverData::step [b2WeldJoint.cpp <148:21 148:24>]
LOCAL_SYMBOL: b2WeldJoint.cpp<58:63> [b2WeldJoint.cpp <148:16 148:19>]
LOCAL_SYMBOL: b2WeldJoint.cpp<150:10> [b2WeldJoint.cpp <150:10 150:10>]
REFERENCE_TYPE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2WeldJoint.cpp <150:3 150:8>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(float32, float32)
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(float32, float32) [b2WeldJoint.cpp <150:10 150:10>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2WeldJoint.cpp <150:22 150:22>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2WeldJoint::m_impulse [b2WeldJoint.cpp <150:12 150:20>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2WeldJoint.cpp <150:35 150:35>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2WeldJoint::m_impulse [b2WeldJoint.cpp <150:25 150:33>]
SYMBOL_FUNCTION void b2Vec2::operator-=(const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2WeldJoint.cpp <152:6 152:7>]
LOCAL_SYMBOL: b2WeldJoint.cpp<70:9> [b2WeldJoint.cpp <152:3 152:4>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WeldJoint.cpp <152:12 152:12>]
LOCAL_SYMBOL: b2WeldJoint.cpp<91:10> [b2WeldJoint.cpp <152:9 152:10>]
LOCAL_SYMBOL: b2WeldJoint.cpp<150:10> [b2WeldJoint.cpp <152:14 152:14>]
LOCAL_SYMBOL: b2WeldJoint.cpp<71:10> [b2WeldJoint.cpp <153:3 153:4>]
LOCAL_SYMBOL: b2WeldJoint.cpp<92:10> [b2WeldJoint.cpp <153:9 153:10>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <153:15 153:21>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rA [b2WeldJoint.cpp <153:23 153:26>]
LOCAL_SYMBOL: b2WeldJoint.cpp<150:10> [b2WeldJoint.cpp <153:29 153:29>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2WeldJoint.cpp <153:44 153:44>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2WeldJoint::m_impulse [b2WeldJoint.cpp <153:34 153:42>]
SYMBOL_FUNCTION void b2Vec2::operator+=(const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2WeldJoint.cpp <155:6 155:7>]
LOCAL_SYMBOL: b2WeldJoint.cpp<74:9> [b2WeldJoint.cpp <155:3 155:4>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WeldJoint.cpp <155:12 155:12>]
LOCAL_SYMBOL: b2WeldJoint.cpp<91:27> [b2WeldJoint.cpp <155:9 155:10>]
LOCAL_SYMBOL: b2WeldJoint.cpp<150:10> [b2WeldJoint.cpp <155:14 155:14>]
LOCAL_SYMBOL: b2WeldJoint.cpp<75:10> [b2WeldJoint.cpp <156:3 156:4>]
LOCAL_SYMBOL: b2WeldJoint.cpp<92:24> [b2WeldJoint.cpp <156:9 156:10>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <156:15 156:21>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rB [b2WeldJoint.cpp <156:23 156:26>]
LOCAL_SYMBOL: b2WeldJoint.cpp<150:10> [b2WeldJoint.cpp <156:29 156:29>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2WeldJoint.cpp <156:44 156:44>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2WeldJoint::m_impulse [b2WeldJoint.cpp <156:34 156:42>]
SYMBOL_FUNCTION void b2Vec3::SetZero()
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec3::SetZero() [b2WeldJoint.cpp <160:13 160:19>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2WeldJoint::m_impulse [b2WeldJoint.cpp <160:3 160:11>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2WeldJoint.cpp <163:30 163:30>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2WeldJoint.cpp <163:28 163:28>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WeldJoint.cpp <163:7 163:16>]
LOCAL_SYMBOL: b2WeldJoint.cpp<58:63> [b2WeldJoint.cpp <163:2 163:5>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexA [b2WeldJoint.cpp <163:18 163:25>]
LOCAL_SYMBOL: b2WeldJoint.cpp<70:9> [b2WeldJoint.cpp <163:32 163:33>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2WeldJoint.cpp <164:28 164:28>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WeldJoint.cpp <164:7 164:16>]
LOCAL_SYMBOL: b2WeldJoint.cpp<58:63> [b2WeldJoint.cpp <164:2 164:5>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexA [b2WeldJoint.cpp <164:18 164:25>]
LOCAL_SYMBOL: b2WeldJoint.cpp<71:10> [b2WeldJoint.cpp <164:32 164:33>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2WeldJoint.cpp <165:30 165:30>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2WeldJoint.cpp <165:28 165:28>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WeldJoint.cpp <165:7 165:16>]
LOCAL_SYMBOL: b2WeldJoint.cpp<58:63> [b2WeldJoint.cpp <165:2 165:5>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexB [b2WeldJoint.cpp <165:18 165:25>]
LOCAL_SYMBOL: b2WeldJoint.cpp<74:9> [b2WeldJoint.cpp <165:32 165:33>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2WeldJoint.cpp <166:28 166:28>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WeldJoint.cpp <166:7 166:16>]
LOCAL_SYMBOL: b2WeldJoint.cpp<58:63> [b2WeldJoint.cpp <166:2 166:5>]
REFERENCE_USAGE void b2WeldJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexB [b2WeldJoint.cpp <166:18 166:25>]
LOCAL_SYMBOL: b2WeldJoint.cpp<75:10> [b2WeldJoint.cpp <166:32 166:33>]
SYMBOL_METHOD protected void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) [b2WeldJoint.cpp <169:1 <169:19 169:42> 225:1>]
SYMBOL_FUNCTION void b2Joint::SolveVelocityConstraints(const b2SolverData &)
REFERENCE_OVERRIDE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Joint::SolveVelocityConstraints(const b2SolverData &) [b2WeldJoint.cpp <169:19 169:42>]
SYMBOL_CLASS b2WeldJoint
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> void [b2WeldJoint.cpp <169:1 169:4>]
LOCAL_SYMBOL: b2WeldJoint.cpp<169:64> [b2WeldJoint.cpp <169:64 169:67>]
REFERENCE_TYPE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2SolverData [b2WeldJoint.cpp <169:50 169:61>]
LOCAL_SYMBOL: b2WeldJoint.cpp<171:9> [b2WeldJoint.cpp <171:9 171:10>]
REFERENCE_TYPE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2WeldJoint.cpp <171:2 171:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2WeldJoint.cpp <171:40 171:40>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2WeldJoint.cpp <171:40 171:40>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WeldJoint.cpp <171:19 171:28>]
LOCAL_SYMBOL: b2WeldJoint.cpp<169:64> [b2WeldJoint.cpp <171:14 171:17>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexA [b2WeldJoint.cpp <171:30 171:37>]
LOCAL_SYMBOL: b2WeldJoint.cpp<172:10> [b2WeldJoint.cpp <172:10 172:11>]
REFERENCE_TYPE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <172:2 172:8>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2WeldJoint.cpp <172:41 172:41>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WeldJoint.cpp <172:20 172:29>]
LOCAL_SYMBOL: b2WeldJoint.cpp<169:64> [b2WeldJoint.cpp <172:15 172:18>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexA [b2WeldJoint.cpp <172:31 172:38>]
LOCAL_SYMBOL: b2WeldJoint.cpp<173:9> [b2WeldJoint.cpp <173:9 173:10>]
REFERENCE_TYPE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2WeldJoint.cpp <173:2 173:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2WeldJoint.cpp <173:40 173:40>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2WeldJoint.cpp <173:40 173:40>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WeldJoint.cpp <173:19 173:28>]
LOCAL_SYMBOL: b2WeldJoint.cpp<169:64> [b2WeldJoint.cpp <173:14 173:17>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexB [b2WeldJoint.cpp <173:30 173:37>]
LOCAL_SYMBOL: b2WeldJoint.cpp<174:10> [b2WeldJoint.cpp <174:10 174:11>]
REFERENCE_TYPE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <174:2 174:8>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2WeldJoint.cpp <174:41 174:41>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WeldJoint.cpp <174:20 174:29>]
LOCAL_SYMBOL: b2WeldJoint.cpp<169:64> [b2WeldJoint.cpp <174:15 174:18>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexB [b2WeldJoint.cpp <174:31 174:38>]
LOCAL_SYMBOL: b2WeldJoint.cpp<176:10> [b2WeldJoint.cpp <176:10 176:11>]
REFERENCE_TYPE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <176:2 176:8>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_invMassA [b2WeldJoint.cpp <176:15 176:24>]
LOCAL_SYMBOL: b2WeldJoint.cpp<176:27> [b2WeldJoint.cpp <176:27 176:28>]
REFERENCE_TYPE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <176:2 176:8>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_invMassB [b2WeldJoint.cpp <176:32 176:41>]
LOCAL_SYMBOL: b2WeldJoint.cpp<177:10> [b2WeldJoint.cpp <177:10 177:11>]
REFERENCE_TYPE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <177:2 177:8>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_invIA [b2WeldJoint.cpp <177:15 177:21>]
LOCAL_SYMBOL: b2WeldJoint.cpp<177:24> [b2WeldJoint.cpp <177:24 177:25>]
REFERENCE_TYPE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <177:2 177:8>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_invIB [b2WeldJoint.cpp <177:29 177:35>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_frequencyHz [b2WeldJoint.cpp <179:6 179:18>]
LOCAL_SYMBOL: b2WeldJoint.cpp<181:11> [b2WeldJoint.cpp <181:11 181:15>]
REFERENCE_TYPE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <181:3 181:9>]
LOCAL_SYMBOL: b2WeldJoint.cpp<174:10> [b2WeldJoint.cpp <181:19 181:20>]
LOCAL_SYMBOL: b2WeldJoint.cpp<172:10> [b2WeldJoint.cpp <181:24 181:25>]
LOCAL_SYMBOL: b2WeldJoint.cpp<183:11> [b2WeldJoint.cpp <183:11 183:18>]
REFERENCE_TYPE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <183:3 183:9>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2WeldJoint.cpp <183:33 183:33>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2WeldJoint.cpp <183:30 183:31>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Mat33 b2WeldJoint::m_mass [b2WeldJoint.cpp <183:23 183:28>]
LOCAL_SYMBOL: b2WeldJoint.cpp<181:11> [b2WeldJoint.cpp <183:38 183:42>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_bias [b2WeldJoint.cpp <183:46 183:51>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_gamma [b2WeldJoint.cpp <183:55 183:61>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2WeldJoint.cpp <183:75 183:75>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2WeldJoint::m_impulse [b2WeldJoint.cpp <183:65 183:73>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2WeldJoint.cpp <184:13 184:13>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2WeldJoint::m_impulse [b2WeldJoint.cpp <184:3 184:11>]
LOCAL_SYMBOL: b2WeldJoint.cpp<183:11> [b2WeldJoint.cpp <184:18 184:25>]
LOCAL_SYMBOL: b2WeldJoint.cpp<172:10> [b2WeldJoint.cpp <186:3 186:4>]
LOCAL_SYMBOL: b2WeldJoint.cpp<177:10> [b2WeldJoint.cpp <186:9 186:10>]
LOCAL_SYMBOL: b2WeldJoint.cpp<183:11> [b2WeldJoint.cpp <186:14 186:21>]
LOCAL_SYMBOL: b2WeldJoint.cpp<174:10> [b2WeldJoint.cpp <187:3 187:4>]
LOCAL_SYMBOL: b2WeldJoint.cpp<177:24> [b2WeldJoint.cpp <187:9 187:10>]
LOCAL_SYMBOL: b2WeldJoint.cpp<183:11> [b2WeldJoint.cpp <187:14 187:21>]
LOCAL_SYMBOL: b2WeldJoint.cpp<189:10> [b2WeldJoint.cpp <189:10 189:14>]
REFERENCE_TYPE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2WeldJoint.cpp <189:3 189:8>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <189:46 189:46>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <189:41 189:41>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <189:21 189:21>]
LOCAL_SYMBOL: b2WeldJoint.cpp<173:9> [b2WeldJoint.cpp <189:18 189:19>]
SYMBOL_FUNCTION b2Vec2 b2Cross(float32, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Cross(float32, const b2Vec2 &) [b2WeldJoint.cpp <189:23 189:29>]
LOCAL_SYMBOL: b2WeldJoint.cpp<174:10> [b2WeldJoint.cpp <189:31 189:32>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rB [b2WeldJoint.cpp <189:35 189:38>]
LOCAL_SYMBOL: b2WeldJoint.cpp<171:9> [b2WeldJoint.cpp <189:43 189:44>]
SYMBOL_FUNCTION b2Vec2 b2Cross(float32, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Cross(float32, const b2Vec2 &) [b2WeldJoint.cpp <189:48 189:54>]
LOCAL_SYMBOL: b2WeldJoint.cpp<172:10> [b2WeldJoint.cpp <189:56 189:57>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rA [b2WeldJoint.cpp <189:60 189:63>]
LOCAL_SYMBOL: b2WeldJoint.cpp<191:10> [b2WeldJoint.cpp <191:10 191:17>]
REFERENCE_TYPE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2WeldJoint.cpp <191:3 191:8>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Vec2::operator-() const [b2WeldJoint.cpp <191:21 191:21>]
SYMBOL_FUNCTION b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) [b2WeldJoint.cpp <191:22 191:28>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Mat33 b2WeldJoint::m_mass [b2WeldJoint.cpp <191:30 191:35>]
LOCAL_SYMBOL: b2WeldJoint.cpp<189:10> [b2WeldJoint.cpp <191:38 191:42>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2WeldJoint.cpp <192:13 192:13>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2WeldJoint::m_impulse [b2WeldJoint.cpp <192:3 192:11>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2WeldJoint.cpp <192:27 192:27>]
LOCAL_SYMBOL: b2WeldJoint.cpp<191:10> [b2WeldJoint.cpp <192:18 192:25>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2WeldJoint.cpp <193:13 193:13>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2WeldJoint::m_impulse [b2WeldJoint.cpp <193:3 193:11>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2WeldJoint.cpp <193:27 193:27>]
LOCAL_SYMBOL: b2WeldJoint.cpp<191:10> [b2WeldJoint.cpp <193:18 193:25>]
LOCAL_SYMBOL: b2WeldJoint.cpp<195:10> [b2WeldJoint.cpp <195:10 195:10>]
REFERENCE_TYPE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2WeldJoint.cpp <195:3 195:8>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2WeldJoint.cpp <195:14 195:21>]
LOCAL_SYMBOL: b2WeldJoint.cpp<191:10> [b2WeldJoint.cpp <195:14 195:21>]
SYMBOL_FUNCTION void b2Vec2::operator-=(const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2WeldJoint.cpp <197:6 197:7>]
LOCAL_SYMBOL: b2WeldJoint.cpp<171:9> [b2WeldJoint.cpp <197:3 197:4>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WeldJoint.cpp <197:12 197:12>]
LOCAL_SYMBOL: b2WeldJoint.cpp<176:10> [b2WeldJoint.cpp <197:9 197:10>]
LOCAL_SYMBOL: b2WeldJoint.cpp<195:10> [b2WeldJoint.cpp <197:14 197:14>]
LOCAL_SYMBOL: b2WeldJoint.cpp<172:10> [b2WeldJoint.cpp <198:3 198:4>]
LOCAL_SYMBOL: b2WeldJoint.cpp<177:10> [b2WeldJoint.cpp <198:9 198:10>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <198:14 198:20>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rA [b2WeldJoint.cpp <198:22 198:25>]
LOCAL_SYMBOL: b2WeldJoint.cpp<195:10> [b2WeldJoint.cpp <198:28 198:28>]
SYMBOL_FUNCTION void b2Vec2::operator+=(const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2WeldJoint.cpp <200:6 200:7>]
LOCAL_SYMBOL: b2WeldJoint.cpp<173:9> [b2WeldJoint.cpp <200:3 200:4>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WeldJoint.cpp <200:12 200:12>]
LOCAL_SYMBOL: b2WeldJoint.cpp<176:27> [b2WeldJoint.cpp <200:9 200:10>]
LOCAL_SYMBOL: b2WeldJoint.cpp<195:10> [b2WeldJoint.cpp <200:14 200:14>]
LOCAL_SYMBOL: b2WeldJoint.cpp<174:10> [b2WeldJoint.cpp <201:3 201:4>]
LOCAL_SYMBOL: b2WeldJoint.cpp<177:24> [b2WeldJoint.cpp <201:9 201:10>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <201:14 201:20>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rB [b2WeldJoint.cpp <201:22 201:25>]
LOCAL_SYMBOL: b2WeldJoint.cpp<195:10> [b2WeldJoint.cpp <201:28 201:28>]
LOCAL_SYMBOL: b2WeldJoint.cpp<205:10> [b2WeldJoint.cpp <205:10 205:14>]
REFERENCE_TYPE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2WeldJoint.cpp <205:3 205:8>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <205:46 205:46>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <205:41 205:41>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <205:21 205:21>]
LOCAL_SYMBOL: b2WeldJoint.cpp<173:9> [b2WeldJoint.cpp <205:18 205:19>]
SYMBOL_FUNCTION b2Vec2 b2Cross(float32, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Cross(float32, const b2Vec2 &) [b2WeldJoint.cpp <205:23 205:29>]
LOCAL_SYMBOL: b2WeldJoint.cpp<174:10> [b2WeldJoint.cpp <205:31 205:32>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rB [b2WeldJoint.cpp <205:35 205:38>]
LOCAL_SYMBOL: b2WeldJoint.cpp<171:9> [b2WeldJoint.cpp <205:43 205:44>]
SYMBOL_FUNCTION b2Vec2 b2Cross(float32, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Cross(float32, const b2Vec2 &) [b2WeldJoint.cpp <205:48 205:54>]
LOCAL_SYMBOL: b2WeldJoint.cpp<172:10> [b2WeldJoint.cpp <205:56 205:57>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rA [b2WeldJoint.cpp <205:60 205:63>]
LOCAL_SYMBOL: b2WeldJoint.cpp<206:11> [b2WeldJoint.cpp <206:11 206:15>]
REFERENCE_TYPE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <206:3 206:9>]
LOCAL_SYMBOL: b2WeldJoint.cpp<174:10> [b2WeldJoint.cpp <206:19 206:20>]
LOCAL_SYMBOL: b2WeldJoint.cpp<172:10> [b2WeldJoint.cpp <206:24 206:25>]
LOCAL_SYMBOL: b2WeldJoint.cpp<207:10> [b2WeldJoint.cpp <207:10 207:13>]
REFERENCE_TYPE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 [b2WeldJoint.cpp <207:3 207:8>]
SYMBOL_FUNCTION void b2Vec3::b2Vec3(float32, float32, float32)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec3::b2Vec3(float32, float32, float32) [b2WeldJoint.cpp <207:10 207:13>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2WeldJoint.cpp <207:21 207:21>]
LOCAL_SYMBOL: b2WeldJoint.cpp<205:10> [b2WeldJoint.cpp <207:15 207:19>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2WeldJoint.cpp <207:30 207:30>]
LOCAL_SYMBOL: b2WeldJoint.cpp<205:10> [b2WeldJoint.cpp <207:24 207:28>]
LOCAL_SYMBOL: b2WeldJoint.cpp<206:11> [b2WeldJoint.cpp <207:33 207:37>]
LOCAL_SYMBOL: b2WeldJoint.cpp<209:10> [b2WeldJoint.cpp <209:10 209:16>]
REFERENCE_TYPE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 [b2WeldJoint.cpp <209:3 209:8>]
SYMBOL_FUNCTION b2Vec3 b2Vec3::operator-() const
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Vec3::operator-() const [b2WeldJoint.cpp <209:20 209:20>]
SYMBOL_FUNCTION b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) [b2WeldJoint.cpp <209:21 209:25>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Mat33 b2WeldJoint::m_mass [b2WeldJoint.cpp <209:27 209:32>]
LOCAL_SYMBOL: b2WeldJoint.cpp<207:10> [b2WeldJoint.cpp <209:35 209:38>]
SYMBOL_FUNCTION void b2Vec3::operator+=(const b2Vec3 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec3::operator+=(const b2Vec3 &) [b2WeldJoint.cpp <210:13 210:14>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2WeldJoint::m_impulse [b2WeldJoint.cpp <210:3 210:11>]
LOCAL_SYMBOL: b2WeldJoint.cpp<209:10> [b2WeldJoint.cpp <210:16 210:22>]
LOCAL_SYMBOL: b2WeldJoint.cpp<212:10> [b2WeldJoint.cpp <212:10 212:10>]
REFERENCE_TYPE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2WeldJoint.cpp <212:3 212:8>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(float32, float32)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(float32, float32) [b2WeldJoint.cpp <212:10 212:10>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2WeldJoint.cpp <212:20 212:20>]
LOCAL_SYMBOL: b2WeldJoint.cpp<209:10> [b2WeldJoint.cpp <212:12 212:18>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2WeldJoint.cpp <212:31 212:31>]
LOCAL_SYMBOL: b2WeldJoint.cpp<209:10> [b2WeldJoint.cpp <212:23 212:29>]
SYMBOL_FUNCTION void b2Vec2::operator-=(const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2WeldJoint.cpp <214:6 214:7>]
LOCAL_SYMBOL: b2WeldJoint.cpp<171:9> [b2WeldJoint.cpp <214:3 214:4>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WeldJoint.cpp <214:12 214:12>]
LOCAL_SYMBOL: b2WeldJoint.cpp<176:10> [b2WeldJoint.cpp <214:9 214:10>]
LOCAL_SYMBOL: b2WeldJoint.cpp<212:10> [b2WeldJoint.cpp <214:14 214:14>]
LOCAL_SYMBOL: b2WeldJoint.cpp<172:10> [b2WeldJoint.cpp <215:3 215:4>]
LOCAL_SYMBOL: b2WeldJoint.cpp<177:10> [b2WeldJoint.cpp <215:9 215:10>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <215:15 215:21>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rA [b2WeldJoint.cpp <215:23 215:26>]
LOCAL_SYMBOL: b2WeldJoint.cpp<212:10> [b2WeldJoint.cpp <215:29 215:29>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2WeldJoint.cpp <215:42 215:42>]
LOCAL_SYMBOL: b2WeldJoint.cpp<209:10> [b2WeldJoint.cpp <215:34 215:40>]
SYMBOL_FUNCTION void b2Vec2::operator+=(const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2WeldJoint.cpp <217:6 217:7>]
LOCAL_SYMBOL: b2WeldJoint.cpp<173:9> [b2WeldJoint.cpp <217:3 217:4>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WeldJoint.cpp <217:12 217:12>]
LOCAL_SYMBOL: b2WeldJoint.cpp<176:27> [b2WeldJoint.cpp <217:9 217:10>]
LOCAL_SYMBOL: b2WeldJoint.cpp<212:10> [b2WeldJoint.cpp <217:14 217:14>]
LOCAL_SYMBOL: b2WeldJoint.cpp<174:10> [b2WeldJoint.cpp <218:3 218:4>]
LOCAL_SYMBOL: b2WeldJoint.cpp<177:24> [b2WeldJoint.cpp <218:9 218:10>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <218:15 218:21>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_rB [b2WeldJoint.cpp <218:23 218:26>]
LOCAL_SYMBOL: b2WeldJoint.cpp<212:10> [b2WeldJoint.cpp <218:29 218:29>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2WeldJoint.cpp <218:42 218:42>]
LOCAL_SYMBOL: b2WeldJoint.cpp<209:10> [b2WeldJoint.cpp <218:34 218:40>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2WeldJoint.cpp <221:30 221:30>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2WeldJoint.cpp <221:28 221:28>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WeldJoint.cpp <221:7 221:16>]
LOCAL_SYMBOL: b2WeldJoint.cpp<169:64> [b2WeldJoint.cpp <221:2 221:5>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexA [b2WeldJoint.cpp <221:18 221:25>]
LOCAL_SYMBOL: b2WeldJoint.cpp<171:9> [b2WeldJoint.cpp <221:32 221:33>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2WeldJoint.cpp <222:28 222:28>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WeldJoint.cpp <222:7 222:16>]
LOCAL_SYMBOL: b2WeldJoint.cpp<169:64> [b2WeldJoint.cpp <222:2 222:5>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexA [b2WeldJoint.cpp <222:18 222:25>]
LOCAL_SYMBOL: b2WeldJoint.cpp<172:10> [b2WeldJoint.cpp <222:32 222:33>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2WeldJoint.cpp <223:30 223:30>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2WeldJoint.cpp <223:28 223:28>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WeldJoint.cpp <223:7 223:16>]
LOCAL_SYMBOL: b2WeldJoint.cpp<169:64> [b2WeldJoint.cpp <223:2 223:5>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexB [b2WeldJoint.cpp <223:18 223:25>]
LOCAL_SYMBOL: b2WeldJoint.cpp<173:9> [b2WeldJoint.cpp <223:32 223:33>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2WeldJoint.cpp <224:28 224:28>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WeldJoint.cpp <224:7 224:16>]
LOCAL_SYMBOL: b2WeldJoint.cpp<169:64> [b2WeldJoint.cpp <224:2 224:5>]
REFERENCE_USAGE void b2WeldJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexB [b2WeldJoint.cpp <224:18 224:25>]
LOCAL_SYMBOL: b2WeldJoint.cpp<174:10> [b2WeldJoint.cpp <224:32 224:33>]
SYMBOL_METHOD protected bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) [b2WeldJoint.cpp <227:1 <227:19 227:42> 306:1>]
SYMBOL_FUNCTION bool b2Joint::SolvePositionConstraints(const b2SolverData &)
REFERENCE_OVERRIDE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> bool b2Joint::SolvePositionConstraints(const b2SolverData &) [b2WeldJoint.cpp <227:19 227:42>]
SYMBOL_CLASS b2WeldJoint
SYMBOL_BUILTIN_TYPE bool
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> bool [b2WeldJoint.cpp <227:1 227:4>]
LOCAL_SYMBOL: b2WeldJoint.cpp<227:64> [b2WeldJoint.cpp <227:64 227:67>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2SolverData [b2WeldJoint.cpp <227:50 227:61>]
LOCAL_SYMBOL: b2WeldJoint.cpp<229:9> [b2WeldJoint.cpp <229:9 229:10>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2WeldJoint.cpp <229:2 229:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2WeldJoint.cpp <229:39 229:39>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2WeldJoint.cpp <229:39 229:39>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2WeldJoint.cpp <229:19 229:27>]
LOCAL_SYMBOL: b2WeldJoint.cpp<227:64> [b2WeldJoint.cpp <229:14 229:17>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexA [b2WeldJoint.cpp <229:29 229:36>]
LOCAL_SYMBOL: b2WeldJoint.cpp<230:10> [b2WeldJoint.cpp <230:10 230:11>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <230:2 230:8>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2WeldJoint.cpp <230:40 230:40>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2WeldJoint.cpp <230:20 230:28>]
LOCAL_SYMBOL: b2WeldJoint.cpp<227:64> [b2WeldJoint.cpp <230:15 230:18>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexA [b2WeldJoint.cpp <230:30 230:37>]
LOCAL_SYMBOL: b2WeldJoint.cpp<231:9> [b2WeldJoint.cpp <231:9 231:10>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2WeldJoint.cpp <231:2 231:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2WeldJoint.cpp <231:39 231:39>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2WeldJoint.cpp <231:39 231:39>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2WeldJoint.cpp <231:19 231:27>]
LOCAL_SYMBOL: b2WeldJoint.cpp<227:64> [b2WeldJoint.cpp <231:14 231:17>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexB [b2WeldJoint.cpp <231:29 231:36>]
LOCAL_SYMBOL: b2WeldJoint.cpp<232:10> [b2WeldJoint.cpp <232:10 232:11>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <232:2 232:8>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2WeldJoint.cpp <232:40 232:40>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2WeldJoint.cpp <232:20 232:28>]
LOCAL_SYMBOL: b2WeldJoint.cpp<227:64> [b2WeldJoint.cpp <232:15 232:18>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexB [b2WeldJoint.cpp <232:30 232:37>]
LOCAL_SYMBOL: b2WeldJoint.cpp<234:8> [b2WeldJoint.cpp <234:8 234:9>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Rot [b2WeldJoint.cpp <234:2 234:6>]
SYMBOL_FUNCTION void b2Rot::b2Rot(float32)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2WeldJoint.cpp <234:8 234:9>]
LOCAL_SYMBOL: b2WeldJoint.cpp<230:10> [b2WeldJoint.cpp <234:11 234:12>]
LOCAL_SYMBOL: b2WeldJoint.cpp<234:16> [b2WeldJoint.cpp <234:16 234:17>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Rot [b2WeldJoint.cpp <234:2 234:6>]
SYMBOL_FUNCTION void b2Rot::b2Rot(float32)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2WeldJoint.cpp <234:16 234:17>]
LOCAL_SYMBOL: b2WeldJoint.cpp<232:10> [b2WeldJoint.cpp <234:19 234:20>]
LOCAL_SYMBOL: b2WeldJoint.cpp<236:10> [b2WeldJoint.cpp <236:10 236:11>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <236:2 236:8>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_invMassA [b2WeldJoint.cpp <236:15 236:24>]
LOCAL_SYMBOL: b2WeldJoint.cpp<236:27> [b2WeldJoint.cpp <236:27 236:28>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <236:2 236:8>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_invMassB [b2WeldJoint.cpp <236:32 236:41>]
LOCAL_SYMBOL: b2WeldJoint.cpp<237:10> [b2WeldJoint.cpp <237:10 237:11>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <237:2 237:8>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_invIA [b2WeldJoint.cpp <237:15 237:21>]
LOCAL_SYMBOL: b2WeldJoint.cpp<237:24> [b2WeldJoint.cpp <237:24 237:25>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <237:2 237:8>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_invIB [b2WeldJoint.cpp <237:29 237:35>]
LOCAL_SYMBOL: b2WeldJoint.cpp<239:9> [b2WeldJoint.cpp <239:9 239:10>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2WeldJoint.cpp <239:2 239:7>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2WeldJoint.cpp <239:14 239:18>]
LOCAL_SYMBOL: b2WeldJoint.cpp<234:8> [b2WeldJoint.cpp <239:20 239:21>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <239:39 239:39>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_localAnchorA [b2WeldJoint.cpp <239:24 239:37>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_localCenterA [b2WeldJoint.cpp <239:41 239:54>]
LOCAL_SYMBOL: b2WeldJoint.cpp<240:9> [b2WeldJoint.cpp <240:9 240:10>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2WeldJoint.cpp <240:2 240:7>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2WeldJoint.cpp <240:14 240:18>]
LOCAL_SYMBOL: b2WeldJoint.cpp<234:16> [b2WeldJoint.cpp <240:20 240:21>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <240:39 240:39>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_localAnchorB [b2WeldJoint.cpp <240:24 240:37>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2WeldJoint::m_localCenterB [b2WeldJoint.cpp <240:41 240:54>]
LOCAL_SYMBOL: b2WeldJoint.cpp<242:10> [b2WeldJoint.cpp <242:10 242:22>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <242:2 242:8>]
LOCAL_SYMBOL: b2WeldJoint.cpp<242:25> [b2WeldJoint.cpp <242:25 242:36>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <242:2 242:8>]
LOCAL_SYMBOL: b2WeldJoint.cpp<244:10> [b2WeldJoint.cpp <244:10 244:10>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Mat33 [b2WeldJoint.cpp <244:2 244:8>]
SYMBOL_FUNCTION void b2Mat33::b2Mat33()
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Mat33::b2Mat33() [b2WeldJoint.cpp <244:10 244:10>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2WeldJoint.cpp <245:7 245:7>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ex [b2WeldJoint.cpp <245:4 245:5>]
LOCAL_SYMBOL: b2WeldJoint.cpp<244:10> [b2WeldJoint.cpp <245:2 245:2>]
LOCAL_SYMBOL: b2WeldJoint.cpp<236:10> [b2WeldJoint.cpp <245:11 245:12>]
LOCAL_SYMBOL: b2WeldJoint.cpp<236:27> [b2WeldJoint.cpp <245:16 245:17>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2WeldJoint.cpp <245:24 245:24>]
LOCAL_SYMBOL: b2WeldJoint.cpp<239:9> [b2WeldJoint.cpp <245:21 245:22>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2WeldJoint.cpp <245:31 245:31>]
LOCAL_SYMBOL: b2WeldJoint.cpp<239:9> [b2WeldJoint.cpp <245:28 245:29>]
LOCAL_SYMBOL: b2WeldJoint.cpp<237:10> [b2WeldJoint.cpp <245:35 245:36>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2WeldJoint.cpp <245:43 245:43>]
LOCAL_SYMBOL: b2WeldJoint.cpp<240:9> [b2WeldJoint.cpp <245:40 245:41>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2WeldJoint.cpp <245:50 245:50>]
LOCAL_SYMBOL: b2WeldJoint.cpp<240:9> [b2WeldJoint.cpp <245:47 245:48>]
LOCAL_SYMBOL: b2WeldJoint.cpp<237:24> [b2WeldJoint.cpp <245:54 245:55>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2WeldJoint.cpp <246:7 246:7>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ey [b2WeldJoint.cpp <246:4 246:5>]
LOCAL_SYMBOL: b2WeldJoint.cpp<244:10> [b2WeldJoint.cpp <246:2 246:2>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2WeldJoint.cpp <246:15 246:15>]
LOCAL_SYMBOL: b2WeldJoint.cpp<239:9> [b2WeldJoint.cpp <246:12 246:13>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2WeldJoint.cpp <246:22 246:22>]
LOCAL_SYMBOL: b2WeldJoint.cpp<239:9> [b2WeldJoint.cpp <246:19 246:20>]
LOCAL_SYMBOL: b2WeldJoint.cpp<237:10> [b2WeldJoint.cpp <246:26 246:27>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2WeldJoint.cpp <246:34 246:34>]
LOCAL_SYMBOL: b2WeldJoint.cpp<240:9> [b2WeldJoint.cpp <246:31 246:32>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2WeldJoint.cpp <246:41 246:41>]
LOCAL_SYMBOL: b2WeldJoint.cpp<240:9> [b2WeldJoint.cpp <246:38 246:39>]
LOCAL_SYMBOL: b2WeldJoint.cpp<237:24> [b2WeldJoint.cpp <246:45 246:46>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2WeldJoint.cpp <247:7 247:7>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2WeldJoint.cpp <247:4 247:5>]
LOCAL_SYMBOL: b2WeldJoint.cpp<244:10> [b2WeldJoint.cpp <247:2 247:2>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2WeldJoint.cpp <247:15 247:15>]
LOCAL_SYMBOL: b2WeldJoint.cpp<239:9> [b2WeldJoint.cpp <247:12 247:13>]
LOCAL_SYMBOL: b2WeldJoint.cpp<237:10> [b2WeldJoint.cpp <247:19 247:20>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2WeldJoint.cpp <247:27 247:27>]
LOCAL_SYMBOL: b2WeldJoint.cpp<240:9> [b2WeldJoint.cpp <247:24 247:25>]
LOCAL_SYMBOL: b2WeldJoint.cpp<237:24> [b2WeldJoint.cpp <247:31 247:32>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2WeldJoint.cpp <248:7 248:7>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ex [b2WeldJoint.cpp <248:4 248:5>]
LOCAL_SYMBOL: b2WeldJoint.cpp<244:10> [b2WeldJoint.cpp <248:2 248:2>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2WeldJoint.cpp <248:16 248:16>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ey [b2WeldJoint.cpp <248:13 248:14>]
LOCAL_SYMBOL: b2WeldJoint.cpp<244:10> [b2WeldJoint.cpp <248:11 248:11>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2WeldJoint.cpp <249:7 249:7>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ey [b2WeldJoint.cpp <249:4 249:5>]
LOCAL_SYMBOL: b2WeldJoint.cpp<244:10> [b2WeldJoint.cpp <249:2 249:2>]
LOCAL_SYMBOL: b2WeldJoint.cpp<236:10> [b2WeldJoint.cpp <249:11 249:12>]
LOCAL_SYMBOL: b2WeldJoint.cpp<236:27> [b2WeldJoint.cpp <249:16 249:17>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2WeldJoint.cpp <249:24 249:24>]
LOCAL_SYMBOL: b2WeldJoint.cpp<239:9> [b2WeldJoint.cpp <249:21 249:22>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2WeldJoint.cpp <249:31 249:31>]
LOCAL_SYMBOL: b2WeldJoint.cpp<239:9> [b2WeldJoint.cpp <249:28 249:29>]
LOCAL_SYMBOL: b2WeldJoint.cpp<237:10> [b2WeldJoint.cpp <249:35 249:36>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2WeldJoint.cpp <249:43 249:43>]
LOCAL_SYMBOL: b2WeldJoint.cpp<240:9> [b2WeldJoint.cpp <249:40 249:41>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2WeldJoint.cpp <249:50 249:50>]
LOCAL_SYMBOL: b2WeldJoint.cpp<240:9> [b2WeldJoint.cpp <249:47 249:48>]
LOCAL_SYMBOL: b2WeldJoint.cpp<237:24> [b2WeldJoint.cpp <249:54 249:55>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2WeldJoint.cpp <250:7 250:7>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2WeldJoint.cpp <250:4 250:5>]
LOCAL_SYMBOL: b2WeldJoint.cpp<244:10> [b2WeldJoint.cpp <250:2 250:2>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2WeldJoint.cpp <250:14 250:14>]
LOCAL_SYMBOL: b2WeldJoint.cpp<239:9> [b2WeldJoint.cpp <250:11 250:12>]
LOCAL_SYMBOL: b2WeldJoint.cpp<237:10> [b2WeldJoint.cpp <250:18 250:19>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2WeldJoint.cpp <250:26 250:26>]
LOCAL_SYMBOL: b2WeldJoint.cpp<240:9> [b2WeldJoint.cpp <250:23 250:24>]
LOCAL_SYMBOL: b2WeldJoint.cpp<237:24> [b2WeldJoint.cpp <250:30 250:31>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2WeldJoint.cpp <251:7 251:7>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ex [b2WeldJoint.cpp <251:4 251:5>]
LOCAL_SYMBOL: b2WeldJoint.cpp<244:10> [b2WeldJoint.cpp <251:2 251:2>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2WeldJoint.cpp <251:16 251:16>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2WeldJoint.cpp <251:13 251:14>]
LOCAL_SYMBOL: b2WeldJoint.cpp<244:10> [b2WeldJoint.cpp <251:11 251:11>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2WeldJoint.cpp <252:7 252:7>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ey [b2WeldJoint.cpp <252:4 252:5>]
LOCAL_SYMBOL: b2WeldJoint.cpp<244:10> [b2WeldJoint.cpp <252:2 252:2>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2WeldJoint.cpp <252:16 252:16>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2WeldJoint.cpp <252:13 252:14>]
LOCAL_SYMBOL: b2WeldJoint.cpp<244:10> [b2WeldJoint.cpp <252:11 252:11>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2WeldJoint.cpp <253:7 253:7>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2WeldJoint.cpp <253:4 253:5>]
LOCAL_SYMBOL: b2WeldJoint.cpp<244:10> [b2WeldJoint.cpp <253:2 253:2>]
LOCAL_SYMBOL: b2WeldJoint.cpp<237:10> [b2WeldJoint.cpp <253:11 253:12>]
LOCAL_SYMBOL: b2WeldJoint.cpp<237:24> [b2WeldJoint.cpp <253:16 253:17>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_frequencyHz [b2WeldJoint.cpp <255:6 255:18>]
LOCAL_SYMBOL: b2WeldJoint.cpp<257:10> [b2WeldJoint.cpp <257:10 257:11>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2WeldJoint.cpp <257:3 257:8>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <257:29 257:29>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <257:24 257:24>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <257:19 257:19>]
LOCAL_SYMBOL: b2WeldJoint.cpp<231:9> [b2WeldJoint.cpp <257:16 257:17>]
LOCAL_SYMBOL: b2WeldJoint.cpp<240:9> [b2WeldJoint.cpp <257:21 257:22>]
LOCAL_SYMBOL: b2WeldJoint.cpp<229:9> [b2WeldJoint.cpp <257:26 257:27>]
LOCAL_SYMBOL: b2WeldJoint.cpp<239:9> [b2WeldJoint.cpp <257:31 257:32>]
LOCAL_SYMBOL: b2WeldJoint.cpp<242:10> [b2WeldJoint.cpp <259:3 259:15>]
SYMBOL_FUNCTION float32 b2Vec2::Length() const
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::Length() const [b2WeldJoint.cpp <259:22 259:27>]
LOCAL_SYMBOL: b2WeldJoint.cpp<257:10> [b2WeldJoint.cpp <259:19 259:20>]
LOCAL_SYMBOL: b2WeldJoint.cpp<242:25> [b2WeldJoint.cpp <260:3 260:14>]
LOCAL_SYMBOL: b2WeldJoint.cpp<262:10> [b2WeldJoint.cpp <262:10 262:10>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2WeldJoint.cpp <262:3 262:8>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Vec2::operator-() const [b2WeldJoint.cpp <262:14 262:14>]
SYMBOL_FUNCTION b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const [b2WeldJoint.cpp <262:17 262:23>]
LOCAL_SYMBOL: b2WeldJoint.cpp<244:10> [b2WeldJoint.cpp <262:15 262:15>]
LOCAL_SYMBOL: b2WeldJoint.cpp<257:10> [b2WeldJoint.cpp <262:25 262:26>]
SYMBOL_FUNCTION void b2Vec2::operator-=(const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2WeldJoint.cpp <264:6 264:7>]
LOCAL_SYMBOL: b2WeldJoint.cpp<229:9> [b2WeldJoint.cpp <264:3 264:4>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WeldJoint.cpp <264:12 264:12>]
LOCAL_SYMBOL: b2WeldJoint.cpp<236:10> [b2WeldJoint.cpp <264:9 264:10>]
LOCAL_SYMBOL: b2WeldJoint.cpp<262:10> [b2WeldJoint.cpp <264:14 264:14>]
LOCAL_SYMBOL: b2WeldJoint.cpp<230:10> [b2WeldJoint.cpp <265:3 265:4>]
LOCAL_SYMBOL: b2WeldJoint.cpp<237:10> [b2WeldJoint.cpp <265:9 265:10>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <265:14 265:20>]
LOCAL_SYMBOL: b2WeldJoint.cpp<239:9> [b2WeldJoint.cpp <265:22 265:23>]
LOCAL_SYMBOL: b2WeldJoint.cpp<262:10> [b2WeldJoint.cpp <265:26 265:26>]
SYMBOL_FUNCTION void b2Vec2::operator+=(const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2WeldJoint.cpp <267:6 267:7>]
LOCAL_SYMBOL: b2WeldJoint.cpp<231:9> [b2WeldJoint.cpp <267:3 267:4>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WeldJoint.cpp <267:12 267:12>]
LOCAL_SYMBOL: b2WeldJoint.cpp<236:27> [b2WeldJoint.cpp <267:9 267:10>]
LOCAL_SYMBOL: b2WeldJoint.cpp<262:10> [b2WeldJoint.cpp <267:14 267:14>]
LOCAL_SYMBOL: b2WeldJoint.cpp<232:10> [b2WeldJoint.cpp <268:3 268:4>]
LOCAL_SYMBOL: b2WeldJoint.cpp<237:24> [b2WeldJoint.cpp <268:9 268:10>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <268:14 268:20>]
LOCAL_SYMBOL: b2WeldJoint.cpp<240:9> [b2WeldJoint.cpp <268:22 268:23>]
LOCAL_SYMBOL: b2WeldJoint.cpp<262:10> [b2WeldJoint.cpp <268:26 268:26>]
LOCAL_SYMBOL: b2WeldJoint.cpp<272:10> [b2WeldJoint.cpp <272:10 272:11>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2WeldJoint.cpp <272:3 272:8>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <272:29 272:29>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <272:24 272:24>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <272:19 272:19>]
LOCAL_SYMBOL: b2WeldJoint.cpp<231:9> [b2WeldJoint.cpp <272:16 272:17>]
LOCAL_SYMBOL: b2WeldJoint.cpp<240:9> [b2WeldJoint.cpp <272:21 272:22>]
LOCAL_SYMBOL: b2WeldJoint.cpp<229:9> [b2WeldJoint.cpp <272:26 272:27>]
LOCAL_SYMBOL: b2WeldJoint.cpp<239:9> [b2WeldJoint.cpp <272:31 272:32>]
LOCAL_SYMBOL: b2WeldJoint.cpp<273:11> [b2WeldJoint.cpp <273:11 273:12>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2WeldJoint.cpp <273:3 273:9>]
LOCAL_SYMBOL: b2WeldJoint.cpp<232:10> [b2WeldJoint.cpp <273:16 273:17>]
LOCAL_SYMBOL: b2WeldJoint.cpp<230:10> [b2WeldJoint.cpp <273:21 273:22>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2WeldJoint::m_referenceAngle [b2WeldJoint.cpp <273:26 273:41>]
LOCAL_SYMBOL: b2WeldJoint.cpp<242:10> [b2WeldJoint.cpp <275:3 275:15>]
SYMBOL_FUNCTION float32 b2Vec2::Length() const
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::Length() const [b2WeldJoint.cpp <275:22 275:27>]
LOCAL_SYMBOL: b2WeldJoint.cpp<272:10> [b2WeldJoint.cpp <275:19 275:20>]
LOCAL_SYMBOL: b2WeldJoint.cpp<242:25> [b2WeldJoint.cpp <276:3 276:14>]
SYMBOL_FUNCTION float b2Abs<float>(float)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float b2Abs<float>(float) [b2WeldJoint.cpp <276:18 276:22>]
LOCAL_SYMBOL: b2WeldJoint.cpp<273:11> [b2WeldJoint.cpp <276:24 276:25>]
LOCAL_SYMBOL: b2WeldJoint.cpp<278:10> [b2WeldJoint.cpp <278:10 278:10>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 [b2WeldJoint.cpp <278:3 278:8>]
SYMBOL_FUNCTION void b2Vec3::b2Vec3(float32, float32, float32)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec3::b2Vec3(float32, float32, float32) [b2WeldJoint.cpp <278:10 278:10>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2WeldJoint.cpp <278:15 278:15>]
LOCAL_SYMBOL: b2WeldJoint.cpp<272:10> [b2WeldJoint.cpp <278:12 278:13>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2WeldJoint.cpp <278:21 278:21>]
LOCAL_SYMBOL: b2WeldJoint.cpp<272:10> [b2WeldJoint.cpp <278:18 278:19>]
LOCAL_SYMBOL: b2WeldJoint.cpp<273:11> [b2WeldJoint.cpp <278:24 278:25>]
LOCAL_SYMBOL: b2WeldJoint.cpp<280:10> [b2WeldJoint.cpp <280:10 280:16>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 [b2WeldJoint.cpp <280:3 280:8>]
SYMBOL_FUNCTION void b2Vec3::b2Vec3()
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec3::b2Vec3() [b2WeldJoint.cpp <280:10 280:16>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2WeldJoint.cpp <281:12 281:12>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2WeldJoint.cpp <281:9 281:10>]
LOCAL_SYMBOL: b2WeldJoint.cpp<244:10> [b2WeldJoint.cpp <281:7 281:7>]
SYMBOL_FUNCTION b2Vec3 & b2Vec3::operator=(b2Vec3 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 & b2Vec3::operator=(b2Vec3 &) [b2WeldJoint.cpp <283:12 283:12>]
LOCAL_SYMBOL: b2WeldJoint.cpp<280:10> [b2WeldJoint.cpp <283:4 283:10>]
SYMBOL_FUNCTION b2Vec3 b2Vec3::operator-() const
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 b2Vec3::operator-() const [b2WeldJoint.cpp <283:14 283:14>]
SYMBOL_FUNCTION b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const [b2WeldJoint.cpp <283:17 283:23>]
LOCAL_SYMBOL: b2WeldJoint.cpp<244:10> [b2WeldJoint.cpp <283:15 283:15>]
LOCAL_SYMBOL: b2WeldJoint.cpp<278:10> [b2WeldJoint.cpp <283:25 283:25>]
LOCAL_SYMBOL: b2WeldJoint.cpp<287:11> [b2WeldJoint.cpp <287:11 287:18>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2WeldJoint.cpp <287:4 287:9>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Vec2::operator-() const [b2WeldJoint.cpp <287:22 287:22>]
SYMBOL_FUNCTION b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const [b2WeldJoint.cpp <287:25 287:31>]
LOCAL_SYMBOL: b2WeldJoint.cpp<244:10> [b2WeldJoint.cpp <287:23 287:23>]
LOCAL_SYMBOL: b2WeldJoint.cpp<272:10> [b2WeldJoint.cpp <287:33 287:34>]
SYMBOL_FUNCTION void b2Vec3::Set(float32, float32, float32)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec3::Set(float32, float32, float32) [b2WeldJoint.cpp <288:12 288:14>]
LOCAL_SYMBOL: b2WeldJoint.cpp<280:10> [b2WeldJoint.cpp <288:4 288:10>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2WeldJoint.cpp <288:25 288:25>]
LOCAL_SYMBOL: b2WeldJoint.cpp<287:11> [b2WeldJoint.cpp <288:16 288:23>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2WeldJoint.cpp <288:37 288:37>]
LOCAL_SYMBOL: b2WeldJoint.cpp<287:11> [b2WeldJoint.cpp <288:28 288:35>]
LOCAL_SYMBOL: b2WeldJoint.cpp<291:10> [b2WeldJoint.cpp <291:10 291:10>]
REFERENCE_TYPE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2WeldJoint.cpp <291:3 291:8>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(float32, float32)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(float32, float32) [b2WeldJoint.cpp <291:10 291:10>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2WeldJoint.cpp <291:20 291:20>]
LOCAL_SYMBOL: b2WeldJoint.cpp<280:10> [b2WeldJoint.cpp <291:12 291:18>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2WeldJoint.cpp <291:31 291:31>]
LOCAL_SYMBOL: b2WeldJoint.cpp<280:10> [b2WeldJoint.cpp <291:23 291:29>]
SYMBOL_FUNCTION void b2Vec2::operator-=(const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2WeldJoint.cpp <293:6 293:7>]
LOCAL_SYMBOL: b2WeldJoint.cpp<229:9> [b2WeldJoint.cpp <293:3 293:4>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WeldJoint.cpp <293:12 293:12>]
LOCAL_SYMBOL: b2WeldJoint.cpp<236:10> [b2WeldJoint.cpp <293:9 293:10>]
LOCAL_SYMBOL: b2WeldJoint.cpp<291:10> [b2WeldJoint.cpp <293:14 293:14>]
LOCAL_SYMBOL: b2WeldJoint.cpp<230:10> [b2WeldJoint.cpp <294:3 294:4>]
LOCAL_SYMBOL: b2WeldJoint.cpp<237:10> [b2WeldJoint.cpp <294:9 294:10>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <294:15 294:21>]
LOCAL_SYMBOL: b2WeldJoint.cpp<239:9> [b2WeldJoint.cpp <294:23 294:24>]
LOCAL_SYMBOL: b2WeldJoint.cpp<291:10> [b2WeldJoint.cpp <294:27 294:27>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2WeldJoint.cpp <294:40 294:40>]
LOCAL_SYMBOL: b2WeldJoint.cpp<280:10> [b2WeldJoint.cpp <294:32 294:38>]
SYMBOL_FUNCTION void b2Vec2::operator+=(const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2WeldJoint.cpp <296:6 296:7>]
LOCAL_SYMBOL: b2WeldJoint.cpp<231:9> [b2WeldJoint.cpp <296:3 296:4>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WeldJoint.cpp <296:12 296:12>]
LOCAL_SYMBOL: b2WeldJoint.cpp<236:27> [b2WeldJoint.cpp <296:9 296:10>]
LOCAL_SYMBOL: b2WeldJoint.cpp<291:10> [b2WeldJoint.cpp <296:14 296:14>]
LOCAL_SYMBOL: b2WeldJoint.cpp<232:10> [b2WeldJoint.cpp <297:3 297:4>]
LOCAL_SYMBOL: b2WeldJoint.cpp<237:24> [b2WeldJoint.cpp <297:9 297:10>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2WeldJoint.cpp <297:15 297:21>]
LOCAL_SYMBOL: b2WeldJoint.cpp<240:9> [b2WeldJoint.cpp <297:23 297:24>]
LOCAL_SYMBOL: b2WeldJoint.cpp<291:10> [b2WeldJoint.cpp <297:27 297:27>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2WeldJoint.cpp <297:40 297:40>]
LOCAL_SYMBOL: b2WeldJoint.cpp<280:10> [b2WeldJoint.cpp <297:32 297:38>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2WeldJoint.cpp <300:29 300:29>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2WeldJoint.cpp <300:27 300:27>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2WeldJoint.cpp <300:7 300:15>]
LOCAL_SYMBOL: b2WeldJoint.cpp<227:64> [b2WeldJoint.cpp <300:2 300:5>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexA [b2WeldJoint.cpp <300:17 300:24>]
LOCAL_SYMBOL: b2WeldJoint.cpp<229:9> [b2WeldJoint.cpp <300:31 300:32>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2WeldJoint.cpp <301:27 301:27>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2WeldJoint.cpp <301:7 301:15>]
LOCAL_SYMBOL: b2WeldJoint.cpp<227:64> [b2WeldJoint.cpp <301:2 301:5>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexA [b2WeldJoint.cpp <301:17 301:24>]
LOCAL_SYMBOL: b2WeldJoint.cpp<230:10> [b2WeldJoint.cpp <301:31 301:32>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2WeldJoint.cpp <302:29 302:29>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2WeldJoint.cpp <302:27 302:27>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2WeldJoint.cpp <302:7 302:15>]
LOCAL_SYMBOL: b2WeldJoint.cpp<227:64> [b2WeldJoint.cpp <302:2 302:5>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexB [b2WeldJoint.cpp <302:17 302:24>]
LOCAL_SYMBOL: b2WeldJoint.cpp<231:9> [b2WeldJoint.cpp <302:31 302:32>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2WeldJoint.cpp <303:27 303:27>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2WeldJoint.cpp <303:7 303:15>]
LOCAL_SYMBOL: b2WeldJoint.cpp<227:64> [b2WeldJoint.cpp <303:2 303:5>]
REFERENCE_USAGE bool b2WeldJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2WeldJoint::m_indexB [b2WeldJoint.cpp <303:17 303:24>]
LOCAL_SYMBOL: b2WeldJoint.cpp<232:10> [b2WeldJoint.cpp <303:31 303:32>]
LOCAL_SYMBOL: b2WeldJoint.cpp<242:10> [b2WeldJoint.cpp <305:9 305:21>]
LOCAL_SYMBOL: b2WeldJoint.cpp<242:25> [b2WeldJoint.cpp <305:43 305:54>]
SYMBOL_METHOD public b2Vec2 b2WeldJoint::GetAnchorA() const [b2WeldJoint.cpp <308:1 <308:21 308:30> 311:1>]
SYMBOL_FUNCTION b2Vec2 b2Joint::GetAnchorA() const
REFERENCE_OVERRIDE b2Vec2 b2WeldJoint::GetAnchorA() const -> b2Vec2 b2Joint::GetAnchorA() const [b2WeldJoint.cpp <308:21 308:30>]
SYMBOL_CLASS b2WeldJoint
REFERENCE_TYPE_USAGE b2Vec2 b2WeldJoint::GetAnchorA() const -> b2Vec2 [b2WeldJoint.cpp <308:1 308:6>]
SYMBOL_FUNCTION b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const
REFERENCE_CALL b2Vec2 b2WeldJoint::GetAnchorA() const -> b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const [b2WeldJoint.cpp <310:18 310:30>]
REFERENCE_USAGE b2Vec2 b2WeldJoint::GetAnchorA() const -> b2Body * b2Joint::m_bodyA [b2WeldJoint.cpp <310:9 310:15>]
REFERENCE_USAGE b2Vec2 b2WeldJoint::GetAnchorA() const -> b2Vec2 b2WeldJoint::m_localAnchorA [b2WeldJoint.cpp <310:32 310:45>]
SYMBOL_METHOD public b2Vec2 b2WeldJoint::GetAnchorB() const [b2WeldJoint.cpp <313:1 <313:21 313:30> 316:1>]
SYMBOL_FUNCTION b2Vec2 b2Joint::GetAnchorB() const
REFERENCE_OVERRIDE b2Vec2 b2WeldJoint::GetAnchorB() const -> b2Vec2 b2Joint::GetAnchorB() const [b2WeldJoint.cpp <313:21 313:30>]
SYMBOL_CLASS b2WeldJoint
REFERENCE_TYPE_USAGE b2Vec2 b2WeldJoint::GetAnchorB() const -> b2Vec2 [b2WeldJoint.cpp <313:1 313:6>]
SYMBOL_FUNCTION b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const
REFERENCE_CALL b2Vec2 b2WeldJoint::GetAnchorB() const -> b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const [b2WeldJoint.cpp <315:18 315:30>]
REFERENCE_USAGE b2Vec2 b2WeldJoint::GetAnchorB() const -> b2Body * b2Joint::m_bodyB [b2WeldJoint.cpp <315:9 315:15>]
REFERENCE_USAGE b2Vec2 b2WeldJoint::GetAnchorB() const -> b2Vec2 b2WeldJoint::m_localAnchorB [b2WeldJoint.cpp <315:32 315:45>]
SYMBOL_METHOD public b2Vec2 b2WeldJoint::GetReactionForce(float32) const [b2WeldJoint.cpp <318:1 <318:21 318:36> 322:1>]
SYMBOL_FUNCTION b2Vec2 b2Joint::GetReactionForce(float32) const
REFERENCE_OVERRIDE b2Vec2 b2WeldJoint::GetReactionForce(float32) const -> b2Vec2 b2Joint::GetReactionForce(float32) const [b2WeldJoint.cpp <318:21 318:36>]
SYMBOL_CLASS b2WeldJoint
REFERENCE_TYPE_USAGE b2Vec2 b2WeldJoint::GetReactionForce(float32) const -> b2Vec2 [b2WeldJoint.cpp <318:1 318:6>]
LOCAL_SYMBOL: b2WeldJoint.cpp<318:46> [b2WeldJoint.cpp <318:46 318:51>]
REFERENCE_TYPE_USAGE b2Vec2 b2WeldJoint::GetReactionForce(float32) const -> float32 [b2WeldJoint.cpp <318:38 318:44>]
LOCAL_SYMBOL: b2WeldJoint.cpp<320:9> [b2WeldJoint.cpp <320:9 320:9>]
REFERENCE_TYPE_USAGE b2Vec2 b2WeldJoint::GetReactionForce(float32) const -> b2Vec2 [b2WeldJoint.cpp <320:2 320:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(float32, float32)
REFERENCE_CALL b2Vec2 b2WeldJoint::GetReactionForce(float32) const -> void b2Vec2::b2Vec2(float32, float32) [b2WeldJoint.cpp <320:9 320:9>]
REFERENCE_USAGE b2Vec2 b2WeldJoint::GetReactionForce(float32) const -> float32 b2Vec3::x [b2WeldJoint.cpp <320:21 320:21>]
REFERENCE_USAGE b2Vec2 b2WeldJoint::GetReactionForce(float32) const -> b2Vec3 b2WeldJoint::m_impulse [b2WeldJoint.cpp <320:11 320:19>]
REFERENCE_USAGE b2Vec2 b2WeldJoint::GetReactionForce(float32) const -> float32 b2Vec3::y [b2WeldJoint.cpp <320:34 320:34>]
REFERENCE_USAGE b2Vec2 b2WeldJoint::GetReactionForce(float32) const -> b2Vec3 b2WeldJoint::m_impulse [b2WeldJoint.cpp <320:24 320:32>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL b2Vec2 b2WeldJoint::GetReactionForce(float32) const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WeldJoint.cpp <321:16 321:16>]
LOCAL_SYMBOL: b2WeldJoint.cpp<318:46> [b2WeldJoint.cpp <321:9 321:14>]
LOCAL_SYMBOL: b2WeldJoint.cpp<320:9> [b2WeldJoint.cpp <321:18 321:18>]
SYMBOL_METHOD public float32 b2WeldJoint::GetReactionTorque(float32) const [b2WeldJoint.cpp <324:1 <324:22 324:38> 327:1>]
SYMBOL_FUNCTION float32 b2Joint::GetReactionTorque(float32) const
REFERENCE_OVERRIDE float32 b2WeldJoint::GetReactionTorque(float32) const -> float32 b2Joint::GetReactionTorque(float32) const [b2WeldJoint.cpp <324:22 324:38>]
SYMBOL_CLASS b2WeldJoint
REFERENCE_TYPE_USAGE float32 b2WeldJoint::GetReactionTorque(float32) const -> float32 [b2WeldJoint.cpp <324:1 324:7>]
LOCAL_SYMBOL: b2WeldJoint.cpp<324:48> [b2WeldJoint.cpp <324:48 324:53>]
REFERENCE_TYPE_USAGE float32 b2WeldJoint::GetReactionTorque(float32) const -> float32 [b2WeldJoint.cpp <324:40 324:46>]
LOCAL_SYMBOL: b2WeldJoint.cpp<324:48> [b2WeldJoint.cpp <326:9 326:14>]
REFERENCE_USAGE float32 b2WeldJoint::GetReactionTorque(float32) const -> float32 b2Vec3::z [b2WeldJoint.cpp <326:28 326:28>]
REFERENCE_USAGE float32 b2WeldJoint::GetReactionTorque(float32) const -> b2Vec3 b2WeldJoint::m_impulse [b2WeldJoint.cpp <326:18 326:26>]
SYMBOL_METHOD public void b2WeldJoint::Dump() [b2WeldJoint.cpp <329:1 <329:19 329:22> 344:1>]
SYMBOL_FUNCTION void b2Joint::Dump()
REFERENCE_OVERRIDE void b2WeldJoint::Dump() -> void b2Joint::Dump() [b2WeldJoint.cpp <329:19 329:22>]
SYMBOL_CLASS b2WeldJoint
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2WeldJoint::Dump() -> void [b2WeldJoint.cpp <329:1 329:4>]
LOCAL_SYMBOL: b2WeldJoint.cpp<331:8> [b2WeldJoint.cpp <331:8 331:13>]
REFERENCE_TYPE_USAGE void b2WeldJoint::Dump() -> int32 [b2WeldJoint.cpp <331:2 331:6>]
REFERENCE_USAGE void b2WeldJoint::Dump() -> int32 b2Body::m_islandIndex [b2WeldJoint.cpp <331:26 331:38>]
REFERENCE_USAGE void b2WeldJoint::Dump() -> b2Body * b2Joint::m_bodyA [b2WeldJoint.cpp <331:17 331:23>]
LOCAL_SYMBOL: b2WeldJoint.cpp<332:8> [b2WeldJoint.cpp <332:8 332:13>]
REFERENCE_TYPE_USAGE void b2WeldJoint::Dump() -> int32 [b2WeldJoint.cpp <332:2 332:6>]
REFERENCE_USAGE void b2WeldJoint::Dump() -> int32 b2Body::m_islandIndex [b2WeldJoint.cpp <332:26 332:38>]
REFERENCE_USAGE void b2WeldJoint::Dump() -> b2Body * b2Joint::m_bodyB [b2WeldJoint.cpp <332:17 332:23>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2WeldJoint::Dump() -> void b2Log(const char *) [b2WeldJoint.cpp <334:2 334:6>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2WeldJoint::Dump() -> void b2Log(const char *) [b2WeldJoint.cpp <335:2 335:6>]
LOCAL_SYMBOL: b2WeldJoint.cpp<331:8> [b2WeldJoint.cpp <335:38 335:43>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2WeldJoint::Dump() -> void b2Log(const char *) [b2WeldJoint.cpp <336:2 336:6>]
LOCAL_SYMBOL: b2WeldJoint.cpp<332:8> [b2WeldJoint.cpp <336:38 336:43>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2WeldJoint::Dump() -> void b2Log(const char *) [b2WeldJoint.cpp <337:2 337:6>]
REFERENCE_USAGE void b2WeldJoint::Dump() -> bool b2Joint::m_collideConnected [b2WeldJoint.cpp <337:47 337:64>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2WeldJoint::Dump() -> void b2Log(const char *) [b2WeldJoint.cpp <338:2 338:6>]
REFERENCE_USAGE void b2WeldJoint::Dump() -> float32 b2Vec2::x [b2WeldJoint.cpp <338:69 338:69>]
REFERENCE_USAGE void b2WeldJoint::Dump() -> b2Vec2 b2WeldJoint::m_localAnchorA [b2WeldJoint.cpp <338:54 338:67>]
REFERENCE_USAGE void b2WeldJoint::Dump() -> float32 b2Vec2::y [b2WeldJoint.cpp <338:87 338:87>]
REFERENCE_USAGE void b2WeldJoint::Dump() -> b2Vec2 b2WeldJoint::m_localAnchorA [b2WeldJoint.cpp <338:72 338:85>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2WeldJoint::Dump() -> void b2Log(const char *) [b2WeldJoint.cpp <339:2 339:6>]
REFERENCE_USAGE void b2WeldJoint::Dump() -> float32 b2Vec2::x [b2WeldJoint.cpp <339:69 339:69>]
REFERENCE_USAGE void b2WeldJoint::Dump() -> b2Vec2 b2WeldJoint::m_localAnchorB [b2WeldJoint.cpp <339:54 339:67>]
REFERENCE_USAGE void b2WeldJoint::Dump() -> float32 b2Vec2::y [b2WeldJoint.cpp <339:87 339:87>]
REFERENCE_USAGE void b2WeldJoint::Dump() -> b2Vec2 b2WeldJoint::m_localAnchorB [b2WeldJoint.cpp <339:72 339:85>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2WeldJoint::Dump() -> void b2Log(const char *) [b2WeldJoint.cpp <340:2 340:6>]
REFERENCE_USAGE void b2WeldJoint::Dump() -> float32 b2WeldJoint::m_referenceAngle [b2WeldJoint.cpp <340:44 340:59>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2WeldJoint::Dump() -> void b2Log(const char *) [b2WeldJoint.cpp <341:2 341:6>]
REFERENCE_USAGE void b2WeldJoint::Dump() -> float32 b2WeldJoint::m_frequencyHz [b2WeldJoint.cpp <341:41 341:53>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2WeldJoint::Dump() -> void b2Log(const char *) [b2WeldJoint.cpp <342:2 342:6>]
REFERENCE_USAGE void b2WeldJoint::Dump() -> float32 b2WeldJoint::m_dampingRatio [b2WeldJoint.cpp <342:42 342:55>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2WeldJoint::Dump() -> void b2Log(const char *) [b2WeldJoint.cpp <343:2 343:6>]
REFERENCE_USAGE void b2WeldJoint::Dump() -> int32 b2Joint::m_index [b2WeldJoint.cpp <343:55 343:61>]
