FILE: b2CollidePolygon.cpp
COMMENT: comment [b2CollidePolygon.cpp <1:1 17:3>]
COMMENT: comment [b2CollidePolygon.cpp <22:1 22:82>]
REFERENCE_MACRO_USAGE b2CollidePolygon.cpp -> b2_maxFloat [b2CollidePolygon.cpp <35:27 35:37>]
REFERENCE_MACRO_USAGE b2Settings.h -> FLT_MAX [b2Settings.h <42:22 42:28>]
COMMENT: comment [b2CollidePolygon.cpp <38:3 38:33>]
COMMENT: comment [b2CollidePolygon.cpp <42:3 42:38>]
REFERENCE_MACRO_USAGE b2CollidePolygon.cpp -> b2_maxFloat [b2CollidePolygon.cpp <43:16 43:26>]
REFERENCE_MACRO_USAGE b2CollidePolygon.cpp -> b2Assert [b2CollidePolygon.cpp <74:2 74:9>]
REFERENCE_MACRO_USAGE b2Settings.h -> assert [b2Settings.h <31:21 31:26>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:23 34:31>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:47 34:55>]
REFERENCE_MACRO_USAGE assert.h -> __FILE__ [assert.h <34:57 34:64>]
REFERENCE_MACRO_USAGE assert.h -> __LINE__ [assert.h <34:79 34:86>]
COMMENT: comment [b2CollidePolygon.cpp <76:2 76:59>]
COMMENT: comment [b2CollidePolygon.cpp <79:2 79:37>]
REFERENCE_MACRO_USAGE b2CollidePolygon.cpp -> b2_maxFloat [b2CollidePolygon.cpp <81:19 81:29>]
COMMENT: comment [b2CollidePolygon.cpp <92:2 92:51>]
COMMENT: comment [b2CollidePolygon.cpp <109:1 109:80>]
COMMENT: comment [b2CollidePolygon.cpp <110:1 110:80>]
COMMENT: comment [b2CollidePolygon.cpp <111:1 111:44>]
COMMENT: comment [b2CollidePolygon.cpp <112:1 112:22>]
COMMENT: comment [b2CollidePolygon.cpp <113:1 113:8>]
COMMENT: comment [b2CollidePolygon.cpp <115:1 115:33>]
COMMENT: comment [b2CollidePolygon.cpp <133:31 133:51>]
COMMENT: comment [b2CollidePolygon.cpp <134:31 134:50>]
COMMENT: comment [b2CollidePolygon.cpp <136:19 136:36>]
REFERENCE_MACRO_USAGE b2CollidePolygon.cpp -> b2_linearSlop [b2CollidePolygon.cpp <138:31 138:43>]
COMMENT: comment [b2CollidePolygon.cpp <185:2 185:17>]
COMMENT: comment [b2CollidePolygon.cpp <188:2 188:55>]
COMMENT: comment [b2CollidePolygon.cpp <192:2 192:58>]
COMMENT: comment [b2CollidePolygon.cpp <197:2 197:23>]
COMMENT: comment [b2CollidePolygon.cpp <203:2 203:32>]
COMMENT: comment [b2CollidePolygon.cpp <211:2 211:49>]
REFERENCE_MACRO_USAGE b2CollidePolygon.cpp -> b2_maxManifoldPoints [b2CollidePolygon.cpp <216:24 216:43>]
COMMENT: comment [b2CollidePolygon.cpp <227:5 227:21>]
SYMBOL_FUNCTION static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) [b2CollidePolygon.cpp <23:1 <23:16 23:34> 62:1>]
REFERENCE_TYPE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 [b2CollidePolygon.cpp <23:8 23:14>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<23:43> [b2CollidePolygon.cpp <23:43 23:51>]
REFERENCE_TYPE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollidePolygon.cpp <23:36 23:40>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<24:32> [b2CollidePolygon.cpp <24:32 24:36>]
REFERENCE_TYPE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2PolygonShape [b2CollidePolygon.cpp <24:16 24:29>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<24:58> [b2CollidePolygon.cpp <24:58 24:60>]
REFERENCE_TYPE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform [b2CollidePolygon.cpp <24:45 24:55>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<25:32> [b2CollidePolygon.cpp <25:32 25:36>]
REFERENCE_TYPE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2PolygonShape [b2CollidePolygon.cpp <25:16 25:29>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<25:58> [b2CollidePolygon.cpp <25:58 25:60>]
REFERENCE_TYPE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform [b2CollidePolygon.cpp <25:45 25:55>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<27:8> [b2CollidePolygon.cpp <27:8 27:13>]
REFERENCE_TYPE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollidePolygon.cpp <27:2 27:6>]
REFERENCE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2PolygonShape::m_count [b2CollidePolygon.cpp <27:24 27:30>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<24:32> [b2CollidePolygon.cpp <27:17 27:21>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<28:8> [b2CollidePolygon.cpp <28:8 28:13>]
REFERENCE_TYPE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollidePolygon.cpp <28:2 28:6>]
REFERENCE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2PolygonShape::m_count [b2CollidePolygon.cpp <28:24 28:30>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<25:32> [b2CollidePolygon.cpp <28:17 28:21>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<29:16> [b2CollidePolygon.cpp <29:16 29:18>]
REFERENCE_TYPE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [b2CollidePolygon.cpp <29:8 29:13>]
REFERENCE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [] b2PolygonShape::m_normals [b2CollidePolygon.cpp <29:29 29:37>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<24:32> [b2CollidePolygon.cpp <29:22 29:26>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<30:16> [b2CollidePolygon.cpp <30:16 30:18>]
REFERENCE_TYPE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [b2CollidePolygon.cpp <30:8 30:13>]
REFERENCE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [] b2PolygonShape::m_vertices [b2CollidePolygon.cpp <30:29 30:38>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<24:32> [b2CollidePolygon.cpp <30:22 30:26>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<31:16> [b2CollidePolygon.cpp <31:16 31:18>]
REFERENCE_TYPE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [b2CollidePolygon.cpp <31:8 31:13>]
REFERENCE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [] b2PolygonShape::m_vertices [b2CollidePolygon.cpp <31:29 31:38>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<25:32> [b2CollidePolygon.cpp <31:22 31:26>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<32:14> [b2CollidePolygon.cpp <32:14 32:15>]
REFERENCE_TYPE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform [b2CollidePolygon.cpp <32:2 32:12>]
SYMBOL_FUNCTION b2Transform b2MulT(const b2Transform &, const b2Transform &)
REFERENCE_CALL static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform b2MulT(const b2Transform &, const b2Transform &) [b2CollidePolygon.cpp <32:19 32:24>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<25:58> [b2CollidePolygon.cpp <32:26 32:28>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<24:58> [b2CollidePolygon.cpp <32:31 32:33>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<34:8> [b2CollidePolygon.cpp <34:8 34:16>]
REFERENCE_TYPE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollidePolygon.cpp <34:2 34:6>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<35:10> [b2CollidePolygon.cpp <35:10 35:22>]
REFERENCE_TYPE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 [b2CollidePolygon.cpp <35:2 35:8>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<36:13> [b2CollidePolygon.cpp <36:13 36:13>]
REFERENCE_TYPE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollidePolygon.cpp <36:7 36:11>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<36:13> [b2CollidePolygon.cpp <36:20 36:20>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<27:8> [b2CollidePolygon.cpp <36:24 36:29>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<36:13> [b2CollidePolygon.cpp <36:34 36:34>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<39:10> [b2CollidePolygon.cpp <39:10 39:10>]
REFERENCE_TYPE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [b2CollidePolygon.cpp <39:3 39:8>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2CollidePolygon.cpp <39:14 39:18>]
REFERENCE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Rot b2Transform::q [b2CollidePolygon.cpp <39:23 39:23>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<32:14> [b2CollidePolygon.cpp <39:20 39:21>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<29:16> [b2CollidePolygon.cpp <39:26 39:28>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<36:13> [b2CollidePolygon.cpp <39:30 39:30>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<40:10> [b2CollidePolygon.cpp <40:10 40:11>]
REFERENCE_TYPE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [b2CollidePolygon.cpp <40:3 40:8>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &)
REFERENCE_CALL static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2CollidePolygon.cpp <40:15 40:19>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<32:14> [b2CollidePolygon.cpp <40:21 40:22>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<30:16> [b2CollidePolygon.cpp <40:25 40:27>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<36:13> [b2CollidePolygon.cpp <40:29 40:29>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<43:11> [b2CollidePolygon.cpp <43:11 43:12>]
REFERENCE_TYPE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 [b2CollidePolygon.cpp <43:3 43:9>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<44:14> [b2CollidePolygon.cpp <44:14 44:14>]
REFERENCE_TYPE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollidePolygon.cpp <44:8 44:12>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<44:14> [b2CollidePolygon.cpp <44:21 44:21>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<28:8> [b2CollidePolygon.cpp <44:25 44:30>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<44:14> [b2CollidePolygon.cpp <44:35 44:35>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<46:12> [b2CollidePolygon.cpp <46:12 46:14>]
REFERENCE_TYPE_USAGE static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 [b2CollidePolygon.cpp <46:4 46:10>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollidePolygon.cpp <46:18 46:22>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<39:10> [b2CollidePolygon.cpp <46:24 46:24>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollidePolygon.cpp <46:34 46:34>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<31:16> [b2CollidePolygon.cpp <46:27 46:29>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<44:14> [b2CollidePolygon.cpp <46:31 46:31>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<40:10> [b2CollidePolygon.cpp <46:36 46:37>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<46:12> [b2CollidePolygon.cpp <47:8 47:10>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<43:11> [b2CollidePolygon.cpp <47:14 47:15>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<43:11> [b2CollidePolygon.cpp <49:5 49:6>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<46:12> [b2CollidePolygon.cpp <49:10 49:12>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<43:11> [b2CollidePolygon.cpp <53:7 53:8>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<35:10> [b2CollidePolygon.cpp <53:12 53:24>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<35:10> [b2CollidePolygon.cpp <55:4 55:16>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<43:11> [b2CollidePolygon.cpp <55:20 55:21>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<34:8> [b2CollidePolygon.cpp <56:4 56:12>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<36:13> [b2CollidePolygon.cpp <56:16 56:16>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<23:43> [b2CollidePolygon.cpp <60:3 60:11>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<34:8> [b2CollidePolygon.cpp <60:15 60:23>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<35:10> [b2CollidePolygon.cpp <61:9 61:21>]
SYMBOL_FUNCTION static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) [b2CollidePolygon.cpp <64:1 <64:13 64:30> 107:1>]
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> void [b2CollidePolygon.cpp <64:8 64:11>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<64:45> [b2CollidePolygon.cpp <64:45 64:45>]
REFERENCE_TYPE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2ClipVertex [b2CollidePolygon.cpp <64:32 64:43>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<65:31> [b2CollidePolygon.cpp <65:31 65:35>]
REFERENCE_TYPE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2PolygonShape [b2CollidePolygon.cpp <65:15 65:28>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<65:57> [b2CollidePolygon.cpp <65:57 65:59>]
REFERENCE_TYPE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2Transform [b2CollidePolygon.cpp <65:44 65:54>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<65:68> [b2CollidePolygon.cpp <65:68 65:72>]
REFERENCE_TYPE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollidePolygon.cpp <65:62 65:66>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<66:31> [b2CollidePolygon.cpp <66:31 66:35>]
REFERENCE_TYPE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2PolygonShape [b2CollidePolygon.cpp <66:15 66:28>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<66:57> [b2CollidePolygon.cpp <66:57 66:59>]
REFERENCE_TYPE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2Transform [b2CollidePolygon.cpp <66:44 66:54>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<68:16> [b2CollidePolygon.cpp <68:16 68:23>]
REFERENCE_TYPE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [b2CollidePolygon.cpp <68:8 68:13>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [] b2PolygonShape::m_normals [b2CollidePolygon.cpp <68:34 68:42>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<65:31> [b2CollidePolygon.cpp <68:27 68:31>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<70:8> [b2CollidePolygon.cpp <70:8 70:13>]
REFERENCE_TYPE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollidePolygon.cpp <70:2 70:6>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> int32 b2PolygonShape::m_count [b2CollidePolygon.cpp <70:24 70:30>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<66:31> [b2CollidePolygon.cpp <70:17 70:21>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<71:16> [b2CollidePolygon.cpp <71:16 71:24>]
REFERENCE_TYPE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [b2CollidePolygon.cpp <71:8 71:13>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [] b2PolygonShape::m_vertices [b2CollidePolygon.cpp <71:35 71:44>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<66:31> [b2CollidePolygon.cpp <71:28 71:32>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<72:16> [b2CollidePolygon.cpp <72:16 72:23>]
REFERENCE_TYPE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [b2CollidePolygon.cpp <72:8 72:13>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [] b2PolygonShape::m_normals [b2CollidePolygon.cpp <72:34 72:42>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<66:31> [b2CollidePolygon.cpp <72:27 72:31>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<65:68> [b2CollidePolygon.cpp <74:16 74:20>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<65:68> [b2CollidePolygon.cpp <74:25 74:29>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> int32 b2PolygonShape::m_count [b2CollidePolygon.cpp <74:40 74:46>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<65:31> [b2CollidePolygon.cpp <74:33 74:37>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<77:9> [b2CollidePolygon.cpp <77:9 77:15>]
REFERENCE_TYPE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [b2CollidePolygon.cpp <77:2 77:7>]
SYMBOL_FUNCTION b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) [b2CollidePolygon.cpp <77:19 77:24>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2Rot b2Transform::q [b2CollidePolygon.cpp <77:30 77:30>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<66:57> [b2CollidePolygon.cpp <77:26 77:28>]
REFERENCE_CALL static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2CollidePolygon.cpp <77:33 77:37>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2Rot b2Transform::q [b2CollidePolygon.cpp <77:43 77:43>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<65:57> [b2CollidePolygon.cpp <77:39 77:41>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<68:16> [b2CollidePolygon.cpp <77:46 77:53>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<65:68> [b2CollidePolygon.cpp <77:55 77:59>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<80:8> [b2CollidePolygon.cpp <80:8 80:12>]
REFERENCE_TYPE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollidePolygon.cpp <80:2 80:6>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<81:10> [b2CollidePolygon.cpp <81:10 81:15>]
REFERENCE_TYPE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> float32 [b2CollidePolygon.cpp <81:2 81:8>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<82:13> [b2CollidePolygon.cpp <82:13 82:13>]
REFERENCE_TYPE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollidePolygon.cpp <82:7 82:11>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<82:13> [b2CollidePolygon.cpp <82:20 82:20>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<70:8> [b2CollidePolygon.cpp <82:24 82:29>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<82:13> [b2CollidePolygon.cpp <82:34 82:34>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<84:11> [b2CollidePolygon.cpp <84:11 84:13>]
REFERENCE_TYPE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> float32 [b2CollidePolygon.cpp <84:3 84:9>]
REFERENCE_CALL static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollidePolygon.cpp <84:17 84:21>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<77:9> [b2CollidePolygon.cpp <84:23 84:29>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<72:16> [b2CollidePolygon.cpp <84:32 84:39>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<82:13> [b2CollidePolygon.cpp <84:41 84:41>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<84:11> [b2CollidePolygon.cpp <85:7 85:9>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<81:10> [b2CollidePolygon.cpp <85:13 85:18>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<81:10> [b2CollidePolygon.cpp <87:4 87:9>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<84:11> [b2CollidePolygon.cpp <87:13 87:15>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<80:8> [b2CollidePolygon.cpp <88:4 88:8>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<82:13> [b2CollidePolygon.cpp <88:12 88:12>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<93:8> [b2CollidePolygon.cpp <93:8 93:9>]
REFERENCE_TYPE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollidePolygon.cpp <93:2 93:6>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<80:8> [b2CollidePolygon.cpp <93:13 93:17>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<94:8> [b2CollidePolygon.cpp <94:8 94:9>]
REFERENCE_TYPE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollidePolygon.cpp <94:2 94:6>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<93:8> [b2CollidePolygon.cpp <94:13 94:14>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<70:8> [b2CollidePolygon.cpp <94:22 94:27>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<93:8> [b2CollidePolygon.cpp <94:31 94:32>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &&)
REFERENCE_CALL static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2CollidePolygon.cpp <96:9 96:9>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ClipVertex::v [b2CollidePolygon.cpp <96:7 96:7>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<64:45> [b2CollidePolygon.cpp <96:2 96:2>]
REFERENCE_CALL static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2CollidePolygon.cpp <96:11 96:15>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<66:57> [b2CollidePolygon.cpp <96:17 96:19>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<71:16> [b2CollidePolygon.cpp <96:22 96:30>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<93:8> [b2CollidePolygon.cpp <96:32 96:33>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::indexA [b2CollidePolygon.cpp <97:13 97:18>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollidePolygon.cpp <97:10 97:11>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollidePolygon.cpp <97:7 97:8>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<64:45> [b2CollidePolygon.cpp <97:2 97:2>]
REFERENCE_TYPE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> uint8 [b2CollidePolygon.cpp <97:23 97:27>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<65:68> [b2CollidePolygon.cpp <97:29 97:33>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::indexB [b2CollidePolygon.cpp <98:13 98:18>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollidePolygon.cpp <98:10 98:11>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollidePolygon.cpp <98:7 98:8>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<64:45> [b2CollidePolygon.cpp <98:2 98:2>]
REFERENCE_TYPE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> uint8 [b2CollidePolygon.cpp <98:23 98:27>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<93:8> [b2CollidePolygon.cpp <98:29 98:30>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::typeA [b2CollidePolygon.cpp <99:13 99:17>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollidePolygon.cpp <99:10 99:11>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollidePolygon.cpp <99:7 99:8>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<64:45> [b2CollidePolygon.cpp <99:2 99:2>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature::Type::e_face [b2CollidePolygon.cpp <99:39 99:44>]
SYMBOL_STRUCT b2ContactFeature
QUALIFIER: b2ContactFeature [b2CollidePolygon.cpp <99:21 99:36>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::typeB [b2CollidePolygon.cpp <100:13 100:17>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollidePolygon.cpp <100:10 100:11>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollidePolygon.cpp <100:7 100:8>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<64:45> [b2CollidePolygon.cpp <100:2 100:2>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature::Type::e_vertex [b2CollidePolygon.cpp <100:39 100:46>]
QUALIFIER: b2ContactFeature [b2CollidePolygon.cpp <100:21 100:36>]
REFERENCE_CALL static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2CollidePolygon.cpp <102:9 102:9>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ClipVertex::v [b2CollidePolygon.cpp <102:7 102:7>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<64:45> [b2CollidePolygon.cpp <102:2 102:2>]
REFERENCE_CALL static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2CollidePolygon.cpp <102:11 102:15>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<66:57> [b2CollidePolygon.cpp <102:17 102:19>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<71:16> [b2CollidePolygon.cpp <102:22 102:30>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<94:8> [b2CollidePolygon.cpp <102:32 102:33>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::indexA [b2CollidePolygon.cpp <103:13 103:18>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollidePolygon.cpp <103:10 103:11>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollidePolygon.cpp <103:7 103:8>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<64:45> [b2CollidePolygon.cpp <103:2 103:2>]
REFERENCE_TYPE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> uint8 [b2CollidePolygon.cpp <103:23 103:27>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<65:68> [b2CollidePolygon.cpp <103:29 103:33>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::indexB [b2CollidePolygon.cpp <104:13 104:18>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollidePolygon.cpp <104:10 104:11>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollidePolygon.cpp <104:7 104:8>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<64:45> [b2CollidePolygon.cpp <104:2 104:2>]
REFERENCE_TYPE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> uint8 [b2CollidePolygon.cpp <104:23 104:27>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<94:8> [b2CollidePolygon.cpp <104:29 104:30>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::typeA [b2CollidePolygon.cpp <105:13 105:17>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollidePolygon.cpp <105:10 105:11>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollidePolygon.cpp <105:7 105:8>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<64:45> [b2CollidePolygon.cpp <105:2 105:2>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature::Type::e_face [b2CollidePolygon.cpp <105:39 105:44>]
QUALIFIER: b2ContactFeature [b2CollidePolygon.cpp <105:21 105:36>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::typeB [b2CollidePolygon.cpp <106:13 106:17>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollidePolygon.cpp <106:10 106:11>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollidePolygon.cpp <106:7 106:8>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<64:45> [b2CollidePolygon.cpp <106:2 106:2>]
REFERENCE_USAGE static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature::Type::e_vertex [b2CollidePolygon.cpp <106:39 106:46>]
QUALIFIER: b2ContactFeature [b2CollidePolygon.cpp <106:21 106:36>]
SYMBOL_FUNCTION void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) [b2CollidePolygon.cpp <116:1 <116:6 116:22> 239:1>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void [b2CollidePolygon.cpp <116:1 116:4>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<116:36> [b2CollidePolygon.cpp <116:36 116:43>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Manifold [b2CollidePolygon.cpp <116:24 116:33>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<117:30> [b2CollidePolygon.cpp <117:30 117:34>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2PolygonShape [b2CollidePolygon.cpp <117:14 117:27>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<117:56> [b2CollidePolygon.cpp <117:56 117:58>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform [b2CollidePolygon.cpp <117:43 117:53>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<118:30> [b2CollidePolygon.cpp <118:30 118:34>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2PolygonShape [b2CollidePolygon.cpp <118:14 118:27>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<118:56> [b2CollidePolygon.cpp <118:56 118:58>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform [b2CollidePolygon.cpp <118:43 118:53>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2Manifold::pointCount [b2CollidePolygon.cpp <120:12 120:21>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<116:36> [b2CollidePolygon.cpp <120:2 120:9>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<121:10> [b2CollidePolygon.cpp <121:10 121:20>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 [b2CollidePolygon.cpp <121:2 121:8>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Shape::m_radius [b2CollidePolygon.cpp <121:31 121:38>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<117:30> [b2CollidePolygon.cpp <121:24 121:28>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Shape::m_radius [b2CollidePolygon.cpp <121:49 121:56>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<118:30> [b2CollidePolygon.cpp <121:42 121:46>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<123:8> [b2CollidePolygon.cpp <123:8 123:12>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollidePolygon.cpp <123:2 123:6>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<124:10> [b2CollidePolygon.cpp <124:10 124:20>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 [b2CollidePolygon.cpp <124:2 124:8>]
SYMBOL_FUNCTION static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &)
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) [b2CollidePolygon.cpp <124:24 124:42>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<123:8> [b2CollidePolygon.cpp <124:45 124:49>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<117:30> [b2CollidePolygon.cpp <124:52 124:56>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<117:56> [b2CollidePolygon.cpp <124:59 124:61>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<118:30> [b2CollidePolygon.cpp <124:64 124:68>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<118:56> [b2CollidePolygon.cpp <124:71 124:73>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<124:10> [b2CollidePolygon.cpp <125:6 125:16>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<121:10> [b2CollidePolygon.cpp <125:20 125:30>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<128:8> [b2CollidePolygon.cpp <128:8 128:12>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollidePolygon.cpp <128:2 128:6>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<129:10> [b2CollidePolygon.cpp <129:10 129:20>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 [b2CollidePolygon.cpp <129:2 129:8>]
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> static float32 b2FindMaxSeparation(int32 *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) [b2CollidePolygon.cpp <129:24 129:42>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<128:8> [b2CollidePolygon.cpp <129:45 129:49>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<118:30> [b2CollidePolygon.cpp <129:52 129:56>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<118:56> [b2CollidePolygon.cpp <129:59 129:61>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<117:30> [b2CollidePolygon.cpp <129:64 129:68>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<117:56> [b2CollidePolygon.cpp <129:71 129:73>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<129:10> [b2CollidePolygon.cpp <130:6 130:16>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<121:10> [b2CollidePolygon.cpp <130:20 130:30>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<133:24> [b2CollidePolygon.cpp <133:24 133:28>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2PolygonShape [b2CollidePolygon.cpp <133:8 133:21>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<134:24> [b2CollidePolygon.cpp <134:24 134:28>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2PolygonShape [b2CollidePolygon.cpp <134:8 134:21>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<135:14> [b2CollidePolygon.cpp <135:14 135:16>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform [b2CollidePolygon.cpp <135:2 135:12>]
SYMBOL_FUNCTION void b2Transform::b2Transform()
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void b2Transform::b2Transform() [b2CollidePolygon.cpp <135:14 135:16>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<135:19> [b2CollidePolygon.cpp <135:19 135:21>]
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void b2Transform::b2Transform() [b2CollidePolygon.cpp <135:19 135:21>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<136:8> [b2CollidePolygon.cpp <136:8 136:12>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollidePolygon.cpp <136:2 136:6>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<137:8> [b2CollidePolygon.cpp <137:8 137:11>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 [b2CollidePolygon.cpp <137:2 137:6>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<138:16> [b2CollidePolygon.cpp <138:16 138:20>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 [b2CollidePolygon.cpp <138:8 138:14>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<129:10> [b2CollidePolygon.cpp <140:6 140:16>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<124:10> [b2CollidePolygon.cpp <140:20 140:30>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<138:16> [b2CollidePolygon.cpp <140:34 140:38>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<133:24> [b2CollidePolygon.cpp <142:3 142:7>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<118:30> [b2CollidePolygon.cpp <142:11 142:15>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<134:24> [b2CollidePolygon.cpp <143:3 143:7>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<117:30> [b2CollidePolygon.cpp <143:11 143:15>]
SYMBOL_FUNCTION b2Transform & b2Transform::operator=(const b2Transform &)
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform & b2Transform::operator=(const b2Transform &) [b2CollidePolygon.cpp <144:7 144:7>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<135:14> [b2CollidePolygon.cpp <144:3 144:5>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<118:56> [b2CollidePolygon.cpp <144:9 144:11>]
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform & b2Transform::operator=(const b2Transform &) [b2CollidePolygon.cpp <145:7 145:7>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<135:19> [b2CollidePolygon.cpp <145:3 145:5>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<117:56> [b2CollidePolygon.cpp <145:9 145:11>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<136:8> [b2CollidePolygon.cpp <146:3 146:7>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<128:8> [b2CollidePolygon.cpp <146:11 146:15>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Manifold::Type b2Manifold::type [b2CollidePolygon.cpp <147:13 147:16>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<116:36> [b2CollidePolygon.cpp <147:3 147:10>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Manifold::Type::e_faceB [b2CollidePolygon.cpp <147:32 147:38>]
SYMBOL_STRUCT b2Manifold
QUALIFIER: b2Manifold [b2CollidePolygon.cpp <147:20 147:29>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<137:8> [b2CollidePolygon.cpp <148:3 148:6>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<133:24> [b2CollidePolygon.cpp <152:3 152:7>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<117:30> [b2CollidePolygon.cpp <152:11 152:15>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<134:24> [b2CollidePolygon.cpp <153:3 153:7>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<118:30> [b2CollidePolygon.cpp <153:11 153:15>]
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform & b2Transform::operator=(const b2Transform &) [b2CollidePolygon.cpp <154:7 154:7>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<135:14> [b2CollidePolygon.cpp <154:3 154:5>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<117:56> [b2CollidePolygon.cpp <154:9 154:11>]
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform & b2Transform::operator=(const b2Transform &) [b2CollidePolygon.cpp <155:7 155:7>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<135:19> [b2CollidePolygon.cpp <155:3 155:5>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<118:56> [b2CollidePolygon.cpp <155:9 155:11>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<136:8> [b2CollidePolygon.cpp <156:3 156:7>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<123:8> [b2CollidePolygon.cpp <156:11 156:15>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Manifold::Type b2Manifold::type [b2CollidePolygon.cpp <157:13 157:16>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<116:36> [b2CollidePolygon.cpp <157:3 157:10>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Manifold::Type::e_faceA [b2CollidePolygon.cpp <157:32 157:38>]
QUALIFIER: b2Manifold [b2CollidePolygon.cpp <157:20 157:29>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<137:8> [b2CollidePolygon.cpp <158:3 158:6>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<161:15> [b2CollidePolygon.cpp <161:15 161:26>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ClipVertex [b2CollidePolygon.cpp <161:2 161:13>]
SYMBOL_FUNCTION void b2ClipVertex::b2ClipVertex()
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void b2ClipVertex::b2ClipVertex() [b2CollidePolygon.cpp <161:15 161:26>]
SYMBOL_FUNCTION static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &)
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> static void b2FindIncidentEdge(b2ClipVertex [], const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &) [b2CollidePolygon.cpp <162:2 162:19>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<161:15> [b2CollidePolygon.cpp <162:21 162:32>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<133:24> [b2CollidePolygon.cpp <162:35 162:39>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<135:14> [b2CollidePolygon.cpp <162:42 162:44>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<136:8> [b2CollidePolygon.cpp <162:47 162:51>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<134:24> [b2CollidePolygon.cpp <162:54 162:58>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<135:19> [b2CollidePolygon.cpp <162:61 162:63>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<164:8> [b2CollidePolygon.cpp <164:8 164:13>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollidePolygon.cpp <164:2 164:6>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2PolygonShape::m_count [b2CollidePolygon.cpp <164:24 164:30>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<133:24> [b2CollidePolygon.cpp <164:17 164:21>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<165:16> [b2CollidePolygon.cpp <165:16 165:24>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [b2CollidePolygon.cpp <165:8 165:13>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [] b2PolygonShape::m_vertices [b2CollidePolygon.cpp <165:35 165:44>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<133:24> [b2CollidePolygon.cpp <165:28 165:32>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<167:8> [b2CollidePolygon.cpp <167:8 167:10>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollidePolygon.cpp <167:2 167:6>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<136:8> [b2CollidePolygon.cpp <167:14 167:18>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<168:8> [b2CollidePolygon.cpp <168:8 168:10>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollidePolygon.cpp <168:2 168:6>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<136:8> [b2CollidePolygon.cpp <168:14 168:18>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<164:8> [b2CollidePolygon.cpp <168:26 168:31>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<136:8> [b2CollidePolygon.cpp <168:35 168:39>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<170:9> [b2CollidePolygon.cpp <170:9 170:11>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [b2CollidePolygon.cpp <170:2 170:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2CollidePolygon.cpp <170:28 170:28>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<165:16> [b2CollidePolygon.cpp <170:15 170:23>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<167:8> [b2CollidePolygon.cpp <170:25 170:27>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<171:9> [b2CollidePolygon.cpp <171:9 171:11>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [b2CollidePolygon.cpp <171:2 171:7>]
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2CollidePolygon.cpp <171:28 171:28>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<165:16> [b2CollidePolygon.cpp <171:15 171:23>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<168:8> [b2CollidePolygon.cpp <171:25 171:27>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<173:9> [b2CollidePolygon.cpp <173:9 173:20>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [b2CollidePolygon.cpp <173:2 173:7>]
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollidePolygon.cpp <173:28 173:28>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<171:9> [b2CollidePolygon.cpp <173:24 173:26>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<170:9> [b2CollidePolygon.cpp <173:30 173:32>]
SYMBOL_FUNCTION float32 b2Vec2::Normalize()
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Vec2::Normalize() [b2CollidePolygon.cpp <174:15 174:23>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<173:9> [b2CollidePolygon.cpp <174:2 174:13>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<176:9> [b2CollidePolygon.cpp <176:9 176:19>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [b2CollidePolygon.cpp <176:2 176:7>]
SYMBOL_FUNCTION b2Vec2 b2Cross(const b2Vec2 &, float32)
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Cross(const b2Vec2 &, float32) [b2CollidePolygon.cpp <176:23 176:29>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<173:9> [b2CollidePolygon.cpp <176:31 176:42>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<177:9> [b2CollidePolygon.cpp <177:9 177:18>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [b2CollidePolygon.cpp <177:2 177:7>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2CollidePolygon.cpp <177:27 177:27>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2CollidePolygon.cpp <177:34 177:34>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<170:9> [b2CollidePolygon.cpp <177:30 177:32>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<171:9> [b2CollidePolygon.cpp <177:36 177:38>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<179:9> [b2CollidePolygon.cpp <179:9 179:15>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [b2CollidePolygon.cpp <179:2 179:7>]
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2CollidePolygon.cpp <179:19 179:23>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Rot b2Transform::q [b2CollidePolygon.cpp <179:29 179:29>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<135:14> [b2CollidePolygon.cpp <179:25 179:27>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<173:9> [b2CollidePolygon.cpp <179:32 179:43>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<180:9> [b2CollidePolygon.cpp <180:9 180:14>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [b2CollidePolygon.cpp <180:2 180:7>]
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Cross(const b2Vec2 &, float32) [b2CollidePolygon.cpp <180:18 180:24>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<179:9> [b2CollidePolygon.cpp <180:26 180:32>]
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2CollidePolygon.cpp <182:6 182:6>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<170:9> [b2CollidePolygon.cpp <182:2 182:4>]
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2CollidePolygon.cpp <182:8 182:12>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<135:14> [b2CollidePolygon.cpp <182:14 182:16>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<170:9> [b2CollidePolygon.cpp <182:19 182:21>]
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2CollidePolygon.cpp <183:6 183:6>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<171:9> [b2CollidePolygon.cpp <183:2 183:4>]
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2CollidePolygon.cpp <183:8 183:12>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<135:14> [b2CollidePolygon.cpp <183:14 183:16>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<171:9> [b2CollidePolygon.cpp <183:19 183:21>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<186:10> [b2CollidePolygon.cpp <186:10 186:20>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 [b2CollidePolygon.cpp <186:2 186:8>]
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollidePolygon.cpp <186:24 186:28>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<180:9> [b2CollidePolygon.cpp <186:30 186:35>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<170:9> [b2CollidePolygon.cpp <186:38 186:40>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<189:10> [b2CollidePolygon.cpp <189:10 189:20>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 [b2CollidePolygon.cpp <189:2 189:8>]
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollidePolygon.cpp <189:25 189:29>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<179:9> [b2CollidePolygon.cpp <189:31 189:37>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<170:9> [b2CollidePolygon.cpp <189:40 189:42>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<121:10> [b2CollidePolygon.cpp <189:47 189:57>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<190:10> [b2CollidePolygon.cpp <190:10 190:20>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 [b2CollidePolygon.cpp <190:2 190:8>]
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollidePolygon.cpp <190:24 190:28>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<179:9> [b2CollidePolygon.cpp <190:30 190:36>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<171:9> [b2CollidePolygon.cpp <190:39 190:41>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<121:10> [b2CollidePolygon.cpp <190:46 190:56>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<193:15> [b2CollidePolygon.cpp <193:15 193:25>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ClipVertex [b2CollidePolygon.cpp <193:2 193:13>]
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void b2ClipVertex::b2ClipVertex() [b2CollidePolygon.cpp <193:15 193:25>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<194:15> [b2CollidePolygon.cpp <194:15 194:25>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ClipVertex [b2CollidePolygon.cpp <194:2 194:13>]
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void b2ClipVertex::b2ClipVertex() [b2CollidePolygon.cpp <194:15 194:25>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<195:6> [b2CollidePolygon.cpp <195:6 195:7>]
SYMBOL_BUILTIN_TYPE int
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int [b2CollidePolygon.cpp <195:2 195:4>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<195:6> [b2CollidePolygon.cpp <198:2 198:3>]
SYMBOL_FUNCTION int32 b2ClipSegmentToLine(b2ClipVertex [], const b2ClipVertex [] const, const b2Vec2 &, float32, int32)
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2ClipSegmentToLine(b2ClipVertex [], const b2ClipVertex [] const, const b2Vec2 &, float32, int32) [b2CollidePolygon.cpp <198:7 198:25>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<193:15> [b2CollidePolygon.cpp <198:27 198:37>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<161:15> [b2CollidePolygon.cpp <198:40 198:51>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollidePolygon.cpp <198:54 198:54>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<179:9> [b2CollidePolygon.cpp <198:55 198:61>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<189:10> [b2CollidePolygon.cpp <198:64 198:74>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<167:8> [b2CollidePolygon.cpp <198:77 198:79>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<195:6> [b2CollidePolygon.cpp <200:6 200:7>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<195:6> [b2CollidePolygon.cpp <204:2 204:3>]
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2ClipSegmentToLine(b2ClipVertex [], const b2ClipVertex [] const, const b2Vec2 &, float32, int32) [b2CollidePolygon.cpp <204:7 204:25>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<194:15> [b2CollidePolygon.cpp <204:27 204:37>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<193:15> [b2CollidePolygon.cpp <204:40 204:50>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<179:9> [b2CollidePolygon.cpp <204:54 204:60>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<190:10> [b2CollidePolygon.cpp <204:63 204:73>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<168:8> [b2CollidePolygon.cpp <204:76 204:78>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<195:6> [b2CollidePolygon.cpp <206:6 206:7>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollidePolygon.cpp <212:24 212:24>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Manifold::localNormal [b2CollidePolygon.cpp <212:12 212:22>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<116:36> [b2CollidePolygon.cpp <212:2 212:9>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<176:9> [b2CollidePolygon.cpp <212:26 212:36>]
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollidePolygon.cpp <213:23 213:23>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Manifold::localPoint [b2CollidePolygon.cpp <213:12 213:21>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<116:36> [b2CollidePolygon.cpp <213:2 213:9>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<177:9> [b2CollidePolygon.cpp <213:25 213:34>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<215:8> [b2CollidePolygon.cpp <215:8 215:17>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollidePolygon.cpp <215:2 215:6>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<216:13> [b2CollidePolygon.cpp <216:13 216:13>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollidePolygon.cpp <216:7 216:11>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<216:13> [b2CollidePolygon.cpp <216:20 216:20>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<216:13> [b2CollidePolygon.cpp <216:48 216:48>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<218:11> [b2CollidePolygon.cpp <218:11 218:20>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 [b2CollidePolygon.cpp <218:3 218:9>]
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollidePolygon.cpp <218:24 218:28>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<180:9> [b2CollidePolygon.cpp <218:30 218:35>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ClipVertex::v [b2CollidePolygon.cpp <218:53 218:53>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<194:15> [b2CollidePolygon.cpp <218:38 218:48>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<216:13> [b2CollidePolygon.cpp <218:50 218:50>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<186:10> [b2CollidePolygon.cpp <218:58 218:68>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<218:11> [b2CollidePolygon.cpp <220:7 220:16>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<121:10> [b2CollidePolygon.cpp <220:21 220:31>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<222:21> [b2CollidePolygon.cpp <222:21 222:22>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ManifoldPoint [b2CollidePolygon.cpp <222:4 222:18>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ManifoldPoint [] b2Manifold::points [b2CollidePolygon.cpp <222:36 222:41>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<116:36> [b2CollidePolygon.cpp <222:26 222:33>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<215:8> [b2CollidePolygon.cpp <222:45 222:54>]
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2CollidePolygon.cpp <223:19 223:19>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ManifoldPoint::localPoint [b2CollidePolygon.cpp <223:8 223:17>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<222:21> [b2CollidePolygon.cpp <223:4 223:5>]
SYMBOL_FUNCTION b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &)
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) [b2CollidePolygon.cpp <223:21 223:26>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<135:19> [b2CollidePolygon.cpp <223:28 223:30>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ClipVertex::v [b2CollidePolygon.cpp <223:48 223:48>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<194:15> [b2CollidePolygon.cpp <223:33 223:43>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<216:13> [b2CollidePolygon.cpp <223:45 223:45>]
SYMBOL_FUNCTION b2ContactID & b2ContactID::operator=(const b2ContactID &)
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID & b2ContactID::operator=(const b2ContactID &) [b2CollidePolygon.cpp <224:11 224:11>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ManifoldPoint::id [b2CollidePolygon.cpp <224:8 224:9>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<222:21> [b2CollidePolygon.cpp <224:4 224:5>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollidePolygon.cpp <224:28 224:29>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<194:15> [b2CollidePolygon.cpp <224:13 224:23>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<216:13> [b2CollidePolygon.cpp <224:25 224:25>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<137:8> [b2CollidePolygon.cpp <225:8 225:11>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<228:22> [b2CollidePolygon.cpp <228:22 228:23>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature [b2CollidePolygon.cpp <228:5 228:20>]
SYMBOL_FUNCTION void b2ContactFeature::b2ContactFeature(const b2ContactFeature &)
REFERENCE_CALL void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void b2ContactFeature::b2ContactFeature(const b2ContactFeature &) [b2CollidePolygon.cpp <228:34 228:35>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollidePolygon.cpp <228:34 228:35>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ManifoldPoint::id [b2CollidePolygon.cpp <228:31 228:32>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<222:21> [b2CollidePolygon.cpp <228:27 228:28>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::indexA [b2CollidePolygon.cpp <229:15 229:20>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollidePolygon.cpp <229:12 229:13>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ManifoldPoint::id [b2CollidePolygon.cpp <229:9 229:10>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<222:21> [b2CollidePolygon.cpp <229:5 229:6>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::indexB [b2CollidePolygon.cpp <229:27 229:32>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<228:22> [b2CollidePolygon.cpp <229:24 229:25>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::indexB [b2CollidePolygon.cpp <230:15 230:20>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollidePolygon.cpp <230:12 230:13>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ManifoldPoint::id [b2CollidePolygon.cpp <230:9 230:10>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<222:21> [b2CollidePolygon.cpp <230:5 230:6>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::indexA [b2CollidePolygon.cpp <230:27 230:32>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<228:22> [b2CollidePolygon.cpp <230:24 230:25>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::typeA [b2CollidePolygon.cpp <231:15 231:19>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollidePolygon.cpp <231:12 231:13>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ManifoldPoint::id [b2CollidePolygon.cpp <231:9 231:10>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<222:21> [b2CollidePolygon.cpp <231:5 231:6>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::typeB [b2CollidePolygon.cpp <231:26 231:30>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<228:22> [b2CollidePolygon.cpp <231:23 231:24>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::typeB [b2CollidePolygon.cpp <232:15 232:19>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollidePolygon.cpp <232:12 232:13>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ManifoldPoint::id [b2CollidePolygon.cpp <232:9 232:10>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<222:21> [b2CollidePolygon.cpp <232:5 232:6>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::typeA [b2CollidePolygon.cpp <232:26 232:30>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<228:22> [b2CollidePolygon.cpp <232:23 232:24>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<215:8> [b2CollidePolygon.cpp <234:6 234:15>]
REFERENCE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2Manifold::pointCount [b2CollidePolygon.cpp <238:12 238:21>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<116:36> [b2CollidePolygon.cpp <238:2 238:9>]
LOCAL_SYMBOL: b2CollidePolygon.cpp<215:8> [b2CollidePolygon.cpp <238:25 238:34>]
