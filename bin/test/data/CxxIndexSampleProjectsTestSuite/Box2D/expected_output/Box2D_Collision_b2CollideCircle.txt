FILE: b2CollideCircle.cpp
COMMENT: comment [b2CollideCircle.cpp <1:1 17:3>]
COMMENT: comment [b2CollideCircle.cpp <58:2 58:57>]
COMMENT: comment [b2CollideCircle.cpp <62:2 62:34>]
REFERENCE_MACRO_USAGE b2CollideCircle.cpp -> b2_maxFloat [b2CollideCircle.cpp <64:24 64:34>]
REFERENCE_MACRO_USAGE b2Settings.h -> FLT_MAX [b2Settings.h <42:22 42:28>]
COMMENT: comment [b2CollideCircle.cpp <76:4 76:17>]
COMMENT: comment [b2CollideCircle.cpp <87:2 87:45>]
COMMENT: comment [b2CollideCircle.cpp <93:2 93:44>]
REFERENCE_MACRO_USAGE b2CollideCircle.cpp -> b2_epsilon [b2CollideCircle.cpp <94:19 94:28>]
REFERENCE_MACRO_USAGE b2Settings.h -> FLT_EPSILON [b2Settings.h <43:21 43:31>]
COMMENT: comment [b2CollideCircle.cpp <105:2 105:36>]
SYMBOL_FUNCTION void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) [b2CollideCircle.cpp <23:1 <23:6 23:21> 49:1>]
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> void [b2CollideCircle.cpp <23:1 23:4>]
LOCAL_SYMBOL: b2CollideCircle.cpp<24:14> [b2CollideCircle.cpp <24:14 24:21>]
REFERENCE_TYPE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Manifold [b2CollideCircle.cpp <24:2 24:11>]
LOCAL_SYMBOL: b2CollideCircle.cpp<25:23> [b2CollideCircle.cpp <25:23 25:29>]
REFERENCE_TYPE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2CircleShape [b2CollideCircle.cpp <25:8 25:20>]
LOCAL_SYMBOL: b2CollideCircle.cpp<25:51> [b2CollideCircle.cpp <25:51 25:53>]
REFERENCE_TYPE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Transform [b2CollideCircle.cpp <25:38 25:48>]
LOCAL_SYMBOL: b2CollideCircle.cpp<26:23> [b2CollideCircle.cpp <26:23 26:29>]
REFERENCE_TYPE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2CircleShape [b2CollideCircle.cpp <26:8 26:20>]
LOCAL_SYMBOL: b2CollideCircle.cpp<26:51> [b2CollideCircle.cpp <26:51 26:53>]
REFERENCE_TYPE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Transform [b2CollideCircle.cpp <26:38 26:48>]
REFERENCE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> int32 b2Manifold::pointCount [b2CollideCircle.cpp <28:12 28:21>]
LOCAL_SYMBOL: b2CollideCircle.cpp<24:14> [b2CollideCircle.cpp <28:2 28:9>]
LOCAL_SYMBOL: b2CollideCircle.cpp<30:9> [b2CollideCircle.cpp <30:9 30:10>]
REFERENCE_TYPE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideCircle.cpp <30:2 30:7>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &)
REFERENCE_CALL void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2CollideCircle.cpp <30:14 30:18>]
LOCAL_SYMBOL: b2CollideCircle.cpp<25:51> [b2CollideCircle.cpp <30:20 30:22>]
REFERENCE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2CircleShape::m_p [b2CollideCircle.cpp <30:34 30:36>]
LOCAL_SYMBOL: b2CollideCircle.cpp<25:23> [b2CollideCircle.cpp <30:25 30:31>]
LOCAL_SYMBOL: b2CollideCircle.cpp<31:9> [b2CollideCircle.cpp <31:9 31:10>]
REFERENCE_TYPE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideCircle.cpp <31:2 31:7>]
REFERENCE_CALL void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2CollideCircle.cpp <31:14 31:18>]
LOCAL_SYMBOL: b2CollideCircle.cpp<26:51> [b2CollideCircle.cpp <31:20 31:22>]
REFERENCE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2CircleShape::m_p [b2CollideCircle.cpp <31:34 31:36>]
LOCAL_SYMBOL: b2CollideCircle.cpp<26:23> [b2CollideCircle.cpp <31:25 31:31>]
LOCAL_SYMBOL: b2CollideCircle.cpp<33:9> [b2CollideCircle.cpp <33:9 33:9>]
REFERENCE_TYPE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideCircle.cpp <33:2 33:7>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideCircle.cpp <33:16 33:16>]
LOCAL_SYMBOL: b2CollideCircle.cpp<31:9> [b2CollideCircle.cpp <33:13 33:14>]
LOCAL_SYMBOL: b2CollideCircle.cpp<30:9> [b2CollideCircle.cpp <33:18 33:19>]
LOCAL_SYMBOL: b2CollideCircle.cpp<34:10> [b2CollideCircle.cpp <34:10 34:16>]
REFERENCE_TYPE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 [b2CollideCircle.cpp <34:2 34:8>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideCircle.cpp <34:20 34:24>]
LOCAL_SYMBOL: b2CollideCircle.cpp<33:9> [b2CollideCircle.cpp <34:26 34:26>]
LOCAL_SYMBOL: b2CollideCircle.cpp<33:9> [b2CollideCircle.cpp <34:29 34:29>]
LOCAL_SYMBOL: b2CollideCircle.cpp<35:10> [b2CollideCircle.cpp <35:10 35:11>]
REFERENCE_TYPE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 [b2CollideCircle.cpp <35:2 35:8>]
REFERENCE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Shape::m_radius [b2CollideCircle.cpp <35:24 35:31>]
LOCAL_SYMBOL: b2CollideCircle.cpp<25:23> [b2CollideCircle.cpp <35:15 35:21>]
LOCAL_SYMBOL: b2CollideCircle.cpp<35:34> [b2CollideCircle.cpp <35:34 35:35>]
REFERENCE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Shape::m_radius [b2CollideCircle.cpp <35:48 35:55>]
LOCAL_SYMBOL: b2CollideCircle.cpp<26:23> [b2CollideCircle.cpp <35:39 35:45>]
LOCAL_SYMBOL: b2CollideCircle.cpp<36:10> [b2CollideCircle.cpp <36:10 36:15>]
REFERENCE_TYPE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 [b2CollideCircle.cpp <36:2 36:8>]
LOCAL_SYMBOL: b2CollideCircle.cpp<35:10> [b2CollideCircle.cpp <36:19 36:20>]
LOCAL_SYMBOL: b2CollideCircle.cpp<35:34> [b2CollideCircle.cpp <36:24 36:25>]
LOCAL_SYMBOL: b2CollideCircle.cpp<34:10> [b2CollideCircle.cpp <37:6 37:12>]
LOCAL_SYMBOL: b2CollideCircle.cpp<36:10> [b2CollideCircle.cpp <37:16 37:21>]
LOCAL_SYMBOL: b2CollideCircle.cpp<36:10> [b2CollideCircle.cpp <37:25 37:30>]
REFERENCE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Manifold::Type b2Manifold::type [b2CollideCircle.cpp <42:12 42:15>]
LOCAL_SYMBOL: b2CollideCircle.cpp<24:14> [b2CollideCircle.cpp <42:2 42:9>]
REFERENCE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Manifold::Type::e_circles [b2CollideCircle.cpp <42:31 42:39>]
SYMBOL_STRUCT b2Manifold
QUALIFIER: b2Manifold [b2CollideCircle.cpp <42:19 42:28>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideCircle.cpp <43:23 43:23>]
REFERENCE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2Manifold::localPoint [b2CollideCircle.cpp <43:12 43:21>]
LOCAL_SYMBOL: b2CollideCircle.cpp<24:14> [b2CollideCircle.cpp <43:2 43:9>]
REFERENCE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2CircleShape::m_p [b2CollideCircle.cpp <43:34 43:36>]
LOCAL_SYMBOL: b2CollideCircle.cpp<25:23> [b2CollideCircle.cpp <43:25 43:31>]
SYMBOL_FUNCTION void b2Vec2::SetZero()
REFERENCE_CALL void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> void b2Vec2::SetZero() [b2CollideCircle.cpp <44:24 44:30>]
REFERENCE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2Manifold::localNormal [b2CollideCircle.cpp <44:12 44:22>]
LOCAL_SYMBOL: b2CollideCircle.cpp<24:14> [b2CollideCircle.cpp <44:2 44:9>]
REFERENCE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> int32 b2Manifold::pointCount [b2CollideCircle.cpp <45:12 45:21>]
LOCAL_SYMBOL: b2CollideCircle.cpp<24:14> [b2CollideCircle.cpp <45:2 45:9>]
REFERENCE_CALL void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideCircle.cpp <47:33 47:33>]
REFERENCE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2ManifoldPoint::localPoint [b2CollideCircle.cpp <47:22 47:31>]
REFERENCE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ManifoldPoint [] b2Manifold::points [b2CollideCircle.cpp <47:12 47:17>]
LOCAL_SYMBOL: b2CollideCircle.cpp<24:14> [b2CollideCircle.cpp <47:2 47:9>]
REFERENCE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2CircleShape::m_p [b2CollideCircle.cpp <47:44 47:46>]
LOCAL_SYMBOL: b2CollideCircle.cpp<26:23> [b2CollideCircle.cpp <47:35 47:41>]
REFERENCE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> uint32 b2ContactID::key [b2CollideCircle.cpp <48:25 48:27>]
REFERENCE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ContactID b2ManifoldPoint::id [b2CollideCircle.cpp <48:22 48:23>]
REFERENCE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ManifoldPoint [] b2Manifold::points [b2CollideCircle.cpp <48:12 48:17>]
LOCAL_SYMBOL: b2CollideCircle.cpp<24:14> [b2CollideCircle.cpp <48:2 48:9>]
SYMBOL_FUNCTION void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) [b2CollideCircle.cpp <51:1 <51:6 51:30> 154:1>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> void [b2CollideCircle.cpp <51:1 51:4>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <52:14 52:21>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Manifold [b2CollideCircle.cpp <52:2 52:11>]
LOCAL_SYMBOL: b2CollideCircle.cpp<53:24> [b2CollideCircle.cpp <53:24 53:31>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2PolygonShape [b2CollideCircle.cpp <53:8 53:21>]
LOCAL_SYMBOL: b2CollideCircle.cpp<53:53> [b2CollideCircle.cpp <53:53 53:55>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Transform [b2CollideCircle.cpp <53:40 53:50>]
LOCAL_SYMBOL: b2CollideCircle.cpp<54:23> [b2CollideCircle.cpp <54:23 54:29>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2CircleShape [b2CollideCircle.cpp <54:8 54:20>]
LOCAL_SYMBOL: b2CollideCircle.cpp<54:51> [b2CollideCircle.cpp <54:51 54:53>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Transform [b2CollideCircle.cpp <54:38 54:48>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> int32 b2Manifold::pointCount [b2CollideCircle.cpp <56:12 56:21>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <56:2 56:9>]
LOCAL_SYMBOL: b2CollideCircle.cpp<59:9> [b2CollideCircle.cpp <59:9 59:9>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideCircle.cpp <59:2 59:7>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2CollideCircle.cpp <59:13 59:17>]
LOCAL_SYMBOL: b2CollideCircle.cpp<54:51> [b2CollideCircle.cpp <59:19 59:21>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2CircleShape::m_p [b2CollideCircle.cpp <59:33 59:35>]
LOCAL_SYMBOL: b2CollideCircle.cpp<54:23> [b2CollideCircle.cpp <59:24 59:30>]
LOCAL_SYMBOL: b2CollideCircle.cpp<60:9> [b2CollideCircle.cpp <60:9 60:14>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideCircle.cpp <60:2 60:7>]
SYMBOL_FUNCTION b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &)
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) [b2CollideCircle.cpp <60:18 60:23>]
LOCAL_SYMBOL: b2CollideCircle.cpp<53:53> [b2CollideCircle.cpp <60:25 60:27>]
LOCAL_SYMBOL: b2CollideCircle.cpp<59:9> [b2CollideCircle.cpp <60:30 60:30>]
LOCAL_SYMBOL: b2CollideCircle.cpp<63:8> [b2CollideCircle.cpp <63:8 63:18>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> int32 [b2CollideCircle.cpp <63:2 63:6>]
LOCAL_SYMBOL: b2CollideCircle.cpp<64:10> [b2CollideCircle.cpp <64:10 64:19>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 [b2CollideCircle.cpp <64:2 64:8>]
LOCAL_SYMBOL: b2CollideCircle.cpp<65:10> [b2CollideCircle.cpp <65:10 65:15>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 [b2CollideCircle.cpp <65:2 65:8>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Shape::m_radius [b2CollideCircle.cpp <65:29 65:36>]
LOCAL_SYMBOL: b2CollideCircle.cpp<53:24> [b2CollideCircle.cpp <65:19 65:26>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Shape::m_radius [b2CollideCircle.cpp <65:49 65:56>]
LOCAL_SYMBOL: b2CollideCircle.cpp<54:23> [b2CollideCircle.cpp <65:40 65:46>]
LOCAL_SYMBOL: b2CollideCircle.cpp<66:8> [b2CollideCircle.cpp <66:8 66:18>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> int32 [b2CollideCircle.cpp <66:2 66:6>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> int32 b2PolygonShape::m_count [b2CollideCircle.cpp <66:32 66:38>]
LOCAL_SYMBOL: b2CollideCircle.cpp<53:24> [b2CollideCircle.cpp <66:22 66:29>]
LOCAL_SYMBOL: b2CollideCircle.cpp<67:16> [b2CollideCircle.cpp <67:16 67:23>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideCircle.cpp <67:8 67:13>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [] b2PolygonShape::m_vertices [b2CollideCircle.cpp <67:37 67:46>]
LOCAL_SYMBOL: b2CollideCircle.cpp<53:24> [b2CollideCircle.cpp <67:27 67:34>]
LOCAL_SYMBOL: b2CollideCircle.cpp<68:16> [b2CollideCircle.cpp <68:16 68:22>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideCircle.cpp <68:8 68:13>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [] b2PolygonShape::m_normals [b2CollideCircle.cpp <68:36 68:44>]
LOCAL_SYMBOL: b2CollideCircle.cpp<53:24> [b2CollideCircle.cpp <68:26 68:33>]
LOCAL_SYMBOL: b2CollideCircle.cpp<70:13> [b2CollideCircle.cpp <70:13 70:13>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> int32 [b2CollideCircle.cpp <70:7 70:11>]
LOCAL_SYMBOL: b2CollideCircle.cpp<70:13> [b2CollideCircle.cpp <70:20 70:20>]
LOCAL_SYMBOL: b2CollideCircle.cpp<66:8> [b2CollideCircle.cpp <70:24 70:34>]
LOCAL_SYMBOL: b2CollideCircle.cpp<70:13> [b2CollideCircle.cpp <70:39 70:39>]
LOCAL_SYMBOL: b2CollideCircle.cpp<72:11> [b2CollideCircle.cpp <72:11 72:11>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 [b2CollideCircle.cpp <72:3 72:9>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideCircle.cpp <72:15 72:19>]
LOCAL_SYMBOL: b2CollideCircle.cpp<68:16> [b2CollideCircle.cpp <72:21 72:27>]
LOCAL_SYMBOL: b2CollideCircle.cpp<70:13> [b2CollideCircle.cpp <72:29 72:29>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideCircle.cpp <72:40 72:40>]
LOCAL_SYMBOL: b2CollideCircle.cpp<60:9> [b2CollideCircle.cpp <72:33 72:38>]
LOCAL_SYMBOL: b2CollideCircle.cpp<67:16> [b2CollideCircle.cpp <72:42 72:49>]
LOCAL_SYMBOL: b2CollideCircle.cpp<70:13> [b2CollideCircle.cpp <72:51 72:51>]
LOCAL_SYMBOL: b2CollideCircle.cpp<72:11> [b2CollideCircle.cpp <74:7 74:7>]
LOCAL_SYMBOL: b2CollideCircle.cpp<65:10> [b2CollideCircle.cpp <74:11 74:16>]
LOCAL_SYMBOL: b2CollideCircle.cpp<72:11> [b2CollideCircle.cpp <80:7 80:7>]
LOCAL_SYMBOL: b2CollideCircle.cpp<64:10> [b2CollideCircle.cpp <80:11 80:20>]
LOCAL_SYMBOL: b2CollideCircle.cpp<64:10> [b2CollideCircle.cpp <82:4 82:13>]
LOCAL_SYMBOL: b2CollideCircle.cpp<72:11> [b2CollideCircle.cpp <82:17 82:17>]
LOCAL_SYMBOL: b2CollideCircle.cpp<63:8> [b2CollideCircle.cpp <83:4 83:14>]
LOCAL_SYMBOL: b2CollideCircle.cpp<70:13> [b2CollideCircle.cpp <83:18 83:18>]
LOCAL_SYMBOL: b2CollideCircle.cpp<88:8> [b2CollideCircle.cpp <88:8 88:17>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> int32 [b2CollideCircle.cpp <88:2 88:6>]
LOCAL_SYMBOL: b2CollideCircle.cpp<63:8> [b2CollideCircle.cpp <88:21 88:31>]
LOCAL_SYMBOL: b2CollideCircle.cpp<89:8> [b2CollideCircle.cpp <89:8 89:17>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> int32 [b2CollideCircle.cpp <89:2 89:6>]
LOCAL_SYMBOL: b2CollideCircle.cpp<88:8> [b2CollideCircle.cpp <89:21 89:30>]
LOCAL_SYMBOL: b2CollideCircle.cpp<66:8> [b2CollideCircle.cpp <89:38 89:48>]
LOCAL_SYMBOL: b2CollideCircle.cpp<88:8> [b2CollideCircle.cpp <89:52 89:61>]
LOCAL_SYMBOL: b2CollideCircle.cpp<90:9> [b2CollideCircle.cpp <90:9 90:10>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideCircle.cpp <90:2 90:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2CollideCircle.cpp <90:33 90:33>]
LOCAL_SYMBOL: b2CollideCircle.cpp<67:16> [b2CollideCircle.cpp <90:14 90:21>]
LOCAL_SYMBOL: b2CollideCircle.cpp<88:8> [b2CollideCircle.cpp <90:23 90:32>]
LOCAL_SYMBOL: b2CollideCircle.cpp<91:9> [b2CollideCircle.cpp <91:9 91:10>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideCircle.cpp <91:2 91:7>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2CollideCircle.cpp <91:33 91:33>]
LOCAL_SYMBOL: b2CollideCircle.cpp<67:16> [b2CollideCircle.cpp <91:14 91:21>]
LOCAL_SYMBOL: b2CollideCircle.cpp<89:8> [b2CollideCircle.cpp <91:23 91:32>]
LOCAL_SYMBOL: b2CollideCircle.cpp<64:10> [b2CollideCircle.cpp <94:6 94:15>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> int32 b2Manifold::pointCount [b2CollideCircle.cpp <96:13 96:22>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <96:3 96:10>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Manifold::Type b2Manifold::type [b2CollideCircle.cpp <97:13 97:16>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <97:3 97:10>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Manifold::Type::e_faceA [b2CollideCircle.cpp <97:32 97:38>]
QUALIFIER: b2Manifold [b2CollideCircle.cpp <97:20 97:29>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideCircle.cpp <98:25 98:25>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2Manifold::localNormal [b2CollideCircle.cpp <98:13 98:23>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <98:3 98:10>]
LOCAL_SYMBOL: b2CollideCircle.cpp<68:16> [b2CollideCircle.cpp <98:27 98:33>]
LOCAL_SYMBOL: b2CollideCircle.cpp<63:8> [b2CollideCircle.cpp <98:35 98:45>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideCircle.cpp <99:24 99:24>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2Manifold::localPoint [b2CollideCircle.cpp <99:13 99:22>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <99:3 99:10>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2CollideCircle.cpp <99:31 99:31>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2CollideCircle.cpp <99:37 99:37>]
LOCAL_SYMBOL: b2CollideCircle.cpp<90:9> [b2CollideCircle.cpp <99:34 99:35>]
LOCAL_SYMBOL: b2CollideCircle.cpp<91:9> [b2CollideCircle.cpp <99:39 99:40>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideCircle.cpp <100:34 100:34>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2ManifoldPoint::localPoint [b2CollideCircle.cpp <100:23 100:32>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ManifoldPoint [] b2Manifold::points [b2CollideCircle.cpp <100:13 100:18>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <100:3 100:10>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2CircleShape::m_p [b2CollideCircle.cpp <100:45 100:47>]
LOCAL_SYMBOL: b2CollideCircle.cpp<54:23> [b2CollideCircle.cpp <100:36 100:42>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> uint32 b2ContactID::key [b2CollideCircle.cpp <101:26 101:28>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ContactID b2ManifoldPoint::id [b2CollideCircle.cpp <101:23 101:24>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ManifoldPoint [] b2Manifold::points [b2CollideCircle.cpp <101:13 101:18>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <101:3 101:10>]
LOCAL_SYMBOL: b2CollideCircle.cpp<106:10> [b2CollideCircle.cpp <106:10 106:11>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 [b2CollideCircle.cpp <106:2 106:8>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideCircle.cpp <106:15 106:19>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideCircle.cpp <106:28 106:28>]
LOCAL_SYMBOL: b2CollideCircle.cpp<60:9> [b2CollideCircle.cpp <106:21 106:26>]
LOCAL_SYMBOL: b2CollideCircle.cpp<90:9> [b2CollideCircle.cpp <106:30 106:31>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideCircle.cpp <106:37 106:37>]
LOCAL_SYMBOL: b2CollideCircle.cpp<91:9> [b2CollideCircle.cpp <106:34 106:35>]
LOCAL_SYMBOL: b2CollideCircle.cpp<90:9> [b2CollideCircle.cpp <106:39 106:40>]
LOCAL_SYMBOL: b2CollideCircle.cpp<107:10> [b2CollideCircle.cpp <107:10 107:11>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 [b2CollideCircle.cpp <107:2 107:8>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideCircle.cpp <107:15 107:19>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideCircle.cpp <107:28 107:28>]
LOCAL_SYMBOL: b2CollideCircle.cpp<60:9> [b2CollideCircle.cpp <107:21 107:26>]
LOCAL_SYMBOL: b2CollideCircle.cpp<91:9> [b2CollideCircle.cpp <107:30 107:31>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideCircle.cpp <107:37 107:37>]
LOCAL_SYMBOL: b2CollideCircle.cpp<90:9> [b2CollideCircle.cpp <107:34 107:35>]
LOCAL_SYMBOL: b2CollideCircle.cpp<91:9> [b2CollideCircle.cpp <107:39 107:40>]
LOCAL_SYMBOL: b2CollideCircle.cpp<106:10> [b2CollideCircle.cpp <108:6 108:7>]
SYMBOL_FUNCTION float32 b2DistanceSquared(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2DistanceSquared(const b2Vec2 &, const b2Vec2 &) [b2CollideCircle.cpp <110:7 110:23>]
LOCAL_SYMBOL: b2CollideCircle.cpp<60:9> [b2CollideCircle.cpp <110:25 110:30>]
LOCAL_SYMBOL: b2CollideCircle.cpp<90:9> [b2CollideCircle.cpp <110:33 110:34>]
LOCAL_SYMBOL: b2CollideCircle.cpp<65:10> [b2CollideCircle.cpp <110:39 110:44>]
LOCAL_SYMBOL: b2CollideCircle.cpp<65:10> [b2CollideCircle.cpp <110:48 110:53>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> int32 b2Manifold::pointCount [b2CollideCircle.cpp <115:13 115:22>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <115:3 115:10>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Manifold::Type b2Manifold::type [b2CollideCircle.cpp <116:13 116:16>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <116:3 116:10>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Manifold::Type::e_faceA [b2CollideCircle.cpp <116:32 116:38>]
QUALIFIER: b2Manifold [b2CollideCircle.cpp <116:20 116:29>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideCircle.cpp <117:25 117:25>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2Manifold::localNormal [b2CollideCircle.cpp <117:13 117:23>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <117:3 117:10>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideCircle.cpp <117:34 117:34>]
LOCAL_SYMBOL: b2CollideCircle.cpp<60:9> [b2CollideCircle.cpp <117:27 117:32>]
LOCAL_SYMBOL: b2CollideCircle.cpp<90:9> [b2CollideCircle.cpp <117:36 117:37>]
SYMBOL_FUNCTION float32 b2Vec2::Normalize()
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Vec2::Normalize() [b2CollideCircle.cpp <118:25 118:33>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2Manifold::localNormal [b2CollideCircle.cpp <118:13 118:23>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <118:3 118:10>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideCircle.cpp <119:24 119:24>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2Manifold::localPoint [b2CollideCircle.cpp <119:13 119:22>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <119:3 119:10>]
LOCAL_SYMBOL: b2CollideCircle.cpp<90:9> [b2CollideCircle.cpp <119:26 119:27>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideCircle.cpp <120:34 120:34>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2ManifoldPoint::localPoint [b2CollideCircle.cpp <120:23 120:32>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ManifoldPoint [] b2Manifold::points [b2CollideCircle.cpp <120:13 120:18>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <120:3 120:10>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2CircleShape::m_p [b2CollideCircle.cpp <120:45 120:47>]
LOCAL_SYMBOL: b2CollideCircle.cpp<54:23> [b2CollideCircle.cpp <120:36 120:42>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> uint32 b2ContactID::key [b2CollideCircle.cpp <121:26 121:28>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ContactID b2ManifoldPoint::id [b2CollideCircle.cpp <121:23 121:24>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ManifoldPoint [] b2Manifold::points [b2CollideCircle.cpp <121:13 121:18>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <121:3 121:10>]
LOCAL_SYMBOL: b2CollideCircle.cpp<107:10> [b2CollideCircle.cpp <123:11 123:12>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2DistanceSquared(const b2Vec2 &, const b2Vec2 &) [b2CollideCircle.cpp <125:7 125:23>]
LOCAL_SYMBOL: b2CollideCircle.cpp<60:9> [b2CollideCircle.cpp <125:25 125:30>]
LOCAL_SYMBOL: b2CollideCircle.cpp<91:9> [b2CollideCircle.cpp <125:33 125:34>]
LOCAL_SYMBOL: b2CollideCircle.cpp<65:10> [b2CollideCircle.cpp <125:39 125:44>]
LOCAL_SYMBOL: b2CollideCircle.cpp<65:10> [b2CollideCircle.cpp <125:48 125:53>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> int32 b2Manifold::pointCount [b2CollideCircle.cpp <130:13 130:22>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <130:3 130:10>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Manifold::Type b2Manifold::type [b2CollideCircle.cpp <131:13 131:16>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <131:3 131:10>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Manifold::Type::e_faceA [b2CollideCircle.cpp <131:32 131:38>]
QUALIFIER: b2Manifold [b2CollideCircle.cpp <131:20 131:29>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideCircle.cpp <132:25 132:25>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2Manifold::localNormal [b2CollideCircle.cpp <132:13 132:23>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <132:3 132:10>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideCircle.cpp <132:34 132:34>]
LOCAL_SYMBOL: b2CollideCircle.cpp<60:9> [b2CollideCircle.cpp <132:27 132:32>]
LOCAL_SYMBOL: b2CollideCircle.cpp<91:9> [b2CollideCircle.cpp <132:36 132:37>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Vec2::Normalize() [b2CollideCircle.cpp <133:25 133:33>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2Manifold::localNormal [b2CollideCircle.cpp <133:13 133:23>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <133:3 133:10>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideCircle.cpp <134:24 134:24>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2Manifold::localPoint [b2CollideCircle.cpp <134:13 134:22>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <134:3 134:10>]
LOCAL_SYMBOL: b2CollideCircle.cpp<91:9> [b2CollideCircle.cpp <134:26 134:27>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideCircle.cpp <135:34 135:34>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2ManifoldPoint::localPoint [b2CollideCircle.cpp <135:23 135:32>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ManifoldPoint [] b2Manifold::points [b2CollideCircle.cpp <135:13 135:18>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <135:3 135:10>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2CircleShape::m_p [b2CollideCircle.cpp <135:45 135:47>]
LOCAL_SYMBOL: b2CollideCircle.cpp<54:23> [b2CollideCircle.cpp <135:36 135:42>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> uint32 b2ContactID::key [b2CollideCircle.cpp <136:26 136:28>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ContactID b2ManifoldPoint::id [b2CollideCircle.cpp <136:23 136:24>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ManifoldPoint [] b2Manifold::points [b2CollideCircle.cpp <136:13 136:18>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <136:3 136:10>]
LOCAL_SYMBOL: b2CollideCircle.cpp<140:10> [b2CollideCircle.cpp <140:10 140:19>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideCircle.cpp <140:3 140:8>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2CollideCircle.cpp <140:28 140:28>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2CollideCircle.cpp <140:34 140:34>]
LOCAL_SYMBOL: b2CollideCircle.cpp<90:9> [b2CollideCircle.cpp <140:31 140:32>]
LOCAL_SYMBOL: b2CollideCircle.cpp<91:9> [b2CollideCircle.cpp <140:36 140:37>]
LOCAL_SYMBOL: b2CollideCircle.cpp<141:11> [b2CollideCircle.cpp <141:11 141:11>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 [b2CollideCircle.cpp <141:3 141:9>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideCircle.cpp <141:15 141:19>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideCircle.cpp <141:28 141:28>]
LOCAL_SYMBOL: b2CollideCircle.cpp<60:9> [b2CollideCircle.cpp <141:21 141:26>]
LOCAL_SYMBOL: b2CollideCircle.cpp<140:10> [b2CollideCircle.cpp <141:30 141:39>]
LOCAL_SYMBOL: b2CollideCircle.cpp<68:16> [b2CollideCircle.cpp <141:42 141:48>]
LOCAL_SYMBOL: b2CollideCircle.cpp<88:8> [b2CollideCircle.cpp <141:50 141:59>]
LOCAL_SYMBOL: b2CollideCircle.cpp<141:11> [b2CollideCircle.cpp <142:7 142:7>]
LOCAL_SYMBOL: b2CollideCircle.cpp<65:10> [b2CollideCircle.cpp <142:11 142:16>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> int32 b2Manifold::pointCount [b2CollideCircle.cpp <147:13 147:22>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <147:3 147:10>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Manifold::Type b2Manifold::type [b2CollideCircle.cpp <148:13 148:16>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <148:3 148:10>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Manifold::Type::e_faceA [b2CollideCircle.cpp <148:32 148:38>]
QUALIFIER: b2Manifold [b2CollideCircle.cpp <148:20 148:29>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideCircle.cpp <149:25 149:25>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2Manifold::localNormal [b2CollideCircle.cpp <149:13 149:23>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <149:3 149:10>]
LOCAL_SYMBOL: b2CollideCircle.cpp<68:16> [b2CollideCircle.cpp <149:27 149:33>]
LOCAL_SYMBOL: b2CollideCircle.cpp<88:8> [b2CollideCircle.cpp <149:35 149:44>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideCircle.cpp <150:24 150:24>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2Manifold::localPoint [b2CollideCircle.cpp <150:13 150:22>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <150:3 150:10>]
LOCAL_SYMBOL: b2CollideCircle.cpp<140:10> [b2CollideCircle.cpp <150:26 150:35>]
REFERENCE_CALL void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideCircle.cpp <151:34 151:34>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2ManifoldPoint::localPoint [b2CollideCircle.cpp <151:23 151:32>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ManifoldPoint [] b2Manifold::points [b2CollideCircle.cpp <151:13 151:18>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <151:3 151:10>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2CircleShape::m_p [b2CollideCircle.cpp <151:45 151:47>]
LOCAL_SYMBOL: b2CollideCircle.cpp<54:23> [b2CollideCircle.cpp <151:36 151:42>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> uint32 b2ContactID::key [b2CollideCircle.cpp <152:26 152:28>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ContactID b2ManifoldPoint::id [b2CollideCircle.cpp <152:23 152:24>]
REFERENCE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ManifoldPoint [] b2Manifold::points [b2CollideCircle.cpp <152:13 152:18>]
LOCAL_SYMBOL: b2CollideCircle.cpp<52:14> [b2CollideCircle.cpp <152:3 152:10>]
