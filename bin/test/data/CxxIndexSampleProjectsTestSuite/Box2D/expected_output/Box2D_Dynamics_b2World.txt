FILE: b2World.cpp
COMMENT: comment [b2World.cpp <1:1 17:3>]
COMMENT: comment [b2World.cpp <68:2 68:40>]
REFERENCE_MACRO_USAGE b2World.cpp -> b2Assert [b2World.cpp <109:2 109:9>]
REFERENCE_MACRO_USAGE b2Settings.h -> assert [b2Settings.h <31:21 31:26>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:23 34:31>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:47 34:55>]
REFERENCE_MACRO_USAGE assert.h -> __FILE__ [assert.h <34:57 34:64>]
REFERENCE_MACRO_USAGE assert.h -> __LINE__ [assert.h <34:79 34:86>]
COMMENT: comment [b2World.cpp <118:2 118:37>]
REFERENCE_MACRO_USAGE b2World.cpp -> b2Assert [b2World.cpp <133:2 133:9>]
REFERENCE_MACRO_USAGE b2World.cpp -> b2Assert [b2World.cpp <134:2 134:9>]
COMMENT: comment [b2World.cpp <140:2 140:32>]
COMMENT: comment [b2World.cpp <158:2 158:34>]
COMMENT: comment [b2World.cpp <168:2 168:69>]
COMMENT: comment [b2World.cpp <191:2 191:28>]
REFERENCE_MACRO_USAGE b2World.cpp -> b2Assert [b2World.cpp <214:2 214:9>]
COMMENT: comment [b2World.cpp <222:2 222:31>]
COMMENT: comment [b2World.cpp <232:2 232:48>]
COMMENT: comment [b2World.cpp <250:2 250:76>]
COMMENT: comment [b2World.cpp <258:5 258:74>]
COMMENT: comment [b2World.cpp <259:5 259:23>]
COMMENT: comment [b2World.cpp <267:2 267:52>]
REFERENCE_MACRO_USAGE b2World.cpp -> b2Assert [b2World.cpp <274:2 274:9>]
COMMENT: comment [b2World.cpp <282:2 282:40>]
COMMENT: comment [b2World.cpp <298:2 298:34>]
COMMENT: comment [b2World.cpp <302:2 302:30>]
COMMENT: comment [b2World.cpp <306:2 306:24>]
COMMENT: comment [b2World.cpp <325:2 325:23>]
REFERENCE_MACRO_USAGE b2World.cpp -> b2Assert [b2World.cpp <346:2 346:9>]
COMMENT: comment [b2World.cpp <349:2 349:76>]
COMMENT: comment [b2World.cpp <357:5 357:74>]
COMMENT: comment [b2World.cpp <358:5 358:23>]
COMMENT: comment [b2World.cpp <367:1 367:3>]
COMMENT: comment [b2World.cpp <385:1 385:77>]
COMMENT: comment [b2World.cpp <392:2 392:40>]
COMMENT: comment [b2World.cpp <399:2 399:32>]
COMMENT: comment [b2World.cpp <413:2 413:42>]
COMMENT: comment [b2World.cpp <428:3 428:43>]
COMMENT: comment [b2World.cpp <434:3 434:29>]
COMMENT: comment [b2World.cpp <440:3 440:65>]
COMMENT: comment [b2World.cpp <443:4 443:65>]
REFERENCE_MACRO_USAGE b2World.cpp -> b2Assert [b2World.cpp <445:4 445:11>]
COMMENT: comment [b2World.cpp <448:4 448:67>]
COMMENT: comment [b2World.cpp <451:4 451:53>]
COMMENT: comment [b2World.cpp <452:4 452:46>]
COMMENT: comment [b2World.cpp <458:4 458:50>]
COMMENT: comment [b2World.cpp <463:5 463:57>]
COMMENT: comment [b2World.cpp <469:5 469:43>]
COMMENT: comment [b2World.cpp <476:5 476:21>]
COMMENT: comment [b2World.cpp <489:5 489:56>]
REFERENCE_MACRO_USAGE b2World.cpp -> b2Assert [b2World.cpp <495:5 495:12>]
COMMENT: comment [b2World.cpp <500:4 500:46>]
COMMENT: comment [b2World.cpp <510:5 510:59>]
REFERENCE_MACRO_USAGE b2World.cpp -> b2Assert [b2World.cpp <524:5 524:12>]
COMMENT: comment [b2World.cpp <536:3 536:25>]
COMMENT: comment [b2World.cpp <539:4 539:59>]
COMMENT: comment [b2World.cpp <552:3 552:58>]
COMMENT: comment [b2World.cpp <555:4 555:59>]
COMMENT: comment [b2World.cpp <566:4 566:41>]
COMMENT: comment [b2World.cpp <570:3 570:28>]
COMMENT: comment [b2World.cpp <576:1 576:37>]
REFERENCE_MACRO_USAGE b2World.cpp -> b2_maxTOIContacts [b2World.cpp <579:22 579:38>]
REFERENCE_MACRO_USAGE b2World.cpp -> b2_maxTOIContacts [b2World.cpp <579:41 579:57>]
COMMENT: comment [b2World.cpp <591:4 591:21>]
COMMENT: comment [b2World.cpp <598:2 598:36>]
COMMENT: comment [b2World.cpp <601:3 601:25>]
COMMENT: comment [b2World.cpp <607:4 607:32>]
COMMENT: comment [b2World.cpp <613:4 613:38>]
REFERENCE_MACRO_USAGE b2World.cpp -> b2_maxSubSteps [b2World.cpp <614:24 614:37>]
COMMENT: comment [b2World.cpp <622:5 622:44>]
COMMENT: comment [b2World.cpp <630:5 630:26>]
REFERENCE_MACRO_USAGE b2World.cpp -> b2Assert [b2World.cpp <641:5 641:12>]
COMMENT: comment [b2World.cpp <646:5 646:69>]
COMMENT: comment [b2World.cpp <655:5 655:48>]
COMMENT: comment [b2World.cpp <661:5 661:41>]
COMMENT: comment [b2World.cpp <662:5 662:51>]
REFERENCE_MACRO_USAGE b2World.cpp -> b2Assert [b2World.cpp <676:5 676:12>]
COMMENT: comment [b2World.cpp <681:5 681:58>]
COMMENT: comment [b2World.cpp <692:5 692:62>]
COMMENT: comment [b2World.cpp <709:5 709:45>]
REFERENCE_MACRO_USAGE b2World.cpp -> b2_epsilon [b2World.cpp <715:47 715:56>]
REFERENCE_MACRO_USAGE b2Settings.h -> FLT_EPSILON [b2Settings.h <43:21 43:31>]
COMMENT: comment [b2World.cpp <717:4 717:32>]
COMMENT: comment [b2World.cpp <722:3 722:36>]
COMMENT: comment [b2World.cpp <734:3 734:57>]
COMMENT: comment [b2World.cpp <739:3 739:27>]
COMMENT: comment [b2World.cpp <742:4 742:26>]
COMMENT: comment [b2World.cpp <754:3 754:22>]
COMMENT: comment [b2World.cpp <764:3 764:38>]
COMMENT: comment [b2World.cpp <785:6 785:59>]
COMMENT: comment [b2World.cpp <791:6 791:54>]
COMMENT: comment [b2World.cpp <799:6 799:22>]
COMMENT: comment [b2World.cpp <807:6 807:49>]
COMMENT: comment [b2World.cpp <814:6 814:34>]
COMMENT: comment [b2World.cpp <817:6 817:46>]
COMMENT: comment [b2World.cpp <825:6 825:34>]
COMMENT: comment [b2World.cpp <833:6 833:38>]
COMMENT: comment [b2World.cpp <837:6 837:61>]
COMMENT: comment [b2World.cpp <843:6 843:42>]
COMMENT: comment [b2World.cpp <865:3 865:61>]
COMMENT: comment [b2World.cpp <878:4 878:58>]
COMMENT: comment [b2World.cpp <885:3 885:89>]
COMMENT: comment [b2World.cpp <886:3 886:43>]
COMMENT: comment [b2World.cpp <901:2 901:66>]
COMMENT: comment [b2World.cpp <927:2 927:64>]
COMMENT: comment [b2World.cpp <934:2 934:79>]
COMMENT: comment [b2World.cpp <942:2 942:23>]
REFERENCE_MACRO_USAGE b2World.cpp -> b2Assert [b2World.cpp <1095:4 1095:11>]
REFERENCE_MACRO_USAGE b2World.cpp -> b2_maxPolygonVertices [b2World.cpp <1095:28 1095:48>]
REFERENCE_MACRO_USAGE b2World.cpp -> b2_maxPolygonVertices [b2World.cpp <1096:20 1096:40>]
COMMENT: comment [b2World.cpp <1143:3 1143:21>]
COMMENT: comment [b2World.cpp <1206:4 1206:45>]
COMMENT: comment [b2World.cpp <1207:4 1207:45>]
COMMENT: comment [b2World.cpp <1209:4 1209:50>]
COMMENT: comment [b2World.cpp <1210:4 1210:50>]
COMMENT: comment [b2World.cpp <1212:4 1212:46>]
REFERENCE_MACRO_USAGE b2World.cpp -> b2Assert [b2World.cpp <1279:2 1279:9>]
COMMENT: comment [b2World.cpp <1327:2 1327:44>]
COMMENT: comment [b2World.cpp <1340:2 1340:45>]
SYMBOL_METHOD public void b2World::b2World(const b2Vec2 &) [b2World.cpp <37:1 <37:10 37:16> 64:1>]
SYMBOL_CLASS b2World
QUALIFIER: b2World [b2World.cpp <37:1 37:7>]
LOCAL_SYMBOL: b2World.cpp<37:32> [b2World.cpp <37:32 37:38>]
REFERENCE_TYPE_USAGE void b2World::b2World(const b2Vec2 &) -> b2Vec2 [b2World.cpp <37:24 37:29>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> b2BlockAllocator b2World::m_blockAllocator [b2World.cpp <37:10 37:16>]
SYMBOL_FUNCTION void b2BlockAllocator::b2BlockAllocator()
REFERENCE_CALL void b2World::b2World(const b2Vec2 &) -> void b2BlockAllocator::b2BlockAllocator() [b2World.cpp <37:10 37:16>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> b2StackAllocator b2World::m_stackAllocator [b2World.cpp <37:10 37:16>]
SYMBOL_FUNCTION void b2StackAllocator::b2StackAllocator()
REFERENCE_CALL void b2World::b2World(const b2Vec2 &) -> void b2StackAllocator::b2StackAllocator() [b2World.cpp <37:10 37:16>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> b2ContactManager b2World::m_contactManager [b2World.cpp <37:10 37:16>]
SYMBOL_FUNCTION void b2ContactManager::b2ContactManager()
REFERENCE_CALL void b2World::b2World(const b2Vec2 &) -> void b2ContactManager::b2ContactManager() [b2World.cpp <37:10 37:16>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> b2Vec2 b2World::m_gravity [b2World.cpp <37:10 37:16>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2World::b2World(const b2Vec2 &) -> void b2Vec2::b2Vec2() [b2World.cpp <37:10 37:16>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> b2Profile b2World::m_profile [b2World.cpp <37:10 37:16>]
SYMBOL_FUNCTION void b2Profile::b2Profile()
REFERENCE_CALL void b2World::b2World(const b2Vec2 &) -> void b2Profile::b2Profile() [b2World.cpp <37:10 37:16>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> b2DestructionListener * b2World::m_destructionListener [b2World.cpp <39:2 39:22>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> b2Draw * b2World::g_debugDraw [b2World.cpp <40:2 40:12>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> b2Body * b2World::m_bodyList [b2World.cpp <42:2 42:11>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> b2Joint * b2World::m_jointList [b2World.cpp <43:2 43:12>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> int32 b2World::m_bodyCount [b2World.cpp <45:2 45:12>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> int32 b2World::m_jointCount [b2World.cpp <46:2 46:13>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> bool b2World::m_warmStarting [b2World.cpp <48:2 48:15>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> bool b2World::m_continuousPhysics [b2World.cpp <49:2 49:20>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> bool b2World::m_subStepping [b2World.cpp <50:2 50:14>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> bool b2World::m_stepComplete [b2World.cpp <52:2 52:15>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> bool b2World::m_allowSleep [b2World.cpp <54:2 54:13>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2World::b2World(const b2Vec2 &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2World.cpp <55:12 55:12>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> b2Vec2 b2World::m_gravity [b2World.cpp <55:2 55:10>]
LOCAL_SYMBOL: b2World.cpp<37:32> [b2World.cpp <55:14 55:20>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> int32 b2World::m_flags [b2World.cpp <57:2 57:8>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> b2World::anonymous enum (b2World.h<215:2>)::e_clearForces [b2World.cpp <57:12 57:24>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> float32 b2World::m_inv_dt0 [b2World.cpp <59:2 59:10>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> b2BlockAllocator * b2ContactManager::m_allocator [b2World.cpp <61:19 61:29>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> b2ContactManager b2World::m_contactManager [b2World.cpp <61:2 61:17>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> b2BlockAllocator b2World::m_blockAllocator [b2World.cpp <61:34 61:49>]
SYMBOL_FUNCTION void * memset(void *, int, size_t)
REFERENCE_CALL void b2World::b2World(const b2Vec2 &) -> void * memset(void *, int, size_t) [b2World.cpp <63:2 63:7>]
REFERENCE_USAGE void b2World::b2World(const b2Vec2 &) -> b2Profile b2World::m_profile [b2World.cpp <63:10 63:18>]
REFERENCE_TYPE_USAGE void b2World::b2World(const b2Vec2 &) -> b2Profile [b2World.cpp <63:31 63:39>]
SYMBOL_METHOD public void b2World::~b2World() [b2World.cpp <66:1 <66:10 66:17> 85:1>]
QUALIFIER: b2World [b2World.cpp <66:1 66:7>]
LOCAL_SYMBOL: b2World.cpp<69:10> [b2World.cpp <69:10 69:10>]
REFERENCE_TYPE_USAGE void b2World::~b2World() -> b2Body [b2World.cpp <69:2 69:7>]
REFERENCE_USAGE void b2World::~b2World() -> b2Body * b2World::m_bodyList [b2World.cpp <69:14 69:23>]
LOCAL_SYMBOL: b2World.cpp<69:10> [b2World.cpp <70:9 70:9>]
LOCAL_SYMBOL: b2World.cpp<72:11> [b2World.cpp <72:11 72:15>]
REFERENCE_TYPE_USAGE void b2World::~b2World() -> b2Body [b2World.cpp <72:3 72:8>]
REFERENCE_USAGE void b2World::~b2World() -> b2Body * b2Body::m_next [b2World.cpp <72:22 72:27>]
LOCAL_SYMBOL: b2World.cpp<69:10> [b2World.cpp <72:19 72:19>]
LOCAL_SYMBOL: b2World.cpp<74:14> [b2World.cpp <74:14 74:14>]
REFERENCE_TYPE_USAGE void b2World::~b2World() -> b2Fixture [b2World.cpp <74:3 74:11>]
REFERENCE_USAGE void b2World::~b2World() -> b2Fixture * b2Body::m_fixtureList [b2World.cpp <74:21 74:33>]
LOCAL_SYMBOL: b2World.cpp<69:10> [b2World.cpp <74:18 74:18>]
LOCAL_SYMBOL: b2World.cpp<74:14> [b2World.cpp <75:10 75:10>]
LOCAL_SYMBOL: b2World.cpp<77:15> [b2World.cpp <77:15 77:19>]
REFERENCE_TYPE_USAGE void b2World::~b2World() -> b2Fixture [b2World.cpp <77:4 77:12>]
REFERENCE_USAGE void b2World::~b2World() -> b2Fixture * b2Fixture::m_next [b2World.cpp <77:26 77:31>]
LOCAL_SYMBOL: b2World.cpp<74:14> [b2World.cpp <77:23 77:23>]
REFERENCE_USAGE void b2World::~b2World() -> int32 b2Fixture::m_proxyCount [b2World.cpp <78:7 78:18>]
LOCAL_SYMBOL: b2World.cpp<74:14> [b2World.cpp <78:4 78:4>]
SYMBOL_FUNCTION void b2Fixture::Destroy(b2BlockAllocator *)
REFERENCE_CALL void b2World::~b2World() -> void b2Fixture::Destroy(b2BlockAllocator *) [b2World.cpp <79:7 79:13>]
LOCAL_SYMBOL: b2World.cpp<74:14> [b2World.cpp <79:4 79:4>]
REFERENCE_USAGE void b2World::~b2World() -> b2BlockAllocator b2World::m_blockAllocator [b2World.cpp <79:16 79:31>]
LOCAL_SYMBOL: b2World.cpp<74:14> [b2World.cpp <80:4 80:4>]
LOCAL_SYMBOL: b2World.cpp<77:15> [b2World.cpp <80:8 80:12>]
LOCAL_SYMBOL: b2World.cpp<69:10> [b2World.cpp <83:3 83:3>]
LOCAL_SYMBOL: b2World.cpp<72:11> [b2World.cpp <83:7 83:11>]
SYMBOL_METHOD public void b2World::SetDestructionListener(b2DestructionListener *) [b2World.cpp <87:1 <87:15 87:36> 90:1>]
QUALIFIER: b2World [b2World.cpp <87:6 87:12>]
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2World::SetDestructionListener(b2DestructionListener *) -> void [b2World.cpp <87:1 87:4>]
LOCAL_SYMBOL: b2World.cpp<87:61> [b2World.cpp <87:61 87:68>]
REFERENCE_TYPE_USAGE void b2World::SetDestructionListener(b2DestructionListener *) -> b2DestructionListener [b2World.cpp <87:38 87:58>]
REFERENCE_USAGE void b2World::SetDestructionListener(b2DestructionListener *) -> b2DestructionListener * b2World::m_destructionListener [b2World.cpp <89:2 89:22>]
LOCAL_SYMBOL: b2World.cpp<87:61> [b2World.cpp <89:26 89:33>]
SYMBOL_METHOD public void b2World::SetContactFilter(b2ContactFilter *) [b2World.cpp <92:1 <92:15 92:30> 95:1>]
QUALIFIER: b2World [b2World.cpp <92:6 92:12>]
REFERENCE_TYPE_USAGE void b2World::SetContactFilter(b2ContactFilter *) -> void [b2World.cpp <92:1 92:4>]
LOCAL_SYMBOL: b2World.cpp<92:49> [b2World.cpp <92:49 92:54>]
REFERENCE_TYPE_USAGE void b2World::SetContactFilter(b2ContactFilter *) -> b2ContactFilter [b2World.cpp <92:32 92:46>]
REFERENCE_USAGE void b2World::SetContactFilter(b2ContactFilter *) -> b2ContactFilter * b2ContactManager::m_contactFilter [b2World.cpp <94:19 94:33>]
REFERENCE_USAGE void b2World::SetContactFilter(b2ContactFilter *) -> b2ContactManager b2World::m_contactManager [b2World.cpp <94:2 94:17>]
LOCAL_SYMBOL: b2World.cpp<92:49> [b2World.cpp <94:37 94:42>]
SYMBOL_METHOD public void b2World::SetContactListener(b2ContactListener *) [b2World.cpp <97:1 <97:15 97:32> 100:1>]
QUALIFIER: b2World [b2World.cpp <97:6 97:12>]
REFERENCE_TYPE_USAGE void b2World::SetContactListener(b2ContactListener *) -> void [b2World.cpp <97:1 97:4>]
LOCAL_SYMBOL: b2World.cpp<97:53> [b2World.cpp <97:53 97:60>]
REFERENCE_TYPE_USAGE void b2World::SetContactListener(b2ContactListener *) -> b2ContactListener [b2World.cpp <97:34 97:50>]
REFERENCE_USAGE void b2World::SetContactListener(b2ContactListener *) -> b2ContactListener * b2ContactManager::m_contactListener [b2World.cpp <99:19 99:35>]
REFERENCE_USAGE void b2World::SetContactListener(b2ContactListener *) -> b2ContactManager b2World::m_contactManager [b2World.cpp <99:2 99:17>]
LOCAL_SYMBOL: b2World.cpp<97:53> [b2World.cpp <99:39 99:46>]
SYMBOL_METHOD public void b2World::SetDebugDraw(b2Draw *) [b2World.cpp <102:1 <102:15 102:26> 105:1>]
QUALIFIER: b2World [b2World.cpp <102:6 102:12>]
REFERENCE_TYPE_USAGE void b2World::SetDebugDraw(b2Draw *) -> void [b2World.cpp <102:1 102:4>]
LOCAL_SYMBOL: b2World.cpp<102:36> [b2World.cpp <102:36 102:44>]
REFERENCE_TYPE_USAGE void b2World::SetDebugDraw(b2Draw *) -> b2Draw [b2World.cpp <102:28 102:33>]
REFERENCE_USAGE void b2World::SetDebugDraw(b2Draw *) -> b2Draw * b2World::g_debugDraw [b2World.cpp <104:2 104:12>]
LOCAL_SYMBOL: b2World.cpp<102:36> [b2World.cpp <104:16 104:24>]
SYMBOL_METHOD public b2Body * b2World::CreateBody(const b2BodyDef *) [b2World.cpp <107:1 <107:18 107:27> 129:1>]
QUALIFIER: b2World [b2World.cpp <107:9 107:15>]
REFERENCE_TYPE_USAGE b2Body * b2World::CreateBody(const b2BodyDef *) -> b2Body [b2World.cpp <107:1 107:6>]
LOCAL_SYMBOL: b2World.cpp<107:46> [b2World.cpp <107:46 107:48>]
REFERENCE_TYPE_USAGE b2Body * b2World::CreateBody(const b2BodyDef *) -> b2BodyDef [b2World.cpp <107:35 107:43>]
SYMBOL_FUNCTION bool b2World::IsLocked() const
REFERENCE_CALL b2Body * b2World::CreateBody(const b2BodyDef *) -> bool b2World::IsLocked() const [b2World.cpp <109:11 109:18>]
REFERENCE_CALL b2Body * b2World::CreateBody(const b2BodyDef *) -> bool b2World::IsLocked() const [b2World.cpp <110:6 110:13>]
LOCAL_SYMBOL: b2World.cpp<115:8> [b2World.cpp <115:8 115:10>]
REFERENCE_TYPE_USAGE b2Body * b2World::CreateBody(const b2BodyDef *) -> void [b2World.cpp <115:2 115:5>]
SYMBOL_FUNCTION void * b2BlockAllocator::Allocate(int32)
REFERENCE_CALL b2Body * b2World::CreateBody(const b2BodyDef *) -> void * b2BlockAllocator::Allocate(int32) [b2World.cpp <115:31 115:38>]
REFERENCE_USAGE b2Body * b2World::CreateBody(const b2BodyDef *) -> b2BlockAllocator b2World::m_blockAllocator [b2World.cpp <115:14 115:29>]
REFERENCE_TYPE_USAGE b2Body * b2World::CreateBody(const b2BodyDef *) -> b2Body [b2World.cpp <115:47 115:52>]
LOCAL_SYMBOL: b2World.cpp<116:10> [b2World.cpp <116:10 116:10>]
REFERENCE_TYPE_USAGE b2Body * b2World::CreateBody(const b2BodyDef *) -> b2Body [b2World.cpp <116:2 116:7>]
REFERENCE_TYPE_USAGE b2Body * b2World::CreateBody(const b2BodyDef *) -> b2Body [b2World.cpp <116:24 116:29>]
SYMBOL_FUNCTION void b2Body::b2Body(const b2BodyDef *, b2World *)
REFERENCE_CALL b2Body * b2World::CreateBody(const b2BodyDef *) -> void b2Body::b2Body(const b2BodyDef *, b2World *) [b2World.cpp <116:24 116:29>]
LOCAL_SYMBOL: b2World.cpp<107:46> [b2World.cpp <116:31 116:33>]
LOCAL_SYMBOL: b2World.cpp<115:8> [b2World.cpp <116:19 116:21>]
REFERENCE_USAGE b2Body * b2World::CreateBody(const b2BodyDef *) -> b2Body * b2Body::m_prev [b2World.cpp <119:5 119:10>]
LOCAL_SYMBOL: b2World.cpp<116:10> [b2World.cpp <119:2 119:2>]
REFERENCE_USAGE b2Body * b2World::CreateBody(const b2BodyDef *) -> b2Body * b2Body::m_next [b2World.cpp <120:5 120:10>]
LOCAL_SYMBOL: b2World.cpp<116:10> [b2World.cpp <120:2 120:2>]
REFERENCE_USAGE b2Body * b2World::CreateBody(const b2BodyDef *) -> b2Body * b2World::m_bodyList [b2World.cpp <120:14 120:23>]
REFERENCE_USAGE b2Body * b2World::CreateBody(const b2BodyDef *) -> b2Body * b2World::m_bodyList [b2World.cpp <121:6 121:15>]
REFERENCE_USAGE b2Body * b2World::CreateBody(const b2BodyDef *) -> b2Body * b2Body::m_prev [b2World.cpp <123:15 123:20>]
REFERENCE_USAGE b2Body * b2World::CreateBody(const b2BodyDef *) -> b2Body * b2World::m_bodyList [b2World.cpp <123:3 123:12>]
LOCAL_SYMBOL: b2World.cpp<116:10> [b2World.cpp <123:24 123:24>]
REFERENCE_USAGE b2Body * b2World::CreateBody(const b2BodyDef *) -> b2Body * b2World::m_bodyList [b2World.cpp <125:2 125:11>]
LOCAL_SYMBOL: b2World.cpp<116:10> [b2World.cpp <125:15 125:15>]
REFERENCE_USAGE b2Body * b2World::CreateBody(const b2BodyDef *) -> int32 b2World::m_bodyCount [b2World.cpp <126:4 126:14>]
LOCAL_SYMBOL: b2World.cpp<116:10> [b2World.cpp <128:9 128:9>]
SYMBOL_METHOD public void b2World::DestroyBody(b2Body *) [b2World.cpp <131:1 <131:15 131:25> 210:1>]
QUALIFIER: b2World [b2World.cpp <131:6 131:12>]
REFERENCE_TYPE_USAGE void b2World::DestroyBody(b2Body *) -> void [b2World.cpp <131:1 131:4>]
LOCAL_SYMBOL: b2World.cpp<131:35> [b2World.cpp <131:35 131:35>]
REFERENCE_TYPE_USAGE void b2World::DestroyBody(b2Body *) -> b2Body [b2World.cpp <131:27 131:32>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> int32 b2World::m_bodyCount [b2World.cpp <133:11 133:21>]
REFERENCE_CALL void b2World::DestroyBody(b2Body *) -> bool b2World::IsLocked() const [b2World.cpp <134:11 134:18>]
REFERENCE_CALL void b2World::DestroyBody(b2Body *) -> bool b2World::IsLocked() const [b2World.cpp <135:6 135:13>]
LOCAL_SYMBOL: b2World.cpp<141:15> [b2World.cpp <141:15 141:16>]
REFERENCE_TYPE_USAGE void b2World::DestroyBody(b2Body *) -> b2JointEdge [b2World.cpp <141:2 141:12>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2JointEdge * b2Body::m_jointList [b2World.cpp <141:23 141:33>]
LOCAL_SYMBOL: b2World.cpp<131:35> [b2World.cpp <141:20 141:20>]
LOCAL_SYMBOL: b2World.cpp<141:15> [b2World.cpp <142:9 142:10>]
LOCAL_SYMBOL: b2World.cpp<144:16> [b2World.cpp <144:16 144:18>]
REFERENCE_TYPE_USAGE void b2World::DestroyBody(b2Body *) -> b2JointEdge [b2World.cpp <144:3 144:13>]
LOCAL_SYMBOL: b2World.cpp<141:15> [b2World.cpp <144:22 144:23>]
LOCAL_SYMBOL: b2World.cpp<141:15> [b2World.cpp <145:3 145:4>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2JointEdge * b2JointEdge::next [b2World.cpp <145:12 145:15>]
LOCAL_SYMBOL: b2World.cpp<141:15> [b2World.cpp <145:8 145:9>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2DestructionListener * b2World::m_destructionListener [b2World.cpp <147:7 147:27>]
SYMBOL_FUNCTION void b2DestructionListener::SayGoodbye(b2Joint *)
REFERENCE_CALL void b2World::DestroyBody(b2Body *) -> void b2DestructionListener::SayGoodbye(b2Joint *) [b2World.cpp <149:27 149:36>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2DestructionListener * b2World::m_destructionListener [b2World.cpp <149:4 149:24>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2Joint * b2JointEdge::joint [b2World.cpp <149:43 149:47>]
LOCAL_SYMBOL: b2World.cpp<144:16> [b2World.cpp <149:38 149:40>]
SYMBOL_FUNCTION void b2World::DestroyJoint(b2Joint *)
REFERENCE_CALL void b2World::DestroyBody(b2Body *) -> void b2World::DestroyJoint(b2Joint *) [b2World.cpp <152:3 152:14>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2Joint * b2JointEdge::joint [b2World.cpp <152:21 152:25>]
LOCAL_SYMBOL: b2World.cpp<144:16> [b2World.cpp <152:16 152:18>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2JointEdge * b2Body::m_jointList [b2World.cpp <154:6 154:16>]
LOCAL_SYMBOL: b2World.cpp<131:35> [b2World.cpp <154:3 154:3>]
LOCAL_SYMBOL: b2World.cpp<141:15> [b2World.cpp <154:20 154:21>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2JointEdge * b2Body::m_jointList [b2World.cpp <156:5 156:15>]
LOCAL_SYMBOL: b2World.cpp<131:35> [b2World.cpp <156:2 156:2>]
LOCAL_SYMBOL: b2World.cpp<159:17> [b2World.cpp <159:17 159:18>]
REFERENCE_TYPE_USAGE void b2World::DestroyBody(b2Body *) -> b2ContactEdge [b2World.cpp <159:2 159:14>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2ContactEdge * b2Body::m_contactList [b2World.cpp <159:25 159:37>]
LOCAL_SYMBOL: b2World.cpp<131:35> [b2World.cpp <159:22 159:22>]
LOCAL_SYMBOL: b2World.cpp<159:17> [b2World.cpp <160:9 160:10>]
LOCAL_SYMBOL: b2World.cpp<162:18> [b2World.cpp <162:18 162:20>]
REFERENCE_TYPE_USAGE void b2World::DestroyBody(b2Body *) -> b2ContactEdge [b2World.cpp <162:3 162:15>]
LOCAL_SYMBOL: b2World.cpp<159:17> [b2World.cpp <162:24 162:25>]
LOCAL_SYMBOL: b2World.cpp<159:17> [b2World.cpp <163:3 163:4>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2ContactEdge * b2ContactEdge::next [b2World.cpp <163:12 163:15>]
LOCAL_SYMBOL: b2World.cpp<159:17> [b2World.cpp <163:8 163:9>]
SYMBOL_FUNCTION void b2ContactManager::Destroy(b2Contact *)
REFERENCE_CALL void b2World::DestroyBody(b2Body *) -> void b2ContactManager::Destroy(b2Contact *) [b2World.cpp <164:20 164:26>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2ContactManager b2World::m_contactManager [b2World.cpp <164:3 164:18>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2Contact * b2ContactEdge::contact [b2World.cpp <164:33 164:39>]
LOCAL_SYMBOL: b2World.cpp<162:18> [b2World.cpp <164:28 164:30>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2ContactEdge * b2Body::m_contactList [b2World.cpp <166:5 166:17>]
LOCAL_SYMBOL: b2World.cpp<131:35> [b2World.cpp <166:2 166:2>]
LOCAL_SYMBOL: b2World.cpp<169:13> [b2World.cpp <169:13 169:13>]
REFERENCE_TYPE_USAGE void b2World::DestroyBody(b2Body *) -> b2Fixture [b2World.cpp <169:2 169:10>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2Fixture * b2Body::m_fixtureList [b2World.cpp <169:20 169:32>]
LOCAL_SYMBOL: b2World.cpp<131:35> [b2World.cpp <169:17 169:17>]
LOCAL_SYMBOL: b2World.cpp<169:13> [b2World.cpp <170:9 170:9>]
LOCAL_SYMBOL: b2World.cpp<172:14> [b2World.cpp <172:14 172:15>]
REFERENCE_TYPE_USAGE void b2World::DestroyBody(b2Body *) -> b2Fixture [b2World.cpp <172:3 172:11>]
LOCAL_SYMBOL: b2World.cpp<169:13> [b2World.cpp <172:19 172:19>]
LOCAL_SYMBOL: b2World.cpp<169:13> [b2World.cpp <173:3 173:3>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2Fixture * b2Fixture::m_next [b2World.cpp <173:10 173:15>]
LOCAL_SYMBOL: b2World.cpp<169:13> [b2World.cpp <173:7 173:7>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2DestructionListener * b2World::m_destructionListener [b2World.cpp <175:7 175:27>]
SYMBOL_FUNCTION void b2DestructionListener::SayGoodbye(b2Fixture *)
REFERENCE_CALL void b2World::DestroyBody(b2Body *) -> void b2DestructionListener::SayGoodbye(b2Fixture *) [b2World.cpp <177:27 177:36>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2DestructionListener * b2World::m_destructionListener [b2World.cpp <177:4 177:24>]
LOCAL_SYMBOL: b2World.cpp<172:14> [b2World.cpp <177:38 177:39>]
SYMBOL_FUNCTION void b2Fixture::DestroyProxies(b2BroadPhase *)
REFERENCE_CALL void b2World::DestroyBody(b2Body *) -> void b2Fixture::DestroyProxies(b2BroadPhase *) [b2World.cpp <180:7 180:20>]
LOCAL_SYMBOL: b2World.cpp<172:14> [b2World.cpp <180:3 180:4>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2BroadPhase b2ContactManager::m_broadPhase [b2World.cpp <180:40 180:51>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2ContactManager b2World::m_contactManager [b2World.cpp <180:23 180:38>]
REFERENCE_CALL void b2World::DestroyBody(b2Body *) -> void b2Fixture::Destroy(b2BlockAllocator *) [b2World.cpp <181:7 181:13>]
LOCAL_SYMBOL: b2World.cpp<172:14> [b2World.cpp <181:3 181:4>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2BlockAllocator b2World::m_blockAllocator [b2World.cpp <181:16 181:31>]
SYMBOL_FUNCTION void b2Fixture::~b2Fixture()
REFERENCE_CALL void b2World::DestroyBody(b2Body *) -> void b2Fixture::~b2Fixture() [b2World.cpp <182:7 182:7>]
LOCAL_SYMBOL: b2World.cpp<172:14> [b2World.cpp <182:3 182:4>]
SYMBOL_FUNCTION void b2BlockAllocator::Free(void *, int32)
REFERENCE_CALL void b2World::DestroyBody(b2Body *) -> void b2BlockAllocator::Free(void *, int32) [b2World.cpp <183:20 183:23>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2BlockAllocator b2World::m_blockAllocator [b2World.cpp <183:3 183:18>]
LOCAL_SYMBOL: b2World.cpp<172:14> [b2World.cpp <183:25 183:26>]
REFERENCE_TYPE_USAGE void b2World::DestroyBody(b2Body *) -> b2Fixture [b2World.cpp <183:36 183:44>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2Fixture * b2Body::m_fixtureList [b2World.cpp <185:6 185:18>]
LOCAL_SYMBOL: b2World.cpp<131:35> [b2World.cpp <185:3 185:3>]
LOCAL_SYMBOL: b2World.cpp<169:13> [b2World.cpp <185:22 185:22>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> int32 b2Body::m_fixtureCount [b2World.cpp <186:6 186:19>]
LOCAL_SYMBOL: b2World.cpp<131:35> [b2World.cpp <186:3 186:3>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2Fixture * b2Body::m_fixtureList [b2World.cpp <188:5 188:17>]
LOCAL_SYMBOL: b2World.cpp<131:35> [b2World.cpp <188:2 188:2>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> int32 b2Body::m_fixtureCount [b2World.cpp <189:5 189:18>]
LOCAL_SYMBOL: b2World.cpp<131:35> [b2World.cpp <189:2 189:2>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2Body * b2Body::m_prev [b2World.cpp <192:9 192:14>]
LOCAL_SYMBOL: b2World.cpp<131:35> [b2World.cpp <192:6 192:6>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2Body * b2Body::m_next [b2World.cpp <194:14 194:19>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2Body * b2Body::m_prev [b2World.cpp <194:6 194:11>]
LOCAL_SYMBOL: b2World.cpp<131:35> [b2World.cpp <194:3 194:3>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2Body * b2Body::m_next [b2World.cpp <194:26 194:31>]
LOCAL_SYMBOL: b2World.cpp<131:35> [b2World.cpp <194:23 194:23>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2Body * b2Body::m_next [b2World.cpp <197:9 197:14>]
LOCAL_SYMBOL: b2World.cpp<131:35> [b2World.cpp <197:6 197:6>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2Body * b2Body::m_prev [b2World.cpp <199:14 199:19>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2Body * b2Body::m_next [b2World.cpp <199:6 199:11>]
LOCAL_SYMBOL: b2World.cpp<131:35> [b2World.cpp <199:3 199:3>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2Body * b2Body::m_prev [b2World.cpp <199:26 199:31>]
LOCAL_SYMBOL: b2World.cpp<131:35> [b2World.cpp <199:23 199:23>]
LOCAL_SYMBOL: b2World.cpp<131:35> [b2World.cpp <202:6 202:6>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2Body * b2World::m_bodyList [b2World.cpp <202:11 202:20>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2Body * b2World::m_bodyList [b2World.cpp <204:3 204:12>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2Body * b2Body::m_next [b2World.cpp <204:19 204:24>]
LOCAL_SYMBOL: b2World.cpp<131:35> [b2World.cpp <204:16 204:16>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> int32 b2World::m_bodyCount [b2World.cpp <207:4 207:14>]
SYMBOL_FUNCTION void b2Body::~b2Body()
REFERENCE_CALL void b2World::DestroyBody(b2Body *) -> void b2Body::~b2Body() [b2World.cpp <208:5 208:5>]
LOCAL_SYMBOL: b2World.cpp<131:35> [b2World.cpp <208:2 208:2>]
REFERENCE_CALL void b2World::DestroyBody(b2Body *) -> void b2BlockAllocator::Free(void *, int32) [b2World.cpp <209:19 209:22>]
REFERENCE_USAGE void b2World::DestroyBody(b2Body *) -> b2BlockAllocator b2World::m_blockAllocator [b2World.cpp <209:2 209:17>]
LOCAL_SYMBOL: b2World.cpp<131:35> [b2World.cpp <209:24 209:24>]
REFERENCE_TYPE_USAGE void b2World::DestroyBody(b2Body *) -> b2Body [b2World.cpp <209:34 209:39>]
SYMBOL_METHOD public b2Joint * b2World::CreateJoint(const b2JointDef *) [b2World.cpp <212:1 <212:19 212:29> 270:1>]
QUALIFIER: b2World [b2World.cpp <212:10 212:16>]
REFERENCE_TYPE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Joint [b2World.cpp <212:1 212:7>]
LOCAL_SYMBOL: b2World.cpp<212:49> [b2World.cpp <212:49 212:51>]
REFERENCE_TYPE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointDef [b2World.cpp <212:37 212:46>]
REFERENCE_CALL b2Joint * b2World::CreateJoint(const b2JointDef *) -> bool b2World::IsLocked() const [b2World.cpp <214:11 214:18>]
REFERENCE_CALL b2Joint * b2World::CreateJoint(const b2JointDef *) -> bool b2World::IsLocked() const [b2World.cpp <215:6 215:13>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <220:11 220:11>]
REFERENCE_TYPE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Joint [b2World.cpp <220:2 220:8>]
SYMBOL_FUNCTION static b2Joint * b2Joint::Create(const b2JointDef *, b2BlockAllocator *)
REFERENCE_CALL b2Joint * b2World::CreateJoint(const b2JointDef *) -> static b2Joint * b2Joint::Create(const b2JointDef *, b2BlockAllocator *) [b2World.cpp <220:24 220:29>]
SYMBOL_CLASS b2Joint
QUALIFIER: b2Joint [b2World.cpp <220:15 220:21>]
LOCAL_SYMBOL: b2World.cpp<212:49> [b2World.cpp <220:31 220:33>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2BlockAllocator b2World::m_blockAllocator [b2World.cpp <220:37 220:52>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Joint * b2Joint::m_prev [b2World.cpp <223:5 223:10>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <223:2 223:2>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Joint * b2Joint::m_next [b2World.cpp <224:5 224:10>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <224:2 224:2>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Joint * b2World::m_jointList [b2World.cpp <224:14 224:24>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Joint * b2World::m_jointList [b2World.cpp <225:6 225:16>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Joint * b2Joint::m_prev [b2World.cpp <227:16 227:21>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Joint * b2World::m_jointList [b2World.cpp <227:3 227:13>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <227:25 227:25>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Joint * b2World::m_jointList [b2World.cpp <229:2 229:12>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <229:16 229:16>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> int32 b2World::m_jointCount [b2World.cpp <230:4 230:15>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Joint * b2JointEdge::joint [b2World.cpp <233:13 233:17>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge b2Joint::m_edgeA [b2World.cpp <233:5 233:11>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <233:2 233:2>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <233:21 233:21>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Body * b2JointEdge::other [b2World.cpp <234:13 234:17>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge b2Joint::m_edgeA [b2World.cpp <234:5 234:11>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <234:2 234:2>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Body * b2Joint::m_bodyB [b2World.cpp <234:24 234:30>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <234:21 234:21>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge * b2JointEdge::prev [b2World.cpp <235:13 235:16>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge b2Joint::m_edgeA [b2World.cpp <235:5 235:11>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <235:2 235:2>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge * b2JointEdge::next [b2World.cpp <236:13 236:16>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge b2Joint::m_edgeA [b2World.cpp <236:5 236:11>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <236:2 236:2>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge * b2Body::m_jointList [b2World.cpp <236:32 236:42>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Body * b2Joint::m_bodyA [b2World.cpp <236:23 236:29>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <236:20 236:20>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge * b2Body::m_jointList [b2World.cpp <237:18 237:28>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Body * b2Joint::m_bodyA [b2World.cpp <237:9 237:15>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <237:6 237:6>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge * b2JointEdge::prev [b2World.cpp <237:56 237:59>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge * b2Body::m_jointList [b2World.cpp <237:43 237:53>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Body * b2Joint::m_bodyA [b2World.cpp <237:34 237:40>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <237:31 237:31>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge b2Joint::m_edgeA [b2World.cpp <237:67 237:73>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <237:64 237:64>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge * b2Body::m_jointList [b2World.cpp <238:14 238:24>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Body * b2Joint::m_bodyA [b2World.cpp <238:5 238:11>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <238:2 238:2>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge b2Joint::m_edgeA [b2World.cpp <238:32 238:38>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <238:29 238:29>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Joint * b2JointEdge::joint [b2World.cpp <240:13 240:17>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge b2Joint::m_edgeB [b2World.cpp <240:5 240:11>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <240:2 240:2>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <240:21 240:21>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Body * b2JointEdge::other [b2World.cpp <241:13 241:17>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge b2Joint::m_edgeB [b2World.cpp <241:5 241:11>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <241:2 241:2>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Body * b2Joint::m_bodyA [b2World.cpp <241:24 241:30>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <241:21 241:21>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge * b2JointEdge::prev [b2World.cpp <242:13 242:16>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge b2Joint::m_edgeB [b2World.cpp <242:5 242:11>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <242:2 242:2>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge * b2JointEdge::next [b2World.cpp <243:13 243:16>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge b2Joint::m_edgeB [b2World.cpp <243:5 243:11>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <243:2 243:2>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge * b2Body::m_jointList [b2World.cpp <243:32 243:42>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Body * b2Joint::m_bodyB [b2World.cpp <243:23 243:29>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <243:20 243:20>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge * b2Body::m_jointList [b2World.cpp <244:18 244:28>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Body * b2Joint::m_bodyB [b2World.cpp <244:9 244:15>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <244:6 244:6>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge * b2JointEdge::prev [b2World.cpp <244:56 244:59>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge * b2Body::m_jointList [b2World.cpp <244:43 244:53>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Body * b2Joint::m_bodyB [b2World.cpp <244:34 244:40>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <244:31 244:31>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge b2Joint::m_edgeB [b2World.cpp <244:67 244:73>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <244:64 244:64>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge * b2Body::m_jointList [b2World.cpp <245:14 245:24>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Body * b2Joint::m_bodyB [b2World.cpp <245:5 245:11>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <245:2 245:2>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2JointEdge b2Joint::m_edgeB [b2World.cpp <245:32 245:38>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <245:29 245:29>]
LOCAL_SYMBOL: b2World.cpp<247:10> [b2World.cpp <247:10 247:14>]
REFERENCE_TYPE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Body [b2World.cpp <247:2 247:7>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Body * b2JointDef::bodyA [b2World.cpp <247:23 247:27>]
LOCAL_SYMBOL: b2World.cpp<212:49> [b2World.cpp <247:18 247:20>]
LOCAL_SYMBOL: b2World.cpp<248:10> [b2World.cpp <248:10 248:14>]
REFERENCE_TYPE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Body [b2World.cpp <248:2 248:7>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Body * b2JointDef::bodyB [b2World.cpp <248:23 248:27>]
LOCAL_SYMBOL: b2World.cpp<212:49> [b2World.cpp <248:18 248:20>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> bool b2JointDef::collideConnected [b2World.cpp <251:11 251:26>]
LOCAL_SYMBOL: b2World.cpp<212:49> [b2World.cpp <251:6 251:8>]
LOCAL_SYMBOL: b2World.cpp<253:18> [b2World.cpp <253:18 253:21>]
REFERENCE_TYPE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2ContactEdge [b2World.cpp <253:3 253:15>]
SYMBOL_FUNCTION b2ContactEdge * b2Body::GetContactList()
REFERENCE_CALL b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2ContactEdge * b2Body::GetContactList() [b2World.cpp <253:32 253:45>]
LOCAL_SYMBOL: b2World.cpp<248:10> [b2World.cpp <253:25 253:29>]
LOCAL_SYMBOL: b2World.cpp<253:18> [b2World.cpp <254:10 254:13>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Body * b2ContactEdge::other [b2World.cpp <256:14 256:18>]
LOCAL_SYMBOL: b2World.cpp<253:18> [b2World.cpp <256:8 256:11>]
LOCAL_SYMBOL: b2World.cpp<247:10> [b2World.cpp <256:23 256:27>]
SYMBOL_FUNCTION void b2Contact::FlagForFiltering()
REFERENCE_CALL b2Joint * b2World::CreateJoint(const b2JointDef *) -> void b2Contact::FlagForFiltering() [b2World.cpp <260:20 260:35>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2Contact * b2ContactEdge::contact [b2World.cpp <260:11 260:17>]
LOCAL_SYMBOL: b2World.cpp<253:18> [b2World.cpp <260:5 260:8>]
LOCAL_SYMBOL: b2World.cpp<253:18> [b2World.cpp <263:4 263:7>]
REFERENCE_USAGE b2Joint * b2World::CreateJoint(const b2JointDef *) -> b2ContactEdge * b2ContactEdge::next [b2World.cpp <263:17 263:20>]
LOCAL_SYMBOL: b2World.cpp<253:18> [b2World.cpp <263:11 263:14>]
LOCAL_SYMBOL: b2World.cpp<220:11> [b2World.cpp <269:9 269:9>]
SYMBOL_METHOD public void b2World::DestroyJoint(b2Joint *) [b2World.cpp <272:1 <272:15 272:26> 365:1>]
QUALIFIER: b2World [b2World.cpp <272:6 272:12>]
REFERENCE_TYPE_USAGE void b2World::DestroyJoint(b2Joint *) -> void [b2World.cpp <272:1 272:4>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <272:37 272:37>]
REFERENCE_TYPE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2Joint [b2World.cpp <272:28 272:34>]
REFERENCE_CALL void b2World::DestroyJoint(b2Joint *) -> bool b2World::IsLocked() const [b2World.cpp <274:11 274:18>]
REFERENCE_CALL void b2World::DestroyJoint(b2Joint *) -> bool b2World::IsLocked() const [b2World.cpp <275:6 275:13>]
LOCAL_SYMBOL: b2World.cpp<280:7> [b2World.cpp <280:7 280:22>]
SYMBOL_BUILTIN_TYPE bool
REFERENCE_TYPE_USAGE void b2World::DestroyJoint(b2Joint *) -> bool [b2World.cpp <280:2 280:5>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> bool b2Joint::m_collideConnected [b2World.cpp <280:29 280:46>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <280:26 280:26>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2Joint * b2Joint::m_prev [b2World.cpp <283:9 283:14>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <283:6 283:6>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2Joint * b2Joint::m_next [b2World.cpp <285:14 285:19>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2Joint * b2Joint::m_prev [b2World.cpp <285:6 285:11>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <285:3 285:3>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2Joint * b2Joint::m_next [b2World.cpp <285:26 285:31>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <285:23 285:23>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2Joint * b2Joint::m_next [b2World.cpp <288:9 288:14>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <288:6 288:6>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2Joint * b2Joint::m_prev [b2World.cpp <290:14 290:19>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2Joint * b2Joint::m_next [b2World.cpp <290:6 290:11>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <290:3 290:3>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2Joint * b2Joint::m_prev [b2World.cpp <290:26 290:31>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <290:23 290:23>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <293:6 293:6>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2Joint * b2World::m_jointList [b2World.cpp <293:11 293:21>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2Joint * b2World::m_jointList [b2World.cpp <295:3 295:13>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2Joint * b2Joint::m_next [b2World.cpp <295:20 295:25>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <295:17 295:17>]
LOCAL_SYMBOL: b2World.cpp<299:10> [b2World.cpp <299:10 299:14>]
REFERENCE_TYPE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2Body [b2World.cpp <299:2 299:7>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2Body * b2Joint::m_bodyA [b2World.cpp <299:21 299:27>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <299:18 299:18>]
LOCAL_SYMBOL: b2World.cpp<300:10> [b2World.cpp <300:10 300:14>]
REFERENCE_TYPE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2Body [b2World.cpp <300:2 300:7>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2Body * b2Joint::m_bodyB [b2World.cpp <300:21 300:27>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <300:18 300:18>]
SYMBOL_FUNCTION void b2Body::SetAwake(bool)
REFERENCE_CALL void b2World::DestroyJoint(b2Joint *) -> void b2Body::SetAwake(bool) [b2World.cpp <303:9 303:16>]
LOCAL_SYMBOL: b2World.cpp<299:10> [b2World.cpp <303:2 303:6>]
REFERENCE_CALL void b2World::DestroyJoint(b2Joint *) -> void b2Body::SetAwake(bool) [b2World.cpp <304:9 304:16>]
LOCAL_SYMBOL: b2World.cpp<300:10> [b2World.cpp <304:2 304:6>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2JointEdge::prev [b2World.cpp <307:17 307:20>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge b2Joint::m_edgeA [b2World.cpp <307:9 307:15>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <307:6 307:6>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2JointEdge::next [b2World.cpp <309:20 309:23>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2JointEdge::prev [b2World.cpp <309:14 309:17>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge b2Joint::m_edgeA [b2World.cpp <309:6 309:12>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <309:3 309:3>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2JointEdge::next [b2World.cpp <309:38 309:41>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge b2Joint::m_edgeA [b2World.cpp <309:30 309:36>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <309:27 309:27>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2JointEdge::next [b2World.cpp <312:17 312:20>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge b2Joint::m_edgeA [b2World.cpp <312:9 312:15>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <312:6 312:6>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2JointEdge::prev [b2World.cpp <314:20 314:23>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2JointEdge::next [b2World.cpp <314:14 314:17>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge b2Joint::m_edgeA [b2World.cpp <314:6 314:12>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <314:3 314:3>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2JointEdge::prev [b2World.cpp <314:38 314:41>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge b2Joint::m_edgeA [b2World.cpp <314:30 314:36>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <314:27 314:27>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge b2Joint::m_edgeA [b2World.cpp <317:10 317:16>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <317:7 317:7>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2Body::m_jointList [b2World.cpp <317:28 317:38>]
LOCAL_SYMBOL: b2World.cpp<299:10> [b2World.cpp <317:21 317:25>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2Body::m_jointList [b2World.cpp <319:10 319:20>]
LOCAL_SYMBOL: b2World.cpp<299:10> [b2World.cpp <319:3 319:7>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2JointEdge::next [b2World.cpp <319:35 319:38>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge b2Joint::m_edgeA [b2World.cpp <319:27 319:33>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <319:24 319:24>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2JointEdge::prev [b2World.cpp <322:13 322:16>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge b2Joint::m_edgeA [b2World.cpp <322:5 322:11>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <322:2 322:2>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2JointEdge::next [b2World.cpp <323:13 323:16>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge b2Joint::m_edgeA [b2World.cpp <323:5 323:11>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <323:2 323:2>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2JointEdge::prev [b2World.cpp <326:17 326:20>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge b2Joint::m_edgeB [b2World.cpp <326:9 326:15>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <326:6 326:6>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2JointEdge::next [b2World.cpp <328:20 328:23>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2JointEdge::prev [b2World.cpp <328:14 328:17>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge b2Joint::m_edgeB [b2World.cpp <328:6 328:12>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <328:3 328:3>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2JointEdge::next [b2World.cpp <328:38 328:41>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge b2Joint::m_edgeB [b2World.cpp <328:30 328:36>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <328:27 328:27>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2JointEdge::next [b2World.cpp <331:17 331:20>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge b2Joint::m_edgeB [b2World.cpp <331:9 331:15>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <331:6 331:6>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2JointEdge::prev [b2World.cpp <333:20 333:23>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2JointEdge::next [b2World.cpp <333:14 333:17>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge b2Joint::m_edgeB [b2World.cpp <333:6 333:12>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <333:3 333:3>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2JointEdge::prev [b2World.cpp <333:38 333:41>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge b2Joint::m_edgeB [b2World.cpp <333:30 333:36>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <333:27 333:27>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge b2Joint::m_edgeB [b2World.cpp <336:10 336:16>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <336:7 336:7>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2Body::m_jointList [b2World.cpp <336:28 336:38>]
LOCAL_SYMBOL: b2World.cpp<300:10> [b2World.cpp <336:21 336:25>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2Body::m_jointList [b2World.cpp <338:10 338:20>]
LOCAL_SYMBOL: b2World.cpp<300:10> [b2World.cpp <338:3 338:7>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2JointEdge::next [b2World.cpp <338:35 338:38>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge b2Joint::m_edgeB [b2World.cpp <338:27 338:33>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <338:24 338:24>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2JointEdge::prev [b2World.cpp <341:13 341:16>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge b2Joint::m_edgeB [b2World.cpp <341:5 341:11>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <341:2 341:2>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge * b2JointEdge::next [b2World.cpp <342:13 342:16>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2JointEdge b2Joint::m_edgeB [b2World.cpp <342:5 342:11>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <342:2 342:2>]
SYMBOL_FUNCTION static void b2Joint::Destroy(b2Joint *, b2BlockAllocator *)
REFERENCE_CALL void b2World::DestroyJoint(b2Joint *) -> static void b2Joint::Destroy(b2Joint *, b2BlockAllocator *) [b2World.cpp <344:11 344:17>]
QUALIFIER: b2Joint [b2World.cpp <344:2 344:8>]
LOCAL_SYMBOL: b2World.cpp<272:37> [b2World.cpp <344:19 344:19>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2BlockAllocator b2World::m_blockAllocator [b2World.cpp <344:23 344:38>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> int32 b2World::m_jointCount [b2World.cpp <346:11 346:22>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> int32 b2World::m_jointCount [b2World.cpp <347:4 347:15>]
LOCAL_SYMBOL: b2World.cpp<280:7> [b2World.cpp <350:6 350:21>]
LOCAL_SYMBOL: b2World.cpp<352:18> [b2World.cpp <352:18 352:21>]
REFERENCE_TYPE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2ContactEdge [b2World.cpp <352:3 352:15>]
REFERENCE_CALL void b2World::DestroyJoint(b2Joint *) -> b2ContactEdge * b2Body::GetContactList() [b2World.cpp <352:32 352:45>]
LOCAL_SYMBOL: b2World.cpp<300:10> [b2World.cpp <352:25 352:29>]
LOCAL_SYMBOL: b2World.cpp<352:18> [b2World.cpp <353:10 353:13>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2Body * b2ContactEdge::other [b2World.cpp <355:14 355:18>]
LOCAL_SYMBOL: b2World.cpp<352:18> [b2World.cpp <355:8 355:11>]
LOCAL_SYMBOL: b2World.cpp<299:10> [b2World.cpp <355:23 355:27>]
REFERENCE_CALL void b2World::DestroyJoint(b2Joint *) -> void b2Contact::FlagForFiltering() [b2World.cpp <359:20 359:35>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2Contact * b2ContactEdge::contact [b2World.cpp <359:11 359:17>]
LOCAL_SYMBOL: b2World.cpp<352:18> [b2World.cpp <359:5 359:8>]
LOCAL_SYMBOL: b2World.cpp<352:18> [b2World.cpp <362:4 362:7>]
REFERENCE_USAGE void b2World::DestroyJoint(b2Joint *) -> b2ContactEdge * b2ContactEdge::next [b2World.cpp <362:17 362:20>]
LOCAL_SYMBOL: b2World.cpp<352:18> [b2World.cpp <362:11 362:14>]
SYMBOL_METHOD public void b2World::SetAllowSleeping(bool) [b2World.cpp <368:1 <368:15 368:30> 383:1>]
QUALIFIER: b2World [b2World.cpp <368:6 368:12>]
REFERENCE_TYPE_USAGE void b2World::SetAllowSleeping(bool) -> void [b2World.cpp <368:1 368:4>]
LOCAL_SYMBOL: b2World.cpp<368:37> [b2World.cpp <368:37 368:40>]
REFERENCE_TYPE_USAGE void b2World::SetAllowSleeping(bool) -> bool [b2World.cpp <368:32 368:35>]
LOCAL_SYMBOL: b2World.cpp<368:37> [b2World.cpp <370:6 370:9>]
REFERENCE_USAGE void b2World::SetAllowSleeping(bool) -> bool b2World::m_allowSleep [b2World.cpp <370:14 370:25>]
REFERENCE_USAGE void b2World::SetAllowSleeping(bool) -> bool b2World::m_allowSleep [b2World.cpp <375:2 375:13>]
LOCAL_SYMBOL: b2World.cpp<368:37> [b2World.cpp <375:17 375:20>]
REFERENCE_USAGE void b2World::SetAllowSleeping(bool) -> bool b2World::m_allowSleep [b2World.cpp <376:6 376:17>]
LOCAL_SYMBOL: b2World.cpp<378:16> [b2World.cpp <378:16 378:16>]
REFERENCE_TYPE_USAGE void b2World::SetAllowSleeping(bool) -> b2Body [b2World.cpp <378:8 378:13>]
REFERENCE_USAGE void b2World::SetAllowSleeping(bool) -> b2Body * b2World::m_bodyList [b2World.cpp <378:20 378:29>]
LOCAL_SYMBOL: b2World.cpp<378:16> [b2World.cpp <378:32 378:32>]
LOCAL_SYMBOL: b2World.cpp<378:16> [b2World.cpp <378:35 378:35>]
REFERENCE_USAGE void b2World::SetAllowSleeping(bool) -> b2Body * b2Body::m_next [b2World.cpp <378:42 378:47>]
LOCAL_SYMBOL: b2World.cpp<378:16> [b2World.cpp <378:39 378:39>]
REFERENCE_CALL void b2World::SetAllowSleeping(bool) -> void b2Body::SetAwake(bool) [b2World.cpp <380:7 380:14>]
LOCAL_SYMBOL: b2World.cpp<378:16> [b2World.cpp <380:4 380:4>]
SYMBOL_METHOD private void b2World::Solve(const b2TimeStep &) [b2World.cpp <386:1 <386:15 386:19> 574:1>]
QUALIFIER: b2World [b2World.cpp <386:6 386:12>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> void [b2World.cpp <386:1 386:4>]
LOCAL_SYMBOL: b2World.cpp<386:39> [b2World.cpp <386:39 386:42>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> b2TimeStep [b2World.cpp <386:27 386:36>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> float32 b2Profile::solveInit [b2World.cpp <388:12 388:20>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Profile b2World::m_profile [b2World.cpp <388:2 388:10>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> float32 b2Profile::solveVelocity [b2World.cpp <389:12 389:24>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Profile b2World::m_profile [b2World.cpp <389:2 389:10>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> float32 b2Profile::solvePosition [b2World.cpp <390:12 390:24>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Profile b2World::m_profile [b2World.cpp <390:2 390:10>]
LOCAL_SYMBOL: b2World.cpp<393:11> [b2World.cpp <393:11 393:16>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Island [b2World.cpp <393:2 393:9>]
SYMBOL_FUNCTION void b2Island::b2Island(int32, int32, int32, b2StackAllocator *, b2ContactListener *)
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> void b2Island::b2Island(int32, int32, int32, b2StackAllocator *, b2ContactListener *) [b2World.cpp <393:11 393:16>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> int32 b2World::m_bodyCount [b2World.cpp <393:18 393:28>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> int32 b2ContactManager::m_contactCount [b2World.cpp <394:23 394:36>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2ContactManager b2World::m_contactManager [b2World.cpp <394:6 394:21>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> int32 b2World::m_jointCount [b2World.cpp <395:6 395:17>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2StackAllocator b2World::m_stackAllocator [b2World.cpp <396:7 396:22>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2ContactListener * b2ContactManager::m_contactListener [b2World.cpp <397:23 397:39>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2ContactManager b2World::m_contactManager [b2World.cpp <397:6 397:21>]
LOCAL_SYMBOL: b2World.cpp<400:15> [b2World.cpp <400:15 400:15>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body [b2World.cpp <400:7 400:12>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body * b2World::m_bodyList [b2World.cpp <400:19 400:28>]
LOCAL_SYMBOL: b2World.cpp<400:15> [b2World.cpp <400:31 400:31>]
LOCAL_SYMBOL: b2World.cpp<400:15> [b2World.cpp <400:34 400:34>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body * b2Body::m_next [b2World.cpp <400:41 400:46>]
LOCAL_SYMBOL: b2World.cpp<400:15> [b2World.cpp <400:38 400:38>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> uint16 b2Body::m_flags [b2World.cpp <402:6 402:12>]
LOCAL_SYMBOL: b2World.cpp<400:15> [b2World.cpp <402:3 402:3>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_islandFlag [b2World.cpp <402:26 402:37>]
SYMBOL_CLASS b2Body
QUALIFIER: b2Body [b2World.cpp <402:18 402:23>]
LOCAL_SYMBOL: b2World.cpp<404:18> [b2World.cpp <404:18 404:18>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Contact [b2World.cpp <404:7 404:15>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Contact * b2ContactManager::m_contactList [b2World.cpp <404:39 404:51>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2ContactManager b2World::m_contactManager [b2World.cpp <404:22 404:37>]
LOCAL_SYMBOL: b2World.cpp<404:18> [b2World.cpp <404:54 404:54>]
LOCAL_SYMBOL: b2World.cpp<404:18> [b2World.cpp <404:57 404:57>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Contact * b2Contact::m_next [b2World.cpp <404:64 404:69>]
LOCAL_SYMBOL: b2World.cpp<404:18> [b2World.cpp <404:61 404:61>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> uint32 b2Contact::m_flags [b2World.cpp <406:6 406:12>]
LOCAL_SYMBOL: b2World.cpp<404:18> [b2World.cpp <406:3 406:3>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Contact::anonymous enum (b2Contact.h<155:2>)::e_islandFlag [b2World.cpp <406:29 406:40>]
SYMBOL_CLASS b2Contact
QUALIFIER: b2Contact [b2World.cpp <406:18 406:26>]
LOCAL_SYMBOL: b2World.cpp<408:16> [b2World.cpp <408:16 408:16>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Joint [b2World.cpp <408:7 408:13>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Joint * b2World::m_jointList [b2World.cpp <408:20 408:30>]
LOCAL_SYMBOL: b2World.cpp<408:16> [b2World.cpp <408:33 408:33>]
LOCAL_SYMBOL: b2World.cpp<408:16> [b2World.cpp <408:36 408:36>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Joint * b2Joint::m_next [b2World.cpp <408:43 408:48>]
LOCAL_SYMBOL: b2World.cpp<408:16> [b2World.cpp <408:40 408:40>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> bool b2Joint::m_islandFlag [b2World.cpp <410:6 410:17>]
LOCAL_SYMBOL: b2World.cpp<408:16> [b2World.cpp <410:3 410:3>]
LOCAL_SYMBOL: b2World.cpp<414:8> [b2World.cpp <414:8 414:16>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> int32 [b2World.cpp <414:2 414:6>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> int32 b2World::m_bodyCount [b2World.cpp <414:20 414:30>]
LOCAL_SYMBOL: b2World.cpp<415:11> [b2World.cpp <415:11 415:15>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body [b2World.cpp <415:2 415:7>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body [b2World.cpp <415:20 415:25>]
SYMBOL_FUNCTION void * b2StackAllocator::Allocate(int32)
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> void * b2StackAllocator::Allocate(int32) [b2World.cpp <415:46 415:53>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2StackAllocator b2World::m_stackAllocator [b2World.cpp <415:29 415:44>]
LOCAL_SYMBOL: b2World.cpp<414:8> [b2World.cpp <415:55 415:63>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body [b2World.cpp <415:74 415:79>]
LOCAL_SYMBOL: b2World.cpp<416:15> [b2World.cpp <416:15 416:18>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body [b2World.cpp <416:7 416:12>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body * b2World::m_bodyList [b2World.cpp <416:22 416:31>]
LOCAL_SYMBOL: b2World.cpp<416:15> [b2World.cpp <416:34 416:37>]
LOCAL_SYMBOL: b2World.cpp<416:15> [b2World.cpp <416:40 416:43>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body * b2Body::m_next [b2World.cpp <416:53 416:58>]
LOCAL_SYMBOL: b2World.cpp<416:15> [b2World.cpp <416:47 416:50>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> uint16 b2Body::m_flags [b2World.cpp <418:13 418:19>]
LOCAL_SYMBOL: b2World.cpp<416:15> [b2World.cpp <418:7 418:10>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_islandFlag [b2World.cpp <418:31 418:42>]
QUALIFIER: b2Body [b2World.cpp <418:23 418:28>]
SYMBOL_FUNCTION bool b2Body::IsAwake() const
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> bool b2Body::IsAwake() const [b2World.cpp <423:13 423:19>]
LOCAL_SYMBOL: b2World.cpp<416:15> [b2World.cpp <423:7 423:10>]
SYMBOL_FUNCTION bool b2Body::IsActive() const
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> bool b2Body::IsActive() const [b2World.cpp <423:41 423:48>]
LOCAL_SYMBOL: b2World.cpp<416:15> [b2World.cpp <423:35 423:38>]
SYMBOL_FUNCTION b2BodyType b2Body::GetType() const
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> b2BodyType b2Body::GetType() const [b2World.cpp <429:13 429:19>]
LOCAL_SYMBOL: b2World.cpp<416:15> [b2World.cpp <429:7 429:10>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2BodyType::b2_staticBody [b2World.cpp <429:26 429:38>]
SYMBOL_FUNCTION void b2Island::Clear()
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> void b2Island::Clear() [b2World.cpp <435:10 435:14>]
LOCAL_SYMBOL: b2World.cpp<393:11> [b2World.cpp <435:3 435:8>]
LOCAL_SYMBOL: b2World.cpp<436:9> [b2World.cpp <436:9 436:18>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> int32 [b2World.cpp <436:3 436:7>]
LOCAL_SYMBOL: b2World.cpp<415:11> [b2World.cpp <437:3 437:7>]
LOCAL_SYMBOL: b2World.cpp<436:9> [b2World.cpp <437:9 437:18>]
LOCAL_SYMBOL: b2World.cpp<416:15> [b2World.cpp <437:25 437:28>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> uint16 b2Body::m_flags [b2World.cpp <438:9 438:15>]
LOCAL_SYMBOL: b2World.cpp<416:15> [b2World.cpp <438:3 438:6>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_islandFlag [b2World.cpp <438:28 438:39>]
QUALIFIER: b2Body [b2World.cpp <438:20 438:25>]
LOCAL_SYMBOL: b2World.cpp<436:9> [b2World.cpp <441:10 441:19>]
LOCAL_SYMBOL: b2World.cpp<444:12> [b2World.cpp <444:12 444:12>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body [b2World.cpp <444:4 444:9>]
LOCAL_SYMBOL: b2World.cpp<415:11> [b2World.cpp <444:16 444:20>]
LOCAL_SYMBOL: b2World.cpp<436:9> [b2World.cpp <444:24 444:33>]
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> bool b2Body::IsActive() const [b2World.cpp <445:16 445:23>]
LOCAL_SYMBOL: b2World.cpp<444:12> [b2World.cpp <445:13 445:13>]
SYMBOL_FUNCTION void b2Island::Add(b2Body *)
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> void b2Island::Add(b2Body *) [b2World.cpp <446:11 446:13>]
LOCAL_SYMBOL: b2World.cpp<393:11> [b2World.cpp <446:4 446:9>]
LOCAL_SYMBOL: b2World.cpp<444:12> [b2World.cpp <446:15 446:15>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> uint16 b2Body::m_flags [b2World.cpp <449:7 449:13>]
LOCAL_SYMBOL: b2World.cpp<444:12> [b2World.cpp <449:4 449:4>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_awakeFlag [b2World.cpp <449:26 449:36>]
QUALIFIER: b2Body [b2World.cpp <449:18 449:23>]
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> b2BodyType b2Body::GetType() const [b2World.cpp <453:11 453:17>]
LOCAL_SYMBOL: b2World.cpp<444:12> [b2World.cpp <453:8 453:8>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2BodyType::b2_staticBody [b2World.cpp <453:24 453:36>]
LOCAL_SYMBOL: b2World.cpp<459:24> [b2World.cpp <459:24 459:25>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> b2ContactEdge [b2World.cpp <459:9 459:21>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2ContactEdge * b2Body::m_contactList [b2World.cpp <459:32 459:44>]
LOCAL_SYMBOL: b2World.cpp<444:12> [b2World.cpp <459:29 459:29>]
LOCAL_SYMBOL: b2World.cpp<459:24> [b2World.cpp <459:47 459:48>]
LOCAL_SYMBOL: b2World.cpp<459:24> [b2World.cpp <459:51 459:52>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2ContactEdge * b2ContactEdge::next [b2World.cpp <459:60 459:63>]
LOCAL_SYMBOL: b2World.cpp<459:24> [b2World.cpp <459:56 459:57>]
LOCAL_SYMBOL: b2World.cpp<461:16> [b2World.cpp <461:16 461:22>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Contact [b2World.cpp <461:5 461:13>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Contact * b2ContactEdge::contact [b2World.cpp <461:30 461:36>]
LOCAL_SYMBOL: b2World.cpp<459:24> [b2World.cpp <461:26 461:27>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> uint32 b2Contact::m_flags [b2World.cpp <464:18 464:24>]
LOCAL_SYMBOL: b2World.cpp<461:16> [b2World.cpp <464:9 464:15>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Contact::anonymous enum (b2Contact.h<155:2>)::e_islandFlag [b2World.cpp <464:39 464:50>]
QUALIFIER: b2Contact [b2World.cpp <464:28 464:36>]
SYMBOL_FUNCTION bool b2Contact::IsEnabled() const
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> bool b2Contact::IsEnabled() const [b2World.cpp <470:18 470:26>]
LOCAL_SYMBOL: b2World.cpp<461:16> [b2World.cpp <470:9 470:15>]
SYMBOL_FUNCTION bool b2Contact::IsTouching() const
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> bool b2Contact::IsTouching() const [b2World.cpp <471:15 471:24>]
LOCAL_SYMBOL: b2World.cpp<461:16> [b2World.cpp <471:6 471:12>]
LOCAL_SYMBOL: b2World.cpp<477:10> [b2World.cpp <477:10 477:16>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> bool [b2World.cpp <477:5 477:8>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> bool b2Fixture::m_isSensor [b2World.cpp <477:41 477:50>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Fixture * b2Contact::m_fixtureA [b2World.cpp <477:29 477:38>]
LOCAL_SYMBOL: b2World.cpp<461:16> [b2World.cpp <477:20 477:26>]
LOCAL_SYMBOL: b2World.cpp<478:10> [b2World.cpp <478:10 478:16>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> bool [b2World.cpp <478:5 478:8>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> bool b2Fixture::m_isSensor [b2World.cpp <478:41 478:50>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Fixture * b2Contact::m_fixtureB [b2World.cpp <478:29 478:38>]
LOCAL_SYMBOL: b2World.cpp<461:16> [b2World.cpp <478:20 478:26>]
LOCAL_SYMBOL: b2World.cpp<477:10> [b2World.cpp <479:9 479:15>]
LOCAL_SYMBOL: b2World.cpp<478:10> [b2World.cpp <479:20 479:26>]
SYMBOL_FUNCTION void b2Island::Add(b2Contact *)
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> void b2Island::Add(b2Contact *) [b2World.cpp <484:12 484:14>]
LOCAL_SYMBOL: b2World.cpp<393:11> [b2World.cpp <484:5 484:10>]
LOCAL_SYMBOL: b2World.cpp<461:16> [b2World.cpp <484:16 484:22>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> uint32 b2Contact::m_flags [b2World.cpp <485:14 485:20>]
LOCAL_SYMBOL: b2World.cpp<461:16> [b2World.cpp <485:5 485:11>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Contact::anonymous enum (b2Contact.h<155:2>)::e_islandFlag [b2World.cpp <485:36 485:47>]
QUALIFIER: b2Contact [b2World.cpp <485:25 485:33>]
LOCAL_SYMBOL: b2World.cpp<487:13> [b2World.cpp <487:13 487:17>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body [b2World.cpp <487:5 487:10>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body * b2ContactEdge::other [b2World.cpp <487:25 487:29>]
LOCAL_SYMBOL: b2World.cpp<459:24> [b2World.cpp <487:21 487:22>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> uint16 b2Body::m_flags [b2World.cpp <490:16 490:22>]
LOCAL_SYMBOL: b2World.cpp<487:13> [b2World.cpp <490:9 490:13>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_islandFlag [b2World.cpp <490:34 490:45>]
QUALIFIER: b2Body [b2World.cpp <490:26 490:31>]
LOCAL_SYMBOL: b2World.cpp<436:9> [b2World.cpp <495:14 495:23>]
LOCAL_SYMBOL: b2World.cpp<414:8> [b2World.cpp <495:27 495:35>]
LOCAL_SYMBOL: b2World.cpp<415:11> [b2World.cpp <496:5 496:9>]
LOCAL_SYMBOL: b2World.cpp<436:9> [b2World.cpp <496:11 496:20>]
LOCAL_SYMBOL: b2World.cpp<487:13> [b2World.cpp <496:27 496:31>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> uint16 b2Body::m_flags [b2World.cpp <497:12 497:18>]
LOCAL_SYMBOL: b2World.cpp<487:13> [b2World.cpp <497:5 497:9>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_islandFlag [b2World.cpp <497:31 497:42>]
QUALIFIER: b2Body [b2World.cpp <497:23 497:28>]
LOCAL_SYMBOL: b2World.cpp<501:22> [b2World.cpp <501:22 501:23>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> b2JointEdge [b2World.cpp <501:9 501:19>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2JointEdge * b2Body::m_jointList [b2World.cpp <501:30 501:40>]
LOCAL_SYMBOL: b2World.cpp<444:12> [b2World.cpp <501:27 501:27>]
LOCAL_SYMBOL: b2World.cpp<501:22> [b2World.cpp <501:43 501:44>]
LOCAL_SYMBOL: b2World.cpp<501:22> [b2World.cpp <501:47 501:48>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2JointEdge * b2JointEdge::next [b2World.cpp <501:56 501:59>]
LOCAL_SYMBOL: b2World.cpp<501:22> [b2World.cpp <501:52 501:53>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> bool b2Joint::m_islandFlag [b2World.cpp <503:20 503:31>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Joint * b2JointEdge::joint [b2World.cpp <503:13 503:17>]
LOCAL_SYMBOL: b2World.cpp<501:22> [b2World.cpp <503:9 503:10>]
LOCAL_SYMBOL: b2World.cpp<508:13> [b2World.cpp <508:13 508:17>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body [b2World.cpp <508:5 508:10>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body * b2JointEdge::other [b2World.cpp <508:25 508:29>]
LOCAL_SYMBOL: b2World.cpp<501:22> [b2World.cpp <508:21 508:22>]
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> bool b2Body::IsActive() const [b2World.cpp <511:16 511:23>]
LOCAL_SYMBOL: b2World.cpp<508:13> [b2World.cpp <511:9 511:13>]
SYMBOL_FUNCTION void b2Island::Add(b2Joint *)
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> void b2Island::Add(b2Joint *) [b2World.cpp <516:12 516:14>]
LOCAL_SYMBOL: b2World.cpp<393:11> [b2World.cpp <516:5 516:10>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Joint * b2JointEdge::joint [b2World.cpp <516:20 516:24>]
LOCAL_SYMBOL: b2World.cpp<501:22> [b2World.cpp <516:16 516:17>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> bool b2Joint::m_islandFlag [b2World.cpp <517:16 517:27>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Joint * b2JointEdge::joint [b2World.cpp <517:9 517:13>]
LOCAL_SYMBOL: b2World.cpp<501:22> [b2World.cpp <517:5 517:6>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> uint16 b2Body::m_flags [b2World.cpp <519:16 519:22>]
LOCAL_SYMBOL: b2World.cpp<508:13> [b2World.cpp <519:9 519:13>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_islandFlag [b2World.cpp <519:34 519:45>]
QUALIFIER: b2Body [b2World.cpp <519:26 519:31>]
LOCAL_SYMBOL: b2World.cpp<436:9> [b2World.cpp <524:14 524:23>]
LOCAL_SYMBOL: b2World.cpp<414:8> [b2World.cpp <524:27 524:35>]
LOCAL_SYMBOL: b2World.cpp<415:11> [b2World.cpp <525:5 525:9>]
LOCAL_SYMBOL: b2World.cpp<436:9> [b2World.cpp <525:11 525:20>]
LOCAL_SYMBOL: b2World.cpp<508:13> [b2World.cpp <525:27 525:31>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> uint16 b2Body::m_flags [b2World.cpp <526:12 526:18>]
LOCAL_SYMBOL: b2World.cpp<508:13> [b2World.cpp <526:5 526:9>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_islandFlag [b2World.cpp <526:31 526:42>]
QUALIFIER: b2Body [b2World.cpp <526:23 526:28>]
LOCAL_SYMBOL: b2World.cpp<530:13> [b2World.cpp <530:13 530:19>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Profile [b2World.cpp <530:3 530:11>]
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> void b2Profile::b2Profile() [b2World.cpp <530:13 530:19>]
SYMBOL_FUNCTION void b2Island::Solve(b2Profile *, const b2TimeStep &, const b2Vec2 &, bool)
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> void b2Island::Solve(b2Profile *, const b2TimeStep &, const b2Vec2 &, bool) [b2World.cpp <531:10 531:14>]
LOCAL_SYMBOL: b2World.cpp<393:11> [b2World.cpp <531:3 531:8>]
LOCAL_SYMBOL: b2World.cpp<530:13> [b2World.cpp <531:17 531:23>]
LOCAL_SYMBOL: b2World.cpp<386:39> [b2World.cpp <531:26 531:29>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Vec2 b2World::m_gravity [b2World.cpp <531:32 531:40>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> bool b2World::m_allowSleep [b2World.cpp <531:43 531:54>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> float32 b2Profile::solveInit [b2World.cpp <532:13 532:21>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Profile b2World::m_profile [b2World.cpp <532:3 532:11>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> float32 b2Profile::solveInit [b2World.cpp <532:34 532:42>]
LOCAL_SYMBOL: b2World.cpp<530:13> [b2World.cpp <532:26 532:32>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> float32 b2Profile::solveVelocity [b2World.cpp <533:13 533:25>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Profile b2World::m_profile [b2World.cpp <533:3 533:11>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> float32 b2Profile::solveVelocity [b2World.cpp <533:38 533:50>]
LOCAL_SYMBOL: b2World.cpp<530:13> [b2World.cpp <533:30 533:36>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> float32 b2Profile::solvePosition [b2World.cpp <534:13 534:25>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Profile b2World::m_profile [b2World.cpp <534:3 534:11>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> float32 b2Profile::solvePosition [b2World.cpp <534:38 534:50>]
LOCAL_SYMBOL: b2World.cpp<530:13> [b2World.cpp <534:30 534:36>]
LOCAL_SYMBOL: b2World.cpp<537:14> [b2World.cpp <537:14 537:14>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> int32 [b2World.cpp <537:8 537:12>]
LOCAL_SYMBOL: b2World.cpp<537:14> [b2World.cpp <537:21 537:21>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> int32 b2Island::m_bodyCount [b2World.cpp <537:32 537:42>]
LOCAL_SYMBOL: b2World.cpp<393:11> [b2World.cpp <537:25 537:30>]
LOCAL_SYMBOL: b2World.cpp<537:14> [b2World.cpp <537:47 537:47>]
LOCAL_SYMBOL: b2World.cpp<540:12> [b2World.cpp <540:12 540:12>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body [b2World.cpp <540:4 540:9>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body * * b2Island::m_bodies [b2World.cpp <540:23 540:30>]
LOCAL_SYMBOL: b2World.cpp<393:11> [b2World.cpp <540:16 540:21>]
LOCAL_SYMBOL: b2World.cpp<537:14> [b2World.cpp <540:32 540:32>]
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> b2BodyType b2Body::GetType() const [b2World.cpp <541:11 541:17>]
LOCAL_SYMBOL: b2World.cpp<540:12> [b2World.cpp <541:8 541:8>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2BodyType::b2_staticBody [b2World.cpp <541:24 541:36>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> uint16 b2Body::m_flags [b2World.cpp <543:8 543:14>]
LOCAL_SYMBOL: b2World.cpp<540:12> [b2World.cpp <543:5 543:5>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_islandFlag [b2World.cpp <543:28 543:39>]
QUALIFIER: b2Body [b2World.cpp <543:20 543:25>]
SYMBOL_FUNCTION void b2StackAllocator::Free(void *)
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> void b2StackAllocator::Free(void *) [b2World.cpp <548:19 548:22>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2StackAllocator b2World::m_stackAllocator [b2World.cpp <548:2 548:17>]
LOCAL_SYMBOL: b2World.cpp<415:11> [b2World.cpp <548:24 548:28>]
LOCAL_SYMBOL: b2World.cpp<551:11> [b2World.cpp <551:11 551:15>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Timer [b2World.cpp <551:3 551:9>]
SYMBOL_FUNCTION void b2Timer::b2Timer()
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> void b2Timer::b2Timer() [b2World.cpp <551:11 551:15>]
LOCAL_SYMBOL: b2World.cpp<553:16> [b2World.cpp <553:16 553:16>]
REFERENCE_TYPE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body [b2World.cpp <553:8 553:13>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body * b2World::m_bodyList [b2World.cpp <553:20 553:29>]
LOCAL_SYMBOL: b2World.cpp<553:16> [b2World.cpp <553:32 553:32>]
LOCAL_SYMBOL: b2World.cpp<553:16> [b2World.cpp <553:35 553:35>]
SYMBOL_FUNCTION b2Body * b2Body::GetNext()
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> b2Body * b2Body::GetNext() [b2World.cpp <553:42 553:48>]
LOCAL_SYMBOL: b2World.cpp<553:16> [b2World.cpp <553:39 553:39>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> uint16 b2Body::m_flags [b2World.cpp <556:12 556:18>]
LOCAL_SYMBOL: b2World.cpp<553:16> [b2World.cpp <556:9 556:9>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_islandFlag [b2World.cpp <556:30 556:41>]
QUALIFIER: b2Body [b2World.cpp <556:22 556:27>]
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> b2BodyType b2Body::GetType() const [b2World.cpp <561:11 561:17>]
LOCAL_SYMBOL: b2World.cpp<553:16> [b2World.cpp <561:8 561:8>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2BodyType::b2_staticBody [b2World.cpp <561:24 561:36>]
SYMBOL_FUNCTION void b2Body::SynchronizeFixtures()
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> void b2Body::SynchronizeFixtures() [b2World.cpp <567:7 567:25>]
LOCAL_SYMBOL: b2World.cpp<553:16> [b2World.cpp <567:4 567:4>]
SYMBOL_FUNCTION void b2ContactManager::FindNewContacts()
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> void b2ContactManager::FindNewContacts() [b2World.cpp <571:20 571:34>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2ContactManager b2World::m_contactManager [b2World.cpp <571:3 571:18>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> float32 b2Profile::broadphase [b2World.cpp <572:13 572:22>]
REFERENCE_USAGE void b2World::Solve(const b2TimeStep &) -> b2Profile b2World::m_profile [b2World.cpp <572:3 572:11>]
SYMBOL_FUNCTION float32 b2Timer::GetMilliseconds() const
REFERENCE_CALL void b2World::Solve(const b2TimeStep &) -> float32 b2Timer::GetMilliseconds() const [b2World.cpp <572:32 572:46>]
LOCAL_SYMBOL: b2World.cpp<551:11> [b2World.cpp <572:26 572:30>]
SYMBOL_METHOD private void b2World::SolveTOI(const b2TimeStep &) [b2World.cpp <577:1 <577:15 577:22> 895:1>]
QUALIFIER: b2World [b2World.cpp <577:6 577:12>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> void [b2World.cpp <577:1 577:4>]
LOCAL_SYMBOL: b2World.cpp<577:42> [b2World.cpp <577:42 577:45>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2TimeStep [b2World.cpp <577:30 577:39>]
LOCAL_SYMBOL: b2World.cpp<579:11> [b2World.cpp <579:11 579:16>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Island [b2World.cpp <579:2 579:9>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Island::b2Island(int32, int32, int32, b2StackAllocator *, b2ContactListener *) [b2World.cpp <579:11 579:16>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2StackAllocator b2World::m_stackAllocator [b2World.cpp <579:64 579:79>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2ContactListener * b2ContactManager::m_contactListener [b2World.cpp <579:99 579:115>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2ContactManager b2World::m_contactManager [b2World.cpp <579:82 579:97>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> bool b2World::m_stepComplete [b2World.cpp <581:6 581:19>]
LOCAL_SYMBOL: b2World.cpp<583:16> [b2World.cpp <583:16 583:16>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Body [b2World.cpp <583:8 583:13>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Body * b2World::m_bodyList [b2World.cpp <583:20 583:29>]
LOCAL_SYMBOL: b2World.cpp<583:16> [b2World.cpp <583:32 583:32>]
LOCAL_SYMBOL: b2World.cpp<583:16> [b2World.cpp <583:35 583:35>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Body * b2Body::m_next [b2World.cpp <583:42 583:47>]
LOCAL_SYMBOL: b2World.cpp<583:16> [b2World.cpp <583:39 583:39>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> uint16 b2Body::m_flags [b2World.cpp <585:7 585:13>]
LOCAL_SYMBOL: b2World.cpp<583:16> [b2World.cpp <585:4 585:4>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_islandFlag [b2World.cpp <585:27 585:38>]
QUALIFIER: b2Body [b2World.cpp <585:19 585:24>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> float32 b2Sweep::alpha0 [b2World.cpp <586:15 586:20>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep b2Body::m_sweep [b2World.cpp <586:7 586:13>]
LOCAL_SYMBOL: b2World.cpp<583:16> [b2World.cpp <586:4 586:4>]
LOCAL_SYMBOL: b2World.cpp<589:19> [b2World.cpp <589:19 589:19>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Contact [b2World.cpp <589:8 589:16>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Contact * b2ContactManager::m_contactList [b2World.cpp <589:40 589:52>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2ContactManager b2World::m_contactManager [b2World.cpp <589:23 589:38>]
LOCAL_SYMBOL: b2World.cpp<589:19> [b2World.cpp <589:55 589:55>]
LOCAL_SYMBOL: b2World.cpp<589:19> [b2World.cpp <589:58 589:58>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Contact * b2Contact::m_next [b2World.cpp <589:65 589:70>]
LOCAL_SYMBOL: b2World.cpp<589:19> [b2World.cpp <589:62 589:62>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> uint32 b2Contact::m_flags [b2World.cpp <592:7 592:13>]
LOCAL_SYMBOL: b2World.cpp<589:19> [b2World.cpp <592:4 592:4>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Contact::anonymous enum (b2Contact.h<155:2>)::e_toiFlag [b2World.cpp <592:31 592:39>]
QUALIFIER: b2Contact [b2World.cpp <592:20 592:28>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Contact::anonymous enum (b2Contact.h<155:2>)::e_islandFlag [b2World.cpp <592:54 592:65>]
QUALIFIER: b2Contact [b2World.cpp <592:43 592:51>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> int32 b2Contact::m_toiCount [b2World.cpp <593:7 593:16>]
LOCAL_SYMBOL: b2World.cpp<589:19> [b2World.cpp <593:4 593:4>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> float32 b2Contact::m_toi [b2World.cpp <594:7 594:11>]
LOCAL_SYMBOL: b2World.cpp<589:19> [b2World.cpp <594:4 594:4>]
LOCAL_SYMBOL: b2World.cpp<602:14> [b2World.cpp <602:14 602:23>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Contact [b2World.cpp <602:3 602:11>]
LOCAL_SYMBOL: b2World.cpp<603:11> [b2World.cpp <603:11 603:18>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> float32 [b2World.cpp <603:3 603:9>]
LOCAL_SYMBOL: b2World.cpp<605:19> [b2World.cpp <605:19 605:19>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Contact [b2World.cpp <605:8 605:16>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Contact * b2ContactManager::m_contactList [b2World.cpp <605:40 605:52>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2ContactManager b2World::m_contactManager [b2World.cpp <605:23 605:38>]
LOCAL_SYMBOL: b2World.cpp<605:19> [b2World.cpp <605:55 605:55>]
LOCAL_SYMBOL: b2World.cpp<605:19> [b2World.cpp <605:58 605:58>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Contact * b2Contact::m_next [b2World.cpp <605:65 605:70>]
LOCAL_SYMBOL: b2World.cpp<605:19> [b2World.cpp <605:62 605:62>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> bool b2Contact::IsEnabled() const [b2World.cpp <608:11 608:19>]
LOCAL_SYMBOL: b2World.cpp<605:19> [b2World.cpp <608:8 608:8>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> int32 b2Contact::m_toiCount [b2World.cpp <614:11 614:20>]
LOCAL_SYMBOL: b2World.cpp<605:19> [b2World.cpp <614:8 614:8>]
LOCAL_SYMBOL: b2World.cpp<619:12> [b2World.cpp <619:12 619:16>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> float32 [b2World.cpp <619:4 619:10>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> uint32 b2Contact::m_flags [b2World.cpp <620:11 620:17>]
LOCAL_SYMBOL: b2World.cpp<605:19> [b2World.cpp <620:8 620:8>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Contact::anonymous enum (b2Contact.h<155:2>)::e_toiFlag [b2World.cpp <620:32 620:40>]
QUALIFIER: b2Contact [b2World.cpp <620:21 620:29>]
LOCAL_SYMBOL: b2World.cpp<619:12> [b2World.cpp <623:5 623:9>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> float32 b2Contact::m_toi [b2World.cpp <623:16 623:20>]
LOCAL_SYMBOL: b2World.cpp<605:19> [b2World.cpp <623:13 623:13>]
LOCAL_SYMBOL: b2World.cpp<627:16> [b2World.cpp <627:16 627:17>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Fixture [b2World.cpp <627:5 627:13>]
SYMBOL_FUNCTION b2Fixture * b2Contact::GetFixtureA()
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> b2Fixture * b2Contact::GetFixtureA() [b2World.cpp <627:24 627:34>]
LOCAL_SYMBOL: b2World.cpp<605:19> [b2World.cpp <627:21 627:21>]
LOCAL_SYMBOL: b2World.cpp<628:16> [b2World.cpp <628:16 628:17>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Fixture [b2World.cpp <628:5 628:13>]
SYMBOL_FUNCTION b2Fixture * b2Contact::GetFixtureB()
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> b2Fixture * b2Contact::GetFixtureB() [b2World.cpp <628:24 628:34>]
LOCAL_SYMBOL: b2World.cpp<605:19> [b2World.cpp <628:21 628:21>]
SYMBOL_FUNCTION bool b2Fixture::IsSensor() const
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> bool b2Fixture::IsSensor() const [b2World.cpp <631:13 631:20>]
LOCAL_SYMBOL: b2World.cpp<627:16> [b2World.cpp <631:9 631:10>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> bool b2Fixture::IsSensor() const [b2World.cpp <631:31 631:38>]
LOCAL_SYMBOL: b2World.cpp<628:16> [b2World.cpp <631:27 631:28>]
LOCAL_SYMBOL: b2World.cpp<636:13> [b2World.cpp <636:13 636:14>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Body [b2World.cpp <636:5 636:10>]
SYMBOL_FUNCTION b2Body * b2Fixture::GetBody()
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> b2Body * b2Fixture::GetBody() [b2World.cpp <636:22 636:28>]
LOCAL_SYMBOL: b2World.cpp<627:16> [b2World.cpp <636:18 636:19>]
LOCAL_SYMBOL: b2World.cpp<637:13> [b2World.cpp <637:13 637:14>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Body [b2World.cpp <637:5 637:10>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> b2Body * b2Fixture::GetBody() [b2World.cpp <637:22 637:28>]
LOCAL_SYMBOL: b2World.cpp<628:16> [b2World.cpp <637:18 637:19>]
LOCAL_SYMBOL: b2World.cpp<639:16> [b2World.cpp <639:16 639:20>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2BodyType [b2World.cpp <639:5 639:14>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2BodyType b2Body::m_type [b2World.cpp <639:28 639:33>]
LOCAL_SYMBOL: b2World.cpp<636:13> [b2World.cpp <639:24 639:25>]
LOCAL_SYMBOL: b2World.cpp<640:16> [b2World.cpp <640:16 640:20>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2BodyType [b2World.cpp <640:5 640:14>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2BodyType b2Body::m_type [b2World.cpp <640:28 640:33>]
LOCAL_SYMBOL: b2World.cpp<637:13> [b2World.cpp <640:24 640:25>]
LOCAL_SYMBOL: b2World.cpp<639:16> [b2World.cpp <641:14 641:18>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2BodyType::b2_dynamicBody [b2World.cpp <641:23 641:36>]
LOCAL_SYMBOL: b2World.cpp<640:16> [b2World.cpp <641:41 641:45>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2BodyType::b2_dynamicBody [b2World.cpp <641:50 641:63>]
LOCAL_SYMBOL: b2World.cpp<643:10> [b2World.cpp <643:10 643:16>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> bool [b2World.cpp <643:5 643:8>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> bool b2Body::IsAwake() const [b2World.cpp <643:24 643:30>]
LOCAL_SYMBOL: b2World.cpp<636:13> [b2World.cpp <643:20 643:21>]
LOCAL_SYMBOL: b2World.cpp<639:16> [b2World.cpp <643:37 643:41>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2BodyType::b2_staticBody [b2World.cpp <643:46 643:58>]
LOCAL_SYMBOL: b2World.cpp<644:10> [b2World.cpp <644:10 644:16>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> bool [b2World.cpp <644:5 644:8>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> bool b2Body::IsAwake() const [b2World.cpp <644:24 644:30>]
LOCAL_SYMBOL: b2World.cpp<637:13> [b2World.cpp <644:20 644:21>]
LOCAL_SYMBOL: b2World.cpp<640:16> [b2World.cpp <644:37 644:41>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2BodyType::b2_staticBody [b2World.cpp <644:46 644:58>]
LOCAL_SYMBOL: b2World.cpp<643:10> [b2World.cpp <647:9 647:15>]
LOCAL_SYMBOL: b2World.cpp<644:10> [b2World.cpp <647:29 647:35>]
LOCAL_SYMBOL: b2World.cpp<652:10> [b2World.cpp <652:10 652:17>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> bool [b2World.cpp <652:5 652:8>]
SYMBOL_FUNCTION bool b2Body::IsBullet() const
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> bool b2Body::IsBullet() const [b2World.cpp <652:25 652:32>]
LOCAL_SYMBOL: b2World.cpp<636:13> [b2World.cpp <652:21 652:22>]
LOCAL_SYMBOL: b2World.cpp<639:16> [b2World.cpp <652:39 652:43>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2BodyType::b2_dynamicBody [b2World.cpp <652:48 652:61>]
LOCAL_SYMBOL: b2World.cpp<653:10> [b2World.cpp <653:10 653:17>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> bool [b2World.cpp <653:5 653:8>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> bool b2Body::IsBullet() const [b2World.cpp <653:25 653:32>]
LOCAL_SYMBOL: b2World.cpp<637:13> [b2World.cpp <653:21 653:22>]
LOCAL_SYMBOL: b2World.cpp<640:16> [b2World.cpp <653:39 653:43>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2BodyType::b2_dynamicBody [b2World.cpp <653:48 653:61>]
LOCAL_SYMBOL: b2World.cpp<652:10> [b2World.cpp <656:9 656:16>]
LOCAL_SYMBOL: b2World.cpp<653:10> [b2World.cpp <656:30 656:37>]
LOCAL_SYMBOL: b2World.cpp<663:13> [b2World.cpp <663:13 663:18>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> float32 [b2World.cpp <663:5 663:11>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> float32 b2Sweep::alpha0 [b2World.cpp <663:34 663:39>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep b2Body::m_sweep [b2World.cpp <663:26 663:32>]
LOCAL_SYMBOL: b2World.cpp<636:13> [b2World.cpp <663:22 663:23>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> float32 b2Sweep::alpha0 [b2World.cpp <665:21 665:26>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep b2Body::m_sweep [b2World.cpp <665:13 665:19>]
LOCAL_SYMBOL: b2World.cpp<636:13> [b2World.cpp <665:9 665:10>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> float32 b2Sweep::alpha0 [b2World.cpp <665:42 665:47>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep b2Body::m_sweep [b2World.cpp <665:34 665:40>]
LOCAL_SYMBOL: b2World.cpp<637:13> [b2World.cpp <665:30 665:31>]
LOCAL_SYMBOL: b2World.cpp<663:13> [b2World.cpp <667:6 667:11>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> float32 b2Sweep::alpha0 [b2World.cpp <667:27 667:32>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep b2Body::m_sweep [b2World.cpp <667:19 667:25>]
LOCAL_SYMBOL: b2World.cpp<637:13> [b2World.cpp <667:15 667:16>]
SYMBOL_FUNCTION void b2Sweep::Advance(float32)
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Sweep::Advance(float32) [b2World.cpp <668:18 668:24>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep b2Body::m_sweep [b2World.cpp <668:10 668:16>]
LOCAL_SYMBOL: b2World.cpp<636:13> [b2World.cpp <668:6 668:7>]
LOCAL_SYMBOL: b2World.cpp<663:13> [b2World.cpp <668:26 668:31>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> float32 b2Sweep::alpha0 [b2World.cpp <670:26 670:31>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep b2Body::m_sweep [b2World.cpp <670:18 670:24>]
LOCAL_SYMBOL: b2World.cpp<637:13> [b2World.cpp <670:14 670:15>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> float32 b2Sweep::alpha0 [b2World.cpp <670:47 670:52>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep b2Body::m_sweep [b2World.cpp <670:39 670:45>]
LOCAL_SYMBOL: b2World.cpp<636:13> [b2World.cpp <670:35 670:36>]
LOCAL_SYMBOL: b2World.cpp<663:13> [b2World.cpp <672:6 672:11>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> float32 b2Sweep::alpha0 [b2World.cpp <672:27 672:32>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep b2Body::m_sweep [b2World.cpp <672:19 672:25>]
LOCAL_SYMBOL: b2World.cpp<636:13> [b2World.cpp <672:15 672:16>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Sweep::Advance(float32) [b2World.cpp <673:18 673:24>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep b2Body::m_sweep [b2World.cpp <673:10 673:16>]
LOCAL_SYMBOL: b2World.cpp<637:13> [b2World.cpp <673:6 673:7>]
LOCAL_SYMBOL: b2World.cpp<663:13> [b2World.cpp <673:26 673:31>]
LOCAL_SYMBOL: b2World.cpp<663:13> [b2World.cpp <676:14 676:19>]
LOCAL_SYMBOL: b2World.cpp<678:11> [b2World.cpp <678:11 678:16>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> int32 [b2World.cpp <678:5 678:9>]
SYMBOL_FUNCTION int32 b2Contact::GetChildIndexA() const
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> int32 b2Contact::GetChildIndexA() const [b2World.cpp <678:23 678:36>]
LOCAL_SYMBOL: b2World.cpp<605:19> [b2World.cpp <678:20 678:20>]
LOCAL_SYMBOL: b2World.cpp<679:11> [b2World.cpp <679:11 679:16>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> int32 [b2World.cpp <679:5 679:9>]
SYMBOL_FUNCTION int32 b2Contact::GetChildIndexB() const
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> int32 b2Contact::GetChildIndexB() const [b2World.cpp <679:23 679:36>]
LOCAL_SYMBOL: b2World.cpp<605:19> [b2World.cpp <679:20 679:20>]
LOCAL_SYMBOL: b2World.cpp<682:16> [b2World.cpp <682:16 682:20>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2TOIInput [b2World.cpp <682:5 682:14>]
SYMBOL_FUNCTION void b2TOIInput::b2TOIInput()
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2TOIInput::b2TOIInput() [b2World.cpp <682:16 682:20>]
SYMBOL_FUNCTION void b2DistanceProxy::Set(const b2Shape *, int32)
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2DistanceProxy::Set(const b2Shape *, int32) [b2World.cpp <683:18 683:20>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2DistanceProxy b2TOIInput::proxyA [b2World.cpp <683:11 683:16>]
LOCAL_SYMBOL: b2World.cpp<682:16> [b2World.cpp <683:5 683:9>]
SYMBOL_FUNCTION b2Shape * b2Fixture::GetShape()
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> b2Shape * b2Fixture::GetShape() [b2World.cpp <683:26 683:33>]
LOCAL_SYMBOL: b2World.cpp<627:16> [b2World.cpp <683:22 683:23>]
LOCAL_SYMBOL: b2World.cpp<678:11> [b2World.cpp <683:38 683:43>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2DistanceProxy::Set(const b2Shape *, int32) [b2World.cpp <684:18 684:20>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2DistanceProxy b2TOIInput::proxyB [b2World.cpp <684:11 684:16>]
LOCAL_SYMBOL: b2World.cpp<682:16> [b2World.cpp <684:5 684:9>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> b2Shape * b2Fixture::GetShape() [b2World.cpp <684:26 684:33>]
LOCAL_SYMBOL: b2World.cpp<628:16> [b2World.cpp <684:22 684:23>]
LOCAL_SYMBOL: b2World.cpp<679:11> [b2World.cpp <684:38 684:43>]
SYMBOL_FUNCTION b2Sweep & b2Sweep::operator=(const b2Sweep &)
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep & b2Sweep::operator=(const b2Sweep &) [b2World.cpp <685:18 685:18>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep b2TOIInput::sweepA [b2World.cpp <685:11 685:16>]
LOCAL_SYMBOL: b2World.cpp<682:16> [b2World.cpp <685:5 685:9>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep b2Body::m_sweep [b2World.cpp <685:24 685:30>]
LOCAL_SYMBOL: b2World.cpp<636:13> [b2World.cpp <685:20 685:21>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep & b2Sweep::operator=(const b2Sweep &) [b2World.cpp <686:18 686:18>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep b2TOIInput::sweepB [b2World.cpp <686:11 686:16>]
LOCAL_SYMBOL: b2World.cpp<682:16> [b2World.cpp <686:5 686:9>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep b2Body::m_sweep [b2World.cpp <686:24 686:30>]
LOCAL_SYMBOL: b2World.cpp<637:13> [b2World.cpp <686:20 686:21>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> float32 b2TOIInput::tMax [b2World.cpp <687:11 687:14>]
LOCAL_SYMBOL: b2World.cpp<682:16> [b2World.cpp <687:5 687:9>]
LOCAL_SYMBOL: b2World.cpp<689:17> [b2World.cpp <689:17 689:22>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2TOIOutput [b2World.cpp <689:5 689:15>]
SYMBOL_FUNCTION void b2TOIOutput::b2TOIOutput()
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2TOIOutput::b2TOIOutput() [b2World.cpp <689:17 689:22>]
SYMBOL_FUNCTION void b2TimeOfImpact(b2TOIOutput *, const b2TOIInput *)
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2TimeOfImpact(b2TOIOutput *, const b2TOIInput *) [b2World.cpp <690:5 690:18>]
LOCAL_SYMBOL: b2World.cpp<689:17> [b2World.cpp <690:21 690:26>]
LOCAL_SYMBOL: b2World.cpp<682:16> [b2World.cpp <690:30 690:34>]
LOCAL_SYMBOL: b2World.cpp<693:13> [b2World.cpp <693:13 693:16>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> float32 [b2World.cpp <693:5 693:11>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> float32 b2TOIOutput::t [b2World.cpp <693:27 693:27>]
LOCAL_SYMBOL: b2World.cpp<689:17> [b2World.cpp <693:20 693:25>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2TOIOutput::State b2TOIOutput::state [b2World.cpp <694:16 694:20>]
LOCAL_SYMBOL: b2World.cpp<689:17> [b2World.cpp <694:9 694:14>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2TOIOutput::State::e_touching [b2World.cpp <694:38 694:47>]
SYMBOL_STRUCT b2TOIOutput
QUALIFIER: b2TOIOutput [b2World.cpp <694:25 694:35>]
LOCAL_SYMBOL: b2World.cpp<619:12> [b2World.cpp <696:6 696:10>]
SYMBOL_FUNCTION float b2Min<float>(float, float)
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> float b2Min<float>(float, float) [b2World.cpp <696:14 696:18>]
LOCAL_SYMBOL: b2World.cpp<663:13> [b2World.cpp <696:20 696:25>]
LOCAL_SYMBOL: b2World.cpp<663:13> [b2World.cpp <696:37 696:42>]
LOCAL_SYMBOL: b2World.cpp<693:13> [b2World.cpp <696:47 696:50>]
LOCAL_SYMBOL: b2World.cpp<619:12> [b2World.cpp <700:6 700:10>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> float32 b2Contact::m_toi [b2World.cpp <703:8 703:12>]
LOCAL_SYMBOL: b2World.cpp<605:19> [b2World.cpp <703:5 703:5>]
LOCAL_SYMBOL: b2World.cpp<619:12> [b2World.cpp <703:16 703:20>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> uint32 b2Contact::m_flags [b2World.cpp <704:8 704:14>]
LOCAL_SYMBOL: b2World.cpp<605:19> [b2World.cpp <704:5 704:5>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Contact::anonymous enum (b2Contact.h<155:2>)::e_toiFlag [b2World.cpp <704:30 704:38>]
QUALIFIER: b2Contact [b2World.cpp <704:19 704:27>]
LOCAL_SYMBOL: b2World.cpp<619:12> [b2World.cpp <707:8 707:12>]
LOCAL_SYMBOL: b2World.cpp<603:11> [b2World.cpp <707:16 707:23>]
LOCAL_SYMBOL: b2World.cpp<602:14> [b2World.cpp <710:5 710:14>]
LOCAL_SYMBOL: b2World.cpp<605:19> [b2World.cpp <710:18 710:18>]
LOCAL_SYMBOL: b2World.cpp<603:11> [b2World.cpp <711:5 711:12>]
LOCAL_SYMBOL: b2World.cpp<619:12> [b2World.cpp <711:16 711:20>]
LOCAL_SYMBOL: b2World.cpp<602:14> [b2World.cpp <715:7 715:16>]
LOCAL_SYMBOL: b2World.cpp<603:11> [b2World.cpp <715:60 715:67>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> bool b2World::m_stepComplete [b2World.cpp <718:4 718:17>]
LOCAL_SYMBOL: b2World.cpp<723:14> [b2World.cpp <723:14 723:15>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Fixture [b2World.cpp <723:3 723:11>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> b2Fixture * b2Contact::GetFixtureA() [b2World.cpp <723:31 723:41>]
LOCAL_SYMBOL: b2World.cpp<602:14> [b2World.cpp <723:19 723:28>]
LOCAL_SYMBOL: b2World.cpp<724:14> [b2World.cpp <724:14 724:15>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Fixture [b2World.cpp <724:3 724:11>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> b2Fixture * b2Contact::GetFixtureB() [b2World.cpp <724:31 724:41>]
LOCAL_SYMBOL: b2World.cpp<602:14> [b2World.cpp <724:19 724:28>]
LOCAL_SYMBOL: b2World.cpp<725:11> [b2World.cpp <725:11 725:12>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Body [b2World.cpp <725:3 725:8>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> b2Body * b2Fixture::GetBody() [b2World.cpp <725:20 725:26>]
LOCAL_SYMBOL: b2World.cpp<723:14> [b2World.cpp <725:16 725:17>]
LOCAL_SYMBOL: b2World.cpp<726:11> [b2World.cpp <726:11 726:12>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Body [b2World.cpp <726:3 726:8>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> b2Body * b2Fixture::GetBody() [b2World.cpp <726:20 726:26>]
LOCAL_SYMBOL: b2World.cpp<724:14> [b2World.cpp <726:16 726:17>]
LOCAL_SYMBOL: b2World.cpp<728:11> [b2World.cpp <728:11 728:17>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep [b2World.cpp <728:3 728:9>]
SYMBOL_FUNCTION void b2Sweep::b2Sweep(const b2Sweep &)
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Sweep::b2Sweep(const b2Sweep &) [b2World.cpp <728:25 728:31>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep b2Body::m_sweep [b2World.cpp <728:25 728:31>]
LOCAL_SYMBOL: b2World.cpp<725:11> [b2World.cpp <728:21 728:22>]
LOCAL_SYMBOL: b2World.cpp<729:11> [b2World.cpp <729:11 729:17>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep [b2World.cpp <729:3 729:9>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Sweep::b2Sweep(const b2Sweep &) [b2World.cpp <729:25 729:31>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep b2Body::m_sweep [b2World.cpp <729:25 729:31>]
LOCAL_SYMBOL: b2World.cpp<726:11> [b2World.cpp <729:21 729:22>]
SYMBOL_FUNCTION void b2Body::Advance(float32)
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Body::Advance(float32) [b2World.cpp <731:7 731:13>]
LOCAL_SYMBOL: b2World.cpp<725:11> [b2World.cpp <731:3 731:4>]
LOCAL_SYMBOL: b2World.cpp<603:11> [b2World.cpp <731:15 731:22>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Body::Advance(float32) [b2World.cpp <732:7 732:13>]
LOCAL_SYMBOL: b2World.cpp<726:11> [b2World.cpp <732:3 732:4>]
LOCAL_SYMBOL: b2World.cpp<603:11> [b2World.cpp <732:15 732:22>]
SYMBOL_FUNCTION void b2Contact::Update(b2ContactListener *)
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Contact::Update(b2ContactListener *) [b2World.cpp <735:15 735:20>]
LOCAL_SYMBOL: b2World.cpp<602:14> [b2World.cpp <735:3 735:12>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2ContactListener * b2ContactManager::m_contactListener [b2World.cpp <735:39 735:55>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2ContactManager b2World::m_contactManager [b2World.cpp <735:22 735:37>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> uint32 b2Contact::m_flags [b2World.cpp <736:15 736:21>]
LOCAL_SYMBOL: b2World.cpp<602:14> [b2World.cpp <736:3 736:12>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Contact::anonymous enum (b2Contact.h<155:2>)::e_toiFlag [b2World.cpp <736:38 736:46>]
QUALIFIER: b2Contact [b2World.cpp <736:27 736:35>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> int32 b2Contact::m_toiCount [b2World.cpp <737:17 737:26>]
LOCAL_SYMBOL: b2World.cpp<602:14> [b2World.cpp <737:5 737:14>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> bool b2Contact::IsEnabled() const [b2World.cpp <740:19 740:27>]
LOCAL_SYMBOL: b2World.cpp<602:14> [b2World.cpp <740:7 740:16>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> bool b2Contact::IsTouching() const [b2World.cpp <740:55 740:64>]
LOCAL_SYMBOL: b2World.cpp<602:14> [b2World.cpp <740:43 740:52>]
SYMBOL_FUNCTION void b2Contact::SetEnabled(bool)
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Contact::SetEnabled(bool) [b2World.cpp <743:16 743:25>]
LOCAL_SYMBOL: b2World.cpp<602:14> [b2World.cpp <743:4 743:13>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep & b2Sweep::operator=(const b2Sweep &) [b2World.cpp <744:16 744:16>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep b2Body::m_sweep [b2World.cpp <744:8 744:14>]
LOCAL_SYMBOL: b2World.cpp<725:11> [b2World.cpp <744:4 744:5>]
LOCAL_SYMBOL: b2World.cpp<728:11> [b2World.cpp <744:18 744:24>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep & b2Sweep::operator=(const b2Sweep &) [b2World.cpp <745:16 745:16>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep b2Body::m_sweep [b2World.cpp <745:8 745:14>]
LOCAL_SYMBOL: b2World.cpp<726:11> [b2World.cpp <745:4 745:5>]
LOCAL_SYMBOL: b2World.cpp<729:11> [b2World.cpp <745:18 745:24>]
SYMBOL_FUNCTION void b2Body::SynchronizeTransform()
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Body::SynchronizeTransform() [b2World.cpp <746:8 746:27>]
LOCAL_SYMBOL: b2World.cpp<725:11> [b2World.cpp <746:4 746:5>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Body::SynchronizeTransform() [b2World.cpp <747:8 747:27>]
LOCAL_SYMBOL: b2World.cpp<726:11> [b2World.cpp <747:4 747:5>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Body::SetAwake(bool) [b2World.cpp <751:7 751:14>]
LOCAL_SYMBOL: b2World.cpp<725:11> [b2World.cpp <751:3 751:4>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Body::SetAwake(bool) [b2World.cpp <752:7 752:14>]
LOCAL_SYMBOL: b2World.cpp<726:11> [b2World.cpp <752:3 752:4>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Island::Clear() [b2World.cpp <755:10 755:14>]
LOCAL_SYMBOL: b2World.cpp<579:11> [b2World.cpp <755:3 755:8>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Island::Add(b2Body *) [b2World.cpp <756:10 756:12>]
LOCAL_SYMBOL: b2World.cpp<579:11> [b2World.cpp <756:3 756:8>]
LOCAL_SYMBOL: b2World.cpp<725:11> [b2World.cpp <756:14 756:15>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Island::Add(b2Body *) [b2World.cpp <757:10 757:12>]
LOCAL_SYMBOL: b2World.cpp<579:11> [b2World.cpp <757:3 757:8>]
LOCAL_SYMBOL: b2World.cpp<726:11> [b2World.cpp <757:14 757:15>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Island::Add(b2Contact *) [b2World.cpp <758:10 758:12>]
LOCAL_SYMBOL: b2World.cpp<579:11> [b2World.cpp <758:3 758:8>]
LOCAL_SYMBOL: b2World.cpp<602:14> [b2World.cpp <758:14 758:23>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> uint16 b2Body::m_flags [b2World.cpp <760:7 760:13>]
LOCAL_SYMBOL: b2World.cpp<725:11> [b2World.cpp <760:3 760:4>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_islandFlag [b2World.cpp <760:26 760:37>]
QUALIFIER: b2Body [b2World.cpp <760:18 760:23>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> uint16 b2Body::m_flags [b2World.cpp <761:7 761:13>]
LOCAL_SYMBOL: b2World.cpp<726:11> [b2World.cpp <761:3 761:4>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_islandFlag [b2World.cpp <761:26 761:37>]
QUALIFIER: b2Body [b2World.cpp <761:18 761:23>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> uint32 b2Contact::m_flags [b2World.cpp <762:15 762:21>]
LOCAL_SYMBOL: b2World.cpp<602:14> [b2World.cpp <762:3 762:12>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Contact::anonymous enum (b2Contact.h<155:2>)::e_islandFlag [b2World.cpp <762:37 762:48>]
QUALIFIER: b2Contact [b2World.cpp <762:26 762:34>]
LOCAL_SYMBOL: b2World.cpp<765:11> [b2World.cpp <765:11 765:16>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Body [b2World.cpp <765:3 765:8>]
LOCAL_SYMBOL: b2World.cpp<725:11> [b2World.cpp <765:24 765:25>]
LOCAL_SYMBOL: b2World.cpp<726:11> [b2World.cpp <765:28 765:29>]
LOCAL_SYMBOL: b2World.cpp<766:14> [b2World.cpp <766:14 766:14>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> int32 [b2World.cpp <766:8 766:12>]
LOCAL_SYMBOL: b2World.cpp<766:14> [b2World.cpp <766:21 766:21>]
LOCAL_SYMBOL: b2World.cpp<766:14> [b2World.cpp <766:30 766:30>]
LOCAL_SYMBOL: b2World.cpp<768:12> [b2World.cpp <768:12 768:15>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Body [b2World.cpp <768:4 768:9>]
LOCAL_SYMBOL: b2World.cpp<765:11> [b2World.cpp <768:19 768:24>]
LOCAL_SYMBOL: b2World.cpp<766:14> [b2World.cpp <768:26 768:26>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2BodyType b2Body::m_type [b2World.cpp <769:14 769:19>]
LOCAL_SYMBOL: b2World.cpp<768:12> [b2World.cpp <769:8 769:11>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2BodyType::b2_dynamicBody [b2World.cpp <769:24 769:37>]
LOCAL_SYMBOL: b2World.cpp<771:25> [b2World.cpp <771:25 771:26>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2ContactEdge [b2World.cpp <771:10 771:22>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2ContactEdge * b2Body::m_contactList [b2World.cpp <771:36 771:48>]
LOCAL_SYMBOL: b2World.cpp<768:12> [b2World.cpp <771:30 771:33>]
LOCAL_SYMBOL: b2World.cpp<771:25> [b2World.cpp <771:51 771:52>]
LOCAL_SYMBOL: b2World.cpp<771:25> [b2World.cpp <771:55 771:56>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2ContactEdge * b2ContactEdge::next [b2World.cpp <771:64 771:67>]
LOCAL_SYMBOL: b2World.cpp<771:25> [b2World.cpp <771:60 771:61>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> int32 b2Island::m_bodyCount [b2World.cpp <773:17 773:27>]
LOCAL_SYMBOL: b2World.cpp<579:11> [b2World.cpp <773:10 773:15>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> int32 b2Island::m_bodyCapacity [b2World.cpp <773:39 773:52>]
LOCAL_SYMBOL: b2World.cpp<579:11> [b2World.cpp <773:32 773:37>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> int32 b2Island::m_contactCount [b2World.cpp <778:17 778:30>]
LOCAL_SYMBOL: b2World.cpp<579:11> [b2World.cpp <778:10 778:15>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> int32 b2Island::m_contactCapacity [b2World.cpp <778:42 778:58>]
LOCAL_SYMBOL: b2World.cpp<579:11> [b2World.cpp <778:35 778:40>]
LOCAL_SYMBOL: b2World.cpp<783:17> [b2World.cpp <783:17 783:23>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Contact [b2World.cpp <783:6 783:14>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Contact * b2ContactEdge::contact [b2World.cpp <783:31 783:37>]
LOCAL_SYMBOL: b2World.cpp<771:25> [b2World.cpp <783:27 783:28>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> uint32 b2Contact::m_flags [b2World.cpp <786:19 786:25>]
LOCAL_SYMBOL: b2World.cpp<783:17> [b2World.cpp <786:10 786:16>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Contact::anonymous enum (b2Contact.h<155:2>)::e_islandFlag [b2World.cpp <786:40 786:51>]
QUALIFIER: b2Contact [b2World.cpp <786:29 786:37>]
LOCAL_SYMBOL: b2World.cpp<792:14> [b2World.cpp <792:14 792:18>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Body [b2World.cpp <792:6 792:11>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Body * b2ContactEdge::other [b2World.cpp <792:26 792:30>]
LOCAL_SYMBOL: b2World.cpp<771:25> [b2World.cpp <792:22 792:23>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2BodyType b2Body::m_type [b2World.cpp <793:17 793:22>]
LOCAL_SYMBOL: b2World.cpp<792:14> [b2World.cpp <793:10 793:14>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2BodyType::b2_dynamicBody [b2World.cpp <793:27 793:40>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> bool b2Body::IsBullet() const [b2World.cpp <794:13 794:20>]
LOCAL_SYMBOL: b2World.cpp<768:12> [b2World.cpp <794:7 794:10>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> bool b2Body::IsBullet() const [b2World.cpp <794:43 794:50>]
LOCAL_SYMBOL: b2World.cpp<792:14> [b2World.cpp <794:36 794:40>]
LOCAL_SYMBOL: b2World.cpp<800:11> [b2World.cpp <800:11 800:17>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> bool [b2World.cpp <800:6 800:9>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> bool b2Fixture::m_isSensor [b2World.cpp <800:42 800:51>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Fixture * b2Contact::m_fixtureA [b2World.cpp <800:30 800:39>]
LOCAL_SYMBOL: b2World.cpp<783:17> [b2World.cpp <800:21 800:27>]
LOCAL_SYMBOL: b2World.cpp<801:11> [b2World.cpp <801:11 801:17>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> bool [b2World.cpp <801:6 801:9>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> bool b2Fixture::m_isSensor [b2World.cpp <801:42 801:51>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Fixture * b2Contact::m_fixtureB [b2World.cpp <801:30 801:39>]
LOCAL_SYMBOL: b2World.cpp<783:17> [b2World.cpp <801:21 801:27>]
LOCAL_SYMBOL: b2World.cpp<800:11> [b2World.cpp <802:10 802:16>]
LOCAL_SYMBOL: b2World.cpp<801:11> [b2World.cpp <802:21 802:27>]
LOCAL_SYMBOL: b2World.cpp<808:14> [b2World.cpp <808:14 808:19>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep [b2World.cpp <808:6 808:12>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Sweep::b2Sweep(const b2Sweep &) [b2World.cpp <808:30 808:36>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep b2Body::m_sweep [b2World.cpp <808:30 808:36>]
LOCAL_SYMBOL: b2World.cpp<792:14> [b2World.cpp <808:23 808:27>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> uint16 b2Body::m_flags [b2World.cpp <809:18 809:24>]
LOCAL_SYMBOL: b2World.cpp<792:14> [b2World.cpp <809:11 809:15>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_islandFlag [b2World.cpp <809:36 809:47>]
QUALIFIER: b2Body [b2World.cpp <809:28 809:33>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Body::Advance(float32) [b2World.cpp <811:14 811:20>]
LOCAL_SYMBOL: b2World.cpp<792:14> [b2World.cpp <811:7 811:11>]
LOCAL_SYMBOL: b2World.cpp<603:11> [b2World.cpp <811:22 811:29>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Contact::Update(b2ContactListener *) [b2World.cpp <815:15 815:20>]
LOCAL_SYMBOL: b2World.cpp<783:17> [b2World.cpp <815:6 815:12>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2ContactListener * b2ContactManager::m_contactListener [b2World.cpp <815:39 815:55>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2ContactManager b2World::m_contactManager [b2World.cpp <815:22 815:37>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> bool b2Contact::IsEnabled() const [b2World.cpp <818:19 818:27>]
LOCAL_SYMBOL: b2World.cpp<783:17> [b2World.cpp <818:10 818:16>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep & b2Sweep::operator=(const b2Sweep &) [b2World.cpp <820:22 820:22>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep b2Body::m_sweep [b2World.cpp <820:14 820:20>]
LOCAL_SYMBOL: b2World.cpp<792:14> [b2World.cpp <820:7 820:11>]
LOCAL_SYMBOL: b2World.cpp<808:14> [b2World.cpp <820:24 820:29>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Body::SynchronizeTransform() [b2World.cpp <821:14 821:33>]
LOCAL_SYMBOL: b2World.cpp<792:14> [b2World.cpp <821:7 821:11>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> bool b2Contact::IsTouching() const [b2World.cpp <826:19 826:28>]
LOCAL_SYMBOL: b2World.cpp<783:17> [b2World.cpp <826:10 826:16>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep & b2Sweep::operator=(const b2Sweep &) [b2World.cpp <828:22 828:22>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Sweep b2Body::m_sweep [b2World.cpp <828:14 828:20>]
LOCAL_SYMBOL: b2World.cpp<792:14> [b2World.cpp <828:7 828:11>]
LOCAL_SYMBOL: b2World.cpp<808:14> [b2World.cpp <828:24 828:29>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Body::SynchronizeTransform() [b2World.cpp <829:14 829:33>]
LOCAL_SYMBOL: b2World.cpp<792:14> [b2World.cpp <829:7 829:11>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> uint32 b2Contact::m_flags [b2World.cpp <834:15 834:21>]
LOCAL_SYMBOL: b2World.cpp<783:17> [b2World.cpp <834:6 834:12>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Contact::anonymous enum (b2Contact.h<155:2>)::e_islandFlag [b2World.cpp <834:37 834:48>]
QUALIFIER: b2Contact [b2World.cpp <834:26 834:34>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Island::Add(b2Contact *) [b2World.cpp <835:13 835:15>]
LOCAL_SYMBOL: b2World.cpp<579:11> [b2World.cpp <835:6 835:11>]
LOCAL_SYMBOL: b2World.cpp<783:17> [b2World.cpp <835:17 835:23>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> uint16 b2Body::m_flags [b2World.cpp <838:17 838:23>]
LOCAL_SYMBOL: b2World.cpp<792:14> [b2World.cpp <838:10 838:14>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_islandFlag [b2World.cpp <838:35 838:46>]
QUALIFIER: b2Body [b2World.cpp <838:27 838:32>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> uint16 b2Body::m_flags [b2World.cpp <844:13 844:19>]
LOCAL_SYMBOL: b2World.cpp<792:14> [b2World.cpp <844:6 844:10>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_islandFlag [b2World.cpp <844:32 844:43>]
QUALIFIER: b2Body [b2World.cpp <844:24 844:29>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2BodyType b2Body::m_type [b2World.cpp <846:17 846:22>]
LOCAL_SYMBOL: b2World.cpp<792:14> [b2World.cpp <846:10 846:14>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2BodyType::b2_staticBody [b2World.cpp <846:27 846:39>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Body::SetAwake(bool) [b2World.cpp <848:14 848:21>]
LOCAL_SYMBOL: b2World.cpp<792:14> [b2World.cpp <848:7 848:11>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Island::Add(b2Body *) [b2World.cpp <851:13 851:15>]
LOCAL_SYMBOL: b2World.cpp<579:11> [b2World.cpp <851:6 851:11>]
LOCAL_SYMBOL: b2World.cpp<792:14> [b2World.cpp <851:17 851:21>]
LOCAL_SYMBOL: b2World.cpp<856:14> [b2World.cpp <856:14 856:20>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2TimeStep [b2World.cpp <856:3 856:12>]
SYMBOL_FUNCTION void b2TimeStep::b2TimeStep()
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2TimeStep::b2TimeStep() [b2World.cpp <856:14 856:20>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> float32 b2TimeStep::dt [b2World.cpp <857:11 857:12>]
LOCAL_SYMBOL: b2World.cpp<856:14> [b2World.cpp <857:3 857:9>]
LOCAL_SYMBOL: b2World.cpp<603:11> [b2World.cpp <857:24 857:31>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> float32 b2TimeStep::dt [b2World.cpp <857:41 857:42>]
LOCAL_SYMBOL: b2World.cpp<577:42> [b2World.cpp <857:36 857:39>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> float32 b2TimeStep::inv_dt [b2World.cpp <858:11 858:16>]
LOCAL_SYMBOL: b2World.cpp<856:14> [b2World.cpp <858:3 858:9>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> float32 b2TimeStep::dt [b2World.cpp <858:35 858:36>]
LOCAL_SYMBOL: b2World.cpp<856:14> [b2World.cpp <858:27 858:33>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> float32 b2TimeStep::dtRatio [b2World.cpp <859:11 859:17>]
LOCAL_SYMBOL: b2World.cpp<856:14> [b2World.cpp <859:3 859:9>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> int32 b2TimeStep::positionIterations [b2World.cpp <860:11 860:28>]
LOCAL_SYMBOL: b2World.cpp<856:14> [b2World.cpp <860:3 860:9>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> int32 b2TimeStep::velocityIterations [b2World.cpp <861:11 861:28>]
LOCAL_SYMBOL: b2World.cpp<856:14> [b2World.cpp <861:3 861:9>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> int32 b2TimeStep::velocityIterations [b2World.cpp <861:37 861:54>]
LOCAL_SYMBOL: b2World.cpp<577:42> [b2World.cpp <861:32 861:35>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> bool b2TimeStep::warmStarting [b2World.cpp <862:11 862:22>]
LOCAL_SYMBOL: b2World.cpp<856:14> [b2World.cpp <862:3 862:9>]
SYMBOL_FUNCTION void b2Island::SolveTOI(const b2TimeStep &, int32, int32)
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Island::SolveTOI(const b2TimeStep &, int32, int32) [b2World.cpp <863:10 863:17>]
LOCAL_SYMBOL: b2World.cpp<579:11> [b2World.cpp <863:3 863:8>]
LOCAL_SYMBOL: b2World.cpp<856:14> [b2World.cpp <863:19 863:25>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> int32 b2Body::m_islandIndex [b2World.cpp <863:32 863:44>]
LOCAL_SYMBOL: b2World.cpp<725:11> [b2World.cpp <863:28 863:29>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> int32 b2Body::m_islandIndex [b2World.cpp <863:51 863:63>]
LOCAL_SYMBOL: b2World.cpp<726:11> [b2World.cpp <863:47 863:48>]
LOCAL_SYMBOL: b2World.cpp<866:14> [b2World.cpp <866:14 866:14>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> int32 [b2World.cpp <866:8 866:12>]
LOCAL_SYMBOL: b2World.cpp<866:14> [b2World.cpp <866:21 866:21>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> int32 b2Island::m_bodyCount [b2World.cpp <866:32 866:42>]
LOCAL_SYMBOL: b2World.cpp<579:11> [b2World.cpp <866:25 866:30>]
LOCAL_SYMBOL: b2World.cpp<866:14> [b2World.cpp <866:47 866:47>]
LOCAL_SYMBOL: b2World.cpp<868:12> [b2World.cpp <868:12 868:15>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Body [b2World.cpp <868:4 868:9>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Body * * b2Island::m_bodies [b2World.cpp <868:26 868:33>]
LOCAL_SYMBOL: b2World.cpp<579:11> [b2World.cpp <868:19 868:24>]
LOCAL_SYMBOL: b2World.cpp<866:14> [b2World.cpp <868:35 868:35>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> uint16 b2Body::m_flags [b2World.cpp <869:10 869:16>]
LOCAL_SYMBOL: b2World.cpp<868:12> [b2World.cpp <869:4 869:7>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_islandFlag [b2World.cpp <869:30 869:41>]
QUALIFIER: b2Body [b2World.cpp <869:22 869:27>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2BodyType b2Body::m_type [b2World.cpp <871:14 871:19>]
LOCAL_SYMBOL: b2World.cpp<868:12> [b2World.cpp <871:8 871:11>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2BodyType::b2_dynamicBody [b2World.cpp <871:24 871:37>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2Body::SynchronizeFixtures() [b2World.cpp <876:10 876:28>]
LOCAL_SYMBOL: b2World.cpp<868:12> [b2World.cpp <876:4 876:7>]
LOCAL_SYMBOL: b2World.cpp<879:24> [b2World.cpp <879:24 879:25>]
REFERENCE_TYPE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2ContactEdge [b2World.cpp <879:9 879:21>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2ContactEdge * b2Body::m_contactList [b2World.cpp <879:35 879:47>]
LOCAL_SYMBOL: b2World.cpp<868:12> [b2World.cpp <879:29 879:32>]
LOCAL_SYMBOL: b2World.cpp<879:24> [b2World.cpp <879:50 879:51>]
LOCAL_SYMBOL: b2World.cpp<879:24> [b2World.cpp <879:54 879:55>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2ContactEdge * b2ContactEdge::next [b2World.cpp <879:63 879:66>]
LOCAL_SYMBOL: b2World.cpp<879:24> [b2World.cpp <879:59 879:60>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> uint32 b2Contact::m_flags [b2World.cpp <881:18 881:24>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Contact * b2ContactEdge::contact [b2World.cpp <881:9 881:15>]
LOCAL_SYMBOL: b2World.cpp<879:24> [b2World.cpp <881:5 881:6>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Contact::anonymous enum (b2Contact.h<155:2>)::e_toiFlag [b2World.cpp <881:42 881:50>]
QUALIFIER: b2Contact [b2World.cpp <881:31 881:39>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2Contact::anonymous enum (b2Contact.h<155:2>)::e_islandFlag [b2World.cpp <881:65 881:76>]
QUALIFIER: b2Contact [b2World.cpp <881:54 881:62>]
REFERENCE_CALL void b2World::SolveTOI(const b2TimeStep &) -> void b2ContactManager::FindNewContacts() [b2World.cpp <887:20 887:34>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> b2ContactManager b2World::m_contactManager [b2World.cpp <887:3 887:18>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> bool b2World::m_subStepping [b2World.cpp <889:7 889:19>]
REFERENCE_USAGE void b2World::SolveTOI(const b2TimeStep &) -> bool b2World::m_stepComplete [b2World.cpp <891:4 891:17>]
SYMBOL_METHOD public void b2World::Step(float32, int32, int32) [b2World.cpp <897:1 <897:15 897:18> 963:1>]
QUALIFIER: b2World [b2World.cpp <897:6 897:12>]
REFERENCE_TYPE_USAGE void b2World::Step(float32, int32, int32) -> void [b2World.cpp <897:1 897:4>]
LOCAL_SYMBOL: b2World.cpp<897:28> [b2World.cpp <897:28 897:29>]
REFERENCE_TYPE_USAGE void b2World::Step(float32, int32, int32) -> float32 [b2World.cpp <897:20 897:26>]
LOCAL_SYMBOL: b2World.cpp<897:38> [b2World.cpp <897:38 897:55>]
REFERENCE_TYPE_USAGE void b2World::Step(float32, int32, int32) -> int32 [b2World.cpp <897:32 897:36>]
LOCAL_SYMBOL: b2World.cpp<897:64> [b2World.cpp <897:64 897:81>]
REFERENCE_TYPE_USAGE void b2World::Step(float32, int32, int32) -> int32 [b2World.cpp <897:58 897:62>]
LOCAL_SYMBOL: b2World.cpp<899:10> [b2World.cpp <899:10 899:18>]
REFERENCE_TYPE_USAGE void b2World::Step(float32, int32, int32) -> b2Timer [b2World.cpp <899:2 899:8>]
REFERENCE_CALL void b2World::Step(float32, int32, int32) -> void b2Timer::b2Timer() [b2World.cpp <899:10 899:18>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> int32 b2World::m_flags [b2World.cpp <902:6 902:12>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> b2World::anonymous enum (b2World.h<215:2>)::e_newFixture [b2World.cpp <902:16 902:27>]
REFERENCE_CALL void b2World::Step(float32, int32, int32) -> void b2ContactManager::FindNewContacts() [b2World.cpp <904:20 904:34>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> b2ContactManager b2World::m_contactManager [b2World.cpp <904:3 904:18>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> int32 b2World::m_flags [b2World.cpp <905:3 905:9>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> b2World::anonymous enum (b2World.h<215:2>)::e_newFixture [b2World.cpp <905:15 905:26>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> int32 b2World::m_flags [b2World.cpp <908:2 908:8>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> b2World::anonymous enum (b2World.h<215:2>)::e_locked [b2World.cpp <908:13 908:20>]
LOCAL_SYMBOL: b2World.cpp<910:13> [b2World.cpp <910:13 910:16>]
REFERENCE_TYPE_USAGE void b2World::Step(float32, int32, int32) -> b2TimeStep [b2World.cpp <910:2 910:11>]
REFERENCE_CALL void b2World::Step(float32, int32, int32) -> void b2TimeStep::b2TimeStep() [b2World.cpp <910:13 910:16>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> float32 b2TimeStep::dt [b2World.cpp <911:7 911:8>]
LOCAL_SYMBOL: b2World.cpp<910:13> [b2World.cpp <911:2 911:5>]
LOCAL_SYMBOL: b2World.cpp<897:28> [b2World.cpp <911:12 911:13>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> int32 b2TimeStep::velocityIterations [b2World.cpp <912:7 912:24>]
LOCAL_SYMBOL: b2World.cpp<910:13> [b2World.cpp <912:2 912:5>]
LOCAL_SYMBOL: b2World.cpp<897:38> [b2World.cpp <912:28 912:45>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> int32 b2TimeStep::positionIterations [b2World.cpp <913:7 913:24>]
LOCAL_SYMBOL: b2World.cpp<910:13> [b2World.cpp <913:2 913:5>]
LOCAL_SYMBOL: b2World.cpp<897:64> [b2World.cpp <913:28 913:45>]
LOCAL_SYMBOL: b2World.cpp<897:28> [b2World.cpp <914:6 914:7>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> float32 b2TimeStep::inv_dt [b2World.cpp <916:8 916:13>]
LOCAL_SYMBOL: b2World.cpp<910:13> [b2World.cpp <916:3 916:6>]
LOCAL_SYMBOL: b2World.cpp<897:28> [b2World.cpp <916:24 916:25>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> float32 b2TimeStep::inv_dt [b2World.cpp <920:8 920:13>]
LOCAL_SYMBOL: b2World.cpp<910:13> [b2World.cpp <920:3 920:6>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> float32 b2TimeStep::dtRatio [b2World.cpp <923:7 923:13>]
LOCAL_SYMBOL: b2World.cpp<910:13> [b2World.cpp <923:2 923:5>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> float32 b2World::m_inv_dt0 [b2World.cpp <923:17 923:25>]
LOCAL_SYMBOL: b2World.cpp<897:28> [b2World.cpp <923:29 923:30>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> bool b2TimeStep::warmStarting [b2World.cpp <925:7 925:18>]
LOCAL_SYMBOL: b2World.cpp<910:13> [b2World.cpp <925:2 925:5>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> bool b2World::m_warmStarting [b2World.cpp <925:22 925:35>]
LOCAL_SYMBOL: b2World.cpp<929:11> [b2World.cpp <929:11 929:15>]
REFERENCE_TYPE_USAGE void b2World::Step(float32, int32, int32) -> b2Timer [b2World.cpp <929:3 929:9>]
REFERENCE_CALL void b2World::Step(float32, int32, int32) -> void b2Timer::b2Timer() [b2World.cpp <929:11 929:15>]
SYMBOL_FUNCTION void b2ContactManager::Collide()
REFERENCE_CALL void b2World::Step(float32, int32, int32) -> void b2ContactManager::Collide() [b2World.cpp <930:20 930:26>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> b2ContactManager b2World::m_contactManager [b2World.cpp <930:3 930:18>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> float32 b2Profile::collide [b2World.cpp <931:13 931:19>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> b2Profile b2World::m_profile [b2World.cpp <931:3 931:11>]
REFERENCE_CALL void b2World::Step(float32, int32, int32) -> float32 b2Timer::GetMilliseconds() const [b2World.cpp <931:29 931:43>]
LOCAL_SYMBOL: b2World.cpp<929:11> [b2World.cpp <931:23 931:27>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> bool b2World::m_stepComplete [b2World.cpp <935:6 935:19>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> float32 b2TimeStep::dt [b2World.cpp <935:29 935:30>]
LOCAL_SYMBOL: b2World.cpp<910:13> [b2World.cpp <935:24 935:27>]
LOCAL_SYMBOL: b2World.cpp<937:11> [b2World.cpp <937:11 937:15>]
REFERENCE_TYPE_USAGE void b2World::Step(float32, int32, int32) -> b2Timer [b2World.cpp <937:3 937:9>]
REFERENCE_CALL void b2World::Step(float32, int32, int32) -> void b2Timer::b2Timer() [b2World.cpp <937:11 937:15>]
SYMBOL_FUNCTION void b2World::Solve(const b2TimeStep &)
REFERENCE_CALL void b2World::Step(float32, int32, int32) -> void b2World::Solve(const b2TimeStep &) [b2World.cpp <938:3 938:7>]
LOCAL_SYMBOL: b2World.cpp<910:13> [b2World.cpp <938:9 938:12>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> float32 b2Profile::solve [b2World.cpp <939:13 939:17>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> b2Profile b2World::m_profile [b2World.cpp <939:3 939:11>]
REFERENCE_CALL void b2World::Step(float32, int32, int32) -> float32 b2Timer::GetMilliseconds() const [b2World.cpp <939:27 939:41>]
LOCAL_SYMBOL: b2World.cpp<937:11> [b2World.cpp <939:21 939:25>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> bool b2World::m_continuousPhysics [b2World.cpp <943:6 943:24>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> float32 b2TimeStep::dt [b2World.cpp <943:34 943:35>]
LOCAL_SYMBOL: b2World.cpp<910:13> [b2World.cpp <943:29 943:32>]
LOCAL_SYMBOL: b2World.cpp<945:11> [b2World.cpp <945:11 945:15>]
REFERENCE_TYPE_USAGE void b2World::Step(float32, int32, int32) -> b2Timer [b2World.cpp <945:3 945:9>]
REFERENCE_CALL void b2World::Step(float32, int32, int32) -> void b2Timer::b2Timer() [b2World.cpp <945:11 945:15>]
SYMBOL_FUNCTION void b2World::SolveTOI(const b2TimeStep &)
REFERENCE_CALL void b2World::Step(float32, int32, int32) -> void b2World::SolveTOI(const b2TimeStep &) [b2World.cpp <946:3 946:10>]
LOCAL_SYMBOL: b2World.cpp<910:13> [b2World.cpp <946:12 946:15>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> float32 b2Profile::solveTOI [b2World.cpp <947:13 947:20>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> b2Profile b2World::m_profile [b2World.cpp <947:3 947:11>]
REFERENCE_CALL void b2World::Step(float32, int32, int32) -> float32 b2Timer::GetMilliseconds() const [b2World.cpp <947:30 947:44>]
LOCAL_SYMBOL: b2World.cpp<945:11> [b2World.cpp <947:24 947:28>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> float32 b2TimeStep::dt [b2World.cpp <950:11 950:12>]
LOCAL_SYMBOL: b2World.cpp<910:13> [b2World.cpp <950:6 950:9>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> float32 b2World::m_inv_dt0 [b2World.cpp <952:3 952:11>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> float32 b2TimeStep::inv_dt [b2World.cpp <952:20 952:25>]
LOCAL_SYMBOL: b2World.cpp<910:13> [b2World.cpp <952:15 952:18>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> int32 b2World::m_flags [b2World.cpp <955:6 955:12>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> b2World::anonymous enum (b2World.h<215:2>)::e_clearForces [b2World.cpp <955:16 955:28>]
SYMBOL_FUNCTION void b2World::ClearForces()
REFERENCE_CALL void b2World::Step(float32, int32, int32) -> void b2World::ClearForces() [b2World.cpp <957:3 957:13>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> int32 b2World::m_flags [b2World.cpp <960:2 960:8>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> b2World::anonymous enum (b2World.h<215:2>)::e_locked [b2World.cpp <960:14 960:21>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> float32 b2Profile::step [b2World.cpp <962:12 962:15>]
REFERENCE_USAGE void b2World::Step(float32, int32, int32) -> b2Profile b2World::m_profile [b2World.cpp <962:2 962:10>]
REFERENCE_CALL void b2World::Step(float32, int32, int32) -> float32 b2Timer::GetMilliseconds() const [b2World.cpp <962:29 962:43>]
LOCAL_SYMBOL: b2World.cpp<899:10> [b2World.cpp <962:19 962:27>]
SYMBOL_METHOD public void b2World::ClearForces() [b2World.cpp <965:1 <965:15 965:25> 972:1>]
QUALIFIER: b2World [b2World.cpp <965:6 965:12>]
REFERENCE_TYPE_USAGE void b2World::ClearForces() -> void [b2World.cpp <965:1 965:4>]
LOCAL_SYMBOL: b2World.cpp<967:15> [b2World.cpp <967:15 967:18>]
REFERENCE_TYPE_USAGE void b2World::ClearForces() -> b2Body [b2World.cpp <967:7 967:12>]
REFERENCE_USAGE void b2World::ClearForces() -> b2Body * b2World::m_bodyList [b2World.cpp <967:22 967:31>]
LOCAL_SYMBOL: b2World.cpp<967:15> [b2World.cpp <967:34 967:37>]
LOCAL_SYMBOL: b2World.cpp<967:15> [b2World.cpp <967:40 967:43>]
REFERENCE_CALL void b2World::ClearForces() -> b2Body * b2Body::GetNext() [b2World.cpp <967:53 967:59>]
LOCAL_SYMBOL: b2World.cpp<967:15> [b2World.cpp <967:47 967:50>]
SYMBOL_FUNCTION void b2Vec2::SetZero()
REFERENCE_CALL void b2World::ClearForces() -> void b2Vec2::SetZero() [b2World.cpp <969:17 969:23>]
REFERENCE_USAGE void b2World::ClearForces() -> b2Vec2 b2Body::m_force [b2World.cpp <969:9 969:15>]
LOCAL_SYMBOL: b2World.cpp<967:15> [b2World.cpp <969:3 969:6>]
REFERENCE_USAGE void b2World::ClearForces() -> float32 b2Body::m_torque [b2World.cpp <970:9 970:16>]
LOCAL_SYMBOL: b2World.cpp<967:15> [b2World.cpp <970:3 970:6>]
SYMBOL_STRUCT b2WorldQueryWrapper [b2World.cpp <974:1 <974:8 974:26> 984:1>]
SYMBOL_METHOD public bool b2WorldQueryWrapper::QueryCallback(int32) [b2World.cpp <976:2 <976:7 976:19> 980:2>]
REFERENCE_TYPE_USAGE bool b2WorldQueryWrapper::QueryCallback(int32) -> bool [b2World.cpp <976:2 976:5>]
LOCAL_SYMBOL: b2World.cpp<976:27> [b2World.cpp <976:27 976:33>]
REFERENCE_TYPE_USAGE bool b2WorldQueryWrapper::QueryCallback(int32) -> int32 [b2World.cpp <976:21 976:25>]
LOCAL_SYMBOL: b2World.cpp<978:19> [b2World.cpp <978:19 978:23>]
REFERENCE_TYPE_USAGE bool b2WorldQueryWrapper::QueryCallback(int32) -> b2FixtureProxy [b2World.cpp <978:3 978:16>]
REFERENCE_TYPE_USAGE bool b2WorldQueryWrapper::QueryCallback(int32) -> b2FixtureProxy [b2World.cpp <978:28 978:41>]
SYMBOL_FUNCTION void * b2BroadPhase::GetUserData(int32) const
REFERENCE_CALL bool b2WorldQueryWrapper::QueryCallback(int32) -> void * b2BroadPhase::GetUserData(int32) const [b2World.cpp <978:56 978:66>]
REFERENCE_USAGE bool b2WorldQueryWrapper::QueryCallback(int32) -> const b2BroadPhase * b2WorldQueryWrapper::broadPhase [b2World.cpp <978:44 978:53>]
LOCAL_SYMBOL: b2World.cpp<976:27> [b2World.cpp <978:68 978:74>]
SYMBOL_FUNCTION bool b2QueryCallback::ReportFixture(b2Fixture *)
REFERENCE_CALL bool b2WorldQueryWrapper::QueryCallback(int32) -> bool b2QueryCallback::ReportFixture(b2Fixture *) [b2World.cpp <979:20 979:32>]
REFERENCE_USAGE bool b2WorldQueryWrapper::QueryCallback(int32) -> b2QueryCallback * b2WorldQueryWrapper::callback [b2World.cpp <979:10 979:17>]
REFERENCE_USAGE bool b2WorldQueryWrapper::QueryCallback(int32) -> b2Fixture * b2FixtureProxy::fixture [b2World.cpp <979:41 979:47>]
LOCAL_SYMBOL: b2World.cpp<978:19> [b2World.cpp <979:34 979:38>]
SYMBOL_FIELD public const b2BroadPhase * b2WorldQueryWrapper::broadPhase [b2World.cpp <982:22 982:31>]
REFERENCE_TYPE_USAGE const b2BroadPhase * b2WorldQueryWrapper::broadPhase -> b2BroadPhase [b2World.cpp <982:8 982:19>]
SYMBOL_FIELD public b2QueryCallback * b2WorldQueryWrapper::callback [b2World.cpp <983:19 983:26>]
REFERENCE_TYPE_USAGE b2QueryCallback * b2WorldQueryWrapper::callback -> b2QueryCallback [b2World.cpp <983:2 983:16>]
SYMBOL_METHOD public void b2WorldQueryWrapper::b2WorldQueryWrapper() [b2World.cpp <974:8 <974:8 974:26> 974:26>]
SYMBOL_METHOD public void b2WorldQueryWrapper::b2WorldQueryWrapper(const b2WorldQueryWrapper &) [b2World.cpp <974:8 974:26>]
SYMBOL_METHOD public void b2WorldQueryWrapper::b2WorldQueryWrapper(b2WorldQueryWrapper &) [b2World.cpp <974:8 974:26>]
SYMBOL_METHOD public void b2World::QueryAABB(b2QueryCallback *, const b2AABB &) const [b2World.cpp <986:1 <986:15 986:23> 992:1>]
QUALIFIER: b2World [b2World.cpp <986:6 986:12>]
REFERENCE_TYPE_USAGE void b2World::QueryAABB(b2QueryCallback *, const b2AABB &) const -> void [b2World.cpp <986:1 986:4>]
LOCAL_SYMBOL: b2World.cpp<986:42> [b2World.cpp <986:42 986:49>]
REFERENCE_TYPE_USAGE void b2World::QueryAABB(b2QueryCallback *, const b2AABB &) const -> b2QueryCallback [b2World.cpp <986:25 986:39>]
LOCAL_SYMBOL: b2World.cpp<986:66> [b2World.cpp <986:66 986:69>]
REFERENCE_TYPE_USAGE void b2World::QueryAABB(b2QueryCallback *, const b2AABB &) const -> b2AABB [b2World.cpp <986:58 986:63>]
LOCAL_SYMBOL: b2World.cpp<988:22> [b2World.cpp <988:22 988:28>]
REFERENCE_TYPE_USAGE void b2World::QueryAABB(b2QueryCallback *, const b2AABB &) const -> b2WorldQueryWrapper [b2World.cpp <988:2 988:20>]
SYMBOL_FUNCTION void b2WorldQueryWrapper::b2WorldQueryWrapper()
REFERENCE_CALL void b2World::QueryAABB(b2QueryCallback *, const b2AABB &) const -> void b2WorldQueryWrapper::b2WorldQueryWrapper() [b2World.cpp <988:22 988:28>]
REFERENCE_USAGE void b2World::QueryAABB(b2QueryCallback *, const b2AABB &) const -> const b2BroadPhase * b2WorldQueryWrapper::broadPhase [b2World.cpp <989:10 989:19>]
LOCAL_SYMBOL: b2World.cpp<988:22> [b2World.cpp <989:2 989:8>]
REFERENCE_USAGE void b2World::QueryAABB(b2QueryCallback *, const b2AABB &) const -> b2BroadPhase b2ContactManager::m_broadPhase [b2World.cpp <989:41 989:52>]
REFERENCE_USAGE void b2World::QueryAABB(b2QueryCallback *, const b2AABB &) const -> b2ContactManager b2World::m_contactManager [b2World.cpp <989:24 989:39>]
REFERENCE_USAGE void b2World::QueryAABB(b2QueryCallback *, const b2AABB &) const -> b2QueryCallback * b2WorldQueryWrapper::callback [b2World.cpp <990:10 990:17>]
LOCAL_SYMBOL: b2World.cpp<988:22> [b2World.cpp <990:2 990:8>]
LOCAL_SYMBOL: b2World.cpp<986:42> [b2World.cpp <990:21 990:28>]
SYMBOL_FUNCTION void b2BroadPhase::Query<b2WorldQueryWrapper>(b2WorldQueryWrapper *, const b2AABB &) const
REFERENCE_CALL void b2World::QueryAABB(b2QueryCallback *, const b2AABB &) const -> void b2BroadPhase::Query<b2WorldQueryWrapper>(b2WorldQueryWrapper *, const b2AABB &) const [b2World.cpp <991:32 991:36>]
REFERENCE_USAGE void b2World::QueryAABB(b2QueryCallback *, const b2AABB &) const -> b2BroadPhase b2ContactManager::m_broadPhase [b2World.cpp <991:19 991:30>]
REFERENCE_USAGE void b2World::QueryAABB(b2QueryCallback *, const b2AABB &) const -> b2ContactManager b2World::m_contactManager [b2World.cpp <991:2 991:17>]
LOCAL_SYMBOL: b2World.cpp<988:22> [b2World.cpp <991:39 991:45>]
LOCAL_SYMBOL: b2World.cpp<986:66> [b2World.cpp <991:48 991:51>]
SYMBOL_STRUCT b2WorldRayCastWrapper [b2World.cpp <994:1 <994:8 994:28> 1017:1>]
SYMBOL_METHOD public float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) [b2World.cpp <996:2 <996:10 996:24> 1013:2>]
REFERENCE_TYPE_USAGE float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> float32 [b2World.cpp <996:2 996:8>]
LOCAL_SYMBOL: b2World.cpp<996:48> [b2World.cpp <996:48 996:52>]
REFERENCE_TYPE_USAGE float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> b2RayCastInput [b2World.cpp <996:32 996:45>]
LOCAL_SYMBOL: b2World.cpp<996:61> [b2World.cpp <996:61 996:67>]
REFERENCE_TYPE_USAGE float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> int32 [b2World.cpp <996:55 996:59>]
LOCAL_SYMBOL: b2World.cpp<998:9> [b2World.cpp <998:9 998:16>]
REFERENCE_TYPE_USAGE float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> void [b2World.cpp <998:3 998:6>]
REFERENCE_CALL float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> void * b2BroadPhase::GetUserData(int32) const [b2World.cpp <998:32 998:42>]
REFERENCE_USAGE float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> const b2BroadPhase * b2WorldRayCastWrapper::broadPhase [b2World.cpp <998:20 998:29>]
LOCAL_SYMBOL: b2World.cpp<996:61> [b2World.cpp <998:44 998:50>]
LOCAL_SYMBOL: b2World.cpp<999:19> [b2World.cpp <999:19 999:23>]
REFERENCE_TYPE_USAGE float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> b2FixtureProxy [b2World.cpp <999:3 999:16>]
REFERENCE_TYPE_USAGE float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> b2FixtureProxy [b2World.cpp <999:28 999:41>]
LOCAL_SYMBOL: b2World.cpp<998:9> [b2World.cpp <999:44 999:51>]
LOCAL_SYMBOL: b2World.cpp<1000:14> [b2World.cpp <1000:14 1000:20>]
REFERENCE_TYPE_USAGE float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> b2Fixture [b2World.cpp <1000:3 1000:11>]
REFERENCE_USAGE float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> b2Fixture * b2FixtureProxy::fixture [b2World.cpp <1000:31 1000:37>]
LOCAL_SYMBOL: b2World.cpp<999:19> [b2World.cpp <1000:24 1000:28>]
LOCAL_SYMBOL: b2World.cpp<1001:9> [b2World.cpp <1001:9 1001:13>]
REFERENCE_TYPE_USAGE float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> int32 [b2World.cpp <1001:3 1001:7>]
REFERENCE_USAGE float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> int32 b2FixtureProxy::childIndex [b2World.cpp <1001:24 1001:33>]
LOCAL_SYMBOL: b2World.cpp<999:19> [b2World.cpp <1001:17 1001:21>]
LOCAL_SYMBOL: b2World.cpp<1002:19> [b2World.cpp <1002:19 1002:24>]
REFERENCE_TYPE_USAGE float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> b2RayCastOutput [b2World.cpp <1002:3 1002:17>]
SYMBOL_FUNCTION void b2RayCastOutput::b2RayCastOutput()
REFERENCE_CALL float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> void b2RayCastOutput::b2RayCastOutput() [b2World.cpp <1002:19 1002:24>]
LOCAL_SYMBOL: b2World.cpp<1003:8> [b2World.cpp <1003:8 1003:10>]
REFERENCE_TYPE_USAGE float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> bool [b2World.cpp <1003:3 1003:6>]
SYMBOL_FUNCTION bool b2Fixture::RayCast(b2RayCastOutput *, const b2RayCastInput &, int32) const
REFERENCE_CALL float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> bool b2Fixture::RayCast(b2RayCastOutput *, const b2RayCastInput &, int32) const [b2World.cpp <1003:23 1003:29>]
LOCAL_SYMBOL: b2World.cpp<1000:14> [b2World.cpp <1003:14 1003:20>]
LOCAL_SYMBOL: b2World.cpp<1002:19> [b2World.cpp <1003:32 1003:37>]
LOCAL_SYMBOL: b2World.cpp<996:48> [b2World.cpp <1003:40 1003:44>]
LOCAL_SYMBOL: b2World.cpp<1001:9> [b2World.cpp <1003:47 1003:51>]
LOCAL_SYMBOL: b2World.cpp<1003:8> [b2World.cpp <1005:7 1005:9>]
LOCAL_SYMBOL: b2World.cpp<1007:12> [b2World.cpp <1007:12 1007:19>]
REFERENCE_TYPE_USAGE float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> float32 [b2World.cpp <1007:4 1007:10>]
REFERENCE_USAGE float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> float32 b2RayCastOutput::fraction [b2World.cpp <1007:30 1007:37>]
LOCAL_SYMBOL: b2World.cpp<1002:19> [b2World.cpp <1007:23 1007:28>]
LOCAL_SYMBOL: b2World.cpp<1008:11> [b2World.cpp <1008:11 1008:15>]
REFERENCE_TYPE_USAGE float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> b2Vec2 [b2World.cpp <1008:4 1008:9>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2World.cpp <1008:48 1008:48>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2World.cpp <1008:37 1008:37>]
LOCAL_SYMBOL: b2World.cpp<1007:12> [b2World.cpp <1008:27 1008:34>]
REFERENCE_USAGE float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> b2Vec2 b2RayCastInput::p1 [b2World.cpp <1008:45 1008:46>]
LOCAL_SYMBOL: b2World.cpp<996:48> [b2World.cpp <1008:39 1008:43>]
REFERENCE_CALL float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2World.cpp <1008:59 1008:59>]
LOCAL_SYMBOL: b2World.cpp<1007:12> [b2World.cpp <1008:50 1008:57>]
REFERENCE_USAGE float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> b2Vec2 b2RayCastInput::p2 [b2World.cpp <1008:67 1008:68>]
LOCAL_SYMBOL: b2World.cpp<996:48> [b2World.cpp <1008:61 1008:65>]
SYMBOL_FUNCTION float32 b2RayCastCallback::ReportFixture(b2Fixture *, const b2Vec2 &, const b2Vec2 &, float32)
REFERENCE_CALL float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> float32 b2RayCastCallback::ReportFixture(b2Fixture *, const b2Vec2 &, const b2Vec2 &, float32) [b2World.cpp <1009:21 1009:33>]
REFERENCE_USAGE float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> b2RayCastCallback * b2WorldRayCastWrapper::callback [b2World.cpp <1009:11 1009:18>]
LOCAL_SYMBOL: b2World.cpp<1000:14> [b2World.cpp <1009:35 1009:41>]
LOCAL_SYMBOL: b2World.cpp<1008:11> [b2World.cpp <1009:44 1009:48>]
REFERENCE_USAGE float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> b2Vec2 b2RayCastOutput::normal [b2World.cpp <1009:58 1009:63>]
LOCAL_SYMBOL: b2World.cpp<1002:19> [b2World.cpp <1009:51 1009:56>]
LOCAL_SYMBOL: b2World.cpp<1007:12> [b2World.cpp <1009:66 1009:73>]
REFERENCE_USAGE float32 b2WorldRayCastWrapper::RayCastCallback(const b2RayCastInput &, int32) -> float32 b2RayCastInput::maxFraction [b2World.cpp <1012:16 1012:26>]
LOCAL_SYMBOL: b2World.cpp<996:48> [b2World.cpp <1012:10 1012:14>]
SYMBOL_FIELD public const b2BroadPhase * b2WorldRayCastWrapper::broadPhase [b2World.cpp <1015:22 1015:31>]
REFERENCE_TYPE_USAGE const b2BroadPhase * b2WorldRayCastWrapper::broadPhase -> b2BroadPhase [b2World.cpp <1015:8 1015:19>]
SYMBOL_FIELD public b2RayCastCallback * b2WorldRayCastWrapper::callback [b2World.cpp <1016:21 1016:28>]
REFERENCE_TYPE_USAGE b2RayCastCallback * b2WorldRayCastWrapper::callback -> b2RayCastCallback [b2World.cpp <1016:2 1016:18>]
SYMBOL_METHOD public void b2WorldRayCastWrapper::b2WorldRayCastWrapper() [b2World.cpp <994:8 <994:8 994:28> 994:28>]
SYMBOL_METHOD public void b2WorldRayCastWrapper::b2WorldRayCastWrapper(const b2WorldRayCastWrapper &) [b2World.cpp <994:8 994:28>]
SYMBOL_METHOD public void b2WorldRayCastWrapper::b2WorldRayCastWrapper(b2WorldRayCastWrapper &) [b2World.cpp <994:8 994:28>]
SYMBOL_METHOD public void b2World::RayCast(b2RayCastCallback *, const b2Vec2 &, const b2Vec2 &) const [b2World.cpp <1019:1 <1019:15 1019:21> 1029:1>]
QUALIFIER: b2World [b2World.cpp <1019:6 1019:12>]
REFERENCE_TYPE_USAGE void b2World::RayCast(b2RayCastCallback *, const b2Vec2 &, const b2Vec2 &) const -> void [b2World.cpp <1019:1 1019:4>]
LOCAL_SYMBOL: b2World.cpp<1019:42> [b2World.cpp <1019:42 1019:49>]
REFERENCE_TYPE_USAGE void b2World::RayCast(b2RayCastCallback *, const b2Vec2 &, const b2Vec2 &) const -> b2RayCastCallback [b2World.cpp <1019:23 1019:39>]
LOCAL_SYMBOL: b2World.cpp<1019:66> [b2World.cpp <1019:66 1019:71>]
REFERENCE_TYPE_USAGE void b2World::RayCast(b2RayCastCallback *, const b2Vec2 &, const b2Vec2 &) const -> b2Vec2 [b2World.cpp <1019:58 1019:63>]
LOCAL_SYMBOL: b2World.cpp<1019:88> [b2World.cpp <1019:88 1019:93>]
REFERENCE_TYPE_USAGE void b2World::RayCast(b2RayCastCallback *, const b2Vec2 &, const b2Vec2 &) const -> b2Vec2 [b2World.cpp <1019:80 1019:85>]
LOCAL_SYMBOL: b2World.cpp<1021:24> [b2World.cpp <1021:24 1021:30>]
REFERENCE_TYPE_USAGE void b2World::RayCast(b2RayCastCallback *, const b2Vec2 &, const b2Vec2 &) const -> b2WorldRayCastWrapper [b2World.cpp <1021:2 1021:22>]
SYMBOL_FUNCTION void b2WorldRayCastWrapper::b2WorldRayCastWrapper()
REFERENCE_CALL void b2World::RayCast(b2RayCastCallback *, const b2Vec2 &, const b2Vec2 &) const -> void b2WorldRayCastWrapper::b2WorldRayCastWrapper() [b2World.cpp <1021:24 1021:30>]
REFERENCE_USAGE void b2World::RayCast(b2RayCastCallback *, const b2Vec2 &, const b2Vec2 &) const -> const b2BroadPhase * b2WorldRayCastWrapper::broadPhase [b2World.cpp <1022:10 1022:19>]
LOCAL_SYMBOL: b2World.cpp<1021:24> [b2World.cpp <1022:2 1022:8>]
REFERENCE_USAGE void b2World::RayCast(b2RayCastCallback *, const b2Vec2 &, const b2Vec2 &) const -> b2BroadPhase b2ContactManager::m_broadPhase [b2World.cpp <1022:41 1022:52>]
REFERENCE_USAGE void b2World::RayCast(b2RayCastCallback *, const b2Vec2 &, const b2Vec2 &) const -> b2ContactManager b2World::m_contactManager [b2World.cpp <1022:24 1022:39>]
REFERENCE_USAGE void b2World::RayCast(b2RayCastCallback *, const b2Vec2 &, const b2Vec2 &) const -> b2RayCastCallback * b2WorldRayCastWrapper::callback [b2World.cpp <1023:10 1023:17>]
LOCAL_SYMBOL: b2World.cpp<1021:24> [b2World.cpp <1023:2 1023:8>]
LOCAL_SYMBOL: b2World.cpp<1019:42> [b2World.cpp <1023:21 1023:28>]
LOCAL_SYMBOL: b2World.cpp<1024:17> [b2World.cpp <1024:17 1024:21>]
REFERENCE_TYPE_USAGE void b2World::RayCast(b2RayCastCallback *, const b2Vec2 &, const b2Vec2 &) const -> b2RayCastInput [b2World.cpp <1024:2 1024:15>]
SYMBOL_FUNCTION void b2RayCastInput::b2RayCastInput()
REFERENCE_CALL void b2World::RayCast(b2RayCastCallback *, const b2Vec2 &, const b2Vec2 &) const -> void b2RayCastInput::b2RayCastInput() [b2World.cpp <1024:17 1024:21>]
REFERENCE_USAGE void b2World::RayCast(b2RayCastCallback *, const b2Vec2 &, const b2Vec2 &) const -> float32 b2RayCastInput::maxFraction [b2World.cpp <1025:8 1025:18>]
LOCAL_SYMBOL: b2World.cpp<1024:17> [b2World.cpp <1025:2 1025:6>]
REFERENCE_CALL void b2World::RayCast(b2RayCastCallback *, const b2Vec2 &, const b2Vec2 &) const -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2World.cpp <1026:11 1026:11>]
REFERENCE_USAGE void b2World::RayCast(b2RayCastCallback *, const b2Vec2 &, const b2Vec2 &) const -> b2Vec2 b2RayCastInput::p1 [b2World.cpp <1026:8 1026:9>]
LOCAL_SYMBOL: b2World.cpp<1024:17> [b2World.cpp <1026:2 1026:6>]
LOCAL_SYMBOL: b2World.cpp<1019:66> [b2World.cpp <1026:13 1026:18>]
REFERENCE_CALL void b2World::RayCast(b2RayCastCallback *, const b2Vec2 &, const b2Vec2 &) const -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2World.cpp <1027:11 1027:11>]
REFERENCE_USAGE void b2World::RayCast(b2RayCastCallback *, const b2Vec2 &, const b2Vec2 &) const -> b2Vec2 b2RayCastInput::p2 [b2World.cpp <1027:8 1027:9>]
LOCAL_SYMBOL: b2World.cpp<1024:17> [b2World.cpp <1027:2 1027:6>]
LOCAL_SYMBOL: b2World.cpp<1019:88> [b2World.cpp <1027:13 1027:18>]
SYMBOL_FUNCTION void b2BroadPhase::RayCast<b2WorldRayCastWrapper>(b2WorldRayCastWrapper *, const b2RayCastInput &) const
REFERENCE_CALL void b2World::RayCast(b2RayCastCallback *, const b2Vec2 &, const b2Vec2 &) const -> void b2BroadPhase::RayCast<b2WorldRayCastWrapper>(b2WorldRayCastWrapper *, const b2RayCastInput &) const [b2World.cpp <1028:32 1028:38>]
REFERENCE_USAGE void b2World::RayCast(b2RayCastCallback *, const b2Vec2 &, const b2Vec2 &) const -> b2BroadPhase b2ContactManager::m_broadPhase [b2World.cpp <1028:19 1028:30>]
REFERENCE_USAGE void b2World::RayCast(b2RayCastCallback *, const b2Vec2 &, const b2Vec2 &) const -> b2ContactManager b2World::m_contactManager [b2World.cpp <1028:2 1028:17>]
LOCAL_SYMBOL: b2World.cpp<1021:24> [b2World.cpp <1028:41 1028:47>]
LOCAL_SYMBOL: b2World.cpp<1024:17> [b2World.cpp <1028:50 1028:54>]
SYMBOL_METHOD private void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) [b2World.cpp <1031:1 <1031:15 1031:23> 1110:1>]
QUALIFIER: b2World [b2World.cpp <1031:6 1031:12>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> void [b2World.cpp <1031:1 1031:4>]
LOCAL_SYMBOL: b2World.cpp<1031:36> [b2World.cpp <1031:36 1031:42>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Fixture [b2World.cpp <1031:25 1031:33>]
LOCAL_SYMBOL: b2World.cpp<1031:64> [b2World.cpp <1031:64 1031:65>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Transform [b2World.cpp <1031:51 1031:61>]
LOCAL_SYMBOL: b2World.cpp<1031:83> [b2World.cpp <1031:83 1031:87>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Color [b2World.cpp <1031:74 1031:80>]
SYMBOL_FUNCTION b2Shape::Type b2Fixture::GetType() const
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Shape::Type b2Fixture::GetType() const [b2World.cpp <1033:19 1033:25>]
LOCAL_SYMBOL: b2World.cpp<1031:36> [b2World.cpp <1033:10 1033:16>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Shape::Type::e_circle [b2World.cpp <1035:16 1035:23>]
SYMBOL_CLASS b2Shape
QUALIFIER: b2Shape [b2World.cpp <1035:7 1035:13>]
LOCAL_SYMBOL: b2World.cpp<1037:19> [b2World.cpp <1037:19 1037:24>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2CircleShape [b2World.cpp <1037:4 1037:16>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2CircleShape [b2World.cpp <1037:29 1037:41>]
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Shape * b2Fixture::GetShape() [b2World.cpp <1037:53 1037:60>]
LOCAL_SYMBOL: b2World.cpp<1031:36> [b2World.cpp <1037:44 1037:50>]
LOCAL_SYMBOL: b2World.cpp<1039:11> [b2World.cpp <1039:11 1039:16>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 [b2World.cpp <1039:4 1039:9>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &)
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2World.cpp <1039:20 1039:24>]
LOCAL_SYMBOL: b2World.cpp<1031:64> [b2World.cpp <1039:26 1039:27>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 b2CircleShape::m_p [b2World.cpp <1039:38 1039:40>]
LOCAL_SYMBOL: b2World.cpp<1037:19> [b2World.cpp <1039:30 1039:35>]
LOCAL_SYMBOL: b2World.cpp<1040:12> [b2World.cpp <1040:12 1040:17>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> float32 [b2World.cpp <1040:4 1040:10>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> float32 b2Shape::m_radius [b2World.cpp <1040:29 1040:36>]
LOCAL_SYMBOL: b2World.cpp<1037:19> [b2World.cpp <1040:21 1040:26>]
LOCAL_SYMBOL: b2World.cpp<1041:11> [b2World.cpp <1041:11 1041:14>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 [b2World.cpp <1041:4 1041:9>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2World.cpp <1041:18 1041:22>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Rot b2Transform::q [b2World.cpp <1041:27 1041:27>]
LOCAL_SYMBOL: b2World.cpp<1031:64> [b2World.cpp <1041:24 1041:25>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(float32, float32)
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> void b2Vec2::b2Vec2(float32, float32) [b2World.cpp <1041:30 1041:35>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 [b2World.cpp <1041:30 1041:35>]
SYMBOL_FUNCTION void b2Draw::DrawSolidCircle(const b2Vec2 &, float32, const b2Vec2 &, const b2Color &)
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> void b2Draw::DrawSolidCircle(const b2Vec2 &, float32, const b2Vec2 &, const b2Color &) [b2World.cpp <1043:17 1043:31>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Draw * b2World::g_debugDraw [b2World.cpp <1043:4 1043:14>]
LOCAL_SYMBOL: b2World.cpp<1039:11> [b2World.cpp <1043:33 1043:38>]
LOCAL_SYMBOL: b2World.cpp<1040:12> [b2World.cpp <1043:41 1043:46>]
LOCAL_SYMBOL: b2World.cpp<1041:11> [b2World.cpp <1043:49 1043:52>]
LOCAL_SYMBOL: b2World.cpp<1031:83> [b2World.cpp <1043:55 1043:59>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Shape::Type::e_edge [b2World.cpp <1047:16 1047:21>]
QUALIFIER: b2Shape [b2World.cpp <1047:7 1047:13>]
LOCAL_SYMBOL: b2World.cpp<1049:17> [b2World.cpp <1049:17 1049:20>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2EdgeShape [b2World.cpp <1049:4 1049:14>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2EdgeShape [b2World.cpp <1049:25 1049:35>]
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Shape * b2Fixture::GetShape() [b2World.cpp <1049:47 1049:54>]
LOCAL_SYMBOL: b2World.cpp<1031:36> [b2World.cpp <1049:38 1049:44>]
LOCAL_SYMBOL: b2World.cpp<1050:11> [b2World.cpp <1050:11 1050:12>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 [b2World.cpp <1050:4 1050:9>]
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2World.cpp <1050:16 1050:20>]
LOCAL_SYMBOL: b2World.cpp<1031:64> [b2World.cpp <1050:22 1050:23>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 b2EdgeShape::m_vertex1 [b2World.cpp <1050:32 1050:40>]
LOCAL_SYMBOL: b2World.cpp<1049:17> [b2World.cpp <1050:26 1050:29>]
LOCAL_SYMBOL: b2World.cpp<1051:11> [b2World.cpp <1051:11 1051:12>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 [b2World.cpp <1051:4 1051:9>]
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2World.cpp <1051:16 1051:20>]
LOCAL_SYMBOL: b2World.cpp<1031:64> [b2World.cpp <1051:22 1051:23>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 b2EdgeShape::m_vertex2 [b2World.cpp <1051:32 1051:40>]
LOCAL_SYMBOL: b2World.cpp<1049:17> [b2World.cpp <1051:26 1051:29>]
SYMBOL_FUNCTION void b2Draw::DrawSegment(const b2Vec2 &, const b2Vec2 &, const b2Color &)
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> void b2Draw::DrawSegment(const b2Vec2 &, const b2Vec2 &, const b2Color &) [b2World.cpp <1052:17 1052:27>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Draw * b2World::g_debugDraw [b2World.cpp <1052:4 1052:14>]
LOCAL_SYMBOL: b2World.cpp<1050:11> [b2World.cpp <1052:29 1052:30>]
LOCAL_SYMBOL: b2World.cpp<1051:11> [b2World.cpp <1052:33 1052:34>]
LOCAL_SYMBOL: b2World.cpp<1031:83> [b2World.cpp <1052:37 1052:41>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Shape::Type::e_chain [b2World.cpp <1056:16 1056:22>]
QUALIFIER: b2Shape [b2World.cpp <1056:7 1056:13>]
LOCAL_SYMBOL: b2World.cpp<1058:18> [b2World.cpp <1058:18 1058:22>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2ChainShape [b2World.cpp <1058:4 1058:15>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2ChainShape [b2World.cpp <1058:27 1058:38>]
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Shape * b2Fixture::GetShape() [b2World.cpp <1058:50 1058:57>]
LOCAL_SYMBOL: b2World.cpp<1031:36> [b2World.cpp <1058:41 1058:47>]
LOCAL_SYMBOL: b2World.cpp<1059:10> [b2World.cpp <1059:10 1059:14>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> int32 [b2World.cpp <1059:4 1059:8>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> int32 b2ChainShape::m_count [b2World.cpp <1059:25 1059:31>]
LOCAL_SYMBOL: b2World.cpp<1058:18> [b2World.cpp <1059:18 1059:22>]
LOCAL_SYMBOL: b2World.cpp<1060:18> [b2World.cpp <1060:18 1060:25>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 [b2World.cpp <1060:10 1060:15>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 * b2ChainShape::m_vertices [b2World.cpp <1060:36 1060:45>]
LOCAL_SYMBOL: b2World.cpp<1058:18> [b2World.cpp <1060:29 1060:33>]
LOCAL_SYMBOL: b2World.cpp<1062:12> [b2World.cpp <1062:12 1062:21>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Color [b2World.cpp <1062:4 1062:10>]
SYMBOL_FUNCTION void b2Color::b2Color(float32, float32, float32, float32)
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> void b2Color::b2Color(float32, float32, float32, float32) [b2World.cpp <1062:12 1062:21>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> float32 b2Color::r [b2World.cpp <1062:37 1062:37>]
LOCAL_SYMBOL: b2World.cpp<1031:83> [b2World.cpp <1062:31 1062:35>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> float32 b2Color::g [b2World.cpp <1062:54 1062:54>]
LOCAL_SYMBOL: b2World.cpp<1031:83> [b2World.cpp <1062:48 1062:52>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> float32 b2Color::b [b2World.cpp <1062:71 1062:71>]
LOCAL_SYMBOL: b2World.cpp<1031:83> [b2World.cpp <1062:65 1062:69>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> float32 b2Color::a [b2World.cpp <1062:80 1062:80>]
LOCAL_SYMBOL: b2World.cpp<1031:83> [b2World.cpp <1062:74 1062:78>]
LOCAL_SYMBOL: b2World.cpp<1064:11> [b2World.cpp <1064:11 1064:12>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 [b2World.cpp <1064:4 1064:9>]
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2World.cpp <1064:16 1064:20>]
LOCAL_SYMBOL: b2World.cpp<1031:64> [b2World.cpp <1064:22 1064:23>]
LOCAL_SYMBOL: b2World.cpp<1060:18> [b2World.cpp <1064:26 1064:33>]
SYMBOL_FUNCTION void b2Draw::DrawPoint(const b2Vec2 &, float32, const b2Color &)
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> void b2Draw::DrawPoint(const b2Vec2 &, float32, const b2Color &) [b2World.cpp <1065:17 1065:25>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Draw * b2World::g_debugDraw [b2World.cpp <1065:4 1065:14>]
LOCAL_SYMBOL: b2World.cpp<1064:11> [b2World.cpp <1065:27 1065:28>]
LOCAL_SYMBOL: b2World.cpp<1031:83> [b2World.cpp <1065:37 1065:41>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> bool b2ChainShape::m_hasPrevVertex [b2World.cpp <1067:15 1067:29>]
LOCAL_SYMBOL: b2World.cpp<1058:18> [b2World.cpp <1067:8 1067:12>]
LOCAL_SYMBOL: b2World.cpp<1069:12> [b2World.cpp <1069:12 1069:13>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 [b2World.cpp <1069:5 1069:10>]
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2World.cpp <1069:17 1069:21>]
LOCAL_SYMBOL: b2World.cpp<1031:64> [b2World.cpp <1069:23 1069:24>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 b2ChainShape::m_prevVertex [b2World.cpp <1069:34 1069:45>]
LOCAL_SYMBOL: b2World.cpp<1058:18> [b2World.cpp <1069:27 1069:31>]
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> void b2Draw::DrawSegment(const b2Vec2 &, const b2Vec2 &, const b2Color &) [b2World.cpp <1070:18 1070:28>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Draw * b2World::g_debugDraw [b2World.cpp <1070:5 1070:15>]
LOCAL_SYMBOL: b2World.cpp<1069:12> [b2World.cpp <1070:30 1070:31>]
LOCAL_SYMBOL: b2World.cpp<1064:11> [b2World.cpp <1070:34 1070:35>]
LOCAL_SYMBOL: b2World.cpp<1062:12> [b2World.cpp <1070:38 1070:47>]
SYMBOL_FUNCTION void b2Draw::DrawCircle(const b2Vec2 &, float32, const b2Color &)
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> void b2Draw::DrawCircle(const b2Vec2 &, float32, const b2Color &) [b2World.cpp <1071:18 1071:27>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Draw * b2World::g_debugDraw [b2World.cpp <1071:5 1071:15>]
LOCAL_SYMBOL: b2World.cpp<1069:12> [b2World.cpp <1071:29 1071:30>]
LOCAL_SYMBOL: b2World.cpp<1062:12> [b2World.cpp <1071:39 1071:48>]
LOCAL_SYMBOL: b2World.cpp<1074:15> [b2World.cpp <1074:15 1074:15>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> int32 [b2World.cpp <1074:9 1074:13>]
LOCAL_SYMBOL: b2World.cpp<1074:15> [b2World.cpp <1074:22 1074:22>]
LOCAL_SYMBOL: b2World.cpp<1059:10> [b2World.cpp <1074:26 1074:30>]
LOCAL_SYMBOL: b2World.cpp<1074:15> [b2World.cpp <1074:35 1074:35>]
LOCAL_SYMBOL: b2World.cpp<1076:12> [b2World.cpp <1076:12 1076:13>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 [b2World.cpp <1076:5 1076:10>]
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2World.cpp <1076:17 1076:21>]
LOCAL_SYMBOL: b2World.cpp<1031:64> [b2World.cpp <1076:23 1076:24>]
LOCAL_SYMBOL: b2World.cpp<1060:18> [b2World.cpp <1076:27 1076:34>]
LOCAL_SYMBOL: b2World.cpp<1074:15> [b2World.cpp <1076:36 1076:36>]
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> void b2Draw::DrawSegment(const b2Vec2 &, const b2Vec2 &, const b2Color &) [b2World.cpp <1077:18 1077:28>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Draw * b2World::g_debugDraw [b2World.cpp <1077:5 1077:15>]
LOCAL_SYMBOL: b2World.cpp<1064:11> [b2World.cpp <1077:30 1077:31>]
LOCAL_SYMBOL: b2World.cpp<1076:12> [b2World.cpp <1077:34 1077:35>]
LOCAL_SYMBOL: b2World.cpp<1031:83> [b2World.cpp <1077:38 1077:42>]
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> void b2Draw::DrawPoint(const b2Vec2 &, float32, const b2Color &) [b2World.cpp <1078:18 1078:26>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Draw * b2World::g_debugDraw [b2World.cpp <1078:5 1078:15>]
LOCAL_SYMBOL: b2World.cpp<1076:12> [b2World.cpp <1078:28 1078:29>]
LOCAL_SYMBOL: b2World.cpp<1031:83> [b2World.cpp <1078:38 1078:42>]
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2World.cpp <1079:8 1079:8>]
LOCAL_SYMBOL: b2World.cpp<1064:11> [b2World.cpp <1079:5 1079:6>]
LOCAL_SYMBOL: b2World.cpp<1076:12> [b2World.cpp <1079:10 1079:11>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> bool b2ChainShape::m_hasNextVertex [b2World.cpp <1082:15 1082:29>]
LOCAL_SYMBOL: b2World.cpp<1058:18> [b2World.cpp <1082:8 1082:12>]
LOCAL_SYMBOL: b2World.cpp<1084:12> [b2World.cpp <1084:12 1084:13>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 [b2World.cpp <1084:5 1084:10>]
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2World.cpp <1084:17 1084:21>]
LOCAL_SYMBOL: b2World.cpp<1031:64> [b2World.cpp <1084:23 1084:24>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 b2ChainShape::m_nextVertex [b2World.cpp <1084:34 1084:45>]
LOCAL_SYMBOL: b2World.cpp<1058:18> [b2World.cpp <1084:27 1084:31>]
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> void b2Draw::DrawSegment(const b2Vec2 &, const b2Vec2 &, const b2Color &) [b2World.cpp <1085:18 1085:28>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Draw * b2World::g_debugDraw [b2World.cpp <1085:5 1085:15>]
LOCAL_SYMBOL: b2World.cpp<1064:11> [b2World.cpp <1085:30 1085:31>]
LOCAL_SYMBOL: b2World.cpp<1084:12> [b2World.cpp <1085:34 1085:35>]
LOCAL_SYMBOL: b2World.cpp<1062:12> [b2World.cpp <1085:38 1085:47>]
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> void b2Draw::DrawCircle(const b2Vec2 &, float32, const b2Color &) [b2World.cpp <1086:18 1086:27>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Draw * b2World::g_debugDraw [b2World.cpp <1086:5 1086:15>]
LOCAL_SYMBOL: b2World.cpp<1084:12> [b2World.cpp <1086:29 1086:30>]
LOCAL_SYMBOL: b2World.cpp<1062:12> [b2World.cpp <1086:39 1086:48>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Shape::Type::e_polygon [b2World.cpp <1091:16 1091:24>]
QUALIFIER: b2Shape [b2World.cpp <1091:7 1091:13>]
LOCAL_SYMBOL: b2World.cpp<1093:20> [b2World.cpp <1093:20 1093:23>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2PolygonShape [b2World.cpp <1093:4 1093:17>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2PolygonShape [b2World.cpp <1093:28 1093:41>]
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Shape * b2Fixture::GetShape() [b2World.cpp <1093:53 1093:60>]
LOCAL_SYMBOL: b2World.cpp<1031:36> [b2World.cpp <1093:44 1093:50>]
LOCAL_SYMBOL: b2World.cpp<1094:10> [b2World.cpp <1094:10 1094:20>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> int32 [b2World.cpp <1094:4 1094:8>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> int32 b2PolygonShape::m_count [b2World.cpp <1094:30 1094:36>]
LOCAL_SYMBOL: b2World.cpp<1093:20> [b2World.cpp <1094:24 1094:27>]
LOCAL_SYMBOL: b2World.cpp<1094:10> [b2World.cpp <1095:13 1095:23>]
LOCAL_SYMBOL: b2World.cpp<1096:11> [b2World.cpp <1096:11 1096:18>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 [b2World.cpp <1096:4 1096:9>]
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> void b2Vec2::b2Vec2() [b2World.cpp <1096:11 1096:18>]
LOCAL_SYMBOL: b2World.cpp<1098:15> [b2World.cpp <1098:15 1098:15>]
REFERENCE_TYPE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> int32 [b2World.cpp <1098:9 1098:13>]
LOCAL_SYMBOL: b2World.cpp<1098:15> [b2World.cpp <1098:22 1098:22>]
LOCAL_SYMBOL: b2World.cpp<1094:10> [b2World.cpp <1098:26 1098:36>]
LOCAL_SYMBOL: b2World.cpp<1098:15> [b2World.cpp <1098:41 1098:41>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2World.cpp <1100:17 1100:17>]
LOCAL_SYMBOL: b2World.cpp<1096:11> [b2World.cpp <1100:5 1100:12>]
LOCAL_SYMBOL: b2World.cpp<1098:15> [b2World.cpp <1100:14 1100:14>]
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2World.cpp <1100:19 1100:23>]
LOCAL_SYMBOL: b2World.cpp<1031:64> [b2World.cpp <1100:25 1100:26>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Vec2 [] b2PolygonShape::m_vertices [b2World.cpp <1100:35 1100:44>]
LOCAL_SYMBOL: b2World.cpp<1093:20> [b2World.cpp <1100:29 1100:32>]
LOCAL_SYMBOL: b2World.cpp<1098:15> [b2World.cpp <1100:46 1100:46>]
SYMBOL_FUNCTION void b2Draw::DrawSolidPolygon(const b2Vec2 *, int32, const b2Color &)
REFERENCE_CALL void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> void b2Draw::DrawSolidPolygon(const b2Vec2 *, int32, const b2Color &) [b2World.cpp <1103:17 1103:32>]
REFERENCE_USAGE void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) -> b2Draw * b2World::g_debugDraw [b2World.cpp <1103:4 1103:14>]
LOCAL_SYMBOL: b2World.cpp<1096:11> [b2World.cpp <1103:34 1103:41>]
LOCAL_SYMBOL: b2World.cpp<1094:10> [b2World.cpp <1103:44 1103:54>]
LOCAL_SYMBOL: b2World.cpp<1031:83> [b2World.cpp <1103:57 1103:61>]
SYMBOL_METHOD private void b2World::DrawJoint(b2Joint *) [b2World.cpp <1112:1 <1112:15 1112:23> 1151:1>]
QUALIFIER: b2World [b2World.cpp <1112:6 1112:12>]
REFERENCE_TYPE_USAGE void b2World::DrawJoint(b2Joint *) -> void [b2World.cpp <1112:1 1112:4>]
LOCAL_SYMBOL: b2World.cpp<1112:34> [b2World.cpp <1112:34 1112:38>]
REFERENCE_TYPE_USAGE void b2World::DrawJoint(b2Joint *) -> b2Joint [b2World.cpp <1112:25 1112:31>]
LOCAL_SYMBOL: b2World.cpp<1114:10> [b2World.cpp <1114:10 1114:14>]
REFERENCE_TYPE_USAGE void b2World::DrawJoint(b2Joint *) -> b2Body [b2World.cpp <1114:2 1114:7>]
SYMBOL_FUNCTION b2Body * b2Joint::GetBodyA()
REFERENCE_CALL void b2World::DrawJoint(b2Joint *) -> b2Body * b2Joint::GetBodyA() [b2World.cpp <1114:25 1114:32>]
LOCAL_SYMBOL: b2World.cpp<1112:34> [b2World.cpp <1114:18 1114:22>]
LOCAL_SYMBOL: b2World.cpp<1115:10> [b2World.cpp <1115:10 1115:14>]
REFERENCE_TYPE_USAGE void b2World::DrawJoint(b2Joint *) -> b2Body [b2World.cpp <1115:2 1115:7>]
SYMBOL_FUNCTION b2Body * b2Joint::GetBodyB()
REFERENCE_CALL void b2World::DrawJoint(b2Joint *) -> b2Body * b2Joint::GetBodyB() [b2World.cpp <1115:25 1115:32>]
LOCAL_SYMBOL: b2World.cpp<1112:34> [b2World.cpp <1115:18 1115:22>]
LOCAL_SYMBOL: b2World.cpp<1116:21> [b2World.cpp <1116:21 1116:23>]
REFERENCE_TYPE_USAGE void b2World::DrawJoint(b2Joint *) -> b2Transform [b2World.cpp <1116:8 1116:18>]
SYMBOL_FUNCTION const b2Transform & b2Body::GetTransform() const
REFERENCE_CALL void b2World::DrawJoint(b2Joint *) -> const b2Transform & b2Body::GetTransform() const [b2World.cpp <1116:34 1116:45>]
LOCAL_SYMBOL: b2World.cpp<1114:10> [b2World.cpp <1116:27 1116:31>]
LOCAL_SYMBOL: b2World.cpp<1117:21> [b2World.cpp <1117:21 1117:23>]
REFERENCE_TYPE_USAGE void b2World::DrawJoint(b2Joint *) -> b2Transform [b2World.cpp <1117:8 1117:18>]
REFERENCE_CALL void b2World::DrawJoint(b2Joint *) -> const b2Transform & b2Body::GetTransform() const [b2World.cpp <1117:34 1117:45>]
LOCAL_SYMBOL: b2World.cpp<1115:10> [b2World.cpp <1117:27 1117:31>]
LOCAL_SYMBOL: b2World.cpp<1118:9> [b2World.cpp <1118:9 1118:10>]
REFERENCE_TYPE_USAGE void b2World::DrawJoint(b2Joint *) -> b2Vec2 [b2World.cpp <1118:2 1118:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2World::DrawJoint(b2Joint *) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2World.cpp <1118:18 1118:18>]
REFERENCE_USAGE void b2World::DrawJoint(b2Joint *) -> b2Vec2 b2Transform::p [b2World.cpp <1118:18 1118:18>]
LOCAL_SYMBOL: b2World.cpp<1116:21> [b2World.cpp <1118:14 1118:16>]
LOCAL_SYMBOL: b2World.cpp<1119:9> [b2World.cpp <1119:9 1119:10>]
REFERENCE_TYPE_USAGE void b2World::DrawJoint(b2Joint *) -> b2Vec2 [b2World.cpp <1119:2 1119:7>]
REFERENCE_CALL void b2World::DrawJoint(b2Joint *) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2World.cpp <1119:18 1119:18>]
REFERENCE_USAGE void b2World::DrawJoint(b2Joint *) -> b2Vec2 b2Transform::p [b2World.cpp <1119:18 1119:18>]
LOCAL_SYMBOL: b2World.cpp<1117:21> [b2World.cpp <1119:14 1119:16>]
LOCAL_SYMBOL: b2World.cpp<1120:9> [b2World.cpp <1120:9 1120:10>]
REFERENCE_TYPE_USAGE void b2World::DrawJoint(b2Joint *) -> b2Vec2 [b2World.cpp <1120:2 1120:7>]
SYMBOL_FUNCTION b2Vec2 b2Joint::GetAnchorA() const
REFERENCE_CALL void b2World::DrawJoint(b2Joint *) -> b2Vec2 b2Joint::GetAnchorA() const [b2World.cpp <1120:21 1120:30>]
LOCAL_SYMBOL: b2World.cpp<1112:34> [b2World.cpp <1120:14 1120:18>]
LOCAL_SYMBOL: b2World.cpp<1121:9> [b2World.cpp <1121:9 1121:10>]
REFERENCE_TYPE_USAGE void b2World::DrawJoint(b2Joint *) -> b2Vec2 [b2World.cpp <1121:2 1121:7>]
SYMBOL_FUNCTION b2Vec2 b2Joint::GetAnchorB() const
REFERENCE_CALL void b2World::DrawJoint(b2Joint *) -> b2Vec2 b2Joint::GetAnchorB() const [b2World.cpp <1121:21 1121:30>]
LOCAL_SYMBOL: b2World.cpp<1112:34> [b2World.cpp <1121:14 1121:18>]
LOCAL_SYMBOL: b2World.cpp<1123:10> [b2World.cpp <1123:10 1123:14>]
REFERENCE_TYPE_USAGE void b2World::DrawJoint(b2Joint *) -> b2Color [b2World.cpp <1123:2 1123:8>]
REFERENCE_CALL void b2World::DrawJoint(b2Joint *) -> void b2Color::b2Color(float32, float32, float32, float32) [b2World.cpp <1123:10 1123:14>]
SYMBOL_FUNCTION b2JointType b2Joint::GetType() const
REFERENCE_CALL void b2World::DrawJoint(b2Joint *) -> b2JointType b2Joint::GetType() const [b2World.cpp <1125:17 1125:23>]
LOCAL_SYMBOL: b2World.cpp<1112:34> [b2World.cpp <1125:10 1125:14>]
REFERENCE_USAGE void b2World::DrawJoint(b2Joint *) -> b2JointType::e_distanceJoint [b2World.cpp <1127:7 1127:21>]
REFERENCE_CALL void b2World::DrawJoint(b2Joint *) -> void b2Draw::DrawSegment(const b2Vec2 &, const b2Vec2 &, const b2Color &) [b2World.cpp <1128:16 1128:26>]
REFERENCE_USAGE void b2World::DrawJoint(b2Joint *) -> b2Draw * b2World::g_debugDraw [b2World.cpp <1128:3 1128:13>]
LOCAL_SYMBOL: b2World.cpp<1120:9> [b2World.cpp <1128:28 1128:29>]
LOCAL_SYMBOL: b2World.cpp<1121:9> [b2World.cpp <1128:32 1128:33>]
LOCAL_SYMBOL: b2World.cpp<1123:10> [b2World.cpp <1128:36 1128:40>]
REFERENCE_USAGE void b2World::DrawJoint(b2Joint *) -> b2JointType::e_pulleyJoint [b2World.cpp <1131:7 1131:19>]
LOCAL_SYMBOL: b2World.cpp<1133:19> [b2World.cpp <1133:19 1133:24>]
REFERENCE_TYPE_USAGE void b2World::DrawJoint(b2Joint *) -> b2PulleyJoint [b2World.cpp <1133:4 1133:16>]
REFERENCE_TYPE_USAGE void b2World::DrawJoint(b2Joint *) -> b2PulleyJoint [b2World.cpp <1133:29 1133:41>]
LOCAL_SYMBOL: b2World.cpp<1112:34> [b2World.cpp <1133:44 1133:48>]
LOCAL_SYMBOL: b2World.cpp<1134:11> [b2World.cpp <1134:11 1134:12>]
REFERENCE_TYPE_USAGE void b2World::DrawJoint(b2Joint *) -> b2Vec2 [b2World.cpp <1134:4 1134:9>]
SYMBOL_FUNCTION b2Vec2 b2PulleyJoint::GetGroundAnchorA() const
REFERENCE_CALL void b2World::DrawJoint(b2Joint *) -> b2Vec2 b2PulleyJoint::GetGroundAnchorA() const [b2World.cpp <1134:24 1134:39>]
LOCAL_SYMBOL: b2World.cpp<1133:19> [b2World.cpp <1134:16 1134:21>]
LOCAL_SYMBOL: b2World.cpp<1135:11> [b2World.cpp <1135:11 1135:12>]
REFERENCE_TYPE_USAGE void b2World::DrawJoint(b2Joint *) -> b2Vec2 [b2World.cpp <1135:4 1135:9>]
SYMBOL_FUNCTION b2Vec2 b2PulleyJoint::GetGroundAnchorB() const
REFERENCE_CALL void b2World::DrawJoint(b2Joint *) -> b2Vec2 b2PulleyJoint::GetGroundAnchorB() const [b2World.cpp <1135:24 1135:39>]
LOCAL_SYMBOL: b2World.cpp<1133:19> [b2World.cpp <1135:16 1135:21>]
REFERENCE_CALL void b2World::DrawJoint(b2Joint *) -> void b2Draw::DrawSegment(const b2Vec2 &, const b2Vec2 &, const b2Color &) [b2World.cpp <1136:17 1136:27>]
REFERENCE_USAGE void b2World::DrawJoint(b2Joint *) -> b2Draw * b2World::g_debugDraw [b2World.cpp <1136:4 1136:14>]
LOCAL_SYMBOL: b2World.cpp<1134:11> [b2World.cpp <1136:29 1136:30>]
LOCAL_SYMBOL: b2World.cpp<1120:9> [b2World.cpp <1136:33 1136:34>]
LOCAL_SYMBOL: b2World.cpp<1123:10> [b2World.cpp <1136:37 1136:41>]
REFERENCE_CALL void b2World::DrawJoint(b2Joint *) -> void b2Draw::DrawSegment(const b2Vec2 &, const b2Vec2 &, const b2Color &) [b2World.cpp <1137:17 1137:27>]
REFERENCE_USAGE void b2World::DrawJoint(b2Joint *) -> b2Draw * b2World::g_debugDraw [b2World.cpp <1137:4 1137:14>]
LOCAL_SYMBOL: b2World.cpp<1135:11> [b2World.cpp <1137:29 1137:30>]
LOCAL_SYMBOL: b2World.cpp<1121:9> [b2World.cpp <1137:33 1137:34>]
LOCAL_SYMBOL: b2World.cpp<1123:10> [b2World.cpp <1137:37 1137:41>]
REFERENCE_CALL void b2World::DrawJoint(b2Joint *) -> void b2Draw::DrawSegment(const b2Vec2 &, const b2Vec2 &, const b2Color &) [b2World.cpp <1138:17 1138:27>]
REFERENCE_USAGE void b2World::DrawJoint(b2Joint *) -> b2Draw * b2World::g_debugDraw [b2World.cpp <1138:4 1138:14>]
LOCAL_SYMBOL: b2World.cpp<1134:11> [b2World.cpp <1138:29 1138:30>]
LOCAL_SYMBOL: b2World.cpp<1135:11> [b2World.cpp <1138:33 1138:34>]
LOCAL_SYMBOL: b2World.cpp<1123:10> [b2World.cpp <1138:37 1138:41>]
REFERENCE_USAGE void b2World::DrawJoint(b2Joint *) -> b2JointType::e_mouseJoint [b2World.cpp <1142:7 1142:18>]
REFERENCE_CALL void b2World::DrawJoint(b2Joint *) -> void b2Draw::DrawSegment(const b2Vec2 &, const b2Vec2 &, const b2Color &) [b2World.cpp <1147:16 1147:26>]
REFERENCE_USAGE void b2World::DrawJoint(b2Joint *) -> b2Draw * b2World::g_debugDraw [b2World.cpp <1147:3 1147:13>]
LOCAL_SYMBOL: b2World.cpp<1118:9> [b2World.cpp <1147:28 1147:29>]
LOCAL_SYMBOL: b2World.cpp<1120:9> [b2World.cpp <1147:32 1147:33>]
LOCAL_SYMBOL: b2World.cpp<1123:10> [b2World.cpp <1147:36 1147:40>]
REFERENCE_CALL void b2World::DrawJoint(b2Joint *) -> void b2Draw::DrawSegment(const b2Vec2 &, const b2Vec2 &, const b2Color &) [b2World.cpp <1148:16 1148:26>]
REFERENCE_USAGE void b2World::DrawJoint(b2Joint *) -> b2Draw * b2World::g_debugDraw [b2World.cpp <1148:3 1148:13>]
LOCAL_SYMBOL: b2World.cpp<1120:9> [b2World.cpp <1148:28 1148:29>]
LOCAL_SYMBOL: b2World.cpp<1121:9> [b2World.cpp <1148:32 1148:33>]
LOCAL_SYMBOL: b2World.cpp<1123:10> [b2World.cpp <1148:36 1148:40>]
REFERENCE_CALL void b2World::DrawJoint(b2Joint *) -> void b2Draw::DrawSegment(const b2Vec2 &, const b2Vec2 &, const b2Color &) [b2World.cpp <1149:16 1149:26>]
REFERENCE_USAGE void b2World::DrawJoint(b2Joint *) -> b2Draw * b2World::g_debugDraw [b2World.cpp <1149:3 1149:13>]
LOCAL_SYMBOL: b2World.cpp<1119:9> [b2World.cpp <1149:28 1149:29>]
LOCAL_SYMBOL: b2World.cpp<1121:9> [b2World.cpp <1149:32 1149:33>]
LOCAL_SYMBOL: b2World.cpp<1123:10> [b2World.cpp <1149:36 1149:40>]
SYMBOL_METHOD public void b2World::DrawDebugData() [b2World.cpp <1153:1 <1153:15 1153:27> 1255:1>]
QUALIFIER: b2World [b2World.cpp <1153:6 1153:12>]
REFERENCE_TYPE_USAGE void b2World::DrawDebugData() -> void [b2World.cpp <1153:1 1153:4>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2Draw * b2World::g_debugDraw [b2World.cpp <1155:6 1155:16>]
LOCAL_SYMBOL: b2World.cpp<1160:9> [b2World.cpp <1160:9 1160:13>]
REFERENCE_TYPE_USAGE void b2World::DrawDebugData() -> uint32 [b2World.cpp <1160:2 1160:7>]
SYMBOL_FUNCTION uint32 b2Draw::GetFlags() const
REFERENCE_CALL void b2World::DrawDebugData() -> uint32 b2Draw::GetFlags() const [b2World.cpp <1160:30 1160:37>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2Draw * b2World::g_debugDraw [b2World.cpp <1160:17 1160:27>]
LOCAL_SYMBOL: b2World.cpp<1160:9> [b2World.cpp <1162:6 1162:10>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2Draw::anonymous enum (b2Draw.h<50:2>)::e_shapeBit [b2World.cpp <1162:22 1162:31>]
SYMBOL_CLASS b2Draw
QUALIFIER: b2Draw [b2World.cpp <1162:14 1162:19>]
LOCAL_SYMBOL: b2World.cpp<1164:16> [b2World.cpp <1164:16 1164:16>]
REFERENCE_TYPE_USAGE void b2World::DrawDebugData() -> b2Body [b2World.cpp <1164:8 1164:13>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2Body * b2World::m_bodyList [b2World.cpp <1164:20 1164:29>]
LOCAL_SYMBOL: b2World.cpp<1164:16> [b2World.cpp <1164:32 1164:32>]
LOCAL_SYMBOL: b2World.cpp<1164:16> [b2World.cpp <1164:35 1164:35>]
REFERENCE_CALL void b2World::DrawDebugData() -> b2Body * b2Body::GetNext() [b2World.cpp <1164:42 1164:48>]
LOCAL_SYMBOL: b2World.cpp<1164:16> [b2World.cpp <1164:39 1164:39>]
LOCAL_SYMBOL: b2World.cpp<1166:23> [b2World.cpp <1166:23 1166:24>]
REFERENCE_TYPE_USAGE void b2World::DrawDebugData() -> b2Transform [b2World.cpp <1166:10 1166:20>]
REFERENCE_CALL void b2World::DrawDebugData() -> const b2Transform & b2Body::GetTransform() const [b2World.cpp <1166:31 1166:42>]
LOCAL_SYMBOL: b2World.cpp<1164:16> [b2World.cpp <1166:28 1166:28>]
LOCAL_SYMBOL: b2World.cpp<1167:20> [b2World.cpp <1167:20 1167:20>]
REFERENCE_TYPE_USAGE void b2World::DrawDebugData() -> b2Fixture [b2World.cpp <1167:9 1167:17>]
SYMBOL_FUNCTION b2Fixture * b2Body::GetFixtureList()
REFERENCE_CALL void b2World::DrawDebugData() -> b2Fixture * b2Body::GetFixtureList() [b2World.cpp <1167:27 1167:40>]
LOCAL_SYMBOL: b2World.cpp<1164:16> [b2World.cpp <1167:24 1167:24>]
LOCAL_SYMBOL: b2World.cpp<1167:20> [b2World.cpp <1167:45 1167:45>]
LOCAL_SYMBOL: b2World.cpp<1167:20> [b2World.cpp <1167:48 1167:48>]
SYMBOL_FUNCTION b2Fixture * b2Fixture::GetNext()
REFERENCE_CALL void b2World::DrawDebugData() -> b2Fixture * b2Fixture::GetNext() [b2World.cpp <1167:55 1167:61>]
LOCAL_SYMBOL: b2World.cpp<1167:20> [b2World.cpp <1167:52 1167:52>]
REFERENCE_CALL void b2World::DrawDebugData() -> bool b2Body::IsActive() const [b2World.cpp <1169:12 1169:19>]
LOCAL_SYMBOL: b2World.cpp<1164:16> [b2World.cpp <1169:9 1169:9>]
SYMBOL_FUNCTION void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &)
REFERENCE_CALL void b2World::DrawDebugData() -> void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) [b2World.cpp <1171:6 1171:14>]
LOCAL_SYMBOL: b2World.cpp<1167:20> [b2World.cpp <1171:16 1171:16>]
LOCAL_SYMBOL: b2World.cpp<1166:23> [b2World.cpp <1171:19 1171:20>]
REFERENCE_CALL void b2World::DrawDebugData() -> void b2Color::b2Color(float32, float32, float32, float32) [b2World.cpp <1171:23 1171:29>]
REFERENCE_TYPE_USAGE void b2World::DrawDebugData() -> b2Color [b2World.cpp <1171:23 1171:29>]
REFERENCE_CALL void b2World::DrawDebugData() -> b2BodyType b2Body::GetType() const [b2World.cpp <1173:17 1173:23>]
LOCAL_SYMBOL: b2World.cpp<1164:16> [b2World.cpp <1173:14 1173:14>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2BodyType::b2_staticBody [b2World.cpp <1173:30 1173:42>]
REFERENCE_CALL void b2World::DrawDebugData() -> void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) [b2World.cpp <1175:6 1175:14>]
LOCAL_SYMBOL: b2World.cpp<1167:20> [b2World.cpp <1175:16 1175:16>]
LOCAL_SYMBOL: b2World.cpp<1166:23> [b2World.cpp <1175:19 1175:20>]
REFERENCE_CALL void b2World::DrawDebugData() -> void b2Color::b2Color(float32, float32, float32, float32) [b2World.cpp <1175:23 1175:29>]
REFERENCE_TYPE_USAGE void b2World::DrawDebugData() -> b2Color [b2World.cpp <1175:23 1175:29>]
REFERENCE_CALL void b2World::DrawDebugData() -> b2BodyType b2Body::GetType() const [b2World.cpp <1177:17 1177:23>]
LOCAL_SYMBOL: b2World.cpp<1164:16> [b2World.cpp <1177:14 1177:14>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2BodyType::b2_kinematicBody [b2World.cpp <1177:30 1177:45>]
REFERENCE_CALL void b2World::DrawDebugData() -> void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) [b2World.cpp <1179:6 1179:14>]
LOCAL_SYMBOL: b2World.cpp<1167:20> [b2World.cpp <1179:16 1179:16>]
LOCAL_SYMBOL: b2World.cpp<1166:23> [b2World.cpp <1179:19 1179:20>]
REFERENCE_CALL void b2World::DrawDebugData() -> void b2Color::b2Color(float32, float32, float32, float32) [b2World.cpp <1179:23 1179:29>]
REFERENCE_TYPE_USAGE void b2World::DrawDebugData() -> b2Color [b2World.cpp <1179:23 1179:29>]
REFERENCE_CALL void b2World::DrawDebugData() -> bool b2Body::IsAwake() const [b2World.cpp <1181:17 1181:23>]
LOCAL_SYMBOL: b2World.cpp<1164:16> [b2World.cpp <1181:14 1181:14>]
REFERENCE_CALL void b2World::DrawDebugData() -> void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) [b2World.cpp <1183:6 1183:14>]
LOCAL_SYMBOL: b2World.cpp<1167:20> [b2World.cpp <1183:16 1183:16>]
LOCAL_SYMBOL: b2World.cpp<1166:23> [b2World.cpp <1183:19 1183:20>]
REFERENCE_CALL void b2World::DrawDebugData() -> void b2Color::b2Color(float32, float32, float32, float32) [b2World.cpp <1183:23 1183:29>]
REFERENCE_TYPE_USAGE void b2World::DrawDebugData() -> b2Color [b2World.cpp <1183:23 1183:29>]
REFERENCE_CALL void b2World::DrawDebugData() -> void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &) [b2World.cpp <1187:6 1187:14>]
LOCAL_SYMBOL: b2World.cpp<1167:20> [b2World.cpp <1187:16 1187:16>]
LOCAL_SYMBOL: b2World.cpp<1166:23> [b2World.cpp <1187:19 1187:20>]
REFERENCE_CALL void b2World::DrawDebugData() -> void b2Color::b2Color(float32, float32, float32, float32) [b2World.cpp <1187:23 1187:29>]
REFERENCE_TYPE_USAGE void b2World::DrawDebugData() -> b2Color [b2World.cpp <1187:23 1187:29>]
LOCAL_SYMBOL: b2World.cpp<1160:9> [b2World.cpp <1193:6 1193:10>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2Draw::anonymous enum (b2Draw.h<50:2>)::e_jointBit [b2World.cpp <1193:22 1193:31>]
QUALIFIER: b2Draw [b2World.cpp <1193:14 1193:19>]
LOCAL_SYMBOL: b2World.cpp<1195:17> [b2World.cpp <1195:17 1195:17>]
REFERENCE_TYPE_USAGE void b2World::DrawDebugData() -> b2Joint [b2World.cpp <1195:8 1195:14>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2Joint * b2World::m_jointList [b2World.cpp <1195:21 1195:31>]
LOCAL_SYMBOL: b2World.cpp<1195:17> [b2World.cpp <1195:34 1195:34>]
LOCAL_SYMBOL: b2World.cpp<1195:17> [b2World.cpp <1195:37 1195:37>]
SYMBOL_FUNCTION b2Joint * b2Joint::GetNext()
REFERENCE_CALL void b2World::DrawDebugData() -> b2Joint * b2Joint::GetNext() [b2World.cpp <1195:44 1195:50>]
LOCAL_SYMBOL: b2World.cpp<1195:17> [b2World.cpp <1195:41 1195:41>]
SYMBOL_FUNCTION void b2World::DrawJoint(b2Joint *)
REFERENCE_CALL void b2World::DrawDebugData() -> void b2World::DrawJoint(b2Joint *) [b2World.cpp <1197:4 1197:12>]
LOCAL_SYMBOL: b2World.cpp<1195:17> [b2World.cpp <1197:14 1197:14>]
LOCAL_SYMBOL: b2World.cpp<1160:9> [b2World.cpp <1201:6 1201:10>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2Draw::anonymous enum (b2Draw.h<50:2>)::e_pairBit [b2World.cpp <1201:22 1201:30>]
QUALIFIER: b2Draw [b2World.cpp <1201:14 1201:19>]
LOCAL_SYMBOL: b2World.cpp<1203:11> [b2World.cpp <1203:11 1203:15>]
REFERENCE_TYPE_USAGE void b2World::DrawDebugData() -> b2Color [b2World.cpp <1203:3 1203:9>]
REFERENCE_CALL void b2World::DrawDebugData() -> void b2Color::b2Color(float32, float32, float32, float32) [b2World.cpp <1203:11 1203:15>]
LOCAL_SYMBOL: b2World.cpp<1204:19> [b2World.cpp <1204:19 1204:19>]
REFERENCE_TYPE_USAGE void b2World::DrawDebugData() -> b2Contact [b2World.cpp <1204:8 1204:16>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2Contact * b2ContactManager::m_contactList [b2World.cpp <1204:40 1204:52>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2ContactManager b2World::m_contactManager [b2World.cpp <1204:23 1204:38>]
LOCAL_SYMBOL: b2World.cpp<1204:19> [b2World.cpp <1204:55 1204:55>]
LOCAL_SYMBOL: b2World.cpp<1204:19> [b2World.cpp <1204:58 1204:58>]
SYMBOL_FUNCTION b2Contact * b2Contact::GetNext()
REFERENCE_CALL void b2World::DrawDebugData() -> b2Contact * b2Contact::GetNext() [b2World.cpp <1204:65 1204:71>]
LOCAL_SYMBOL: b2World.cpp<1204:19> [b2World.cpp <1204:62 1204:62>]
LOCAL_SYMBOL: b2World.cpp<1160:9> [b2World.cpp <1216:6 1216:10>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2Draw::anonymous enum (b2Draw.h<50:2>)::e_aabbBit [b2World.cpp <1216:22 1216:30>]
QUALIFIER: b2Draw [b2World.cpp <1216:14 1216:19>]
LOCAL_SYMBOL: b2World.cpp<1218:11> [b2World.cpp <1218:11 1218:15>]
REFERENCE_TYPE_USAGE void b2World::DrawDebugData() -> b2Color [b2World.cpp <1218:3 1218:9>]
REFERENCE_CALL void b2World::DrawDebugData() -> void b2Color::b2Color(float32, float32, float32, float32) [b2World.cpp <1218:11 1218:15>]
LOCAL_SYMBOL: b2World.cpp<1219:17> [b2World.cpp <1219:17 1219:18>]
REFERENCE_TYPE_USAGE void b2World::DrawDebugData() -> b2BroadPhase [b2World.cpp <1219:3 1219:14>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2BroadPhase b2ContactManager::m_broadPhase [b2World.cpp <1219:40 1219:51>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2ContactManager b2World::m_contactManager [b2World.cpp <1219:23 1219:38>]
LOCAL_SYMBOL: b2World.cpp<1221:16> [b2World.cpp <1221:16 1221:16>]
REFERENCE_TYPE_USAGE void b2World::DrawDebugData() -> b2Body [b2World.cpp <1221:8 1221:13>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2Body * b2World::m_bodyList [b2World.cpp <1221:20 1221:29>]
LOCAL_SYMBOL: b2World.cpp<1221:16> [b2World.cpp <1221:32 1221:32>]
LOCAL_SYMBOL: b2World.cpp<1221:16> [b2World.cpp <1221:35 1221:35>]
REFERENCE_CALL void b2World::DrawDebugData() -> b2Body * b2Body::GetNext() [b2World.cpp <1221:42 1221:48>]
LOCAL_SYMBOL: b2World.cpp<1221:16> [b2World.cpp <1221:39 1221:39>]
REFERENCE_CALL void b2World::DrawDebugData() -> bool b2Body::IsActive() const [b2World.cpp <1223:11 1223:18>]
LOCAL_SYMBOL: b2World.cpp<1221:16> [b2World.cpp <1223:8 1223:8>]
LOCAL_SYMBOL: b2World.cpp<1228:20> [b2World.cpp <1228:20 1228:20>]
REFERENCE_TYPE_USAGE void b2World::DrawDebugData() -> b2Fixture [b2World.cpp <1228:9 1228:17>]
REFERENCE_CALL void b2World::DrawDebugData() -> b2Fixture * b2Body::GetFixtureList() [b2World.cpp <1228:27 1228:40>]
LOCAL_SYMBOL: b2World.cpp<1221:16> [b2World.cpp <1228:24 1228:24>]
LOCAL_SYMBOL: b2World.cpp<1228:20> [b2World.cpp <1228:45 1228:45>]
LOCAL_SYMBOL: b2World.cpp<1228:20> [b2World.cpp <1228:48 1228:48>]
REFERENCE_CALL void b2World::DrawDebugData() -> b2Fixture * b2Fixture::GetNext() [b2World.cpp <1228:55 1228:61>]
LOCAL_SYMBOL: b2World.cpp<1228:20> [b2World.cpp <1228:52 1228:52>]
LOCAL_SYMBOL: b2World.cpp<1230:16> [b2World.cpp <1230:16 1230:16>]
REFERENCE_TYPE_USAGE void b2World::DrawDebugData() -> int32 [b2World.cpp <1230:10 1230:14>]
LOCAL_SYMBOL: b2World.cpp<1230:16> [b2World.cpp <1230:23 1230:23>]
REFERENCE_USAGE void b2World::DrawDebugData() -> int32 b2Fixture::m_proxyCount [b2World.cpp <1230:30 1230:41>]
LOCAL_SYMBOL: b2World.cpp<1228:20> [b2World.cpp <1230:27 1230:27>]
LOCAL_SYMBOL: b2World.cpp<1230:16> [b2World.cpp <1230:46 1230:46>]
LOCAL_SYMBOL: b2World.cpp<1232:22> [b2World.cpp <1232:22 1232:26>]
REFERENCE_TYPE_USAGE void b2World::DrawDebugData() -> b2FixtureProxy [b2World.cpp <1232:6 1232:19>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2FixtureProxy * b2Fixture::m_proxies [b2World.cpp <1232:33 1232:41>]
LOCAL_SYMBOL: b2World.cpp<1228:20> [b2World.cpp <1232:30 1232:30>]
LOCAL_SYMBOL: b2World.cpp<1230:16> [b2World.cpp <1232:45 1232:45>]
LOCAL_SYMBOL: b2World.cpp<1233:13> [b2World.cpp <1233:13 1233:16>]
REFERENCE_TYPE_USAGE void b2World::DrawDebugData() -> b2AABB [b2World.cpp <1233:6 1233:11>]
SYMBOL_FUNCTION void b2AABB::b2AABB(const b2AABB &)
REFERENCE_CALL void b2World::DrawDebugData() -> void b2AABB::b2AABB(const b2AABB &) [b2World.cpp <1233:49 1233:49>]
SYMBOL_FUNCTION const b2AABB & b2BroadPhase::GetFatAABB(int32) const
REFERENCE_CALL void b2World::DrawDebugData() -> const b2AABB & b2BroadPhase::GetFatAABB(int32) const [b2World.cpp <1233:24 1233:33>]
LOCAL_SYMBOL: b2World.cpp<1219:17> [b2World.cpp <1233:20 1233:21>]
REFERENCE_USAGE void b2World::DrawDebugData() -> int32 b2FixtureProxy::proxyId [b2World.cpp <1233:42 1233:48>]
LOCAL_SYMBOL: b2World.cpp<1232:22> [b2World.cpp <1233:35 1233:39>]
LOCAL_SYMBOL: b2World.cpp<1234:13> [b2World.cpp <1234:13 1234:14>]
REFERENCE_TYPE_USAGE void b2World::DrawDebugData() -> b2Vec2 [b2World.cpp <1234:6 1234:11>]
REFERENCE_CALL void b2World::DrawDebugData() -> void b2Vec2::b2Vec2() [b2World.cpp <1234:13 1234:14>]
SYMBOL_FUNCTION void b2Vec2::Set(float32, float32)
REFERENCE_CALL void b2World::DrawDebugData() -> void b2Vec2::Set(float32, float32) [b2World.cpp <1235:12 1235:14>]
LOCAL_SYMBOL: b2World.cpp<1234:13> [b2World.cpp <1235:6 1235:7>]
REFERENCE_USAGE void b2World::DrawDebugData() -> float32 b2Vec2::x [b2World.cpp <1235:32 1235:32>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2Vec2 b2AABB::lowerBound [b2World.cpp <1235:21 1235:30>]
LOCAL_SYMBOL: b2World.cpp<1233:13> [b2World.cpp <1235:16 1235:19>]
REFERENCE_USAGE void b2World::DrawDebugData() -> float32 b2Vec2::y [b2World.cpp <1235:51 1235:51>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2Vec2 b2AABB::lowerBound [b2World.cpp <1235:40 1235:49>]
LOCAL_SYMBOL: b2World.cpp<1233:13> [b2World.cpp <1235:35 1235:38>]
REFERENCE_CALL void b2World::DrawDebugData() -> void b2Vec2::Set(float32, float32) [b2World.cpp <1236:12 1236:14>]
LOCAL_SYMBOL: b2World.cpp<1234:13> [b2World.cpp <1236:6 1236:7>]
REFERENCE_USAGE void b2World::DrawDebugData() -> float32 b2Vec2::x [b2World.cpp <1236:32 1236:32>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2Vec2 b2AABB::upperBound [b2World.cpp <1236:21 1236:30>]
LOCAL_SYMBOL: b2World.cpp<1233:13> [b2World.cpp <1236:16 1236:19>]
REFERENCE_USAGE void b2World::DrawDebugData() -> float32 b2Vec2::y [b2World.cpp <1236:51 1236:51>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2Vec2 b2AABB::lowerBound [b2World.cpp <1236:40 1236:49>]
LOCAL_SYMBOL: b2World.cpp<1233:13> [b2World.cpp <1236:35 1236:38>]
REFERENCE_CALL void b2World::DrawDebugData() -> void b2Vec2::Set(float32, float32) [b2World.cpp <1237:12 1237:14>]
LOCAL_SYMBOL: b2World.cpp<1234:13> [b2World.cpp <1237:6 1237:7>]
REFERENCE_USAGE void b2World::DrawDebugData() -> float32 b2Vec2::x [b2World.cpp <1237:32 1237:32>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2Vec2 b2AABB::upperBound [b2World.cpp <1237:21 1237:30>]
LOCAL_SYMBOL: b2World.cpp<1233:13> [b2World.cpp <1237:16 1237:19>]
REFERENCE_USAGE void b2World::DrawDebugData() -> float32 b2Vec2::y [b2World.cpp <1237:51 1237:51>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2Vec2 b2AABB::upperBound [b2World.cpp <1237:40 1237:49>]
LOCAL_SYMBOL: b2World.cpp<1233:13> [b2World.cpp <1237:35 1237:38>]
REFERENCE_CALL void b2World::DrawDebugData() -> void b2Vec2::Set(float32, float32) [b2World.cpp <1238:12 1238:14>]
LOCAL_SYMBOL: b2World.cpp<1234:13> [b2World.cpp <1238:6 1238:7>]
REFERENCE_USAGE void b2World::DrawDebugData() -> float32 b2Vec2::x [b2World.cpp <1238:32 1238:32>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2Vec2 b2AABB::lowerBound [b2World.cpp <1238:21 1238:30>]
LOCAL_SYMBOL: b2World.cpp<1233:13> [b2World.cpp <1238:16 1238:19>]
REFERENCE_USAGE void b2World::DrawDebugData() -> float32 b2Vec2::y [b2World.cpp <1238:51 1238:51>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2Vec2 b2AABB::upperBound [b2World.cpp <1238:40 1238:49>]
LOCAL_SYMBOL: b2World.cpp<1233:13> [b2World.cpp <1238:35 1238:38>]
SYMBOL_FUNCTION void b2Draw::DrawPolygon(const b2Vec2 *, int32, const b2Color &)
REFERENCE_CALL void b2World::DrawDebugData() -> void b2Draw::DrawPolygon(const b2Vec2 *, int32, const b2Color &) [b2World.cpp <1240:19 1240:29>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2Draw * b2World::g_debugDraw [b2World.cpp <1240:6 1240:16>]
LOCAL_SYMBOL: b2World.cpp<1234:13> [b2World.cpp <1240:31 1240:32>]
LOCAL_SYMBOL: b2World.cpp<1218:11> [b2World.cpp <1240:38 1240:42>]
LOCAL_SYMBOL: b2World.cpp<1160:9> [b2World.cpp <1246:6 1246:10>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2Draw::anonymous enum (b2Draw.h<50:2>)::e_centerOfMassBit [b2World.cpp <1246:22 1246:38>]
QUALIFIER: b2Draw [b2World.cpp <1246:14 1246:19>]
LOCAL_SYMBOL: b2World.cpp<1248:16> [b2World.cpp <1248:16 1248:16>]
REFERENCE_TYPE_USAGE void b2World::DrawDebugData() -> b2Body [b2World.cpp <1248:8 1248:13>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2Body * b2World::m_bodyList [b2World.cpp <1248:20 1248:29>]
LOCAL_SYMBOL: b2World.cpp<1248:16> [b2World.cpp <1248:32 1248:32>]
LOCAL_SYMBOL: b2World.cpp<1248:16> [b2World.cpp <1248:35 1248:35>]
REFERENCE_CALL void b2World::DrawDebugData() -> b2Body * b2Body::GetNext() [b2World.cpp <1248:42 1248:48>]
LOCAL_SYMBOL: b2World.cpp<1248:16> [b2World.cpp <1248:39 1248:39>]
LOCAL_SYMBOL: b2World.cpp<1250:16> [b2World.cpp <1250:16 1250:17>]
REFERENCE_TYPE_USAGE void b2World::DrawDebugData() -> b2Transform [b2World.cpp <1250:4 1250:14>]
SYMBOL_FUNCTION void b2Transform::b2Transform(const b2Transform &)
REFERENCE_CALL void b2World::DrawDebugData() -> void b2Transform::b2Transform(const b2Transform &) [b2World.cpp <1250:37 1250:37>]
REFERENCE_CALL void b2World::DrawDebugData() -> const b2Transform & b2Body::GetTransform() const [b2World.cpp <1250:24 1250:35>]
LOCAL_SYMBOL: b2World.cpp<1248:16> [b2World.cpp <1250:21 1250:21>]
REFERENCE_CALL void b2World::DrawDebugData() -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2World.cpp <1251:9 1251:9>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2Vec2 b2Transform::p [b2World.cpp <1251:7 1251:7>]
LOCAL_SYMBOL: b2World.cpp<1250:16> [b2World.cpp <1251:4 1251:5>]
SYMBOL_FUNCTION const b2Vec2 & b2Body::GetWorldCenter() const
REFERENCE_CALL void b2World::DrawDebugData() -> const b2Vec2 & b2Body::GetWorldCenter() const [b2World.cpp <1251:14 1251:27>]
LOCAL_SYMBOL: b2World.cpp<1248:16> [b2World.cpp <1251:11 1251:11>]
SYMBOL_FUNCTION void b2Draw::DrawTransform(const b2Transform &)
REFERENCE_CALL void b2World::DrawDebugData() -> void b2Draw::DrawTransform(const b2Transform &) [b2World.cpp <1252:17 1252:29>]
REFERENCE_USAGE void b2World::DrawDebugData() -> b2Draw * b2World::g_debugDraw [b2World.cpp <1252:4 1252:14>]
LOCAL_SYMBOL: b2World.cpp<1250:16> [b2World.cpp <1252:31 1252:32>]
SYMBOL_METHOD public int32 b2World::GetProxyCount() const [b2World.cpp <1257:1 <1257:16 1257:28> 1260:1>]
QUALIFIER: b2World [b2World.cpp <1257:7 1257:13>]
REFERENCE_TYPE_USAGE int32 b2World::GetProxyCount() const -> int32 [b2World.cpp <1257:1 1257:5>]
SYMBOL_FUNCTION int32 b2BroadPhase::GetProxyCount() const
REFERENCE_CALL int32 b2World::GetProxyCount() const -> int32 b2BroadPhase::GetProxyCount() const [b2World.cpp <1259:39 1259:51>]
REFERENCE_USAGE int32 b2World::GetProxyCount() const -> b2BroadPhase b2ContactManager::m_broadPhase [b2World.cpp <1259:26 1259:37>]
REFERENCE_USAGE int32 b2World::GetProxyCount() const -> b2ContactManager b2World::m_contactManager [b2World.cpp <1259:9 1259:24>]
SYMBOL_METHOD public int32 b2World::GetTreeHeight() const [b2World.cpp <1262:1 <1262:16 1262:28> 1265:1>]
QUALIFIER: b2World [b2World.cpp <1262:7 1262:13>]
REFERENCE_TYPE_USAGE int32 b2World::GetTreeHeight() const -> int32 [b2World.cpp <1262:1 1262:5>]
SYMBOL_FUNCTION int32 b2BroadPhase::GetTreeHeight() const
REFERENCE_CALL int32 b2World::GetTreeHeight() const -> int32 b2BroadPhase::GetTreeHeight() const [b2World.cpp <1264:39 1264:51>]
REFERENCE_USAGE int32 b2World::GetTreeHeight() const -> b2BroadPhase b2ContactManager::m_broadPhase [b2World.cpp <1264:26 1264:37>]
REFERENCE_USAGE int32 b2World::GetTreeHeight() const -> b2ContactManager b2World::m_contactManager [b2World.cpp <1264:9 1264:24>]
SYMBOL_METHOD public int32 b2World::GetTreeBalance() const [b2World.cpp <1267:1 <1267:16 1267:29> 1270:1>]
QUALIFIER: b2World [b2World.cpp <1267:7 1267:13>]
REFERENCE_TYPE_USAGE int32 b2World::GetTreeBalance() const -> int32 [b2World.cpp <1267:1 1267:5>]
SYMBOL_FUNCTION int32 b2BroadPhase::GetTreeBalance() const
REFERENCE_CALL int32 b2World::GetTreeBalance() const -> int32 b2BroadPhase::GetTreeBalance() const [b2World.cpp <1269:39 1269:52>]
REFERENCE_USAGE int32 b2World::GetTreeBalance() const -> b2BroadPhase b2ContactManager::m_broadPhase [b2World.cpp <1269:26 1269:37>]
REFERENCE_USAGE int32 b2World::GetTreeBalance() const -> b2ContactManager b2World::m_contactManager [b2World.cpp <1269:9 1269:24>]
SYMBOL_METHOD public float32 b2World::GetTreeQuality() const [b2World.cpp <1272:1 <1272:18 1272:31> 1275:1>]
QUALIFIER: b2World [b2World.cpp <1272:9 1272:15>]
REFERENCE_TYPE_USAGE float32 b2World::GetTreeQuality() const -> float32 [b2World.cpp <1272:1 1272:7>]
SYMBOL_FUNCTION float32 b2BroadPhase::GetTreeQuality() const
REFERENCE_CALL float32 b2World::GetTreeQuality() const -> float32 b2BroadPhase::GetTreeQuality() const [b2World.cpp <1274:39 1274:52>]
REFERENCE_USAGE float32 b2World::GetTreeQuality() const -> b2BroadPhase b2ContactManager::m_broadPhase [b2World.cpp <1274:26 1274:37>]
REFERENCE_USAGE float32 b2World::GetTreeQuality() const -> b2ContactManager b2World::m_contactManager [b2World.cpp <1274:9 1274:24>]
SYMBOL_METHOD public void b2World::ShiftOrigin(const b2Vec2 &) [b2World.cpp <1277:1 <1277:15 1277:25> 1298:1>]
QUALIFIER: b2World [b2World.cpp <1277:6 1277:12>]
REFERENCE_TYPE_USAGE void b2World::ShiftOrigin(const b2Vec2 &) -> void [b2World.cpp <1277:1 1277:4>]
LOCAL_SYMBOL: b2World.cpp<1277:41> [b2World.cpp <1277:41 1277:49>]
REFERENCE_TYPE_USAGE void b2World::ShiftOrigin(const b2Vec2 &) -> b2Vec2 [b2World.cpp <1277:33 1277:38>]
REFERENCE_USAGE void b2World::ShiftOrigin(const b2Vec2 &) -> int32 b2World::m_flags [b2World.cpp <1279:12 1279:18>]
REFERENCE_USAGE void b2World::ShiftOrigin(const b2Vec2 &) -> b2World::anonymous enum (b2World.h<215:2>)::e_locked [b2World.cpp <1279:22 1279:29>]
REFERENCE_USAGE void b2World::ShiftOrigin(const b2Vec2 &) -> int32 b2World::m_flags [b2World.cpp <1280:7 1280:13>]
REFERENCE_USAGE void b2World::ShiftOrigin(const b2Vec2 &) -> b2World::anonymous enum (b2World.h<215:2>)::e_locked [b2World.cpp <1280:17 1280:24>]
REFERENCE_USAGE void b2World::ShiftOrigin(const b2Vec2 &) -> b2World::anonymous enum (b2World.h<215:2>)::e_locked [b2World.cpp <1280:30 1280:37>]
LOCAL_SYMBOL: b2World.cpp<1285:15> [b2World.cpp <1285:15 1285:15>]
REFERENCE_TYPE_USAGE void b2World::ShiftOrigin(const b2Vec2 &) -> b2Body [b2World.cpp <1285:7 1285:12>]
REFERENCE_USAGE void b2World::ShiftOrigin(const b2Vec2 &) -> b2Body * b2World::m_bodyList [b2World.cpp <1285:19 1285:28>]
LOCAL_SYMBOL: b2World.cpp<1285:15> [b2World.cpp <1285:31 1285:31>]
LOCAL_SYMBOL: b2World.cpp<1285:15> [b2World.cpp <1285:34 1285:34>]
REFERENCE_USAGE void b2World::ShiftOrigin(const b2Vec2 &) -> b2Body * b2Body::m_next [b2World.cpp <1285:41 1285:46>]
LOCAL_SYMBOL: b2World.cpp<1285:15> [b2World.cpp <1285:38 1285:38>]
SYMBOL_FUNCTION void b2Vec2::operator-=(const b2Vec2 &)
REFERENCE_CALL void b2World::ShiftOrigin(const b2Vec2 &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2World.cpp <1287:13 1287:14>]
REFERENCE_USAGE void b2World::ShiftOrigin(const b2Vec2 &) -> b2Vec2 b2Transform::p [b2World.cpp <1287:11 1287:11>]
REFERENCE_USAGE void b2World::ShiftOrigin(const b2Vec2 &) -> b2Transform b2Body::m_xf [b2World.cpp <1287:6 1287:9>]
LOCAL_SYMBOL: b2World.cpp<1285:15> [b2World.cpp <1287:3 1287:3>]
LOCAL_SYMBOL: b2World.cpp<1277:41> [b2World.cpp <1287:16 1287:24>]
REFERENCE_CALL void b2World::ShiftOrigin(const b2Vec2 &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2World.cpp <1288:17 1288:18>]
REFERENCE_USAGE void b2World::ShiftOrigin(const b2Vec2 &) -> b2Vec2 b2Sweep::c0 [b2World.cpp <1288:14 1288:15>]
REFERENCE_USAGE void b2World::ShiftOrigin(const b2Vec2 &) -> b2Sweep b2Body::m_sweep [b2World.cpp <1288:6 1288:12>]
LOCAL_SYMBOL: b2World.cpp<1285:15> [b2World.cpp <1288:3 1288:3>]
LOCAL_SYMBOL: b2World.cpp<1277:41> [b2World.cpp <1288:20 1288:28>]
REFERENCE_CALL void b2World::ShiftOrigin(const b2Vec2 &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2World.cpp <1289:16 1289:17>]
REFERENCE_USAGE void b2World::ShiftOrigin(const b2Vec2 &) -> b2Vec2 b2Sweep::c [b2World.cpp <1289:14 1289:14>]
REFERENCE_USAGE void b2World::ShiftOrigin(const b2Vec2 &) -> b2Sweep b2Body::m_sweep [b2World.cpp <1289:6 1289:12>]
LOCAL_SYMBOL: b2World.cpp<1285:15> [b2World.cpp <1289:3 1289:3>]
LOCAL_SYMBOL: b2World.cpp<1277:41> [b2World.cpp <1289:19 1289:27>]
LOCAL_SYMBOL: b2World.cpp<1292:16> [b2World.cpp <1292:16 1292:16>]
REFERENCE_TYPE_USAGE void b2World::ShiftOrigin(const b2Vec2 &) -> b2Joint [b2World.cpp <1292:7 1292:13>]
REFERENCE_USAGE void b2World::ShiftOrigin(const b2Vec2 &) -> b2Joint * b2World::m_jointList [b2World.cpp <1292:20 1292:30>]
LOCAL_SYMBOL: b2World.cpp<1292:16> [b2World.cpp <1292:33 1292:33>]
LOCAL_SYMBOL: b2World.cpp<1292:16> [b2World.cpp <1292:36 1292:36>]
REFERENCE_USAGE void b2World::ShiftOrigin(const b2Vec2 &) -> b2Joint * b2Joint::m_next [b2World.cpp <1292:43 1292:48>]
LOCAL_SYMBOL: b2World.cpp<1292:16> [b2World.cpp <1292:40 1292:40>]
SYMBOL_FUNCTION void b2Joint::ShiftOrigin(const b2Vec2 &)
REFERENCE_CALL void b2World::ShiftOrigin(const b2Vec2 &) -> void b2Joint::ShiftOrigin(const b2Vec2 &) [b2World.cpp <1294:6 1294:16>]
LOCAL_SYMBOL: b2World.cpp<1292:16> [b2World.cpp <1294:3 1294:3>]
LOCAL_SYMBOL: b2World.cpp<1277:41> [b2World.cpp <1294:18 1294:26>]
SYMBOL_FUNCTION void b2BroadPhase::ShiftOrigin(const b2Vec2 &)
REFERENCE_CALL void b2World::ShiftOrigin(const b2Vec2 &) -> void b2BroadPhase::ShiftOrigin(const b2Vec2 &) [b2World.cpp <1297:32 1297:42>]
REFERENCE_USAGE void b2World::ShiftOrigin(const b2Vec2 &) -> b2BroadPhase b2ContactManager::m_broadPhase [b2World.cpp <1297:19 1297:30>]
REFERENCE_USAGE void b2World::ShiftOrigin(const b2Vec2 &) -> b2ContactManager b2World::m_contactManager [b2World.cpp <1297:2 1297:17>]
LOCAL_SYMBOL: b2World.cpp<1277:41> [b2World.cpp <1297:44 1297:52>]
SYMBOL_METHOD public void b2World::Dump() [b2World.cpp <1300:1 <1300:15 1300:18> 1357:1>]
QUALIFIER: b2World [b2World.cpp <1300:6 1300:12>]
REFERENCE_TYPE_USAGE void b2World::Dump() -> void [b2World.cpp <1300:1 1300:4>]
REFERENCE_USAGE void b2World::Dump() -> int32 b2World::m_flags [b2World.cpp <1302:7 1302:13>]
REFERENCE_USAGE void b2World::Dump() -> b2World::anonymous enum (b2World.h<215:2>)::e_locked [b2World.cpp <1302:17 1302:24>]
REFERENCE_USAGE void b2World::Dump() -> b2World::anonymous enum (b2World.h<215:2>)::e_locked [b2World.cpp <1302:30 1302:37>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2World::Dump() -> void b2Log(const char *) [b2World.cpp <1307:2 1307:6>]
REFERENCE_USAGE void b2World::Dump() -> float32 b2Vec2::x [b2World.cpp <1307:51 1307:51>]
REFERENCE_USAGE void b2World::Dump() -> b2Vec2 b2World::m_gravity [b2World.cpp <1307:41 1307:49>]
REFERENCE_USAGE void b2World::Dump() -> float32 b2Vec2::y [b2World.cpp <1307:64 1307:64>]
REFERENCE_USAGE void b2World::Dump() -> b2Vec2 b2World::m_gravity [b2World.cpp <1307:54 1307:62>]
REFERENCE_CALL void b2World::Dump() -> void b2Log(const char *) [b2World.cpp <1308:2 1308:6>]
REFERENCE_CALL void b2World::Dump() -> void b2Log(const char *) [b2World.cpp <1310:2 1310:6>]
REFERENCE_USAGE void b2World::Dump() -> int32 b2World::m_bodyCount [b2World.cpp <1310:72 1310:82>]
REFERENCE_CALL void b2World::Dump() -> void b2Log(const char *) [b2World.cpp <1311:2 1311:6>]
REFERENCE_USAGE void b2World::Dump() -> int32 b2World::m_jointCount [b2World.cpp <1311:75 1311:86>]
LOCAL_SYMBOL: b2World.cpp<1312:8> [b2World.cpp <1312:8 1312:8>]
REFERENCE_TYPE_USAGE void b2World::Dump() -> int32 [b2World.cpp <1312:2 1312:6>]
LOCAL_SYMBOL: b2World.cpp<1313:15> [b2World.cpp <1313:15 1313:15>]
REFERENCE_TYPE_USAGE void b2World::Dump() -> b2Body [b2World.cpp <1313:7 1313:12>]
REFERENCE_USAGE void b2World::Dump() -> b2Body * b2World::m_bodyList [b2World.cpp <1313:19 1313:28>]
LOCAL_SYMBOL: b2World.cpp<1313:15> [b2World.cpp <1313:31 1313:31>]
LOCAL_SYMBOL: b2World.cpp<1313:15> [b2World.cpp <1313:34 1313:34>]
REFERENCE_USAGE void b2World::Dump() -> b2Body * b2Body::m_next [b2World.cpp <1313:41 1313:46>]
LOCAL_SYMBOL: b2World.cpp<1313:15> [b2World.cpp <1313:38 1313:38>]
REFERENCE_USAGE void b2World::Dump() -> int32 b2Body::m_islandIndex [b2World.cpp <1315:6 1315:18>]
LOCAL_SYMBOL: b2World.cpp<1313:15> [b2World.cpp <1315:3 1315:3>]
LOCAL_SYMBOL: b2World.cpp<1312:8> [b2World.cpp <1315:22 1315:22>]
SYMBOL_FUNCTION void b2Body::Dump()
REFERENCE_CALL void b2World::Dump() -> void b2Body::Dump() [b2World.cpp <1316:6 1316:9>]
LOCAL_SYMBOL: b2World.cpp<1313:15> [b2World.cpp <1316:3 1316:3>]
LOCAL_SYMBOL: b2World.cpp<1312:8> [b2World.cpp <1317:5 1317:5>]
LOCAL_SYMBOL: b2World.cpp<1312:8> [b2World.cpp <1320:2 1320:2>]
LOCAL_SYMBOL: b2World.cpp<1321:16> [b2World.cpp <1321:16 1321:16>]
REFERENCE_TYPE_USAGE void b2World::Dump() -> b2Joint [b2World.cpp <1321:7 1321:13>]
REFERENCE_USAGE void b2World::Dump() -> b2Joint * b2World::m_jointList [b2World.cpp <1321:20 1321:30>]
LOCAL_SYMBOL: b2World.cpp<1321:16> [b2World.cpp <1321:33 1321:33>]
LOCAL_SYMBOL: b2World.cpp<1321:16> [b2World.cpp <1321:36 1321:36>]
REFERENCE_USAGE void b2World::Dump() -> b2Joint * b2Joint::m_next [b2World.cpp <1321:43 1321:48>]
LOCAL_SYMBOL: b2World.cpp<1321:16> [b2World.cpp <1321:40 1321:40>]
REFERENCE_USAGE void b2World::Dump() -> int32 b2Joint::m_index [b2World.cpp <1323:6 1323:12>]
LOCAL_SYMBOL: b2World.cpp<1321:16> [b2World.cpp <1323:3 1323:3>]
LOCAL_SYMBOL: b2World.cpp<1312:8> [b2World.cpp <1323:16 1323:16>]
LOCAL_SYMBOL: b2World.cpp<1312:8> [b2World.cpp <1324:5 1324:5>]
LOCAL_SYMBOL: b2World.cpp<1328:16> [b2World.cpp <1328:16 1328:16>]
REFERENCE_TYPE_USAGE void b2World::Dump() -> b2Joint [b2World.cpp <1328:7 1328:13>]
REFERENCE_USAGE void b2World::Dump() -> b2Joint * b2World::m_jointList [b2World.cpp <1328:20 1328:30>]
LOCAL_SYMBOL: b2World.cpp<1328:16> [b2World.cpp <1328:33 1328:33>]
LOCAL_SYMBOL: b2World.cpp<1328:16> [b2World.cpp <1328:36 1328:36>]
REFERENCE_USAGE void b2World::Dump() -> b2Joint * b2Joint::m_next [b2World.cpp <1328:43 1328:48>]
LOCAL_SYMBOL: b2World.cpp<1328:16> [b2World.cpp <1328:40 1328:40>]
REFERENCE_USAGE void b2World::Dump() -> b2JointType b2Joint::m_type [b2World.cpp <1330:10 1330:15>]
LOCAL_SYMBOL: b2World.cpp<1328:16> [b2World.cpp <1330:7 1330:7>]
REFERENCE_USAGE void b2World::Dump() -> b2JointType::e_gearJoint [b2World.cpp <1330:20 1330:30>]
REFERENCE_CALL void b2World::Dump() -> void b2Log(const char *) [b2World.cpp <1335:3 1335:7>]
SYMBOL_FUNCTION void b2Joint::Dump()
REFERENCE_CALL void b2World::Dump() -> void b2Joint::Dump() [b2World.cpp <1336:6 1336:9>]
LOCAL_SYMBOL: b2World.cpp<1328:16> [b2World.cpp <1336:3 1336:3>]
REFERENCE_CALL void b2World::Dump() -> void b2Log(const char *) [b2World.cpp <1337:3 1337:7>]
LOCAL_SYMBOL: b2World.cpp<1341:16> [b2World.cpp <1341:16 1341:16>]
REFERENCE_TYPE_USAGE void b2World::Dump() -> b2Joint [b2World.cpp <1341:7 1341:13>]
REFERENCE_USAGE void b2World::Dump() -> b2Joint * b2World::m_jointList [b2World.cpp <1341:20 1341:30>]
LOCAL_SYMBOL: b2World.cpp<1341:16> [b2World.cpp <1341:33 1341:33>]
LOCAL_SYMBOL: b2World.cpp<1341:16> [b2World.cpp <1341:36 1341:36>]
REFERENCE_USAGE void b2World::Dump() -> b2Joint * b2Joint::m_next [b2World.cpp <1341:43 1341:48>]
LOCAL_SYMBOL: b2World.cpp<1341:16> [b2World.cpp <1341:40 1341:40>]
REFERENCE_USAGE void b2World::Dump() -> b2JointType b2Joint::m_type [b2World.cpp <1343:10 1343:15>]
LOCAL_SYMBOL: b2World.cpp<1341:16> [b2World.cpp <1343:7 1343:7>]
REFERENCE_USAGE void b2World::Dump() -> b2JointType::e_gearJoint [b2World.cpp <1343:20 1343:30>]
REFERENCE_CALL void b2World::Dump() -> void b2Log(const char *) [b2World.cpp <1348:3 1348:7>]
REFERENCE_CALL void b2World::Dump() -> void b2Joint::Dump() [b2World.cpp <1349:6 1349:9>]
LOCAL_SYMBOL: b2World.cpp<1341:16> [b2World.cpp <1349:3 1349:3>]
REFERENCE_CALL void b2World::Dump() -> void b2Log(const char *) [b2World.cpp <1350:3 1350:7>]
REFERENCE_CALL void b2World::Dump() -> void b2Log(const char *) [b2World.cpp <1353:2 1353:6>]
REFERENCE_CALL void b2World::Dump() -> void b2Log(const char *) [b2World.cpp <1354:2 1354:6>]
REFERENCE_CALL void b2World::Dump() -> void b2Log(const char *) [b2World.cpp <1355:2 1355:6>]
REFERENCE_CALL void b2World::Dump() -> void b2Log(const char *) [b2World.cpp <1356:2 1356:6>]
