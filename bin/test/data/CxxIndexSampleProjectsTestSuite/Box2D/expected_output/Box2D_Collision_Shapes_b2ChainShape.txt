FILE: b2ChainShape.cpp
FILE: b2ChainShape.cpp
COMMENT: comment [b2ChainShape.cpp <1:1 17:3>]
FILE: b2ChainShape.cpp
FILE: b2ChainShape.cpp
FILE: b2ChainShape.cpp
FILE: b2ChainShape.cpp
REFERENCE_MACRO_USAGE b2ChainShape.cpp -> b2Assert [b2ChainShape.cpp <38:2 38:9>]
REFERENCE_MACRO_USAGE b2Settings.h -> assert [b2Settings.h <31:21 31:26>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:23 34:31>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:47 34:55>]
REFERENCE_MACRO_USAGE assert.h -> __FILE__ [assert.h <34:57 34:64>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> __LINE__ [assert.h <34:79 34:86>]
REFERENCE_MACRO_USAGE b2ChainShape.cpp -> b2Assert [b2ChainShape.cpp <39:2 39:9>]
REFERENCE_MACRO_USAGE b2Settings.h -> assert [b2Settings.h <31:21 31:26>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:23 34:31>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:47 34:55>]
REFERENCE_MACRO_USAGE assert.h -> __FILE__ [assert.h <34:57 34:64>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> __LINE__ [assert.h <34:79 34:86>]
COMMENT: comment [b2ChainShape.cpp <49:3 49:78>]
REFERENCE_MACRO_USAGE b2ChainShape.cpp -> b2Assert [b2ChainShape.cpp <50:3 50:10>]
REFERENCE_MACRO_USAGE b2ChainShape.cpp -> b2_linearSlop [b2ChainShape.cpp <50:40 50:52>]
REFERENCE_MACRO_USAGE b2ChainShape.cpp -> b2_linearSlop [b2ChainShape.cpp <50:56 50:68>]
REFERENCE_MACRO_USAGE b2Settings.h -> assert [b2Settings.h <31:21 31:26>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:23 34:31>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:47 34:55>]
REFERENCE_MACRO_USAGE assert.h -> __FILE__ [assert.h <34:57 34:64>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> __LINE__ [assert.h <34:79 34:86>]
REFERENCE_MACRO_USAGE b2ChainShape.cpp -> b2Assert [b2ChainShape.cpp <65:2 65:9>]
REFERENCE_MACRO_USAGE b2Settings.h -> assert [b2Settings.h <31:21 31:26>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:23 34:31>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:47 34:55>]
REFERENCE_MACRO_USAGE assert.h -> __FILE__ [assert.h <34:57 34:64>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> __LINE__ [assert.h <34:79 34:86>]
REFERENCE_MACRO_USAGE b2ChainShape.cpp -> b2Assert [b2ChainShape.cpp <66:2 66:9>]
REFERENCE_MACRO_USAGE b2Settings.h -> assert [b2Settings.h <31:21 31:26>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:23 34:31>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:47 34:55>]
REFERENCE_MACRO_USAGE assert.h -> __FILE__ [assert.h <34:57 34:64>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> __LINE__ [assert.h <34:79 34:86>]
COMMENT: comment [b2ChainShape.cpp <69:3 69:78>]
REFERENCE_MACRO_USAGE b2ChainShape.cpp -> b2Assert [b2ChainShape.cpp <70:3 70:10>]
REFERENCE_MACRO_USAGE b2ChainShape.cpp -> b2_linearSlop [b2ChainShape.cpp <70:60 70:72>]
REFERENCE_MACRO_USAGE b2ChainShape.cpp -> b2_linearSlop [b2ChainShape.cpp <70:76 70:88>]
REFERENCE_MACRO_USAGE b2Settings.h -> assert [b2Settings.h <31:21 31:26>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:23 34:31>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:47 34:55>]
REFERENCE_MACRO_USAGE assert.h -> __FILE__ [assert.h <34:57 34:64>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> __LINE__ [assert.h <34:79 34:86>]
COMMENT: comment [b2ChainShape.cpp <110:2 110:34>]
REFERENCE_MACRO_USAGE b2ChainShape.cpp -> b2Assert [b2ChainShape.cpp <116:2 116:9>]
REFERENCE_MACRO_USAGE b2Settings.h -> assert [b2Settings.h <31:21 31:26>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:23 34:31>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:47 34:55>]
REFERENCE_MACRO_USAGE assert.h -> __FILE__ [assert.h <34:57 34:64>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> __LINE__ [assert.h <34:79 34:86>]
REFERENCE_MACRO_USAGE b2ChainShape.cpp -> B2_NOT_USED [b2ChainShape.cpp <148:2 148:12>]
REFERENCE_MACRO_USAGE b2ChainShape.cpp -> B2_NOT_USED [b2ChainShape.cpp <149:2 149:12>]
REFERENCE_MACRO_USAGE b2ChainShape.cpp -> b2Assert [b2ChainShape.cpp <156:2 156:9>]
REFERENCE_MACRO_USAGE b2Settings.h -> assert [b2Settings.h <31:21 31:26>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:23 34:31>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:47 34:55>]
REFERENCE_MACRO_USAGE assert.h -> __FILE__ [assert.h <34:57 34:64>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> __LINE__ [assert.h <34:79 34:86>]
REFERENCE_MACRO_USAGE b2ChainShape.cpp -> b2Assert [b2ChainShape.cpp <175:2 175:9>]
REFERENCE_MACRO_USAGE b2Settings.h -> assert [b2Settings.h <31:21 31:26>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:23 34:31>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:47 34:55>]
REFERENCE_MACRO_USAGE assert.h -> __FILE__ [assert.h <34:57 34:64>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> __LINE__ [assert.h <34:79 34:86>]
REFERENCE_MACRO_USAGE b2ChainShape.cpp -> B2_NOT_USED [b2ChainShape.cpp <193:2 193:12>]
SYMBOL_METHOD public void b2ChainShape::~b2ChainShape() [b2ChainShape.cpp <24:1 <24:15 24:27> 27:1>]
SYMBOL_FUNCTION void b2Shape::~b2Shape()
REFERENCE_OVERRIDE void b2ChainShape::~b2ChainShape() -> void b2Shape::~b2Shape() [b2ChainShape.cpp <24:15 24:15>]
SYMBOL_CLASS b2ChainShape
SYMBOL_FUNCTION void b2ChainShape::Clear()
REFERENCE_CALL void b2ChainShape::~b2ChainShape() -> void b2ChainShape::Clear() [b2ChainShape.cpp <26:2 26:6>]
SYMBOL_METHOD public void b2ChainShape::Clear() [b2ChainShape.cpp <29:1 <29:20 29:24> 34:1>]
SYMBOL_CLASS b2ChainShape
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2ChainShape::Clear() -> void [b2ChainShape.cpp <29:1 29:4>]
SYMBOL_FUNCTION void b2Free(void *)
REFERENCE_CALL void b2ChainShape::Clear() -> void b2Free(void *) [b2ChainShape.cpp <31:2 31:7>]
REFERENCE_USAGE void b2ChainShape::Clear() -> b2Vec2 * b2ChainShape::m_vertices [b2ChainShape.cpp <31:9 31:18>]
REFERENCE_USAGE void b2ChainShape::Clear() -> b2Vec2 * b2ChainShape::m_vertices [b2ChainShape.cpp <32:2 32:11>]
REFERENCE_USAGE void b2ChainShape::Clear() -> int32 b2ChainShape::m_count [b2ChainShape.cpp <33:2 33:8>]
SYMBOL_METHOD public void b2ChainShape::CreateLoop(const b2Vec2 *, int32) [b2ChainShape.cpp <36:1 <36:20 36:29> 61:1>]
SYMBOL_CLASS b2ChainShape
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> void [b2ChainShape.cpp <36:1 36:4>]
LOCAL_SYMBOL: b2ChainShape.cpp<36:45> [b2ChainShape.cpp <36:45 36:52>]
REFERENCE_TYPE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> b2Vec2 [b2ChainShape.cpp <36:37 36:42>]
LOCAL_SYMBOL: b2ChainShape.cpp<36:61> [b2ChainShape.cpp <36:61 36:65>]
REFERENCE_TYPE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> int32 [b2ChainShape.cpp <36:55 36:59>]
REFERENCE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> b2Vec2 * b2ChainShape::m_vertices [b2ChainShape.cpp <38:11 38:20>]
REFERENCE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> int32 b2ChainShape::m_count [b2ChainShape.cpp <38:36 38:42>]
LOCAL_SYMBOL: b2ChainShape.cpp<36:61> [b2ChainShape.cpp <39:11 39:15>]
LOCAL_SYMBOL: b2ChainShape.cpp<36:61> [b2ChainShape.cpp <40:6 40:10>]
LOCAL_SYMBOL: b2ChainShape.cpp<45:13> [b2ChainShape.cpp <45:13 45:13>]
REFERENCE_TYPE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> int32 [b2ChainShape.cpp <45:7 45:11>]
LOCAL_SYMBOL: b2ChainShape.cpp<45:13> [b2ChainShape.cpp <45:20 45:20>]
LOCAL_SYMBOL: b2ChainShape.cpp<36:61> [b2ChainShape.cpp <45:24 45:28>]
LOCAL_SYMBOL: b2ChainShape.cpp<45:13> [b2ChainShape.cpp <45:33 45:33>]
LOCAL_SYMBOL: b2ChainShape.cpp<47:10> [b2ChainShape.cpp <47:10 47:11>]
REFERENCE_TYPE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> b2Vec2 [b2ChainShape.cpp <47:3 47:8>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2ChainShape.cpp <47:27 47:27>]
LOCAL_SYMBOL: b2ChainShape.cpp<36:45> [b2ChainShape.cpp <47:15 47:22>]
LOCAL_SYMBOL: b2ChainShape.cpp<45:13> [b2ChainShape.cpp <47:24 47:24>]
LOCAL_SYMBOL: b2ChainShape.cpp<48:10> [b2ChainShape.cpp <48:10 48:11>]
REFERENCE_TYPE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> b2Vec2 [b2ChainShape.cpp <48:3 48:8>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2ChainShape.cpp <48:25 48:25>]
LOCAL_SYMBOL: b2ChainShape.cpp<36:45> [b2ChainShape.cpp <48:15 48:22>]
LOCAL_SYMBOL: b2ChainShape.cpp<45:13> [b2ChainShape.cpp <48:24 48:24>]
SYMBOL_FUNCTION float32 b2DistanceSquared(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> float32 b2DistanceSquared(const b2Vec2 &, const b2Vec2 &) [b2ChainShape.cpp <50:12 50:28>]
LOCAL_SYMBOL: b2ChainShape.cpp<47:10> [b2ChainShape.cpp <50:30 50:31>]
LOCAL_SYMBOL: b2ChainShape.cpp<48:10> [b2ChainShape.cpp <50:34 50:35>]
REFERENCE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> int32 b2ChainShape::m_count [b2ChainShape.cpp <53:2 53:8>]
LOCAL_SYMBOL: b2ChainShape.cpp<36:61> [b2ChainShape.cpp <53:12 53:16>]
REFERENCE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> b2Vec2 * b2ChainShape::m_vertices [b2ChainShape.cpp <54:2 54:11>]
REFERENCE_TYPE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> b2Vec2 [b2ChainShape.cpp <54:16 54:21>]
SYMBOL_FUNCTION void * b2Alloc(int32)
REFERENCE_CALL void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> void * b2Alloc(int32) [b2ChainShape.cpp <54:24 54:30>]
REFERENCE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> int32 b2ChainShape::m_count [b2ChainShape.cpp <54:32 54:38>]
REFERENCE_TYPE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> b2Vec2 [b2ChainShape.cpp <54:49 54:54>]
SYMBOL_FUNCTION void * memcpy(void *, const void *, size_t)
REFERENCE_CALL void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> void * memcpy(void *, const void *, size_t) [b2ChainShape.cpp <55:2 55:7>]
REFERENCE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> b2Vec2 * b2ChainShape::m_vertices [b2ChainShape.cpp <55:9 55:18>]
LOCAL_SYMBOL: b2ChainShape.cpp<36:45> [b2ChainShape.cpp <55:21 55:28>]
LOCAL_SYMBOL: b2ChainShape.cpp<36:61> [b2ChainShape.cpp <55:31 55:35>]
REFERENCE_TYPE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> b2Vec2 [b2ChainShape.cpp <55:46 55:51>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2ChainShape.cpp <56:20 56:20>]
REFERENCE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> b2Vec2 * b2ChainShape::m_vertices [b2ChainShape.cpp <56:2 56:11>]
LOCAL_SYMBOL: b2ChainShape.cpp<36:61> [b2ChainShape.cpp <56:13 56:17>]
REFERENCE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> b2Vec2 * b2ChainShape::m_vertices [b2ChainShape.cpp <56:22 56:31>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2ChainShape.cpp <57:15 57:15>]
REFERENCE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> b2Vec2 b2ChainShape::m_prevVertex [b2ChainShape.cpp <57:2 57:13>]
REFERENCE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> b2Vec2 * b2ChainShape::m_vertices [b2ChainShape.cpp <57:17 57:26>]
REFERENCE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> int32 b2ChainShape::m_count [b2ChainShape.cpp <57:28 57:34>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2ChainShape.cpp <58:15 58:15>]
REFERENCE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> b2Vec2 b2ChainShape::m_nextVertex [b2ChainShape.cpp <58:2 58:13>]
REFERENCE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> b2Vec2 * b2ChainShape::m_vertices [b2ChainShape.cpp <58:17 58:26>]
REFERENCE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> bool b2ChainShape::m_hasPrevVertex [b2ChainShape.cpp <59:2 59:16>]
REFERENCE_USAGE void b2ChainShape::CreateLoop(const b2Vec2 *, int32) -> bool b2ChainShape::m_hasNextVertex [b2ChainShape.cpp <60:2 60:16>]
SYMBOL_METHOD public void b2ChainShape::CreateChain(const b2Vec2 *, int32) [b2ChainShape.cpp <63:1 <63:20 63:30> 82:1>]
SYMBOL_CLASS b2ChainShape
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2ChainShape::CreateChain(const b2Vec2 *, int32) -> void [b2ChainShape.cpp <63:1 63:4>]
LOCAL_SYMBOL: b2ChainShape.cpp<63:46> [b2ChainShape.cpp <63:46 63:53>]
REFERENCE_TYPE_USAGE void b2ChainShape::CreateChain(const b2Vec2 *, int32) -> b2Vec2 [b2ChainShape.cpp <63:38 63:43>]
LOCAL_SYMBOL: b2ChainShape.cpp<63:62> [b2ChainShape.cpp <63:62 63:66>]
REFERENCE_TYPE_USAGE void b2ChainShape::CreateChain(const b2Vec2 *, int32) -> int32 [b2ChainShape.cpp <63:56 63:60>]
REFERENCE_USAGE void b2ChainShape::CreateChain(const b2Vec2 *, int32) -> b2Vec2 * b2ChainShape::m_vertices [b2ChainShape.cpp <65:11 65:20>]
REFERENCE_USAGE void b2ChainShape::CreateChain(const b2Vec2 *, int32) -> int32 b2ChainShape::m_count [b2ChainShape.cpp <65:36 65:42>]
LOCAL_SYMBOL: b2ChainShape.cpp<63:62> [b2ChainShape.cpp <66:11 66:15>]
LOCAL_SYMBOL: b2ChainShape.cpp<67:13> [b2ChainShape.cpp <67:13 67:13>]
REFERENCE_TYPE_USAGE void b2ChainShape::CreateChain(const b2Vec2 *, int32) -> int32 [b2ChainShape.cpp <67:7 67:11>]
LOCAL_SYMBOL: b2ChainShape.cpp<67:13> [b2ChainShape.cpp <67:20 67:20>]
LOCAL_SYMBOL: b2ChainShape.cpp<63:62> [b2ChainShape.cpp <67:24 67:28>]
LOCAL_SYMBOL: b2ChainShape.cpp<67:13> [b2ChainShape.cpp <67:33 67:33>]
SYMBOL_FUNCTION float32 b2DistanceSquared(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2ChainShape::CreateChain(const b2Vec2 *, int32) -> float32 b2DistanceSquared(const b2Vec2 &, const b2Vec2 &) [b2ChainShape.cpp <70:12 70:28>]
LOCAL_SYMBOL: b2ChainShape.cpp<63:46> [b2ChainShape.cpp <70:30 70:37>]
LOCAL_SYMBOL: b2ChainShape.cpp<67:13> [b2ChainShape.cpp <70:39 70:39>]
LOCAL_SYMBOL: b2ChainShape.cpp<63:46> [b2ChainShape.cpp <70:45 70:52>]
LOCAL_SYMBOL: b2ChainShape.cpp<67:13> [b2ChainShape.cpp <70:54 70:54>]
REFERENCE_USAGE void b2ChainShape::CreateChain(const b2Vec2 *, int32) -> int32 b2ChainShape::m_count [b2ChainShape.cpp <73:2 73:8>]
LOCAL_SYMBOL: b2ChainShape.cpp<63:62> [b2ChainShape.cpp <73:12 73:16>]
REFERENCE_USAGE void b2ChainShape::CreateChain(const b2Vec2 *, int32) -> b2Vec2 * b2ChainShape::m_vertices [b2ChainShape.cpp <74:2 74:11>]
REFERENCE_TYPE_USAGE void b2ChainShape::CreateChain(const b2Vec2 *, int32) -> b2Vec2 [b2ChainShape.cpp <74:16 74:21>]
SYMBOL_FUNCTION void * b2Alloc(int32)
REFERENCE_CALL void b2ChainShape::CreateChain(const b2Vec2 *, int32) -> void * b2Alloc(int32) [b2ChainShape.cpp <74:24 74:30>]
LOCAL_SYMBOL: b2ChainShape.cpp<63:62> [b2ChainShape.cpp <74:32 74:36>]
REFERENCE_TYPE_USAGE void b2ChainShape::CreateChain(const b2Vec2 *, int32) -> b2Vec2 [b2ChainShape.cpp <74:47 74:52>]
SYMBOL_FUNCTION void * memcpy(void *, const void *, size_t)
REFERENCE_CALL void b2ChainShape::CreateChain(const b2Vec2 *, int32) -> void * memcpy(void *, const void *, size_t) [b2ChainShape.cpp <75:2 75:7>]
REFERENCE_USAGE void b2ChainShape::CreateChain(const b2Vec2 *, int32) -> b2Vec2 * b2ChainShape::m_vertices [b2ChainShape.cpp <75:9 75:18>]
LOCAL_SYMBOL: b2ChainShape.cpp<63:46> [b2ChainShape.cpp <75:21 75:28>]
REFERENCE_USAGE void b2ChainShape::CreateChain(const b2Vec2 *, int32) -> int32 b2ChainShape::m_count [b2ChainShape.cpp <75:31 75:37>]
REFERENCE_TYPE_USAGE void b2ChainShape::CreateChain(const b2Vec2 *, int32) -> b2Vec2 [b2ChainShape.cpp <75:48 75:53>]
REFERENCE_USAGE void b2ChainShape::CreateChain(const b2Vec2 *, int32) -> bool b2ChainShape::m_hasPrevVertex [b2ChainShape.cpp <77:2 77:16>]
REFERENCE_USAGE void b2ChainShape::CreateChain(const b2Vec2 *, int32) -> bool b2ChainShape::m_hasNextVertex [b2ChainShape.cpp <78:2 78:16>]
SYMBOL_FUNCTION void b2Vec2::SetZero()
REFERENCE_CALL void b2ChainShape::CreateChain(const b2Vec2 *, int32) -> void b2Vec2::SetZero() [b2ChainShape.cpp <80:15 80:21>]
REFERENCE_USAGE void b2ChainShape::CreateChain(const b2Vec2 *, int32) -> b2Vec2 b2ChainShape::m_prevVertex [b2ChainShape.cpp <80:2 80:13>]
SYMBOL_FUNCTION void b2Vec2::SetZero()
REFERENCE_CALL void b2ChainShape::CreateChain(const b2Vec2 *, int32) -> void b2Vec2::SetZero() [b2ChainShape.cpp <81:15 81:21>]
REFERENCE_USAGE void b2ChainShape::CreateChain(const b2Vec2 *, int32) -> b2Vec2 b2ChainShape::m_nextVertex [b2ChainShape.cpp <81:2 81:13>]
SYMBOL_METHOD public void b2ChainShape::SetPrevVertex(const b2Vec2 &) [b2ChainShape.cpp <84:1 <84:20 84:32> 88:1>]
SYMBOL_CLASS b2ChainShape
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2ChainShape::SetPrevVertex(const b2Vec2 &) -> void [b2ChainShape.cpp <84:1 84:4>]
LOCAL_SYMBOL: b2ChainShape.cpp<84:48> [b2ChainShape.cpp <84:48 84:57>]
REFERENCE_TYPE_USAGE void b2ChainShape::SetPrevVertex(const b2Vec2 &) -> b2Vec2 [b2ChainShape.cpp <84:40 84:45>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2ChainShape::SetPrevVertex(const b2Vec2 &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2ChainShape.cpp <86:15 86:15>]
REFERENCE_USAGE void b2ChainShape::SetPrevVertex(const b2Vec2 &) -> b2Vec2 b2ChainShape::m_prevVertex [b2ChainShape.cpp <86:2 86:13>]
LOCAL_SYMBOL: b2ChainShape.cpp<84:48> [b2ChainShape.cpp <86:17 86:26>]
REFERENCE_USAGE void b2ChainShape::SetPrevVertex(const b2Vec2 &) -> bool b2ChainShape::m_hasPrevVertex [b2ChainShape.cpp <87:2 87:16>]
SYMBOL_METHOD public void b2ChainShape::SetNextVertex(const b2Vec2 &) [b2ChainShape.cpp <90:1 <90:20 90:32> 94:1>]
SYMBOL_CLASS b2ChainShape
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2ChainShape::SetNextVertex(const b2Vec2 &) -> void [b2ChainShape.cpp <90:1 90:4>]
LOCAL_SYMBOL: b2ChainShape.cpp<90:48> [b2ChainShape.cpp <90:48 90:57>]
REFERENCE_TYPE_USAGE void b2ChainShape::SetNextVertex(const b2Vec2 &) -> b2Vec2 [b2ChainShape.cpp <90:40 90:45>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2ChainShape::SetNextVertex(const b2Vec2 &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2ChainShape.cpp <92:15 92:15>]
REFERENCE_USAGE void b2ChainShape::SetNextVertex(const b2Vec2 &) -> b2Vec2 b2ChainShape::m_nextVertex [b2ChainShape.cpp <92:2 92:13>]
LOCAL_SYMBOL: b2ChainShape.cpp<90:48> [b2ChainShape.cpp <92:17 92:26>]
REFERENCE_USAGE void b2ChainShape::SetNextVertex(const b2Vec2 &) -> bool b2ChainShape::m_hasNextVertex [b2ChainShape.cpp <93:2 93:16>]
SYMBOL_METHOD public b2Shape * b2ChainShape::Clone(b2BlockAllocator *) const [b2ChainShape.cpp <96:1 <96:24 96:28> 106:1>]
SYMBOL_FUNCTION b2Shape * b2Shape::Clone(b2BlockAllocator *) const
REFERENCE_OVERRIDE b2Shape * b2ChainShape::Clone(b2BlockAllocator *) const -> b2Shape * b2Shape::Clone(b2BlockAllocator *) const [b2ChainShape.cpp <96:24 96:28>]
SYMBOL_CLASS b2ChainShape
REFERENCE_TYPE_USAGE b2Shape * b2ChainShape::Clone(b2BlockAllocator *) const -> b2Shape [b2ChainShape.cpp <96:1 96:7>]
LOCAL_SYMBOL: b2ChainShape.cpp<96:48> [b2ChainShape.cpp <96:48 96:56>]
REFERENCE_TYPE_USAGE b2Shape * b2ChainShape::Clone(b2BlockAllocator *) const -> b2BlockAllocator [b2ChainShape.cpp <96:30 96:45>]
LOCAL_SYMBOL: b2ChainShape.cpp<98:8> [b2ChainShape.cpp <98:8 98:10>]
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE b2Shape * b2ChainShape::Clone(b2BlockAllocator *) const -> void [b2ChainShape.cpp <98:2 98:5>]
SYMBOL_FUNCTION void * b2BlockAllocator::Allocate(int32)
REFERENCE_CALL b2Shape * b2ChainShape::Clone(b2BlockAllocator *) const -> void * b2BlockAllocator::Allocate(int32) [b2ChainShape.cpp <98:25 98:32>]
LOCAL_SYMBOL: b2ChainShape.cpp<96:48> [b2ChainShape.cpp <98:14 98:22>]
REFERENCE_TYPE_USAGE b2Shape * b2ChainShape::Clone(b2BlockAllocator *) const -> b2ChainShape [b2ChainShape.cpp <98:41 98:52>]
LOCAL_SYMBOL: b2ChainShape.cpp<99:16> [b2ChainShape.cpp <99:16 99:20>]
REFERENCE_TYPE_USAGE b2Shape * b2ChainShape::Clone(b2BlockAllocator *) const -> b2ChainShape [b2ChainShape.cpp <99:2 99:13>]
REFERENCE_TYPE_USAGE b2Shape * b2ChainShape::Clone(b2BlockAllocator *) const -> b2ChainShape [b2ChainShape.cpp <99:34 99:45>]
SYMBOL_FUNCTION void b2ChainShape::b2ChainShape()
REFERENCE_CALL b2Shape * b2ChainShape::Clone(b2BlockAllocator *) const -> void b2ChainShape::b2ChainShape() [b2ChainShape.cpp <99:34 99:45>]
LOCAL_SYMBOL: b2ChainShape.cpp<98:8> [b2ChainShape.cpp <99:29 99:31>]
SYMBOL_FUNCTION void b2ChainShape::CreateChain(const b2Vec2 *, int32)
REFERENCE_CALL b2Shape * b2ChainShape::Clone(b2BlockAllocator *) const -> void b2ChainShape::CreateChain(const b2Vec2 *, int32) [b2ChainShape.cpp <100:9 100:19>]
LOCAL_SYMBOL: b2ChainShape.cpp<99:16> [b2ChainShape.cpp <100:2 100:6>]
REFERENCE_USAGE b2Shape * b2ChainShape::Clone(b2BlockAllocator *) const -> b2Vec2 * b2ChainShape::m_vertices [b2ChainShape.cpp <100:21 100:30>]
REFERENCE_USAGE b2Shape * b2ChainShape::Clone(b2BlockAllocator *) const -> int32 b2ChainShape::m_count [b2ChainShape.cpp <100:33 100:39>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL b2Shape * b2ChainShape::Clone(b2BlockAllocator *) const -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2ChainShape.cpp <101:22 101:22>]
REFERENCE_USAGE b2Shape * b2ChainShape::Clone(b2BlockAllocator *) const -> b2Vec2 b2ChainShape::m_prevVertex [b2ChainShape.cpp <101:9 101:20>]
LOCAL_SYMBOL: b2ChainShape.cpp<99:16> [b2ChainShape.cpp <101:2 101:6>]
REFERENCE_USAGE b2Shape * b2ChainShape::Clone(b2BlockAllocator *) const -> b2Vec2 b2ChainShape::m_prevVertex [b2ChainShape.cpp <101:24 101:35>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL b2Shape * b2ChainShape::Clone(b2BlockAllocator *) const -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2ChainShape.cpp <102:22 102:22>]
REFERENCE_USAGE b2Shape * b2ChainShape::Clone(b2BlockAllocator *) const -> b2Vec2 b2ChainShape::m_nextVertex [b2ChainShape.cpp <102:9 102:20>]
LOCAL_SYMBOL: b2ChainShape.cpp<99:16> [b2ChainShape.cpp <102:2 102:6>]
REFERENCE_USAGE b2Shape * b2ChainShape::Clone(b2BlockAllocator *) const -> b2Vec2 b2ChainShape::m_nextVertex [b2ChainShape.cpp <102:24 102:35>]
REFERENCE_USAGE b2Shape * b2ChainShape::Clone(b2BlockAllocator *) const -> bool b2ChainShape::m_hasPrevVertex [b2ChainShape.cpp <103:9 103:23>]
LOCAL_SYMBOL: b2ChainShape.cpp<99:16> [b2ChainShape.cpp <103:2 103:6>]
REFERENCE_USAGE b2Shape * b2ChainShape::Clone(b2BlockAllocator *) const -> bool b2ChainShape::m_hasPrevVertex [b2ChainShape.cpp <103:27 103:41>]
REFERENCE_USAGE b2Shape * b2ChainShape::Clone(b2BlockAllocator *) const -> bool b2ChainShape::m_hasNextVertex [b2ChainShape.cpp <104:9 104:23>]
LOCAL_SYMBOL: b2ChainShape.cpp<99:16> [b2ChainShape.cpp <104:2 104:6>]
REFERENCE_USAGE b2Shape * b2ChainShape::Clone(b2BlockAllocator *) const -> bool b2ChainShape::m_hasNextVertex [b2ChainShape.cpp <104:27 104:41>]
LOCAL_SYMBOL: b2ChainShape.cpp<99:16> [b2ChainShape.cpp <105:9 105:13>]
SYMBOL_METHOD public int32 b2ChainShape::GetChildCount() const [b2ChainShape.cpp <108:1 <108:21 108:33> 112:1>]
SYMBOL_FUNCTION int32 b2Shape::GetChildCount() const
REFERENCE_OVERRIDE int32 b2ChainShape::GetChildCount() const -> int32 b2Shape::GetChildCount() const [b2ChainShape.cpp <108:21 108:33>]
SYMBOL_CLASS b2ChainShape
REFERENCE_TYPE_USAGE int32 b2ChainShape::GetChildCount() const -> int32 [b2ChainShape.cpp <108:1 108:5>]
REFERENCE_USAGE int32 b2ChainShape::GetChildCount() const -> int32 b2ChainShape::m_count [b2ChainShape.cpp <111:9 111:15>]
SYMBOL_METHOD public void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const [b2ChainShape.cpp <114:1 <114:20 114:31> 144:1>]
SYMBOL_CLASS b2ChainShape
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> void [b2ChainShape.cpp <114:1 114:4>]
LOCAL_SYMBOL: b2ChainShape.cpp<114:46> [b2ChainShape.cpp <114:46 114:49>]
REFERENCE_TYPE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> b2EdgeShape [b2ChainShape.cpp <114:33 114:43>]
LOCAL_SYMBOL: b2ChainShape.cpp<114:58> [b2ChainShape.cpp <114:58 114:62>]
REFERENCE_TYPE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> int32 [b2ChainShape.cpp <114:52 114:56>]
LOCAL_SYMBOL: b2ChainShape.cpp<114:58> [b2ChainShape.cpp <116:16 116:20>]
LOCAL_SYMBOL: b2ChainShape.cpp<114:58> [b2ChainShape.cpp <116:25 116:29>]
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> int32 b2ChainShape::m_count [b2ChainShape.cpp <116:33 116:39>]
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> b2Shape::Type b2Shape::m_type [b2ChainShape.cpp <117:8 117:13>]
LOCAL_SYMBOL: b2ChainShape.cpp<114:46> [b2ChainShape.cpp <117:2 117:5>]
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> b2Shape::Type::e_edge [b2ChainShape.cpp <117:26 117:31>]
SYMBOL_CLASS b2Shape
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> float32 b2Shape::m_radius [b2ChainShape.cpp <118:8 118:15>]
LOCAL_SYMBOL: b2ChainShape.cpp<114:46> [b2ChainShape.cpp <118:2 118:5>]
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> float32 b2Shape::m_radius [b2ChainShape.cpp <118:19 118:26>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2ChainShape.cpp <120:18 120:18>]
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> b2Vec2 b2EdgeShape::m_vertex1 [b2ChainShape.cpp <120:8 120:16>]
LOCAL_SYMBOL: b2ChainShape.cpp<114:46> [b2ChainShape.cpp <120:2 120:5>]
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> b2Vec2 * b2ChainShape::m_vertices [b2ChainShape.cpp <120:20 120:29>]
LOCAL_SYMBOL: b2ChainShape.cpp<114:58> [b2ChainShape.cpp <120:31 120:35>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2ChainShape.cpp <121:18 121:18>]
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> b2Vec2 b2EdgeShape::m_vertex2 [b2ChainShape.cpp <121:8 121:16>]
LOCAL_SYMBOL: b2ChainShape.cpp<114:46> [b2ChainShape.cpp <121:2 121:5>]
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> b2Vec2 * b2ChainShape::m_vertices [b2ChainShape.cpp <121:20 121:29>]
LOCAL_SYMBOL: b2ChainShape.cpp<114:58> [b2ChainShape.cpp <121:31 121:35>]
LOCAL_SYMBOL: b2ChainShape.cpp<114:58> [b2ChainShape.cpp <123:6 123:10>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2ChainShape.cpp <125:19 125:19>]
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> b2Vec2 b2EdgeShape::m_vertex0 [b2ChainShape.cpp <125:9 125:17>]
LOCAL_SYMBOL: b2ChainShape.cpp<114:46> [b2ChainShape.cpp <125:3 125:6>]
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> b2Vec2 * b2ChainShape::m_vertices [b2ChainShape.cpp <125:21 125:30>]
LOCAL_SYMBOL: b2ChainShape.cpp<114:58> [b2ChainShape.cpp <125:32 125:36>]
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> bool b2EdgeShape::m_hasVertex0 [b2ChainShape.cpp <126:9 126:20>]
LOCAL_SYMBOL: b2ChainShape.cpp<114:46> [b2ChainShape.cpp <126:3 126:6>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2ChainShape.cpp <130:19 130:19>]
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> b2Vec2 b2EdgeShape::m_vertex0 [b2ChainShape.cpp <130:9 130:17>]
LOCAL_SYMBOL: b2ChainShape.cpp<114:46> [b2ChainShape.cpp <130:3 130:6>]
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> b2Vec2 b2ChainShape::m_prevVertex [b2ChainShape.cpp <130:21 130:32>]
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> bool b2EdgeShape::m_hasVertex0 [b2ChainShape.cpp <131:9 131:20>]
LOCAL_SYMBOL: b2ChainShape.cpp<114:46> [b2ChainShape.cpp <131:3 131:6>]
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> bool b2ChainShape::m_hasPrevVertex [b2ChainShape.cpp <131:24 131:38>]
LOCAL_SYMBOL: b2ChainShape.cpp<114:58> [b2ChainShape.cpp <134:6 134:10>]
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> int32 b2ChainShape::m_count [b2ChainShape.cpp <134:14 134:20>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2ChainShape.cpp <136:19 136:19>]
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> b2Vec2 b2EdgeShape::m_vertex3 [b2ChainShape.cpp <136:9 136:17>]
LOCAL_SYMBOL: b2ChainShape.cpp<114:46> [b2ChainShape.cpp <136:3 136:6>]
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> b2Vec2 * b2ChainShape::m_vertices [b2ChainShape.cpp <136:21 136:30>]
LOCAL_SYMBOL: b2ChainShape.cpp<114:58> [b2ChainShape.cpp <136:32 136:36>]
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> bool b2EdgeShape::m_hasVertex3 [b2ChainShape.cpp <137:9 137:20>]
LOCAL_SYMBOL: b2ChainShape.cpp<114:46> [b2ChainShape.cpp <137:3 137:6>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2ChainShape.cpp <141:19 141:19>]
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> b2Vec2 b2EdgeShape::m_vertex3 [b2ChainShape.cpp <141:9 141:17>]
LOCAL_SYMBOL: b2ChainShape.cpp<114:46> [b2ChainShape.cpp <141:3 141:6>]
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> b2Vec2 b2ChainShape::m_nextVertex [b2ChainShape.cpp <141:21 141:32>]
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> bool b2EdgeShape::m_hasVertex3 [b2ChainShape.cpp <142:9 142:20>]
LOCAL_SYMBOL: b2ChainShape.cpp<114:46> [b2ChainShape.cpp <142:3 142:6>]
REFERENCE_USAGE void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const -> bool b2ChainShape::m_hasNextVertex [b2ChainShape.cpp <142:24 142:38>]
SYMBOL_METHOD public bool b2ChainShape::TestPoint(const b2Transform &, const b2Vec2 &) const [b2ChainShape.cpp <146:1 <146:20 146:28> 151:1>]
SYMBOL_FUNCTION bool b2Shape::TestPoint(const b2Transform &, const b2Vec2 &) const
REFERENCE_OVERRIDE bool b2ChainShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> bool b2Shape::TestPoint(const b2Transform &, const b2Vec2 &) const [b2ChainShape.cpp <146:20 146:28>]
SYMBOL_CLASS b2ChainShape
SYMBOL_BUILTIN_TYPE bool
REFERENCE_TYPE_USAGE bool b2ChainShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> bool [b2ChainShape.cpp <146:1 146:4>]
LOCAL_SYMBOL: b2ChainShape.cpp<146:49> [b2ChainShape.cpp <146:49 146:50>]
REFERENCE_TYPE_USAGE bool b2ChainShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> b2Transform [b2ChainShape.cpp <146:36 146:46>]
LOCAL_SYMBOL: b2ChainShape.cpp<146:67> [b2ChainShape.cpp <146:67 146:67>]
REFERENCE_TYPE_USAGE bool b2ChainShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> b2Vec2 [b2ChainShape.cpp <146:59 146:64>]
LOCAL_SYMBOL: b2ChainShape.cpp<146:49> [b2ChainShape.cpp <148:14 148:15>]
LOCAL_SYMBOL: b2ChainShape.cpp<146:67> [b2ChainShape.cpp <149:14 149:14>]
SYMBOL_METHOD public bool b2ChainShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const [b2ChainShape.cpp <153:1 <153:20 153:26> 171:1>]
SYMBOL_FUNCTION bool b2Shape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const
REFERENCE_OVERRIDE bool b2ChainShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> bool b2Shape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const [b2ChainShape.cpp <153:20 153:26>]
SYMBOL_CLASS b2ChainShape
SYMBOL_BUILTIN_TYPE bool
REFERENCE_TYPE_USAGE bool b2ChainShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> bool [b2ChainShape.cpp <153:1 153:4>]
LOCAL_SYMBOL: b2ChainShape.cpp<153:45> [b2ChainShape.cpp <153:45 153:50>]
REFERENCE_TYPE_USAGE bool b2ChainShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2RayCastOutput [b2ChainShape.cpp <153:28 153:42>]
LOCAL_SYMBOL: b2ChainShape.cpp<153:75> [b2ChainShape.cpp <153:75 153:79>]
REFERENCE_TYPE_USAGE bool b2ChainShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2RayCastInput [b2ChainShape.cpp <153:59 153:72>]
LOCAL_SYMBOL: b2ChainShape.cpp<154:27> [b2ChainShape.cpp <154:27 154:28>]
REFERENCE_TYPE_USAGE bool b2ChainShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Transform [b2ChainShape.cpp <154:14 154:24>]
LOCAL_SYMBOL: b2ChainShape.cpp<154:37> [b2ChainShape.cpp <154:37 154:46>]
REFERENCE_TYPE_USAGE bool b2ChainShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> int32 [b2ChainShape.cpp <154:31 154:35>]
LOCAL_SYMBOL: b2ChainShape.cpp<154:37> [b2ChainShape.cpp <156:11 156:20>]
REFERENCE_USAGE bool b2ChainShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> int32 b2ChainShape::m_count [b2ChainShape.cpp <156:24 156:30>]
LOCAL_SYMBOL: b2ChainShape.cpp<158:14> [b2ChainShape.cpp <158:14 158:22>]
REFERENCE_TYPE_USAGE bool b2ChainShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2EdgeShape [b2ChainShape.cpp <158:2 158:12>]
SYMBOL_FUNCTION void b2EdgeShape::b2EdgeShape()
REFERENCE_CALL bool b2ChainShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> void b2EdgeShape::b2EdgeShape() [b2ChainShape.cpp <158:14 158:22>]
LOCAL_SYMBOL: b2ChainShape.cpp<160:8> [b2ChainShape.cpp <160:8 160:9>]
REFERENCE_TYPE_USAGE bool b2ChainShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> int32 [b2ChainShape.cpp <160:2 160:6>]
LOCAL_SYMBOL: b2ChainShape.cpp<154:37> [b2ChainShape.cpp <160:13 160:22>]
LOCAL_SYMBOL: b2ChainShape.cpp<161:8> [b2ChainShape.cpp <161:8 161:9>]
REFERENCE_TYPE_USAGE bool b2ChainShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> int32 [b2ChainShape.cpp <161:2 161:6>]
LOCAL_SYMBOL: b2ChainShape.cpp<154:37> [b2ChainShape.cpp <161:13 161:22>]
LOCAL_SYMBOL: b2ChainShape.cpp<161:8> [b2ChainShape.cpp <162:6 162:7>]
REFERENCE_USAGE bool b2ChainShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> int32 b2ChainShape::m_count [b2ChainShape.cpp <162:12 162:18>]
LOCAL_SYMBOL: b2ChainShape.cpp<161:8> [b2ChainShape.cpp <164:3 164:4>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL bool b2ChainShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2ChainShape.cpp <167:22 167:22>]
REFERENCE_USAGE bool b2ChainShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 b2EdgeShape::m_vertex1 [b2ChainShape.cpp <167:12 167:20>]
LOCAL_SYMBOL: b2ChainShape.cpp<158:14> [b2ChainShape.cpp <167:2 167:10>]
REFERENCE_USAGE bool b2ChainShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 * b2ChainShape::m_vertices [b2ChainShape.cpp <167:24 167:33>]
LOCAL_SYMBOL: b2ChainShape.cpp<160:8> [b2ChainShape.cpp <167:35 167:36>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL bool b2ChainShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2ChainShape.cpp <168:22 168:22>]
REFERENCE_USAGE bool b2ChainShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 b2EdgeShape::m_vertex2 [b2ChainShape.cpp <168:12 168:20>]
LOCAL_SYMBOL: b2ChainShape.cpp<158:14> [b2ChainShape.cpp <168:2 168:10>]
REFERENCE_USAGE bool b2ChainShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 * b2ChainShape::m_vertices [b2ChainShape.cpp <168:24 168:33>]
LOCAL_SYMBOL: b2ChainShape.cpp<161:8> [b2ChainShape.cpp <168:35 168:36>]
SYMBOL_FUNCTION bool b2EdgeShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const
REFERENCE_CALL bool b2ChainShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> bool b2EdgeShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const [b2ChainShape.cpp <170:19 170:25>]
LOCAL_SYMBOL: b2ChainShape.cpp<158:14> [b2ChainShape.cpp <170:9 170:17>]
LOCAL_SYMBOL: b2ChainShape.cpp<153:45> [b2ChainShape.cpp <170:27 170:32>]
LOCAL_SYMBOL: b2ChainShape.cpp<153:75> [b2ChainShape.cpp <170:35 170:39>]
LOCAL_SYMBOL: b2ChainShape.cpp<154:27> [b2ChainShape.cpp <170:42 170:43>]
SYMBOL_METHOD public void b2ChainShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const [b2ChainShape.cpp <173:1 <173:20 173:30> 189:1>]
SYMBOL_FUNCTION void b2Shape::ComputeAABB(b2AABB *, const b2Transform &, int32) const
REFERENCE_OVERRIDE void b2ChainShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> void b2Shape::ComputeAABB(b2AABB *, const b2Transform &, int32) const [b2ChainShape.cpp <173:20 173:30>]
SYMBOL_CLASS b2ChainShape
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2ChainShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> void [b2ChainShape.cpp <173:1 173:4>]
LOCAL_SYMBOL: b2ChainShape.cpp<173:40> [b2ChainShape.cpp <173:40 173:43>]
REFERENCE_TYPE_USAGE void b2ChainShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2AABB [b2ChainShape.cpp <173:32 173:37>]
LOCAL_SYMBOL: b2ChainShape.cpp<173:65> [b2ChainShape.cpp <173:65 173:66>]
REFERENCE_TYPE_USAGE void b2ChainShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Transform [b2ChainShape.cpp <173:52 173:62>]
LOCAL_SYMBOL: b2ChainShape.cpp<173:75> [b2ChainShape.cpp <173:75 173:84>]
REFERENCE_TYPE_USAGE void b2ChainShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> int32 [b2ChainShape.cpp <173:69 173:73>]
LOCAL_SYMBOL: b2ChainShape.cpp<173:75> [b2ChainShape.cpp <175:11 175:20>]
REFERENCE_USAGE void b2ChainShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> int32 b2ChainShape::m_count [b2ChainShape.cpp <175:24 175:30>]
LOCAL_SYMBOL: b2ChainShape.cpp<177:8> [b2ChainShape.cpp <177:8 177:9>]
REFERENCE_TYPE_USAGE void b2ChainShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> int32 [b2ChainShape.cpp <177:2 177:6>]
LOCAL_SYMBOL: b2ChainShape.cpp<173:75> [b2ChainShape.cpp <177:13 177:22>]
LOCAL_SYMBOL: b2ChainShape.cpp<178:8> [b2ChainShape.cpp <178:8 178:9>]
REFERENCE_TYPE_USAGE void b2ChainShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> int32 [b2ChainShape.cpp <178:2 178:6>]
LOCAL_SYMBOL: b2ChainShape.cpp<173:75> [b2ChainShape.cpp <178:13 178:22>]
LOCAL_SYMBOL: b2ChainShape.cpp<178:8> [b2ChainShape.cpp <179:6 179:7>]
REFERENCE_USAGE void b2ChainShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> int32 b2ChainShape::m_count [b2ChainShape.cpp <179:12 179:18>]
LOCAL_SYMBOL: b2ChainShape.cpp<178:8> [b2ChainShape.cpp <181:3 181:4>]
LOCAL_SYMBOL: b2ChainShape.cpp<184:9> [b2ChainShape.cpp <184:9 184:10>]
REFERENCE_TYPE_USAGE void b2ChainShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 [b2ChainShape.cpp <184:2 184:7>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &)
REFERENCE_CALL void b2ChainShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2ChainShape.cpp <184:14 184:18>]
LOCAL_SYMBOL: b2ChainShape.cpp<173:65> [b2ChainShape.cpp <184:20 184:21>]
REFERENCE_USAGE void b2ChainShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 * b2ChainShape::m_vertices [b2ChainShape.cpp <184:24 184:33>]
LOCAL_SYMBOL: b2ChainShape.cpp<177:8> [b2ChainShape.cpp <184:35 184:36>]
LOCAL_SYMBOL: b2ChainShape.cpp<185:9> [b2ChainShape.cpp <185:9 185:10>]
REFERENCE_TYPE_USAGE void b2ChainShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 [b2ChainShape.cpp <185:2 185:7>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &)
REFERENCE_CALL void b2ChainShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2ChainShape.cpp <185:14 185:18>]
LOCAL_SYMBOL: b2ChainShape.cpp<173:65> [b2ChainShape.cpp <185:20 185:21>]
REFERENCE_USAGE void b2ChainShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 * b2ChainShape::m_vertices [b2ChainShape.cpp <185:24 185:33>]
LOCAL_SYMBOL: b2ChainShape.cpp<178:8> [b2ChainShape.cpp <185:35 185:36>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2ChainShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2ChainShape.cpp <187:19 187:19>]
REFERENCE_USAGE void b2ChainShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 b2AABB::lowerBound [b2ChainShape.cpp <187:8 187:17>]
LOCAL_SYMBOL: b2ChainShape.cpp<173:40> [b2ChainShape.cpp <187:2 187:5>]
SYMBOL_FUNCTION b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2ChainShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) [b2ChainShape.cpp <187:21 187:25>]
LOCAL_SYMBOL: b2ChainShape.cpp<184:9> [b2ChainShape.cpp <187:27 187:28>]
LOCAL_SYMBOL: b2ChainShape.cpp<185:9> [b2ChainShape.cpp <187:31 187:32>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2ChainShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2ChainShape.cpp <188:19 188:19>]
REFERENCE_USAGE void b2ChainShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 b2AABB::upperBound [b2ChainShape.cpp <188:8 188:17>]
LOCAL_SYMBOL: b2ChainShape.cpp<173:40> [b2ChainShape.cpp <188:2 188:5>]
SYMBOL_FUNCTION b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2ChainShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) [b2ChainShape.cpp <188:21 188:25>]
LOCAL_SYMBOL: b2ChainShape.cpp<184:9> [b2ChainShape.cpp <188:27 188:28>]
LOCAL_SYMBOL: b2ChainShape.cpp<185:9> [b2ChainShape.cpp <188:31 188:32>]
SYMBOL_METHOD public void b2ChainShape::ComputeMass(b2MassData *, float32) const [b2ChainShape.cpp <191:1 <191:20 191:30> 198:1>]
SYMBOL_FUNCTION void b2Shape::ComputeMass(b2MassData *, float32) const
REFERENCE_OVERRIDE void b2ChainShape::ComputeMass(b2MassData *, float32) const -> void b2Shape::ComputeMass(b2MassData *, float32) const [b2ChainShape.cpp <191:20 191:30>]
SYMBOL_CLASS b2ChainShape
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2ChainShape::ComputeMass(b2MassData *, float32) const -> void [b2ChainShape.cpp <191:1 191:4>]
LOCAL_SYMBOL: b2ChainShape.cpp<191:44> [b2ChainShape.cpp <191:44 191:51>]
REFERENCE_TYPE_USAGE void b2ChainShape::ComputeMass(b2MassData *, float32) const -> b2MassData [b2ChainShape.cpp <191:32 191:41>]
LOCAL_SYMBOL: b2ChainShape.cpp<191:62> [b2ChainShape.cpp <191:62 191:68>]
REFERENCE_TYPE_USAGE void b2ChainShape::ComputeMass(b2MassData *, float32) const -> float32 [b2ChainShape.cpp <191:54 191:60>]
LOCAL_SYMBOL: b2ChainShape.cpp<191:62> [b2ChainShape.cpp <193:14 193:20>]
REFERENCE_USAGE void b2ChainShape::ComputeMass(b2MassData *, float32) const -> float32 b2MassData::mass [b2ChainShape.cpp <195:12 195:15>]
LOCAL_SYMBOL: b2ChainShape.cpp<191:44> [b2ChainShape.cpp <195:2 195:9>]
SYMBOL_FUNCTION void b2Vec2::SetZero()
REFERENCE_CALL void b2ChainShape::ComputeMass(b2MassData *, float32) const -> void b2Vec2::SetZero() [b2ChainShape.cpp <196:19 196:25>]
REFERENCE_USAGE void b2ChainShape::ComputeMass(b2MassData *, float32) const -> b2Vec2 b2MassData::center [b2ChainShape.cpp <196:12 196:17>]
LOCAL_SYMBOL: b2ChainShape.cpp<191:44> [b2ChainShape.cpp <196:2 196:9>]
REFERENCE_USAGE void b2ChainShape::ComputeMass(b2MassData *, float32) const -> float32 b2MassData::I [b2ChainShape.cpp <197:12 197:12>]
LOCAL_SYMBOL: b2ChainShape.cpp<191:44> [b2ChainShape.cpp <197:2 197:9>]
