FILE: b2ContactManager.cpp
FILE: b2ContactManager.cpp
COMMENT: comment [b2ContactManager.cpp <1:1 17:3>]
FILE: b2ContactManager.cpp
FILE: b2ContactManager.cpp
FILE: b2ContactManager.cpp
FILE: b2ContactManager.cpp
FILE: b2ContactManager.cpp
COMMENT: comment [b2ContactManager.cpp <49:2 49:27>]
COMMENT: comment [b2ContactManager.cpp <65:2 65:23>]
COMMENT: comment [b2ContactManager.cpp <81:2 81:23>]
COMMENT: comment [b2ContactManager.cpp <97:2 97:22>]
COMMENT: comment [b2ContactManager.cpp <102:1 102:64>]
COMMENT: comment [b2ContactManager.cpp <103:1 103:61>]
COMMENT: comment [b2ContactManager.cpp <104:1 104:17>]
COMMENT: comment [b2ContactManager.cpp <107:2 107:27>]
COMMENT: comment [b2ContactManager.cpp <118:3 118:44>]
COMMENT: comment [b2ContactManager.cpp <121:4 121:35>]
COMMENT: comment [b2ContactManager.cpp <130:4 130:28>]
COMMENT: comment [b2ContactManager.cpp <139:4 139:32>]
COMMENT: comment [b2ContactManager.cpp <146:3 146:74>]
COMMENT: comment [b2ContactManager.cpp <157:3 157:72>]
COMMENT: comment [b2ContactManager.cpp <166:3 166:27>]
COMMENT: comment [b2ContactManager.cpp <191:2 191:39>]
COMMENT: comment [b2ContactManager.cpp <197:2 197:74>]
COMMENT: comment [b2ContactManager.cpp <198:2 198:35>]
COMMENT: comment [b2ContactManager.cpp <199:2 199:34>]
COMMENT: comment [b2ContactManager.cpp <212:5 212:33>]
COMMENT: comment [b2ContactManager.cpp <218:5 218:33>]
COMMENT: comment [b2ContactManager.cpp <226:2 226:67>]
COMMENT: comment [b2ContactManager.cpp <232:2 232:26>]
COMMENT: comment [b2ContactManager.cpp <238:2 238:22>]
COMMENT: comment [b2ContactManager.cpp <245:2 245:40>]
COMMENT: comment [b2ContactManager.cpp <253:2 253:27>]
COMMENT: comment [b2ContactManager.cpp <262:2 262:29>]
COMMENT: comment [b2ContactManager.cpp <264:2 264:22>]
COMMENT: comment [b2ContactManager.cpp <276:2 276:22>]
COMMENT: comment [b2ContactManager.cpp <288:2 288:23>]
SYMBOL_GLOBAL_VARIABLE b2ContactFilter b2_defaultFilter [b2ContactManager.cpp <25:17 25:32>]
REFERENCE_TYPE_USAGE b2ContactFilter b2_defaultFilter -> b2ContactFilter [b2ContactManager.cpp <25:1 25:15>]
SYMBOL_FUNCTION void b2ContactFilter::b2ContactFilter()
REFERENCE_CALL b2ContactFilter b2_defaultFilter -> void b2ContactFilter::b2ContactFilter() [b2ContactManager.cpp <25:17 25:32>]
SYMBOL_GLOBAL_VARIABLE b2ContactListener b2_defaultListener [b2ContactManager.cpp <26:19 26:36>]
REFERENCE_TYPE_USAGE b2ContactListener b2_defaultListener -> b2ContactListener [b2ContactManager.cpp <26:1 26:17>]
SYMBOL_FUNCTION void b2ContactListener::b2ContactListener()
REFERENCE_CALL b2ContactListener b2_defaultListener -> void b2ContactListener::b2ContactListener() [b2ContactManager.cpp <26:19 26:36>]
SYMBOL_METHOD public void b2ContactManager::b2ContactManager() [b2ContactManager.cpp <28:1 <28:19 28:34> 35:1>]
SYMBOL_CLASS b2ContactManager
REFERENCE_USAGE void b2ContactManager::b2ContactManager() -> b2BroadPhase b2ContactManager::m_broadPhase [b2ContactManager.cpp <28:19 28:34>]
SYMBOL_FUNCTION void b2BroadPhase::b2BroadPhase()
REFERENCE_CALL void b2ContactManager::b2ContactManager() -> void b2BroadPhase::b2BroadPhase() [b2ContactManager.cpp <28:19 28:34>]
REFERENCE_USAGE void b2ContactManager::b2ContactManager() -> b2Contact * b2ContactManager::m_contactList [b2ContactManager.cpp <30:2 30:14>]
REFERENCE_USAGE void b2ContactManager::b2ContactManager() -> int32 b2ContactManager::m_contactCount [b2ContactManager.cpp <31:2 31:15>]
REFERENCE_USAGE void b2ContactManager::b2ContactManager() -> b2ContactFilter * b2ContactManager::m_contactFilter [b2ContactManager.cpp <32:2 32:16>]
REFERENCE_USAGE void b2ContactManager::b2ContactManager() -> b2ContactFilter b2_defaultFilter [b2ContactManager.cpp <32:21 32:36>]
REFERENCE_USAGE void b2ContactManager::b2ContactManager() -> b2ContactListener * b2ContactManager::m_contactListener [b2ContactManager.cpp <33:2 33:18>]
REFERENCE_USAGE void b2ContactManager::b2ContactManager() -> b2ContactListener b2_defaultListener [b2ContactManager.cpp <33:23 33:40>]
REFERENCE_USAGE void b2ContactManager::b2ContactManager() -> b2BlockAllocator * b2ContactManager::m_allocator [b2ContactManager.cpp <34:2 34:12>]
SYMBOL_METHOD public void b2ContactManager::Destroy(b2Contact *) [b2ContactManager.cpp <37:1 <37:24 37:30> 100:1>]
SYMBOL_CLASS b2ContactManager
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2ContactManager::Destroy(b2Contact *) -> void [b2ContactManager.cpp <37:1 37:4>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <37:43 37:43>]
REFERENCE_TYPE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2Contact [b2ContactManager.cpp <37:32 37:40>]
LOCAL_SYMBOL: b2ContactManager.cpp<39:13> [b2ContactManager.cpp <39:13 39:20>]
REFERENCE_TYPE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2Fixture [b2ContactManager.cpp <39:2 39:10>]
SYMBOL_FUNCTION b2Fixture * b2Contact::GetFixtureA()
REFERENCE_CALL void b2ContactManager::Destroy(b2Contact *) -> b2Fixture * b2Contact::GetFixtureA() [b2ContactManager.cpp <39:27 39:37>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <39:24 39:24>]
LOCAL_SYMBOL: b2ContactManager.cpp<40:13> [b2ContactManager.cpp <40:13 40:20>]
REFERENCE_TYPE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2Fixture [b2ContactManager.cpp <40:2 40:10>]
SYMBOL_FUNCTION b2Fixture * b2Contact::GetFixtureB()
REFERENCE_CALL void b2ContactManager::Destroy(b2Contact *) -> b2Fixture * b2Contact::GetFixtureB() [b2ContactManager.cpp <40:27 40:37>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <40:24 40:24>]
LOCAL_SYMBOL: b2ContactManager.cpp<41:10> [b2ContactManager.cpp <41:10 41:14>]
REFERENCE_TYPE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2Body [b2ContactManager.cpp <41:2 41:7>]
SYMBOL_FUNCTION b2Body * b2Fixture::GetBody()
REFERENCE_CALL void b2ContactManager::Destroy(b2Contact *) -> b2Body * b2Fixture::GetBody() [b2ContactManager.cpp <41:28 41:34>]
LOCAL_SYMBOL: b2ContactManager.cpp<39:13> [b2ContactManager.cpp <41:18 41:25>]
LOCAL_SYMBOL: b2ContactManager.cpp<42:10> [b2ContactManager.cpp <42:10 42:14>]
REFERENCE_TYPE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2Body [b2ContactManager.cpp <42:2 42:7>]
SYMBOL_FUNCTION b2Body * b2Fixture::GetBody()
REFERENCE_CALL void b2ContactManager::Destroy(b2Contact *) -> b2Body * b2Fixture::GetBody() [b2ContactManager.cpp <42:28 42:34>]
LOCAL_SYMBOL: b2ContactManager.cpp<40:13> [b2ContactManager.cpp <42:18 42:25>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactListener * b2ContactManager::m_contactListener [b2ContactManager.cpp <44:6 44:22>]
SYMBOL_FUNCTION bool b2Contact::IsTouching() const
REFERENCE_CALL void b2ContactManager::Destroy(b2Contact *) -> bool b2Contact::IsTouching() const [b2ContactManager.cpp <44:30 44:39>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <44:27 44:27>]
SYMBOL_FUNCTION void b2ContactListener::EndContact(b2Contact *)
REFERENCE_CALL void b2ContactManager::Destroy(b2Contact *) -> void b2ContactListener::EndContact(b2Contact *) [b2ContactManager.cpp <46:22 46:31>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactListener * b2ContactManager::m_contactListener [b2ContactManager.cpp <46:3 46:19>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <46:33 46:33>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2Contact * b2Contact::m_prev [b2ContactManager.cpp <50:9 50:14>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <50:6 50:6>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2Contact * b2Contact::m_next [b2ContactManager.cpp <52:14 52:19>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2Contact * b2Contact::m_prev [b2ContactManager.cpp <52:6 52:11>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <52:3 52:3>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2Contact * b2Contact::m_next [b2ContactManager.cpp <52:26 52:31>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <52:23 52:23>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2Contact * b2Contact::m_next [b2ContactManager.cpp <55:9 55:14>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <55:6 55:6>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2Contact * b2Contact::m_prev [b2ContactManager.cpp <57:14 57:19>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2Contact * b2Contact::m_next [b2ContactManager.cpp <57:6 57:11>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <57:3 57:3>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2Contact * b2Contact::m_prev [b2ContactManager.cpp <57:26 57:31>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <57:23 57:23>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <60:6 60:6>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2Contact * b2ContactManager::m_contactList [b2ContactManager.cpp <60:11 60:23>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2Contact * b2ContactManager::m_contactList [b2ContactManager.cpp <62:3 62:15>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2Contact * b2Contact::m_next [b2ContactManager.cpp <62:22 62:27>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <62:19 62:19>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge * b2ContactEdge::prev [b2ContactManager.cpp <66:17 66:20>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge b2Contact::m_nodeA [b2ContactManager.cpp <66:9 66:15>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <66:6 66:6>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge * b2ContactEdge::next [b2ContactManager.cpp <68:20 68:23>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge * b2ContactEdge::prev [b2ContactManager.cpp <68:14 68:17>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge b2Contact::m_nodeA [b2ContactManager.cpp <68:6 68:12>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <68:3 68:3>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge * b2ContactEdge::next [b2ContactManager.cpp <68:38 68:41>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge b2Contact::m_nodeA [b2ContactManager.cpp <68:30 68:36>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <68:27 68:27>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge * b2ContactEdge::next [b2ContactManager.cpp <71:17 71:20>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge b2Contact::m_nodeA [b2ContactManager.cpp <71:9 71:15>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <71:6 71:6>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge * b2ContactEdge::prev [b2ContactManager.cpp <73:20 73:23>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge * b2ContactEdge::next [b2ContactManager.cpp <73:14 73:17>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge b2Contact::m_nodeA [b2ContactManager.cpp <73:6 73:12>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <73:3 73:3>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge * b2ContactEdge::prev [b2ContactManager.cpp <73:38 73:41>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge b2Contact::m_nodeA [b2ContactManager.cpp <73:30 73:36>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <73:27 73:27>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge b2Contact::m_nodeA [b2ContactManager.cpp <76:10 76:16>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <76:7 76:7>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge * b2Body::m_contactList [b2ContactManager.cpp <76:28 76:40>]
LOCAL_SYMBOL: b2ContactManager.cpp<41:10> [b2ContactManager.cpp <76:21 76:25>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge * b2Body::m_contactList [b2ContactManager.cpp <78:10 78:22>]
LOCAL_SYMBOL: b2ContactManager.cpp<41:10> [b2ContactManager.cpp <78:3 78:7>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge * b2ContactEdge::next [b2ContactManager.cpp <78:37 78:40>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge b2Contact::m_nodeA [b2ContactManager.cpp <78:29 78:35>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <78:26 78:26>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge * b2ContactEdge::prev [b2ContactManager.cpp <82:17 82:20>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge b2Contact::m_nodeB [b2ContactManager.cpp <82:9 82:15>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <82:6 82:6>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge * b2ContactEdge::next [b2ContactManager.cpp <84:20 84:23>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge * b2ContactEdge::prev [b2ContactManager.cpp <84:14 84:17>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge b2Contact::m_nodeB [b2ContactManager.cpp <84:6 84:12>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <84:3 84:3>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge * b2ContactEdge::next [b2ContactManager.cpp <84:38 84:41>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge b2Contact::m_nodeB [b2ContactManager.cpp <84:30 84:36>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <84:27 84:27>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge * b2ContactEdge::next [b2ContactManager.cpp <87:17 87:20>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge b2Contact::m_nodeB [b2ContactManager.cpp <87:9 87:15>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <87:6 87:6>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge * b2ContactEdge::prev [b2ContactManager.cpp <89:20 89:23>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge * b2ContactEdge::next [b2ContactManager.cpp <89:14 89:17>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge b2Contact::m_nodeB [b2ContactManager.cpp <89:6 89:12>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <89:3 89:3>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge * b2ContactEdge::prev [b2ContactManager.cpp <89:38 89:41>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge b2Contact::m_nodeB [b2ContactManager.cpp <89:30 89:36>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <89:27 89:27>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge b2Contact::m_nodeB [b2ContactManager.cpp <92:10 92:16>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <92:7 92:7>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge * b2Body::m_contactList [b2ContactManager.cpp <92:28 92:40>]
LOCAL_SYMBOL: b2ContactManager.cpp<42:10> [b2ContactManager.cpp <92:21 92:25>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge * b2Body::m_contactList [b2ContactManager.cpp <94:10 94:22>]
LOCAL_SYMBOL: b2ContactManager.cpp<42:10> [b2ContactManager.cpp <94:3 94:7>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge * b2ContactEdge::next [b2ContactManager.cpp <94:37 94:40>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2ContactEdge b2Contact::m_nodeB [b2ContactManager.cpp <94:29 94:35>]
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <94:26 94:26>]
SYMBOL_FUNCTION static void b2Contact::Destroy(b2Contact *, b2BlockAllocator *)
REFERENCE_CALL void b2ContactManager::Destroy(b2Contact *) -> static void b2Contact::Destroy(b2Contact *, b2BlockAllocator *) [b2ContactManager.cpp <98:13 98:19>]
SYMBOL_CLASS b2Contact
LOCAL_SYMBOL: b2ContactManager.cpp<37:43> [b2ContactManager.cpp <98:21 98:21>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> b2BlockAllocator * b2ContactManager::m_allocator [b2ContactManager.cpp <98:24 98:34>]
REFERENCE_USAGE void b2ContactManager::Destroy(b2Contact *) -> int32 b2ContactManager::m_contactCount [b2ContactManager.cpp <99:4 99:17>]
SYMBOL_METHOD public void b2ContactManager::Collide() [b2ContactManager.cpp <105:1 <105:24 105:30> 170:1>]
SYMBOL_CLASS b2ContactManager
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2ContactManager::Collide() -> void [b2ContactManager.cpp <105:1 105:4>]
LOCAL_SYMBOL: b2ContactManager.cpp<108:13> [b2ContactManager.cpp <108:13 108:13>]
REFERENCE_TYPE_USAGE void b2ContactManager::Collide() -> b2Contact [b2ContactManager.cpp <108:2 108:10>]
REFERENCE_USAGE void b2ContactManager::Collide() -> b2Contact * b2ContactManager::m_contactList [b2ContactManager.cpp <108:17 108:29>]
LOCAL_SYMBOL: b2ContactManager.cpp<108:13> [b2ContactManager.cpp <109:9 109:9>]
LOCAL_SYMBOL: b2ContactManager.cpp<111:14> [b2ContactManager.cpp <111:14 111:21>]
REFERENCE_TYPE_USAGE void b2ContactManager::Collide() -> b2Fixture [b2ContactManager.cpp <111:3 111:11>]
SYMBOL_FUNCTION b2Fixture * b2Contact::GetFixtureA()
REFERENCE_CALL void b2ContactManager::Collide() -> b2Fixture * b2Contact::GetFixtureA() [b2ContactManager.cpp <111:28 111:38>]
LOCAL_SYMBOL: b2ContactManager.cpp<108:13> [b2ContactManager.cpp <111:25 111:25>]
LOCAL_SYMBOL: b2ContactManager.cpp<112:14> [b2ContactManager.cpp <112:14 112:21>]
REFERENCE_TYPE_USAGE void b2ContactManager::Collide() -> b2Fixture [b2ContactManager.cpp <112:3 112:11>]
SYMBOL_FUNCTION b2Fixture * b2Contact::GetFixtureB()
REFERENCE_CALL void b2ContactManager::Collide() -> b2Fixture * b2Contact::GetFixtureB() [b2ContactManager.cpp <112:28 112:38>]
LOCAL_SYMBOL: b2ContactManager.cpp<108:13> [b2ContactManager.cpp <112:25 112:25>]
LOCAL_SYMBOL: b2ContactManager.cpp<113:9> [b2ContactManager.cpp <113:9 113:14>]
REFERENCE_TYPE_USAGE void b2ContactManager::Collide() -> int32 [b2ContactManager.cpp <113:3 113:7>]
SYMBOL_FUNCTION int32 b2Contact::GetChildIndexA() const
REFERENCE_CALL void b2ContactManager::Collide() -> int32 b2Contact::GetChildIndexA() const [b2ContactManager.cpp <113:21 113:34>]
LOCAL_SYMBOL: b2ContactManager.cpp<108:13> [b2ContactManager.cpp <113:18 113:18>]
LOCAL_SYMBOL: b2ContactManager.cpp<114:9> [b2ContactManager.cpp <114:9 114:14>]
REFERENCE_TYPE_USAGE void b2ContactManager::Collide() -> int32 [b2ContactManager.cpp <114:3 114:7>]
SYMBOL_FUNCTION int32 b2Contact::GetChildIndexB() const
REFERENCE_CALL void b2ContactManager::Collide() -> int32 b2Contact::GetChildIndexB() const [b2ContactManager.cpp <114:21 114:34>]
LOCAL_SYMBOL: b2ContactManager.cpp<108:13> [b2ContactManager.cpp <114:18 114:18>]
LOCAL_SYMBOL: b2ContactManager.cpp<115:11> [b2ContactManager.cpp <115:11 115:15>]
REFERENCE_TYPE_USAGE void b2ContactManager::Collide() -> b2Body [b2ContactManager.cpp <115:3 115:8>]
SYMBOL_FUNCTION b2Body * b2Fixture::GetBody()
REFERENCE_CALL void b2ContactManager::Collide() -> b2Body * b2Fixture::GetBody() [b2ContactManager.cpp <115:29 115:35>]
LOCAL_SYMBOL: b2ContactManager.cpp<111:14> [b2ContactManager.cpp <115:19 115:26>]
LOCAL_SYMBOL: b2ContactManager.cpp<116:11> [b2ContactManager.cpp <116:11 116:15>]
REFERENCE_TYPE_USAGE void b2ContactManager::Collide() -> b2Body [b2ContactManager.cpp <116:3 116:8>]
SYMBOL_FUNCTION b2Body * b2Fixture::GetBody()
REFERENCE_CALL void b2ContactManager::Collide() -> b2Body * b2Fixture::GetBody() [b2ContactManager.cpp <116:29 116:35>]
LOCAL_SYMBOL: b2ContactManager.cpp<112:14> [b2ContactManager.cpp <116:19 116:26>]
REFERENCE_USAGE void b2ContactManager::Collide() -> uint32 b2Contact::m_flags [b2ContactManager.cpp <119:10 119:16>]
LOCAL_SYMBOL: b2ContactManager.cpp<108:13> [b2ContactManager.cpp <119:7 119:7>]
REFERENCE_USAGE void b2ContactManager::Collide() -> b2Contact::anonymous enum (b2Contact.h<155:2>)::e_filterFlag [b2ContactManager.cpp <119:31 119:42>]
SYMBOL_CLASS b2Contact
SYMBOL_FUNCTION bool b2Body::ShouldCollide(const b2Body *) const
REFERENCE_CALL void b2ContactManager::Collide() -> bool b2Body::ShouldCollide(const b2Body *) const [b2ContactManager.cpp <122:15 122:27>]
LOCAL_SYMBOL: b2ContactManager.cpp<116:11> [b2ContactManager.cpp <122:8 122:12>]
LOCAL_SYMBOL: b2ContactManager.cpp<115:11> [b2ContactManager.cpp <122:29 122:33>]
LOCAL_SYMBOL: b2ContactManager.cpp<124:16> [b2ContactManager.cpp <124:16 124:20>]
REFERENCE_TYPE_USAGE void b2ContactManager::Collide() -> b2Contact [b2ContactManager.cpp <124:5 124:13>]
LOCAL_SYMBOL: b2ContactManager.cpp<108:13> [b2ContactManager.cpp <124:24 124:24>]
LOCAL_SYMBOL: b2ContactManager.cpp<108:13> [b2ContactManager.cpp <125:5 125:5>]
SYMBOL_FUNCTION b2Contact * b2Contact::GetNext()
REFERENCE_CALL void b2ContactManager::Collide() -> b2Contact * b2Contact::GetNext() [b2ContactManager.cpp <125:16 125:22>]
LOCAL_SYMBOL: b2ContactManager.cpp<124:16> [b2ContactManager.cpp <125:9 125:13>]
SYMBOL_FUNCTION void b2ContactManager::Destroy(b2Contact *)
REFERENCE_CALL void b2ContactManager::Collide() -> void b2ContactManager::Destroy(b2Contact *) [b2ContactManager.cpp <126:5 126:11>]
LOCAL_SYMBOL: b2ContactManager.cpp<124:16> [b2ContactManager.cpp <126:13 126:17>]
REFERENCE_USAGE void b2ContactManager::Collide() -> b2ContactFilter * b2ContactManager::m_contactFilter [b2ContactManager.cpp <131:8 131:22>]
SYMBOL_FUNCTION bool b2ContactFilter::ShouldCollide(b2Fixture *, b2Fixture *)
REFERENCE_CALL void b2ContactManager::Collide() -> bool b2ContactFilter::ShouldCollide(b2Fixture *, b2Fixture *) [b2ContactManager.cpp <131:44 131:56>]
REFERENCE_USAGE void b2ContactManager::Collide() -> b2ContactFilter * b2ContactManager::m_contactFilter [b2ContactManager.cpp <131:27 131:41>]
LOCAL_SYMBOL: b2ContactManager.cpp<111:14> [b2ContactManager.cpp <131:58 131:65>]
LOCAL_SYMBOL: b2ContactManager.cpp<112:14> [b2ContactManager.cpp <131:68 131:75>]
LOCAL_SYMBOL: b2ContactManager.cpp<133:16> [b2ContactManager.cpp <133:16 133:20>]
REFERENCE_TYPE_USAGE void b2ContactManager::Collide() -> b2Contact [b2ContactManager.cpp <133:5 133:13>]
LOCAL_SYMBOL: b2ContactManager.cpp<108:13> [b2ContactManager.cpp <133:24 133:24>]
LOCAL_SYMBOL: b2ContactManager.cpp<108:13> [b2ContactManager.cpp <134:5 134:5>]
SYMBOL_FUNCTION b2Contact * b2Contact::GetNext()
REFERENCE_CALL void b2ContactManager::Collide() -> b2Contact * b2Contact::GetNext() [b2ContactManager.cpp <134:16 134:22>]
LOCAL_SYMBOL: b2ContactManager.cpp<133:16> [b2ContactManager.cpp <134:9 134:13>]
SYMBOL_FUNCTION void b2ContactManager::Destroy(b2Contact *)
REFERENCE_CALL void b2ContactManager::Collide() -> void b2ContactManager::Destroy(b2Contact *) [b2ContactManager.cpp <135:5 135:11>]
LOCAL_SYMBOL: b2ContactManager.cpp<133:16> [b2ContactManager.cpp <135:13 135:17>]
REFERENCE_USAGE void b2ContactManager::Collide() -> uint32 b2Contact::m_flags [b2ContactManager.cpp <140:7 140:13>]
LOCAL_SYMBOL: b2ContactManager.cpp<108:13> [b2ContactManager.cpp <140:4 140:4>]
REFERENCE_USAGE void b2ContactManager::Collide() -> b2Contact::anonymous enum (b2Contact.h<155:2>)::e_filterFlag [b2ContactManager.cpp <140:30 140:41>]
SYMBOL_CLASS b2Contact
LOCAL_SYMBOL: b2ContactManager.cpp<143:8> [b2ContactManager.cpp <143:8 143:14>]
SYMBOL_BUILTIN_TYPE bool
REFERENCE_TYPE_USAGE void b2ContactManager::Collide() -> bool [b2ContactManager.cpp <143:3 143:6>]
SYMBOL_FUNCTION bool b2Body::IsAwake() const
REFERENCE_CALL void b2ContactManager::Collide() -> bool b2Body::IsAwake() const [b2ContactManager.cpp <143:25 143:31>]
LOCAL_SYMBOL: b2ContactManager.cpp<115:11> [b2ContactManager.cpp <143:18 143:22>]
REFERENCE_USAGE void b2ContactManager::Collide() -> b2BodyType b2Body::m_type [b2ContactManager.cpp <143:45 143:50>]
LOCAL_SYMBOL: b2ContactManager.cpp<115:11> [b2ContactManager.cpp <143:38 143:42>]
REFERENCE_USAGE void b2ContactManager::Collide() -> b2BodyType::b2_staticBody [b2ContactManager.cpp <143:55 143:67>]
LOCAL_SYMBOL: b2ContactManager.cpp<144:8> [b2ContactManager.cpp <144:8 144:14>]
SYMBOL_BUILTIN_TYPE bool
REFERENCE_TYPE_USAGE void b2ContactManager::Collide() -> bool [b2ContactManager.cpp <144:3 144:6>]
SYMBOL_FUNCTION bool b2Body::IsAwake() const
REFERENCE_CALL void b2ContactManager::Collide() -> bool b2Body::IsAwake() const [b2ContactManager.cpp <144:25 144:31>]
LOCAL_SYMBOL: b2ContactManager.cpp<116:11> [b2ContactManager.cpp <144:18 144:22>]
REFERENCE_USAGE void b2ContactManager::Collide() -> b2BodyType b2Body::m_type [b2ContactManager.cpp <144:45 144:50>]
LOCAL_SYMBOL: b2ContactManager.cpp<116:11> [b2ContactManager.cpp <144:38 144:42>]
REFERENCE_USAGE void b2ContactManager::Collide() -> b2BodyType::b2_staticBody [b2ContactManager.cpp <144:55 144:67>]
LOCAL_SYMBOL: b2ContactManager.cpp<143:8> [b2ContactManager.cpp <147:7 147:13>]
LOCAL_SYMBOL: b2ContactManager.cpp<144:8> [b2ContactManager.cpp <147:27 147:33>]
LOCAL_SYMBOL: b2ContactManager.cpp<108:13> [b2ContactManager.cpp <149:4 149:4>]
SYMBOL_FUNCTION b2Contact * b2Contact::GetNext()
REFERENCE_CALL void b2ContactManager::Collide() -> b2Contact * b2Contact::GetNext() [b2ContactManager.cpp <149:11 149:17>]
LOCAL_SYMBOL: b2ContactManager.cpp<108:13> [b2ContactManager.cpp <149:8 149:8>]
LOCAL_SYMBOL: b2ContactManager.cpp<153:9> [b2ContactManager.cpp <153:9 153:16>]
REFERENCE_TYPE_USAGE void b2ContactManager::Collide() -> int32 [b2ContactManager.cpp <153:3 153:7>]
REFERENCE_USAGE void b2ContactManager::Collide() -> int32 b2FixtureProxy::proxyId [b2ContactManager.cpp <153:48 153:54>]
REFERENCE_USAGE void b2ContactManager::Collide() -> b2FixtureProxy * b2Fixture::m_proxies [b2ContactManager.cpp <153:30 153:38>]
LOCAL_SYMBOL: b2ContactManager.cpp<111:14> [b2ContactManager.cpp <153:20 153:27>]
LOCAL_SYMBOL: b2ContactManager.cpp<113:9> [b2ContactManager.cpp <153:40 153:45>]
LOCAL_SYMBOL: b2ContactManager.cpp<154:9> [b2ContactManager.cpp <154:9 154:16>]
REFERENCE_TYPE_USAGE void b2ContactManager::Collide() -> int32 [b2ContactManager.cpp <154:3 154:7>]
REFERENCE_USAGE void b2ContactManager::Collide() -> int32 b2FixtureProxy::proxyId [b2ContactManager.cpp <154:48 154:54>]
REFERENCE_USAGE void b2ContactManager::Collide() -> b2FixtureProxy * b2Fixture::m_proxies [b2ContactManager.cpp <154:30 154:38>]
LOCAL_SYMBOL: b2ContactManager.cpp<112:14> [b2ContactManager.cpp <154:20 154:27>]
LOCAL_SYMBOL: b2ContactManager.cpp<114:9> [b2ContactManager.cpp <154:40 154:45>]
LOCAL_SYMBOL: b2ContactManager.cpp<155:8> [b2ContactManager.cpp <155:8 155:14>]
SYMBOL_BUILTIN_TYPE bool
REFERENCE_TYPE_USAGE void b2ContactManager::Collide() -> bool [b2ContactManager.cpp <155:3 155:6>]
SYMBOL_FUNCTION bool b2BroadPhase::TestOverlap(int32, int32) const
REFERENCE_CALL void b2ContactManager::Collide() -> bool b2BroadPhase::TestOverlap(int32, int32) const [b2ContactManager.cpp <155:31 155:41>]
REFERENCE_USAGE void b2ContactManager::Collide() -> b2BroadPhase b2ContactManager::m_broadPhase [b2ContactManager.cpp <155:18 155:29>]
LOCAL_SYMBOL: b2ContactManager.cpp<153:9> [b2ContactManager.cpp <155:43 155:50>]
LOCAL_SYMBOL: b2ContactManager.cpp<154:9> [b2ContactManager.cpp <155:53 155:60>]
LOCAL_SYMBOL: b2ContactManager.cpp<155:8> [b2ContactManager.cpp <158:7 158:13>]
LOCAL_SYMBOL: b2ContactManager.cpp<160:15> [b2ContactManager.cpp <160:15 160:19>]
REFERENCE_TYPE_USAGE void b2ContactManager::Collide() -> b2Contact [b2ContactManager.cpp <160:4 160:12>]
LOCAL_SYMBOL: b2ContactManager.cpp<108:13> [b2ContactManager.cpp <160:23 160:23>]
LOCAL_SYMBOL: b2ContactManager.cpp<108:13> [b2ContactManager.cpp <161:4 161:4>]
SYMBOL_FUNCTION b2Contact * b2Contact::GetNext()
REFERENCE_CALL void b2ContactManager::Collide() -> b2Contact * b2Contact::GetNext() [b2ContactManager.cpp <161:15 161:21>]
LOCAL_SYMBOL: b2ContactManager.cpp<160:15> [b2ContactManager.cpp <161:8 161:12>]
SYMBOL_FUNCTION void b2ContactManager::Destroy(b2Contact *)
REFERENCE_CALL void b2ContactManager::Collide() -> void b2ContactManager::Destroy(b2Contact *) [b2ContactManager.cpp <162:4 162:10>]
LOCAL_SYMBOL: b2ContactManager.cpp<160:15> [b2ContactManager.cpp <162:12 162:16>]
SYMBOL_FUNCTION void b2Contact::Update(b2ContactListener *)
REFERENCE_CALL void b2ContactManager::Collide() -> void b2Contact::Update(b2ContactListener *) [b2ContactManager.cpp <167:6 167:11>]
LOCAL_SYMBOL: b2ContactManager.cpp<108:13> [b2ContactManager.cpp <167:3 167:3>]
REFERENCE_USAGE void b2ContactManager::Collide() -> b2ContactListener * b2ContactManager::m_contactListener [b2ContactManager.cpp <167:13 167:29>]
LOCAL_SYMBOL: b2ContactManager.cpp<108:13> [b2ContactManager.cpp <168:3 168:3>]
SYMBOL_FUNCTION b2Contact * b2Contact::GetNext()
REFERENCE_CALL void b2ContactManager::Collide() -> b2Contact * b2Contact::GetNext() [b2ContactManager.cpp <168:10 168:16>]
LOCAL_SYMBOL: b2ContactManager.cpp<108:13> [b2ContactManager.cpp <168:7 168:7>]
SYMBOL_METHOD public void b2ContactManager::FindNewContacts() [b2ContactManager.cpp <172:1 <172:24 172:38> 175:1>]
SYMBOL_CLASS b2ContactManager
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2ContactManager::FindNewContacts() -> void [b2ContactManager.cpp <172:1 172:4>]
SYMBOL_FUNCTION void b2BroadPhase::UpdatePairs<b2ContactManager>(b2ContactManager *)
REFERENCE_CALL void b2ContactManager::FindNewContacts() -> void b2BroadPhase::UpdatePairs<b2ContactManager>(b2ContactManager *) [b2ContactManager.cpp <174:15 174:25>]
REFERENCE_USAGE void b2ContactManager::FindNewContacts() -> b2BroadPhase b2ContactManager::m_broadPhase [b2ContactManager.cpp <174:2 174:13>]
SYMBOL_METHOD public void b2ContactManager::AddPair(void *, void *) [b2ContactManager.cpp <177:1 <177:24 177:30> 296:1>]
SYMBOL_CLASS b2ContactManager
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2ContactManager::AddPair(void *, void *) -> void [b2ContactManager.cpp <177:1 177:4>]
LOCAL_SYMBOL: b2ContactManager.cpp<177:38> [b2ContactManager.cpp <177:38 177:51>]
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2ContactManager::AddPair(void *, void *) -> void [b2ContactManager.cpp <177:32 177:35>]
LOCAL_SYMBOL: b2ContactManager.cpp<177:60> [b2ContactManager.cpp <177:60 177:73>]
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2ContactManager::AddPair(void *, void *) -> void [b2ContactManager.cpp <177:54 177:57>]
LOCAL_SYMBOL: b2ContactManager.cpp<179:18> [b2ContactManager.cpp <179:18 179:23>]
REFERENCE_TYPE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2FixtureProxy [b2ContactManager.cpp <179:2 179:15>]
REFERENCE_TYPE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2FixtureProxy [b2ContactManager.cpp <179:28 179:41>]
LOCAL_SYMBOL: b2ContactManager.cpp<177:38> [b2ContactManager.cpp <179:44 179:57>]
LOCAL_SYMBOL: b2ContactManager.cpp<180:18> [b2ContactManager.cpp <180:18 180:23>]
REFERENCE_TYPE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2FixtureProxy [b2ContactManager.cpp <180:2 180:15>]
REFERENCE_TYPE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2FixtureProxy [b2ContactManager.cpp <180:28 180:41>]
LOCAL_SYMBOL: b2ContactManager.cpp<177:60> [b2ContactManager.cpp <180:44 180:57>]
LOCAL_SYMBOL: b2ContactManager.cpp<182:13> [b2ContactManager.cpp <182:13 182:20>]
REFERENCE_TYPE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Fixture [b2ContactManager.cpp <182:2 182:10>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Fixture * b2FixtureProxy::fixture [b2ContactManager.cpp <182:32 182:38>]
LOCAL_SYMBOL: b2ContactManager.cpp<179:18> [b2ContactManager.cpp <182:24 182:29>]
LOCAL_SYMBOL: b2ContactManager.cpp<183:13> [b2ContactManager.cpp <183:13 183:20>]
REFERENCE_TYPE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Fixture [b2ContactManager.cpp <183:2 183:10>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Fixture * b2FixtureProxy::fixture [b2ContactManager.cpp <183:32 183:38>]
LOCAL_SYMBOL: b2ContactManager.cpp<180:18> [b2ContactManager.cpp <183:24 183:29>]
LOCAL_SYMBOL: b2ContactManager.cpp<185:8> [b2ContactManager.cpp <185:8 185:13>]
REFERENCE_TYPE_USAGE void b2ContactManager::AddPair(void *, void *) -> int32 [b2ContactManager.cpp <185:2 185:6>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> int32 b2FixtureProxy::childIndex [b2ContactManager.cpp <185:25 185:34>]
LOCAL_SYMBOL: b2ContactManager.cpp<179:18> [b2ContactManager.cpp <185:17 185:22>]
LOCAL_SYMBOL: b2ContactManager.cpp<186:8> [b2ContactManager.cpp <186:8 186:13>]
REFERENCE_TYPE_USAGE void b2ContactManager::AddPair(void *, void *) -> int32 [b2ContactManager.cpp <186:2 186:6>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> int32 b2FixtureProxy::childIndex [b2ContactManager.cpp <186:25 186:34>]
LOCAL_SYMBOL: b2ContactManager.cpp<180:18> [b2ContactManager.cpp <186:17 186:22>]
LOCAL_SYMBOL: b2ContactManager.cpp<188:10> [b2ContactManager.cpp <188:10 188:14>]
REFERENCE_TYPE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Body [b2ContactManager.cpp <188:2 188:7>]
SYMBOL_FUNCTION b2Body * b2Fixture::GetBody()
REFERENCE_CALL void b2ContactManager::AddPair(void *, void *) -> b2Body * b2Fixture::GetBody() [b2ContactManager.cpp <188:28 188:34>]
LOCAL_SYMBOL: b2ContactManager.cpp<182:13> [b2ContactManager.cpp <188:18 188:25>]
LOCAL_SYMBOL: b2ContactManager.cpp<189:10> [b2ContactManager.cpp <189:10 189:14>]
REFERENCE_TYPE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Body [b2ContactManager.cpp <189:2 189:7>]
SYMBOL_FUNCTION b2Body * b2Fixture::GetBody()
REFERENCE_CALL void b2ContactManager::AddPair(void *, void *) -> b2Body * b2Fixture::GetBody() [b2ContactManager.cpp <189:28 189:34>]
LOCAL_SYMBOL: b2ContactManager.cpp<183:13> [b2ContactManager.cpp <189:18 189:25>]
LOCAL_SYMBOL: b2ContactManager.cpp<188:10> [b2ContactManager.cpp <192:6 192:10>]
LOCAL_SYMBOL: b2ContactManager.cpp<189:10> [b2ContactManager.cpp <192:15 192:19>]
LOCAL_SYMBOL: b2ContactManager.cpp<200:17> [b2ContactManager.cpp <200:17 200:20>]
REFERENCE_TYPE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge [b2ContactManager.cpp <200:2 200:14>]
SYMBOL_FUNCTION b2ContactEdge * b2Body::GetContactList()
REFERENCE_CALL void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge * b2Body::GetContactList() [b2ContactManager.cpp <200:31 200:44>]
LOCAL_SYMBOL: b2ContactManager.cpp<189:10> [b2ContactManager.cpp <200:24 200:28>]
LOCAL_SYMBOL: b2ContactManager.cpp<200:17> [b2ContactManager.cpp <201:9 201:12>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Body * b2ContactEdge::other [b2ContactManager.cpp <203:13 203:17>]
LOCAL_SYMBOL: b2ContactManager.cpp<200:17> [b2ContactManager.cpp <203:7 203:10>]
LOCAL_SYMBOL: b2ContactManager.cpp<188:10> [b2ContactManager.cpp <203:22 203:26>]
LOCAL_SYMBOL: b2ContactManager.cpp<205:15> [b2ContactManager.cpp <205:15 205:16>]
REFERENCE_TYPE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Fixture [b2ContactManager.cpp <205:4 205:12>]
SYMBOL_FUNCTION b2Fixture * b2Contact::GetFixtureA()
REFERENCE_CALL void b2ContactManager::AddPair(void *, void *) -> b2Fixture * b2Contact::GetFixtureA() [b2ContactManager.cpp <205:35 205:45>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Contact * b2ContactEdge::contact [b2ContactManager.cpp <205:26 205:32>]
LOCAL_SYMBOL: b2ContactManager.cpp<200:17> [b2ContactManager.cpp <205:20 205:23>]
LOCAL_SYMBOL: b2ContactManager.cpp<206:15> [b2ContactManager.cpp <206:15 206:16>]
REFERENCE_TYPE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Fixture [b2ContactManager.cpp <206:4 206:12>]
SYMBOL_FUNCTION b2Fixture * b2Contact::GetFixtureB()
REFERENCE_CALL void b2ContactManager::AddPair(void *, void *) -> b2Fixture * b2Contact::GetFixtureB() [b2ContactManager.cpp <206:35 206:45>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Contact * b2ContactEdge::contact [b2ContactManager.cpp <206:26 206:32>]
LOCAL_SYMBOL: b2ContactManager.cpp<200:17> [b2ContactManager.cpp <206:20 206:23>]
LOCAL_SYMBOL: b2ContactManager.cpp<207:10> [b2ContactManager.cpp <207:10 207:11>]
REFERENCE_TYPE_USAGE void b2ContactManager::AddPair(void *, void *) -> int32 [b2ContactManager.cpp <207:4 207:8>]
SYMBOL_FUNCTION int32 b2Contact::GetChildIndexA() const
REFERENCE_CALL void b2ContactManager::AddPair(void *, void *) -> int32 b2Contact::GetChildIndexA() const [b2ContactManager.cpp <207:30 207:43>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Contact * b2ContactEdge::contact [b2ContactManager.cpp <207:21 207:27>]
LOCAL_SYMBOL: b2ContactManager.cpp<200:17> [b2ContactManager.cpp <207:15 207:18>]
LOCAL_SYMBOL: b2ContactManager.cpp<208:10> [b2ContactManager.cpp <208:10 208:11>]
REFERENCE_TYPE_USAGE void b2ContactManager::AddPair(void *, void *) -> int32 [b2ContactManager.cpp <208:4 208:8>]
SYMBOL_FUNCTION int32 b2Contact::GetChildIndexB() const
REFERENCE_CALL void b2ContactManager::AddPair(void *, void *) -> int32 b2Contact::GetChildIndexB() const [b2ContactManager.cpp <208:30 208:43>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Contact * b2ContactEdge::contact [b2ContactManager.cpp <208:21 208:27>]
LOCAL_SYMBOL: b2ContactManager.cpp<200:17> [b2ContactManager.cpp <208:15 208:18>]
LOCAL_SYMBOL: b2ContactManager.cpp<205:15> [b2ContactManager.cpp <210:8 210:9>]
LOCAL_SYMBOL: b2ContactManager.cpp<182:13> [b2ContactManager.cpp <210:14 210:21>]
LOCAL_SYMBOL: b2ContactManager.cpp<206:15> [b2ContactManager.cpp <210:26 210:27>]
LOCAL_SYMBOL: b2ContactManager.cpp<183:13> [b2ContactManager.cpp <210:32 210:39>]
LOCAL_SYMBOL: b2ContactManager.cpp<207:10> [b2ContactManager.cpp <210:44 210:45>]
LOCAL_SYMBOL: b2ContactManager.cpp<185:8> [b2ContactManager.cpp <210:50 210:55>]
LOCAL_SYMBOL: b2ContactManager.cpp<208:10> [b2ContactManager.cpp <210:60 210:61>]
LOCAL_SYMBOL: b2ContactManager.cpp<186:8> [b2ContactManager.cpp <210:66 210:71>]
LOCAL_SYMBOL: b2ContactManager.cpp<205:15> [b2ContactManager.cpp <216:8 216:9>]
LOCAL_SYMBOL: b2ContactManager.cpp<183:13> [b2ContactManager.cpp <216:14 216:21>]
LOCAL_SYMBOL: b2ContactManager.cpp<206:15> [b2ContactManager.cpp <216:26 216:27>]
LOCAL_SYMBOL: b2ContactManager.cpp<182:13> [b2ContactManager.cpp <216:32 216:39>]
LOCAL_SYMBOL: b2ContactManager.cpp<207:10> [b2ContactManager.cpp <216:44 216:45>]
LOCAL_SYMBOL: b2ContactManager.cpp<186:8> [b2ContactManager.cpp <216:50 216:55>]
LOCAL_SYMBOL: b2ContactManager.cpp<208:10> [b2ContactManager.cpp <216:60 216:61>]
LOCAL_SYMBOL: b2ContactManager.cpp<185:8> [b2ContactManager.cpp <216:66 216:71>]
LOCAL_SYMBOL: b2ContactManager.cpp<200:17> [b2ContactManager.cpp <223:3 223:6>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge * b2ContactEdge::next [b2ContactManager.cpp <223:16 223:19>]
LOCAL_SYMBOL: b2ContactManager.cpp<200:17> [b2ContactManager.cpp <223:10 223:13>]
SYMBOL_FUNCTION bool b2Body::ShouldCollide(const b2Body *) const
REFERENCE_CALL void b2ContactManager::AddPair(void *, void *) -> bool b2Body::ShouldCollide(const b2Body *) const [b2ContactManager.cpp <227:13 227:25>]
LOCAL_SYMBOL: b2ContactManager.cpp<189:10> [b2ContactManager.cpp <227:6 227:10>]
LOCAL_SYMBOL: b2ContactManager.cpp<188:10> [b2ContactManager.cpp <227:27 227:31>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactFilter * b2ContactManager::m_contactFilter [b2ContactManager.cpp <233:6 233:20>]
SYMBOL_FUNCTION bool b2ContactFilter::ShouldCollide(b2Fixture *, b2Fixture *)
REFERENCE_CALL void b2ContactManager::AddPair(void *, void *) -> bool b2ContactFilter::ShouldCollide(b2Fixture *, b2Fixture *) [b2ContactManager.cpp <233:42 233:54>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactFilter * b2ContactManager::m_contactFilter [b2ContactManager.cpp <233:25 233:39>]
LOCAL_SYMBOL: b2ContactManager.cpp<182:13> [b2ContactManager.cpp <233:56 233:63>]
LOCAL_SYMBOL: b2ContactManager.cpp<183:13> [b2ContactManager.cpp <233:66 233:73>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <239:13 239:13>]
REFERENCE_TYPE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Contact [b2ContactManager.cpp <239:2 239:10>]
SYMBOL_FUNCTION static b2Contact * b2Contact::Create(b2Fixture *, int32, b2Fixture *, int32, b2BlockAllocator *)
REFERENCE_CALL void b2ContactManager::AddPair(void *, void *) -> static b2Contact * b2Contact::Create(b2Fixture *, int32, b2Fixture *, int32, b2BlockAllocator *) [b2ContactManager.cpp <239:28 239:33>]
SYMBOL_CLASS b2Contact
LOCAL_SYMBOL: b2ContactManager.cpp<182:13> [b2ContactManager.cpp <239:35 239:42>]
LOCAL_SYMBOL: b2ContactManager.cpp<185:8> [b2ContactManager.cpp <239:45 239:50>]
LOCAL_SYMBOL: b2ContactManager.cpp<183:13> [b2ContactManager.cpp <239:53 239:60>]
LOCAL_SYMBOL: b2ContactManager.cpp<186:8> [b2ContactManager.cpp <239:63 239:68>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2BlockAllocator * b2ContactManager::m_allocator [b2ContactManager.cpp <239:71 239:81>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <240:6 240:6>]
LOCAL_SYMBOL: b2ContactManager.cpp<182:13> [b2ContactManager.cpp <246:2 246:9>]
SYMBOL_FUNCTION b2Fixture * b2Contact::GetFixtureA()
REFERENCE_CALL void b2ContactManager::AddPair(void *, void *) -> b2Fixture * b2Contact::GetFixtureA() [b2ContactManager.cpp <246:16 246:26>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <246:13 246:13>]
LOCAL_SYMBOL: b2ContactManager.cpp<183:13> [b2ContactManager.cpp <247:2 247:9>]
SYMBOL_FUNCTION b2Fixture * b2Contact::GetFixtureB()
REFERENCE_CALL void b2ContactManager::AddPair(void *, void *) -> b2Fixture * b2Contact::GetFixtureB() [b2ContactManager.cpp <247:16 247:26>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <247:13 247:13>]
LOCAL_SYMBOL: b2ContactManager.cpp<185:8> [b2ContactManager.cpp <248:2 248:7>]
SYMBOL_FUNCTION int32 b2Contact::GetChildIndexA() const
REFERENCE_CALL void b2ContactManager::AddPair(void *, void *) -> int32 b2Contact::GetChildIndexA() const [b2ContactManager.cpp <248:14 248:27>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <248:11 248:11>]
LOCAL_SYMBOL: b2ContactManager.cpp<186:8> [b2ContactManager.cpp <249:2 249:7>]
SYMBOL_FUNCTION int32 b2Contact::GetChildIndexB() const
REFERENCE_CALL void b2ContactManager::AddPair(void *, void *) -> int32 b2Contact::GetChildIndexB() const [b2ContactManager.cpp <249:14 249:27>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <249:11 249:11>]
LOCAL_SYMBOL: b2ContactManager.cpp<188:10> [b2ContactManager.cpp <250:2 250:6>]
SYMBOL_FUNCTION b2Body * b2Fixture::GetBody()
REFERENCE_CALL void b2ContactManager::AddPair(void *, void *) -> b2Body * b2Fixture::GetBody() [b2ContactManager.cpp <250:20 250:26>]
LOCAL_SYMBOL: b2ContactManager.cpp<182:13> [b2ContactManager.cpp <250:10 250:17>]
LOCAL_SYMBOL: b2ContactManager.cpp<189:10> [b2ContactManager.cpp <251:2 251:6>]
SYMBOL_FUNCTION b2Body * b2Fixture::GetBody()
REFERENCE_CALL void b2ContactManager::AddPair(void *, void *) -> b2Body * b2Fixture::GetBody() [b2ContactManager.cpp <251:20 251:26>]
LOCAL_SYMBOL: b2ContactManager.cpp<183:13> [b2ContactManager.cpp <251:10 251:17>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Contact * b2Contact::m_prev [b2ContactManager.cpp <254:5 254:10>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <254:2 254:2>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Contact * b2Contact::m_next [b2ContactManager.cpp <255:5 255:10>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <255:2 255:2>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Contact * b2ContactManager::m_contactList [b2ContactManager.cpp <255:14 255:26>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Contact * b2ContactManager::m_contactList [b2ContactManager.cpp <256:6 256:18>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Contact * b2Contact::m_prev [b2ContactManager.cpp <258:18 258:23>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Contact * b2ContactManager::m_contactList [b2ContactManager.cpp <258:3 258:15>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <258:27 258:27>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Contact * b2ContactManager::m_contactList [b2ContactManager.cpp <260:2 260:14>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <260:18 260:18>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Contact * b2ContactEdge::contact [b2ContactManager.cpp <265:13 265:19>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge b2Contact::m_nodeA [b2ContactManager.cpp <265:5 265:11>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <265:2 265:2>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <265:23 265:23>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Body * b2ContactEdge::other [b2ContactManager.cpp <266:13 266:17>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge b2Contact::m_nodeA [b2ContactManager.cpp <266:5 266:11>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <266:2 266:2>]
LOCAL_SYMBOL: b2ContactManager.cpp<189:10> [b2ContactManager.cpp <266:21 266:25>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge * b2ContactEdge::prev [b2ContactManager.cpp <268:13 268:16>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge b2Contact::m_nodeA [b2ContactManager.cpp <268:5 268:11>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <268:2 268:2>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge * b2ContactEdge::next [b2ContactManager.cpp <269:13 269:16>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge b2Contact::m_nodeA [b2ContactManager.cpp <269:5 269:11>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <269:2 269:2>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge * b2Body::m_contactList [b2ContactManager.cpp <269:27 269:39>]
LOCAL_SYMBOL: b2ContactManager.cpp<188:10> [b2ContactManager.cpp <269:20 269:24>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge * b2Body::m_contactList [b2ContactManager.cpp <270:13 270:25>]
LOCAL_SYMBOL: b2ContactManager.cpp<188:10> [b2ContactManager.cpp <270:6 270:10>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge * b2ContactEdge::prev [b2ContactManager.cpp <272:25 272:28>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge * b2Body::m_contactList [b2ContactManager.cpp <272:10 272:22>]
LOCAL_SYMBOL: b2ContactManager.cpp<188:10> [b2ContactManager.cpp <272:3 272:7>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge b2Contact::m_nodeA [b2ContactManager.cpp <272:36 272:42>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <272:33 272:33>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge * b2Body::m_contactList [b2ContactManager.cpp <274:9 274:21>]
LOCAL_SYMBOL: b2ContactManager.cpp<188:10> [b2ContactManager.cpp <274:2 274:6>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge b2Contact::m_nodeA [b2ContactManager.cpp <274:29 274:35>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <274:26 274:26>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Contact * b2ContactEdge::contact [b2ContactManager.cpp <277:13 277:19>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge b2Contact::m_nodeB [b2ContactManager.cpp <277:5 277:11>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <277:2 277:2>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <277:23 277:23>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2Body * b2ContactEdge::other [b2ContactManager.cpp <278:13 278:17>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge b2Contact::m_nodeB [b2ContactManager.cpp <278:5 278:11>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <278:2 278:2>]
LOCAL_SYMBOL: b2ContactManager.cpp<188:10> [b2ContactManager.cpp <278:21 278:25>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge * b2ContactEdge::prev [b2ContactManager.cpp <280:13 280:16>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge b2Contact::m_nodeB [b2ContactManager.cpp <280:5 280:11>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <280:2 280:2>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge * b2ContactEdge::next [b2ContactManager.cpp <281:13 281:16>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge b2Contact::m_nodeB [b2ContactManager.cpp <281:5 281:11>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <281:2 281:2>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge * b2Body::m_contactList [b2ContactManager.cpp <281:27 281:39>]
LOCAL_SYMBOL: b2ContactManager.cpp<189:10> [b2ContactManager.cpp <281:20 281:24>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge * b2Body::m_contactList [b2ContactManager.cpp <282:13 282:25>]
LOCAL_SYMBOL: b2ContactManager.cpp<189:10> [b2ContactManager.cpp <282:6 282:10>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge * b2ContactEdge::prev [b2ContactManager.cpp <284:25 284:28>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge * b2Body::m_contactList [b2ContactManager.cpp <284:10 284:22>]
LOCAL_SYMBOL: b2ContactManager.cpp<189:10> [b2ContactManager.cpp <284:3 284:7>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge b2Contact::m_nodeB [b2ContactManager.cpp <284:36 284:42>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <284:33 284:33>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge * b2Body::m_contactList [b2ContactManager.cpp <286:9 286:21>]
LOCAL_SYMBOL: b2ContactManager.cpp<189:10> [b2ContactManager.cpp <286:2 286:6>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> b2ContactEdge b2Contact::m_nodeB [b2ContactManager.cpp <286:29 286:35>]
LOCAL_SYMBOL: b2ContactManager.cpp<239:13> [b2ContactManager.cpp <286:26 286:26>]
SYMBOL_FUNCTION bool b2Fixture::IsSensor() const
REFERENCE_CALL void b2ContactManager::AddPair(void *, void *) -> bool b2Fixture::IsSensor() const [b2ContactManager.cpp <289:16 289:23>]
LOCAL_SYMBOL: b2ContactManager.cpp<182:13> [b2ContactManager.cpp <289:6 289:13>]
SYMBOL_FUNCTION bool b2Fixture::IsSensor() const
REFERENCE_CALL void b2ContactManager::AddPair(void *, void *) -> bool b2Fixture::IsSensor() const [b2ContactManager.cpp <289:49 289:56>]
LOCAL_SYMBOL: b2ContactManager.cpp<183:13> [b2ContactManager.cpp <289:39 289:46>]
SYMBOL_FUNCTION void b2Body::SetAwake(bool)
REFERENCE_CALL void b2ContactManager::AddPair(void *, void *) -> void b2Body::SetAwake(bool) [b2ContactManager.cpp <291:10 291:17>]
LOCAL_SYMBOL: b2ContactManager.cpp<188:10> [b2ContactManager.cpp <291:3 291:7>]
SYMBOL_FUNCTION void b2Body::SetAwake(bool)
REFERENCE_CALL void b2ContactManager::AddPair(void *, void *) -> void b2Body::SetAwake(bool) [b2ContactManager.cpp <292:10 292:17>]
LOCAL_SYMBOL: b2ContactManager.cpp<189:10> [b2ContactManager.cpp <292:3 292:7>]
REFERENCE_USAGE void b2ContactManager::AddPair(void *, void *) -> int32 b2ContactManager::m_contactCount [b2ContactManager.cpp <295:4 295:17>]
