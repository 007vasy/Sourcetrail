FILE: b2Distance.cpp
COMMENT: comment [b2Distance.cpp <1:1 17:3>]
COMMENT: comment [b2Distance.cpp <25:1 25:77>]
REFERENCE_MACRO_USAGE b2Distance.cpp -> b2Assert [b2Distance.cpp <53:4 53:11>]
REFERENCE_MACRO_USAGE b2Settings.h -> assert [b2Settings.h <31:21 31:26>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:23 34:31>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:47 34:55>]
REFERENCE_MACRO_USAGE assert.h -> __FILE__ [assert.h <34:57 34:64>]
REFERENCE_MACRO_USAGE assert.h -> __LINE__ [assert.h <34:79 34:86>]
REFERENCE_MACRO_USAGE b2Distance.cpp -> b2Assert [b2Distance.cpp <81:3 81:10>]
COMMENT: comment [b2Distance.cpp <88:14 88:40>]
COMMENT: comment [b2Distance.cpp <89:14 89:40>]
COMMENT: comment [b2Distance.cpp <90:13 90:23>]
COMMENT: comment [b2Distance.cpp <91:14 91:57>]
COMMENT: comment [b2Distance.cpp <92:16 92:27>]
COMMENT: comment [b2Distance.cpp <93:16 93:27>]
REFERENCE_MACRO_USAGE b2Distance.cpp -> b2Assert [b2Distance.cpp <102:3 102:10>]
COMMENT: comment [b2Distance.cpp <104:3 104:27>]
COMMENT: comment [b2Distance.cpp <120:3 120:75>]
COMMENT: comment [b2Distance.cpp <121:3 121:40>]
REFERENCE_MACRO_USAGE b2Distance.cpp -> b2_epsilon [b2Distance.cpp <126:74 126:83>]
REFERENCE_MACRO_USAGE b2Settings.h -> FLT_EPSILON [b2Settings.h <43:21 43:31>]
COMMENT: comment [b2Distance.cpp <128:5 128:26>]
COMMENT: comment [b2Distance.cpp <133:3 133:42>]
COMMENT: comment [b2Distance.cpp <174:6 174:31>]
COMMENT: comment [b2Distance.cpp <179:6 179:32>]
REFERENCE_MACRO_USAGE b2Distance.cpp -> b2Assert [b2Distance.cpp <185:4 185:11>]
REFERENCE_MACRO_USAGE b2Distance.cpp -> b2Assert [b2Distance.cpp <195:4 195:11>]
REFERENCE_MACRO_USAGE b2Distance.cpp -> b2Assert [b2Distance.cpp <208:4 208:11>]
REFERENCE_MACRO_USAGE b2Distance.cpp -> b2Assert [b2Distance.cpp <218:4 218:11>]
REFERENCE_MACRO_USAGE b2Distance.cpp -> b2Assert [b2Distance.cpp <237:4 237:11>]
REFERENCE_MACRO_USAGE b2Distance.cpp -> b2Assert [b2Distance.cpp <247:4 247:11>]
REFERENCE_MACRO_USAGE b2Distance.cpp -> b2Assert [b2Distance.cpp <260:4 260:11>]
COMMENT: comment [b2Distance.cpp <273:1 273:55>]
COMMENT: comment [b2Distance.cpp <274:1 274:3>]
COMMENT: comment [b2Distance.cpp <275:1 275:25>]
COMMENT: comment [b2Distance.cpp <276:1 276:15>]
COMMENT: comment [b2Distance.cpp <277:1 277:3>]
COMMENT: comment [b2Distance.cpp <278:1 278:66>]
COMMENT: comment [b2Distance.cpp <279:1 279:30>]
COMMENT: comment [b2Distance.cpp <280:1 280:17>]
COMMENT: comment [b2Distance.cpp <281:1 281:17>]
COMMENT: comment [b2Distance.cpp <282:1 282:41>]
COMMENT: comment [b2Distance.cpp <283:1 283:3>]
COMMENT: comment [b2Distance.cpp <284:1 284:24>]
COMMENT: comment [b2Distance.cpp <285:1 285:29>]
COMMENT: comment [b2Distance.cpp <286:1 286:29>]
COMMENT: comment [b2Distance.cpp <287:1 287:3>]
COMMENT: comment [b2Distance.cpp <288:1 288:10>]
COMMENT: comment [b2Distance.cpp <289:1 289:25>]
COMMENT: comment [b2Distance.cpp <290:1 290:25>]
COMMENT: comment [b2Distance.cpp <291:1 291:23>]
COMMENT: comment [b2Distance.cpp <292:1 292:3>]
COMMENT: comment [b2Distance.cpp <293:1 293:12>]
COMMENT: comment [b2Distance.cpp <294:1 294:20>]
COMMENT: comment [b2Distance.cpp <295:1 295:20>]
COMMENT: comment [b2Distance.cpp <302:2 302:14>]
COMMENT: comment [b2Distance.cpp <306:3 306:34>]
COMMENT: comment [b2Distance.cpp <312:2 312:14>]
COMMENT: comment [b2Distance.cpp <316:3 316:34>]
COMMENT: comment [b2Distance.cpp <323:2 323:27>]
COMMENT: comment [b2Distance.cpp <330:1 330:21>]
COMMENT: comment [b2Distance.cpp <331:1 331:15>]
COMMENT: comment [b2Distance.cpp <332:1 332:30>]
COMMENT: comment [b2Distance.cpp <333:1 333:30>]
COMMENT: comment [b2Distance.cpp <334:1 334:25>]
COMMENT: comment [b2Distance.cpp <341:2 341:11>]
COMMENT: comment [b2Distance.cpp <342:2 342:30>]
COMMENT: comment [b2Distance.cpp <343:2 343:30>]
COMMENT: comment [b2Distance.cpp <344:2 344:11>]
COMMENT: comment [b2Distance.cpp <351:2 351:11>]
COMMENT: comment [b2Distance.cpp <352:2 352:30>]
COMMENT: comment [b2Distance.cpp <353:2 353:30>]
COMMENT: comment [b2Distance.cpp <354:2 354:11>]
COMMENT: comment [b2Distance.cpp <361:2 361:11>]
COMMENT: comment [b2Distance.cpp <362:2 362:30>]
COMMENT: comment [b2Distance.cpp <363:2 363:30>]
COMMENT: comment [b2Distance.cpp <364:2 364:11>]
COMMENT: comment [b2Distance.cpp <371:2 371:16>]
COMMENT: comment [b2Distance.cpp <378:2 378:14>]
COMMENT: comment [b2Distance.cpp <386:2 386:8>]
COMMENT: comment [b2Distance.cpp <396:2 396:8>]
COMMENT: comment [b2Distance.cpp <407:2 407:14>]
COMMENT: comment [b2Distance.cpp <416:2 416:14>]
COMMENT: comment [b2Distance.cpp <425:2 425:8>]
COMMENT: comment [b2Distance.cpp <436:2 436:27>]
COMMENT: comment [b2Distance.cpp <456:2 456:28>]
COMMENT: comment [b2Distance.cpp <460:2 460:38>]
COMMENT: comment [b2Distance.cpp <464:2 464:60>]
COMMENT: comment [b2Distance.cpp <465:2 465:50>]
COMMENT: comment [b2Distance.cpp <469:2 469:25>]
COMMENT: comment [b2Distance.cpp <473:3 473:49>]
REFERENCE_MACRO_USAGE b2Distance.cpp -> b2Assert [b2Distance.cpp <495:4 495:11>]
COMMENT: comment [b2Distance.cpp <498:3 498:76>]
COMMENT: comment [b2Distance.cpp <504:3 504:27>]
COMMENT: comment [b2Distance.cpp <507:3 507:53>]
REFERENCE_MACRO_USAGE b2Distance.cpp -> b2_epsilon [b2Distance.cpp <508:27 508:36>]
REFERENCE_MACRO_USAGE b2Distance.cpp -> b2_epsilon [b2Distance.cpp <508:40 508:49>]
COMMENT: comment [b2Distance.cpp <510:4 510:57>]
COMMENT: comment [b2Distance.cpp <511:4 511:51>]
COMMENT: comment [b2Distance.cpp <513:4 513:66>]
COMMENT: comment [b2Distance.cpp <514:4 514:75>]
COMMENT: comment [b2Distance.cpp <515:4 515:78>]
COMMENT: comment [b2Distance.cpp <519:3 519:66>]
COMMENT: comment [b2Distance.cpp <528:3 528:70>]
COMMENT: comment [b2Distance.cpp <532:3 532:80>]
COMMENT: comment [b2Distance.cpp <543:3 543:74>]
COMMENT: comment [b2Distance.cpp <549:3 549:34>]
COMMENT: comment [b2Distance.cpp <555:2 555:20>]
COMMENT: comment [b2Distance.cpp <560:2 560:23>]
COMMENT: comment [b2Distance.cpp <563:2 563:30>]
REFERENCE_MACRO_USAGE b2Distance.cpp -> b2_epsilon [b2Distance.cpp <569:56 569:65>]
COMMENT: comment [b2Distance.cpp <571:4 571:38>]
COMMENT: comment [b2Distance.cpp <572:4 572:52>]
COMMENT: comment [b2Distance.cpp <581:4 581:55>]
COMMENT: comment [b2Distance.cpp <582:4 582:45>]
SYMBOL_GLOBAL_VARIABLE int32 b2_gjkCalls [b2Distance.cpp <26:7 26:17>]
REFERENCE_TYPE_USAGE int32 b2_gjkCalls -> int32 [b2Distance.cpp <26:1 26:5>]
SYMBOL_GLOBAL_VARIABLE int32 b2_gjkIters [b2Distance.cpp <26:20 26:30>]
REFERENCE_TYPE_USAGE int32 b2_gjkIters -> int32 [b2Distance.cpp <26:1 26:5>]
SYMBOL_GLOBAL_VARIABLE int32 b2_gjkMaxIters [b2Distance.cpp <26:33 26:46>]
REFERENCE_TYPE_USAGE int32 b2_gjkMaxIters -> int32 [b2Distance.cpp <26:1 26:5>]
SYMBOL_METHOD public void b2DistanceProxy::Set(const b2Shape *, int32) [b2Distance.cpp <28:1 <28:23 28:25> 83:1>]
SYMBOL_STRUCT b2DistanceProxy
QUALIFIER: b2DistanceProxy [b2Distance.cpp <28:6 28:20>]
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> void [b2Distance.cpp <28:1 28:4>]
LOCAL_SYMBOL: b2Distance.cpp<28:42> [b2Distance.cpp <28:42 28:46>]
REFERENCE_TYPE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> b2Shape [b2Distance.cpp <28:33 28:39>]
LOCAL_SYMBOL: b2Distance.cpp<28:55> [b2Distance.cpp <28:55 28:59>]
REFERENCE_TYPE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> int32 [b2Distance.cpp <28:49 28:53>]
SYMBOL_FUNCTION b2Shape::Type b2Shape::GetType() const
REFERENCE_CALL void b2DistanceProxy::Set(const b2Shape *, int32) -> b2Shape::Type b2Shape::GetType() const [b2Distance.cpp <30:17 30:23>]
LOCAL_SYMBOL: b2Distance.cpp<28:42> [b2Distance.cpp <30:10 30:14>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> b2Shape::Type::e_circle [b2Distance.cpp <32:16 32:23>]
SYMBOL_CLASS b2Shape
QUALIFIER: b2Shape [b2Distance.cpp <32:7 32:13>]
LOCAL_SYMBOL: b2Distance.cpp<34:25> [b2Distance.cpp <34:25 34:30>]
REFERENCE_TYPE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> b2CircleShape [b2Distance.cpp <34:10 34:22>]
REFERENCE_TYPE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> b2CircleShape [b2Distance.cpp <34:52 34:64>]
LOCAL_SYMBOL: b2Distance.cpp<28:42> [b2Distance.cpp <34:68 34:72>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> const b2Vec2 * b2DistanceProxy::m_vertices [b2Distance.cpp <35:4 35:13>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> b2Vec2 b2CircleShape::m_p [b2Distance.cpp <35:26 35:28>]
LOCAL_SYMBOL: b2Distance.cpp<34:25> [b2Distance.cpp <35:18 35:23>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> int32 b2DistanceProxy::m_count [b2Distance.cpp <36:4 36:10>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> float32 b2DistanceProxy::m_radius [b2Distance.cpp <37:4 37:11>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> float32 b2Shape::m_radius [b2Distance.cpp <37:23 37:30>]
LOCAL_SYMBOL: b2Distance.cpp<34:25> [b2Distance.cpp <37:15 37:20>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> b2Shape::Type::e_polygon [b2Distance.cpp <41:16 41:24>]
QUALIFIER: b2Shape [b2Distance.cpp <41:7 41:13>]
LOCAL_SYMBOL: b2Distance.cpp<43:26> [b2Distance.cpp <43:26 43:32>]
REFERENCE_TYPE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> b2PolygonShape [b2Distance.cpp <43:10 43:23>]
REFERENCE_TYPE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> b2PolygonShape [b2Distance.cpp <43:54 43:67>]
LOCAL_SYMBOL: b2Distance.cpp<28:42> [b2Distance.cpp <43:71 43:75>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> const b2Vec2 * b2DistanceProxy::m_vertices [b2Distance.cpp <44:4 44:13>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> b2Vec2 [] b2PolygonShape::m_vertices [b2Distance.cpp <44:26 44:35>]
LOCAL_SYMBOL: b2Distance.cpp<43:26> [b2Distance.cpp <44:17 44:23>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> int32 b2DistanceProxy::m_count [b2Distance.cpp <45:4 45:10>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> int32 b2PolygonShape::m_count [b2Distance.cpp <45:23 45:29>]
LOCAL_SYMBOL: b2Distance.cpp<43:26> [b2Distance.cpp <45:14 45:20>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> float32 b2DistanceProxy::m_radius [b2Distance.cpp <46:4 46:11>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> float32 b2Shape::m_radius [b2Distance.cpp <46:24 46:31>]
LOCAL_SYMBOL: b2Distance.cpp<43:26> [b2Distance.cpp <46:15 46:21>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> b2Shape::Type::e_chain [b2Distance.cpp <50:16 50:22>]
QUALIFIER: b2Shape [b2Distance.cpp <50:7 50:13>]
LOCAL_SYMBOL: b2Distance.cpp<52:24> [b2Distance.cpp <52:24 52:28>]
REFERENCE_TYPE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> b2ChainShape [b2Distance.cpp <52:10 52:21>]
REFERENCE_TYPE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> b2ChainShape [b2Distance.cpp <52:50 52:61>]
LOCAL_SYMBOL: b2Distance.cpp<28:42> [b2Distance.cpp <52:65 52:69>]
LOCAL_SYMBOL: b2Distance.cpp<28:55> [b2Distance.cpp <53:18 53:22>]
LOCAL_SYMBOL: b2Distance.cpp<28:55> [b2Distance.cpp <53:27 53:31>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> int32 b2ChainShape::m_count [b2Distance.cpp <53:42 53:48>]
LOCAL_SYMBOL: b2Distance.cpp<52:24> [b2Distance.cpp <53:35 53:39>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2DistanceProxy::Set(const b2Shape *, int32) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Distance.cpp <55:16 55:16>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> b2Vec2 [] b2DistanceProxy::m_buffer [b2Distance.cpp <55:4 55:11>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> b2Vec2 * b2ChainShape::m_vertices [b2Distance.cpp <55:25 55:34>]
LOCAL_SYMBOL: b2Distance.cpp<52:24> [b2Distance.cpp <55:18 55:22>]
LOCAL_SYMBOL: b2Distance.cpp<28:55> [b2Distance.cpp <55:36 55:40>]
LOCAL_SYMBOL: b2Distance.cpp<28:55> [b2Distance.cpp <56:8 56:12>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> int32 b2ChainShape::m_count [b2Distance.cpp <56:27 56:33>]
LOCAL_SYMBOL: b2Distance.cpp<52:24> [b2Distance.cpp <56:20 56:24>]
REFERENCE_CALL void b2DistanceProxy::Set(const b2Shape *, int32) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Distance.cpp <58:17 58:17>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> b2Vec2 [] b2DistanceProxy::m_buffer [b2Distance.cpp <58:5 58:12>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> b2Vec2 * b2ChainShape::m_vertices [b2Distance.cpp <58:26 58:35>]
LOCAL_SYMBOL: b2Distance.cpp<52:24> [b2Distance.cpp <58:19 58:23>]
LOCAL_SYMBOL: b2Distance.cpp<28:55> [b2Distance.cpp <58:37 58:41>]
REFERENCE_CALL void b2DistanceProxy::Set(const b2Shape *, int32) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Distance.cpp <62:17 62:17>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> b2Vec2 [] b2DistanceProxy::m_buffer [b2Distance.cpp <62:5 62:12>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> b2Vec2 * b2ChainShape::m_vertices [b2Distance.cpp <62:26 62:35>]
LOCAL_SYMBOL: b2Distance.cpp<52:24> [b2Distance.cpp <62:19 62:23>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> const b2Vec2 * b2DistanceProxy::m_vertices [b2Distance.cpp <65:4 65:13>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> b2Vec2 [] b2DistanceProxy::m_buffer [b2Distance.cpp <65:17 65:24>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> int32 b2DistanceProxy::m_count [b2Distance.cpp <66:4 66:10>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> float32 b2DistanceProxy::m_radius [b2Distance.cpp <67:4 67:11>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> float32 b2Shape::m_radius [b2Distance.cpp <67:22 67:29>]
LOCAL_SYMBOL: b2Distance.cpp<52:24> [b2Distance.cpp <67:15 67:19>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> b2Shape::Type::e_edge [b2Distance.cpp <71:16 71:21>]
QUALIFIER: b2Shape [b2Distance.cpp <71:7 71:13>]
LOCAL_SYMBOL: b2Distance.cpp<73:23> [b2Distance.cpp <73:23 73:26>]
REFERENCE_TYPE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> b2EdgeShape [b2Distance.cpp <73:10 73:20>]
REFERENCE_TYPE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> b2EdgeShape [b2Distance.cpp <73:48 73:58>]
LOCAL_SYMBOL: b2Distance.cpp<28:42> [b2Distance.cpp <73:62 73:66>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> const b2Vec2 * b2DistanceProxy::m_vertices [b2Distance.cpp <74:4 74:13>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> b2Vec2 b2EdgeShape::m_vertex1 [b2Distance.cpp <74:24 74:32>]
LOCAL_SYMBOL: b2Distance.cpp<73:23> [b2Distance.cpp <74:18 74:21>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> int32 b2DistanceProxy::m_count [b2Distance.cpp <75:4 75:10>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> float32 b2DistanceProxy::m_radius [b2Distance.cpp <76:4 76:11>]
REFERENCE_USAGE void b2DistanceProxy::Set(const b2Shape *, int32) -> float32 b2Shape::m_radius [b2Distance.cpp <76:21 76:28>]
LOCAL_SYMBOL: b2Distance.cpp<73:23> [b2Distance.cpp <76:15 76:18>]
SYMBOL_STRUCT b2SimplexVertex [b2Distance.cpp <86:1 <86:8 86:22> 94:1>]
SYMBOL_FIELD public b2Vec2 b2SimplexVertex::wA [b2Distance.cpp <88:9 88:10>]
REFERENCE_TYPE_USAGE b2Vec2 b2SimplexVertex::wA -> b2Vec2 [b2Distance.cpp <88:2 88:7>]
SYMBOL_FIELD public b2Vec2 b2SimplexVertex::wB [b2Distance.cpp <89:9 89:10>]
REFERENCE_TYPE_USAGE b2Vec2 b2SimplexVertex::wB -> b2Vec2 [b2Distance.cpp <89:2 89:7>]
SYMBOL_FIELD public b2Vec2 b2SimplexVertex::w [b2Distance.cpp <90:9 90:9>]
REFERENCE_TYPE_USAGE b2Vec2 b2SimplexVertex::w -> b2Vec2 [b2Distance.cpp <90:2 90:7>]
SYMBOL_FIELD public float32 b2SimplexVertex::a [b2Distance.cpp <91:10 91:10>]
REFERENCE_TYPE_USAGE float32 b2SimplexVertex::a -> float32 [b2Distance.cpp <91:2 91:8>]
SYMBOL_FIELD public int32 b2SimplexVertex::indexA [b2Distance.cpp <92:8 92:13>]
REFERENCE_TYPE_USAGE int32 b2SimplexVertex::indexA -> int32 [b2Distance.cpp <92:2 92:6>]
SYMBOL_FIELD public int32 b2SimplexVertex::indexB [b2Distance.cpp <93:8 93:13>]
REFERENCE_TYPE_USAGE int32 b2SimplexVertex::indexB -> int32 [b2Distance.cpp <93:2 93:6>]
SYMBOL_METHOD public b2SimplexVertex & b2SimplexVertex::operator=(const b2SimplexVertex &) [b2Distance.cpp <86:8 <86:8 86:22> 86:22>]
REFERENCE_CALL b2SimplexVertex & b2SimplexVertex::operator=(const b2SimplexVertex &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Distance.cpp <86:8 86:22>]
SYMBOL_STRUCT b2Vec2
QUALIFIER: b2Vec2 [b2Distance.cpp <86:8 86:22>]
REFERENCE_USAGE b2SimplexVertex & b2SimplexVertex::operator=(const b2SimplexVertex &) -> b2Vec2 b2SimplexVertex::wA [b2Distance.cpp <86:8 86:22>]
LOCAL_SYMBOL: b2Distance.cpp<86:8> [b2Distance.cpp <86:8 86:22>]
REFERENCE_USAGE b2SimplexVertex & b2SimplexVertex::operator=(const b2SimplexVertex &) -> b2Vec2 b2SimplexVertex::wB [b2Distance.cpp <86:8 86:22>]
REFERENCE_USAGE b2SimplexVertex & b2SimplexVertex::operator=(const b2SimplexVertex &) -> b2Vec2 b2SimplexVertex::w [b2Distance.cpp <86:8 86:22>]
REFERENCE_USAGE b2SimplexVertex & b2SimplexVertex::operator=(const b2SimplexVertex &) -> float32 b2SimplexVertex::a [b2Distance.cpp <86:8 86:22>]
REFERENCE_USAGE b2SimplexVertex & b2SimplexVertex::operator=(const b2SimplexVertex &) -> int32 b2SimplexVertex::indexA [b2Distance.cpp <86:8 86:22>]
REFERENCE_USAGE b2SimplexVertex & b2SimplexVertex::operator=(const b2SimplexVertex &) -> int32 b2SimplexVertex::indexB [b2Distance.cpp <86:8 86:22>]
SYMBOL_METHOD public b2SimplexVertex & b2SimplexVertex::operator=(b2SimplexVertex &&) [b2Distance.cpp <86:8 86:22>]
SYMBOL_METHOD public void b2SimplexVertex::b2SimplexVertex() [b2Distance.cpp <86:8 <86:8 86:22> 86:22>]
REFERENCE_USAGE void b2SimplexVertex::b2SimplexVertex() -> b2Vec2 b2SimplexVertex::wA [b2Distance.cpp <86:8 86:22>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2SimplexVertex::b2SimplexVertex() -> void b2Vec2::b2Vec2() [b2Distance.cpp <86:8 86:22>]
REFERENCE_USAGE void b2SimplexVertex::b2SimplexVertex() -> b2Vec2 b2SimplexVertex::wB [b2Distance.cpp <86:8 86:22>]
REFERENCE_USAGE void b2SimplexVertex::b2SimplexVertex() -> b2Vec2 b2SimplexVertex::w [b2Distance.cpp <86:8 86:22>]
SYMBOL_METHOD public void b2SimplexVertex::~b2SimplexVertex() [b2Distance.cpp <86:8 86:22>]
SYMBOL_METHOD public void b2SimplexVertex::b2SimplexVertex(const b2SimplexVertex &) [b2Distance.cpp <86:8 86:22>]
SYMBOL_METHOD public void b2SimplexVertex::b2SimplexVertex(b2SimplexVertex &&) [b2Distance.cpp <86:8 86:22>]
SYMBOL_STRUCT b2Simplex [b2Distance.cpp <96:1 <96:8 96:16> 270:1>]
SYMBOL_METHOD public void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) [b2Distance.cpp <98:2 <98:7 98:15> 147:2>]
REFERENCE_TYPE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> void [b2Distance.cpp <98:2 98:5>]
LOCAL_SYMBOL: b2Distance.cpp<98:40> [b2Distance.cpp <98:40 98:44>]
REFERENCE_TYPE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2SimplexCache [b2Distance.cpp <98:24 98:37>]
LOCAL_SYMBOL: b2Distance.cpp<99:29> [b2Distance.cpp <99:29 99:34>]
REFERENCE_TYPE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2DistanceProxy [b2Distance.cpp <99:12 99:26>]
LOCAL_SYMBOL: b2Distance.cpp<99:56> [b2Distance.cpp <99:56 99:65>]
REFERENCE_TYPE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Transform [b2Distance.cpp <99:43 99:53>]
LOCAL_SYMBOL: b2Distance.cpp<100:29> [b2Distance.cpp <100:29 100:34>]
REFERENCE_TYPE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2DistanceProxy [b2Distance.cpp <100:12 100:26>]
LOCAL_SYMBOL: b2Distance.cpp<100:56> [b2Distance.cpp <100:56 100:65>]
REFERENCE_TYPE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Transform [b2Distance.cpp <100:43 100:53>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> uint16 b2SimplexCache::count [b2Distance.cpp <102:19 102:23>]
LOCAL_SYMBOL: b2Distance.cpp<98:40> [b2Distance.cpp <102:12 102:16>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> int32 b2Simplex::m_count [b2Distance.cpp <105:3 105:9>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> uint16 b2SimplexCache::count [b2Distance.cpp <105:20 105:24>]
LOCAL_SYMBOL: b2Distance.cpp<98:40> [b2Distance.cpp <105:13 105:17>]
LOCAL_SYMBOL: b2Distance.cpp<106:20> [b2Distance.cpp <106:20 106:27>]
REFERENCE_TYPE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2SimplexVertex [b2Distance.cpp <106:3 106:17>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <106:32 106:35>]
LOCAL_SYMBOL: b2Distance.cpp<107:14> [b2Distance.cpp <107:14 107:14>]
REFERENCE_TYPE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> int32 [b2Distance.cpp <107:8 107:12>]
LOCAL_SYMBOL: b2Distance.cpp<107:14> [b2Distance.cpp <107:21 107:21>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> int32 b2Simplex::m_count [b2Distance.cpp <107:25 107:31>]
LOCAL_SYMBOL: b2Distance.cpp<107:14> [b2Distance.cpp <107:36 107:36>]
LOCAL_SYMBOL: b2Distance.cpp<109:21> [b2Distance.cpp <109:21 109:21>]
REFERENCE_TYPE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2SimplexVertex [b2Distance.cpp <109:4 109:18>]
LOCAL_SYMBOL: b2Distance.cpp<106:20> [b2Distance.cpp <109:25 109:32>]
LOCAL_SYMBOL: b2Distance.cpp<107:14> [b2Distance.cpp <109:36 109:36>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> int32 b2SimplexVertex::indexA [b2Distance.cpp <110:7 110:12>]
LOCAL_SYMBOL: b2Distance.cpp<109:21> [b2Distance.cpp <110:4 110:4>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> uint8 [] b2SimplexCache::indexA [b2Distance.cpp <110:23 110:28>]
LOCAL_SYMBOL: b2Distance.cpp<98:40> [b2Distance.cpp <110:16 110:20>]
LOCAL_SYMBOL: b2Distance.cpp<107:14> [b2Distance.cpp <110:30 110:30>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> int32 b2SimplexVertex::indexB [b2Distance.cpp <111:7 111:12>]
LOCAL_SYMBOL: b2Distance.cpp<109:21> [b2Distance.cpp <111:4 111:4>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> uint8 [] b2SimplexCache::indexB [b2Distance.cpp <111:23 111:28>]
LOCAL_SYMBOL: b2Distance.cpp<98:40> [b2Distance.cpp <111:16 111:20>]
LOCAL_SYMBOL: b2Distance.cpp<107:14> [b2Distance.cpp <111:30 111:30>]
LOCAL_SYMBOL: b2Distance.cpp<112:11> [b2Distance.cpp <112:11 112:17>]
REFERENCE_TYPE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 [b2Distance.cpp <112:4 112:9>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2Distance.cpp <112:48 112:48>]
SYMBOL_FUNCTION const b2Vec2 & b2DistanceProxy::GetVertex(int32) const
REFERENCE_CALL void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> const b2Vec2 & b2DistanceProxy::GetVertex(int32) const [b2Distance.cpp <112:29 112:37>]
LOCAL_SYMBOL: b2Distance.cpp<99:29> [b2Distance.cpp <112:21 112:26>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> int32 b2SimplexVertex::indexA [b2Distance.cpp <112:42 112:47>]
LOCAL_SYMBOL: b2Distance.cpp<109:21> [b2Distance.cpp <112:39 112:39>]
LOCAL_SYMBOL: b2Distance.cpp<113:11> [b2Distance.cpp <113:11 113:17>]
REFERENCE_TYPE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 [b2Distance.cpp <113:4 113:9>]
REFERENCE_CALL void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2Distance.cpp <113:48 113:48>]
REFERENCE_CALL void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> const b2Vec2 & b2DistanceProxy::GetVertex(int32) const [b2Distance.cpp <113:29 113:37>]
LOCAL_SYMBOL: b2Distance.cpp<100:29> [b2Distance.cpp <113:21 113:26>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> int32 b2SimplexVertex::indexB [b2Distance.cpp <113:42 113:47>]
LOCAL_SYMBOL: b2Distance.cpp<109:21> [b2Distance.cpp <113:39 113:39>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &&)
REFERENCE_CALL void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Distance.cpp <114:10 114:10>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 b2SimplexVertex::wA [b2Distance.cpp <114:7 114:8>]
LOCAL_SYMBOL: b2Distance.cpp<109:21> [b2Distance.cpp <114:4 114:4>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &)
REFERENCE_CALL void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2Distance.cpp <114:12 114:16>]
LOCAL_SYMBOL: b2Distance.cpp<99:56> [b2Distance.cpp <114:18 114:27>]
LOCAL_SYMBOL: b2Distance.cpp<112:11> [b2Distance.cpp <114:30 114:36>]
REFERENCE_CALL void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Distance.cpp <115:10 115:10>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 b2SimplexVertex::wB [b2Distance.cpp <115:7 115:8>]
LOCAL_SYMBOL: b2Distance.cpp<109:21> [b2Distance.cpp <115:4 115:4>]
REFERENCE_CALL void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2Distance.cpp <115:12 115:16>]
LOCAL_SYMBOL: b2Distance.cpp<100:56> [b2Distance.cpp <115:18 115:27>]
LOCAL_SYMBOL: b2Distance.cpp<113:11> [b2Distance.cpp <115:30 115:36>]
REFERENCE_CALL void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Distance.cpp <116:9 116:9>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 b2SimplexVertex::w [b2Distance.cpp <116:7 116:7>]
LOCAL_SYMBOL: b2Distance.cpp<109:21> [b2Distance.cpp <116:4 116:4>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <116:17 116:17>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 b2SimplexVertex::wB [b2Distance.cpp <116:14 116:15>]
LOCAL_SYMBOL: b2Distance.cpp<109:21> [b2Distance.cpp <116:11 116:11>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 b2SimplexVertex::wA [b2Distance.cpp <116:22 116:23>]
LOCAL_SYMBOL: b2Distance.cpp<109:21> [b2Distance.cpp <116:19 116:19>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> float32 b2SimplexVertex::a [b2Distance.cpp <117:7 117:7>]
LOCAL_SYMBOL: b2Distance.cpp<109:21> [b2Distance.cpp <117:4 117:4>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> int32 b2Simplex::m_count [b2Distance.cpp <122:7 122:13>]
LOCAL_SYMBOL: b2Distance.cpp<124:12> [b2Distance.cpp <124:12 124:18>]
REFERENCE_TYPE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> float32 [b2Distance.cpp <124:4 124:10>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> float32 b2SimplexCache::metric [b2Distance.cpp <124:29 124:34>]
LOCAL_SYMBOL: b2Distance.cpp<98:40> [b2Distance.cpp <124:22 124:26>]
LOCAL_SYMBOL: b2Distance.cpp<125:12> [b2Distance.cpp <125:12 125:18>]
REFERENCE_TYPE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> float32 [b2Distance.cpp <125:4 125:10>]
SYMBOL_FUNCTION float32 b2Simplex::GetMetric() const
REFERENCE_CALL void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> float32 b2Simplex::GetMetric() const [b2Distance.cpp <125:22 125:30>]
LOCAL_SYMBOL: b2Distance.cpp<125:12> [b2Distance.cpp <126:8 126:14>]
LOCAL_SYMBOL: b2Distance.cpp<124:12> [b2Distance.cpp <126:25 126:31>]
LOCAL_SYMBOL: b2Distance.cpp<124:12> [b2Distance.cpp <126:43 126:49>]
LOCAL_SYMBOL: b2Distance.cpp<125:12> [b2Distance.cpp <126:53 126:59>]
LOCAL_SYMBOL: b2Distance.cpp<125:12> [b2Distance.cpp <126:64 126:70>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> int32 b2Simplex::m_count [b2Distance.cpp <129:5 129:11>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> int32 b2Simplex::m_count [b2Distance.cpp <134:7 134:13>]
LOCAL_SYMBOL: b2Distance.cpp<136:21> [b2Distance.cpp <136:21 136:21>]
REFERENCE_TYPE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2SimplexVertex [b2Distance.cpp <136:4 136:18>]
LOCAL_SYMBOL: b2Distance.cpp<106:20> [b2Distance.cpp <136:25 136:32>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> int32 b2SimplexVertex::indexA [b2Distance.cpp <137:7 137:12>]
LOCAL_SYMBOL: b2Distance.cpp<136:21> [b2Distance.cpp <137:4 137:4>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> int32 b2SimplexVertex::indexB [b2Distance.cpp <138:7 138:12>]
LOCAL_SYMBOL: b2Distance.cpp<136:21> [b2Distance.cpp <138:4 138:4>]
LOCAL_SYMBOL: b2Distance.cpp<139:11> [b2Distance.cpp <139:11 139:17>]
REFERENCE_TYPE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 [b2Distance.cpp <139:4 139:9>]
REFERENCE_CALL void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2Distance.cpp <139:40 139:40>]
REFERENCE_CALL void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> const b2Vec2 & b2DistanceProxy::GetVertex(int32) const [b2Distance.cpp <139:29 139:37>]
LOCAL_SYMBOL: b2Distance.cpp<99:29> [b2Distance.cpp <139:21 139:26>]
LOCAL_SYMBOL: b2Distance.cpp<140:11> [b2Distance.cpp <140:11 140:17>]
REFERENCE_TYPE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 [b2Distance.cpp <140:4 140:9>]
REFERENCE_CALL void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2Distance.cpp <140:40 140:40>]
REFERENCE_CALL void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> const b2Vec2 & b2DistanceProxy::GetVertex(int32) const [b2Distance.cpp <140:29 140:37>]
LOCAL_SYMBOL: b2Distance.cpp<100:29> [b2Distance.cpp <140:21 140:26>]
REFERENCE_CALL void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Distance.cpp <141:10 141:10>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 b2SimplexVertex::wA [b2Distance.cpp <141:7 141:8>]
LOCAL_SYMBOL: b2Distance.cpp<136:21> [b2Distance.cpp <141:4 141:4>]
REFERENCE_CALL void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2Distance.cpp <141:12 141:16>]
LOCAL_SYMBOL: b2Distance.cpp<99:56> [b2Distance.cpp <141:18 141:27>]
LOCAL_SYMBOL: b2Distance.cpp<139:11> [b2Distance.cpp <141:30 141:36>]
REFERENCE_CALL void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Distance.cpp <142:10 142:10>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 b2SimplexVertex::wB [b2Distance.cpp <142:7 142:8>]
LOCAL_SYMBOL: b2Distance.cpp<136:21> [b2Distance.cpp <142:4 142:4>]
REFERENCE_CALL void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2Distance.cpp <142:12 142:16>]
LOCAL_SYMBOL: b2Distance.cpp<100:56> [b2Distance.cpp <142:18 142:27>]
LOCAL_SYMBOL: b2Distance.cpp<140:11> [b2Distance.cpp <142:30 142:36>]
REFERENCE_CALL void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Distance.cpp <143:9 143:9>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 b2SimplexVertex::w [b2Distance.cpp <143:7 143:7>]
LOCAL_SYMBOL: b2Distance.cpp<136:21> [b2Distance.cpp <143:4 143:4>]
REFERENCE_CALL void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <143:17 143:17>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 b2SimplexVertex::wB [b2Distance.cpp <143:14 143:15>]
LOCAL_SYMBOL: b2Distance.cpp<136:21> [b2Distance.cpp <143:11 143:11>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> b2Vec2 b2SimplexVertex::wA [b2Distance.cpp <143:22 143:23>]
LOCAL_SYMBOL: b2Distance.cpp<136:21> [b2Distance.cpp <143:19 143:19>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> float32 b2SimplexVertex::a [b2Distance.cpp <144:7 144:7>]
LOCAL_SYMBOL: b2Distance.cpp<136:21> [b2Distance.cpp <144:4 144:4>]
REFERENCE_USAGE void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) -> int32 b2Simplex::m_count [b2Distance.cpp <145:4 145:10>]
SYMBOL_METHOD public void b2Simplex::WriteCache(b2SimplexCache *) const [b2Distance.cpp <149:2 <149:7 149:16> 159:2>]
REFERENCE_TYPE_USAGE void b2Simplex::WriteCache(b2SimplexCache *) const -> void [b2Distance.cpp <149:2 149:5>]
LOCAL_SYMBOL: b2Distance.cpp<149:34> [b2Distance.cpp <149:34 149:38>]
REFERENCE_TYPE_USAGE void b2Simplex::WriteCache(b2SimplexCache *) const -> b2SimplexCache [b2Distance.cpp <149:18 149:31>]
REFERENCE_USAGE void b2Simplex::WriteCache(b2SimplexCache *) const -> float32 b2SimplexCache::metric [b2Distance.cpp <151:10 151:15>]
LOCAL_SYMBOL: b2Distance.cpp<149:34> [b2Distance.cpp <151:3 151:7>]
REFERENCE_CALL void b2Simplex::WriteCache(b2SimplexCache *) const -> float32 b2Simplex::GetMetric() const [b2Distance.cpp <151:19 151:27>]
REFERENCE_USAGE void b2Simplex::WriteCache(b2SimplexCache *) const -> uint16 b2SimplexCache::count [b2Distance.cpp <152:10 152:14>]
LOCAL_SYMBOL: b2Distance.cpp<149:34> [b2Distance.cpp <152:3 152:7>]
REFERENCE_TYPE_USAGE void b2Simplex::WriteCache(b2SimplexCache *) const -> uint16 [b2Distance.cpp <152:18 152:23>]
REFERENCE_USAGE void b2Simplex::WriteCache(b2SimplexCache *) const -> int32 b2Simplex::m_count [b2Distance.cpp <152:25 152:31>]
LOCAL_SYMBOL: b2Distance.cpp<153:26> [b2Distance.cpp <153:26 153:33>]
REFERENCE_TYPE_USAGE void b2Simplex::WriteCache(b2SimplexCache *) const -> b2SimplexVertex [b2Distance.cpp <153:9 153:23>]
REFERENCE_USAGE void b2Simplex::WriteCache(b2SimplexCache *) const -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <153:38 153:41>]
LOCAL_SYMBOL: b2Distance.cpp<154:14> [b2Distance.cpp <154:14 154:14>]
REFERENCE_TYPE_USAGE void b2Simplex::WriteCache(b2SimplexCache *) const -> int32 [b2Distance.cpp <154:8 154:12>]
LOCAL_SYMBOL: b2Distance.cpp<154:14> [b2Distance.cpp <154:21 154:21>]
REFERENCE_USAGE void b2Simplex::WriteCache(b2SimplexCache *) const -> int32 b2Simplex::m_count [b2Distance.cpp <154:25 154:31>]
LOCAL_SYMBOL: b2Distance.cpp<154:14> [b2Distance.cpp <154:36 154:36>]
REFERENCE_USAGE void b2Simplex::WriteCache(b2SimplexCache *) const -> uint8 [] b2SimplexCache::indexA [b2Distance.cpp <156:11 156:16>]
LOCAL_SYMBOL: b2Distance.cpp<149:34> [b2Distance.cpp <156:4 156:8>]
LOCAL_SYMBOL: b2Distance.cpp<154:14> [b2Distance.cpp <156:18 156:18>]
REFERENCE_TYPE_USAGE void b2Simplex::WriteCache(b2SimplexCache *) const -> uint8 [b2Distance.cpp <156:23 156:27>]
REFERENCE_USAGE void b2Simplex::WriteCache(b2SimplexCache *) const -> int32 b2SimplexVertex::indexA [b2Distance.cpp <156:41 156:46>]
LOCAL_SYMBOL: b2Distance.cpp<153:26> [b2Distance.cpp <156:29 156:36>]
LOCAL_SYMBOL: b2Distance.cpp<154:14> [b2Distance.cpp <156:38 156:38>]
REFERENCE_USAGE void b2Simplex::WriteCache(b2SimplexCache *) const -> uint8 [] b2SimplexCache::indexB [b2Distance.cpp <157:11 157:16>]
LOCAL_SYMBOL: b2Distance.cpp<149:34> [b2Distance.cpp <157:4 157:8>]
LOCAL_SYMBOL: b2Distance.cpp<154:14> [b2Distance.cpp <157:18 157:18>]
REFERENCE_TYPE_USAGE void b2Simplex::WriteCache(b2SimplexCache *) const -> uint8 [b2Distance.cpp <157:23 157:27>]
REFERENCE_USAGE void b2Simplex::WriteCache(b2SimplexCache *) const -> int32 b2SimplexVertex::indexB [b2Distance.cpp <157:41 157:46>]
LOCAL_SYMBOL: b2Distance.cpp<153:26> [b2Distance.cpp <157:29 157:36>]
LOCAL_SYMBOL: b2Distance.cpp<154:14> [b2Distance.cpp <157:38 157:38>]
SYMBOL_METHOD public b2Vec2 b2Simplex::GetSearchDirection() const [b2Distance.cpp <161:2 <161:9 161:26> 188:2>]
REFERENCE_TYPE_USAGE b2Vec2 b2Simplex::GetSearchDirection() const -> b2Vec2 [b2Distance.cpp <161:2 161:7>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetSearchDirection() const -> int32 b2Simplex::m_count [b2Distance.cpp <163:11 163:17>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL b2Vec2 b2Simplex::GetSearchDirection() const -> b2Vec2 b2Vec2::operator-() const [b2Distance.cpp <166:11 166:11>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetSearchDirection() const -> b2Vec2 b2SimplexVertex::w [b2Distance.cpp <166:17 166:17>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetSearchDirection() const -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <166:12 166:15>]
LOCAL_SYMBOL: b2Distance.cpp<170:12> [b2Distance.cpp <170:12 170:14>]
REFERENCE_TYPE_USAGE b2Vec2 b2Simplex::GetSearchDirection() const -> b2Vec2 [b2Distance.cpp <170:5 170:10>]
REFERENCE_CALL b2Vec2 b2Simplex::GetSearchDirection() const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <170:25 170:25>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetSearchDirection() const -> b2Vec2 b2SimplexVertex::w [b2Distance.cpp <170:23 170:23>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetSearchDirection() const -> b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <170:18 170:21>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetSearchDirection() const -> b2Vec2 b2SimplexVertex::w [b2Distance.cpp <170:32 170:32>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetSearchDirection() const -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <170:27 170:30>]
LOCAL_SYMBOL: b2Distance.cpp<171:13> [b2Distance.cpp <171:13 171:15>]
REFERENCE_TYPE_USAGE b2Vec2 b2Simplex::GetSearchDirection() const -> float32 [b2Distance.cpp <171:5 171:11>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL b2Vec2 b2Simplex::GetSearchDirection() const -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <171:19 171:25>]
LOCAL_SYMBOL: b2Distance.cpp<170:12> [b2Distance.cpp <171:27 171:29>]
REFERENCE_CALL b2Vec2 b2Simplex::GetSearchDirection() const -> b2Vec2 b2Vec2::operator-() const [b2Distance.cpp <171:32 171:32>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetSearchDirection() const -> b2Vec2 b2SimplexVertex::w [b2Distance.cpp <171:38 171:38>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetSearchDirection() const -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <171:33 171:36>]
LOCAL_SYMBOL: b2Distance.cpp<171:13> [b2Distance.cpp <172:9 172:11>]
SYMBOL_FUNCTION b2Vec2 b2Cross(float32, const b2Vec2 &)
REFERENCE_CALL b2Vec2 b2Simplex::GetSearchDirection() const -> b2Vec2 b2Cross(float32, const b2Vec2 &) [b2Distance.cpp <175:13 175:19>]
LOCAL_SYMBOL: b2Distance.cpp<170:12> [b2Distance.cpp <175:27 175:29>]
SYMBOL_FUNCTION b2Vec2 b2Cross(const b2Vec2 &, float32)
REFERENCE_CALL b2Vec2 b2Simplex::GetSearchDirection() const -> b2Vec2 b2Cross(const b2Vec2 &, float32) [b2Distance.cpp <180:13 180:19>]
LOCAL_SYMBOL: b2Distance.cpp<170:12> [b2Distance.cpp <180:21 180:23>]
REFERENCE_CALL b2Vec2 b2Simplex::GetSearchDirection() const -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2Distance.cpp <186:11 186:21>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetSearchDirection() const -> const b2Vec2 b2Vec2_zero [b2Distance.cpp <186:11 186:21>]
SYMBOL_METHOD public b2Vec2 b2Simplex::GetClosestPoint() const [b2Distance.cpp <190:2 <190:9 190:23> 211:2>]
REFERENCE_TYPE_USAGE b2Vec2 b2Simplex::GetClosestPoint() const -> b2Vec2 [b2Distance.cpp <190:2 190:7>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetClosestPoint() const -> int32 b2Simplex::m_count [b2Distance.cpp <192:11 192:17>]
REFERENCE_CALL b2Vec2 b2Simplex::GetClosestPoint() const -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2Distance.cpp <196:11 196:21>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetClosestPoint() const -> const b2Vec2 b2Vec2_zero [b2Distance.cpp <196:11 196:21>]
REFERENCE_CALL b2Vec2 b2Simplex::GetClosestPoint() const -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2Distance.cpp <199:16 199:16>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetClosestPoint() const -> b2Vec2 b2SimplexVertex::w [b2Distance.cpp <199:16 199:16>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetClosestPoint() const -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <199:11 199:14>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL b2Vec2 b2Simplex::GetClosestPoint() const -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <202:27 202:27>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL b2Vec2 b2Simplex::GetClosestPoint() const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2Distance.cpp <202:18 202:18>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetClosestPoint() const -> float32 b2SimplexVertex::a [b2Distance.cpp <202:16 202:16>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetClosestPoint() const -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <202:11 202:14>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetClosestPoint() const -> b2Vec2 b2SimplexVertex::w [b2Distance.cpp <202:25 202:25>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetClosestPoint() const -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <202:20 202:23>]
REFERENCE_CALL b2Vec2 b2Simplex::GetClosestPoint() const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2Distance.cpp <202:36 202:36>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetClosestPoint() const -> float32 b2SimplexVertex::a [b2Distance.cpp <202:34 202:34>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetClosestPoint() const -> b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <202:29 202:32>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetClosestPoint() const -> b2Vec2 b2SimplexVertex::w [b2Distance.cpp <202:43 202:43>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetClosestPoint() const -> b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <202:38 202:41>]
REFERENCE_CALL b2Vec2 b2Simplex::GetClosestPoint() const -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2Distance.cpp <205:11 205:21>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetClosestPoint() const -> const b2Vec2 b2Vec2_zero [b2Distance.cpp <205:11 205:21>]
REFERENCE_CALL b2Vec2 b2Simplex::GetClosestPoint() const -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2Distance.cpp <209:11 209:21>]
REFERENCE_USAGE b2Vec2 b2Simplex::GetClosestPoint() const -> const b2Vec2 b2Vec2_zero [b2Distance.cpp <209:11 209:21>]
SYMBOL_METHOD public void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const [b2Distance.cpp <213:2 <213:7 213:22> 240:2>]
REFERENCE_TYPE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> void [b2Distance.cpp <213:2 213:5>]
LOCAL_SYMBOL: b2Distance.cpp<213:32> [b2Distance.cpp <213:32 213:33>]
REFERENCE_TYPE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 [b2Distance.cpp <213:24 213:29>]
LOCAL_SYMBOL: b2Distance.cpp<213:44> [b2Distance.cpp <213:44 213:45>]
REFERENCE_TYPE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 [b2Distance.cpp <213:36 213:41>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> int32 b2Simplex::m_count [b2Distance.cpp <215:11 215:17>]
REFERENCE_CALL void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Distance.cpp <222:8 222:8>]
LOCAL_SYMBOL: b2Distance.cpp<213:32> [b2Distance.cpp <222:5 222:6>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 b2SimplexVertex::wA [b2Distance.cpp <222:15 222:16>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <222:10 222:13>]
REFERENCE_CALL void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Distance.cpp <223:8 223:8>]
LOCAL_SYMBOL: b2Distance.cpp<213:44> [b2Distance.cpp <223:5 223:6>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 b2SimplexVertex::wB [b2Distance.cpp <223:15 223:16>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <223:10 223:13>]
REFERENCE_CALL void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Distance.cpp <227:8 227:8>]
LOCAL_SYMBOL: b2Distance.cpp<213:32> [b2Distance.cpp <227:5 227:6>]
REFERENCE_CALL void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <227:27 227:27>]
REFERENCE_CALL void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2Distance.cpp <227:17 227:17>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> float32 b2SimplexVertex::a [b2Distance.cpp <227:15 227:15>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <227:10 227:13>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 b2SimplexVertex::wA [b2Distance.cpp <227:24 227:25>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <227:19 227:22>]
REFERENCE_CALL void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2Distance.cpp <227:36 227:36>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> float32 b2SimplexVertex::a [b2Distance.cpp <227:34 227:34>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <227:29 227:32>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 b2SimplexVertex::wA [b2Distance.cpp <227:43 227:44>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <227:38 227:41>]
REFERENCE_CALL void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Distance.cpp <228:8 228:8>]
LOCAL_SYMBOL: b2Distance.cpp<213:44> [b2Distance.cpp <228:5 228:6>]
REFERENCE_CALL void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <228:27 228:27>]
REFERENCE_CALL void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2Distance.cpp <228:17 228:17>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> float32 b2SimplexVertex::a [b2Distance.cpp <228:15 228:15>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <228:10 228:13>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 b2SimplexVertex::wB [b2Distance.cpp <228:24 228:25>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <228:19 228:22>]
REFERENCE_CALL void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2Distance.cpp <228:36 228:36>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> float32 b2SimplexVertex::a [b2Distance.cpp <228:34 228:34>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <228:29 228:32>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 b2SimplexVertex::wB [b2Distance.cpp <228:43 228:44>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <228:38 228:41>]
REFERENCE_CALL void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Distance.cpp <232:8 232:8>]
LOCAL_SYMBOL: b2Distance.cpp<213:32> [b2Distance.cpp <232:5 232:6>]
REFERENCE_CALL void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <232:46 232:46>]
REFERENCE_CALL void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <232:27 232:27>]
REFERENCE_CALL void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2Distance.cpp <232:17 232:17>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> float32 b2SimplexVertex::a [b2Distance.cpp <232:15 232:15>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <232:10 232:13>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 b2SimplexVertex::wA [b2Distance.cpp <232:24 232:25>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <232:19 232:22>]
REFERENCE_CALL void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2Distance.cpp <232:36 232:36>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> float32 b2SimplexVertex::a [b2Distance.cpp <232:34 232:34>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <232:29 232:32>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 b2SimplexVertex::wA [b2Distance.cpp <232:43 232:44>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <232:38 232:41>]
REFERENCE_CALL void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2Distance.cpp <232:55 232:55>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> float32 b2SimplexVertex::a [b2Distance.cpp <232:53 232:53>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2SimplexVertex b2Simplex::m_v3 [b2Distance.cpp <232:48 232:51>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 b2SimplexVertex::wA [b2Distance.cpp <232:62 232:63>]
REFERENCE_USAGE void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2SimplexVertex b2Simplex::m_v3 [b2Distance.cpp <232:57 232:60>]
REFERENCE_CALL void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Distance.cpp <233:8 233:8>]
LOCAL_SYMBOL: b2Distance.cpp<213:44> [b2Distance.cpp <233:5 233:6>]
LOCAL_SYMBOL: b2Distance.cpp<213:32> [b2Distance.cpp <233:11 233:12>]
SYMBOL_METHOD public float32 b2Simplex::GetMetric() const [b2Distance.cpp <242:2 <242:10 242:18> 263:2>]
REFERENCE_TYPE_USAGE float32 b2Simplex::GetMetric() const -> float32 [b2Distance.cpp <242:2 242:8>]
REFERENCE_USAGE float32 b2Simplex::GetMetric() const -> int32 b2Simplex::m_count [b2Distance.cpp <244:11 244:17>]
SYMBOL_FUNCTION float32 b2Distance(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL float32 b2Simplex::GetMetric() const -> float32 b2Distance(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <254:11 254:20>]
REFERENCE_USAGE float32 b2Simplex::GetMetric() const -> b2Vec2 b2SimplexVertex::w [b2Distance.cpp <254:27 254:27>]
REFERENCE_USAGE float32 b2Simplex::GetMetric() const -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <254:22 254:25>]
REFERENCE_USAGE float32 b2Simplex::GetMetric() const -> b2Vec2 b2SimplexVertex::w [b2Distance.cpp <254:35 254:35>]
REFERENCE_USAGE float32 b2Simplex::GetMetric() const -> b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <254:30 254:33>]
REFERENCE_CALL float32 b2Simplex::GetMetric() const -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <257:11 257:17>]
REFERENCE_CALL float32 b2Simplex::GetMetric() const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <257:26 257:26>]
REFERENCE_USAGE float32 b2Simplex::GetMetric() const -> b2Vec2 b2SimplexVertex::w [b2Distance.cpp <257:24 257:24>]
REFERENCE_USAGE float32 b2Simplex::GetMetric() const -> b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <257:19 257:22>]
REFERENCE_USAGE float32 b2Simplex::GetMetric() const -> b2Vec2 b2SimplexVertex::w [b2Distance.cpp <257:33 257:33>]
REFERENCE_USAGE float32 b2Simplex::GetMetric() const -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <257:28 257:31>]
REFERENCE_CALL float32 b2Simplex::GetMetric() const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <257:43 257:43>]
REFERENCE_USAGE float32 b2Simplex::GetMetric() const -> b2Vec2 b2SimplexVertex::w [b2Distance.cpp <257:41 257:41>]
REFERENCE_USAGE float32 b2Simplex::GetMetric() const -> b2SimplexVertex b2Simplex::m_v3 [b2Distance.cpp <257:36 257:39>]
REFERENCE_USAGE float32 b2Simplex::GetMetric() const -> b2Vec2 b2SimplexVertex::w [b2Distance.cpp <257:50 257:50>]
REFERENCE_USAGE float32 b2Simplex::GetMetric() const -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <257:45 257:48>]
SYMBOL_METHOD public void b2Simplex::Solve2() [b2Distance.cpp <265:7 265:12>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve2() -> void [b2Distance.cpp <265:2 265:5>]
SYMBOL_METHOD public void b2Simplex::Solve3() [b2Distance.cpp <266:7 266:12>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> void [b2Distance.cpp <266:2 266:5>]
SYMBOL_FIELD public b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <268:18 268:21>]
REFERENCE_TYPE_USAGE b2SimplexVertex b2Simplex::m_v1 -> b2SimplexVertex [b2Distance.cpp <268:2 268:16>]
SYMBOL_FIELD public b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <268:24 268:27>]
REFERENCE_TYPE_USAGE b2SimplexVertex b2Simplex::m_v2 -> b2SimplexVertex [b2Distance.cpp <268:2 268:16>]
SYMBOL_FIELD public b2SimplexVertex b2Simplex::m_v3 [b2Distance.cpp <268:30 268:33>]
REFERENCE_TYPE_USAGE b2SimplexVertex b2Simplex::m_v3 -> b2SimplexVertex [b2Distance.cpp <268:2 268:16>]
SYMBOL_FIELD public int32 b2Simplex::m_count [b2Distance.cpp <269:8 269:14>]
REFERENCE_TYPE_USAGE int32 b2Simplex::m_count -> int32 [b2Distance.cpp <269:2 269:6>]
SYMBOL_METHOD public void b2Simplex::b2Simplex() [b2Distance.cpp <96:8 <96:8 96:16> 96:16>]
REFERENCE_USAGE void b2Simplex::b2Simplex() -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <96:8 96:16>]
SYMBOL_FUNCTION void b2SimplexVertex::b2SimplexVertex()
REFERENCE_CALL void b2Simplex::b2Simplex() -> void b2SimplexVertex::b2SimplexVertex() [b2Distance.cpp <96:8 96:16>]
REFERENCE_USAGE void b2Simplex::b2Simplex() -> b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <96:8 96:16>]
REFERENCE_USAGE void b2Simplex::b2Simplex() -> b2SimplexVertex b2Simplex::m_v3 [b2Distance.cpp <96:8 96:16>]
SYMBOL_METHOD public void b2Simplex::b2Simplex(const b2Simplex &) [b2Distance.cpp <96:8 96:16>]
SYMBOL_METHOD public void b2Simplex::b2Simplex(b2Simplex &&) [b2Distance.cpp <96:8 96:16>]
SYMBOL_METHOD public void b2Simplex::Solve2() [b2Distance.cpp <296:1 <296:17 296:22> 328:1>]
SYMBOL_STRUCT b2Simplex
QUALIFIER: b2Simplex [b2Distance.cpp <296:6 296:14>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve2() -> void [b2Distance.cpp <296:1 296:4>]
LOCAL_SYMBOL: b2Distance.cpp<298:9> [b2Distance.cpp <298:9 298:10>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve2() -> b2Vec2 [b2Distance.cpp <298:2 298:7>]
REFERENCE_CALL void b2Simplex::Solve2() -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2Distance.cpp <298:19 298:19>]
REFERENCE_USAGE void b2Simplex::Solve2() -> b2Vec2 b2SimplexVertex::w [b2Distance.cpp <298:19 298:19>]
REFERENCE_USAGE void b2Simplex::Solve2() -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <298:14 298:17>]
LOCAL_SYMBOL: b2Distance.cpp<299:9> [b2Distance.cpp <299:9 299:10>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve2() -> b2Vec2 [b2Distance.cpp <299:2 299:7>]
REFERENCE_CALL void b2Simplex::Solve2() -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2Distance.cpp <299:19 299:19>]
REFERENCE_USAGE void b2Simplex::Solve2() -> b2Vec2 b2SimplexVertex::w [b2Distance.cpp <299:19 299:19>]
REFERENCE_USAGE void b2Simplex::Solve2() -> b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <299:14 299:17>]
LOCAL_SYMBOL: b2Distance.cpp<300:9> [b2Distance.cpp <300:9 300:11>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve2() -> b2Vec2 [b2Distance.cpp <300:2 300:7>]
REFERENCE_CALL void b2Simplex::Solve2() -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <300:18 300:18>]
LOCAL_SYMBOL: b2Distance.cpp<299:9> [b2Distance.cpp <300:15 300:16>]
LOCAL_SYMBOL: b2Distance.cpp<298:9> [b2Distance.cpp <300:20 300:21>]
LOCAL_SYMBOL: b2Distance.cpp<303:10> [b2Distance.cpp <303:10 303:14>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve2() -> float32 [b2Distance.cpp <303:2 303:8>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2Simplex::Solve2() -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <303:19 303:23>]
LOCAL_SYMBOL: b2Distance.cpp<298:9> [b2Distance.cpp <303:25 303:26>]
LOCAL_SYMBOL: b2Distance.cpp<300:9> [b2Distance.cpp <303:29 303:31>]
LOCAL_SYMBOL: b2Distance.cpp<303:10> [b2Distance.cpp <304:6 304:10>]
REFERENCE_USAGE void b2Simplex::Solve2() -> float32 b2SimplexVertex::a [b2Distance.cpp <307:8 307:8>]
REFERENCE_USAGE void b2Simplex::Solve2() -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <307:3 307:6>]
REFERENCE_USAGE void b2Simplex::Solve2() -> int32 b2Simplex::m_count [b2Distance.cpp <308:3 308:9>]
LOCAL_SYMBOL: b2Distance.cpp<313:10> [b2Distance.cpp <313:10 313:14>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve2() -> float32 [b2Distance.cpp <313:2 313:8>]
REFERENCE_CALL void b2Simplex::Solve2() -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <313:18 313:22>]
LOCAL_SYMBOL: b2Distance.cpp<299:9> [b2Distance.cpp <313:24 313:25>]
LOCAL_SYMBOL: b2Distance.cpp<300:9> [b2Distance.cpp <313:28 313:30>]
LOCAL_SYMBOL: b2Distance.cpp<313:10> [b2Distance.cpp <314:6 314:10>]
REFERENCE_USAGE void b2Simplex::Solve2() -> float32 b2SimplexVertex::a [b2Distance.cpp <317:8 317:8>]
REFERENCE_USAGE void b2Simplex::Solve2() -> b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <317:3 317:6>]
REFERENCE_USAGE void b2Simplex::Solve2() -> int32 b2Simplex::m_count [b2Distance.cpp <318:3 318:9>]
SYMBOL_FUNCTION b2SimplexVertex & b2SimplexVertex::operator=(const b2SimplexVertex &)
REFERENCE_CALL void b2Simplex::Solve2() -> b2SimplexVertex & b2SimplexVertex::operator=(const b2SimplexVertex &) [b2Distance.cpp <319:8 319:8>]
REFERENCE_USAGE void b2Simplex::Solve2() -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <319:3 319:6>]
REFERENCE_USAGE void b2Simplex::Solve2() -> b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <319:10 319:13>]
LOCAL_SYMBOL: b2Distance.cpp<324:10> [b2Distance.cpp <324:10 324:16>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve2() -> float32 [b2Distance.cpp <324:2 324:8>]
LOCAL_SYMBOL: b2Distance.cpp<313:10> [b2Distance.cpp <324:28 324:32>]
LOCAL_SYMBOL: b2Distance.cpp<303:10> [b2Distance.cpp <324:36 324:40>]
REFERENCE_USAGE void b2Simplex::Solve2() -> float32 b2SimplexVertex::a [b2Distance.cpp <325:7 325:7>]
REFERENCE_USAGE void b2Simplex::Solve2() -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <325:2 325:5>]
LOCAL_SYMBOL: b2Distance.cpp<313:10> [b2Distance.cpp <325:11 325:15>]
LOCAL_SYMBOL: b2Distance.cpp<324:10> [b2Distance.cpp <325:19 325:25>]
REFERENCE_USAGE void b2Simplex::Solve2() -> float32 b2SimplexVertex::a [b2Distance.cpp <326:7 326:7>]
REFERENCE_USAGE void b2Simplex::Solve2() -> b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <326:2 326:5>]
LOCAL_SYMBOL: b2Distance.cpp<303:10> [b2Distance.cpp <326:11 326:15>]
LOCAL_SYMBOL: b2Distance.cpp<324:10> [b2Distance.cpp <326:19 326:25>]
REFERENCE_USAGE void b2Simplex::Solve2() -> int32 b2Simplex::m_count [b2Distance.cpp <327:2 327:8>]
SYMBOL_METHOD public void b2Simplex::Solve3() [b2Distance.cpp <335:1 <335:17 335:22> 442:1>]
QUALIFIER: b2Simplex [b2Distance.cpp <335:6 335:14>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> void [b2Distance.cpp <335:1 335:4>]
LOCAL_SYMBOL: b2Distance.cpp<337:9> [b2Distance.cpp <337:9 337:10>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> b2Vec2 [b2Distance.cpp <337:2 337:7>]
REFERENCE_CALL void b2Simplex::Solve3() -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2Distance.cpp <337:19 337:19>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2Vec2 b2SimplexVertex::w [b2Distance.cpp <337:19 337:19>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <337:14 337:17>]
LOCAL_SYMBOL: b2Distance.cpp<338:9> [b2Distance.cpp <338:9 338:10>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> b2Vec2 [b2Distance.cpp <338:2 338:7>]
REFERENCE_CALL void b2Simplex::Solve3() -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2Distance.cpp <338:19 338:19>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2Vec2 b2SimplexVertex::w [b2Distance.cpp <338:19 338:19>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <338:14 338:17>]
LOCAL_SYMBOL: b2Distance.cpp<339:9> [b2Distance.cpp <339:9 339:10>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> b2Vec2 [b2Distance.cpp <339:2 339:7>]
REFERENCE_CALL void b2Simplex::Solve3() -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2Distance.cpp <339:19 339:19>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2Vec2 b2SimplexVertex::w [b2Distance.cpp <339:19 339:19>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2SimplexVertex b2Simplex::m_v3 [b2Distance.cpp <339:14 339:17>]
LOCAL_SYMBOL: b2Distance.cpp<345:9> [b2Distance.cpp <345:9 345:11>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> b2Vec2 [b2Distance.cpp <345:2 345:7>]
REFERENCE_CALL void b2Simplex::Solve3() -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <345:18 345:18>]
LOCAL_SYMBOL: b2Distance.cpp<338:9> [b2Distance.cpp <345:15 345:16>]
LOCAL_SYMBOL: b2Distance.cpp<337:9> [b2Distance.cpp <345:20 345:21>]
LOCAL_SYMBOL: b2Distance.cpp<346:10> [b2Distance.cpp <346:10 346:14>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> float32 [b2Distance.cpp <346:2 346:8>]
REFERENCE_CALL void b2Simplex::Solve3() -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <346:18 346:22>]
LOCAL_SYMBOL: b2Distance.cpp<337:9> [b2Distance.cpp <346:24 346:25>]
LOCAL_SYMBOL: b2Distance.cpp<345:9> [b2Distance.cpp <346:28 346:30>]
LOCAL_SYMBOL: b2Distance.cpp<347:10> [b2Distance.cpp <347:10 347:14>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> float32 [b2Distance.cpp <347:2 347:8>]
REFERENCE_CALL void b2Simplex::Solve3() -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <347:18 347:22>]
LOCAL_SYMBOL: b2Distance.cpp<338:9> [b2Distance.cpp <347:24 347:25>]
LOCAL_SYMBOL: b2Distance.cpp<345:9> [b2Distance.cpp <347:28 347:30>]
LOCAL_SYMBOL: b2Distance.cpp<348:10> [b2Distance.cpp <348:10 348:14>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> float32 [b2Distance.cpp <348:2 348:8>]
LOCAL_SYMBOL: b2Distance.cpp<347:10> [b2Distance.cpp <348:18 348:22>]
LOCAL_SYMBOL: b2Distance.cpp<349:10> [b2Distance.cpp <349:10 349:14>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> float32 [b2Distance.cpp <349:2 349:8>]
LOCAL_SYMBOL: b2Distance.cpp<346:10> [b2Distance.cpp <349:19 349:23>]
LOCAL_SYMBOL: b2Distance.cpp<355:9> [b2Distance.cpp <355:9 355:11>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> b2Vec2 [b2Distance.cpp <355:2 355:7>]
REFERENCE_CALL void b2Simplex::Solve3() -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <355:18 355:18>]
LOCAL_SYMBOL: b2Distance.cpp<339:9> [b2Distance.cpp <355:15 355:16>]
LOCAL_SYMBOL: b2Distance.cpp<337:9> [b2Distance.cpp <355:20 355:21>]
LOCAL_SYMBOL: b2Distance.cpp<356:10> [b2Distance.cpp <356:10 356:14>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> float32 [b2Distance.cpp <356:2 356:8>]
REFERENCE_CALL void b2Simplex::Solve3() -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <356:18 356:22>]
LOCAL_SYMBOL: b2Distance.cpp<337:9> [b2Distance.cpp <356:24 356:25>]
LOCAL_SYMBOL: b2Distance.cpp<355:9> [b2Distance.cpp <356:28 356:30>]
LOCAL_SYMBOL: b2Distance.cpp<357:10> [b2Distance.cpp <357:10 357:14>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> float32 [b2Distance.cpp <357:2 357:8>]
REFERENCE_CALL void b2Simplex::Solve3() -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <357:18 357:22>]
LOCAL_SYMBOL: b2Distance.cpp<339:9> [b2Distance.cpp <357:24 357:25>]
LOCAL_SYMBOL: b2Distance.cpp<355:9> [b2Distance.cpp <357:28 357:30>]
LOCAL_SYMBOL: b2Distance.cpp<358:10> [b2Distance.cpp <358:10 358:14>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> float32 [b2Distance.cpp <358:2 358:8>]
LOCAL_SYMBOL: b2Distance.cpp<357:10> [b2Distance.cpp <358:18 358:22>]
LOCAL_SYMBOL: b2Distance.cpp<359:10> [b2Distance.cpp <359:10 359:14>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> float32 [b2Distance.cpp <359:2 359:8>]
LOCAL_SYMBOL: b2Distance.cpp<356:10> [b2Distance.cpp <359:19 359:23>]
LOCAL_SYMBOL: b2Distance.cpp<365:9> [b2Distance.cpp <365:9 365:11>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> b2Vec2 [b2Distance.cpp <365:2 365:7>]
REFERENCE_CALL void b2Simplex::Solve3() -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <365:18 365:18>]
LOCAL_SYMBOL: b2Distance.cpp<339:9> [b2Distance.cpp <365:15 365:16>]
LOCAL_SYMBOL: b2Distance.cpp<338:9> [b2Distance.cpp <365:20 365:21>]
LOCAL_SYMBOL: b2Distance.cpp<366:10> [b2Distance.cpp <366:10 366:14>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> float32 [b2Distance.cpp <366:2 366:8>]
REFERENCE_CALL void b2Simplex::Solve3() -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <366:18 366:22>]
LOCAL_SYMBOL: b2Distance.cpp<338:9> [b2Distance.cpp <366:24 366:25>]
LOCAL_SYMBOL: b2Distance.cpp<365:9> [b2Distance.cpp <366:28 366:30>]
LOCAL_SYMBOL: b2Distance.cpp<367:10> [b2Distance.cpp <367:10 367:14>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> float32 [b2Distance.cpp <367:2 367:8>]
REFERENCE_CALL void b2Simplex::Solve3() -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <367:18 367:22>]
LOCAL_SYMBOL: b2Distance.cpp<339:9> [b2Distance.cpp <367:24 367:25>]
LOCAL_SYMBOL: b2Distance.cpp<365:9> [b2Distance.cpp <367:28 367:30>]
LOCAL_SYMBOL: b2Distance.cpp<368:10> [b2Distance.cpp <368:10 368:14>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> float32 [b2Distance.cpp <368:2 368:8>]
LOCAL_SYMBOL: b2Distance.cpp<367:10> [b2Distance.cpp <368:18 368:22>]
LOCAL_SYMBOL: b2Distance.cpp<369:10> [b2Distance.cpp <369:10 369:14>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> float32 [b2Distance.cpp <369:2 369:8>]
LOCAL_SYMBOL: b2Distance.cpp<366:10> [b2Distance.cpp <369:19 369:23>]
LOCAL_SYMBOL: b2Distance.cpp<372:10> [b2Distance.cpp <372:10 372:13>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> float32 [b2Distance.cpp <372:2 372:8>]
REFERENCE_CALL void b2Simplex::Solve3() -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <372:17 372:23>]
LOCAL_SYMBOL: b2Distance.cpp<345:9> [b2Distance.cpp <372:25 372:27>]
LOCAL_SYMBOL: b2Distance.cpp<355:9> [b2Distance.cpp <372:30 372:32>]
LOCAL_SYMBOL: b2Distance.cpp<374:10> [b2Distance.cpp <374:10 374:15>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> float32 [b2Distance.cpp <374:2 374:8>]
LOCAL_SYMBOL: b2Distance.cpp<372:10> [b2Distance.cpp <374:19 374:22>]
REFERENCE_CALL void b2Simplex::Solve3() -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <374:26 374:32>]
LOCAL_SYMBOL: b2Distance.cpp<338:9> [b2Distance.cpp <374:34 374:35>]
LOCAL_SYMBOL: b2Distance.cpp<339:9> [b2Distance.cpp <374:38 374:39>]
LOCAL_SYMBOL: b2Distance.cpp<375:10> [b2Distance.cpp <375:10 375:15>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> float32 [b2Distance.cpp <375:2 375:8>]
LOCAL_SYMBOL: b2Distance.cpp<372:10> [b2Distance.cpp <375:19 375:22>]
REFERENCE_CALL void b2Simplex::Solve3() -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <375:26 375:32>]
LOCAL_SYMBOL: b2Distance.cpp<339:9> [b2Distance.cpp <375:34 375:35>]
LOCAL_SYMBOL: b2Distance.cpp<337:9> [b2Distance.cpp <375:38 375:39>]
LOCAL_SYMBOL: b2Distance.cpp<376:10> [b2Distance.cpp <376:10 376:15>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> float32 [b2Distance.cpp <376:2 376:8>]
LOCAL_SYMBOL: b2Distance.cpp<372:10> [b2Distance.cpp <376:19 376:22>]
REFERENCE_CALL void b2Simplex::Solve3() -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <376:26 376:32>]
LOCAL_SYMBOL: b2Distance.cpp<337:9> [b2Distance.cpp <376:34 376:35>]
LOCAL_SYMBOL: b2Distance.cpp<338:9> [b2Distance.cpp <376:38 376:39>]
LOCAL_SYMBOL: b2Distance.cpp<349:10> [b2Distance.cpp <379:6 379:10>]
LOCAL_SYMBOL: b2Distance.cpp<359:10> [b2Distance.cpp <379:23 379:27>]
REFERENCE_USAGE void b2Simplex::Solve3() -> float32 b2SimplexVertex::a [b2Distance.cpp <381:8 381:8>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <381:3 381:6>]
REFERENCE_USAGE void b2Simplex::Solve3() -> int32 b2Simplex::m_count [b2Distance.cpp <382:3 382:9>]
LOCAL_SYMBOL: b2Distance.cpp<348:10> [b2Distance.cpp <387:6 387:10>]
LOCAL_SYMBOL: b2Distance.cpp<349:10> [b2Distance.cpp <387:22 387:26>]
LOCAL_SYMBOL: b2Distance.cpp<376:10> [b2Distance.cpp <387:38 387:43>]
LOCAL_SYMBOL: b2Distance.cpp<389:11> [b2Distance.cpp <389:11 389:17>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> float32 [b2Distance.cpp <389:3 389:9>]
LOCAL_SYMBOL: b2Distance.cpp<348:10> [b2Distance.cpp <389:29 389:33>]
LOCAL_SYMBOL: b2Distance.cpp<349:10> [b2Distance.cpp <389:37 389:41>]
REFERENCE_USAGE void b2Simplex::Solve3() -> float32 b2SimplexVertex::a [b2Distance.cpp <390:8 390:8>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <390:3 390:6>]
LOCAL_SYMBOL: b2Distance.cpp<348:10> [b2Distance.cpp <390:12 390:16>]
LOCAL_SYMBOL: b2Distance.cpp<389:11> [b2Distance.cpp <390:20 390:26>]
REFERENCE_USAGE void b2Simplex::Solve3() -> float32 b2SimplexVertex::a [b2Distance.cpp <391:8 391:8>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <391:3 391:6>]
LOCAL_SYMBOL: b2Distance.cpp<349:10> [b2Distance.cpp <391:12 391:16>]
LOCAL_SYMBOL: b2Distance.cpp<389:11> [b2Distance.cpp <391:20 391:26>]
REFERENCE_USAGE void b2Simplex::Solve3() -> int32 b2Simplex::m_count [b2Distance.cpp <392:3 392:9>]
LOCAL_SYMBOL: b2Distance.cpp<358:10> [b2Distance.cpp <397:6 397:10>]
LOCAL_SYMBOL: b2Distance.cpp<359:10> [b2Distance.cpp <397:22 397:26>]
LOCAL_SYMBOL: b2Distance.cpp<375:10> [b2Distance.cpp <397:38 397:43>]
LOCAL_SYMBOL: b2Distance.cpp<399:11> [b2Distance.cpp <399:11 399:17>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> float32 [b2Distance.cpp <399:3 399:9>]
LOCAL_SYMBOL: b2Distance.cpp<358:10> [b2Distance.cpp <399:29 399:33>]
LOCAL_SYMBOL: b2Distance.cpp<359:10> [b2Distance.cpp <399:37 399:41>]
REFERENCE_USAGE void b2Simplex::Solve3() -> float32 b2SimplexVertex::a [b2Distance.cpp <400:8 400:8>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <400:3 400:6>]
LOCAL_SYMBOL: b2Distance.cpp<358:10> [b2Distance.cpp <400:12 400:16>]
LOCAL_SYMBOL: b2Distance.cpp<399:11> [b2Distance.cpp <400:20 400:26>]
REFERENCE_USAGE void b2Simplex::Solve3() -> float32 b2SimplexVertex::a [b2Distance.cpp <401:8 401:8>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2SimplexVertex b2Simplex::m_v3 [b2Distance.cpp <401:3 401:6>]
LOCAL_SYMBOL: b2Distance.cpp<359:10> [b2Distance.cpp <401:12 401:16>]
LOCAL_SYMBOL: b2Distance.cpp<399:11> [b2Distance.cpp <401:20 401:26>]
REFERENCE_USAGE void b2Simplex::Solve3() -> int32 b2Simplex::m_count [b2Distance.cpp <402:3 402:9>]
REFERENCE_CALL void b2Simplex::Solve3() -> b2SimplexVertex & b2SimplexVertex::operator=(const b2SimplexVertex &) [b2Distance.cpp <403:8 403:8>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <403:3 403:6>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2SimplexVertex b2Simplex::m_v3 [b2Distance.cpp <403:10 403:13>]
LOCAL_SYMBOL: b2Distance.cpp<348:10> [b2Distance.cpp <408:6 408:10>]
LOCAL_SYMBOL: b2Distance.cpp<369:10> [b2Distance.cpp <408:23 408:27>]
REFERENCE_USAGE void b2Simplex::Solve3() -> float32 b2SimplexVertex::a [b2Distance.cpp <410:8 410:8>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <410:3 410:6>]
REFERENCE_USAGE void b2Simplex::Solve3() -> int32 b2Simplex::m_count [b2Distance.cpp <411:3 411:9>]
REFERENCE_CALL void b2Simplex::Solve3() -> b2SimplexVertex & b2SimplexVertex::operator=(const b2SimplexVertex &) [b2Distance.cpp <412:8 412:8>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <412:3 412:6>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <412:10 412:13>]
LOCAL_SYMBOL: b2Distance.cpp<358:10> [b2Distance.cpp <417:6 417:10>]
LOCAL_SYMBOL: b2Distance.cpp<368:10> [b2Distance.cpp <417:23 417:27>]
REFERENCE_USAGE void b2Simplex::Solve3() -> float32 b2SimplexVertex::a [b2Distance.cpp <419:8 419:8>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2SimplexVertex b2Simplex::m_v3 [b2Distance.cpp <419:3 419:6>]
REFERENCE_USAGE void b2Simplex::Solve3() -> int32 b2Simplex::m_count [b2Distance.cpp <420:3 420:9>]
REFERENCE_CALL void b2Simplex::Solve3() -> b2SimplexVertex & b2SimplexVertex::operator=(const b2SimplexVertex &) [b2Distance.cpp <421:8 421:8>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <421:3 421:6>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2SimplexVertex b2Simplex::m_v3 [b2Distance.cpp <421:10 421:13>]
LOCAL_SYMBOL: b2Distance.cpp<368:10> [b2Distance.cpp <426:6 426:10>]
LOCAL_SYMBOL: b2Distance.cpp<369:10> [b2Distance.cpp <426:22 426:26>]
LOCAL_SYMBOL: b2Distance.cpp<374:10> [b2Distance.cpp <426:38 426:43>]
LOCAL_SYMBOL: b2Distance.cpp<428:11> [b2Distance.cpp <428:11 428:17>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> float32 [b2Distance.cpp <428:3 428:9>]
LOCAL_SYMBOL: b2Distance.cpp<368:10> [b2Distance.cpp <428:29 428:33>]
LOCAL_SYMBOL: b2Distance.cpp<369:10> [b2Distance.cpp <428:37 428:41>]
REFERENCE_USAGE void b2Simplex::Solve3() -> float32 b2SimplexVertex::a [b2Distance.cpp <429:8 429:8>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <429:3 429:6>]
LOCAL_SYMBOL: b2Distance.cpp<368:10> [b2Distance.cpp <429:12 429:16>]
LOCAL_SYMBOL: b2Distance.cpp<428:11> [b2Distance.cpp <429:20 429:26>]
REFERENCE_USAGE void b2Simplex::Solve3() -> float32 b2SimplexVertex::a [b2Distance.cpp <430:8 430:8>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2SimplexVertex b2Simplex::m_v3 [b2Distance.cpp <430:3 430:6>]
LOCAL_SYMBOL: b2Distance.cpp<369:10> [b2Distance.cpp <430:12 430:16>]
LOCAL_SYMBOL: b2Distance.cpp<428:11> [b2Distance.cpp <430:20 430:26>]
REFERENCE_USAGE void b2Simplex::Solve3() -> int32 b2Simplex::m_count [b2Distance.cpp <431:3 431:9>]
REFERENCE_CALL void b2Simplex::Solve3() -> b2SimplexVertex & b2SimplexVertex::operator=(const b2SimplexVertex &) [b2Distance.cpp <432:8 432:8>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <432:3 432:6>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2SimplexVertex b2Simplex::m_v3 [b2Distance.cpp <432:10 432:13>]
LOCAL_SYMBOL: b2Distance.cpp<437:10> [b2Distance.cpp <437:10 437:17>]
REFERENCE_TYPE_USAGE void b2Simplex::Solve3() -> float32 [b2Distance.cpp <437:2 437:8>]
LOCAL_SYMBOL: b2Distance.cpp<374:10> [b2Distance.cpp <437:29 437:34>]
LOCAL_SYMBOL: b2Distance.cpp<375:10> [b2Distance.cpp <437:38 437:43>]
LOCAL_SYMBOL: b2Distance.cpp<376:10> [b2Distance.cpp <437:47 437:52>]
REFERENCE_USAGE void b2Simplex::Solve3() -> float32 b2SimplexVertex::a [b2Distance.cpp <438:7 438:7>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <438:2 438:5>]
LOCAL_SYMBOL: b2Distance.cpp<374:10> [b2Distance.cpp <438:11 438:16>]
LOCAL_SYMBOL: b2Distance.cpp<437:10> [b2Distance.cpp <438:20 438:27>]
REFERENCE_USAGE void b2Simplex::Solve3() -> float32 b2SimplexVertex::a [b2Distance.cpp <439:7 439:7>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2SimplexVertex b2Simplex::m_v2 [b2Distance.cpp <439:2 439:5>]
LOCAL_SYMBOL: b2Distance.cpp<375:10> [b2Distance.cpp <439:11 439:16>]
LOCAL_SYMBOL: b2Distance.cpp<437:10> [b2Distance.cpp <439:20 439:27>]
REFERENCE_USAGE void b2Simplex::Solve3() -> float32 b2SimplexVertex::a [b2Distance.cpp <440:7 440:7>]
REFERENCE_USAGE void b2Simplex::Solve3() -> b2SimplexVertex b2Simplex::m_v3 [b2Distance.cpp <440:2 440:5>]
LOCAL_SYMBOL: b2Distance.cpp<376:10> [b2Distance.cpp <440:11 440:16>]
LOCAL_SYMBOL: b2Distance.cpp<437:10> [b2Distance.cpp <440:20 440:27>]
REFERENCE_USAGE void b2Simplex::Solve3() -> int32 b2Simplex::m_count [b2Distance.cpp <441:2 441:8>]
SYMBOL_FUNCTION void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) [b2Distance.cpp <444:1 <444:6 444:15> 589:1>]
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> void [b2Distance.cpp <444:1 444:4>]
LOCAL_SYMBOL: b2Distance.cpp<444:35> [b2Distance.cpp <444:35 444:40>]
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2DistanceOutput [b2Distance.cpp <444:17 444:32>]
LOCAL_SYMBOL: b2Distance.cpp<445:21> [b2Distance.cpp <445:21 445:25>]
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2SimplexCache [b2Distance.cpp <445:5 445:18>]
LOCAL_SYMBOL: b2Distance.cpp<446:28> [b2Distance.cpp <446:28 446:32>]
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2DistanceInput [b2Distance.cpp <446:11 446:25>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 b2_gjkCalls [b2Distance.cpp <448:4 448:14>]
LOCAL_SYMBOL: b2Distance.cpp<450:25> [b2Distance.cpp <450:25 450:30>]
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2DistanceProxy [b2Distance.cpp <450:8 450:22>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2DistanceProxy b2DistanceInput::proxyA [b2Distance.cpp <450:42 450:47>]
LOCAL_SYMBOL: b2Distance.cpp<446:28> [b2Distance.cpp <450:35 450:39>]
LOCAL_SYMBOL: b2Distance.cpp<451:25> [b2Distance.cpp <451:25 451:30>]
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2DistanceProxy [b2Distance.cpp <451:8 451:22>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2DistanceProxy b2DistanceInput::proxyB [b2Distance.cpp <451:42 451:47>]
LOCAL_SYMBOL: b2Distance.cpp<446:28> [b2Distance.cpp <451:35 451:39>]
LOCAL_SYMBOL: b2Distance.cpp<453:14> [b2Distance.cpp <453:14 453:23>]
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Transform [b2Distance.cpp <453:2 453:12>]
SYMBOL_FUNCTION void b2Transform::b2Transform(const b2Transform &)
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> void b2Transform::b2Transform(const b2Transform &) [b2Distance.cpp <453:34 453:43>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Transform b2DistanceInput::transformA [b2Distance.cpp <453:34 453:43>]
LOCAL_SYMBOL: b2Distance.cpp<446:28> [b2Distance.cpp <453:27 453:31>]
LOCAL_SYMBOL: b2Distance.cpp<454:14> [b2Distance.cpp <454:14 454:23>]
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Transform [b2Distance.cpp <454:2 454:12>]
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> void b2Transform::b2Transform(const b2Transform &) [b2Distance.cpp <454:34 454:43>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Transform b2DistanceInput::transformB [b2Distance.cpp <454:34 454:43>]
LOCAL_SYMBOL: b2Distance.cpp<446:28> [b2Distance.cpp <454:27 454:31>]
LOCAL_SYMBOL: b2Distance.cpp<457:12> [b2Distance.cpp <457:12 457:18>]
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Simplex [b2Distance.cpp <457:2 457:10>]
SYMBOL_FUNCTION void b2Simplex::b2Simplex()
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> void b2Simplex::b2Simplex() [b2Distance.cpp <457:12 457:18>]
SYMBOL_FUNCTION void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &)
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &) [b2Distance.cpp <458:10 458:18>]
LOCAL_SYMBOL: b2Distance.cpp<457:12> [b2Distance.cpp <458:2 458:8>]
LOCAL_SYMBOL: b2Distance.cpp<445:21> [b2Distance.cpp <458:20 458:24>]
LOCAL_SYMBOL: b2Distance.cpp<450:25> [b2Distance.cpp <458:27 458:32>]
LOCAL_SYMBOL: b2Distance.cpp<453:14> [b2Distance.cpp <458:35 458:44>]
LOCAL_SYMBOL: b2Distance.cpp<451:25> [b2Distance.cpp <458:47 458:52>]
LOCAL_SYMBOL: b2Distance.cpp<454:14> [b2Distance.cpp <458:55 458:64>]
LOCAL_SYMBOL: b2Distance.cpp<461:19> [b2Distance.cpp <461:19 461:26>]
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2SimplexVertex [b2Distance.cpp <461:2 461:16>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2SimplexVertex b2Simplex::m_v1 [b2Distance.cpp <461:39 461:42>]
LOCAL_SYMBOL: b2Distance.cpp<457:12> [b2Distance.cpp <461:31 461:37>]
LOCAL_SYMBOL: b2Distance.cpp<462:14> [b2Distance.cpp <462:14 462:23>]
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 [b2Distance.cpp <462:8 462:12>]
LOCAL_SYMBOL: b2Distance.cpp<466:8> [b2Distance.cpp <466:8 466:12>]
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 [b2Distance.cpp <466:2 466:6>]
LOCAL_SYMBOL: b2Distance.cpp<466:18> [b2Distance.cpp <466:18 466:22>]
LOCAL_SYMBOL: b2Distance.cpp<467:8> [b2Distance.cpp <467:8 467:16>]
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 [b2Distance.cpp <467:2 467:6>]
LOCAL_SYMBOL: b2Distance.cpp<470:8> [b2Distance.cpp <470:8 470:11>]
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 [b2Distance.cpp <470:2 470:6>]
LOCAL_SYMBOL: b2Distance.cpp<470:8> [b2Distance.cpp <471:9 471:12>]
LOCAL_SYMBOL: b2Distance.cpp<462:14> [b2Distance.cpp <471:16 471:25>]
LOCAL_SYMBOL: b2Distance.cpp<467:8> [b2Distance.cpp <474:3 474:11>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 b2Simplex::m_count [b2Distance.cpp <474:23 474:29>]
LOCAL_SYMBOL: b2Distance.cpp<457:12> [b2Distance.cpp <474:15 474:21>]
LOCAL_SYMBOL: b2Distance.cpp<475:14> [b2Distance.cpp <475:14 475:14>]
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 [b2Distance.cpp <475:8 475:12>]
LOCAL_SYMBOL: b2Distance.cpp<475:14> [b2Distance.cpp <475:21 475:21>]
LOCAL_SYMBOL: b2Distance.cpp<467:8> [b2Distance.cpp <475:25 475:33>]
LOCAL_SYMBOL: b2Distance.cpp<475:14> [b2Distance.cpp <475:38 475:38>]
LOCAL_SYMBOL: b2Distance.cpp<466:8> [b2Distance.cpp <477:4 477:8>]
LOCAL_SYMBOL: b2Distance.cpp<475:14> [b2Distance.cpp <477:10 477:10>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 b2SimplexVertex::indexA [b2Distance.cpp <477:27 477:32>]
LOCAL_SYMBOL: b2Distance.cpp<461:19> [b2Distance.cpp <477:15 477:22>]
LOCAL_SYMBOL: b2Distance.cpp<475:14> [b2Distance.cpp <477:24 477:24>]
LOCAL_SYMBOL: b2Distance.cpp<466:18> [b2Distance.cpp <478:4 478:8>]
LOCAL_SYMBOL: b2Distance.cpp<475:14> [b2Distance.cpp <478:10 478:10>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 b2SimplexVertex::indexB [b2Distance.cpp <478:27 478:32>]
LOCAL_SYMBOL: b2Distance.cpp<461:19> [b2Distance.cpp <478:15 478:22>]
LOCAL_SYMBOL: b2Distance.cpp<475:14> [b2Distance.cpp <478:24 478:24>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 b2Simplex::m_count [b2Distance.cpp <481:19 481:25>]
LOCAL_SYMBOL: b2Distance.cpp<457:12> [b2Distance.cpp <481:11 481:17>]
SYMBOL_FUNCTION void b2Simplex::Solve2()
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> void b2Simplex::Solve2() [b2Distance.cpp <487:12 487:17>]
LOCAL_SYMBOL: b2Distance.cpp<457:12> [b2Distance.cpp <487:4 487:10>]
SYMBOL_FUNCTION void b2Simplex::Solve3()
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> void b2Simplex::Solve3() [b2Distance.cpp <491:12 491:17>]
LOCAL_SYMBOL: b2Distance.cpp<457:12> [b2Distance.cpp <491:4 491:10>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 b2Simplex::m_count [b2Distance.cpp <499:15 499:21>]
LOCAL_SYMBOL: b2Distance.cpp<457:12> [b2Distance.cpp <499:7 499:13>]
LOCAL_SYMBOL: b2Distance.cpp<505:10> [b2Distance.cpp <505:10 505:10>]
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 [b2Distance.cpp <505:3 505:8>]
SYMBOL_FUNCTION b2Vec2 b2Simplex::GetSearchDirection() const
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 b2Simplex::GetSearchDirection() const [b2Distance.cpp <505:22 505:39>]
LOCAL_SYMBOL: b2Distance.cpp<457:12> [b2Distance.cpp <505:14 505:20>]
SYMBOL_FUNCTION float32 b2Vec2::LengthSquared() const
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> float32 b2Vec2::LengthSquared() const [b2Distance.cpp <508:9 508:21>]
LOCAL_SYMBOL: b2Distance.cpp<505:10> [b2Distance.cpp <508:7 508:7>]
LOCAL_SYMBOL: b2Distance.cpp<520:20> [b2Distance.cpp <520:20 520:25>]
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2SimplexVertex [b2Distance.cpp <520:3 520:17>]
LOCAL_SYMBOL: b2Distance.cpp<461:19> [b2Distance.cpp <520:29 520:36>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 b2Simplex::m_count [b2Distance.cpp <520:48 520:54>]
LOCAL_SYMBOL: b2Distance.cpp<457:12> [b2Distance.cpp <520:40 520:46>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 b2SimplexVertex::indexA [b2Distance.cpp <521:11 521:16>]
LOCAL_SYMBOL: b2Distance.cpp<520:20> [b2Distance.cpp <521:3 521:8>]
SYMBOL_FUNCTION int32 b2DistanceProxy::GetSupport(const b2Vec2 &) const
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 b2DistanceProxy::GetSupport(const b2Vec2 &) const [b2Distance.cpp <521:28 521:37>]
LOCAL_SYMBOL: b2Distance.cpp<450:25> [b2Distance.cpp <521:20 521:25>]
SYMBOL_FUNCTION b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) [b2Distance.cpp <521:39 521:44>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Rot b2Transform::q [b2Distance.cpp <521:57 521:57>]
LOCAL_SYMBOL: b2Distance.cpp<453:14> [b2Distance.cpp <521:46 521:55>]
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 b2Vec2::operator-() const [b2Distance.cpp <521:60 521:60>]
LOCAL_SYMBOL: b2Distance.cpp<505:10> [b2Distance.cpp <521:61 521:61>]
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Distance.cpp <522:14 522:14>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 b2SimplexVertex::wA [b2Distance.cpp <522:11 522:12>]
LOCAL_SYMBOL: b2Distance.cpp<520:20> [b2Distance.cpp <522:3 522:8>]
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2Distance.cpp <522:16 522:20>]
LOCAL_SYMBOL: b2Distance.cpp<453:14> [b2Distance.cpp <522:22 522:31>]
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> const b2Vec2 & b2DistanceProxy::GetVertex(int32) const [b2Distance.cpp <522:42 522:50>]
LOCAL_SYMBOL: b2Distance.cpp<450:25> [b2Distance.cpp <522:34 522:39>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 b2SimplexVertex::indexA [b2Distance.cpp <522:60 522:65>]
LOCAL_SYMBOL: b2Distance.cpp<520:20> [b2Distance.cpp <522:52 522:57>]
LOCAL_SYMBOL: b2Distance.cpp<523:10> [b2Distance.cpp <523:10 523:16>]
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 [b2Distance.cpp <523:3 523:8>]
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> void b2Vec2::b2Vec2() [b2Distance.cpp <523:10 523:16>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 b2SimplexVertex::indexB [b2Distance.cpp <524:11 524:16>]
LOCAL_SYMBOL: b2Distance.cpp<520:20> [b2Distance.cpp <524:3 524:8>]
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 b2DistanceProxy::GetSupport(const b2Vec2 &) const [b2Distance.cpp <524:28 524:37>]
LOCAL_SYMBOL: b2Distance.cpp<451:25> [b2Distance.cpp <524:20 524:25>]
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) [b2Distance.cpp <524:39 524:44>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Rot b2Transform::q [b2Distance.cpp <524:57 524:57>]
LOCAL_SYMBOL: b2Distance.cpp<454:14> [b2Distance.cpp <524:46 524:55>]
LOCAL_SYMBOL: b2Distance.cpp<505:10> [b2Distance.cpp <524:60 524:60>]
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Distance.cpp <525:14 525:14>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 b2SimplexVertex::wB [b2Distance.cpp <525:11 525:12>]
LOCAL_SYMBOL: b2Distance.cpp<520:20> [b2Distance.cpp <525:3 525:8>]
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2Distance.cpp <525:16 525:20>]
LOCAL_SYMBOL: b2Distance.cpp<454:14> [b2Distance.cpp <525:22 525:31>]
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> const b2Vec2 & b2DistanceProxy::GetVertex(int32) const [b2Distance.cpp <525:42 525:50>]
LOCAL_SYMBOL: b2Distance.cpp<451:25> [b2Distance.cpp <525:34 525:39>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 b2SimplexVertex::indexB [b2Distance.cpp <525:60 525:65>]
LOCAL_SYMBOL: b2Distance.cpp<520:20> [b2Distance.cpp <525:52 525:57>]
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Distance.cpp <526:13 526:13>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 b2SimplexVertex::w [b2Distance.cpp <526:11 526:11>]
LOCAL_SYMBOL: b2Distance.cpp<520:20> [b2Distance.cpp <526:3 526:8>]
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <526:26 526:26>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 b2SimplexVertex::wB [b2Distance.cpp <526:23 526:24>]
LOCAL_SYMBOL: b2Distance.cpp<520:20> [b2Distance.cpp <526:15 526:20>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 b2SimplexVertex::wA [b2Distance.cpp <526:36 526:37>]
LOCAL_SYMBOL: b2Distance.cpp<520:20> [b2Distance.cpp <526:28 526:33>]
LOCAL_SYMBOL: b2Distance.cpp<470:8> [b2Distance.cpp <529:5 529:8>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 b2_gjkIters [b2Distance.cpp <530:5 530:15>]
LOCAL_SYMBOL: b2Distance.cpp<533:8> [b2Distance.cpp <533:8 533:16>]
SYMBOL_BUILTIN_TYPE bool
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> bool [b2Distance.cpp <533:3 533:6>]
LOCAL_SYMBOL: b2Distance.cpp<534:14> [b2Distance.cpp <534:14 534:14>]
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 [b2Distance.cpp <534:8 534:12>]
LOCAL_SYMBOL: b2Distance.cpp<534:14> [b2Distance.cpp <534:21 534:21>]
LOCAL_SYMBOL: b2Distance.cpp<467:8> [b2Distance.cpp <534:25 534:33>]
LOCAL_SYMBOL: b2Distance.cpp<534:14> [b2Distance.cpp <534:38 534:38>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 b2SimplexVertex::indexA [b2Distance.cpp <536:16 536:21>]
LOCAL_SYMBOL: b2Distance.cpp<520:20> [b2Distance.cpp <536:8 536:13>]
LOCAL_SYMBOL: b2Distance.cpp<466:8> [b2Distance.cpp <536:26 536:30>]
LOCAL_SYMBOL: b2Distance.cpp<534:14> [b2Distance.cpp <536:32 536:32>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 b2SimplexVertex::indexB [b2Distance.cpp <536:46 536:51>]
LOCAL_SYMBOL: b2Distance.cpp<520:20> [b2Distance.cpp <536:38 536:43>]
LOCAL_SYMBOL: b2Distance.cpp<466:18> [b2Distance.cpp <536:56 536:60>]
LOCAL_SYMBOL: b2Distance.cpp<534:14> [b2Distance.cpp <536:62 536:62>]
LOCAL_SYMBOL: b2Distance.cpp<533:8> [b2Distance.cpp <538:5 538:13>]
LOCAL_SYMBOL: b2Distance.cpp<533:8> [b2Distance.cpp <544:7 544:15>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 b2Simplex::m_count [b2Distance.cpp <550:13 550:19>]
LOCAL_SYMBOL: b2Distance.cpp<457:12> [b2Distance.cpp <550:5 550:11>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 b2_gjkMaxIters [b2Distance.cpp <553:2 553:15>]
SYMBOL_FUNCTION int b2Max<int>(int, int)
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int b2Max<int>(int, int) [b2Distance.cpp <553:19 553:23>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 b2_gjkMaxIters [b2Distance.cpp <553:25 553:38>]
LOCAL_SYMBOL: b2Distance.cpp<470:8> [b2Distance.cpp <553:41 553:44>]
SYMBOL_FUNCTION void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const [b2Distance.cpp <556:10 556:25>]
LOCAL_SYMBOL: b2Distance.cpp<457:12> [b2Distance.cpp <556:2 556:8>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 b2DistanceOutput::pointA [b2Distance.cpp <556:36 556:41>]
LOCAL_SYMBOL: b2Distance.cpp<444:35> [b2Distance.cpp <556:28 556:33>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 b2DistanceOutput::pointB [b2Distance.cpp <556:53 556:58>]
LOCAL_SYMBOL: b2Distance.cpp<444:35> [b2Distance.cpp <556:45 556:50>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> float32 b2DistanceOutput::distance [b2Distance.cpp <557:10 557:17>]
LOCAL_SYMBOL: b2Distance.cpp<444:35> [b2Distance.cpp <557:2 557:7>]
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> float32 b2Distance(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <557:21 557:30>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 b2DistanceOutput::pointA [b2Distance.cpp <557:40 557:45>]
LOCAL_SYMBOL: b2Distance.cpp<444:35> [b2Distance.cpp <557:32 557:37>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 b2DistanceOutput::pointB [b2Distance.cpp <557:56 557:61>]
LOCAL_SYMBOL: b2Distance.cpp<444:35> [b2Distance.cpp <557:48 557:53>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> int32 b2DistanceOutput::iterations [b2Distance.cpp <558:10 558:19>]
LOCAL_SYMBOL: b2Distance.cpp<444:35> [b2Distance.cpp <558:2 558:7>]
LOCAL_SYMBOL: b2Distance.cpp<470:8> [b2Distance.cpp <558:23 558:26>]
SYMBOL_FUNCTION void b2Simplex::WriteCache(b2SimplexCache *) const
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> void b2Simplex::WriteCache(b2SimplexCache *) const [b2Distance.cpp <561:10 561:19>]
LOCAL_SYMBOL: b2Distance.cpp<457:12> [b2Distance.cpp <561:2 561:8>]
LOCAL_SYMBOL: b2Distance.cpp<445:21> [b2Distance.cpp <561:21 561:25>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> bool b2DistanceInput::useRadii [b2Distance.cpp <564:13 564:20>]
LOCAL_SYMBOL: b2Distance.cpp<446:28> [b2Distance.cpp <564:6 564:10>]
LOCAL_SYMBOL: b2Distance.cpp<566:11> [b2Distance.cpp <566:11 566:12>]
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> float32 [b2Distance.cpp <566:3 566:9>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> float32 b2DistanceProxy::m_radius [b2Distance.cpp <566:24 566:31>]
LOCAL_SYMBOL: b2Distance.cpp<450:25> [b2Distance.cpp <566:16 566:21>]
LOCAL_SYMBOL: b2Distance.cpp<567:11> [b2Distance.cpp <567:11 567:12>]
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> float32 [b2Distance.cpp <567:3 567:9>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> float32 b2DistanceProxy::m_radius [b2Distance.cpp <567:24 567:31>]
LOCAL_SYMBOL: b2Distance.cpp<451:25> [b2Distance.cpp <567:16 567:21>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> float32 b2DistanceOutput::distance [b2Distance.cpp <569:15 569:22>]
LOCAL_SYMBOL: b2Distance.cpp<444:35> [b2Distance.cpp <569:7 569:12>]
LOCAL_SYMBOL: b2Distance.cpp<566:11> [b2Distance.cpp <569:26 569:27>]
LOCAL_SYMBOL: b2Distance.cpp<567:11> [b2Distance.cpp <569:31 569:32>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> float32 b2DistanceOutput::distance [b2Distance.cpp <569:45 569:52>]
LOCAL_SYMBOL: b2Distance.cpp<444:35> [b2Distance.cpp <569:37 569:42>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> float32 b2DistanceOutput::distance [b2Distance.cpp <573:12 573:19>]
LOCAL_SYMBOL: b2Distance.cpp<444:35> [b2Distance.cpp <573:4 573:9>]
LOCAL_SYMBOL: b2Distance.cpp<566:11> [b2Distance.cpp <573:24 573:25>]
LOCAL_SYMBOL: b2Distance.cpp<567:11> [b2Distance.cpp <573:29 573:30>]
LOCAL_SYMBOL: b2Distance.cpp<574:11> [b2Distance.cpp <574:11 574:16>]
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 [b2Distance.cpp <574:4 574:9>]
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <574:35 574:35>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 b2DistanceOutput::pointB [b2Distance.cpp <574:28 574:33>]
LOCAL_SYMBOL: b2Distance.cpp<444:35> [b2Distance.cpp <574:20 574:25>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 b2DistanceOutput::pointA [b2Distance.cpp <574:45 574:50>]
LOCAL_SYMBOL: b2Distance.cpp<444:35> [b2Distance.cpp <574:37 574:42>]
SYMBOL_FUNCTION float32 b2Vec2::Normalize()
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> float32 b2Vec2::Normalize() [b2Distance.cpp <575:11 575:19>]
LOCAL_SYMBOL: b2Distance.cpp<574:11> [b2Distance.cpp <575:4 575:9>]
SYMBOL_FUNCTION void b2Vec2::operator+=(const b2Vec2 &)
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> void b2Vec2::operator+=(const b2Vec2 &) [b2Distance.cpp <576:19 576:20>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 b2DistanceOutput::pointA [b2Distance.cpp <576:12 576:17>]
LOCAL_SYMBOL: b2Distance.cpp<444:35> [b2Distance.cpp <576:4 576:9>]
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2Distance.cpp <576:25 576:25>]
LOCAL_SYMBOL: b2Distance.cpp<566:11> [b2Distance.cpp <576:22 576:23>]
LOCAL_SYMBOL: b2Distance.cpp<574:11> [b2Distance.cpp <576:27 576:32>]
SYMBOL_FUNCTION void b2Vec2::operator-=(const b2Vec2 &)
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> void b2Vec2::operator-=(const b2Vec2 &) [b2Distance.cpp <577:19 577:20>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 b2DistanceOutput::pointB [b2Distance.cpp <577:12 577:17>]
LOCAL_SYMBOL: b2Distance.cpp<444:35> [b2Distance.cpp <577:4 577:9>]
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2Distance.cpp <577:25 577:25>]
LOCAL_SYMBOL: b2Distance.cpp<567:11> [b2Distance.cpp <577:22 577:23>]
LOCAL_SYMBOL: b2Distance.cpp<574:11> [b2Distance.cpp <577:27 577:32>]
LOCAL_SYMBOL: b2Distance.cpp<583:11> [b2Distance.cpp <583:11 583:11>]
REFERENCE_TYPE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 [b2Distance.cpp <583:4 583:9>]
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2Distance.cpp <583:20 583:20>]
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2Distance.cpp <583:38 583:38>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 b2DistanceOutput::pointA [b2Distance.cpp <583:31 583:36>]
LOCAL_SYMBOL: b2Distance.cpp<444:35> [b2Distance.cpp <583:23 583:28>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 b2DistanceOutput::pointB [b2Distance.cpp <583:48 583:53>]
LOCAL_SYMBOL: b2Distance.cpp<444:35> [b2Distance.cpp <583:40 583:45>]
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Distance.cpp <584:19 584:19>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 b2DistanceOutput::pointA [b2Distance.cpp <584:12 584:17>]
LOCAL_SYMBOL: b2Distance.cpp<444:35> [b2Distance.cpp <584:4 584:9>]
LOCAL_SYMBOL: b2Distance.cpp<583:11> [b2Distance.cpp <584:21 584:21>]
REFERENCE_CALL void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Distance.cpp <585:19 585:19>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> b2Vec2 b2DistanceOutput::pointB [b2Distance.cpp <585:12 585:17>]
LOCAL_SYMBOL: b2Distance.cpp<444:35> [b2Distance.cpp <585:4 585:9>]
LOCAL_SYMBOL: b2Distance.cpp<583:11> [b2Distance.cpp <585:21 585:21>]
REFERENCE_USAGE void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *) -> float32 b2DistanceOutput::distance [b2Distance.cpp <586:12 586:19>]
LOCAL_SYMBOL: b2Distance.cpp<444:35> [b2Distance.cpp <586:4 586:9>]
