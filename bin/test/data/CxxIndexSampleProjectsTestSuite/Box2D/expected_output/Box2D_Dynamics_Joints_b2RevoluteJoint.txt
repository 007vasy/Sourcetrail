FILE: b2RevoluteJoint.cpp
COMMENT: comment [b2RevoluteJoint.cpp <1:1 17:3>]
COMMENT: comment [b2RevoluteJoint.cpp <23:1 23:29>]
COMMENT: comment [b2RevoluteJoint.cpp <24:1 24:15>]
COMMENT: comment [b2RevoluteJoint.cpp <25:1 25:18>]
COMMENT: comment [b2RevoluteJoint.cpp <26:1 26:50>]
COMMENT: comment [b2RevoluteJoint.cpp <27:1 27:32>]
COMMENT: comment [b2RevoluteJoint.cpp <28:1 28:18>]
COMMENT: comment [b2RevoluteJoint.cpp <29:1 29:44>]
COMMENT: comment [b2RevoluteJoint.cpp <31:1 31:20>]
COMMENT: comment [b2RevoluteJoint.cpp <32:1 32:18>]
COMMENT: comment [b2RevoluteJoint.cpp <33:1 33:22>]
COMMENT: comment [b2RevoluteJoint.cpp <34:1 34:21>]
COMMENT: comment [b2RevoluteJoint.cpp <88:2 88:32>]
COMMENT: comment [b2RevoluteJoint.cpp <89:2 89:32>]
COMMENT: comment [b2RevoluteJoint.cpp <90:2 90:23>]
COMMENT: comment [b2RevoluteJoint.cpp <92:2 92:11>]
COMMENT: comment [b2RevoluteJoint.cpp <93:2 93:85>]
COMMENT: comment [b2RevoluteJoint.cpp <94:2 94:85>]
COMMENT: comment [b2RevoluteJoint.cpp <95:2 95:85>]
REFERENCE_MACRO_USAGE b2RevoluteJoint.cpp -> b2_angularSlop [b2RevoluteJoint.cpp <126:51 126:64>]
REFERENCE_MACRO_USAGE b2Settings.h -> b2_pi [b2Settings.h <76:43 76:47>]
COMMENT: comment [b2RevoluteJoint.cpp <159:3 159:53>]
COMMENT: comment [b2RevoluteJoint.cpp <195:2 195:28>]
COMMENT: comment [b2RevoluteJoint.cpp <209:2 209:28>]
COMMENT: comment [b2RevoluteJoint.cpp <271:3 271:37>]
COMMENT: comment [b2RevoluteJoint.cpp <305:2 305:36>]
COMMENT: comment [b2RevoluteJoint.cpp <313:4 313:40>]
REFERENCE_MACRO_USAGE b2RevoluteJoint.cpp -> b2_maxAngularCorrection [b2RevoluteJoint.cpp <314:47 314:69>]
REFERENCE_MACRO_USAGE b2Settings.h -> b2_pi [b2Settings.h <102:51 102:55>]
REFERENCE_MACRO_USAGE b2RevoluteJoint.cpp -> b2_maxAngularCorrection [b2RevoluteJoint.cpp <314:72 314:94>]
COMMENT: comment [b2RevoluteJoint.cpp <323:4 323:61>]
REFERENCE_MACRO_USAGE b2RevoluteJoint.cpp -> b2_angularSlop [b2RevoluteJoint.cpp <324:20 324:33>]
REFERENCE_MACRO_USAGE b2RevoluteJoint.cpp -> b2_maxAngularCorrection [b2RevoluteJoint.cpp <324:37 324:59>]
COMMENT: comment [b2RevoluteJoint.cpp <332:4 332:61>]
REFERENCE_MACRO_USAGE b2RevoluteJoint.cpp -> b2_angularSlop [b2RevoluteJoint.cpp <333:20 333:33>]
REFERENCE_MACRO_USAGE b2RevoluteJoint.cpp -> b2_maxAngularCorrection [b2RevoluteJoint.cpp <333:42 333:64>]
COMMENT: comment [b2RevoluteJoint.cpp <341:2 341:37>]
REFERENCE_MACRO_USAGE b2RevoluteJoint.cpp -> b2_linearSlop [b2RevoluteJoint.cpp <374:26 374:38>]
REFERENCE_MACRO_USAGE b2RevoluteJoint.cpp -> b2_angularSlop [b2RevoluteJoint.cpp <374:59 374:72>]
REFERENCE_MACRO_USAGE b2RevoluteJoint.cpp -> b2Assert [b2RevoluteJoint.cpp <480:2 480:9>]
REFERENCE_MACRO_USAGE b2Settings.h -> assert [b2Settings.h <31:21 31:26>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:23 34:31>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:47 34:55>]
REFERENCE_MACRO_USAGE assert.h -> __FILE__ [assert.h <34:57 34:64>]
REFERENCE_MACRO_USAGE assert.h -> __LINE__ [assert.h <34:79 34:86>]
SYMBOL_METHOD public void b2RevoluteJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) [b2RevoluteJoint.cpp <36:1 <36:26 36:35> 43:1>]
SYMBOL_STRUCT b2RevoluteJointDef
QUALIFIER: b2RevoluteJointDef [b2RevoluteJoint.cpp <36:6 36:23>]
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2RevoluteJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> void [b2RevoluteJoint.cpp <36:1 36:4>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<36:45> [b2RevoluteJoint.cpp <36:45 36:46>]
REFERENCE_TYPE_USAGE void b2RevoluteJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Body [b2RevoluteJoint.cpp <36:37 36:42>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<36:57> [b2RevoluteJoint.cpp <36:57 36:58>]
REFERENCE_TYPE_USAGE void b2RevoluteJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Body [b2RevoluteJoint.cpp <36:49 36:54>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<36:75> [b2RevoluteJoint.cpp <36:75 36:80>]
REFERENCE_TYPE_USAGE void b2RevoluteJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Vec2 [b2RevoluteJoint.cpp <36:67 36:72>]
REFERENCE_USAGE void b2RevoluteJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Body * b2JointDef::bodyA [b2RevoluteJoint.cpp <38:2 38:6>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<36:45> [b2RevoluteJoint.cpp <38:10 38:11>]
REFERENCE_USAGE void b2RevoluteJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Body * b2JointDef::bodyB [b2RevoluteJoint.cpp <39:2 39:6>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<36:57> [b2RevoluteJoint.cpp <39:10 39:11>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &&)
REFERENCE_CALL void b2RevoluteJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2RevoluteJoint.cpp <40:15 40:15>]
REFERENCE_USAGE void b2RevoluteJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Vec2 b2RevoluteJointDef::localAnchorA [b2RevoluteJoint.cpp <40:2 40:13>]
SYMBOL_FUNCTION b2Vec2 b2Body::GetLocalPoint(const b2Vec2 &) const
REFERENCE_CALL void b2RevoluteJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Vec2 b2Body::GetLocalPoint(const b2Vec2 &) const [b2RevoluteJoint.cpp <40:24 40:36>]
REFERENCE_USAGE void b2RevoluteJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Body * b2JointDef::bodyA [b2RevoluteJoint.cpp <40:17 40:21>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<36:75> [b2RevoluteJoint.cpp <40:38 40:43>]
REFERENCE_CALL void b2RevoluteJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2RevoluteJoint.cpp <41:15 41:15>]
REFERENCE_USAGE void b2RevoluteJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Vec2 b2RevoluteJointDef::localAnchorB [b2RevoluteJoint.cpp <41:2 41:13>]
REFERENCE_CALL void b2RevoluteJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Vec2 b2Body::GetLocalPoint(const b2Vec2 &) const [b2RevoluteJoint.cpp <41:24 41:36>]
REFERENCE_USAGE void b2RevoluteJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Body * b2JointDef::bodyB [b2RevoluteJoint.cpp <41:17 41:21>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<36:75> [b2RevoluteJoint.cpp <41:38 41:43>]
REFERENCE_USAGE void b2RevoluteJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> float32 b2RevoluteJointDef::referenceAngle [b2RevoluteJoint.cpp <42:2 42:15>]
SYMBOL_FUNCTION float32 b2Body::GetAngle() const
REFERENCE_CALL void b2RevoluteJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> float32 b2Body::GetAngle() const [b2RevoluteJoint.cpp <42:26 42:33>]
REFERENCE_USAGE void b2RevoluteJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Body * b2JointDef::bodyB [b2RevoluteJoint.cpp <42:19 42:23>]
REFERENCE_CALL void b2RevoluteJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> float32 b2Body::GetAngle() const [b2RevoluteJoint.cpp <42:46 42:53>]
REFERENCE_USAGE void b2RevoluteJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &) -> b2Body * b2JointDef::bodyA [b2RevoluteJoint.cpp <42:39 42:43>]
SYMBOL_METHOD protected void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) [b2RevoluteJoint.cpp <45:1 <45:18 45:32> 62:1>]
SYMBOL_CLASS b2RevoluteJoint
QUALIFIER: b2RevoluteJoint [b2RevoluteJoint.cpp <45:1 45:15>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<45:60> [b2RevoluteJoint.cpp <45:60 45:62>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> b2RevoluteJointDef [b2RevoluteJoint.cpp <45:40 45:57>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> b2Joint [b2RevoluteJoint.cpp <46:3 46:9>]
SYMBOL_FUNCTION void b2Joint::b2Joint(const b2JointDef *)
REFERENCE_CALL void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> void b2Joint::b2Joint(const b2JointDef *) [b2RevoluteJoint.cpp <46:3 46:9>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<45:60> [b2RevoluteJoint.cpp <46:11 46:13>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> b2Vec2 b2RevoluteJoint::m_localAnchorA [b2RevoluteJoint.cpp <45:18 45:32>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> void b2Vec2::b2Vec2() [b2RevoluteJoint.cpp <45:18 45:32>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> b2Vec2 b2RevoluteJoint::m_localAnchorB [b2RevoluteJoint.cpp <45:18 45:32>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <45:18 45:32>]
SYMBOL_FUNCTION void b2Vec3::b2Vec3()
REFERENCE_CALL void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> void b2Vec3::b2Vec3() [b2RevoluteJoint.cpp <45:18 45:32>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> b2Vec2 b2RevoluteJoint::m_rA [b2RevoluteJoint.cpp <45:18 45:32>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> b2Vec2 b2RevoluteJoint::m_rB [b2RevoluteJoint.cpp <45:18 45:32>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> b2Vec2 b2RevoluteJoint::m_localCenterA [b2RevoluteJoint.cpp <45:18 45:32>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> b2Vec2 b2RevoluteJoint::m_localCenterB [b2RevoluteJoint.cpp <45:18 45:32>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> b2Mat33 b2RevoluteJoint::m_mass [b2RevoluteJoint.cpp <45:18 45:32>]
SYMBOL_FUNCTION void b2Mat33::b2Mat33()
REFERENCE_CALL void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> void b2Mat33::b2Mat33() [b2RevoluteJoint.cpp <45:18 45:32>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2RevoluteJoint.cpp <48:17 48:17>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> b2Vec2 b2RevoluteJoint::m_localAnchorA [b2RevoluteJoint.cpp <48:2 48:15>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> b2Vec2 b2RevoluteJointDef::localAnchorA [b2RevoluteJoint.cpp <48:24 48:35>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<45:60> [b2RevoluteJoint.cpp <48:19 48:21>]
REFERENCE_CALL void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2RevoluteJoint.cpp <49:17 49:17>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> b2Vec2 b2RevoluteJoint::m_localAnchorB [b2RevoluteJoint.cpp <49:2 49:15>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> b2Vec2 b2RevoluteJointDef::localAnchorB [b2RevoluteJoint.cpp <49:24 49:35>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<45:60> [b2RevoluteJoint.cpp <49:19 49:21>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> float32 b2RevoluteJoint::m_referenceAngle [b2RevoluteJoint.cpp <50:2 50:17>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> float32 b2RevoluteJointDef::referenceAngle [b2RevoluteJoint.cpp <50:26 50:39>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<45:60> [b2RevoluteJoint.cpp <50:21 50:23>]
SYMBOL_FUNCTION void b2Vec3::SetZero()
REFERENCE_CALL void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> void b2Vec3::SetZero() [b2RevoluteJoint.cpp <52:12 52:18>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <52:2 52:10>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> float32 b2RevoluteJoint::m_motorImpulse [b2RevoluteJoint.cpp <53:2 53:15>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> float32 b2RevoluteJoint::m_lowerAngle [b2RevoluteJoint.cpp <55:2 55:13>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> float32 b2RevoluteJointDef::lowerAngle [b2RevoluteJoint.cpp <55:22 55:31>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<45:60> [b2RevoluteJoint.cpp <55:17 55:19>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> float32 b2RevoluteJoint::m_upperAngle [b2RevoluteJoint.cpp <56:2 56:13>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> float32 b2RevoluteJointDef::upperAngle [b2RevoluteJoint.cpp <56:22 56:31>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<45:60> [b2RevoluteJoint.cpp <56:17 56:19>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> float32 b2RevoluteJoint::m_maxMotorTorque [b2RevoluteJoint.cpp <57:2 57:17>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> float32 b2RevoluteJointDef::maxMotorTorque [b2RevoluteJoint.cpp <57:26 57:39>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<45:60> [b2RevoluteJoint.cpp <57:21 57:23>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> float32 b2RevoluteJoint::m_motorSpeed [b2RevoluteJoint.cpp <58:2 58:13>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> float32 b2RevoluteJointDef::motorSpeed [b2RevoluteJoint.cpp <58:22 58:31>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<45:60> [b2RevoluteJoint.cpp <58:17 58:19>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> bool b2RevoluteJoint::m_enableLimit [b2RevoluteJoint.cpp <59:2 59:14>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> bool b2RevoluteJointDef::enableLimit [b2RevoluteJoint.cpp <59:23 59:33>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<45:60> [b2RevoluteJoint.cpp <59:18 59:20>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> bool b2RevoluteJoint::m_enableMotor [b2RevoluteJoint.cpp <60:2 60:14>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> bool b2RevoluteJointDef::enableMotor [b2RevoluteJoint.cpp <60:23 60:33>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<45:60> [b2RevoluteJoint.cpp <60:18 60:20>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> b2LimitState b2RevoluteJoint::m_limitState [b2RevoluteJoint.cpp <61:2 61:13>]
REFERENCE_USAGE void b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef *) -> b2LimitState::e_inactiveLimit [b2RevoluteJoint.cpp <61:17 61:31>]
SYMBOL_METHOD protected void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) [b2RevoluteJoint.cpp <64:1 <64:23 64:45> 181:1>]
SYMBOL_FUNCTION void b2Joint::InitVelocityConstraints(const b2SolverData &)
REFERENCE_OVERRIDE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Joint::InitVelocityConstraints(const b2SolverData &) [b2RevoluteJoint.cpp <64:23 64:45>]
QUALIFIER: b2RevoluteJoint [b2RevoluteJoint.cpp <64:6 64:20>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> void [b2RevoluteJoint.cpp <64:1 64:4>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<64:67> [b2RevoluteJoint.cpp <64:67 64:70>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2SolverData [b2RevoluteJoint.cpp <64:53 64:64>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexA [b2RevoluteJoint.cpp <66:2 66:9>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2Body::m_islandIndex [b2RevoluteJoint.cpp <66:22 66:34>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2RevoluteJoint.cpp <66:13 66:19>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexB [b2RevoluteJoint.cpp <67:2 67:9>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2Body::m_islandIndex [b2RevoluteJoint.cpp <67:22 67:34>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2RevoluteJoint.cpp <67:13 67:19>]
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2RevoluteJoint.cpp <68:17 68:17>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_localCenterA [b2RevoluteJoint.cpp <68:2 68:15>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Sweep::localCenter [b2RevoluteJoint.cpp <68:36 68:46>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Sweep b2Body::m_sweep [b2RevoluteJoint.cpp <68:28 68:34>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2RevoluteJoint.cpp <68:19 68:25>]
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2RevoluteJoint.cpp <69:17 69:17>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_localCenterB [b2RevoluteJoint.cpp <69:2 69:15>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Sweep::localCenter [b2RevoluteJoint.cpp <69:36 69:46>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Sweep b2Body::m_sweep [b2RevoluteJoint.cpp <69:28 69:34>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2RevoluteJoint.cpp <69:19 69:25>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_invMassA [b2RevoluteJoint.cpp <70:2 70:11>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invMass [b2RevoluteJoint.cpp <70:24 70:32>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2RevoluteJoint.cpp <70:15 70:21>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_invMassB [b2RevoluteJoint.cpp <71:2 71:11>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invMass [b2RevoluteJoint.cpp <71:24 71:32>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2RevoluteJoint.cpp <71:15 71:21>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_invIA [b2RevoluteJoint.cpp <72:2 72:8>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invI [b2RevoluteJoint.cpp <72:21 72:26>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2RevoluteJoint.cpp <72:12 72:18>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_invIB [b2RevoluteJoint.cpp <73:2 73:8>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invI [b2RevoluteJoint.cpp <73:21 73:26>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2RevoluteJoint.cpp <73:12 73:18>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<75:10> [b2RevoluteJoint.cpp <75:10 75:11>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <75:2 75:8>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Position::a [b2RevoluteJoint.cpp <75:40 75:40>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2RevoluteJoint.cpp <75:20 75:28>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<64:67> [b2RevoluteJoint.cpp <75:15 75:18>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexA [b2RevoluteJoint.cpp <75:30 75:37>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<76:9> [b2RevoluteJoint.cpp <76:9 76:10>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2RevoluteJoint.cpp <76:2 76:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2RevoluteJoint.cpp <76:40 76:40>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2RevoluteJoint.cpp <76:40 76:40>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2RevoluteJoint.cpp <76:19 76:28>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<64:67> [b2RevoluteJoint.cpp <76:14 76:17>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexA [b2RevoluteJoint.cpp <76:30 76:37>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<77:10> [b2RevoluteJoint.cpp <77:10 77:11>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <77:2 77:8>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2RevoluteJoint.cpp <77:41 77:41>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2RevoluteJoint.cpp <77:20 77:29>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<64:67> [b2RevoluteJoint.cpp <77:15 77:18>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexA [b2RevoluteJoint.cpp <77:31 77:38>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<79:10> [b2RevoluteJoint.cpp <79:10 79:11>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <79:2 79:8>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Position::a [b2RevoluteJoint.cpp <79:40 79:40>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2RevoluteJoint.cpp <79:20 79:28>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<64:67> [b2RevoluteJoint.cpp <79:15 79:18>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexB [b2RevoluteJoint.cpp <79:30 79:37>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<80:9> [b2RevoluteJoint.cpp <80:9 80:10>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2RevoluteJoint.cpp <80:2 80:7>]
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2RevoluteJoint.cpp <80:40 80:40>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2RevoluteJoint.cpp <80:40 80:40>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2RevoluteJoint.cpp <80:19 80:28>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<64:67> [b2RevoluteJoint.cpp <80:14 80:17>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexB [b2RevoluteJoint.cpp <80:30 80:37>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<81:10> [b2RevoluteJoint.cpp <81:10 81:11>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <81:2 81:8>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2RevoluteJoint.cpp <81:41 81:41>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2RevoluteJoint.cpp <81:20 81:29>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<64:67> [b2RevoluteJoint.cpp <81:15 81:18>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexB [b2RevoluteJoint.cpp <81:31 81:38>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<83:8> [b2RevoluteJoint.cpp <83:8 83:9>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Rot [b2RevoluteJoint.cpp <83:2 83:6>]
SYMBOL_FUNCTION void b2Rot::b2Rot(float32)
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2RevoluteJoint.cpp <83:8 83:9>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<75:10> [b2RevoluteJoint.cpp <83:11 83:12>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<83:16> [b2RevoluteJoint.cpp <83:16 83:17>]
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2RevoluteJoint.cpp <83:16 83:17>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<79:10> [b2RevoluteJoint.cpp <83:19 83:20>]
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2RevoluteJoint.cpp <85:7 85:7>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rA [b2RevoluteJoint.cpp <85:2 85:5>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2RevoluteJoint.cpp <85:9 85:13>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<83:8> [b2RevoluteJoint.cpp <85:15 85:16>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2RevoluteJoint.cpp <85:34 85:34>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_localAnchorA [b2RevoluteJoint.cpp <85:19 85:32>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_localCenterA [b2RevoluteJoint.cpp <85:36 85:49>]
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2RevoluteJoint.cpp <86:7 86:7>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rB [b2RevoluteJoint.cpp <86:2 86:5>]
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2RevoluteJoint.cpp <86:9 86:13>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<83:16> [b2RevoluteJoint.cpp <86:15 86:16>]
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2RevoluteJoint.cpp <86:34 86:34>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_localAnchorB [b2RevoluteJoint.cpp <86:19 86:32>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_localCenterB [b2RevoluteJoint.cpp <86:36 86:49>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<97:10> [b2RevoluteJoint.cpp <97:10 97:11>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <97:2 97:8>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_invMassA [b2RevoluteJoint.cpp <97:15 97:24>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<97:27> [b2RevoluteJoint.cpp <97:27 97:28>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_invMassB [b2RevoluteJoint.cpp <97:32 97:41>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<98:10> [b2RevoluteJoint.cpp <98:10 98:11>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <98:2 98:8>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_invIA [b2RevoluteJoint.cpp <98:15 98:21>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<98:24> [b2RevoluteJoint.cpp <98:24 98:25>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_invIB [b2RevoluteJoint.cpp <98:29 98:35>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<100:7> [b2RevoluteJoint.cpp <100:7 100:19>]
SYMBOL_BUILTIN_TYPE bool
REFERENCE_TYPE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> bool [b2RevoluteJoint.cpp <100:2 100:5>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<98:10> [b2RevoluteJoint.cpp <100:24 100:25>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<98:24> [b2RevoluteJoint.cpp <100:29 100:30>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2RevoluteJoint.cpp <102:12 102:12>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ex [b2RevoluteJoint.cpp <102:9 102:10>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Mat33 b2RevoluteJoint::m_mass [b2RevoluteJoint.cpp <102:2 102:7>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<97:10> [b2RevoluteJoint.cpp <102:16 102:17>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<97:27> [b2RevoluteJoint.cpp <102:21 102:22>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2RevoluteJoint.cpp <102:31 102:31>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rA [b2RevoluteJoint.cpp <102:26 102:29>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2RevoluteJoint.cpp <102:40 102:40>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rA [b2RevoluteJoint.cpp <102:35 102:38>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<98:10> [b2RevoluteJoint.cpp <102:44 102:45>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2RevoluteJoint.cpp <102:54 102:54>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rB [b2RevoluteJoint.cpp <102:49 102:52>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2RevoluteJoint.cpp <102:63 102:63>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rB [b2RevoluteJoint.cpp <102:58 102:61>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<98:24> [b2RevoluteJoint.cpp <102:67 102:68>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2RevoluteJoint.cpp <103:12 103:12>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ey [b2RevoluteJoint.cpp <103:9 103:10>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Mat33 b2RevoluteJoint::m_mass [b2RevoluteJoint.cpp <103:2 103:7>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2RevoluteJoint.cpp <103:22 103:22>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rA [b2RevoluteJoint.cpp <103:17 103:20>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2RevoluteJoint.cpp <103:31 103:31>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rA [b2RevoluteJoint.cpp <103:26 103:29>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<98:10> [b2RevoluteJoint.cpp <103:35 103:36>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2RevoluteJoint.cpp <103:45 103:45>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rB [b2RevoluteJoint.cpp <103:40 103:43>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2RevoluteJoint.cpp <103:54 103:54>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rB [b2RevoluteJoint.cpp <103:49 103:52>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<98:24> [b2RevoluteJoint.cpp <103:58 103:59>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2RevoluteJoint.cpp <104:12 104:12>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2RevoluteJoint.cpp <104:9 104:10>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Mat33 b2RevoluteJoint::m_mass [b2RevoluteJoint.cpp <104:2 104:7>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2RevoluteJoint.cpp <104:22 104:22>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rA [b2RevoluteJoint.cpp <104:17 104:20>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<98:10> [b2RevoluteJoint.cpp <104:26 104:27>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2RevoluteJoint.cpp <104:36 104:36>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rB [b2RevoluteJoint.cpp <104:31 104:34>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<98:24> [b2RevoluteJoint.cpp <104:40 104:41>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2RevoluteJoint.cpp <105:12 105:12>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ex [b2RevoluteJoint.cpp <105:9 105:10>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Mat33 b2RevoluteJoint::m_mass [b2RevoluteJoint.cpp <105:2 105:7>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2RevoluteJoint.cpp <105:26 105:26>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ey [b2RevoluteJoint.cpp <105:23 105:24>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Mat33 b2RevoluteJoint::m_mass [b2RevoluteJoint.cpp <105:16 105:21>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2RevoluteJoint.cpp <106:12 106:12>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ey [b2RevoluteJoint.cpp <106:9 106:10>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Mat33 b2RevoluteJoint::m_mass [b2RevoluteJoint.cpp <106:2 106:7>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<97:10> [b2RevoluteJoint.cpp <106:16 106:17>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<97:27> [b2RevoluteJoint.cpp <106:21 106:22>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2RevoluteJoint.cpp <106:31 106:31>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rA [b2RevoluteJoint.cpp <106:26 106:29>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2RevoluteJoint.cpp <106:40 106:40>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rA [b2RevoluteJoint.cpp <106:35 106:38>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<98:10> [b2RevoluteJoint.cpp <106:44 106:45>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2RevoluteJoint.cpp <106:54 106:54>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rB [b2RevoluteJoint.cpp <106:49 106:52>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2RevoluteJoint.cpp <106:63 106:63>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rB [b2RevoluteJoint.cpp <106:58 106:61>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<98:24> [b2RevoluteJoint.cpp <106:67 106:68>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2RevoluteJoint.cpp <107:12 107:12>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2RevoluteJoint.cpp <107:9 107:10>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Mat33 b2RevoluteJoint::m_mass [b2RevoluteJoint.cpp <107:2 107:7>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2RevoluteJoint.cpp <107:21 107:21>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rA [b2RevoluteJoint.cpp <107:16 107:19>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<98:10> [b2RevoluteJoint.cpp <107:25 107:26>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2RevoluteJoint.cpp <107:35 107:35>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rB [b2RevoluteJoint.cpp <107:30 107:33>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<98:24> [b2RevoluteJoint.cpp <107:39 107:40>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <108:12 108:12>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ex [b2RevoluteJoint.cpp <108:9 108:10>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Mat33 b2RevoluteJoint::m_mass [b2RevoluteJoint.cpp <108:2 108:7>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2RevoluteJoint.cpp <108:26 108:26>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2RevoluteJoint.cpp <108:23 108:24>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Mat33 b2RevoluteJoint::m_mass [b2RevoluteJoint.cpp <108:16 108:21>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <109:12 109:12>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ey [b2RevoluteJoint.cpp <109:9 109:10>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Mat33 b2RevoluteJoint::m_mass [b2RevoluteJoint.cpp <109:2 109:7>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2RevoluteJoint.cpp <109:26 109:26>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2RevoluteJoint.cpp <109:23 109:24>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Mat33 b2RevoluteJoint::m_mass [b2RevoluteJoint.cpp <109:16 109:21>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <110:12 110:12>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2RevoluteJoint.cpp <110:9 110:10>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Mat33 b2RevoluteJoint::m_mass [b2RevoluteJoint.cpp <110:2 110:7>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<98:10> [b2RevoluteJoint.cpp <110:16 110:17>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<98:24> [b2RevoluteJoint.cpp <110:21 110:22>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_motorMass [b2RevoluteJoint.cpp <112:2 112:12>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<98:10> [b2RevoluteJoint.cpp <112:16 112:17>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<98:24> [b2RevoluteJoint.cpp <112:21 112:22>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_motorMass [b2RevoluteJoint.cpp <113:6 113:16>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_motorMass [b2RevoluteJoint.cpp <115:3 115:13>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_motorMass [b2RevoluteJoint.cpp <115:24 115:34>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> bool b2RevoluteJoint::m_enableMotor [b2RevoluteJoint.cpp <118:6 118:18>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<100:7> [b2RevoluteJoint.cpp <118:32 118:44>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_motorImpulse [b2RevoluteJoint.cpp <120:3 120:16>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> bool b2RevoluteJoint::m_enableLimit [b2RevoluteJoint.cpp <123:6 123:18>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<100:7> [b2RevoluteJoint.cpp <123:23 123:35>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<125:11> [b2RevoluteJoint.cpp <125:11 125:20>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <125:3 125:9>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<79:10> [b2RevoluteJoint.cpp <125:24 125:25>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<75:10> [b2RevoluteJoint.cpp <125:29 125:30>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_referenceAngle [b2RevoluteJoint.cpp <125:34 125:49>]
SYMBOL_FUNCTION float b2Abs<float>(float)
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float b2Abs<float>(float) [b2RevoluteJoint.cpp <126:7 126:11>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_upperAngle [b2RevoluteJoint.cpp <126:13 126:24>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_lowerAngle [b2RevoluteJoint.cpp <126:28 126:39>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState b2RevoluteJoint::m_limitState [b2RevoluteJoint.cpp <128:4 128:15>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState::e_equalLimits [b2RevoluteJoint.cpp <128:19 128:31>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<125:11> [b2RevoluteJoint.cpp <130:12 130:21>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_lowerAngle [b2RevoluteJoint.cpp <130:26 130:37>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState b2RevoluteJoint::m_limitState [b2RevoluteJoint.cpp <132:8 132:19>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState::e_atLowerLimit [b2RevoluteJoint.cpp <132:24 132:37>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <134:15 134:15>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <134:5 134:13>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState b2RevoluteJoint::m_limitState [b2RevoluteJoint.cpp <136:4 136:15>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState::e_atLowerLimit [b2RevoluteJoint.cpp <136:19 136:32>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<125:11> [b2RevoluteJoint.cpp <138:12 138:21>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_upperAngle [b2RevoluteJoint.cpp <138:26 138:37>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState b2RevoluteJoint::m_limitState [b2RevoluteJoint.cpp <140:8 140:19>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState::e_atUpperLimit [b2RevoluteJoint.cpp <140:24 140:37>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <142:15 142:15>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <142:5 142:13>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState b2RevoluteJoint::m_limitState [b2RevoluteJoint.cpp <144:4 144:15>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState::e_atUpperLimit [b2RevoluteJoint.cpp <144:19 144:32>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState b2RevoluteJoint::m_limitState [b2RevoluteJoint.cpp <148:4 148:15>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState::e_inactiveLimit [b2RevoluteJoint.cpp <148:19 148:33>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <149:14 149:14>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <149:4 149:12>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState b2RevoluteJoint::m_limitState [b2RevoluteJoint.cpp <154:3 154:14>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2LimitState::e_inactiveLimit [b2RevoluteJoint.cpp <154:18 154:32>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> bool b2TimeStep::warmStarting [b2RevoluteJoint.cpp <157:16 157:27>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2TimeStep b2SolverData::step [b2RevoluteJoint.cpp <157:11 157:14>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<64:67> [b2RevoluteJoint.cpp <157:6 157:9>]
SYMBOL_FUNCTION void b2Vec3::operator*=(float32)
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec3::operator*=(float32) [b2RevoluteJoint.cpp <160:13 160:14>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <160:3 160:11>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2TimeStep::dtRatio [b2RevoluteJoint.cpp <160:26 160:32>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2TimeStep b2SolverData::step [b2RevoluteJoint.cpp <160:21 160:24>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<64:67> [b2RevoluteJoint.cpp <160:16 160:19>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_motorImpulse [b2RevoluteJoint.cpp <161:3 161:16>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2TimeStep::dtRatio [b2RevoluteJoint.cpp <161:31 161:37>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2TimeStep b2SolverData::step [b2RevoluteJoint.cpp <161:26 161:29>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<64:67> [b2RevoluteJoint.cpp <161:21 161:24>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<163:10> [b2RevoluteJoint.cpp <163:10 163:10>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2RevoluteJoint.cpp <163:3 163:8>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(float32, float32)
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(float32, float32) [b2RevoluteJoint.cpp <163:10 163:10>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2RevoluteJoint.cpp <163:22 163:22>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <163:12 163:20>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2RevoluteJoint.cpp <163:35 163:35>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <163:25 163:33>]
SYMBOL_FUNCTION void b2Vec2::operator-=(const b2Vec2 &)
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2RevoluteJoint.cpp <165:6 165:7>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<76:9> [b2RevoluteJoint.cpp <165:3 165:4>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2RevoluteJoint.cpp <165:12 165:12>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<97:10> [b2RevoluteJoint.cpp <165:9 165:10>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<163:10> [b2RevoluteJoint.cpp <165:14 165:14>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<77:10> [b2RevoluteJoint.cpp <166:3 166:4>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<98:10> [b2RevoluteJoint.cpp <166:9 166:10>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2RevoluteJoint.cpp <166:15 166:21>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rA [b2RevoluteJoint.cpp <166:23 166:26>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<163:10> [b2RevoluteJoint.cpp <166:29 166:29>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_motorImpulse [b2RevoluteJoint.cpp <166:34 166:47>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <166:61 166:61>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <166:51 166:59>]
SYMBOL_FUNCTION void b2Vec2::operator+=(const b2Vec2 &)
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2RevoluteJoint.cpp <168:6 168:7>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<80:9> [b2RevoluteJoint.cpp <168:3 168:4>]
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2RevoluteJoint.cpp <168:12 168:12>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<97:27> [b2RevoluteJoint.cpp <168:9 168:10>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<163:10> [b2RevoluteJoint.cpp <168:14 168:14>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<81:10> [b2RevoluteJoint.cpp <169:3 169:4>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<98:24> [b2RevoluteJoint.cpp <169:9 169:10>]
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2RevoluteJoint.cpp <169:15 169:21>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rB [b2RevoluteJoint.cpp <169:23 169:26>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<163:10> [b2RevoluteJoint.cpp <169:29 169:29>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_motorImpulse [b2RevoluteJoint.cpp <169:34 169:47>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <169:61 169:61>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <169:51 169:59>]
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec3::SetZero() [b2RevoluteJoint.cpp <173:13 173:19>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <173:3 173:11>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_motorImpulse [b2RevoluteJoint.cpp <174:3 174:16>]
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2RevoluteJoint.cpp <177:30 177:30>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2RevoluteJoint.cpp <177:28 177:28>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2RevoluteJoint.cpp <177:7 177:16>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<64:67> [b2RevoluteJoint.cpp <177:2 177:5>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexA [b2RevoluteJoint.cpp <177:18 177:25>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<76:9> [b2RevoluteJoint.cpp <177:32 177:33>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2RevoluteJoint.cpp <178:28 178:28>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2RevoluteJoint.cpp <178:7 178:16>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<64:67> [b2RevoluteJoint.cpp <178:2 178:5>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexA [b2RevoluteJoint.cpp <178:18 178:25>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<77:10> [b2RevoluteJoint.cpp <178:32 178:33>]
REFERENCE_CALL void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2RevoluteJoint.cpp <179:30 179:30>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2RevoluteJoint.cpp <179:28 179:28>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2RevoluteJoint.cpp <179:7 179:16>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<64:67> [b2RevoluteJoint.cpp <179:2 179:5>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexB [b2RevoluteJoint.cpp <179:18 179:25>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<80:9> [b2RevoluteJoint.cpp <179:32 179:33>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2RevoluteJoint.cpp <180:28 180:28>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2RevoluteJoint.cpp <180:7 180:16>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<64:67> [b2RevoluteJoint.cpp <180:2 180:5>]
REFERENCE_USAGE void b2RevoluteJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexB [b2RevoluteJoint.cpp <180:18 180:25>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<81:10> [b2RevoluteJoint.cpp <180:32 180:33>]
SYMBOL_METHOD protected void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) [b2RevoluteJoint.cpp <183:1 <183:23 183:46> 289:1>]
SYMBOL_FUNCTION void b2Joint::SolveVelocityConstraints(const b2SolverData &)
REFERENCE_OVERRIDE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Joint::SolveVelocityConstraints(const b2SolverData &) [b2RevoluteJoint.cpp <183:23 183:46>]
QUALIFIER: b2RevoluteJoint [b2RevoluteJoint.cpp <183:6 183:20>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> void [b2RevoluteJoint.cpp <183:1 183:4>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<183:68> [b2RevoluteJoint.cpp <183:68 183:71>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2SolverData [b2RevoluteJoint.cpp <183:54 183:65>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<185:9> [b2RevoluteJoint.cpp <185:9 185:10>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2RevoluteJoint.cpp <185:2 185:7>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2RevoluteJoint.cpp <185:40 185:40>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2RevoluteJoint.cpp <185:40 185:40>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2RevoluteJoint.cpp <185:19 185:28>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<183:68> [b2RevoluteJoint.cpp <185:14 185:17>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexA [b2RevoluteJoint.cpp <185:30 185:37>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<186:10> [b2RevoluteJoint.cpp <186:10 186:11>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <186:2 186:8>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2RevoluteJoint.cpp <186:41 186:41>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2RevoluteJoint.cpp <186:20 186:29>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<183:68> [b2RevoluteJoint.cpp <186:15 186:18>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexA [b2RevoluteJoint.cpp <186:31 186:38>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<187:9> [b2RevoluteJoint.cpp <187:9 187:10>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2RevoluteJoint.cpp <187:2 187:7>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2RevoluteJoint.cpp <187:40 187:40>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2RevoluteJoint.cpp <187:40 187:40>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2RevoluteJoint.cpp <187:19 187:28>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<183:68> [b2RevoluteJoint.cpp <187:14 187:17>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexB [b2RevoluteJoint.cpp <187:30 187:37>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<188:10> [b2RevoluteJoint.cpp <188:10 188:11>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <188:2 188:8>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2RevoluteJoint.cpp <188:41 188:41>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2RevoluteJoint.cpp <188:20 188:29>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<183:68> [b2RevoluteJoint.cpp <188:15 188:18>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexB [b2RevoluteJoint.cpp <188:31 188:38>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<190:10> [b2RevoluteJoint.cpp <190:10 190:11>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <190:2 190:8>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_invMassA [b2RevoluteJoint.cpp <190:15 190:24>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<190:27> [b2RevoluteJoint.cpp <190:27 190:28>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_invMassB [b2RevoluteJoint.cpp <190:32 190:41>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<191:10> [b2RevoluteJoint.cpp <191:10 191:11>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <191:2 191:8>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_invIA [b2RevoluteJoint.cpp <191:15 191:21>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<191:24> [b2RevoluteJoint.cpp <191:24 191:25>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_invIB [b2RevoluteJoint.cpp <191:29 191:35>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<193:7> [b2RevoluteJoint.cpp <193:7 193:19>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> bool [b2RevoluteJoint.cpp <193:2 193:5>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<191:10> [b2RevoluteJoint.cpp <193:24 193:25>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<191:24> [b2RevoluteJoint.cpp <193:29 193:30>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> bool b2RevoluteJoint::m_enableMotor [b2RevoluteJoint.cpp <196:6 196:18>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2LimitState b2RevoluteJoint::m_limitState [b2RevoluteJoint.cpp <196:23 196:34>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2LimitState::e_equalLimits [b2RevoluteJoint.cpp <196:39 196:51>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<193:7> [b2RevoluteJoint.cpp <196:56 196:68>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<198:11> [b2RevoluteJoint.cpp <198:11 198:14>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <198:3 198:9>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<188:10> [b2RevoluteJoint.cpp <198:18 198:19>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<186:10> [b2RevoluteJoint.cpp <198:23 198:24>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_motorSpeed [b2RevoluteJoint.cpp <198:28 198:39>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<199:11> [b2RevoluteJoint.cpp <199:11 199:17>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <199:3 199:9>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_motorMass [b2RevoluteJoint.cpp <199:22 199:32>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<198:11> [b2RevoluteJoint.cpp <199:36 199:39>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<200:11> [b2RevoluteJoint.cpp <200:11 200:20>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <200:3 200:9>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_motorImpulse [b2RevoluteJoint.cpp <200:24 200:37>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<201:11> [b2RevoluteJoint.cpp <201:11 201:20>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <201:3 201:9>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2TimeStep::dt [b2RevoluteJoint.cpp <201:34 201:35>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2TimeStep b2SolverData::step [b2RevoluteJoint.cpp <201:29 201:32>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<183:68> [b2RevoluteJoint.cpp <201:24 201:27>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_maxMotorTorque [b2RevoluteJoint.cpp <201:39 201:54>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_motorImpulse [b2RevoluteJoint.cpp <202:3 202:16>]
SYMBOL_FUNCTION float b2Clamp<float>(float, float, float)
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float b2Clamp<float>(float, float, float) [b2RevoluteJoint.cpp <202:20 202:26>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_motorImpulse [b2RevoluteJoint.cpp <202:28 202:41>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<199:11> [b2RevoluteJoint.cpp <202:45 202:51>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<201:11> [b2RevoluteJoint.cpp <202:55 202:64>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<201:11> [b2RevoluteJoint.cpp <202:67 202:76>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<199:11> [b2RevoluteJoint.cpp <203:3 203:9>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_motorImpulse [b2RevoluteJoint.cpp <203:13 203:26>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<200:11> [b2RevoluteJoint.cpp <203:30 203:39>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<186:10> [b2RevoluteJoint.cpp <205:3 205:4>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<191:10> [b2RevoluteJoint.cpp <205:9 205:10>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<199:11> [b2RevoluteJoint.cpp <205:14 205:20>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<188:10> [b2RevoluteJoint.cpp <206:3 206:4>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<191:24> [b2RevoluteJoint.cpp <206:9 206:10>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<199:11> [b2RevoluteJoint.cpp <206:14 206:20>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> bool b2RevoluteJoint::m_enableLimit [b2RevoluteJoint.cpp <210:6 210:18>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2LimitState b2RevoluteJoint::m_limitState [b2RevoluteJoint.cpp <210:23 210:34>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2LimitState::e_inactiveLimit [b2RevoluteJoint.cpp <210:39 210:53>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<193:7> [b2RevoluteJoint.cpp <210:58 210:70>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<212:10> [b2RevoluteJoint.cpp <212:10 212:14>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2RevoluteJoint.cpp <212:3 212:8>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2RevoluteJoint.cpp <212:46 212:46>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2RevoluteJoint.cpp <212:41 212:41>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2RevoluteJoint.cpp <212:21 212:21>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<187:9> [b2RevoluteJoint.cpp <212:18 212:19>]
SYMBOL_FUNCTION b2Vec2 b2Cross(float32, const b2Vec2 &)
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Cross(float32, const b2Vec2 &) [b2RevoluteJoint.cpp <212:23 212:29>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<188:10> [b2RevoluteJoint.cpp <212:31 212:32>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rB [b2RevoluteJoint.cpp <212:35 212:38>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<185:9> [b2RevoluteJoint.cpp <212:43 212:44>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Cross(float32, const b2Vec2 &) [b2RevoluteJoint.cpp <212:48 212:54>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<186:10> [b2RevoluteJoint.cpp <212:56 212:57>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rA [b2RevoluteJoint.cpp <212:60 212:63>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<213:11> [b2RevoluteJoint.cpp <213:11 213:15>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <213:3 213:9>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<188:10> [b2RevoluteJoint.cpp <213:19 213:20>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<186:10> [b2RevoluteJoint.cpp <213:24 213:25>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<214:10> [b2RevoluteJoint.cpp <214:10 214:13>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 [b2RevoluteJoint.cpp <214:3 214:8>]
SYMBOL_FUNCTION void b2Vec3::b2Vec3(float32, float32, float32)
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec3::b2Vec3(float32, float32, float32) [b2RevoluteJoint.cpp <214:10 214:13>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2RevoluteJoint.cpp <214:21 214:21>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<212:10> [b2RevoluteJoint.cpp <214:15 214:19>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2RevoluteJoint.cpp <214:30 214:30>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<212:10> [b2RevoluteJoint.cpp <214:24 214:28>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<213:11> [b2RevoluteJoint.cpp <214:33 214:37>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<216:10> [b2RevoluteJoint.cpp <216:10 216:16>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 [b2RevoluteJoint.cpp <216:3 216:8>]
SYMBOL_FUNCTION b2Vec3 b2Vec3::operator-() const
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Vec3::operator-() const [b2RevoluteJoint.cpp <216:20 216:20>]
SYMBOL_FUNCTION b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const [b2RevoluteJoint.cpp <216:28 216:34>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Mat33 b2RevoluteJoint::m_mass [b2RevoluteJoint.cpp <216:21 216:26>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<214:10> [b2RevoluteJoint.cpp <216:36 216:39>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2LimitState b2RevoluteJoint::m_limitState [b2RevoluteJoint.cpp <218:7 218:18>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2LimitState::e_equalLimits [b2RevoluteJoint.cpp <218:23 218:35>]
SYMBOL_FUNCTION void b2Vec3::operator+=(const b2Vec3 &)
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec3::operator+=(const b2Vec3 &) [b2RevoluteJoint.cpp <220:14 220:15>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <220:4 220:12>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<216:10> [b2RevoluteJoint.cpp <220:17 220:23>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2LimitState b2RevoluteJoint::m_limitState [b2RevoluteJoint.cpp <222:12 222:23>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2LimitState::e_atLowerLimit [b2RevoluteJoint.cpp <222:28 222:41>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<224:12> [b2RevoluteJoint.cpp <224:12 224:21>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <224:4 224:10>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <224:35 224:35>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <224:25 224:33>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <224:47 224:47>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<216:10> [b2RevoluteJoint.cpp <224:39 224:45>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<224:12> [b2RevoluteJoint.cpp <225:8 225:17>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<227:12> [b2RevoluteJoint.cpp <227:12 227:14>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2RevoluteJoint.cpp <227:5 227:10>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2RevoluteJoint.cpp <227:25 227:25>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Vec2::operator-() const [b2RevoluteJoint.cpp <227:18 227:18>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<212:10> [b2RevoluteJoint.cpp <227:19 227:23>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2RevoluteJoint.cpp <227:39 227:39>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <227:37 227:37>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <227:27 227:35>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(float32, float32) [b2RevoluteJoint.cpp <227:41 227:46>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2RevoluteJoint.cpp <227:41 227:46>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2RevoluteJoint.cpp <227:58 227:58>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2RevoluteJoint.cpp <227:55 227:56>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Mat33 b2RevoluteJoint::m_mass [b2RevoluteJoint.cpp <227:48 227:53>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2RevoluteJoint.cpp <227:71 227:71>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2RevoluteJoint.cpp <227:68 227:69>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Mat33 b2RevoluteJoint::m_mass [b2RevoluteJoint.cpp <227:61 227:66>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<228:12> [b2RevoluteJoint.cpp <228:12 228:18>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2RevoluteJoint.cpp <228:5 228:10>]
SYMBOL_FUNCTION b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const [b2RevoluteJoint.cpp <228:29 228:35>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Mat33 b2RevoluteJoint::m_mass [b2RevoluteJoint.cpp <228:22 228:27>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<227:12> [b2RevoluteJoint.cpp <228:37 228:39>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2RevoluteJoint.cpp <229:13 229:13>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<216:10> [b2RevoluteJoint.cpp <229:5 229:11>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2RevoluteJoint.cpp <229:25 229:25>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<228:12> [b2RevoluteJoint.cpp <229:17 229:23>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2RevoluteJoint.cpp <230:13 230:13>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<216:10> [b2RevoluteJoint.cpp <230:5 230:11>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2RevoluteJoint.cpp <230:25 230:25>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<228:12> [b2RevoluteJoint.cpp <230:17 230:23>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <231:13 231:13>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<216:10> [b2RevoluteJoint.cpp <231:5 231:11>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <231:28 231:28>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <231:18 231:26>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2RevoluteJoint.cpp <232:15 232:15>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <232:5 232:13>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2RevoluteJoint.cpp <232:28 232:28>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<228:12> [b2RevoluteJoint.cpp <232:20 232:26>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2RevoluteJoint.cpp <233:15 233:15>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <233:5 233:13>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2RevoluteJoint.cpp <233:28 233:28>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<228:12> [b2RevoluteJoint.cpp <233:20 233:26>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <234:15 234:15>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <234:5 234:13>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec3::operator+=(const b2Vec3 &) [b2RevoluteJoint.cpp <238:15 238:16>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <238:5 238:13>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<216:10> [b2RevoluteJoint.cpp <238:18 238:24>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2LimitState b2RevoluteJoint::m_limitState [b2RevoluteJoint.cpp <241:12 241:23>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2LimitState::e_atUpperLimit [b2RevoluteJoint.cpp <241:28 241:41>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<243:12> [b2RevoluteJoint.cpp <243:12 243:21>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <243:4 243:10>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <243:35 243:35>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <243:25 243:33>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <243:47 243:47>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<216:10> [b2RevoluteJoint.cpp <243:39 243:45>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<243:12> [b2RevoluteJoint.cpp <244:8 244:17>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<246:12> [b2RevoluteJoint.cpp <246:12 246:14>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2RevoluteJoint.cpp <246:5 246:10>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2RevoluteJoint.cpp <246:25 246:25>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Vec2::operator-() const [b2RevoluteJoint.cpp <246:18 246:18>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<212:10> [b2RevoluteJoint.cpp <246:19 246:23>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2RevoluteJoint.cpp <246:39 246:39>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <246:37 246:37>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <246:27 246:35>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(float32, float32) [b2RevoluteJoint.cpp <246:41 246:46>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2RevoluteJoint.cpp <246:41 246:46>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2RevoluteJoint.cpp <246:58 246:58>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2RevoluteJoint.cpp <246:55 246:56>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Mat33 b2RevoluteJoint::m_mass [b2RevoluteJoint.cpp <246:48 246:53>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2RevoluteJoint.cpp <246:71 246:71>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2Mat33::ez [b2RevoluteJoint.cpp <246:68 246:69>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Mat33 b2RevoluteJoint::m_mass [b2RevoluteJoint.cpp <246:61 246:66>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<247:12> [b2RevoluteJoint.cpp <247:12 247:18>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2RevoluteJoint.cpp <247:5 247:10>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const [b2RevoluteJoint.cpp <247:29 247:35>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Mat33 b2RevoluteJoint::m_mass [b2RevoluteJoint.cpp <247:22 247:27>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<246:12> [b2RevoluteJoint.cpp <247:37 247:39>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2RevoluteJoint.cpp <248:13 248:13>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<216:10> [b2RevoluteJoint.cpp <248:5 248:11>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2RevoluteJoint.cpp <248:25 248:25>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<247:12> [b2RevoluteJoint.cpp <248:17 248:23>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2RevoluteJoint.cpp <249:13 249:13>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<216:10> [b2RevoluteJoint.cpp <249:5 249:11>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2RevoluteJoint.cpp <249:25 249:25>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<247:12> [b2RevoluteJoint.cpp <249:17 249:23>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <250:13 250:13>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<216:10> [b2RevoluteJoint.cpp <250:5 250:11>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <250:28 250:28>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <250:18 250:26>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2RevoluteJoint.cpp <251:15 251:15>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <251:5 251:13>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2RevoluteJoint.cpp <251:28 251:28>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<247:12> [b2RevoluteJoint.cpp <251:20 251:26>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2RevoluteJoint.cpp <252:15 252:15>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <252:5 252:13>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2RevoluteJoint.cpp <252:28 252:28>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<247:12> [b2RevoluteJoint.cpp <252:20 252:26>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <253:15 253:15>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <253:5 253:13>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec3::operator+=(const b2Vec3 &) [b2RevoluteJoint.cpp <257:15 257:16>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <257:5 257:13>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<216:10> [b2RevoluteJoint.cpp <257:18 257:24>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<261:10> [b2RevoluteJoint.cpp <261:10 261:10>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2RevoluteJoint.cpp <261:3 261:8>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(float32, float32) [b2RevoluteJoint.cpp <261:10 261:10>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2RevoluteJoint.cpp <261:20 261:20>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<216:10> [b2RevoluteJoint.cpp <261:12 261:18>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2RevoluteJoint.cpp <261:31 261:31>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<216:10> [b2RevoluteJoint.cpp <261:23 261:29>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2RevoluteJoint.cpp <263:6 263:7>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<185:9> [b2RevoluteJoint.cpp <263:3 263:4>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2RevoluteJoint.cpp <263:12 263:12>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<190:10> [b2RevoluteJoint.cpp <263:9 263:10>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<261:10> [b2RevoluteJoint.cpp <263:14 263:14>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<186:10> [b2RevoluteJoint.cpp <264:3 264:4>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<191:10> [b2RevoluteJoint.cpp <264:9 264:10>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2RevoluteJoint.cpp <264:15 264:21>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rA [b2RevoluteJoint.cpp <264:23 264:26>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<261:10> [b2RevoluteJoint.cpp <264:29 264:29>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <264:42 264:42>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<216:10> [b2RevoluteJoint.cpp <264:34 264:40>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2RevoluteJoint.cpp <266:6 266:7>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<187:9> [b2RevoluteJoint.cpp <266:3 266:4>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2RevoluteJoint.cpp <266:12 266:12>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<190:27> [b2RevoluteJoint.cpp <266:9 266:10>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<261:10> [b2RevoluteJoint.cpp <266:14 266:14>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<188:10> [b2RevoluteJoint.cpp <267:3 267:4>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<191:24> [b2RevoluteJoint.cpp <267:9 267:10>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2RevoluteJoint.cpp <267:15 267:21>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rB [b2RevoluteJoint.cpp <267:23 267:26>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<261:10> [b2RevoluteJoint.cpp <267:29 267:29>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <267:42 267:42>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<216:10> [b2RevoluteJoint.cpp <267:34 267:40>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<272:10> [b2RevoluteJoint.cpp <272:10 272:13>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2RevoluteJoint.cpp <272:3 272:8>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2RevoluteJoint.cpp <272:45 272:45>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2RevoluteJoint.cpp <272:40 272:40>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2RevoluteJoint.cpp <272:20 272:20>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<187:9> [b2RevoluteJoint.cpp <272:17 272:18>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Cross(float32, const b2Vec2 &) [b2RevoluteJoint.cpp <272:22 272:28>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<188:10> [b2RevoluteJoint.cpp <272:30 272:31>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rB [b2RevoluteJoint.cpp <272:34 272:37>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<185:9> [b2RevoluteJoint.cpp <272:42 272:43>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Cross(float32, const b2Vec2 &) [b2RevoluteJoint.cpp <272:47 272:53>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<186:10> [b2RevoluteJoint.cpp <272:55 272:56>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rA [b2RevoluteJoint.cpp <272:59 272:62>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<273:10> [b2RevoluteJoint.cpp <273:10 273:16>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2RevoluteJoint.cpp <273:3 273:8>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const [b2RevoluteJoint.cpp <273:27 273:33>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Mat33 b2RevoluteJoint::m_mass [b2RevoluteJoint.cpp <273:20 273:25>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Vec2::operator-() const [b2RevoluteJoint.cpp <273:35 273:35>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<272:10> [b2RevoluteJoint.cpp <273:36 273:39>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::x [b2RevoluteJoint.cpp <275:13 275:13>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <275:3 275:11>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2RevoluteJoint.cpp <275:26 275:26>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<273:10> [b2RevoluteJoint.cpp <275:18 275:24>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec3::y [b2RevoluteJoint.cpp <276:13 276:13>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <276:3 276:11>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2RevoluteJoint.cpp <276:26 276:26>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<273:10> [b2RevoluteJoint.cpp <276:18 276:24>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2RevoluteJoint.cpp <278:6 278:7>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<185:9> [b2RevoluteJoint.cpp <278:3 278:4>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2RevoluteJoint.cpp <278:12 278:12>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<190:10> [b2RevoluteJoint.cpp <278:9 278:10>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<273:10> [b2RevoluteJoint.cpp <278:14 278:20>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<186:10> [b2RevoluteJoint.cpp <279:3 279:4>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<191:10> [b2RevoluteJoint.cpp <279:9 279:10>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2RevoluteJoint.cpp <279:14 279:20>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rA [b2RevoluteJoint.cpp <279:22 279:25>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<273:10> [b2RevoluteJoint.cpp <279:28 279:34>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2RevoluteJoint.cpp <281:6 281:7>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<187:9> [b2RevoluteJoint.cpp <281:3 281:4>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2RevoluteJoint.cpp <281:12 281:12>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<190:27> [b2RevoluteJoint.cpp <281:9 281:10>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<273:10> [b2RevoluteJoint.cpp <281:14 281:20>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<188:10> [b2RevoluteJoint.cpp <282:3 282:4>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<191:24> [b2RevoluteJoint.cpp <282:9 282:10>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2RevoluteJoint.cpp <282:14 282:20>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_rB [b2RevoluteJoint.cpp <282:22 282:25>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<273:10> [b2RevoluteJoint.cpp <282:28 282:34>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2RevoluteJoint.cpp <285:30 285:30>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2RevoluteJoint.cpp <285:28 285:28>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2RevoluteJoint.cpp <285:7 285:16>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<183:68> [b2RevoluteJoint.cpp <285:2 285:5>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexA [b2RevoluteJoint.cpp <285:18 285:25>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<185:9> [b2RevoluteJoint.cpp <285:32 285:33>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2RevoluteJoint.cpp <286:28 286:28>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2RevoluteJoint.cpp <286:7 286:16>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<183:68> [b2RevoluteJoint.cpp <286:2 286:5>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexA [b2RevoluteJoint.cpp <286:18 286:25>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<186:10> [b2RevoluteJoint.cpp <286:32 286:33>]
REFERENCE_CALL void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2RevoluteJoint.cpp <287:30 287:30>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2RevoluteJoint.cpp <287:28 287:28>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2RevoluteJoint.cpp <287:7 287:16>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<183:68> [b2RevoluteJoint.cpp <287:2 287:5>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexB [b2RevoluteJoint.cpp <287:18 287:25>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<187:9> [b2RevoluteJoint.cpp <287:32 287:33>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2RevoluteJoint.cpp <288:28 288:28>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2RevoluteJoint.cpp <288:7 288:16>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<183:68> [b2RevoluteJoint.cpp <288:2 288:5>]
REFERENCE_USAGE void b2RevoluteJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexB [b2RevoluteJoint.cpp <288:18 288:25>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<188:10> [b2RevoluteJoint.cpp <288:32 288:33>]
SYMBOL_METHOD protected bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) [b2RevoluteJoint.cpp <291:1 <291:23 291:46> 375:1>]
SYMBOL_FUNCTION bool b2Joint::SolvePositionConstraints(const b2SolverData &)
REFERENCE_OVERRIDE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> bool b2Joint::SolvePositionConstraints(const b2SolverData &) [b2RevoluteJoint.cpp <291:23 291:46>]
QUALIFIER: b2RevoluteJoint [b2RevoluteJoint.cpp <291:6 291:20>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> bool [b2RevoluteJoint.cpp <291:1 291:4>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<291:68> [b2RevoluteJoint.cpp <291:68 291:71>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2SolverData [b2RevoluteJoint.cpp <291:54 291:65>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<293:9> [b2RevoluteJoint.cpp <293:9 293:10>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2RevoluteJoint.cpp <293:2 293:7>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2RevoluteJoint.cpp <293:39 293:39>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2RevoluteJoint.cpp <293:39 293:39>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2RevoluteJoint.cpp <293:19 293:27>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<291:68> [b2RevoluteJoint.cpp <293:14 293:17>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexA [b2RevoluteJoint.cpp <293:29 293:36>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<294:10> [b2RevoluteJoint.cpp <294:10 294:11>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <294:2 294:8>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2RevoluteJoint.cpp <294:40 294:40>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2RevoluteJoint.cpp <294:20 294:28>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<291:68> [b2RevoluteJoint.cpp <294:15 294:18>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexA [b2RevoluteJoint.cpp <294:30 294:37>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<295:9> [b2RevoluteJoint.cpp <295:9 295:10>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2RevoluteJoint.cpp <295:2 295:7>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2RevoluteJoint.cpp <295:39 295:39>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2RevoluteJoint.cpp <295:39 295:39>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2RevoluteJoint.cpp <295:19 295:27>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<291:68> [b2RevoluteJoint.cpp <295:14 295:17>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexB [b2RevoluteJoint.cpp <295:29 295:36>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<296:10> [b2RevoluteJoint.cpp <296:10 296:11>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <296:2 296:8>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2RevoluteJoint.cpp <296:40 296:40>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2RevoluteJoint.cpp <296:20 296:28>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<291:68> [b2RevoluteJoint.cpp <296:15 296:18>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexB [b2RevoluteJoint.cpp <296:30 296:37>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<298:8> [b2RevoluteJoint.cpp <298:8 298:9>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Rot [b2RevoluteJoint.cpp <298:2 298:6>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2RevoluteJoint.cpp <298:8 298:9>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<294:10> [b2RevoluteJoint.cpp <298:11 298:12>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<298:16> [b2RevoluteJoint.cpp <298:16 298:17>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2RevoluteJoint.cpp <298:16 298:17>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<296:10> [b2RevoluteJoint.cpp <298:19 298:20>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<300:10> [b2RevoluteJoint.cpp <300:10 300:21>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <300:2 300:8>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<301:10> [b2RevoluteJoint.cpp <301:10 301:22>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <301:2 301:8>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<303:7> [b2RevoluteJoint.cpp <303:7 303:19>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> bool [b2RevoluteJoint.cpp <303:2 303:5>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_invIA [b2RevoluteJoint.cpp <303:24 303:30>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_invIB [b2RevoluteJoint.cpp <303:34 303:40>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> bool b2RevoluteJoint::m_enableLimit [b2RevoluteJoint.cpp <306:6 306:18>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2LimitState b2RevoluteJoint::m_limitState [b2RevoluteJoint.cpp <306:23 306:34>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2LimitState::e_inactiveLimit [b2RevoluteJoint.cpp <306:39 306:53>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<303:7> [b2RevoluteJoint.cpp <306:58 306:70>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<308:11> [b2RevoluteJoint.cpp <308:11 308:15>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <308:3 308:9>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<296:10> [b2RevoluteJoint.cpp <308:19 308:20>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<294:10> [b2RevoluteJoint.cpp <308:24 308:25>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_referenceAngle [b2RevoluteJoint.cpp <308:29 308:44>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<309:11> [b2RevoluteJoint.cpp <309:11 309:22>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <309:3 309:9>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2LimitState b2RevoluteJoint::m_limitState [b2RevoluteJoint.cpp <311:7 311:18>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2LimitState::e_equalLimits [b2RevoluteJoint.cpp <311:23 311:35>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<314:12> [b2RevoluteJoint.cpp <314:12 314:12>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <314:4 314:10>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float b2Clamp<float>(float, float, float) [b2RevoluteJoint.cpp <314:16 314:22>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<308:11> [b2RevoluteJoint.cpp <314:24 314:28>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_lowerAngle [b2RevoluteJoint.cpp <314:32 314:43>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<309:11> [b2RevoluteJoint.cpp <315:4 315:15>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_motorMass [b2RevoluteJoint.cpp <315:20 315:30>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<314:12> [b2RevoluteJoint.cpp <315:34 315:34>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<300:10> [b2RevoluteJoint.cpp <316:4 316:15>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float b2Abs<float>(float) [b2RevoluteJoint.cpp <316:19 316:23>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<314:12> [b2RevoluteJoint.cpp <316:25 316:25>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2LimitState b2RevoluteJoint::m_limitState [b2RevoluteJoint.cpp <318:12 318:23>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2LimitState::e_atLowerLimit [b2RevoluteJoint.cpp <318:28 318:41>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<320:12> [b2RevoluteJoint.cpp <320:12 320:12>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <320:4 320:10>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<308:11> [b2RevoluteJoint.cpp <320:16 320:20>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_lowerAngle [b2RevoluteJoint.cpp <320:24 320:35>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<300:10> [b2RevoluteJoint.cpp <321:4 321:15>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<320:12> [b2RevoluteJoint.cpp <321:20 321:20>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<320:12> [b2RevoluteJoint.cpp <324:4 324:4>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float b2Clamp<float>(float, float, float) [b2RevoluteJoint.cpp <324:8 324:14>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<320:12> [b2RevoluteJoint.cpp <324:16 324:16>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<309:11> [b2RevoluteJoint.cpp <325:4 325:15>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_motorMass [b2RevoluteJoint.cpp <325:20 325:30>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<320:12> [b2RevoluteJoint.cpp <325:34 325:34>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2LimitState b2RevoluteJoint::m_limitState [b2RevoluteJoint.cpp <327:12 327:23>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2LimitState::e_atUpperLimit [b2RevoluteJoint.cpp <327:28 327:41>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<329:12> [b2RevoluteJoint.cpp <329:12 329:12>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <329:4 329:10>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<308:11> [b2RevoluteJoint.cpp <329:16 329:20>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_upperAngle [b2RevoluteJoint.cpp <329:24 329:35>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<300:10> [b2RevoluteJoint.cpp <330:4 330:15>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<329:12> [b2RevoluteJoint.cpp <330:19 330:19>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<329:12> [b2RevoluteJoint.cpp <333:4 333:4>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float b2Clamp<float>(float, float, float) [b2RevoluteJoint.cpp <333:8 333:14>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<329:12> [b2RevoluteJoint.cpp <333:16 333:16>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<309:11> [b2RevoluteJoint.cpp <334:4 334:15>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_motorMass [b2RevoluteJoint.cpp <334:20 334:30>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<329:12> [b2RevoluteJoint.cpp <334:34 334:34>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<294:10> [b2RevoluteJoint.cpp <337:3 337:4>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_invIA [b2RevoluteJoint.cpp <337:9 337:15>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<309:11> [b2RevoluteJoint.cpp <337:19 337:30>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<296:10> [b2RevoluteJoint.cpp <338:3 338:4>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_invIB [b2RevoluteJoint.cpp <338:9 338:15>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<309:11> [b2RevoluteJoint.cpp <338:19 338:30>]
SYMBOL_FUNCTION void b2Rot::Set(float32)
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Rot::Set(float32) [b2RevoluteJoint.cpp <343:6 343:8>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<298:8> [b2RevoluteJoint.cpp <343:3 343:4>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<294:10> [b2RevoluteJoint.cpp <343:10 343:11>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Rot::Set(float32) [b2RevoluteJoint.cpp <344:6 344:8>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<298:16> [b2RevoluteJoint.cpp <344:3 344:4>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<296:10> [b2RevoluteJoint.cpp <344:10 344:11>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<345:10> [b2RevoluteJoint.cpp <345:10 345:11>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2RevoluteJoint.cpp <345:3 345:8>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2RevoluteJoint.cpp <345:15 345:19>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<298:8> [b2RevoluteJoint.cpp <345:21 345:22>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2RevoluteJoint.cpp <345:40 345:40>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_localAnchorA [b2RevoluteJoint.cpp <345:25 345:38>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_localCenterA [b2RevoluteJoint.cpp <345:42 345:55>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<346:10> [b2RevoluteJoint.cpp <346:10 346:11>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2RevoluteJoint.cpp <346:3 346:8>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2RevoluteJoint.cpp <346:15 346:19>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<298:16> [b2RevoluteJoint.cpp <346:21 346:22>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2RevoluteJoint.cpp <346:40 346:40>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_localAnchorB [b2RevoluteJoint.cpp <346:25 346:38>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2RevoluteJoint::m_localCenterB [b2RevoluteJoint.cpp <346:42 346:55>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<348:10> [b2RevoluteJoint.cpp <348:10 348:10>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2RevoluteJoint.cpp <348:3 348:8>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2RevoluteJoint.cpp <348:27 348:27>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2RevoluteJoint.cpp <348:22 348:22>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2RevoluteJoint.cpp <348:17 348:17>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<295:9> [b2RevoluteJoint.cpp <348:14 348:15>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<346:10> [b2RevoluteJoint.cpp <348:19 348:20>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<293:9> [b2RevoluteJoint.cpp <348:24 348:25>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<345:10> [b2RevoluteJoint.cpp <348:29 348:30>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<301:10> [b2RevoluteJoint.cpp <349:3 349:15>]
SYMBOL_FUNCTION float32 b2Vec2::Length() const
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::Length() const [b2RevoluteJoint.cpp <349:21 349:26>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<348:10> [b2RevoluteJoint.cpp <349:19 349:19>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<351:11> [b2RevoluteJoint.cpp <351:11 351:12>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <351:3 351:9>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_invMassA [b2RevoluteJoint.cpp <351:16 351:25>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<351:28> [b2RevoluteJoint.cpp <351:28 351:29>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_invMassB [b2RevoluteJoint.cpp <351:33 351:42>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<352:11> [b2RevoluteJoint.cpp <352:11 352:12>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2RevoluteJoint.cpp <352:3 352:9>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_invIA [b2RevoluteJoint.cpp <352:16 352:22>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<352:25> [b2RevoluteJoint.cpp <352:25 352:26>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2RevoluteJoint::m_invIB [b2RevoluteJoint.cpp <352:30 352:36>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<354:11> [b2RevoluteJoint.cpp <354:11 354:11>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Mat22 [b2RevoluteJoint.cpp <354:3 354:9>]
SYMBOL_FUNCTION void b2Mat22::b2Mat22()
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Mat22::b2Mat22() [b2RevoluteJoint.cpp <354:11 354:11>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2RevoluteJoint.cpp <355:8 355:8>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mat22::ex [b2RevoluteJoint.cpp <355:5 355:6>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<354:11> [b2RevoluteJoint.cpp <355:3 355:3>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<351:11> [b2RevoluteJoint.cpp <355:12 355:13>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<351:28> [b2RevoluteJoint.cpp <355:17 355:18>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<352:11> [b2RevoluteJoint.cpp <355:22 355:23>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2RevoluteJoint.cpp <355:30 355:30>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<345:10> [b2RevoluteJoint.cpp <355:27 355:28>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2RevoluteJoint.cpp <355:37 355:37>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<345:10> [b2RevoluteJoint.cpp <355:34 355:35>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<352:25> [b2RevoluteJoint.cpp <355:41 355:42>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2RevoluteJoint.cpp <355:49 355:49>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<346:10> [b2RevoluteJoint.cpp <355:46 355:47>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2RevoluteJoint.cpp <355:56 355:56>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<346:10> [b2RevoluteJoint.cpp <355:53 355:54>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2RevoluteJoint.cpp <356:8 356:8>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mat22::ex [b2RevoluteJoint.cpp <356:5 356:6>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<354:11> [b2RevoluteJoint.cpp <356:3 356:3>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<352:11> [b2RevoluteJoint.cpp <356:13 356:14>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2RevoluteJoint.cpp <356:21 356:21>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<345:10> [b2RevoluteJoint.cpp <356:18 356:19>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2RevoluteJoint.cpp <356:28 356:28>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<345:10> [b2RevoluteJoint.cpp <356:25 356:26>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<352:25> [b2RevoluteJoint.cpp <356:32 356:33>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2RevoluteJoint.cpp <356:40 356:40>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<346:10> [b2RevoluteJoint.cpp <356:37 356:38>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2RevoluteJoint.cpp <356:47 356:47>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<346:10> [b2RevoluteJoint.cpp <356:44 356:45>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2RevoluteJoint.cpp <357:8 357:8>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mat22::ey [b2RevoluteJoint.cpp <357:5 357:6>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<354:11> [b2RevoluteJoint.cpp <357:3 357:3>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2RevoluteJoint.cpp <357:17 357:17>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mat22::ex [b2RevoluteJoint.cpp <357:14 357:15>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<354:11> [b2RevoluteJoint.cpp <357:12 357:12>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::y [b2RevoluteJoint.cpp <358:8 358:8>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mat22::ey [b2RevoluteJoint.cpp <358:5 358:6>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<354:11> [b2RevoluteJoint.cpp <358:3 358:3>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<351:11> [b2RevoluteJoint.cpp <358:12 358:13>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<351:28> [b2RevoluteJoint.cpp <358:17 358:18>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<352:11> [b2RevoluteJoint.cpp <358:22 358:23>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2RevoluteJoint.cpp <358:30 358:30>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<345:10> [b2RevoluteJoint.cpp <358:27 358:28>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2RevoluteJoint.cpp <358:37 358:37>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<345:10> [b2RevoluteJoint.cpp <358:34 358:35>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<352:25> [b2RevoluteJoint.cpp <358:41 358:42>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2RevoluteJoint.cpp <358:49 358:49>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<346:10> [b2RevoluteJoint.cpp <358:46 358:47>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::x [b2RevoluteJoint.cpp <358:56 358:56>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<346:10> [b2RevoluteJoint.cpp <358:53 358:54>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<360:10> [b2RevoluteJoint.cpp <360:10 360:16>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2RevoluteJoint.cpp <360:3 360:8>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Vec2::operator-() const [b2RevoluteJoint.cpp <360:20 360:20>]
SYMBOL_FUNCTION b2Vec2 b2Mat22::Solve(const b2Vec2 &) const
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mat22::Solve(const b2Vec2 &) const [b2RevoluteJoint.cpp <360:23 360:27>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<354:11> [b2RevoluteJoint.cpp <360:21 360:21>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<348:10> [b2RevoluteJoint.cpp <360:29 360:29>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2RevoluteJoint.cpp <362:6 362:7>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<293:9> [b2RevoluteJoint.cpp <362:3 362:4>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2RevoluteJoint.cpp <362:12 362:12>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<351:11> [b2RevoluteJoint.cpp <362:9 362:10>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<360:10> [b2RevoluteJoint.cpp <362:14 362:20>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<294:10> [b2RevoluteJoint.cpp <363:3 363:4>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<352:11> [b2RevoluteJoint.cpp <363:9 363:10>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2RevoluteJoint.cpp <363:14 363:20>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<345:10> [b2RevoluteJoint.cpp <363:22 363:23>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<360:10> [b2RevoluteJoint.cpp <363:26 363:32>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2RevoluteJoint.cpp <365:6 365:7>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<295:9> [b2RevoluteJoint.cpp <365:3 365:4>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2RevoluteJoint.cpp <365:12 365:12>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<351:28> [b2RevoluteJoint.cpp <365:9 365:10>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<360:10> [b2RevoluteJoint.cpp <365:14 365:20>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<296:10> [b2RevoluteJoint.cpp <366:3 366:4>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<352:25> [b2RevoluteJoint.cpp <366:9 366:10>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2RevoluteJoint.cpp <366:14 366:20>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<346:10> [b2RevoluteJoint.cpp <366:22 366:23>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<360:10> [b2RevoluteJoint.cpp <366:26 366:32>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2RevoluteJoint.cpp <369:29 369:29>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2RevoluteJoint.cpp <369:27 369:27>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2RevoluteJoint.cpp <369:7 369:15>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<291:68> [b2RevoluteJoint.cpp <369:2 369:5>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexA [b2RevoluteJoint.cpp <369:17 369:24>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<293:9> [b2RevoluteJoint.cpp <369:31 369:32>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2RevoluteJoint.cpp <370:27 370:27>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2RevoluteJoint.cpp <370:7 370:15>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<291:68> [b2RevoluteJoint.cpp <370:2 370:5>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexA [b2RevoluteJoint.cpp <370:17 370:24>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<294:10> [b2RevoluteJoint.cpp <370:31 370:32>]
REFERENCE_CALL bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2RevoluteJoint.cpp <371:29 371:29>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2RevoluteJoint.cpp <371:27 371:27>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2RevoluteJoint.cpp <371:7 371:15>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<291:68> [b2RevoluteJoint.cpp <371:2 371:5>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexB [b2RevoluteJoint.cpp <371:17 371:24>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<295:9> [b2RevoluteJoint.cpp <371:31 371:32>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2RevoluteJoint.cpp <372:27 372:27>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2RevoluteJoint.cpp <372:7 372:15>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<291:68> [b2RevoluteJoint.cpp <372:2 372:5>]
REFERENCE_USAGE bool b2RevoluteJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2RevoluteJoint::m_indexB [b2RevoluteJoint.cpp <372:17 372:24>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<296:10> [b2RevoluteJoint.cpp <372:31 372:32>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<301:10> [b2RevoluteJoint.cpp <374:9 374:21>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<300:10> [b2RevoluteJoint.cpp <374:43 374:54>]
SYMBOL_METHOD public b2Vec2 b2RevoluteJoint::GetAnchorA() const [b2RevoluteJoint.cpp <377:1 <377:25 377:34> 380:1>]
SYMBOL_FUNCTION b2Vec2 b2Joint::GetAnchorA() const
REFERENCE_OVERRIDE b2Vec2 b2RevoluteJoint::GetAnchorA() const -> b2Vec2 b2Joint::GetAnchorA() const [b2RevoluteJoint.cpp <377:25 377:34>]
QUALIFIER: b2RevoluteJoint [b2RevoluteJoint.cpp <377:8 377:22>]
REFERENCE_TYPE_USAGE b2Vec2 b2RevoluteJoint::GetAnchorA() const -> b2Vec2 [b2RevoluteJoint.cpp <377:1 377:6>]
SYMBOL_FUNCTION b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const
REFERENCE_CALL b2Vec2 b2RevoluteJoint::GetAnchorA() const -> b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const [b2RevoluteJoint.cpp <379:18 379:30>]
REFERENCE_USAGE b2Vec2 b2RevoluteJoint::GetAnchorA() const -> b2Body * b2Joint::m_bodyA [b2RevoluteJoint.cpp <379:9 379:15>]
REFERENCE_USAGE b2Vec2 b2RevoluteJoint::GetAnchorA() const -> b2Vec2 b2RevoluteJoint::m_localAnchorA [b2RevoluteJoint.cpp <379:32 379:45>]
SYMBOL_METHOD public b2Vec2 b2RevoluteJoint::GetAnchorB() const [b2RevoluteJoint.cpp <382:1 <382:25 382:34> 385:1>]
SYMBOL_FUNCTION b2Vec2 b2Joint::GetAnchorB() const
REFERENCE_OVERRIDE b2Vec2 b2RevoluteJoint::GetAnchorB() const -> b2Vec2 b2Joint::GetAnchorB() const [b2RevoluteJoint.cpp <382:25 382:34>]
QUALIFIER: b2RevoluteJoint [b2RevoluteJoint.cpp <382:8 382:22>]
REFERENCE_TYPE_USAGE b2Vec2 b2RevoluteJoint::GetAnchorB() const -> b2Vec2 [b2RevoluteJoint.cpp <382:1 382:6>]
REFERENCE_CALL b2Vec2 b2RevoluteJoint::GetAnchorB() const -> b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const [b2RevoluteJoint.cpp <384:18 384:30>]
REFERENCE_USAGE b2Vec2 b2RevoluteJoint::GetAnchorB() const -> b2Body * b2Joint::m_bodyB [b2RevoluteJoint.cpp <384:9 384:15>]
REFERENCE_USAGE b2Vec2 b2RevoluteJoint::GetAnchorB() const -> b2Vec2 b2RevoluteJoint::m_localAnchorB [b2RevoluteJoint.cpp <384:32 384:45>]
SYMBOL_METHOD public b2Vec2 b2RevoluteJoint::GetReactionForce(float32) const [b2RevoluteJoint.cpp <387:1 <387:25 387:40> 391:1>]
SYMBOL_FUNCTION b2Vec2 b2Joint::GetReactionForce(float32) const
REFERENCE_OVERRIDE b2Vec2 b2RevoluteJoint::GetReactionForce(float32) const -> b2Vec2 b2Joint::GetReactionForce(float32) const [b2RevoluteJoint.cpp <387:25 387:40>]
QUALIFIER: b2RevoluteJoint [b2RevoluteJoint.cpp <387:8 387:22>]
REFERENCE_TYPE_USAGE b2Vec2 b2RevoluteJoint::GetReactionForce(float32) const -> b2Vec2 [b2RevoluteJoint.cpp <387:1 387:6>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<387:50> [b2RevoluteJoint.cpp <387:50 387:55>]
REFERENCE_TYPE_USAGE b2Vec2 b2RevoluteJoint::GetReactionForce(float32) const -> float32 [b2RevoluteJoint.cpp <387:42 387:48>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<389:9> [b2RevoluteJoint.cpp <389:9 389:9>]
REFERENCE_TYPE_USAGE b2Vec2 b2RevoluteJoint::GetReactionForce(float32) const -> b2Vec2 [b2RevoluteJoint.cpp <389:2 389:7>]
REFERENCE_CALL b2Vec2 b2RevoluteJoint::GetReactionForce(float32) const -> void b2Vec2::b2Vec2(float32, float32) [b2RevoluteJoint.cpp <389:9 389:9>]
REFERENCE_USAGE b2Vec2 b2RevoluteJoint::GetReactionForce(float32) const -> float32 b2Vec3::x [b2RevoluteJoint.cpp <389:21 389:21>]
REFERENCE_USAGE b2Vec2 b2RevoluteJoint::GetReactionForce(float32) const -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <389:11 389:19>]
REFERENCE_USAGE b2Vec2 b2RevoluteJoint::GetReactionForce(float32) const -> float32 b2Vec3::y [b2RevoluteJoint.cpp <389:34 389:34>]
REFERENCE_USAGE b2Vec2 b2RevoluteJoint::GetReactionForce(float32) const -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <389:24 389:32>]
REFERENCE_CALL b2Vec2 b2RevoluteJoint::GetReactionForce(float32) const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2RevoluteJoint.cpp <390:16 390:16>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<387:50> [b2RevoluteJoint.cpp <390:9 390:14>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<389:9> [b2RevoluteJoint.cpp <390:18 390:18>]
SYMBOL_METHOD public float32 b2RevoluteJoint::GetReactionTorque(float32) const [b2RevoluteJoint.cpp <393:1 <393:26 393:42> 396:1>]
SYMBOL_FUNCTION float32 b2Joint::GetReactionTorque(float32) const
REFERENCE_OVERRIDE float32 b2RevoluteJoint::GetReactionTorque(float32) const -> float32 b2Joint::GetReactionTorque(float32) const [b2RevoluteJoint.cpp <393:26 393:42>]
QUALIFIER: b2RevoluteJoint [b2RevoluteJoint.cpp <393:9 393:23>]
REFERENCE_TYPE_USAGE float32 b2RevoluteJoint::GetReactionTorque(float32) const -> float32 [b2RevoluteJoint.cpp <393:1 393:7>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<393:52> [b2RevoluteJoint.cpp <393:52 393:57>]
REFERENCE_TYPE_USAGE float32 b2RevoluteJoint::GetReactionTorque(float32) const -> float32 [b2RevoluteJoint.cpp <393:44 393:50>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<393:52> [b2RevoluteJoint.cpp <395:9 395:14>]
REFERENCE_USAGE float32 b2RevoluteJoint::GetReactionTorque(float32) const -> float32 b2Vec3::z [b2RevoluteJoint.cpp <395:28 395:28>]
REFERENCE_USAGE float32 b2RevoluteJoint::GetReactionTorque(float32) const -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <395:18 395:26>]
SYMBOL_METHOD public float32 b2RevoluteJoint::GetJointAngle() const [b2RevoluteJoint.cpp <398:1 <398:26 398:38> 403:1>]
QUALIFIER: b2RevoluteJoint [b2RevoluteJoint.cpp <398:9 398:23>]
REFERENCE_TYPE_USAGE float32 b2RevoluteJoint::GetJointAngle() const -> float32 [b2RevoluteJoint.cpp <398:1 398:7>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<400:10> [b2RevoluteJoint.cpp <400:10 400:11>]
REFERENCE_TYPE_USAGE float32 b2RevoluteJoint::GetJointAngle() const -> b2Body [b2RevoluteJoint.cpp <400:2 400:7>]
REFERENCE_USAGE float32 b2RevoluteJoint::GetJointAngle() const -> b2Body * b2Joint::m_bodyA [b2RevoluteJoint.cpp <400:15 400:21>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<401:10> [b2RevoluteJoint.cpp <401:10 401:11>]
REFERENCE_TYPE_USAGE float32 b2RevoluteJoint::GetJointAngle() const -> b2Body [b2RevoluteJoint.cpp <401:2 401:7>]
REFERENCE_USAGE float32 b2RevoluteJoint::GetJointAngle() const -> b2Body * b2Joint::m_bodyB [b2RevoluteJoint.cpp <401:15 401:21>]
REFERENCE_USAGE float32 b2RevoluteJoint::GetJointAngle() const -> float32 b2Sweep::a [b2RevoluteJoint.cpp <402:21 402:21>]
REFERENCE_USAGE float32 b2RevoluteJoint::GetJointAngle() const -> b2Sweep b2Body::m_sweep [b2RevoluteJoint.cpp <402:13 402:19>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<401:10> [b2RevoluteJoint.cpp <402:9 402:10>]
REFERENCE_USAGE float32 b2RevoluteJoint::GetJointAngle() const -> float32 b2Sweep::a [b2RevoluteJoint.cpp <402:37 402:37>]
REFERENCE_USAGE float32 b2RevoluteJoint::GetJointAngle() const -> b2Sweep b2Body::m_sweep [b2RevoluteJoint.cpp <402:29 402:35>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<400:10> [b2RevoluteJoint.cpp <402:25 402:26>]
REFERENCE_USAGE float32 b2RevoluteJoint::GetJointAngle() const -> float32 b2RevoluteJoint::m_referenceAngle [b2RevoluteJoint.cpp <402:41 402:56>]
SYMBOL_METHOD public float32 b2RevoluteJoint::GetJointSpeed() const [b2RevoluteJoint.cpp <405:1 <405:26 405:38> 410:1>]
QUALIFIER: b2RevoluteJoint [b2RevoluteJoint.cpp <405:9 405:23>]
REFERENCE_TYPE_USAGE float32 b2RevoluteJoint::GetJointSpeed() const -> float32 [b2RevoluteJoint.cpp <405:1 405:7>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<407:10> [b2RevoluteJoint.cpp <407:10 407:11>]
REFERENCE_TYPE_USAGE float32 b2RevoluteJoint::GetJointSpeed() const -> b2Body [b2RevoluteJoint.cpp <407:2 407:7>]
REFERENCE_USAGE float32 b2RevoluteJoint::GetJointSpeed() const -> b2Body * b2Joint::m_bodyA [b2RevoluteJoint.cpp <407:15 407:21>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<408:10> [b2RevoluteJoint.cpp <408:10 408:11>]
REFERENCE_TYPE_USAGE float32 b2RevoluteJoint::GetJointSpeed() const -> b2Body [b2RevoluteJoint.cpp <408:2 408:7>]
REFERENCE_USAGE float32 b2RevoluteJoint::GetJointSpeed() const -> b2Body * b2Joint::m_bodyB [b2RevoluteJoint.cpp <408:15 408:21>]
REFERENCE_USAGE float32 b2RevoluteJoint::GetJointSpeed() const -> float32 b2Body::m_angularVelocity [b2RevoluteJoint.cpp <409:13 409:29>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<408:10> [b2RevoluteJoint.cpp <409:9 409:10>]
REFERENCE_USAGE float32 b2RevoluteJoint::GetJointSpeed() const -> float32 b2Body::m_angularVelocity [b2RevoluteJoint.cpp <409:37 409:53>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<407:10> [b2RevoluteJoint.cpp <409:33 409:34>]
SYMBOL_METHOD public bool b2RevoluteJoint::IsMotorEnabled() const [b2RevoluteJoint.cpp <412:1 <412:23 412:36> 415:1>]
QUALIFIER: b2RevoluteJoint [b2RevoluteJoint.cpp <412:6 412:20>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::IsMotorEnabled() const -> bool [b2RevoluteJoint.cpp <412:1 412:4>]
REFERENCE_USAGE bool b2RevoluteJoint::IsMotorEnabled() const -> bool b2RevoluteJoint::m_enableMotor [b2RevoluteJoint.cpp <414:9 414:21>]
SYMBOL_METHOD public void b2RevoluteJoint::EnableMotor(bool) [b2RevoluteJoint.cpp <417:1 <417:23 417:33> 425:1>]
QUALIFIER: b2RevoluteJoint [b2RevoluteJoint.cpp <417:6 417:20>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::EnableMotor(bool) -> void [b2RevoluteJoint.cpp <417:1 417:4>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<417:40> [b2RevoluteJoint.cpp <417:40 417:43>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::EnableMotor(bool) -> bool [b2RevoluteJoint.cpp <417:35 417:38>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<417:40> [b2RevoluteJoint.cpp <419:6 419:9>]
REFERENCE_USAGE void b2RevoluteJoint::EnableMotor(bool) -> bool b2RevoluteJoint::m_enableMotor [b2RevoluteJoint.cpp <419:14 419:26>]
SYMBOL_FUNCTION void b2Body::SetAwake(bool)
REFERENCE_CALL void b2RevoluteJoint::EnableMotor(bool) -> void b2Body::SetAwake(bool) [b2RevoluteJoint.cpp <421:12 421:19>]
REFERENCE_USAGE void b2RevoluteJoint::EnableMotor(bool) -> b2Body * b2Joint::m_bodyA [b2RevoluteJoint.cpp <421:3 421:9>]
REFERENCE_CALL void b2RevoluteJoint::EnableMotor(bool) -> void b2Body::SetAwake(bool) [b2RevoluteJoint.cpp <422:12 422:19>]
REFERENCE_USAGE void b2RevoluteJoint::EnableMotor(bool) -> b2Body * b2Joint::m_bodyB [b2RevoluteJoint.cpp <422:3 422:9>]
REFERENCE_USAGE void b2RevoluteJoint::EnableMotor(bool) -> bool b2RevoluteJoint::m_enableMotor [b2RevoluteJoint.cpp <423:3 423:15>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<417:40> [b2RevoluteJoint.cpp <423:19 423:22>]
SYMBOL_METHOD public float32 b2RevoluteJoint::GetMotorTorque(float32) const [b2RevoluteJoint.cpp <427:1 <427:26 427:39> 430:1>]
QUALIFIER: b2RevoluteJoint [b2RevoluteJoint.cpp <427:9 427:23>]
REFERENCE_TYPE_USAGE float32 b2RevoluteJoint::GetMotorTorque(float32) const -> float32 [b2RevoluteJoint.cpp <427:1 427:7>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<427:49> [b2RevoluteJoint.cpp <427:49 427:54>]
REFERENCE_TYPE_USAGE float32 b2RevoluteJoint::GetMotorTorque(float32) const -> float32 [b2RevoluteJoint.cpp <427:41 427:47>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<427:49> [b2RevoluteJoint.cpp <429:9 429:14>]
REFERENCE_USAGE float32 b2RevoluteJoint::GetMotorTorque(float32) const -> float32 b2RevoluteJoint::m_motorImpulse [b2RevoluteJoint.cpp <429:18 429:31>]
SYMBOL_METHOD public void b2RevoluteJoint::SetMotorSpeed(float32) [b2RevoluteJoint.cpp <432:1 <432:23 432:35> 440:1>]
QUALIFIER: b2RevoluteJoint [b2RevoluteJoint.cpp <432:6 432:20>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SetMotorSpeed(float32) -> void [b2RevoluteJoint.cpp <432:1 432:4>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<432:45> [b2RevoluteJoint.cpp <432:45 432:49>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SetMotorSpeed(float32) -> float32 [b2RevoluteJoint.cpp <432:37 432:43>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<432:45> [b2RevoluteJoint.cpp <434:6 434:10>]
REFERENCE_USAGE void b2RevoluteJoint::SetMotorSpeed(float32) -> float32 b2RevoluteJoint::m_motorSpeed [b2RevoluteJoint.cpp <434:15 434:26>]
REFERENCE_CALL void b2RevoluteJoint::SetMotorSpeed(float32) -> void b2Body::SetAwake(bool) [b2RevoluteJoint.cpp <436:12 436:19>]
REFERENCE_USAGE void b2RevoluteJoint::SetMotorSpeed(float32) -> b2Body * b2Joint::m_bodyA [b2RevoluteJoint.cpp <436:3 436:9>]
REFERENCE_CALL void b2RevoluteJoint::SetMotorSpeed(float32) -> void b2Body::SetAwake(bool) [b2RevoluteJoint.cpp <437:12 437:19>]
REFERENCE_USAGE void b2RevoluteJoint::SetMotorSpeed(float32) -> b2Body * b2Joint::m_bodyB [b2RevoluteJoint.cpp <437:3 437:9>]
REFERENCE_USAGE void b2RevoluteJoint::SetMotorSpeed(float32) -> float32 b2RevoluteJoint::m_motorSpeed [b2RevoluteJoint.cpp <438:3 438:14>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<432:45> [b2RevoluteJoint.cpp <438:18 438:22>]
SYMBOL_METHOD public void b2RevoluteJoint::SetMaxMotorTorque(float32) [b2RevoluteJoint.cpp <442:1 <442:23 442:39> 450:1>]
QUALIFIER: b2RevoluteJoint [b2RevoluteJoint.cpp <442:6 442:20>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SetMaxMotorTorque(float32) -> void [b2RevoluteJoint.cpp <442:1 442:4>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<442:49> [b2RevoluteJoint.cpp <442:49 442:54>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SetMaxMotorTorque(float32) -> float32 [b2RevoluteJoint.cpp <442:41 442:47>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<442:49> [b2RevoluteJoint.cpp <444:6 444:11>]
REFERENCE_USAGE void b2RevoluteJoint::SetMaxMotorTorque(float32) -> float32 b2RevoluteJoint::m_maxMotorTorque [b2RevoluteJoint.cpp <444:16 444:31>]
REFERENCE_CALL void b2RevoluteJoint::SetMaxMotorTorque(float32) -> void b2Body::SetAwake(bool) [b2RevoluteJoint.cpp <446:12 446:19>]
REFERENCE_USAGE void b2RevoluteJoint::SetMaxMotorTorque(float32) -> b2Body * b2Joint::m_bodyA [b2RevoluteJoint.cpp <446:3 446:9>]
REFERENCE_CALL void b2RevoluteJoint::SetMaxMotorTorque(float32) -> void b2Body::SetAwake(bool) [b2RevoluteJoint.cpp <447:12 447:19>]
REFERENCE_USAGE void b2RevoluteJoint::SetMaxMotorTorque(float32) -> b2Body * b2Joint::m_bodyB [b2RevoluteJoint.cpp <447:3 447:9>]
REFERENCE_USAGE void b2RevoluteJoint::SetMaxMotorTorque(float32) -> float32 b2RevoluteJoint::m_maxMotorTorque [b2RevoluteJoint.cpp <448:3 448:18>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<442:49> [b2RevoluteJoint.cpp <448:22 448:27>]
SYMBOL_METHOD public bool b2RevoluteJoint::IsLimitEnabled() const [b2RevoluteJoint.cpp <452:1 <452:23 452:36> 455:1>]
QUALIFIER: b2RevoluteJoint [b2RevoluteJoint.cpp <452:6 452:20>]
REFERENCE_TYPE_USAGE bool b2RevoluteJoint::IsLimitEnabled() const -> bool [b2RevoluteJoint.cpp <452:1 452:4>]
REFERENCE_USAGE bool b2RevoluteJoint::IsLimitEnabled() const -> bool b2RevoluteJoint::m_enableLimit [b2RevoluteJoint.cpp <454:9 454:21>]
SYMBOL_METHOD public void b2RevoluteJoint::EnableLimit(bool) [b2RevoluteJoint.cpp <457:1 <457:23 457:33> 466:1>]
QUALIFIER: b2RevoluteJoint [b2RevoluteJoint.cpp <457:6 457:20>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::EnableLimit(bool) -> void [b2RevoluteJoint.cpp <457:1 457:4>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<457:40> [b2RevoluteJoint.cpp <457:40 457:43>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::EnableLimit(bool) -> bool [b2RevoluteJoint.cpp <457:35 457:38>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<457:40> [b2RevoluteJoint.cpp <459:6 459:9>]
REFERENCE_USAGE void b2RevoluteJoint::EnableLimit(bool) -> bool b2RevoluteJoint::m_enableLimit [b2RevoluteJoint.cpp <459:14 459:26>]
REFERENCE_CALL void b2RevoluteJoint::EnableLimit(bool) -> void b2Body::SetAwake(bool) [b2RevoluteJoint.cpp <461:12 461:19>]
REFERENCE_USAGE void b2RevoluteJoint::EnableLimit(bool) -> b2Body * b2Joint::m_bodyA [b2RevoluteJoint.cpp <461:3 461:9>]
REFERENCE_CALL void b2RevoluteJoint::EnableLimit(bool) -> void b2Body::SetAwake(bool) [b2RevoluteJoint.cpp <462:12 462:19>]
REFERENCE_USAGE void b2RevoluteJoint::EnableLimit(bool) -> b2Body * b2Joint::m_bodyB [b2RevoluteJoint.cpp <462:3 462:9>]
REFERENCE_USAGE void b2RevoluteJoint::EnableLimit(bool) -> bool b2RevoluteJoint::m_enableLimit [b2RevoluteJoint.cpp <463:3 463:15>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<457:40> [b2RevoluteJoint.cpp <463:19 463:22>]
REFERENCE_USAGE void b2RevoluteJoint::EnableLimit(bool) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <464:13 464:13>]
REFERENCE_USAGE void b2RevoluteJoint::EnableLimit(bool) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <464:3 464:11>]
SYMBOL_METHOD public float32 b2RevoluteJoint::GetLowerLimit() const [b2RevoluteJoint.cpp <468:1 <468:26 468:38> 471:1>]
QUALIFIER: b2RevoluteJoint [b2RevoluteJoint.cpp <468:9 468:23>]
REFERENCE_TYPE_USAGE float32 b2RevoluteJoint::GetLowerLimit() const -> float32 [b2RevoluteJoint.cpp <468:1 468:7>]
REFERENCE_USAGE float32 b2RevoluteJoint::GetLowerLimit() const -> float32 b2RevoluteJoint::m_lowerAngle [b2RevoluteJoint.cpp <470:9 470:20>]
SYMBOL_METHOD public float32 b2RevoluteJoint::GetUpperLimit() const [b2RevoluteJoint.cpp <473:1 <473:26 473:38> 476:1>]
QUALIFIER: b2RevoluteJoint [b2RevoluteJoint.cpp <473:9 473:23>]
REFERENCE_TYPE_USAGE float32 b2RevoluteJoint::GetUpperLimit() const -> float32 [b2RevoluteJoint.cpp <473:1 473:7>]
REFERENCE_USAGE float32 b2RevoluteJoint::GetUpperLimit() const -> float32 b2RevoluteJoint::m_upperAngle [b2RevoluteJoint.cpp <475:9 475:20>]
SYMBOL_METHOD public void b2RevoluteJoint::SetLimits(float32, float32) [b2RevoluteJoint.cpp <478:1 <478:23 478:31> 490:1>]
QUALIFIER: b2RevoluteJoint [b2RevoluteJoint.cpp <478:6 478:20>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SetLimits(float32, float32) -> void [b2RevoluteJoint.cpp <478:1 478:4>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<478:41> [b2RevoluteJoint.cpp <478:41 478:45>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SetLimits(float32, float32) -> float32 [b2RevoluteJoint.cpp <478:33 478:39>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<478:56> [b2RevoluteJoint.cpp <478:56 478:60>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::SetLimits(float32, float32) -> float32 [b2RevoluteJoint.cpp <478:48 478:54>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<478:41> [b2RevoluteJoint.cpp <480:11 480:15>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<478:56> [b2RevoluteJoint.cpp <480:20 480:24>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<478:41> [b2RevoluteJoint.cpp <482:6 482:10>]
REFERENCE_USAGE void b2RevoluteJoint::SetLimits(float32, float32) -> float32 b2RevoluteJoint::m_lowerAngle [b2RevoluteJoint.cpp <482:15 482:26>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<478:56> [b2RevoluteJoint.cpp <482:31 482:35>]
REFERENCE_USAGE void b2RevoluteJoint::SetLimits(float32, float32) -> float32 b2RevoluteJoint::m_upperAngle [b2RevoluteJoint.cpp <482:40 482:51>]
REFERENCE_CALL void b2RevoluteJoint::SetLimits(float32, float32) -> void b2Body::SetAwake(bool) [b2RevoluteJoint.cpp <484:12 484:19>]
REFERENCE_USAGE void b2RevoluteJoint::SetLimits(float32, float32) -> b2Body * b2Joint::m_bodyA [b2RevoluteJoint.cpp <484:3 484:9>]
REFERENCE_CALL void b2RevoluteJoint::SetLimits(float32, float32) -> void b2Body::SetAwake(bool) [b2RevoluteJoint.cpp <485:12 485:19>]
REFERENCE_USAGE void b2RevoluteJoint::SetLimits(float32, float32) -> b2Body * b2Joint::m_bodyB [b2RevoluteJoint.cpp <485:3 485:9>]
REFERENCE_USAGE void b2RevoluteJoint::SetLimits(float32, float32) -> float32 b2Vec3::z [b2RevoluteJoint.cpp <486:13 486:13>]
REFERENCE_USAGE void b2RevoluteJoint::SetLimits(float32, float32) -> b2Vec3 b2RevoluteJoint::m_impulse [b2RevoluteJoint.cpp <486:3 486:11>]
REFERENCE_USAGE void b2RevoluteJoint::SetLimits(float32, float32) -> float32 b2RevoluteJoint::m_lowerAngle [b2RevoluteJoint.cpp <487:3 487:14>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<478:41> [b2RevoluteJoint.cpp <487:18 487:22>]
REFERENCE_USAGE void b2RevoluteJoint::SetLimits(float32, float32) -> float32 b2RevoluteJoint::m_upperAngle [b2RevoluteJoint.cpp <488:3 488:14>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<478:56> [b2RevoluteJoint.cpp <488:18 488:22>]
SYMBOL_METHOD public void b2RevoluteJoint::Dump() [b2RevoluteJoint.cpp <492:1 <492:23 492:26> 511:1>]
SYMBOL_FUNCTION void b2Joint::Dump()
REFERENCE_OVERRIDE void b2RevoluteJoint::Dump() -> void b2Joint::Dump() [b2RevoluteJoint.cpp <492:23 492:26>]
QUALIFIER: b2RevoluteJoint [b2RevoluteJoint.cpp <492:6 492:20>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::Dump() -> void [b2RevoluteJoint.cpp <492:1 492:4>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<494:8> [b2RevoluteJoint.cpp <494:8 494:13>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::Dump() -> int32 [b2RevoluteJoint.cpp <494:2 494:6>]
REFERENCE_USAGE void b2RevoluteJoint::Dump() -> int32 b2Body::m_islandIndex [b2RevoluteJoint.cpp <494:26 494:38>]
REFERENCE_USAGE void b2RevoluteJoint::Dump() -> b2Body * b2Joint::m_bodyA [b2RevoluteJoint.cpp <494:17 494:23>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<495:8> [b2RevoluteJoint.cpp <495:8 495:13>]
REFERENCE_TYPE_USAGE void b2RevoluteJoint::Dump() -> int32 [b2RevoluteJoint.cpp <495:2 495:6>]
REFERENCE_USAGE void b2RevoluteJoint::Dump() -> int32 b2Body::m_islandIndex [b2RevoluteJoint.cpp <495:26 495:38>]
REFERENCE_USAGE void b2RevoluteJoint::Dump() -> b2Body * b2Joint::m_bodyB [b2RevoluteJoint.cpp <495:17 495:23>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2RevoluteJoint::Dump() -> void b2Log(const char *) [b2RevoluteJoint.cpp <497:2 497:6>]
REFERENCE_CALL void b2RevoluteJoint::Dump() -> void b2Log(const char *) [b2RevoluteJoint.cpp <498:2 498:6>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<494:8> [b2RevoluteJoint.cpp <498:38 498:43>]
REFERENCE_CALL void b2RevoluteJoint::Dump() -> void b2Log(const char *) [b2RevoluteJoint.cpp <499:2 499:6>]
LOCAL_SYMBOL: b2RevoluteJoint.cpp<495:8> [b2RevoluteJoint.cpp <499:38 499:43>]
REFERENCE_CALL void b2RevoluteJoint::Dump() -> void b2Log(const char *) [b2RevoluteJoint.cpp <500:2 500:6>]
REFERENCE_USAGE void b2RevoluteJoint::Dump() -> bool b2Joint::m_collideConnected [b2RevoluteJoint.cpp <500:47 500:64>]
REFERENCE_CALL void b2RevoluteJoint::Dump() -> void b2Log(const char *) [b2RevoluteJoint.cpp <501:2 501:6>]
REFERENCE_USAGE void b2RevoluteJoint::Dump() -> float32 b2Vec2::x [b2RevoluteJoint.cpp <501:69 501:69>]
REFERENCE_USAGE void b2RevoluteJoint::Dump() -> b2Vec2 b2RevoluteJoint::m_localAnchorA [b2RevoluteJoint.cpp <501:54 501:67>]
REFERENCE_USAGE void b2RevoluteJoint::Dump() -> float32 b2Vec2::y [b2RevoluteJoint.cpp <501:87 501:87>]
REFERENCE_USAGE void b2RevoluteJoint::Dump() -> b2Vec2 b2RevoluteJoint::m_localAnchorA [b2RevoluteJoint.cpp <501:72 501:85>]
REFERENCE_CALL void b2RevoluteJoint::Dump() -> void b2Log(const char *) [b2RevoluteJoint.cpp <502:2 502:6>]
REFERENCE_USAGE void b2RevoluteJoint::Dump() -> float32 b2Vec2::x [b2RevoluteJoint.cpp <502:69 502:69>]
REFERENCE_USAGE void b2RevoluteJoint::Dump() -> b2Vec2 b2RevoluteJoint::m_localAnchorB [b2RevoluteJoint.cpp <502:54 502:67>]
REFERENCE_USAGE void b2RevoluteJoint::Dump() -> float32 b2Vec2::y [b2RevoluteJoint.cpp <502:87 502:87>]
REFERENCE_USAGE void b2RevoluteJoint::Dump() -> b2Vec2 b2RevoluteJoint::m_localAnchorB [b2RevoluteJoint.cpp <502:72 502:85>]
REFERENCE_CALL void b2RevoluteJoint::Dump() -> void b2Log(const char *) [b2RevoluteJoint.cpp <503:2 503:6>]
REFERENCE_USAGE void b2RevoluteJoint::Dump() -> float32 b2RevoluteJoint::m_referenceAngle [b2RevoluteJoint.cpp <503:44 503:59>]
REFERENCE_CALL void b2RevoluteJoint::Dump() -> void b2Log(const char *) [b2RevoluteJoint.cpp <504:2 504:6>]
REFERENCE_USAGE void b2RevoluteJoint::Dump() -> bool b2RevoluteJoint::m_enableLimit [b2RevoluteJoint.cpp <504:42 504:54>]
REFERENCE_CALL void b2RevoluteJoint::Dump() -> void b2Log(const char *) [b2RevoluteJoint.cpp <505:2 505:6>]
REFERENCE_USAGE void b2RevoluteJoint::Dump() -> float32 b2RevoluteJoint::m_lowerAngle [b2RevoluteJoint.cpp <505:40 505:51>]
REFERENCE_CALL void b2RevoluteJoint::Dump() -> void b2Log(const char *) [b2RevoluteJoint.cpp <506:2 506:6>]
REFERENCE_USAGE void b2RevoluteJoint::Dump() -> float32 b2RevoluteJoint::m_upperAngle [b2RevoluteJoint.cpp <506:40 506:51>]
REFERENCE_CALL void b2RevoluteJoint::Dump() -> void b2Log(const char *) [b2RevoluteJoint.cpp <507:2 507:6>]
REFERENCE_USAGE void b2RevoluteJoint::Dump() -> bool b2RevoluteJoint::m_enableMotor [b2RevoluteJoint.cpp <507:42 507:54>]
REFERENCE_CALL void b2RevoluteJoint::Dump() -> void b2Log(const char *) [b2RevoluteJoint.cpp <508:2 508:6>]
REFERENCE_USAGE void b2RevoluteJoint::Dump() -> float32 b2RevoluteJoint::m_motorSpeed [b2RevoluteJoint.cpp <508:40 508:51>]
REFERENCE_CALL void b2RevoluteJoint::Dump() -> void b2Log(const char *) [b2RevoluteJoint.cpp <509:2 509:6>]
REFERENCE_USAGE void b2RevoluteJoint::Dump() -> float32 b2RevoluteJoint::m_maxMotorTorque [b2RevoluteJoint.cpp <509:44 509:59>]
REFERENCE_CALL void b2RevoluteJoint::Dump() -> void b2Log(const char *) [b2RevoluteJoint.cpp <510:2 510:6>]
REFERENCE_USAGE void b2RevoluteJoint::Dump() -> int32 b2Joint::m_index [b2RevoluteJoint.cpp <510:55 510:61>]
