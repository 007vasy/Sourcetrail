FILE: b2CollideEdge.cpp
FILE: b2CollideEdge.cpp
COMMENT: comment [b2CollideEdge.cpp <1:1 17:4>]
FILE: b2CollideEdge.cpp
FILE: b2CollideEdge.cpp
FILE: b2CollideEdge.cpp
FILE: b2CollideEdge.cpp
COMMENT: comment [b2CollideEdge.cpp <25:1 25:50>]
COMMENT: comment [b2CollideEdge.cpp <26:1 26:40>]
COMMENT: comment [b2CollideEdge.cpp <33:2 33:36>]
COMMENT: comment [b2CollideEdge.cpp <39:2 39:28>]
COMMENT: comment [b2CollideEdge.cpp <49:2 49:13>]
COMMENT: comment [b2CollideEdge.cpp <60:3 60:38>]
COMMENT: comment [b2CollideEdge.cpp <68:4 68:55>]
COMMENT: comment [b2CollideEdge.cpp <87:2 87:13>]
COMMENT: comment [b2CollideEdge.cpp <98:3 98:38>]
COMMENT: comment [b2CollideEdge.cpp <106:4 106:51>]
COMMENT: comment [b2CollideEdge.cpp <125:2 125:14>]
REFERENCE_MACRO_USAGE b2CollideEdge.cpp -> b2Assert [b2CollideEdge.cpp <127:2 127:9>]
REFERENCE_MACRO_USAGE b2Settings.h -> assert [b2Settings.h <31:21 31:26>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:23 34:31>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:47 34:55>]
REFERENCE_MACRO_USAGE assert.h -> __FILE__ [assert.h <34:57 34:64>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> __LINE__ [assert.h <34:79 34:86>]
COMMENT: comment [b2CollideEdge.cpp <154:1 154:69>]
COMMENT: comment [b2CollideEdge.cpp <169:1 169:46>]
REFERENCE_MACRO_USAGE b2CollideEdge.cpp -> b2_maxPolygonVertices [b2CollideEdge.cpp <172:18 172:38>]
REFERENCE_MACRO_USAGE b2CollideEdge.cpp -> b2_maxPolygonVertices [b2CollideEdge.cpp <173:17 173:37>]
COMMENT: comment [b2CollideEdge.cpp <177:1 177:36>]
COMMENT: comment [b2CollideEdge.cpp <193:1 193:83>]
COMMENT: comment [b2CollideEdge.cpp <221:1 221:14>]
COMMENT: comment [b2CollideEdge.cpp <222:1 222:25>]
COMMENT: comment [b2CollideEdge.cpp <223:1 223:49>]
COMMENT: comment [b2CollideEdge.cpp <224:1 224:31>]
COMMENT: comment [b2CollideEdge.cpp <225:1 225:61>]
COMMENT: comment [b2CollideEdge.cpp <226:1 226:54>]
COMMENT: comment [b2CollideEdge.cpp <227:1 227:68>]
COMMENT: comment [b2CollideEdge.cpp <228:1 228:48>]
COMMENT: comment [b2CollideEdge.cpp <229:1 229:11>]
COMMENT: comment [b2CollideEdge.cpp <252:2 252:31>]
COMMENT: comment [b2CollideEdge.cpp <262:2 262:31>]
COMMENT: comment [b2CollideEdge.cpp <272:2 272:74>]
COMMENT: comment [b2CollideEdge.cpp <427:2 427:27>]
COMMENT: comment [b2CollideEdge.cpp <441:2 441:71>]
COMMENT: comment [b2CollideEdge.cpp <458:2 458:41>]
COMMENT: comment [b2CollideEdge.cpp <482:3 482:82>]
COMMENT: comment [b2CollideEdge.cpp <555:2 555:58>]
COMMENT: comment [b2CollideEdge.cpp <560:2 560:23>]
REFERENCE_MACRO_USAGE b2CollideEdge.cpp -> b2_maxManifoldPoints [b2CollideEdge.cpp <563:11 563:30>]
COMMENT: comment [b2CollideEdge.cpp <568:2 568:32>]
REFERENCE_MACRO_USAGE b2CollideEdge.cpp -> b2_maxManifoldPoints [b2CollideEdge.cpp <571:11 571:30>]
COMMENT: comment [b2CollideEdge.cpp <576:2 576:49>]
REFERENCE_MACRO_USAGE b2CollideEdge.cpp -> b2_maxManifoldPoints [b2CollideEdge.cpp <589:24 589:43>]
REFERENCE_MACRO_USAGE b2CollideEdge.cpp -> FLT_MAX [b2CollideEdge.cpp <625:20 625:26>]
REFERENCE_MACRO_USAGE b2CollideEdge.cpp -> FLT_MAX [b2CollideEdge.cpp <644:21 644:27>]
COMMENT: comment [b2CollideEdge.cpp <658:4 658:19>]
COMMENT: comment [b2CollideEdge.cpp <665:3 665:15>]
REFERENCE_MACRO_USAGE b2CollideEdge.cpp -> b2_angularSlop [b2CollideEdge.cpp <668:45 668:58>]
REFERENCE_MACRO_USAGE b2Settings.h -> b2_pi [b2Settings.h <76:43 76:47>]
REFERENCE_MACRO_USAGE b2CollideEdge.cpp -> b2_angularSlop [b2CollideEdge.cpp <675:45 675:58>]
REFERENCE_MACRO_USAGE b2Settings.h -> b2_pi [b2Settings.h <76:43 76:47>]
SYMBOL_FUNCTION void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) [b2CollideEdge.cpp <27:1 <27:6 27:27> 152:1>]
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> void [b2CollideEdge.cpp <27:1 27:4>]
LOCAL_SYMBOL: b2CollideEdge.cpp<27:41> [b2CollideEdge.cpp <27:41 27:48>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Manifold [b2CollideEdge.cpp <27:29 27:38>]
LOCAL_SYMBOL: b2CollideEdge.cpp<28:27> [b2CollideEdge.cpp <28:27 28:31>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2EdgeShape [b2CollideEdge.cpp <28:14 28:24>]
LOCAL_SYMBOL: b2CollideEdge.cpp<28:53> [b2CollideEdge.cpp <28:53 28:55>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Transform [b2CollideEdge.cpp <28:40 28:50>]
LOCAL_SYMBOL: b2CollideEdge.cpp<29:29> [b2CollideEdge.cpp <29:29 29:35>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2CircleShape [b2CollideEdge.cpp <29:14 29:26>]
LOCAL_SYMBOL: b2CollideEdge.cpp<29:57> [b2CollideEdge.cpp <29:57 29:59>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Transform [b2CollideEdge.cpp <29:44 29:54>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> int32 b2Manifold::pointCount [b2CollideEdge.cpp <31:12 31:21>]
LOCAL_SYMBOL: b2CollideEdge.cpp<27:41> [b2CollideEdge.cpp <31:2 31:9>]
LOCAL_SYMBOL: b2CollideEdge.cpp<34:9> [b2CollideEdge.cpp <34:9 34:9>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideEdge.cpp <34:2 34:7>]
SYMBOL_FUNCTION b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) [b2CollideEdge.cpp <34:13 34:18>]
LOCAL_SYMBOL: b2CollideEdge.cpp<28:53> [b2CollideEdge.cpp <34:20 34:22>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2CollideEdge.cpp <34:25 34:29>]
LOCAL_SYMBOL: b2CollideEdge.cpp<29:57> [b2CollideEdge.cpp <34:31 34:33>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2CircleShape::m_p [b2CollideEdge.cpp <34:45 34:47>]
LOCAL_SYMBOL: b2CollideEdge.cpp<29:29> [b2CollideEdge.cpp <34:36 34:42>]
LOCAL_SYMBOL: b2CollideEdge.cpp<36:9> [b2CollideEdge.cpp <36:9 36:9>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideEdge.cpp <36:2 36:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2CollideEdge.cpp <36:20 36:28>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2EdgeShape::m_vertex1 [b2CollideEdge.cpp <36:20 36:28>]
LOCAL_SYMBOL: b2CollideEdge.cpp<28:27> [b2CollideEdge.cpp <36:13 36:17>]
LOCAL_SYMBOL: b2CollideEdge.cpp<36:31> [b2CollideEdge.cpp <36:31 36:31>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideEdge.cpp <36:2 36:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2CollideEdge.cpp <36:42 36:50>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2EdgeShape::m_vertex2 [b2CollideEdge.cpp <36:42 36:50>]
LOCAL_SYMBOL: b2CollideEdge.cpp<28:27> [b2CollideEdge.cpp <36:35 36:39>]
LOCAL_SYMBOL: b2CollideEdge.cpp<37:9> [b2CollideEdge.cpp <37:9 37:9>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideEdge.cpp <37:2 37:7>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <37:15 37:15>]
LOCAL_SYMBOL: b2CollideEdge.cpp<36:31> [b2CollideEdge.cpp <37:13 37:13>]
LOCAL_SYMBOL: b2CollideEdge.cpp<36:9> [b2CollideEdge.cpp <37:17 37:17>]
LOCAL_SYMBOL: b2CollideEdge.cpp<40:10> [b2CollideEdge.cpp <40:10 40:10>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 [b2CollideEdge.cpp <40:2 40:8>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <40:14 40:18>]
LOCAL_SYMBOL: b2CollideEdge.cpp<37:9> [b2CollideEdge.cpp <40:20 40:20>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <40:25 40:25>]
LOCAL_SYMBOL: b2CollideEdge.cpp<36:31> [b2CollideEdge.cpp <40:23 40:23>]
LOCAL_SYMBOL: b2CollideEdge.cpp<34:9> [b2CollideEdge.cpp <40:27 40:27>]
LOCAL_SYMBOL: b2CollideEdge.cpp<41:10> [b2CollideEdge.cpp <41:10 41:10>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 [b2CollideEdge.cpp <41:2 41:8>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <41:14 41:18>]
LOCAL_SYMBOL: b2CollideEdge.cpp<37:9> [b2CollideEdge.cpp <41:20 41:20>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <41:25 41:25>]
LOCAL_SYMBOL: b2CollideEdge.cpp<34:9> [b2CollideEdge.cpp <41:23 41:23>]
LOCAL_SYMBOL: b2CollideEdge.cpp<36:9> [b2CollideEdge.cpp <41:27 41:27>]
LOCAL_SYMBOL: b2CollideEdge.cpp<43:10> [b2CollideEdge.cpp <43:10 43:15>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 [b2CollideEdge.cpp <43:2 43:8>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Shape::m_radius [b2CollideEdge.cpp <43:26 43:33>]
LOCAL_SYMBOL: b2CollideEdge.cpp<28:27> [b2CollideEdge.cpp <43:19 43:23>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Shape::m_radius [b2CollideEdge.cpp <43:46 43:53>]
LOCAL_SYMBOL: b2CollideEdge.cpp<29:29> [b2CollideEdge.cpp <43:37 43:43>]
LOCAL_SYMBOL: b2CollideEdge.cpp<45:19> [b2CollideEdge.cpp <45:19 45:20>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ContactFeature [b2CollideEdge.cpp <45:2 45:17>]
SYMBOL_FUNCTION void b2ContactFeature::b2ContactFeature()
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> void b2ContactFeature::b2ContactFeature() [b2CollideEdge.cpp <45:19 45:20>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> uint8 b2ContactFeature::indexB [b2CollideEdge.cpp <46:5 46:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<45:19> [b2CollideEdge.cpp <46:2 46:3>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> uint8 b2ContactFeature::typeB [b2CollideEdge.cpp <47:5 47:9>]
LOCAL_SYMBOL: b2CollideEdge.cpp<45:19> [b2CollideEdge.cpp <47:2 47:3>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ContactFeature::Type::e_vertex [b2CollideEdge.cpp <47:31 47:38>]
SYMBOL_STRUCT b2ContactFeature
LOCAL_SYMBOL: b2CollideEdge.cpp<41:10> [b2CollideEdge.cpp <50:6 50:6>]
LOCAL_SYMBOL: b2CollideEdge.cpp<52:10> [b2CollideEdge.cpp <52:10 52:10>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideEdge.cpp <52:3 52:8>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2CollideEdge.cpp <52:14 52:14>]
LOCAL_SYMBOL: b2CollideEdge.cpp<36:9> [b2CollideEdge.cpp <52:14 52:14>]
LOCAL_SYMBOL: b2CollideEdge.cpp<53:10> [b2CollideEdge.cpp <53:10 53:10>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideEdge.cpp <53:3 53:8>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <53:16 53:16>]
LOCAL_SYMBOL: b2CollideEdge.cpp<34:9> [b2CollideEdge.cpp <53:14 53:14>]
LOCAL_SYMBOL: b2CollideEdge.cpp<52:10> [b2CollideEdge.cpp <53:18 53:18>]
LOCAL_SYMBOL: b2CollideEdge.cpp<54:11> [b2CollideEdge.cpp <54:11 54:12>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 [b2CollideEdge.cpp <54:3 54:9>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <54:16 54:20>]
LOCAL_SYMBOL: b2CollideEdge.cpp<53:10> [b2CollideEdge.cpp <54:22 54:22>]
LOCAL_SYMBOL: b2CollideEdge.cpp<53:10> [b2CollideEdge.cpp <54:25 54:25>]
LOCAL_SYMBOL: b2CollideEdge.cpp<54:11> [b2CollideEdge.cpp <55:7 55:8>]
LOCAL_SYMBOL: b2CollideEdge.cpp<43:10> [b2CollideEdge.cpp <55:12 55:17>]
LOCAL_SYMBOL: b2CollideEdge.cpp<43:10> [b2CollideEdge.cpp <55:21 55:26>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> bool b2EdgeShape::m_hasVertex0 [b2CollideEdge.cpp <61:14 61:25>]
LOCAL_SYMBOL: b2CollideEdge.cpp<28:27> [b2CollideEdge.cpp <61:7 61:11>]
LOCAL_SYMBOL: b2CollideEdge.cpp<63:11> [b2CollideEdge.cpp <63:11 63:12>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideEdge.cpp <63:4 63:9>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2CollideEdge.cpp <63:23 63:31>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2EdgeShape::m_vertex0 [b2CollideEdge.cpp <63:23 63:31>]
LOCAL_SYMBOL: b2CollideEdge.cpp<28:27> [b2CollideEdge.cpp <63:16 63:20>]
LOCAL_SYMBOL: b2CollideEdge.cpp<64:11> [b2CollideEdge.cpp <64:11 64:12>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideEdge.cpp <64:4 64:9>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2CollideEdge.cpp <64:16 64:16>]
LOCAL_SYMBOL: b2CollideEdge.cpp<36:9> [b2CollideEdge.cpp <64:16 64:16>]
LOCAL_SYMBOL: b2CollideEdge.cpp<65:11> [b2CollideEdge.cpp <65:11 65:12>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideEdge.cpp <65:4 65:9>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <65:19 65:19>]
LOCAL_SYMBOL: b2CollideEdge.cpp<64:11> [b2CollideEdge.cpp <65:16 65:17>]
LOCAL_SYMBOL: b2CollideEdge.cpp<63:11> [b2CollideEdge.cpp <65:21 65:22>]
LOCAL_SYMBOL: b2CollideEdge.cpp<66:12> [b2CollideEdge.cpp <66:12 66:13>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 [b2CollideEdge.cpp <66:4 66:10>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <66:17 66:21>]
LOCAL_SYMBOL: b2CollideEdge.cpp<65:11> [b2CollideEdge.cpp <66:23 66:24>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <66:30 66:30>]
LOCAL_SYMBOL: b2CollideEdge.cpp<64:11> [b2CollideEdge.cpp <66:27 66:28>]
LOCAL_SYMBOL: b2CollideEdge.cpp<34:9> [b2CollideEdge.cpp <66:32 66:32>]
LOCAL_SYMBOL: b2CollideEdge.cpp<66:12> [b2CollideEdge.cpp <69:8 69:9>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> uint8 b2ContactFeature::indexA [b2CollideEdge.cpp <75:6 75:11>]
LOCAL_SYMBOL: b2CollideEdge.cpp<45:19> [b2CollideEdge.cpp <75:3 75:4>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> uint8 b2ContactFeature::typeA [b2CollideEdge.cpp <76:6 76:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<45:19> [b2CollideEdge.cpp <76:3 76:4>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ContactFeature::Type::e_vertex [b2CollideEdge.cpp <76:32 76:39>]
SYMBOL_STRUCT b2ContactFeature
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> int32 b2Manifold::pointCount [b2CollideEdge.cpp <77:13 77:22>]
LOCAL_SYMBOL: b2CollideEdge.cpp<27:41> [b2CollideEdge.cpp <77:3 77:10>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Manifold::Type b2Manifold::type [b2CollideEdge.cpp <78:13 78:16>]
LOCAL_SYMBOL: b2CollideEdge.cpp<27:41> [b2CollideEdge.cpp <78:3 78:10>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Manifold::Type::e_circles [b2CollideEdge.cpp <78:32 78:40>]
SYMBOL_STRUCT b2Manifold
SYMBOL_FUNCTION void b2Vec2::SetZero()
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> void b2Vec2::SetZero() [b2CollideEdge.cpp <79:25 79:31>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2Manifold::localNormal [b2CollideEdge.cpp <79:13 79:23>]
LOCAL_SYMBOL: b2CollideEdge.cpp<27:41> [b2CollideEdge.cpp <79:3 79:10>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <80:24 80:24>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2Manifold::localPoint [b2CollideEdge.cpp <80:13 80:22>]
LOCAL_SYMBOL: b2CollideEdge.cpp<27:41> [b2CollideEdge.cpp <80:3 80:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<52:10> [b2CollideEdge.cpp <80:26 80:26>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> uint32 b2ContactID::key [b2CollideEdge.cpp <81:26 81:28>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ContactID b2ManifoldPoint::id [b2CollideEdge.cpp <81:23 81:24>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ManifoldPoint [] b2Manifold::points [b2CollideEdge.cpp <81:13 81:18>]
LOCAL_SYMBOL: b2CollideEdge.cpp<27:41> [b2CollideEdge.cpp <81:3 81:10>]
SYMBOL_FUNCTION b2ContactFeature & b2ContactFeature::operator=(const b2ContactFeature &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ContactFeature & b2ContactFeature::operator=(const b2ContactFeature &) [b2CollideEdge.cpp <82:29 82:29>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <82:26 82:27>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ContactID b2ManifoldPoint::id [b2CollideEdge.cpp <82:23 82:24>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ManifoldPoint [] b2Manifold::points [b2CollideEdge.cpp <82:13 82:18>]
LOCAL_SYMBOL: b2CollideEdge.cpp<27:41> [b2CollideEdge.cpp <82:3 82:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<45:19> [b2CollideEdge.cpp <82:31 82:32>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <83:34 83:34>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2ManifoldPoint::localPoint [b2CollideEdge.cpp <83:23 83:32>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ManifoldPoint [] b2Manifold::points [b2CollideEdge.cpp <83:13 83:18>]
LOCAL_SYMBOL: b2CollideEdge.cpp<27:41> [b2CollideEdge.cpp <83:3 83:10>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2CircleShape::m_p [b2CollideEdge.cpp <83:45 83:47>]
LOCAL_SYMBOL: b2CollideEdge.cpp<29:29> [b2CollideEdge.cpp <83:36 83:42>]
LOCAL_SYMBOL: b2CollideEdge.cpp<40:10> [b2CollideEdge.cpp <88:6 88:6>]
LOCAL_SYMBOL: b2CollideEdge.cpp<90:10> [b2CollideEdge.cpp <90:10 90:10>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideEdge.cpp <90:3 90:8>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2CollideEdge.cpp <90:14 90:14>]
LOCAL_SYMBOL: b2CollideEdge.cpp<36:31> [b2CollideEdge.cpp <90:14 90:14>]
LOCAL_SYMBOL: b2CollideEdge.cpp<91:10> [b2CollideEdge.cpp <91:10 91:10>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideEdge.cpp <91:3 91:8>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <91:16 91:16>]
LOCAL_SYMBOL: b2CollideEdge.cpp<34:9> [b2CollideEdge.cpp <91:14 91:14>]
LOCAL_SYMBOL: b2CollideEdge.cpp<90:10> [b2CollideEdge.cpp <91:18 91:18>]
LOCAL_SYMBOL: b2CollideEdge.cpp<92:11> [b2CollideEdge.cpp <92:11 92:12>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 [b2CollideEdge.cpp <92:3 92:9>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <92:16 92:20>]
LOCAL_SYMBOL: b2CollideEdge.cpp<91:10> [b2CollideEdge.cpp <92:22 92:22>]
LOCAL_SYMBOL: b2CollideEdge.cpp<91:10> [b2CollideEdge.cpp <92:25 92:25>]
LOCAL_SYMBOL: b2CollideEdge.cpp<92:11> [b2CollideEdge.cpp <93:7 93:8>]
LOCAL_SYMBOL: b2CollideEdge.cpp<43:10> [b2CollideEdge.cpp <93:12 93:17>]
LOCAL_SYMBOL: b2CollideEdge.cpp<43:10> [b2CollideEdge.cpp <93:21 93:26>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> bool b2EdgeShape::m_hasVertex3 [b2CollideEdge.cpp <99:14 99:25>]
LOCAL_SYMBOL: b2CollideEdge.cpp<28:27> [b2CollideEdge.cpp <99:7 99:11>]
LOCAL_SYMBOL: b2CollideEdge.cpp<101:11> [b2CollideEdge.cpp <101:11 101:12>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideEdge.cpp <101:4 101:9>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2CollideEdge.cpp <101:23 101:31>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2EdgeShape::m_vertex3 [b2CollideEdge.cpp <101:23 101:31>]
LOCAL_SYMBOL: b2CollideEdge.cpp<28:27> [b2CollideEdge.cpp <101:16 101:20>]
LOCAL_SYMBOL: b2CollideEdge.cpp<102:11> [b2CollideEdge.cpp <102:11 102:12>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideEdge.cpp <102:4 102:9>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2CollideEdge.cpp <102:16 102:16>]
LOCAL_SYMBOL: b2CollideEdge.cpp<36:31> [b2CollideEdge.cpp <102:16 102:16>]
LOCAL_SYMBOL: b2CollideEdge.cpp<103:11> [b2CollideEdge.cpp <103:11 103:12>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideEdge.cpp <103:4 103:9>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <103:19 103:19>]
LOCAL_SYMBOL: b2CollideEdge.cpp<101:11> [b2CollideEdge.cpp <103:16 103:17>]
LOCAL_SYMBOL: b2CollideEdge.cpp<102:11> [b2CollideEdge.cpp <103:21 103:22>]
LOCAL_SYMBOL: b2CollideEdge.cpp<104:12> [b2CollideEdge.cpp <104:12 104:13>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 [b2CollideEdge.cpp <104:4 104:10>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <104:17 104:21>]
LOCAL_SYMBOL: b2CollideEdge.cpp<103:11> [b2CollideEdge.cpp <104:23 104:24>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <104:29 104:29>]
LOCAL_SYMBOL: b2CollideEdge.cpp<34:9> [b2CollideEdge.cpp <104:27 104:27>]
LOCAL_SYMBOL: b2CollideEdge.cpp<102:11> [b2CollideEdge.cpp <104:31 104:32>]
LOCAL_SYMBOL: b2CollideEdge.cpp<104:12> [b2CollideEdge.cpp <107:8 107:9>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> uint8 b2ContactFeature::indexA [b2CollideEdge.cpp <113:6 113:11>]
LOCAL_SYMBOL: b2CollideEdge.cpp<45:19> [b2CollideEdge.cpp <113:3 113:4>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> uint8 b2ContactFeature::typeA [b2CollideEdge.cpp <114:6 114:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<45:19> [b2CollideEdge.cpp <114:3 114:4>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ContactFeature::Type::e_vertex [b2CollideEdge.cpp <114:32 114:39>]
SYMBOL_STRUCT b2ContactFeature
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> int32 b2Manifold::pointCount [b2CollideEdge.cpp <115:13 115:22>]
LOCAL_SYMBOL: b2CollideEdge.cpp<27:41> [b2CollideEdge.cpp <115:3 115:10>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Manifold::Type b2Manifold::type [b2CollideEdge.cpp <116:13 116:16>]
LOCAL_SYMBOL: b2CollideEdge.cpp<27:41> [b2CollideEdge.cpp <116:3 116:10>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Manifold::Type::e_circles [b2CollideEdge.cpp <116:32 116:40>]
SYMBOL_STRUCT b2Manifold
SYMBOL_FUNCTION void b2Vec2::SetZero()
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> void b2Vec2::SetZero() [b2CollideEdge.cpp <117:25 117:31>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2Manifold::localNormal [b2CollideEdge.cpp <117:13 117:23>]
LOCAL_SYMBOL: b2CollideEdge.cpp<27:41> [b2CollideEdge.cpp <117:3 117:10>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <118:24 118:24>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2Manifold::localPoint [b2CollideEdge.cpp <118:13 118:22>]
LOCAL_SYMBOL: b2CollideEdge.cpp<27:41> [b2CollideEdge.cpp <118:3 118:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<90:10> [b2CollideEdge.cpp <118:26 118:26>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> uint32 b2ContactID::key [b2CollideEdge.cpp <119:26 119:28>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ContactID b2ManifoldPoint::id [b2CollideEdge.cpp <119:23 119:24>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ManifoldPoint [] b2Manifold::points [b2CollideEdge.cpp <119:13 119:18>]
LOCAL_SYMBOL: b2CollideEdge.cpp<27:41> [b2CollideEdge.cpp <119:3 119:10>]
SYMBOL_FUNCTION b2ContactFeature & b2ContactFeature::operator=(const b2ContactFeature &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ContactFeature & b2ContactFeature::operator=(const b2ContactFeature &) [b2CollideEdge.cpp <120:29 120:29>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <120:26 120:27>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ContactID b2ManifoldPoint::id [b2CollideEdge.cpp <120:23 120:24>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ManifoldPoint [] b2Manifold::points [b2CollideEdge.cpp <120:13 120:18>]
LOCAL_SYMBOL: b2CollideEdge.cpp<27:41> [b2CollideEdge.cpp <120:3 120:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<45:19> [b2CollideEdge.cpp <120:31 120:32>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <121:34 121:34>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2ManifoldPoint::localPoint [b2CollideEdge.cpp <121:23 121:32>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ManifoldPoint [] b2Manifold::points [b2CollideEdge.cpp <121:13 121:18>]
LOCAL_SYMBOL: b2CollideEdge.cpp<27:41> [b2CollideEdge.cpp <121:3 121:10>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2CircleShape::m_p [b2CollideEdge.cpp <121:45 121:47>]
LOCAL_SYMBOL: b2CollideEdge.cpp<29:29> [b2CollideEdge.cpp <121:36 121:42>]
LOCAL_SYMBOL: b2CollideEdge.cpp<126:10> [b2CollideEdge.cpp <126:10 126:12>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 [b2CollideEdge.cpp <126:2 126:8>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <126:16 126:20>]
LOCAL_SYMBOL: b2CollideEdge.cpp<37:9> [b2CollideEdge.cpp <126:22 126:22>]
LOCAL_SYMBOL: b2CollideEdge.cpp<37:9> [b2CollideEdge.cpp <126:25 126:25>]
LOCAL_SYMBOL: b2CollideEdge.cpp<126:10> [b2CollideEdge.cpp <127:11 127:13>]
LOCAL_SYMBOL: b2CollideEdge.cpp<128:9> [b2CollideEdge.cpp <128:9 128:9>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideEdge.cpp <128:2 128:7>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2CollideEdge.cpp <128:26 128:26>]
LOCAL_SYMBOL: b2CollideEdge.cpp<126:10> [b2CollideEdge.cpp <128:21 128:23>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <128:35 128:35>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2CollideEdge.cpp <128:31 128:31>]
LOCAL_SYMBOL: b2CollideEdge.cpp<40:10> [b2CollideEdge.cpp <128:29 128:29>]
LOCAL_SYMBOL: b2CollideEdge.cpp<36:9> [b2CollideEdge.cpp <128:33 128:33>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2CollideEdge.cpp <128:39 128:39>]
LOCAL_SYMBOL: b2CollideEdge.cpp<41:10> [b2CollideEdge.cpp <128:37 128:37>]
LOCAL_SYMBOL: b2CollideEdge.cpp<36:31> [b2CollideEdge.cpp <128:41 128:41>]
LOCAL_SYMBOL: b2CollideEdge.cpp<129:9> [b2CollideEdge.cpp <129:9 129:9>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideEdge.cpp <129:2 129:7>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <129:15 129:15>]
LOCAL_SYMBOL: b2CollideEdge.cpp<34:9> [b2CollideEdge.cpp <129:13 129:13>]
LOCAL_SYMBOL: b2CollideEdge.cpp<128:9> [b2CollideEdge.cpp <129:17 129:17>]
LOCAL_SYMBOL: b2CollideEdge.cpp<130:10> [b2CollideEdge.cpp <130:10 130:11>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 [b2CollideEdge.cpp <130:2 130:8>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <130:15 130:19>]
LOCAL_SYMBOL: b2CollideEdge.cpp<129:9> [b2CollideEdge.cpp <130:21 130:21>]
LOCAL_SYMBOL: b2CollideEdge.cpp<129:9> [b2CollideEdge.cpp <130:24 130:24>]
LOCAL_SYMBOL: b2CollideEdge.cpp<130:10> [b2CollideEdge.cpp <131:6 131:7>]
LOCAL_SYMBOL: b2CollideEdge.cpp<43:10> [b2CollideEdge.cpp <131:11 131:16>]
LOCAL_SYMBOL: b2CollideEdge.cpp<43:10> [b2CollideEdge.cpp <131:20 131:25>]
LOCAL_SYMBOL: b2CollideEdge.cpp<136:9> [b2CollideEdge.cpp <136:9 136:9>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 [b2CollideEdge.cpp <136:2 136:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(float32, float32)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> void b2Vec2::b2Vec2(float32, float32) [b2CollideEdge.cpp <136:9 136:9>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Vec2::y [b2CollideEdge.cpp <136:14 136:14>]
LOCAL_SYMBOL: b2CollideEdge.cpp<37:9> [b2CollideEdge.cpp <136:12 136:12>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Vec2::x [b2CollideEdge.cpp <136:19 136:19>]
LOCAL_SYMBOL: b2CollideEdge.cpp<37:9> [b2CollideEdge.cpp <136:17 136:17>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <137:6 137:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<136:9> [b2CollideEdge.cpp <137:12 137:12>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <137:17 137:17>]
LOCAL_SYMBOL: b2CollideEdge.cpp<34:9> [b2CollideEdge.cpp <137:15 137:15>]
LOCAL_SYMBOL: b2CollideEdge.cpp<36:9> [b2CollideEdge.cpp <137:19 137:19>]
SYMBOL_FUNCTION void b2Vec2::Set(float32, float32)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> void b2Vec2::Set(float32, float32) [b2CollideEdge.cpp <139:5 139:7>]
LOCAL_SYMBOL: b2CollideEdge.cpp<136:9> [b2CollideEdge.cpp <139:3 139:3>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Vec2::x [b2CollideEdge.cpp <139:12 139:12>]
LOCAL_SYMBOL: b2CollideEdge.cpp<136:9> [b2CollideEdge.cpp <139:10 139:10>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Vec2::y [b2CollideEdge.cpp <139:18 139:18>]
LOCAL_SYMBOL: b2CollideEdge.cpp<136:9> [b2CollideEdge.cpp <139:16 139:16>]
SYMBOL_FUNCTION float32 b2Vec2::Normalize()
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> float32 b2Vec2::Normalize() [b2CollideEdge.cpp <141:4 141:12>]
LOCAL_SYMBOL: b2CollideEdge.cpp<136:9> [b2CollideEdge.cpp <141:2 141:2>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> uint8 b2ContactFeature::indexA [b2CollideEdge.cpp <143:5 143:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<45:19> [b2CollideEdge.cpp <143:2 143:3>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> uint8 b2ContactFeature::typeA [b2CollideEdge.cpp <144:5 144:9>]
LOCAL_SYMBOL: b2CollideEdge.cpp<45:19> [b2CollideEdge.cpp <144:2 144:3>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ContactFeature::Type::e_face [b2CollideEdge.cpp <144:31 144:36>]
SYMBOL_STRUCT b2ContactFeature
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> int32 b2Manifold::pointCount [b2CollideEdge.cpp <145:12 145:21>]
LOCAL_SYMBOL: b2CollideEdge.cpp<27:41> [b2CollideEdge.cpp <145:2 145:9>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Manifold::Type b2Manifold::type [b2CollideEdge.cpp <146:12 146:15>]
LOCAL_SYMBOL: b2CollideEdge.cpp<27:41> [b2CollideEdge.cpp <146:2 146:9>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Manifold::Type::e_faceA [b2CollideEdge.cpp <146:31 146:37>]
SYMBOL_STRUCT b2Manifold
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <147:24 147:24>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2Manifold::localNormal [b2CollideEdge.cpp <147:12 147:22>]
LOCAL_SYMBOL: b2CollideEdge.cpp<27:41> [b2CollideEdge.cpp <147:2 147:9>]
LOCAL_SYMBOL: b2CollideEdge.cpp<136:9> [b2CollideEdge.cpp <147:26 147:26>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <148:23 148:23>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2Manifold::localPoint [b2CollideEdge.cpp <148:12 148:21>]
LOCAL_SYMBOL: b2CollideEdge.cpp<27:41> [b2CollideEdge.cpp <148:2 148:9>]
LOCAL_SYMBOL: b2CollideEdge.cpp<36:9> [b2CollideEdge.cpp <148:25 148:25>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> uint32 b2ContactID::key [b2CollideEdge.cpp <149:25 149:27>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ContactID b2ManifoldPoint::id [b2CollideEdge.cpp <149:22 149:23>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ManifoldPoint [] b2Manifold::points [b2CollideEdge.cpp <149:12 149:17>]
LOCAL_SYMBOL: b2CollideEdge.cpp<27:41> [b2CollideEdge.cpp <149:2 149:9>]
SYMBOL_FUNCTION b2ContactFeature & b2ContactFeature::operator=(const b2ContactFeature &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ContactFeature & b2ContactFeature::operator=(const b2ContactFeature &) [b2CollideEdge.cpp <150:28 150:28>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <150:25 150:26>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ContactID b2ManifoldPoint::id [b2CollideEdge.cpp <150:22 150:23>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ManifoldPoint [] b2Manifold::points [b2CollideEdge.cpp <150:12 150:17>]
LOCAL_SYMBOL: b2CollideEdge.cpp<27:41> [b2CollideEdge.cpp <150:2 150:9>]
LOCAL_SYMBOL: b2CollideEdge.cpp<45:19> [b2CollideEdge.cpp <150:30 150:31>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <151:33 151:33>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2ManifoldPoint::localPoint [b2CollideEdge.cpp <151:22 151:31>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2ManifoldPoint [] b2Manifold::points [b2CollideEdge.cpp <151:12 151:17>]
LOCAL_SYMBOL: b2CollideEdge.cpp<27:41> [b2CollideEdge.cpp <151:2 151:9>]
REFERENCE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Vec2 b2CircleShape::m_p [b2CollideEdge.cpp <151:44 151:46>]
LOCAL_SYMBOL: b2CollideEdge.cpp<29:29> [b2CollideEdge.cpp <151:35 151:41>]
SYMBOL_STRUCT b2EPAxis [b2CollideEdge.cpp <155:1 <155:8 155:15> 167:1>]
SYMBOL_ENUM public b2EPAxis::Type [b2CollideEdge.cpp <157:2 <157:7 157:10> 162:2>]
SYMBOL_ENUM_CONSTANT b2EPAxis::Type::e_unknown [b2CollideEdge.cpp <159:3 159:11>]
SYMBOL_ENUM_CONSTANT b2EPAxis::Type::e_edgeA [b2CollideEdge.cpp <160:3 160:9>]
SYMBOL_ENUM_CONSTANT b2EPAxis::Type::e_edgeB [b2CollideEdge.cpp <161:3 161:9>]
SYMBOL_FIELD public b2EPAxis::Type b2EPAxis::type [b2CollideEdge.cpp <164:7 164:10>]
REFERENCE_TYPE_USAGE b2EPAxis::Type b2EPAxis::type -> b2EPAxis::Type [b2CollideEdge.cpp <164:2 164:5>]
SYMBOL_FIELD public int32 b2EPAxis::index [b2CollideEdge.cpp <165:8 165:12>]
REFERENCE_TYPE_USAGE int32 b2EPAxis::index -> int32 [b2CollideEdge.cpp <165:2 165:6>]
SYMBOL_FIELD public float32 b2EPAxis::separation [b2CollideEdge.cpp <166:10 166:19>]
REFERENCE_TYPE_USAGE float32 b2EPAxis::separation -> float32 [b2CollideEdge.cpp <166:2 166:8>]
SYMBOL_METHOD public void b2EPAxis::~b2EPAxis() [b2CollideEdge.cpp <155:8 155:15>]
SYMBOL_METHOD public void b2EPAxis::b2EPAxis() [b2CollideEdge.cpp <155:8 <155:8 155:15> 155:15>]
SYMBOL_METHOD public void b2EPAxis::b2EPAxis(const b2EPAxis &) [b2CollideEdge.cpp <155:8 155:15>]
SYMBOL_METHOD public void b2EPAxis::b2EPAxis(b2EPAxis &) [b2CollideEdge.cpp <155:8 <155:8 155:15> 155:15>]
REFERENCE_USAGE void b2EPAxis::b2EPAxis(b2EPAxis &) -> b2EPAxis::Type b2EPAxis::type [b2CollideEdge.cpp <155:8 155:15>]
REFERENCE_USAGE void b2EPAxis::b2EPAxis(b2EPAxis &) -> b2EPAxis::Type b2EPAxis::type [b2CollideEdge.cpp <155:8 155:15>]
REFERENCE_TYPE_USAGE void b2EPAxis::b2EPAxis(b2EPAxis &) -> b2EPAxis [b2CollideEdge.cpp <155:8 155:15>]
LOCAL_SYMBOL: b2CollideEdge.cpp<155:8> [b2CollideEdge.cpp <155:8 155:15>]
REFERENCE_USAGE void b2EPAxis::b2EPAxis(b2EPAxis &) -> int32 b2EPAxis::index [b2CollideEdge.cpp <155:8 155:15>]
REFERENCE_USAGE void b2EPAxis::b2EPAxis(b2EPAxis &) -> int32 b2EPAxis::index [b2CollideEdge.cpp <155:8 155:15>]
REFERENCE_TYPE_USAGE void b2EPAxis::b2EPAxis(b2EPAxis &) -> b2EPAxis [b2CollideEdge.cpp <155:8 155:15>]
LOCAL_SYMBOL: b2CollideEdge.cpp<155:8> [b2CollideEdge.cpp <155:8 155:15>]
REFERENCE_USAGE void b2EPAxis::b2EPAxis(b2EPAxis &) -> float32 b2EPAxis::separation [b2CollideEdge.cpp <155:8 155:15>]
REFERENCE_USAGE void b2EPAxis::b2EPAxis(b2EPAxis &) -> float32 b2EPAxis::separation [b2CollideEdge.cpp <155:8 155:15>]
REFERENCE_TYPE_USAGE void b2EPAxis::b2EPAxis(b2EPAxis &) -> b2EPAxis [b2CollideEdge.cpp <155:8 155:15>]
LOCAL_SYMBOL: b2CollideEdge.cpp<155:8> [b2CollideEdge.cpp <155:8 155:15>]
SYMBOL_METHOD public b2EPAxis & b2EPAxis::operator=(const b2EPAxis &) [b2CollideEdge.cpp <155:8 <155:8 155:15> 155:15>]
REFERENCE_USAGE b2EPAxis & b2EPAxis::operator=(const b2EPAxis &) -> b2EPAxis::Type b2EPAxis::type [b2CollideEdge.cpp <155:8 155:15>]
REFERENCE_USAGE b2EPAxis & b2EPAxis::operator=(const b2EPAxis &) -> b2EPAxis::Type b2EPAxis::type [b2CollideEdge.cpp <155:8 155:15>]
LOCAL_SYMBOL: b2CollideEdge.cpp<155:8> [b2CollideEdge.cpp <155:8 155:15>]
REFERENCE_USAGE b2EPAxis & b2EPAxis::operator=(const b2EPAxis &) -> int32 b2EPAxis::index [b2CollideEdge.cpp <155:8 155:15>]
REFERENCE_USAGE b2EPAxis & b2EPAxis::operator=(const b2EPAxis &) -> int32 b2EPAxis::index [b2CollideEdge.cpp <155:8 155:15>]
LOCAL_SYMBOL: b2CollideEdge.cpp<155:8> [b2CollideEdge.cpp <155:8 155:15>]
REFERENCE_USAGE b2EPAxis & b2EPAxis::operator=(const b2EPAxis &) -> float32 b2EPAxis::separation [b2CollideEdge.cpp <155:8 155:15>]
REFERENCE_USAGE b2EPAxis & b2EPAxis::operator=(const b2EPAxis &) -> float32 b2EPAxis::separation [b2CollideEdge.cpp <155:8 155:15>]
LOCAL_SYMBOL: b2CollideEdge.cpp<155:8> [b2CollideEdge.cpp <155:8 155:15>]
SYMBOL_METHOD public b2EPAxis & b2EPAxis::operator=(b2EPAxis &) [b2CollideEdge.cpp <155:8 155:15>]
SYMBOL_STRUCT b2TempPolygon [b2CollideEdge.cpp <170:1 <170:8 170:20> 175:1>]
SYMBOL_FIELD public b2Vec2 [] b2TempPolygon::vertices [b2CollideEdge.cpp <172:9 172:16>]
REFERENCE_TYPE_USAGE b2Vec2 [] b2TempPolygon::vertices -> b2Vec2 [b2CollideEdge.cpp <172:2 172:7>]
SYMBOL_FIELD public b2Vec2 [] b2TempPolygon::normals [b2CollideEdge.cpp <173:9 173:15>]
REFERENCE_TYPE_USAGE b2Vec2 [] b2TempPolygon::normals -> b2Vec2 [b2CollideEdge.cpp <173:2 173:7>]
SYMBOL_FIELD public int32 b2TempPolygon::count [b2CollideEdge.cpp <174:8 174:12>]
REFERENCE_TYPE_USAGE int32 b2TempPolygon::count -> int32 [b2CollideEdge.cpp <174:2 174:6>]
SYMBOL_METHOD public void b2TempPolygon::b2TempPolygon() [b2CollideEdge.cpp <170:8 <170:8 170:20> 170:20>]
REFERENCE_USAGE void b2TempPolygon::b2TempPolygon() -> b2Vec2 [] b2TempPolygon::vertices [b2CollideEdge.cpp <170:8 170:20>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2TempPolygon::b2TempPolygon() -> void b2Vec2::b2Vec2() [b2CollideEdge.cpp <170:8 170:20>]
REFERENCE_USAGE void b2TempPolygon::b2TempPolygon() -> b2Vec2 [] b2TempPolygon::normals [b2CollideEdge.cpp <170:8 170:20>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2TempPolygon::b2TempPolygon() -> void b2Vec2::b2Vec2() [b2CollideEdge.cpp <170:8 170:20>]
SYMBOL_METHOD public void b2TempPolygon::~b2TempPolygon() [b2CollideEdge.cpp <170:8 170:20>]
SYMBOL_METHOD public void b2TempPolygon::b2TempPolygon(const b2TempPolygon &) [b2CollideEdge.cpp <170:8 170:20>]
SYMBOL_METHOD public void b2TempPolygon::b2TempPolygon(b2TempPolygon &) [b2CollideEdge.cpp <170:8 170:20>]
SYMBOL_STRUCT b2ReferenceFace [b2CollideEdge.cpp <178:1 <178:8 178:22> 191:1>]
SYMBOL_FIELD public int32 b2ReferenceFace::i1 [b2CollideEdge.cpp <180:8 180:9>]
REFERENCE_TYPE_USAGE int32 b2ReferenceFace::i1 -> int32 [b2CollideEdge.cpp <180:2 180:6>]
SYMBOL_FIELD public int32 b2ReferenceFace::i2 [b2CollideEdge.cpp <180:12 180:13>]
REFERENCE_TYPE_USAGE int32 b2ReferenceFace::i2 -> int32 [b2CollideEdge.cpp <180:2 180:6>]
SYMBOL_FIELD public b2Vec2 b2ReferenceFace::v1 [b2CollideEdge.cpp <182:9 182:10>]
REFERENCE_TYPE_USAGE b2Vec2 b2ReferenceFace::v1 -> b2Vec2 [b2CollideEdge.cpp <182:2 182:7>]
SYMBOL_FIELD public b2Vec2 b2ReferenceFace::v2 [b2CollideEdge.cpp <182:13 182:14>]
REFERENCE_TYPE_USAGE b2Vec2 b2ReferenceFace::v2 -> b2Vec2 [b2CollideEdge.cpp <182:2 182:7>]
SYMBOL_FIELD public b2Vec2 b2ReferenceFace::normal [b2CollideEdge.cpp <184:9 184:14>]
REFERENCE_TYPE_USAGE b2Vec2 b2ReferenceFace::normal -> b2Vec2 [b2CollideEdge.cpp <184:2 184:7>]
SYMBOL_FIELD public b2Vec2 b2ReferenceFace::sideNormal1 [b2CollideEdge.cpp <186:9 186:19>]
REFERENCE_TYPE_USAGE b2Vec2 b2ReferenceFace::sideNormal1 -> b2Vec2 [b2CollideEdge.cpp <186:2 186:7>]
SYMBOL_FIELD public float32 b2ReferenceFace::sideOffset1 [b2CollideEdge.cpp <187:10 187:20>]
REFERENCE_TYPE_USAGE float32 b2ReferenceFace::sideOffset1 -> float32 [b2CollideEdge.cpp <187:2 187:8>]
SYMBOL_FIELD public b2Vec2 b2ReferenceFace::sideNormal2 [b2CollideEdge.cpp <189:9 189:19>]
REFERENCE_TYPE_USAGE b2Vec2 b2ReferenceFace::sideNormal2 -> b2Vec2 [b2CollideEdge.cpp <189:2 189:7>]
SYMBOL_FIELD public float32 b2ReferenceFace::sideOffset2 [b2CollideEdge.cpp <190:10 190:20>]
REFERENCE_TYPE_USAGE float32 b2ReferenceFace::sideOffset2 -> float32 [b2CollideEdge.cpp <190:2 190:8>]
SYMBOL_METHOD public void b2ReferenceFace::b2ReferenceFace() [b2CollideEdge.cpp <178:8 <178:8 178:22> 178:22>]
REFERENCE_USAGE void b2ReferenceFace::b2ReferenceFace() -> b2Vec2 b2ReferenceFace::v1 [b2CollideEdge.cpp <178:8 178:22>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2ReferenceFace::b2ReferenceFace() -> void b2Vec2::b2Vec2() [b2CollideEdge.cpp <178:8 178:22>]
REFERENCE_USAGE void b2ReferenceFace::b2ReferenceFace() -> b2Vec2 b2ReferenceFace::v2 [b2CollideEdge.cpp <178:8 178:22>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2ReferenceFace::b2ReferenceFace() -> void b2Vec2::b2Vec2() [b2CollideEdge.cpp <178:8 178:22>]
REFERENCE_USAGE void b2ReferenceFace::b2ReferenceFace() -> b2Vec2 b2ReferenceFace::normal [b2CollideEdge.cpp <178:8 178:22>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2ReferenceFace::b2ReferenceFace() -> void b2Vec2::b2Vec2() [b2CollideEdge.cpp <178:8 178:22>]
REFERENCE_USAGE void b2ReferenceFace::b2ReferenceFace() -> b2Vec2 b2ReferenceFace::sideNormal1 [b2CollideEdge.cpp <178:8 178:22>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2ReferenceFace::b2ReferenceFace() -> void b2Vec2::b2Vec2() [b2CollideEdge.cpp <178:8 178:22>]
REFERENCE_USAGE void b2ReferenceFace::b2ReferenceFace() -> b2Vec2 b2ReferenceFace::sideNormal2 [b2CollideEdge.cpp <178:8 178:22>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2ReferenceFace::b2ReferenceFace() -> void b2Vec2::b2Vec2() [b2CollideEdge.cpp <178:8 178:22>]
SYMBOL_METHOD public void b2ReferenceFace::b2ReferenceFace(const b2ReferenceFace &) [b2CollideEdge.cpp <178:8 178:22>]
SYMBOL_METHOD public void b2ReferenceFace::b2ReferenceFace(b2ReferenceFace &) [b2CollideEdge.cpp <178:8 178:22>]
SYMBOL_STRUCT b2EPCollider [b2CollideEdge.cpp <194:1 <194:8 194:19> 219:1>]
SYMBOL_METHOD public void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) [b2CollideEdge.cpp <196:7 196:13>]
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void [b2CollideEdge.cpp <196:2 196:5>]
LOCAL_SYMBOL: b2CollideEdge.cpp<196:27> [b2CollideEdge.cpp <196:27 196:34>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Manifold [b2CollideEdge.cpp <196:15 196:24>]
LOCAL_SYMBOL: b2CollideEdge.cpp<196:56> [b2CollideEdge.cpp <196:56 196:60>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EdgeShape [b2CollideEdge.cpp <196:43 196:53>]
LOCAL_SYMBOL: b2CollideEdge.cpp<196:82> [b2CollideEdge.cpp <196:82 196:84>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform [b2CollideEdge.cpp <196:69 196:79>]
LOCAL_SYMBOL: b2CollideEdge.cpp<197:28> [b2CollideEdge.cpp <197:28 197:35>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2PolygonShape [b2CollideEdge.cpp <197:12 197:25>]
LOCAL_SYMBOL: b2CollideEdge.cpp<197:57> [b2CollideEdge.cpp <197:57 197:59>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform [b2CollideEdge.cpp <197:44 197:54>]
SYMBOL_METHOD public b2EPAxis b2EPCollider::ComputeEdgeSeparation() [b2CollideEdge.cpp <198:11 198:31>]
REFERENCE_TYPE_USAGE b2EPAxis b2EPCollider::ComputeEdgeSeparation() -> b2EPAxis [b2CollideEdge.cpp <198:2 198:9>]
SYMBOL_METHOD public b2EPAxis b2EPCollider::ComputePolygonSeparation() [b2CollideEdge.cpp <199:11 199:34>]
REFERENCE_TYPE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2EPAxis [b2CollideEdge.cpp <199:2 199:9>]
SYMBOL_ENUM public b2EPCollider::VertexType [b2CollideEdge.cpp <201:2 <201:7 201:16> 206:2>]
SYMBOL_ENUM_CONSTANT b2EPCollider::VertexType::e_isolated [b2CollideEdge.cpp <203:3 203:12>]
SYMBOL_ENUM_CONSTANT b2EPCollider::VertexType::e_concave [b2CollideEdge.cpp <204:3 204:11>]
SYMBOL_ENUM_CONSTANT b2EPCollider::VertexType::e_convex [b2CollideEdge.cpp <205:3 205:10>]
SYMBOL_FIELD public b2TempPolygon b2EPCollider::m_polygonB [b2CollideEdge.cpp <208:16 208:25>]
REFERENCE_TYPE_USAGE b2TempPolygon b2EPCollider::m_polygonB -> b2TempPolygon [b2CollideEdge.cpp <208:2 208:14>]
SYMBOL_FIELD public b2Transform b2EPCollider::m_xf [b2CollideEdge.cpp <210:14 210:17>]
REFERENCE_TYPE_USAGE b2Transform b2EPCollider::m_xf -> b2Transform [b2CollideEdge.cpp <210:2 210:12>]
SYMBOL_FIELD public b2Vec2 b2EPCollider::m_centroidB [b2CollideEdge.cpp <211:9 211:19>]
REFERENCE_TYPE_USAGE b2Vec2 b2EPCollider::m_centroidB -> b2Vec2 [b2CollideEdge.cpp <211:2 211:7>]
SYMBOL_FIELD public b2Vec2 b2EPCollider::m_v0 [b2CollideEdge.cpp <212:9 212:12>]
REFERENCE_TYPE_USAGE b2Vec2 b2EPCollider::m_v0 -> b2Vec2 [b2CollideEdge.cpp <212:2 212:7>]
SYMBOL_FIELD public b2Vec2 b2EPCollider::m_v1 [b2CollideEdge.cpp <212:15 212:18>]
REFERENCE_TYPE_USAGE b2Vec2 b2EPCollider::m_v1 -> b2Vec2 [b2CollideEdge.cpp <212:2 212:7>]
SYMBOL_FIELD public b2Vec2 b2EPCollider::m_v2 [b2CollideEdge.cpp <212:21 212:24>]
REFERENCE_TYPE_USAGE b2Vec2 b2EPCollider::m_v2 -> b2Vec2 [b2CollideEdge.cpp <212:2 212:7>]
SYMBOL_FIELD public b2Vec2 b2EPCollider::m_v3 [b2CollideEdge.cpp <212:27 212:30>]
REFERENCE_TYPE_USAGE b2Vec2 b2EPCollider::m_v3 -> b2Vec2 [b2CollideEdge.cpp <212:2 212:7>]
SYMBOL_FIELD public b2Vec2 b2EPCollider::m_normal0 [b2CollideEdge.cpp <213:9 213:17>]
REFERENCE_TYPE_USAGE b2Vec2 b2EPCollider::m_normal0 -> b2Vec2 [b2CollideEdge.cpp <213:2 213:7>]
SYMBOL_FIELD public b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <213:20 213:28>]
REFERENCE_TYPE_USAGE b2Vec2 b2EPCollider::m_normal1 -> b2Vec2 [b2CollideEdge.cpp <213:2 213:7>]
SYMBOL_FIELD public b2Vec2 b2EPCollider::m_normal2 [b2CollideEdge.cpp <213:31 213:39>]
REFERENCE_TYPE_USAGE b2Vec2 b2EPCollider::m_normal2 -> b2Vec2 [b2CollideEdge.cpp <213:2 213:7>]
SYMBOL_FIELD public b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <214:9 214:16>]
REFERENCE_TYPE_USAGE b2Vec2 b2EPCollider::m_normal -> b2Vec2 [b2CollideEdge.cpp <214:2 214:7>]
SYMBOL_FIELD public b2EPCollider::VertexType b2EPCollider::m_type1 [b2CollideEdge.cpp <215:13 215:19>]
REFERENCE_TYPE_USAGE b2EPCollider::VertexType b2EPCollider::m_type1 -> b2EPCollider::VertexType [b2CollideEdge.cpp <215:2 215:11>]
SYMBOL_FIELD public b2EPCollider::VertexType b2EPCollider::m_type2 [b2CollideEdge.cpp <215:22 215:28>]
REFERENCE_TYPE_USAGE b2EPCollider::VertexType b2EPCollider::m_type2 -> b2EPCollider::VertexType [b2CollideEdge.cpp <215:2 215:11>]
SYMBOL_FIELD public b2Vec2 b2EPCollider::m_lowerLimit [b2CollideEdge.cpp <216:9 216:20>]
REFERENCE_TYPE_USAGE b2Vec2 b2EPCollider::m_lowerLimit -> b2Vec2 [b2CollideEdge.cpp <216:2 216:7>]
SYMBOL_FIELD public b2Vec2 b2EPCollider::m_upperLimit [b2CollideEdge.cpp <216:23 216:34>]
REFERENCE_TYPE_USAGE b2Vec2 b2EPCollider::m_upperLimit -> b2Vec2 [b2CollideEdge.cpp <216:2 216:7>]
SYMBOL_FIELD public float32 b2EPCollider::m_radius [b2CollideEdge.cpp <217:10 217:17>]
REFERENCE_TYPE_USAGE float32 b2EPCollider::m_radius -> float32 [b2CollideEdge.cpp <217:2 217:8>]
SYMBOL_FIELD public bool b2EPCollider::m_front [b2CollideEdge.cpp <218:7 218:13>]
SYMBOL_BUILTIN_TYPE bool
REFERENCE_TYPE_USAGE bool b2EPCollider::m_front -> bool [b2CollideEdge.cpp <218:2 218:5>]
SYMBOL_METHOD public void b2EPCollider::b2EPCollider() [b2CollideEdge.cpp <194:8 <194:8 194:19> 194:19>]
REFERENCE_USAGE void b2EPCollider::b2EPCollider() -> b2TempPolygon b2EPCollider::m_polygonB [b2CollideEdge.cpp <194:8 194:19>]
SYMBOL_FUNCTION void b2TempPolygon::b2TempPolygon()
REFERENCE_CALL void b2EPCollider::b2EPCollider() -> void b2TempPolygon::b2TempPolygon() [b2CollideEdge.cpp <194:8 194:19>]
REFERENCE_USAGE void b2EPCollider::b2EPCollider() -> b2Transform b2EPCollider::m_xf [b2CollideEdge.cpp <194:8 194:19>]
SYMBOL_FUNCTION void b2Transform::b2Transform()
REFERENCE_CALL void b2EPCollider::b2EPCollider() -> void b2Transform::b2Transform() [b2CollideEdge.cpp <194:8 194:19>]
REFERENCE_USAGE void b2EPCollider::b2EPCollider() -> b2Vec2 b2EPCollider::m_centroidB [b2CollideEdge.cpp <194:8 194:19>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2EPCollider::b2EPCollider() -> void b2Vec2::b2Vec2() [b2CollideEdge.cpp <194:8 194:19>]
REFERENCE_USAGE void b2EPCollider::b2EPCollider() -> b2Vec2 b2EPCollider::m_v0 [b2CollideEdge.cpp <194:8 194:19>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2EPCollider::b2EPCollider() -> void b2Vec2::b2Vec2() [b2CollideEdge.cpp <194:8 194:19>]
REFERENCE_USAGE void b2EPCollider::b2EPCollider() -> b2Vec2 b2EPCollider::m_v1 [b2CollideEdge.cpp <194:8 194:19>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2EPCollider::b2EPCollider() -> void b2Vec2::b2Vec2() [b2CollideEdge.cpp <194:8 194:19>]
REFERENCE_USAGE void b2EPCollider::b2EPCollider() -> b2Vec2 b2EPCollider::m_v2 [b2CollideEdge.cpp <194:8 194:19>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2EPCollider::b2EPCollider() -> void b2Vec2::b2Vec2() [b2CollideEdge.cpp <194:8 194:19>]
REFERENCE_USAGE void b2EPCollider::b2EPCollider() -> b2Vec2 b2EPCollider::m_v3 [b2CollideEdge.cpp <194:8 194:19>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2EPCollider::b2EPCollider() -> void b2Vec2::b2Vec2() [b2CollideEdge.cpp <194:8 194:19>]
REFERENCE_USAGE void b2EPCollider::b2EPCollider() -> b2Vec2 b2EPCollider::m_normal0 [b2CollideEdge.cpp <194:8 194:19>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2EPCollider::b2EPCollider() -> void b2Vec2::b2Vec2() [b2CollideEdge.cpp <194:8 194:19>]
REFERENCE_USAGE void b2EPCollider::b2EPCollider() -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <194:8 194:19>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2EPCollider::b2EPCollider() -> void b2Vec2::b2Vec2() [b2CollideEdge.cpp <194:8 194:19>]
REFERENCE_USAGE void b2EPCollider::b2EPCollider() -> b2Vec2 b2EPCollider::m_normal2 [b2CollideEdge.cpp <194:8 194:19>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2EPCollider::b2EPCollider() -> void b2Vec2::b2Vec2() [b2CollideEdge.cpp <194:8 194:19>]
REFERENCE_USAGE void b2EPCollider::b2EPCollider() -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <194:8 194:19>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2EPCollider::b2EPCollider() -> void b2Vec2::b2Vec2() [b2CollideEdge.cpp <194:8 194:19>]
REFERENCE_USAGE void b2EPCollider::b2EPCollider() -> b2Vec2 b2EPCollider::m_lowerLimit [b2CollideEdge.cpp <194:8 194:19>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2EPCollider::b2EPCollider() -> void b2Vec2::b2Vec2() [b2CollideEdge.cpp <194:8 194:19>]
REFERENCE_USAGE void b2EPCollider::b2EPCollider() -> b2Vec2 b2EPCollider::m_upperLimit [b2CollideEdge.cpp <194:8 194:19>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2EPCollider::b2EPCollider() -> void b2Vec2::b2Vec2() [b2CollideEdge.cpp <194:8 194:19>]
SYMBOL_METHOD public void b2EPCollider::b2EPCollider(const b2EPCollider &) [b2CollideEdge.cpp <194:8 194:19>]
SYMBOL_METHOD public void b2EPCollider::b2EPCollider(b2EPCollider &) [b2CollideEdge.cpp <194:8 194:19>]
SYMBOL_METHOD public void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) [b2CollideEdge.cpp <230:1 <230:20 230:26> 618:1>]
SYMBOL_STRUCT b2EPCollider
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void [b2CollideEdge.cpp <230:1 230:4>]
LOCAL_SYMBOL: b2CollideEdge.cpp<230:40> [b2CollideEdge.cpp <230:40 230:47>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Manifold [b2CollideEdge.cpp <230:28 230:37>]
LOCAL_SYMBOL: b2CollideEdge.cpp<230:69> [b2CollideEdge.cpp <230:69 230:73>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EdgeShape [b2CollideEdge.cpp <230:56 230:66>]
LOCAL_SYMBOL: b2CollideEdge.cpp<230:95> [b2CollideEdge.cpp <230:95 230:97>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform [b2CollideEdge.cpp <230:82 230:92>]
LOCAL_SYMBOL: b2CollideEdge.cpp<231:32> [b2CollideEdge.cpp <231:32 231:39>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2PolygonShape [b2CollideEdge.cpp <231:16 231:29>]
LOCAL_SYMBOL: b2CollideEdge.cpp<231:61> [b2CollideEdge.cpp <231:61 231:63>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform [b2CollideEdge.cpp <231:48 231:58>]
SYMBOL_FUNCTION b2Transform & b2Transform::operator=(b2Transform &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform & b2Transform::operator=(b2Transform &) [b2CollideEdge.cpp <233:7 233:7>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform b2EPCollider::m_xf [b2CollideEdge.cpp <233:2 233:5>]
SYMBOL_FUNCTION b2Transform b2MulT(const b2Transform &, const b2Transform &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform b2MulT(const b2Transform &, const b2Transform &) [b2CollideEdge.cpp <233:9 233:14>]
LOCAL_SYMBOL: b2CollideEdge.cpp<230:95> [b2CollideEdge.cpp <233:16 233:18>]
LOCAL_SYMBOL: b2CollideEdge.cpp<231:61> [b2CollideEdge.cpp <233:21 233:23>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <235:14 235:14>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_centroidB [b2CollideEdge.cpp <235:2 235:12>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2CollideEdge.cpp <235:16 235:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform b2EPCollider::m_xf [b2CollideEdge.cpp <235:22 235:25>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2PolygonShape::m_centroid [b2CollideEdge.cpp <235:38 235:47>]
LOCAL_SYMBOL: b2CollideEdge.cpp<231:32> [b2CollideEdge.cpp <235:28 235:35>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <237:7 237:7>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_v0 [b2CollideEdge.cpp <237:2 237:5>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EdgeShape::m_vertex0 [b2CollideEdge.cpp <237:16 237:24>]
LOCAL_SYMBOL: b2CollideEdge.cpp<230:69> [b2CollideEdge.cpp <237:9 237:13>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <238:7 238:7>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_v1 [b2CollideEdge.cpp <238:2 238:5>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EdgeShape::m_vertex1 [b2CollideEdge.cpp <238:16 238:24>]
LOCAL_SYMBOL: b2CollideEdge.cpp<230:69> [b2CollideEdge.cpp <238:9 238:13>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <239:7 239:7>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_v2 [b2CollideEdge.cpp <239:2 239:5>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EdgeShape::m_vertex2 [b2CollideEdge.cpp <239:16 239:24>]
LOCAL_SYMBOL: b2CollideEdge.cpp<230:69> [b2CollideEdge.cpp <239:9 239:13>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <240:7 240:7>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_v3 [b2CollideEdge.cpp <240:2 240:5>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EdgeShape::m_vertex3 [b2CollideEdge.cpp <240:16 240:24>]
LOCAL_SYMBOL: b2CollideEdge.cpp<230:69> [b2CollideEdge.cpp <240:9 240:13>]
LOCAL_SYMBOL: b2CollideEdge.cpp<242:7> [b2CollideEdge.cpp <242:7 242:16>]
SYMBOL_BUILTIN_TYPE bool
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool [b2CollideEdge.cpp <242:2 242:5>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool b2EdgeShape::m_hasVertex0 [b2CollideEdge.cpp <242:27 242:38>]
LOCAL_SYMBOL: b2CollideEdge.cpp<230:69> [b2CollideEdge.cpp <242:20 242:24>]
LOCAL_SYMBOL: b2CollideEdge.cpp<243:7> [b2CollideEdge.cpp <243:7 243:16>]
SYMBOL_BUILTIN_TYPE bool
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool [b2CollideEdge.cpp <243:2 243:5>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool b2EdgeShape::m_hasVertex3 [b2CollideEdge.cpp <243:27 243:38>]
LOCAL_SYMBOL: b2CollideEdge.cpp<230:69> [b2CollideEdge.cpp <243:20 243:24>]
LOCAL_SYMBOL: b2CollideEdge.cpp<245:9> [b2CollideEdge.cpp <245:9 245:13>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [b2CollideEdge.cpp <245:2 245:7>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <245:22 245:22>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_v2 [b2CollideEdge.cpp <245:17 245:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_v1 [b2CollideEdge.cpp <245:24 245:27>]
SYMBOL_FUNCTION float32 b2Vec2::Normalize()
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Vec2::Normalize() [b2CollideEdge.cpp <246:8 246:16>]
LOCAL_SYMBOL: b2CollideEdge.cpp<245:9> [b2CollideEdge.cpp <246:2 246:6>]
SYMBOL_FUNCTION void b2Vec2::Set(float32, float32)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void b2Vec2::Set(float32, float32) [b2CollideEdge.cpp <247:12 247:14>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <247:2 247:10>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Vec2::y [b2CollideEdge.cpp <247:22 247:22>]
LOCAL_SYMBOL: b2CollideEdge.cpp<245:9> [b2CollideEdge.cpp <247:16 247:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Vec2::x [b2CollideEdge.cpp <247:32 247:32>]
LOCAL_SYMBOL: b2CollideEdge.cpp<245:9> [b2CollideEdge.cpp <247:26 247:30>]
LOCAL_SYMBOL: b2CollideEdge.cpp<248:10> [b2CollideEdge.cpp <248:10 248:16>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 [b2CollideEdge.cpp <248:2 248:8>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <248:20 248:24>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <248:26 248:34>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <248:49 248:49>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_centroidB [b2CollideEdge.cpp <248:37 248:47>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_v1 [b2CollideEdge.cpp <248:51 248:54>]
LOCAL_SYMBOL: b2CollideEdge.cpp<249:10> [b2CollideEdge.cpp <249:10 249:16>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 [b2CollideEdge.cpp <249:2 249:8>]
LOCAL_SYMBOL: b2CollideEdge.cpp<249:26> [b2CollideEdge.cpp <249:26 249:32>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 [b2CollideEdge.cpp <249:2 249:8>]
LOCAL_SYMBOL: b2CollideEdge.cpp<250:7> [b2CollideEdge.cpp <250:7 250:13>]
SYMBOL_BUILTIN_TYPE bool
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool [b2CollideEdge.cpp <250:2 250:5>]
LOCAL_SYMBOL: b2CollideEdge.cpp<250:24> [b2CollideEdge.cpp <250:24 250:30>]
SYMBOL_BUILTIN_TYPE bool
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool [b2CollideEdge.cpp <250:2 250:5>]
LOCAL_SYMBOL: b2CollideEdge.cpp<242:7> [b2CollideEdge.cpp <253:6 253:15>]
LOCAL_SYMBOL: b2CollideEdge.cpp<255:10> [b2CollideEdge.cpp <255:10 255:14>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [b2CollideEdge.cpp <255:3 255:8>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <255:23 255:23>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_v1 [b2CollideEdge.cpp <255:18 255:21>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_v0 [b2CollideEdge.cpp <255:25 255:28>]
SYMBOL_FUNCTION float32 b2Vec2::Normalize()
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Vec2::Normalize() [b2CollideEdge.cpp <256:9 256:17>]
LOCAL_SYMBOL: b2CollideEdge.cpp<255:10> [b2CollideEdge.cpp <256:3 256:7>]
SYMBOL_FUNCTION void b2Vec2::Set(float32, float32)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void b2Vec2::Set(float32, float32) [b2CollideEdge.cpp <257:13 257:15>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal0 [b2CollideEdge.cpp <257:3 257:11>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Vec2::y [b2CollideEdge.cpp <257:23 257:23>]
LOCAL_SYMBOL: b2CollideEdge.cpp<255:10> [b2CollideEdge.cpp <257:17 257:21>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Vec2::x [b2CollideEdge.cpp <257:33 257:33>]
LOCAL_SYMBOL: b2CollideEdge.cpp<255:10> [b2CollideEdge.cpp <257:27 257:31>]
LOCAL_SYMBOL: b2CollideEdge.cpp<250:7> [b2CollideEdge.cpp <258:3 258:9>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <258:13 258:19>]
LOCAL_SYMBOL: b2CollideEdge.cpp<255:10> [b2CollideEdge.cpp <258:21 258:25>]
LOCAL_SYMBOL: b2CollideEdge.cpp<245:9> [b2CollideEdge.cpp <258:28 258:32>]
LOCAL_SYMBOL: b2CollideEdge.cpp<249:10> [b2CollideEdge.cpp <259:3 259:9>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <259:13 259:17>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal0 [b2CollideEdge.cpp <259:19 259:27>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <259:42 259:42>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_centroidB [b2CollideEdge.cpp <259:30 259:40>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_v0 [b2CollideEdge.cpp <259:44 259:47>]
LOCAL_SYMBOL: b2CollideEdge.cpp<243:7> [b2CollideEdge.cpp <263:6 263:15>]
LOCAL_SYMBOL: b2CollideEdge.cpp<265:10> [b2CollideEdge.cpp <265:10 265:14>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [b2CollideEdge.cpp <265:3 265:8>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <265:23 265:23>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_v3 [b2CollideEdge.cpp <265:18 265:21>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_v2 [b2CollideEdge.cpp <265:25 265:28>]
SYMBOL_FUNCTION float32 b2Vec2::Normalize()
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Vec2::Normalize() [b2CollideEdge.cpp <266:9 266:17>]
LOCAL_SYMBOL: b2CollideEdge.cpp<265:10> [b2CollideEdge.cpp <266:3 266:7>]
SYMBOL_FUNCTION void b2Vec2::Set(float32, float32)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void b2Vec2::Set(float32, float32) [b2CollideEdge.cpp <267:13 267:15>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal2 [b2CollideEdge.cpp <267:3 267:11>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Vec2::y [b2CollideEdge.cpp <267:23 267:23>]
LOCAL_SYMBOL: b2CollideEdge.cpp<265:10> [b2CollideEdge.cpp <267:17 267:21>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Vec2::x [b2CollideEdge.cpp <267:33 267:33>]
LOCAL_SYMBOL: b2CollideEdge.cpp<265:10> [b2CollideEdge.cpp <267:27 267:31>]
LOCAL_SYMBOL: b2CollideEdge.cpp<250:24> [b2CollideEdge.cpp <268:3 268:9>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <268:13 268:19>]
LOCAL_SYMBOL: b2CollideEdge.cpp<245:9> [b2CollideEdge.cpp <268:21 268:25>]
LOCAL_SYMBOL: b2CollideEdge.cpp<265:10> [b2CollideEdge.cpp <268:28 268:32>]
LOCAL_SYMBOL: b2CollideEdge.cpp<249:26> [b2CollideEdge.cpp <269:3 269:9>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <269:13 269:17>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal2 [b2CollideEdge.cpp <269:19 269:27>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <269:42 269:42>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_centroidB [b2CollideEdge.cpp <269:30 269:40>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_v2 [b2CollideEdge.cpp <269:44 269:47>]
LOCAL_SYMBOL: b2CollideEdge.cpp<242:7> [b2CollideEdge.cpp <273:6 273:15>]
LOCAL_SYMBOL: b2CollideEdge.cpp<243:7> [b2CollideEdge.cpp <273:20 273:29>]
LOCAL_SYMBOL: b2CollideEdge.cpp<250:7> [b2CollideEdge.cpp <275:7 275:13>]
LOCAL_SYMBOL: b2CollideEdge.cpp<250:24> [b2CollideEdge.cpp <275:18 275:24>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool b2EPCollider::m_front [b2CollideEdge.cpp <277:4 277:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<249:10> [b2CollideEdge.cpp <277:14 277:20>]
LOCAL_SYMBOL: b2CollideEdge.cpp<248:10> [b2CollideEdge.cpp <277:33 277:39>]
LOCAL_SYMBOL: b2CollideEdge.cpp<249:26> [b2CollideEdge.cpp <277:52 277:58>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool b2EPCollider::m_front [b2CollideEdge.cpp <278:8 278:14>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <280:14 280:14>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <280:5 280:12>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <280:16 280:24>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <281:18 281:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_lowerLimit [b2CollideEdge.cpp <281:5 281:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal0 [b2CollideEdge.cpp <281:20 281:28>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <282:18 282:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_upperLimit [b2CollideEdge.cpp <282:5 282:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal2 [b2CollideEdge.cpp <282:20 282:28>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <286:14 286:14>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <286:5 286:12>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <286:16 286:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <286:17 286:25>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <287:18 287:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_lowerLimit [b2CollideEdge.cpp <287:5 287:16>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <287:20 287:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <287:21 287:29>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <288:18 288:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_upperLimit [b2CollideEdge.cpp <288:5 288:16>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <288:20 288:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <288:21 288:29>]
LOCAL_SYMBOL: b2CollideEdge.cpp<250:7> [b2CollideEdge.cpp <291:12 291:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool b2EPCollider::m_front [b2CollideEdge.cpp <293:4 293:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<249:10> [b2CollideEdge.cpp <293:14 293:20>]
LOCAL_SYMBOL: b2CollideEdge.cpp<248:10> [b2CollideEdge.cpp <293:34 293:40>]
LOCAL_SYMBOL: b2CollideEdge.cpp<249:26> [b2CollideEdge.cpp <293:53 293:59>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool b2EPCollider::m_front [b2CollideEdge.cpp <294:8 294:14>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <296:14 296:14>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <296:5 296:12>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <296:16 296:24>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <297:18 297:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_lowerLimit [b2CollideEdge.cpp <297:5 297:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal0 [b2CollideEdge.cpp <297:20 297:28>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <298:18 298:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_upperLimit [b2CollideEdge.cpp <298:5 298:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <298:20 298:28>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <302:14 302:14>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <302:5 302:12>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <302:16 302:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <302:17 302:25>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <303:18 303:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_lowerLimit [b2CollideEdge.cpp <303:5 303:16>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <303:20 303:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal2 [b2CollideEdge.cpp <303:21 303:29>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <304:18 304:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_upperLimit [b2CollideEdge.cpp <304:5 304:16>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <304:20 304:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <304:21 304:29>]
LOCAL_SYMBOL: b2CollideEdge.cpp<250:24> [b2CollideEdge.cpp <307:12 307:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool b2EPCollider::m_front [b2CollideEdge.cpp <309:4 309:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<249:26> [b2CollideEdge.cpp <309:14 309:20>]
LOCAL_SYMBOL: b2CollideEdge.cpp<249:10> [b2CollideEdge.cpp <309:34 309:40>]
LOCAL_SYMBOL: b2CollideEdge.cpp<248:10> [b2CollideEdge.cpp <309:53 309:59>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool b2EPCollider::m_front [b2CollideEdge.cpp <310:8 310:14>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <312:14 312:14>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <312:5 312:12>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <312:16 312:24>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <313:18 313:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_lowerLimit [b2CollideEdge.cpp <313:5 313:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <313:20 313:28>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <314:18 314:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_upperLimit [b2CollideEdge.cpp <314:5 314:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal2 [b2CollideEdge.cpp <314:20 314:28>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <318:14 318:14>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <318:5 318:12>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <318:16 318:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <318:17 318:25>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <319:18 319:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_lowerLimit [b2CollideEdge.cpp <319:5 319:16>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <319:20 319:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <319:21 319:29>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <320:18 320:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_upperLimit [b2CollideEdge.cpp <320:5 320:16>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <320:20 320:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal0 [b2CollideEdge.cpp <320:21 320:29>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool b2EPCollider::m_front [b2CollideEdge.cpp <325:4 325:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<249:10> [b2CollideEdge.cpp <325:14 325:20>]
LOCAL_SYMBOL: b2CollideEdge.cpp<248:10> [b2CollideEdge.cpp <325:33 325:39>]
LOCAL_SYMBOL: b2CollideEdge.cpp<249:26> [b2CollideEdge.cpp <325:52 325:58>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool b2EPCollider::m_front [b2CollideEdge.cpp <326:8 326:14>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <328:14 328:14>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <328:5 328:12>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <328:16 328:24>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <329:18 329:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_lowerLimit [b2CollideEdge.cpp <329:5 329:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <329:20 329:28>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <330:18 330:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_upperLimit [b2CollideEdge.cpp <330:5 330:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <330:20 330:28>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <334:14 334:14>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <334:5 334:12>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <334:16 334:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <334:17 334:25>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <335:18 335:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_lowerLimit [b2CollideEdge.cpp <335:5 335:16>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <335:20 335:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal2 [b2CollideEdge.cpp <335:21 335:29>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <336:18 336:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_upperLimit [b2CollideEdge.cpp <336:5 336:16>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <336:20 336:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal0 [b2CollideEdge.cpp <336:21 336:29>]
LOCAL_SYMBOL: b2CollideEdge.cpp<242:7> [b2CollideEdge.cpp <340:11 340:20>]
LOCAL_SYMBOL: b2CollideEdge.cpp<250:7> [b2CollideEdge.cpp <342:7 342:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool b2EPCollider::m_front [b2CollideEdge.cpp <344:4 344:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<249:10> [b2CollideEdge.cpp <344:14 344:20>]
LOCAL_SYMBOL: b2CollideEdge.cpp<248:10> [b2CollideEdge.cpp <344:33 344:39>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool b2EPCollider::m_front [b2CollideEdge.cpp <345:8 345:14>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <347:14 347:14>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <347:5 347:12>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <347:16 347:24>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <348:18 348:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_lowerLimit [b2CollideEdge.cpp <348:5 348:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal0 [b2CollideEdge.cpp <348:20 348:28>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <349:18 349:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_upperLimit [b2CollideEdge.cpp <349:5 349:16>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <349:20 349:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <349:21 349:29>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <353:14 353:14>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <353:5 353:12>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <353:16 353:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <353:17 353:25>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <354:18 354:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_lowerLimit [b2CollideEdge.cpp <354:5 354:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <354:20 354:28>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <355:18 355:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_upperLimit [b2CollideEdge.cpp <355:5 355:16>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <355:20 355:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <355:21 355:29>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool b2EPCollider::m_front [b2CollideEdge.cpp <360:4 360:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<249:10> [b2CollideEdge.cpp <360:14 360:20>]
LOCAL_SYMBOL: b2CollideEdge.cpp<248:10> [b2CollideEdge.cpp <360:33 360:39>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool b2EPCollider::m_front [b2CollideEdge.cpp <361:8 361:14>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <363:14 363:14>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <363:5 363:12>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <363:16 363:24>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <364:18 364:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_lowerLimit [b2CollideEdge.cpp <364:5 364:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <364:20 364:28>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <365:18 365:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_upperLimit [b2CollideEdge.cpp <365:5 365:16>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <365:20 365:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <365:21 365:29>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <369:14 369:14>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <369:5 369:12>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <369:16 369:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <369:17 369:25>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <370:18 370:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_lowerLimit [b2CollideEdge.cpp <370:5 370:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <370:20 370:28>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <371:18 371:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_upperLimit [b2CollideEdge.cpp <371:5 371:16>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <371:20 371:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal0 [b2CollideEdge.cpp <371:21 371:29>]
LOCAL_SYMBOL: b2CollideEdge.cpp<243:7> [b2CollideEdge.cpp <375:11 375:20>]
LOCAL_SYMBOL: b2CollideEdge.cpp<250:24> [b2CollideEdge.cpp <377:7 377:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool b2EPCollider::m_front [b2CollideEdge.cpp <379:4 379:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<248:10> [b2CollideEdge.cpp <379:14 379:20>]
LOCAL_SYMBOL: b2CollideEdge.cpp<249:26> [b2CollideEdge.cpp <379:33 379:39>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool b2EPCollider::m_front [b2CollideEdge.cpp <380:8 380:14>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <382:14 382:14>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <382:5 382:12>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <382:16 382:24>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <383:18 383:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_lowerLimit [b2CollideEdge.cpp <383:5 383:16>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <383:20 383:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <383:21 383:29>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <384:18 384:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_upperLimit [b2CollideEdge.cpp <384:5 384:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal2 [b2CollideEdge.cpp <384:20 384:28>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <388:14 388:14>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <388:5 388:12>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <388:16 388:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <388:17 388:25>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <389:18 389:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_lowerLimit [b2CollideEdge.cpp <389:5 389:16>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <389:20 389:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <389:21 389:29>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <390:18 390:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_upperLimit [b2CollideEdge.cpp <390:5 390:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <390:20 390:28>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool b2EPCollider::m_front [b2CollideEdge.cpp <395:4 395:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<248:10> [b2CollideEdge.cpp <395:14 395:20>]
LOCAL_SYMBOL: b2CollideEdge.cpp<249:26> [b2CollideEdge.cpp <395:33 395:39>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool b2EPCollider::m_front [b2CollideEdge.cpp <396:8 396:14>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <398:14 398:14>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <398:5 398:12>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <398:16 398:24>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <399:18 399:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_lowerLimit [b2CollideEdge.cpp <399:5 399:16>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <399:20 399:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <399:21 399:29>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <400:18 400:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_upperLimit [b2CollideEdge.cpp <400:5 400:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <400:20 400:28>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <404:14 404:14>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <404:5 404:12>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <404:16 404:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <404:17 404:25>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <405:18 405:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_lowerLimit [b2CollideEdge.cpp <405:5 405:16>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <405:20 405:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal2 [b2CollideEdge.cpp <405:21 405:29>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <406:18 406:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_upperLimit [b2CollideEdge.cpp <406:5 406:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <406:20 406:28>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool b2EPCollider::m_front [b2CollideEdge.cpp <412:3 412:9>]
LOCAL_SYMBOL: b2CollideEdge.cpp<248:10> [b2CollideEdge.cpp <412:13 412:19>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool b2EPCollider::m_front [b2CollideEdge.cpp <413:7 413:13>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <415:13 415:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <415:4 415:11>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <415:15 415:23>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <416:17 416:17>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_lowerLimit [b2CollideEdge.cpp <416:4 416:15>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <416:19 416:19>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <416:20 416:28>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <417:17 417:17>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_upperLimit [b2CollideEdge.cpp <417:4 417:15>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <417:19 417:19>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <417:20 417:28>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <421:13 421:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <421:4 421:11>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <421:15 421:15>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <421:16 421:24>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <422:17 422:17>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_lowerLimit [b2CollideEdge.cpp <422:4 422:15>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <422:19 422:27>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <423:17 423:17>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_upperLimit [b2CollideEdge.cpp <423:4 423:15>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <423:19 423:27>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2TempPolygon::count [b2CollideEdge.cpp <428:13 428:17>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2TempPolygon b2EPCollider::m_polygonB [b2CollideEdge.cpp <428:2 428:11>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2PolygonShape::m_count [b2CollideEdge.cpp <428:31 428:37>]
LOCAL_SYMBOL: b2CollideEdge.cpp<231:32> [b2CollideEdge.cpp <428:21 428:28>]
LOCAL_SYMBOL: b2CollideEdge.cpp<429:13> [b2CollideEdge.cpp <429:13 429:13>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollideEdge.cpp <429:7 429:11>]
LOCAL_SYMBOL: b2CollideEdge.cpp<429:13> [b2CollideEdge.cpp <429:20 429:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2PolygonShape::m_count [b2CollideEdge.cpp <429:34 429:40>]
LOCAL_SYMBOL: b2CollideEdge.cpp<231:32> [b2CollideEdge.cpp <429:24 429:31>]
LOCAL_SYMBOL: b2CollideEdge.cpp<429:13> [b2CollideEdge.cpp <429:45 429:45>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <431:26 431:26>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [] b2TempPolygon::vertices [b2CollideEdge.cpp <431:14 431:21>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2TempPolygon b2EPCollider::m_polygonB [b2CollideEdge.cpp <431:3 431:12>]
LOCAL_SYMBOL: b2CollideEdge.cpp<429:13> [b2CollideEdge.cpp <431:23 431:23>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2CollideEdge.cpp <431:28 431:32>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform b2EPCollider::m_xf [b2CollideEdge.cpp <431:34 431:37>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [] b2PolygonShape::m_vertices [b2CollideEdge.cpp <431:50 431:59>]
LOCAL_SYMBOL: b2CollideEdge.cpp<231:32> [b2CollideEdge.cpp <431:40 431:47>]
LOCAL_SYMBOL: b2CollideEdge.cpp<429:13> [b2CollideEdge.cpp <431:61 431:61>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <432:25 432:25>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [] b2TempPolygon::normals [b2CollideEdge.cpp <432:14 432:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2TempPolygon b2EPCollider::m_polygonB [b2CollideEdge.cpp <432:3 432:12>]
LOCAL_SYMBOL: b2CollideEdge.cpp<429:13> [b2CollideEdge.cpp <432:22 432:22>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2CollideEdge.cpp <432:27 432:31>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Rot b2Transform::q [b2CollideEdge.cpp <432:38 432:38>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform b2EPCollider::m_xf [b2CollideEdge.cpp <432:33 432:36>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [] b2PolygonShape::m_normals [b2CollideEdge.cpp <432:51 432:59>]
LOCAL_SYMBOL: b2CollideEdge.cpp<231:32> [b2CollideEdge.cpp <432:41 432:48>]
LOCAL_SYMBOL: b2CollideEdge.cpp<429:13> [b2CollideEdge.cpp <432:61 432:61>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2EPCollider::m_radius [b2CollideEdge.cpp <435:2 435:9>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Shape::m_radius [b2CollideEdge.cpp <435:23 435:30>]
LOCAL_SYMBOL: b2CollideEdge.cpp<231:32> [b2CollideEdge.cpp <435:13 435:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Shape::m_radius [b2CollideEdge.cpp <435:41 435:48>]
LOCAL_SYMBOL: b2CollideEdge.cpp<230:69> [b2CollideEdge.cpp <435:34 435:38>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2Manifold::pointCount [b2CollideEdge.cpp <437:12 437:21>]
LOCAL_SYMBOL: b2CollideEdge.cpp<230:40> [b2CollideEdge.cpp <437:2 437:9>]
LOCAL_SYMBOL: b2CollideEdge.cpp<439:11> [b2CollideEdge.cpp <439:11 439:18>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EPAxis [b2CollideEdge.cpp <439:2 439:9>]
SYMBOL_FUNCTION b2EPAxis b2EPCollider::ComputeEdgeSeparation()
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EPAxis b2EPCollider::ComputeEdgeSeparation() [b2CollideEdge.cpp <439:22 439:42>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EPAxis::Type b2EPAxis::type [b2CollideEdge.cpp <442:15 442:18>]
LOCAL_SYMBOL: b2CollideEdge.cpp<439:11> [b2CollideEdge.cpp <442:6 442:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EPAxis::Type::e_unknown [b2CollideEdge.cpp <442:33 442:41>]
SYMBOL_STRUCT b2EPAxis
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2EPAxis::separation [b2CollideEdge.cpp <447:15 447:24>]
LOCAL_SYMBOL: b2CollideEdge.cpp<439:11> [b2CollideEdge.cpp <447:6 447:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2EPCollider::m_radius [b2CollideEdge.cpp <447:28 447:35>]
LOCAL_SYMBOL: b2CollideEdge.cpp<452:11> [b2CollideEdge.cpp <452:11 452:21>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EPAxis [b2CollideEdge.cpp <452:2 452:9>]
SYMBOL_FUNCTION b2EPAxis b2EPCollider::ComputePolygonSeparation()
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EPAxis b2EPCollider::ComputePolygonSeparation() [b2CollideEdge.cpp <452:25 452:48>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EPAxis::Type b2EPAxis::type [b2CollideEdge.cpp <453:18 453:21>]
LOCAL_SYMBOL: b2CollideEdge.cpp<452:11> [b2CollideEdge.cpp <453:6 453:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EPAxis::Type::e_unknown [b2CollideEdge.cpp <453:36 453:44>]
SYMBOL_STRUCT b2EPAxis
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2EPAxis::separation [b2CollideEdge.cpp <453:61 453:70>]
LOCAL_SYMBOL: b2CollideEdge.cpp<452:11> [b2CollideEdge.cpp <453:49 453:59>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2EPCollider::m_radius [b2CollideEdge.cpp <453:74 453:81>]
LOCAL_SYMBOL: b2CollideEdge.cpp<459:16> [b2CollideEdge.cpp <459:16 459:28>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 [b2CollideEdge.cpp <459:8 459:14>]
LOCAL_SYMBOL: b2CollideEdge.cpp<460:16> [b2CollideEdge.cpp <460:16 460:28>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 [b2CollideEdge.cpp <460:8 460:14>]
LOCAL_SYMBOL: b2CollideEdge.cpp<462:11> [b2CollideEdge.cpp <462:11 462:21>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EPAxis [b2CollideEdge.cpp <462:2 462:9>]
SYMBOL_FUNCTION void b2EPAxis::b2EPAxis()
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void b2EPAxis::b2EPAxis() [b2CollideEdge.cpp <462:11 462:21>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EPAxis::Type b2EPAxis::type [b2CollideEdge.cpp <463:18 463:21>]
LOCAL_SYMBOL: b2CollideEdge.cpp<452:11> [b2CollideEdge.cpp <463:6 463:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EPAxis::Type::e_unknown [b2CollideEdge.cpp <463:36 463:44>]
SYMBOL_STRUCT b2EPAxis
SYMBOL_FUNCTION b2EPAxis & b2EPAxis::operator=(const b2EPAxis &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EPAxis & b2EPAxis::operator=(const b2EPAxis &) [b2CollideEdge.cpp <465:15 465:15>]
LOCAL_SYMBOL: b2CollideEdge.cpp<462:11> [b2CollideEdge.cpp <465:3 465:13>]
LOCAL_SYMBOL: b2CollideEdge.cpp<439:11> [b2CollideEdge.cpp <465:17 465:24>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2EPAxis::separation [b2CollideEdge.cpp <467:23 467:32>]
LOCAL_SYMBOL: b2CollideEdge.cpp<452:11> [b2CollideEdge.cpp <467:11 467:21>]
LOCAL_SYMBOL: b2CollideEdge.cpp<459:16> [b2CollideEdge.cpp <467:36 467:48>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2EPAxis::separation [b2CollideEdge.cpp <467:61 467:70>]
LOCAL_SYMBOL: b2CollideEdge.cpp<439:11> [b2CollideEdge.cpp <467:52 467:59>]
LOCAL_SYMBOL: b2CollideEdge.cpp<460:16> [b2CollideEdge.cpp <467:74 467:86>]
SYMBOL_FUNCTION b2EPAxis & b2EPAxis::operator=(const b2EPAxis &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EPAxis & b2EPAxis::operator=(const b2EPAxis &) [b2CollideEdge.cpp <469:15 469:15>]
LOCAL_SYMBOL: b2CollideEdge.cpp<462:11> [b2CollideEdge.cpp <469:3 469:13>]
LOCAL_SYMBOL: b2CollideEdge.cpp<452:11> [b2CollideEdge.cpp <469:17 469:27>]
SYMBOL_FUNCTION b2EPAxis & b2EPAxis::operator=(const b2EPAxis &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EPAxis & b2EPAxis::operator=(const b2EPAxis &) [b2CollideEdge.cpp <473:15 473:15>]
LOCAL_SYMBOL: b2CollideEdge.cpp<462:11> [b2CollideEdge.cpp <473:3 473:13>]
LOCAL_SYMBOL: b2CollideEdge.cpp<439:11> [b2CollideEdge.cpp <473:17 473:24>]
LOCAL_SYMBOL: b2CollideEdge.cpp<476:15> [b2CollideEdge.cpp <476:15 476:16>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ClipVertex [b2CollideEdge.cpp <476:2 476:13>]
SYMBOL_FUNCTION void b2ClipVertex::b2ClipVertex()
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void b2ClipVertex::b2ClipVertex() [b2CollideEdge.cpp <476:15 476:16>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <477:18 477:19>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ReferenceFace [b2CollideEdge.cpp <477:2 477:16>]
SYMBOL_FUNCTION void b2ReferenceFace::b2ReferenceFace()
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void b2ReferenceFace::b2ReferenceFace() [b2CollideEdge.cpp <477:18 477:19>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EPAxis::Type b2EPAxis::type [b2CollideEdge.cpp <478:18 478:21>]
LOCAL_SYMBOL: b2CollideEdge.cpp<462:11> [b2CollideEdge.cpp <478:6 478:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EPAxis::Type::e_edgeA [b2CollideEdge.cpp <478:36 478:42>]
SYMBOL_STRUCT b2EPAxis
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Manifold::Type b2Manifold::type [b2CollideEdge.cpp <480:13 480:16>]
LOCAL_SYMBOL: b2CollideEdge.cpp<230:40> [b2CollideEdge.cpp <480:3 480:10>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Manifold::Type::e_faceA [b2CollideEdge.cpp <480:32 480:38>]
SYMBOL_STRUCT b2Manifold
LOCAL_SYMBOL: b2CollideEdge.cpp<483:9> [b2CollideEdge.cpp <483:9 483:17>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollideEdge.cpp <483:3 483:7>]
LOCAL_SYMBOL: b2CollideEdge.cpp<484:11> [b2CollideEdge.cpp <484:11 484:19>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 [b2CollideEdge.cpp <484:3 484:9>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <484:23 484:27>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <484:29 484:36>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [] b2TempPolygon::normals [b2CollideEdge.cpp <484:50 484:56>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2TempPolygon b2EPCollider::m_polygonB [b2CollideEdge.cpp <484:39 484:48>]
LOCAL_SYMBOL: b2CollideEdge.cpp<485:14> [b2CollideEdge.cpp <485:14 485:14>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollideEdge.cpp <485:8 485:12>]
LOCAL_SYMBOL: b2CollideEdge.cpp<485:14> [b2CollideEdge.cpp <485:21 485:21>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2TempPolygon::count [b2CollideEdge.cpp <485:36 485:40>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2TempPolygon b2EPCollider::m_polygonB [b2CollideEdge.cpp <485:25 485:34>]
LOCAL_SYMBOL: b2CollideEdge.cpp<485:14> [b2CollideEdge.cpp <485:45 485:45>]
LOCAL_SYMBOL: b2CollideEdge.cpp<487:12> [b2CollideEdge.cpp <487:12 487:16>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 [b2CollideEdge.cpp <487:4 487:10>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <487:20 487:24>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <487:26 487:33>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [] b2TempPolygon::normals [b2CollideEdge.cpp <487:47 487:53>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2TempPolygon b2EPCollider::m_polygonB [b2CollideEdge.cpp <487:36 487:45>]
LOCAL_SYMBOL: b2CollideEdge.cpp<485:14> [b2CollideEdge.cpp <487:55 487:55>]
LOCAL_SYMBOL: b2CollideEdge.cpp<487:12> [b2CollideEdge.cpp <488:8 488:12>]
LOCAL_SYMBOL: b2CollideEdge.cpp<484:11> [b2CollideEdge.cpp <488:16 488:24>]
LOCAL_SYMBOL: b2CollideEdge.cpp<484:11> [b2CollideEdge.cpp <490:5 490:13>]
LOCAL_SYMBOL: b2CollideEdge.cpp<487:12> [b2CollideEdge.cpp <490:17 490:21>]
LOCAL_SYMBOL: b2CollideEdge.cpp<483:9> [b2CollideEdge.cpp <491:5 491:13>]
LOCAL_SYMBOL: b2CollideEdge.cpp<485:14> [b2CollideEdge.cpp <491:17 491:17>]
LOCAL_SYMBOL: b2CollideEdge.cpp<495:9> [b2CollideEdge.cpp <495:9 495:10>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollideEdge.cpp <495:3 495:7>]
LOCAL_SYMBOL: b2CollideEdge.cpp<483:9> [b2CollideEdge.cpp <495:14 495:22>]
LOCAL_SYMBOL: b2CollideEdge.cpp<496:9> [b2CollideEdge.cpp <496:9 496:10>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollideEdge.cpp <496:3 496:7>]
LOCAL_SYMBOL: b2CollideEdge.cpp<495:9> [b2CollideEdge.cpp <496:14 496:15>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2TempPolygon::count [b2CollideEdge.cpp <496:34 496:38>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2TempPolygon b2EPCollider::m_polygonB [b2CollideEdge.cpp <496:23 496:32>]
LOCAL_SYMBOL: b2CollideEdge.cpp<495:9> [b2CollideEdge.cpp <496:42 496:43>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <498:11 498:11>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ClipVertex::v [b2CollideEdge.cpp <498:9 498:9>]
LOCAL_SYMBOL: b2CollideEdge.cpp<476:15> [b2CollideEdge.cpp <498:3 498:4>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [] b2TempPolygon::vertices [b2CollideEdge.cpp <498:24 498:31>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2TempPolygon b2EPCollider::m_polygonB [b2CollideEdge.cpp <498:13 498:22>]
LOCAL_SYMBOL: b2CollideEdge.cpp<495:9> [b2CollideEdge.cpp <498:33 498:34>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::indexA [b2CollideEdge.cpp <499:15 499:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <499:12 499:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollideEdge.cpp <499:9 499:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<476:15> [b2CollideEdge.cpp <499:3 499:4>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::indexB [b2CollideEdge.cpp <500:15 500:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <500:12 500:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollideEdge.cpp <500:9 500:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<476:15> [b2CollideEdge.cpp <500:3 500:4>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 [b2CollideEdge.cpp <500:36 500:40>]
LOCAL_SYMBOL: b2CollideEdge.cpp<495:9> [b2CollideEdge.cpp <500:43 500:44>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::typeA [b2CollideEdge.cpp <501:15 501:19>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <501:12 501:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollideEdge.cpp <501:9 501:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<476:15> [b2CollideEdge.cpp <501:3 501:4>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature::Type::e_face [b2CollideEdge.cpp <501:41 501:46>]
SYMBOL_STRUCT b2ContactFeature
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::typeB [b2CollideEdge.cpp <502:15 502:19>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <502:12 502:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollideEdge.cpp <502:9 502:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<476:15> [b2CollideEdge.cpp <502:3 502:4>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature::Type::e_vertex [b2CollideEdge.cpp <502:41 502:48>]
SYMBOL_STRUCT b2ContactFeature
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <504:11 504:11>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ClipVertex::v [b2CollideEdge.cpp <504:9 504:9>]
LOCAL_SYMBOL: b2CollideEdge.cpp<476:15> [b2CollideEdge.cpp <504:3 504:4>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [] b2TempPolygon::vertices [b2CollideEdge.cpp <504:24 504:31>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2TempPolygon b2EPCollider::m_polygonB [b2CollideEdge.cpp <504:13 504:22>]
LOCAL_SYMBOL: b2CollideEdge.cpp<496:9> [b2CollideEdge.cpp <504:33 504:34>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::indexA [b2CollideEdge.cpp <505:15 505:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <505:12 505:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollideEdge.cpp <505:9 505:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<476:15> [b2CollideEdge.cpp <505:3 505:4>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::indexB [b2CollideEdge.cpp <506:15 506:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <506:12 506:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollideEdge.cpp <506:9 506:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<476:15> [b2CollideEdge.cpp <506:3 506:4>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 [b2CollideEdge.cpp <506:36 506:40>]
LOCAL_SYMBOL: b2CollideEdge.cpp<496:9> [b2CollideEdge.cpp <506:43 506:44>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::typeA [b2CollideEdge.cpp <507:15 507:19>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <507:12 507:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollideEdge.cpp <507:9 507:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<476:15> [b2CollideEdge.cpp <507:3 507:4>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature::Type::e_face [b2CollideEdge.cpp <507:41 507:46>]
SYMBOL_STRUCT b2ContactFeature
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::typeB [b2CollideEdge.cpp <508:15 508:19>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <508:12 508:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollideEdge.cpp <508:9 508:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<476:15> [b2CollideEdge.cpp <508:3 508:4>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature::Type::e_vertex [b2CollideEdge.cpp <508:41 508:48>]
SYMBOL_STRUCT b2ContactFeature
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> bool b2EPCollider::m_front [b2CollideEdge.cpp <510:7 510:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2ReferenceFace::i1 [b2CollideEdge.cpp <512:7 512:8>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <512:4 512:5>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2ReferenceFace::i2 [b2CollideEdge.cpp <513:7 513:8>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <513:4 513:5>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <514:10 514:10>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::v1 [b2CollideEdge.cpp <514:7 514:8>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <514:4 514:5>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_v1 [b2CollideEdge.cpp <514:12 514:15>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <515:10 515:10>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::v2 [b2CollideEdge.cpp <515:7 515:8>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <515:4 515:5>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_v2 [b2CollideEdge.cpp <515:12 515:15>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <516:14 516:14>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::normal [b2CollideEdge.cpp <516:7 516:12>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <516:4 516:5>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <516:16 516:24>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2ReferenceFace::i1 [b2CollideEdge.cpp <520:7 520:8>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <520:4 520:5>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2ReferenceFace::i2 [b2CollideEdge.cpp <521:7 521:8>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <521:4 521:5>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <522:10 522:10>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::v1 [b2CollideEdge.cpp <522:7 522:8>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <522:4 522:5>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_v2 [b2CollideEdge.cpp <522:12 522:15>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <523:10 523:10>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::v2 [b2CollideEdge.cpp <523:7 523:8>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <523:4 523:5>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_v1 [b2CollideEdge.cpp <523:12 523:15>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <524:14 524:14>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::normal [b2CollideEdge.cpp <524:7 524:12>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <524:4 524:5>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <524:16 524:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_normal1 [b2CollideEdge.cpp <524:17 524:25>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Manifold::Type b2Manifold::type [b2CollideEdge.cpp <529:13 529:16>]
LOCAL_SYMBOL: b2CollideEdge.cpp<230:40> [b2CollideEdge.cpp <529:3 529:10>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Manifold::Type::e_faceB [b2CollideEdge.cpp <529:32 529:38>]
SYMBOL_STRUCT b2Manifold
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <531:11 531:11>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ClipVertex::v [b2CollideEdge.cpp <531:9 531:9>]
LOCAL_SYMBOL: b2CollideEdge.cpp<476:15> [b2CollideEdge.cpp <531:3 531:4>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_v1 [b2CollideEdge.cpp <531:13 531:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::indexA [b2CollideEdge.cpp <532:15 532:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <532:12 532:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollideEdge.cpp <532:9 532:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<476:15> [b2CollideEdge.cpp <532:3 532:4>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::indexB [b2CollideEdge.cpp <533:15 533:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <533:12 533:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollideEdge.cpp <533:9 533:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<476:15> [b2CollideEdge.cpp <533:3 533:4>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 [b2CollideEdge.cpp <533:36 533:40>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2EPAxis::index [b2CollideEdge.cpp <533:55 533:59>]
LOCAL_SYMBOL: b2CollideEdge.cpp<462:11> [b2CollideEdge.cpp <533:43 533:53>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::typeA [b2CollideEdge.cpp <534:15 534:19>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <534:12 534:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollideEdge.cpp <534:9 534:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<476:15> [b2CollideEdge.cpp <534:3 534:4>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature::Type::e_vertex [b2CollideEdge.cpp <534:41 534:48>]
SYMBOL_STRUCT b2ContactFeature
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::typeB [b2CollideEdge.cpp <535:15 535:19>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <535:12 535:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollideEdge.cpp <535:9 535:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<476:15> [b2CollideEdge.cpp <535:3 535:4>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature::Type::e_face [b2CollideEdge.cpp <535:41 535:46>]
SYMBOL_STRUCT b2ContactFeature
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <537:11 537:11>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ClipVertex::v [b2CollideEdge.cpp <537:9 537:9>]
LOCAL_SYMBOL: b2CollideEdge.cpp<476:15> [b2CollideEdge.cpp <537:3 537:4>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2EPCollider::m_v2 [b2CollideEdge.cpp <537:13 537:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::indexA [b2CollideEdge.cpp <538:15 538:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <538:12 538:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollideEdge.cpp <538:9 538:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<476:15> [b2CollideEdge.cpp <538:3 538:4>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::indexB [b2CollideEdge.cpp <539:15 539:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <539:12 539:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollideEdge.cpp <539:9 539:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<476:15> [b2CollideEdge.cpp <539:3 539:4>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 [b2CollideEdge.cpp <539:36 539:40>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2EPAxis::index [b2CollideEdge.cpp <539:55 539:59>]
LOCAL_SYMBOL: b2CollideEdge.cpp<462:11> [b2CollideEdge.cpp <539:43 539:53>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::typeA [b2CollideEdge.cpp <540:15 540:19>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <540:12 540:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollideEdge.cpp <540:9 540:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<476:15> [b2CollideEdge.cpp <540:3 540:4>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature::Type::e_vertex [b2CollideEdge.cpp <540:41 540:48>]
SYMBOL_STRUCT b2ContactFeature
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::typeB [b2CollideEdge.cpp <541:15 541:19>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <541:12 541:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollideEdge.cpp <541:9 541:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<476:15> [b2CollideEdge.cpp <541:3 541:4>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature::Type::e_face [b2CollideEdge.cpp <541:41 541:46>]
SYMBOL_STRUCT b2ContactFeature
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2ReferenceFace::i1 [b2CollideEdge.cpp <543:6 543:7>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <543:3 543:4>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2EPAxis::index [b2CollideEdge.cpp <543:23 543:27>]
LOCAL_SYMBOL: b2CollideEdge.cpp<462:11> [b2CollideEdge.cpp <543:11 543:21>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2ReferenceFace::i2 [b2CollideEdge.cpp <544:6 544:7>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <544:3 544:4>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2ReferenceFace::i1 [b2CollideEdge.cpp <544:14 544:15>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <544:11 544:12>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2TempPolygon::count [b2CollideEdge.cpp <544:34 544:38>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2TempPolygon b2EPCollider::m_polygonB [b2CollideEdge.cpp <544:23 544:32>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2ReferenceFace::i1 [b2CollideEdge.cpp <544:45 544:46>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <544:42 544:43>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <545:9 545:9>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::v1 [b2CollideEdge.cpp <545:6 545:7>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <545:3 545:4>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [] b2TempPolygon::vertices [b2CollideEdge.cpp <545:22 545:29>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2TempPolygon b2EPCollider::m_polygonB [b2CollideEdge.cpp <545:11 545:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2ReferenceFace::i1 [b2CollideEdge.cpp <545:34 545:35>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <545:31 545:32>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <546:9 546:9>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::v2 [b2CollideEdge.cpp <546:6 546:7>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <546:3 546:4>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [] b2TempPolygon::vertices [b2CollideEdge.cpp <546:22 546:29>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2TempPolygon b2EPCollider::m_polygonB [b2CollideEdge.cpp <546:11 546:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2ReferenceFace::i2 [b2CollideEdge.cpp <546:34 546:35>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <546:31 546:32>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <547:13 547:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::normal [b2CollideEdge.cpp <547:6 547:11>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <547:3 547:4>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [] b2TempPolygon::normals [b2CollideEdge.cpp <547:26 547:32>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2TempPolygon b2EPCollider::m_polygonB [b2CollideEdge.cpp <547:15 547:24>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2ReferenceFace::i1 [b2CollideEdge.cpp <547:37 547:38>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <547:34 547:35>]
SYMBOL_FUNCTION void b2Vec2::Set(float32, float32)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void b2Vec2::Set(float32, float32) [b2CollideEdge.cpp <550:17 550:19>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::sideNormal1 [b2CollideEdge.cpp <550:5 550:15>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <550:2 550:3>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Vec2::y [b2CollideEdge.cpp <550:31 550:31>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::normal [b2CollideEdge.cpp <550:24 550:29>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <550:21 550:22>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Vec2::x [b2CollideEdge.cpp <550:45 550:45>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::normal [b2CollideEdge.cpp <550:38 550:43>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <550:35 550:36>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <551:17 551:17>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::sideNormal2 [b2CollideEdge.cpp <551:5 551:15>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <551:2 551:3>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <551:19 551:19>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::sideNormal1 [b2CollideEdge.cpp <551:23 551:33>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <551:20 551:21>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2ReferenceFace::sideOffset1 [b2CollideEdge.cpp <552:5 552:15>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <552:2 552:3>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <552:19 552:23>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::sideNormal1 [b2CollideEdge.cpp <552:28 552:38>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <552:25 552:26>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::v1 [b2CollideEdge.cpp <552:44 552:45>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <552:41 552:42>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2ReferenceFace::sideOffset2 [b2CollideEdge.cpp <553:5 553:15>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <553:2 553:3>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <553:19 553:23>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::sideNormal2 [b2CollideEdge.cpp <553:28 553:38>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <553:25 553:26>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::v2 [b2CollideEdge.cpp <553:44 553:45>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <553:41 553:42>]
LOCAL_SYMBOL: b2CollideEdge.cpp<556:15> [b2CollideEdge.cpp <556:15 556:25>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ClipVertex [b2CollideEdge.cpp <556:2 556:13>]
SYMBOL_FUNCTION void b2ClipVertex::b2ClipVertex()
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void b2ClipVertex::b2ClipVertex() [b2CollideEdge.cpp <556:15 556:25>]
LOCAL_SYMBOL: b2CollideEdge.cpp<557:15> [b2CollideEdge.cpp <557:15 557:25>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ClipVertex [b2CollideEdge.cpp <557:2 557:13>]
SYMBOL_FUNCTION void b2ClipVertex::b2ClipVertex()
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void b2ClipVertex::b2ClipVertex() [b2CollideEdge.cpp <557:15 557:25>]
LOCAL_SYMBOL: b2CollideEdge.cpp<558:8> [b2CollideEdge.cpp <558:8 558:9>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollideEdge.cpp <558:2 558:6>]
LOCAL_SYMBOL: b2CollideEdge.cpp<558:8> [b2CollideEdge.cpp <561:2 561:3>]
SYMBOL_FUNCTION int32 b2ClipSegmentToLine(b2ClipVertex [], const b2ClipVertex [] const, const b2Vec2 &, float32, int32)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2ClipSegmentToLine(b2ClipVertex [], const b2ClipVertex [] const, const b2Vec2 &, float32, int32) [b2CollideEdge.cpp <561:7 561:25>]
LOCAL_SYMBOL: b2CollideEdge.cpp<556:15> [b2CollideEdge.cpp <561:27 561:37>]
LOCAL_SYMBOL: b2CollideEdge.cpp<476:15> [b2CollideEdge.cpp <561:40 561:41>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::sideNormal1 [b2CollideEdge.cpp <561:47 561:57>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <561:44 561:45>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2ReferenceFace::sideOffset1 [b2CollideEdge.cpp <561:63 561:73>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <561:60 561:61>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2ReferenceFace::i1 [b2CollideEdge.cpp <561:79 561:80>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <561:76 561:77>]
LOCAL_SYMBOL: b2CollideEdge.cpp<558:8> [b2CollideEdge.cpp <563:6 563:7>]
LOCAL_SYMBOL: b2CollideEdge.cpp<558:8> [b2CollideEdge.cpp <569:2 569:3>]
SYMBOL_FUNCTION int32 b2ClipSegmentToLine(b2ClipVertex [], const b2ClipVertex [] const, const b2Vec2 &, float32, int32)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2ClipSegmentToLine(b2ClipVertex [], const b2ClipVertex [] const, const b2Vec2 &, float32, int32) [b2CollideEdge.cpp <569:7 569:25>]
LOCAL_SYMBOL: b2CollideEdge.cpp<557:15> [b2CollideEdge.cpp <569:27 569:37>]
LOCAL_SYMBOL: b2CollideEdge.cpp<556:15> [b2CollideEdge.cpp <569:40 569:50>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::sideNormal2 [b2CollideEdge.cpp <569:56 569:66>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <569:53 569:54>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2ReferenceFace::sideOffset2 [b2CollideEdge.cpp <569:72 569:82>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <569:69 569:70>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2ReferenceFace::i2 [b2CollideEdge.cpp <569:88 569:89>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <569:85 569:86>]
LOCAL_SYMBOL: b2CollideEdge.cpp<558:8> [b2CollideEdge.cpp <571:6 571:7>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EPAxis::Type b2EPAxis::type [b2CollideEdge.cpp <577:18 577:21>]
LOCAL_SYMBOL: b2CollideEdge.cpp<462:11> [b2CollideEdge.cpp <577:6 577:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EPAxis::Type::e_edgeA [b2CollideEdge.cpp <577:36 577:42>]
SYMBOL_STRUCT b2EPAxis
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <579:25 579:25>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Manifold::localNormal [b2CollideEdge.cpp <579:13 579:23>]
LOCAL_SYMBOL: b2CollideEdge.cpp<230:40> [b2CollideEdge.cpp <579:3 579:10>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::normal [b2CollideEdge.cpp <579:30 579:35>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <579:27 579:28>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <580:24 580:24>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Manifold::localPoint [b2CollideEdge.cpp <580:13 580:22>]
LOCAL_SYMBOL: b2CollideEdge.cpp<230:40> [b2CollideEdge.cpp <580:3 580:10>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::v1 [b2CollideEdge.cpp <580:29 580:30>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <580:26 580:27>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <584:25 584:25>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Manifold::localNormal [b2CollideEdge.cpp <584:13 584:23>]
LOCAL_SYMBOL: b2CollideEdge.cpp<230:40> [b2CollideEdge.cpp <584:3 584:10>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [] b2PolygonShape::m_normals [b2CollideEdge.cpp <584:37 584:45>]
LOCAL_SYMBOL: b2CollideEdge.cpp<231:32> [b2CollideEdge.cpp <584:27 584:34>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2ReferenceFace::i1 [b2CollideEdge.cpp <584:50 584:51>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <584:47 584:48>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <585:24 585:24>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2Manifold::localPoint [b2CollideEdge.cpp <585:13 585:22>]
LOCAL_SYMBOL: b2CollideEdge.cpp<230:40> [b2CollideEdge.cpp <585:3 585:10>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 [] b2PolygonShape::m_vertices [b2CollideEdge.cpp <585:36 585:45>]
LOCAL_SYMBOL: b2CollideEdge.cpp<231:32> [b2CollideEdge.cpp <585:26 585:33>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2ReferenceFace::i1 [b2CollideEdge.cpp <585:50 585:51>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <585:47 585:48>]
LOCAL_SYMBOL: b2CollideEdge.cpp<588:8> [b2CollideEdge.cpp <588:8 588:17>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollideEdge.cpp <588:2 588:6>]
LOCAL_SYMBOL: b2CollideEdge.cpp<589:13> [b2CollideEdge.cpp <589:13 589:13>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 [b2CollideEdge.cpp <589:7 589:11>]
LOCAL_SYMBOL: b2CollideEdge.cpp<589:13> [b2CollideEdge.cpp <589:20 589:20>]
LOCAL_SYMBOL: b2CollideEdge.cpp<589:13> [b2CollideEdge.cpp <589:48 589:48>]
LOCAL_SYMBOL: b2CollideEdge.cpp<591:11> [b2CollideEdge.cpp <591:11 591:20>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 [b2CollideEdge.cpp <591:3 591:9>]
LOCAL_SYMBOL: b2CollideEdge.cpp<591:11> [b2CollideEdge.cpp <593:3 593:12>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <593:16 593:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::normal [b2CollideEdge.cpp <593:25 593:30>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <593:22 593:23>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <593:50 593:50>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ClipVertex::v [b2CollideEdge.cpp <593:48 593:48>]
LOCAL_SYMBOL: b2CollideEdge.cpp<557:15> [b2CollideEdge.cpp <593:33 593:43>]
LOCAL_SYMBOL: b2CollideEdge.cpp<589:13> [b2CollideEdge.cpp <593:45 593:45>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ReferenceFace::v1 [b2CollideEdge.cpp <593:55 593:56>]
LOCAL_SYMBOL: b2CollideEdge.cpp<477:18> [b2CollideEdge.cpp <593:52 593:53>]
LOCAL_SYMBOL: b2CollideEdge.cpp<591:11> [b2CollideEdge.cpp <595:7 595:16>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> float32 b2EPCollider::m_radius [b2CollideEdge.cpp <595:21 595:28>]
LOCAL_SYMBOL: b2CollideEdge.cpp<597:21> [b2CollideEdge.cpp <597:21 597:22>]
REFERENCE_TYPE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ManifoldPoint [b2CollideEdge.cpp <597:4 597:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ManifoldPoint [] b2Manifold::points [b2CollideEdge.cpp <597:36 597:41>]
LOCAL_SYMBOL: b2CollideEdge.cpp<230:40> [b2CollideEdge.cpp <597:26 597:33>]
LOCAL_SYMBOL: b2CollideEdge.cpp<588:8> [b2CollideEdge.cpp <597:45 597:54>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EPAxis::Type b2EPAxis::type [b2CollideEdge.cpp <599:20 599:23>]
LOCAL_SYMBOL: b2CollideEdge.cpp<462:11> [b2CollideEdge.cpp <599:8 599:18>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EPAxis::Type::e_edgeA [b2CollideEdge.cpp <599:38 599:44>]
SYMBOL_STRUCT b2EPAxis
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2CollideEdge.cpp <601:20 601:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ManifoldPoint::localPoint [b2CollideEdge.cpp <601:9 601:18>]
LOCAL_SYMBOL: b2CollideEdge.cpp<597:21> [b2CollideEdge.cpp <601:5 601:6>]
SYMBOL_FUNCTION b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) [b2CollideEdge.cpp <601:22 601:27>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform b2EPCollider::m_xf [b2CollideEdge.cpp <601:29 601:32>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ClipVertex::v [b2CollideEdge.cpp <601:50 601:50>]
LOCAL_SYMBOL: b2CollideEdge.cpp<557:15> [b2CollideEdge.cpp <601:35 601:45>]
LOCAL_SYMBOL: b2CollideEdge.cpp<589:13> [b2CollideEdge.cpp <601:47 601:47>]
SYMBOL_FUNCTION b2ContactID & b2ContactID::operator=(const b2ContactID &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID & b2ContactID::operator=(const b2ContactID &) [b2CollideEdge.cpp <602:12 602:12>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ManifoldPoint::id [b2CollideEdge.cpp <602:9 602:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<597:21> [b2CollideEdge.cpp <602:5 602:6>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollideEdge.cpp <602:29 602:30>]
LOCAL_SYMBOL: b2CollideEdge.cpp<557:15> [b2CollideEdge.cpp <602:14 602:24>]
LOCAL_SYMBOL: b2CollideEdge.cpp<589:13> [b2CollideEdge.cpp <602:26 602:26>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2CollideEdge.cpp <606:20 606:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ManifoldPoint::localPoint [b2CollideEdge.cpp <606:9 606:18>]
LOCAL_SYMBOL: b2CollideEdge.cpp<597:21> [b2CollideEdge.cpp <606:5 606:6>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Vec2 b2ClipVertex::v [b2CollideEdge.cpp <606:37 606:37>]
LOCAL_SYMBOL: b2CollideEdge.cpp<557:15> [b2CollideEdge.cpp <606:22 606:32>]
LOCAL_SYMBOL: b2CollideEdge.cpp<589:13> [b2CollideEdge.cpp <606:34 606:34>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::typeA [b2CollideEdge.cpp <607:15 607:19>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <607:12 607:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ManifoldPoint::id [b2CollideEdge.cpp <607:9 607:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<597:21> [b2CollideEdge.cpp <607:5 607:6>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::typeB [b2CollideEdge.cpp <607:44 607:48>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <607:41 607:42>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollideEdge.cpp <607:38 607:39>]
LOCAL_SYMBOL: b2CollideEdge.cpp<557:15> [b2CollideEdge.cpp <607:23 607:33>]
LOCAL_SYMBOL: b2CollideEdge.cpp<589:13> [b2CollideEdge.cpp <607:35 607:35>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::typeB [b2CollideEdge.cpp <608:15 608:19>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <608:12 608:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ManifoldPoint::id [b2CollideEdge.cpp <608:9 608:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<597:21> [b2CollideEdge.cpp <608:5 608:6>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::typeA [b2CollideEdge.cpp <608:44 608:48>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <608:41 608:42>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollideEdge.cpp <608:38 608:39>]
LOCAL_SYMBOL: b2CollideEdge.cpp<557:15> [b2CollideEdge.cpp <608:23 608:33>]
LOCAL_SYMBOL: b2CollideEdge.cpp<589:13> [b2CollideEdge.cpp <608:35 608:35>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::indexA [b2CollideEdge.cpp <609:15 609:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <609:12 609:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ManifoldPoint::id [b2CollideEdge.cpp <609:9 609:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<597:21> [b2CollideEdge.cpp <609:5 609:6>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::indexB [b2CollideEdge.cpp <609:45 609:50>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <609:42 609:43>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollideEdge.cpp <609:39 609:40>]
LOCAL_SYMBOL: b2CollideEdge.cpp<557:15> [b2CollideEdge.cpp <609:24 609:34>]
LOCAL_SYMBOL: b2CollideEdge.cpp<589:13> [b2CollideEdge.cpp <609:36 609:36>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::indexB [b2CollideEdge.cpp <610:15 610:20>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <610:12 610:13>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ManifoldPoint::id [b2CollideEdge.cpp <610:9 610:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<597:21> [b2CollideEdge.cpp <610:5 610:6>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> uint8 b2ContactFeature::indexA [b2CollideEdge.cpp <610:45 610:50>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactFeature b2ContactID::cf [b2CollideEdge.cpp <610:42 610:43>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2ContactID b2ClipVertex::id [b2CollideEdge.cpp <610:39 610:40>]
LOCAL_SYMBOL: b2CollideEdge.cpp<557:15> [b2CollideEdge.cpp <610:24 610:34>]
LOCAL_SYMBOL: b2CollideEdge.cpp<589:13> [b2CollideEdge.cpp <610:36 610:36>]
LOCAL_SYMBOL: b2CollideEdge.cpp<588:8> [b2CollideEdge.cpp <613:6 613:15>]
REFERENCE_USAGE void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> int32 b2Manifold::pointCount [b2CollideEdge.cpp <617:12 617:21>]
LOCAL_SYMBOL: b2CollideEdge.cpp<230:40> [b2CollideEdge.cpp <617:2 617:9>]
LOCAL_SYMBOL: b2CollideEdge.cpp<588:8> [b2CollideEdge.cpp <617:25 617:34>]
SYMBOL_METHOD public b2EPAxis b2EPCollider::ComputeEdgeSeparation() [b2CollideEdge.cpp <620:1 <620:24 620:44> 637:1>]
SYMBOL_STRUCT b2EPCollider
REFERENCE_TYPE_USAGE b2EPAxis b2EPCollider::ComputeEdgeSeparation() -> b2EPAxis [b2CollideEdge.cpp <620:1 620:8>]
LOCAL_SYMBOL: b2CollideEdge.cpp<622:11> [b2CollideEdge.cpp <622:11 622:14>]
REFERENCE_TYPE_USAGE b2EPAxis b2EPCollider::ComputeEdgeSeparation() -> b2EPAxis [b2CollideEdge.cpp <622:2 622:9>]
SYMBOL_FUNCTION void b2EPAxis::b2EPAxis()
REFERENCE_CALL b2EPAxis b2EPCollider::ComputeEdgeSeparation() -> void b2EPAxis::b2EPAxis() [b2CollideEdge.cpp <622:11 622:14>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputeEdgeSeparation() -> b2EPAxis::Type b2EPAxis::type [b2CollideEdge.cpp <623:7 623:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<622:11> [b2CollideEdge.cpp <623:2 623:5>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputeEdgeSeparation() -> b2EPAxis::Type::e_edgeA [b2CollideEdge.cpp <623:24 623:30>]
SYMBOL_STRUCT b2EPAxis
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputeEdgeSeparation() -> int32 b2EPAxis::index [b2CollideEdge.cpp <624:7 624:11>]
LOCAL_SYMBOL: b2CollideEdge.cpp<622:11> [b2CollideEdge.cpp <624:2 624:5>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputeEdgeSeparation() -> bool b2EPCollider::m_front [b2CollideEdge.cpp <624:15 624:21>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputeEdgeSeparation() -> float32 b2EPAxis::separation [b2CollideEdge.cpp <625:7 625:16>]
LOCAL_SYMBOL: b2CollideEdge.cpp<622:11> [b2CollideEdge.cpp <625:2 625:5>]
LOCAL_SYMBOL: b2CollideEdge.cpp<627:13> [b2CollideEdge.cpp <627:13 627:13>]
REFERENCE_TYPE_USAGE b2EPAxis b2EPCollider::ComputeEdgeSeparation() -> int32 [b2CollideEdge.cpp <627:7 627:11>]
LOCAL_SYMBOL: b2CollideEdge.cpp<627:13> [b2CollideEdge.cpp <627:20 627:20>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputeEdgeSeparation() -> int32 b2TempPolygon::count [b2CollideEdge.cpp <627:35 627:39>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputeEdgeSeparation() -> b2TempPolygon b2EPCollider::m_polygonB [b2CollideEdge.cpp <627:24 627:33>]
LOCAL_SYMBOL: b2CollideEdge.cpp<627:13> [b2CollideEdge.cpp <627:44 627:44>]
LOCAL_SYMBOL: b2CollideEdge.cpp<629:11> [b2CollideEdge.cpp <629:11 629:11>]
REFERENCE_TYPE_USAGE b2EPAxis b2EPCollider::ComputeEdgeSeparation() -> float32 [b2CollideEdge.cpp <629:3 629:9>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL b2EPAxis b2EPCollider::ComputeEdgeSeparation() -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <629:15 629:19>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputeEdgeSeparation() -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <629:21 629:28>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL b2EPAxis b2EPCollider::ComputeEdgeSeparation() -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <629:54 629:54>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputeEdgeSeparation() -> b2Vec2 [] b2TempPolygon::vertices [b2CollideEdge.cpp <629:42 629:49>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputeEdgeSeparation() -> b2TempPolygon b2EPCollider::m_polygonB [b2CollideEdge.cpp <629:31 629:40>]
LOCAL_SYMBOL: b2CollideEdge.cpp<627:13> [b2CollideEdge.cpp <629:51 629:51>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputeEdgeSeparation() -> b2Vec2 b2EPCollider::m_v1 [b2CollideEdge.cpp <629:56 629:59>]
LOCAL_SYMBOL: b2CollideEdge.cpp<629:11> [b2CollideEdge.cpp <630:7 630:7>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputeEdgeSeparation() -> float32 b2EPAxis::separation [b2CollideEdge.cpp <630:16 630:25>]
LOCAL_SYMBOL: b2CollideEdge.cpp<622:11> [b2CollideEdge.cpp <630:11 630:14>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputeEdgeSeparation() -> float32 b2EPAxis::separation [b2CollideEdge.cpp <632:9 632:18>]
LOCAL_SYMBOL: b2CollideEdge.cpp<622:11> [b2CollideEdge.cpp <632:4 632:7>]
LOCAL_SYMBOL: b2CollideEdge.cpp<629:11> [b2CollideEdge.cpp <632:22 632:22>]
SYMBOL_FUNCTION void b2EPAxis::b2EPAxis(b2EPAxis &)
REFERENCE_CALL b2EPAxis b2EPCollider::ComputeEdgeSeparation() -> void b2EPAxis::b2EPAxis(b2EPAxis &) [b2CollideEdge.cpp <636:9 636:12>]
LOCAL_SYMBOL: b2CollideEdge.cpp<622:11> [b2CollideEdge.cpp <636:9 636:12>]
SYMBOL_METHOD public b2EPAxis b2EPCollider::ComputePolygonSeparation() [b2CollideEdge.cpp <639:1 <639:24 639:47> 690:1>]
SYMBOL_STRUCT b2EPCollider
REFERENCE_TYPE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2EPAxis [b2CollideEdge.cpp <639:1 639:8>]
LOCAL_SYMBOL: b2CollideEdge.cpp<641:11> [b2CollideEdge.cpp <641:11 641:14>]
REFERENCE_TYPE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2EPAxis [b2CollideEdge.cpp <641:2 641:9>]
SYMBOL_FUNCTION void b2EPAxis::b2EPAxis()
REFERENCE_CALL b2EPAxis b2EPCollider::ComputePolygonSeparation() -> void b2EPAxis::b2EPAxis() [b2CollideEdge.cpp <641:11 641:14>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2EPAxis::Type b2EPAxis::type [b2CollideEdge.cpp <642:7 642:10>]
LOCAL_SYMBOL: b2CollideEdge.cpp<641:11> [b2CollideEdge.cpp <642:2 642:5>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2EPAxis::Type::e_unknown [b2CollideEdge.cpp <642:24 642:32>]
SYMBOL_STRUCT b2EPAxis
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> int32 b2EPAxis::index [b2CollideEdge.cpp <643:7 643:11>]
LOCAL_SYMBOL: b2CollideEdge.cpp<641:11> [b2CollideEdge.cpp <643:2 643:5>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> float32 b2EPAxis::separation [b2CollideEdge.cpp <644:7 644:16>]
LOCAL_SYMBOL: b2CollideEdge.cpp<641:11> [b2CollideEdge.cpp <644:2 644:5>]
LOCAL_SYMBOL: b2CollideEdge.cpp<646:9> [b2CollideEdge.cpp <646:9 646:12>]
REFERENCE_TYPE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2Vec2 [b2CollideEdge.cpp <646:2 646:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(float32, float32)
REFERENCE_CALL b2EPAxis b2EPCollider::ComputePolygonSeparation() -> void b2Vec2::b2Vec2(float32, float32) [b2CollideEdge.cpp <646:9 646:12>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> float32 b2Vec2::y [b2CollideEdge.cpp <646:24 646:24>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <646:15 646:22>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> float32 b2Vec2::x [b2CollideEdge.cpp <646:36 646:36>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <646:27 646:34>]
LOCAL_SYMBOL: b2CollideEdge.cpp<648:13> [b2CollideEdge.cpp <648:13 648:13>]
REFERENCE_TYPE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> int32 [b2CollideEdge.cpp <648:7 648:11>]
LOCAL_SYMBOL: b2CollideEdge.cpp<648:13> [b2CollideEdge.cpp <648:20 648:20>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> int32 b2TempPolygon::count [b2CollideEdge.cpp <648:35 648:39>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2TempPolygon b2EPCollider::m_polygonB [b2CollideEdge.cpp <648:24 648:33>]
LOCAL_SYMBOL: b2CollideEdge.cpp<648:13> [b2CollideEdge.cpp <648:44 648:44>]
LOCAL_SYMBOL: b2CollideEdge.cpp<650:10> [b2CollideEdge.cpp <650:10 650:10>]
REFERENCE_TYPE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2Vec2 [b2CollideEdge.cpp <650:3 650:8>]
SYMBOL_FUNCTION b2Vec2 b2Vec2::operator-() const
REFERENCE_CALL b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2Vec2 b2Vec2::operator-() const [b2CollideEdge.cpp <650:14 650:14>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2Vec2 [] b2TempPolygon::normals [b2CollideEdge.cpp <650:26 650:32>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2TempPolygon b2EPCollider::m_polygonB [b2CollideEdge.cpp <650:15 650:24>]
LOCAL_SYMBOL: b2CollideEdge.cpp<648:13> [b2CollideEdge.cpp <650:34 650:34>]
LOCAL_SYMBOL: b2CollideEdge.cpp<652:11> [b2CollideEdge.cpp <652:11 652:12>]
REFERENCE_TYPE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> float32 [b2CollideEdge.cpp <652:3 652:9>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL b2EPAxis b2EPCollider::ComputePolygonSeparation() -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <652:16 652:20>]
LOCAL_SYMBOL: b2CollideEdge.cpp<650:10> [b2CollideEdge.cpp <652:22 652:22>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <652:48 652:48>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2Vec2 [] b2TempPolygon::vertices [b2CollideEdge.cpp <652:36 652:43>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2TempPolygon b2EPCollider::m_polygonB [b2CollideEdge.cpp <652:25 652:34>]
LOCAL_SYMBOL: b2CollideEdge.cpp<648:13> [b2CollideEdge.cpp <652:45 652:45>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2Vec2 b2EPCollider::m_v1 [b2CollideEdge.cpp <652:50 652:53>]
LOCAL_SYMBOL: b2CollideEdge.cpp<653:11> [b2CollideEdge.cpp <653:11 653:12>]
REFERENCE_TYPE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> float32 [b2CollideEdge.cpp <653:3 653:9>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL b2EPAxis b2EPCollider::ComputePolygonSeparation() -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <653:16 653:20>]
LOCAL_SYMBOL: b2CollideEdge.cpp<650:10> [b2CollideEdge.cpp <653:22 653:22>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <653:48 653:48>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2Vec2 [] b2TempPolygon::vertices [b2CollideEdge.cpp <653:36 653:43>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2TempPolygon b2EPCollider::m_polygonB [b2CollideEdge.cpp <653:25 653:34>]
LOCAL_SYMBOL: b2CollideEdge.cpp<648:13> [b2CollideEdge.cpp <653:45 653:45>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2Vec2 b2EPCollider::m_v2 [b2CollideEdge.cpp <653:50 653:53>]
LOCAL_SYMBOL: b2CollideEdge.cpp<654:11> [b2CollideEdge.cpp <654:11 654:11>]
REFERENCE_TYPE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> float32 [b2CollideEdge.cpp <654:3 654:9>]
SYMBOL_FUNCTION float b2Min<float>(float, float)
REFERENCE_CALL b2EPAxis b2EPCollider::ComputePolygonSeparation() -> float b2Min<float>(float, float) [b2CollideEdge.cpp <654:15 654:19>]
LOCAL_SYMBOL: b2CollideEdge.cpp<652:11> [b2CollideEdge.cpp <654:21 654:22>]
LOCAL_SYMBOL: b2CollideEdge.cpp<653:11> [b2CollideEdge.cpp <654:25 654:26>]
LOCAL_SYMBOL: b2CollideEdge.cpp<654:11> [b2CollideEdge.cpp <656:7 656:7>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> float32 b2EPCollider::m_radius [b2CollideEdge.cpp <656:11 656:18>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2EPAxis::Type b2EPAxis::type [b2CollideEdge.cpp <659:9 659:12>]
LOCAL_SYMBOL: b2CollideEdge.cpp<641:11> [b2CollideEdge.cpp <659:4 659:7>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2EPAxis::Type::e_edgeB [b2CollideEdge.cpp <659:26 659:32>]
SYMBOL_STRUCT b2EPAxis
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> int32 b2EPAxis::index [b2CollideEdge.cpp <660:9 660:13>]
LOCAL_SYMBOL: b2CollideEdge.cpp<641:11> [b2CollideEdge.cpp <660:4 660:7>]
LOCAL_SYMBOL: b2CollideEdge.cpp<648:13> [b2CollideEdge.cpp <660:17 660:17>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> float32 b2EPAxis::separation [b2CollideEdge.cpp <661:9 661:18>]
LOCAL_SYMBOL: b2CollideEdge.cpp<641:11> [b2CollideEdge.cpp <661:4 661:7>]
LOCAL_SYMBOL: b2CollideEdge.cpp<654:11> [b2CollideEdge.cpp <661:22 661:22>]
SYMBOL_FUNCTION void b2EPAxis::b2EPAxis(b2EPAxis &)
REFERENCE_CALL b2EPAxis b2EPCollider::ComputePolygonSeparation() -> void b2EPAxis::b2EPAxis(b2EPAxis &) [b2CollideEdge.cpp <662:11 662:14>]
LOCAL_SYMBOL: b2CollideEdge.cpp<641:11> [b2CollideEdge.cpp <662:11 662:14>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL b2EPAxis b2EPCollider::ComputePolygonSeparation() -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <666:7 666:11>]
LOCAL_SYMBOL: b2CollideEdge.cpp<650:10> [b2CollideEdge.cpp <666:13 666:13>]
LOCAL_SYMBOL: b2CollideEdge.cpp<646:9> [b2CollideEdge.cpp <666:16 666:19>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL b2EPAxis b2EPCollider::ComputePolygonSeparation() -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <668:8 668:12>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <668:16 668:16>]
LOCAL_SYMBOL: b2CollideEdge.cpp<650:10> [b2CollideEdge.cpp <668:14 668:14>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2Vec2 b2EPCollider::m_upperLimit [b2CollideEdge.cpp <668:18 668:29>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <668:32 668:39>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL b2EPAxis b2EPCollider::ComputePolygonSeparation() -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <675:8 675:12>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2CollideEdge.cpp <675:16 675:16>]
LOCAL_SYMBOL: b2CollideEdge.cpp<650:10> [b2CollideEdge.cpp <675:14 675:14>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2Vec2 b2EPCollider::m_lowerLimit [b2CollideEdge.cpp <675:18 675:29>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2Vec2 b2EPCollider::m_normal [b2CollideEdge.cpp <675:32 675:39>]
LOCAL_SYMBOL: b2CollideEdge.cpp<654:11> [b2CollideEdge.cpp <681:7 681:7>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> float32 b2EPAxis::separation [b2CollideEdge.cpp <681:16 681:25>]
LOCAL_SYMBOL: b2CollideEdge.cpp<641:11> [b2CollideEdge.cpp <681:11 681:14>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2EPAxis::Type b2EPAxis::type [b2CollideEdge.cpp <683:9 683:12>]
LOCAL_SYMBOL: b2CollideEdge.cpp<641:11> [b2CollideEdge.cpp <683:4 683:7>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> b2EPAxis::Type::e_edgeB [b2CollideEdge.cpp <683:26 683:32>]
SYMBOL_STRUCT b2EPAxis
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> int32 b2EPAxis::index [b2CollideEdge.cpp <684:9 684:13>]
LOCAL_SYMBOL: b2CollideEdge.cpp<641:11> [b2CollideEdge.cpp <684:4 684:7>]
LOCAL_SYMBOL: b2CollideEdge.cpp<648:13> [b2CollideEdge.cpp <684:17 684:17>]
REFERENCE_USAGE b2EPAxis b2EPCollider::ComputePolygonSeparation() -> float32 b2EPAxis::separation [b2CollideEdge.cpp <685:9 685:18>]
LOCAL_SYMBOL: b2CollideEdge.cpp<641:11> [b2CollideEdge.cpp <685:4 685:7>]
LOCAL_SYMBOL: b2CollideEdge.cpp<654:11> [b2CollideEdge.cpp <685:22 685:22>]
SYMBOL_FUNCTION void b2EPAxis::b2EPAxis(b2EPAxis &)
REFERENCE_CALL b2EPAxis b2EPCollider::ComputePolygonSeparation() -> void b2EPAxis::b2EPAxis(b2EPAxis &) [b2CollideEdge.cpp <689:9 689:12>]
LOCAL_SYMBOL: b2CollideEdge.cpp<641:11> [b2CollideEdge.cpp <689:9 689:12>]
SYMBOL_FUNCTION void b2CollideEdgeAndPolygon(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) [b2CollideEdge.cpp <692:1 <692:6 692:28> 698:1>]
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2CollideEdgeAndPolygon(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void [b2CollideEdge.cpp <692:1 692:4>]
LOCAL_SYMBOL: b2CollideEdge.cpp<692:43> [b2CollideEdge.cpp <692:43 692:50>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndPolygon(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Manifold [b2CollideEdge.cpp <692:31 692:40>]
LOCAL_SYMBOL: b2CollideEdge.cpp<693:28> [b2CollideEdge.cpp <693:28 693:32>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndPolygon(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EdgeShape [b2CollideEdge.cpp <693:15 693:25>]
LOCAL_SYMBOL: b2CollideEdge.cpp<693:54> [b2CollideEdge.cpp <693:54 693:56>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndPolygon(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform [b2CollideEdge.cpp <693:41 693:51>]
LOCAL_SYMBOL: b2CollideEdge.cpp<694:31> [b2CollideEdge.cpp <694:31 694:38>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndPolygon(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2PolygonShape [b2CollideEdge.cpp <694:15 694:28>]
LOCAL_SYMBOL: b2CollideEdge.cpp<694:60> [b2CollideEdge.cpp <694:60 694:62>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndPolygon(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform [b2CollideEdge.cpp <694:47 694:57>]
LOCAL_SYMBOL: b2CollideEdge.cpp<696:15> [b2CollideEdge.cpp <696:15 696:22>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndPolygon(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EPCollider [b2CollideEdge.cpp <696:2 696:13>]
SYMBOL_FUNCTION void b2EPCollider::b2EPCollider()
REFERENCE_CALL void b2CollideEdgeAndPolygon(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void b2EPCollider::b2EPCollider() [b2CollideEdge.cpp <696:15 696:22>]
SYMBOL_FUNCTION void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &)
REFERENCE_CALL void b2CollideEdgeAndPolygon(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void b2EPCollider::Collide(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) [b2CollideEdge.cpp <697:11 697:17>]
LOCAL_SYMBOL: b2CollideEdge.cpp<696:15> [b2CollideEdge.cpp <697:2 697:9>]
LOCAL_SYMBOL: b2CollideEdge.cpp<692:43> [b2CollideEdge.cpp <697:19 697:26>]
LOCAL_SYMBOL: b2CollideEdge.cpp<693:28> [b2CollideEdge.cpp <697:29 697:33>]
LOCAL_SYMBOL: b2CollideEdge.cpp<693:54> [b2CollideEdge.cpp <697:36 697:38>]
LOCAL_SYMBOL: b2CollideEdge.cpp<694:31> [b2CollideEdge.cpp <697:41 697:48>]
LOCAL_SYMBOL: b2CollideEdge.cpp<694:60> [b2CollideEdge.cpp <697:51 697:53>]
