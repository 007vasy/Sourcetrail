FILE: b2StackAllocator.cpp
COMMENT: comment [b2StackAllocator.cpp <1:1 17:3>]
REFERENCE_MACRO_USAGE b2StackAllocator.cpp -> b2Assert [b2StackAllocator.cpp <32:2 32:9>]
REFERENCE_MACRO_USAGE b2Settings.h -> assert [b2Settings.h <31:21 31:26>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:23 34:31>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:47 34:55>]
REFERENCE_MACRO_USAGE assert.h -> __FILE__ [assert.h <34:57 34:64>]
REFERENCE_MACRO_USAGE assert.h -> __LINE__ [assert.h <34:79 34:86>]
REFERENCE_MACRO_USAGE b2StackAllocator.cpp -> b2Assert [b2StackAllocator.cpp <33:2 33:9>]
REFERENCE_MACRO_USAGE b2StackAllocator.cpp -> b2Assert [b2StackAllocator.cpp <38:2 38:9>]
REFERENCE_MACRO_USAGE b2StackAllocator.cpp -> b2Assert [b2StackAllocator.cpp <63:2 63:9>]
REFERENCE_MACRO_USAGE b2StackAllocator.cpp -> b2Assert [b2StackAllocator.cpp <65:2 65:9>]
SYMBOL_METHOD public void b2StackAllocator::b2StackAllocator() [b2StackAllocator.cpp <22:1 <22:19 22:34> 28:1>]
SYMBOL_CLASS b2StackAllocator
QUALIFIER: b2StackAllocator [b2StackAllocator.cpp <22:1 22:16>]
REFERENCE_USAGE void b2StackAllocator::b2StackAllocator() -> b2StackEntry [] b2StackAllocator::m_entries [b2StackAllocator.cpp <22:19 22:34>]
SYMBOL_FUNCTION void b2StackEntry::b2StackEntry()
REFERENCE_CALL void b2StackAllocator::b2StackAllocator() -> void b2StackEntry::b2StackEntry() [b2StackAllocator.cpp <22:19 22:34>]
REFERENCE_USAGE void b2StackAllocator::b2StackAllocator() -> int32 b2StackAllocator::m_index [b2StackAllocator.cpp <24:2 24:8>]
REFERENCE_USAGE void b2StackAllocator::b2StackAllocator() -> int32 b2StackAllocator::m_allocation [b2StackAllocator.cpp <25:2 25:13>]
REFERENCE_USAGE void b2StackAllocator::b2StackAllocator() -> int32 b2StackAllocator::m_maxAllocation [b2StackAllocator.cpp <26:2 26:16>]
REFERENCE_USAGE void b2StackAllocator::b2StackAllocator() -> int32 b2StackAllocator::m_entryCount [b2StackAllocator.cpp <27:2 27:13>]
SYMBOL_METHOD public void b2StackAllocator::~b2StackAllocator() [b2StackAllocator.cpp <30:1 <30:19 30:35> 34:1>]
QUALIFIER: b2StackAllocator [b2StackAllocator.cpp <30:1 30:16>]
REFERENCE_USAGE void b2StackAllocator::~b2StackAllocator() -> int32 b2StackAllocator::m_index [b2StackAllocator.cpp <32:11 32:17>]
REFERENCE_USAGE void b2StackAllocator::~b2StackAllocator() -> int32 b2StackAllocator::m_entryCount [b2StackAllocator.cpp <33:11 33:22>]
SYMBOL_METHOD public void * b2StackAllocator::Allocate(int32) [b2StackAllocator.cpp <36:1 <36:25 36:32> 59:1>]
QUALIFIER: b2StackAllocator [b2StackAllocator.cpp <36:7 36:22>]
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void * b2StackAllocator::Allocate(int32) -> void [b2StackAllocator.cpp <36:1 36:4>]
LOCAL_SYMBOL: b2StackAllocator.cpp<36:40> [b2StackAllocator.cpp <36:40 36:43>]
REFERENCE_TYPE_USAGE void * b2StackAllocator::Allocate(int32) -> int32 [b2StackAllocator.cpp <36:34 36:38>]
REFERENCE_USAGE void * b2StackAllocator::Allocate(int32) -> int32 b2StackAllocator::m_entryCount [b2StackAllocator.cpp <38:11 38:22>]
REFERENCE_USAGE void * b2StackAllocator::Allocate(int32) -> const int32 b2_maxStackEntries [b2StackAllocator.cpp <38:26 38:43>]
LOCAL_SYMBOL: b2StackAllocator.cpp<40:16> [b2StackAllocator.cpp <40:16 40:20>]
REFERENCE_TYPE_USAGE void * b2StackAllocator::Allocate(int32) -> b2StackEntry [b2StackAllocator.cpp <40:2 40:13>]
REFERENCE_USAGE void * b2StackAllocator::Allocate(int32) -> b2StackEntry [] b2StackAllocator::m_entries [b2StackAllocator.cpp <40:24 40:32>]
REFERENCE_USAGE void * b2StackAllocator::Allocate(int32) -> int32 b2StackAllocator::m_entryCount [b2StackAllocator.cpp <40:36 40:47>]
REFERENCE_USAGE void * b2StackAllocator::Allocate(int32) -> int32 b2StackEntry::size [b2StackAllocator.cpp <41:9 41:12>]
LOCAL_SYMBOL: b2StackAllocator.cpp<40:16> [b2StackAllocator.cpp <41:2 41:6>]
LOCAL_SYMBOL: b2StackAllocator.cpp<36:40> [b2StackAllocator.cpp <41:16 41:19>]
REFERENCE_USAGE void * b2StackAllocator::Allocate(int32) -> int32 b2StackAllocator::m_index [b2StackAllocator.cpp <42:6 42:12>]
LOCAL_SYMBOL: b2StackAllocator.cpp<36:40> [b2StackAllocator.cpp <42:16 42:19>]
REFERENCE_USAGE void * b2StackAllocator::Allocate(int32) -> const int32 b2_stackSize [b2StackAllocator.cpp <42:23 42:34>]
REFERENCE_USAGE void * b2StackAllocator::Allocate(int32) -> char * b2StackEntry::data [b2StackAllocator.cpp <44:10 44:13>]
LOCAL_SYMBOL: b2StackAllocator.cpp<40:16> [b2StackAllocator.cpp <44:3 44:7>]
SYMBOL_BUILTIN_TYPE char
REFERENCE_TYPE_USAGE void * b2StackAllocator::Allocate(int32) -> char [b2StackAllocator.cpp <44:18 44:21>]
SYMBOL_FUNCTION void * b2Alloc(int32)
REFERENCE_CALL void * b2StackAllocator::Allocate(int32) -> void * b2Alloc(int32) [b2StackAllocator.cpp <44:24 44:30>]
LOCAL_SYMBOL: b2StackAllocator.cpp<36:40> [b2StackAllocator.cpp <44:32 44:35>]
REFERENCE_USAGE void * b2StackAllocator::Allocate(int32) -> bool b2StackEntry::usedMalloc [b2StackAllocator.cpp <45:10 45:19>]
LOCAL_SYMBOL: b2StackAllocator.cpp<40:16> [b2StackAllocator.cpp <45:3 45:7>]
REFERENCE_USAGE void * b2StackAllocator::Allocate(int32) -> char * b2StackEntry::data [b2StackAllocator.cpp <49:10 49:13>]
LOCAL_SYMBOL: b2StackAllocator.cpp<40:16> [b2StackAllocator.cpp <49:3 49:7>]
REFERENCE_USAGE void * b2StackAllocator::Allocate(int32) -> char [] b2StackAllocator::m_data [b2StackAllocator.cpp <49:17 49:22>]
REFERENCE_USAGE void * b2StackAllocator::Allocate(int32) -> int32 b2StackAllocator::m_index [b2StackAllocator.cpp <49:26 49:32>]
REFERENCE_USAGE void * b2StackAllocator::Allocate(int32) -> bool b2StackEntry::usedMalloc [b2StackAllocator.cpp <50:10 50:19>]
LOCAL_SYMBOL: b2StackAllocator.cpp<40:16> [b2StackAllocator.cpp <50:3 50:7>]
REFERENCE_USAGE void * b2StackAllocator::Allocate(int32) -> int32 b2StackAllocator::m_index [b2StackAllocator.cpp <51:3 51:9>]
LOCAL_SYMBOL: b2StackAllocator.cpp<36:40> [b2StackAllocator.cpp <51:14 51:17>]
REFERENCE_USAGE void * b2StackAllocator::Allocate(int32) -> int32 b2StackAllocator::m_allocation [b2StackAllocator.cpp <54:2 54:13>]
LOCAL_SYMBOL: b2StackAllocator.cpp<36:40> [b2StackAllocator.cpp <54:18 54:21>]
REFERENCE_USAGE void * b2StackAllocator::Allocate(int32) -> int32 b2StackAllocator::m_maxAllocation [b2StackAllocator.cpp <55:2 55:16>]
SYMBOL_FUNCTION int b2Max<int>(int, int)
REFERENCE_CALL void * b2StackAllocator::Allocate(int32) -> int b2Max<int>(int, int) [b2StackAllocator.cpp <55:20 55:24>]
REFERENCE_USAGE void * b2StackAllocator::Allocate(int32) -> int32 b2StackAllocator::m_maxAllocation [b2StackAllocator.cpp <55:26 55:40>]
REFERENCE_USAGE void * b2StackAllocator::Allocate(int32) -> int32 b2StackAllocator::m_allocation [b2StackAllocator.cpp <55:43 55:54>]
REFERENCE_USAGE void * b2StackAllocator::Allocate(int32) -> int32 b2StackAllocator::m_entryCount [b2StackAllocator.cpp <56:4 56:15>]
REFERENCE_USAGE void * b2StackAllocator::Allocate(int32) -> char * b2StackEntry::data [b2StackAllocator.cpp <58:16 58:19>]
LOCAL_SYMBOL: b2StackAllocator.cpp<40:16> [b2StackAllocator.cpp <58:9 58:13>]
SYMBOL_METHOD public void b2StackAllocator::Free(void *) [b2StackAllocator.cpp <61:1 <61:24 61:27> 78:1>]
QUALIFIER: b2StackAllocator [b2StackAllocator.cpp <61:6 61:21>]
REFERENCE_TYPE_USAGE void b2StackAllocator::Free(void *) -> void [b2StackAllocator.cpp <61:1 61:4>]
LOCAL_SYMBOL: b2StackAllocator.cpp<61:35> [b2StackAllocator.cpp <61:35 61:35>]
REFERENCE_TYPE_USAGE void b2StackAllocator::Free(void *) -> void [b2StackAllocator.cpp <61:29 61:32>]
REFERENCE_USAGE void b2StackAllocator::Free(void *) -> int32 b2StackAllocator::m_entryCount [b2StackAllocator.cpp <63:11 63:22>]
LOCAL_SYMBOL: b2StackAllocator.cpp<64:16> [b2StackAllocator.cpp <64:16 64:20>]
REFERENCE_TYPE_USAGE void b2StackAllocator::Free(void *) -> b2StackEntry [b2StackAllocator.cpp <64:2 64:13>]
REFERENCE_USAGE void b2StackAllocator::Free(void *) -> b2StackEntry [] b2StackAllocator::m_entries [b2StackAllocator.cpp <64:24 64:32>]
REFERENCE_USAGE void b2StackAllocator::Free(void *) -> int32 b2StackAllocator::m_entryCount [b2StackAllocator.cpp <64:36 64:47>]
LOCAL_SYMBOL: b2StackAllocator.cpp<61:35> [b2StackAllocator.cpp <65:11 65:11>]
REFERENCE_USAGE void b2StackAllocator::Free(void *) -> char * b2StackEntry::data [b2StackAllocator.cpp <65:23 65:26>]
LOCAL_SYMBOL: b2StackAllocator.cpp<64:16> [b2StackAllocator.cpp <65:16 65:20>]
REFERENCE_USAGE void b2StackAllocator::Free(void *) -> bool b2StackEntry::usedMalloc [b2StackAllocator.cpp <66:13 66:22>]
LOCAL_SYMBOL: b2StackAllocator.cpp<64:16> [b2StackAllocator.cpp <66:6 66:10>]
SYMBOL_FUNCTION void b2Free(void *)
REFERENCE_CALL void b2StackAllocator::Free(void *) -> void b2Free(void *) [b2StackAllocator.cpp <68:3 68:8>]
LOCAL_SYMBOL: b2StackAllocator.cpp<61:35> [b2StackAllocator.cpp <68:10 68:10>]
REFERENCE_USAGE void b2StackAllocator::Free(void *) -> int32 b2StackAllocator::m_index [b2StackAllocator.cpp <72:3 72:9>]
REFERENCE_USAGE void b2StackAllocator::Free(void *) -> int32 b2StackEntry::size [b2StackAllocator.cpp <72:21 72:24>]
LOCAL_SYMBOL: b2StackAllocator.cpp<64:16> [b2StackAllocator.cpp <72:14 72:18>]
REFERENCE_USAGE void b2StackAllocator::Free(void *) -> int32 b2StackAllocator::m_allocation [b2StackAllocator.cpp <74:2 74:13>]
REFERENCE_USAGE void b2StackAllocator::Free(void *) -> int32 b2StackEntry::size [b2StackAllocator.cpp <74:25 74:28>]
LOCAL_SYMBOL: b2StackAllocator.cpp<64:16> [b2StackAllocator.cpp <74:18 74:22>]
REFERENCE_USAGE void b2StackAllocator::Free(void *) -> int32 b2StackAllocator::m_entryCount [b2StackAllocator.cpp <75:4 75:15>]
LOCAL_SYMBOL: b2StackAllocator.cpp<61:35> [b2StackAllocator.cpp <77:2 77:2>]
SYMBOL_METHOD public int32 b2StackAllocator::GetMaxAllocation() const [b2StackAllocator.cpp <80:1 <80:25 80:40> 83:1>]
QUALIFIER: b2StackAllocator [b2StackAllocator.cpp <80:7 80:22>]
REFERENCE_TYPE_USAGE int32 b2StackAllocator::GetMaxAllocation() const -> int32 [b2StackAllocator.cpp <80:1 80:5>]
REFERENCE_USAGE int32 b2StackAllocator::GetMaxAllocation() const -> int32 b2StackAllocator::m_maxAllocation [b2StackAllocator.cpp <82:9 82:23>]
