FILE: b2WheelJoint.cpp
FILE: b2WheelJoint.cpp
COMMENT: comment [b2WheelJoint.cpp <1:1 17:3>]
FILE: b2WheelJoint.cpp
FILE: b2WheelJoint.cpp
FILE: b2WheelJoint.cpp
COMMENT: comment [b2WheelJoint.cpp <23:1 23:37>]
COMMENT: comment [b2WheelJoint.cpp <24:1 24:35>]
COMMENT: comment [b2WheelJoint.cpp <25:1 25:18>]
COMMENT: comment [b2WheelJoint.cpp <26:1 26:83>]
COMMENT: comment [b2WheelJoint.cpp <27:1 27:91>]
COMMENT: comment [b2WheelJoint.cpp <28:1 28:52>]
COMMENT: comment [b2WheelJoint.cpp <30:1 30:28>]
COMMENT: comment [b2WheelJoint.cpp <31:1 31:18>]
COMMENT: comment [b2WheelJoint.cpp <32:1 32:93>]
COMMENT: comment [b2WheelJoint.cpp <33:1 33:47>]
COMMENT: comment [b2WheelJoint.cpp <35:1 35:31>]
COMMENT: comment [b2WheelJoint.cpp <36:1 36:18>]
COMMENT: comment [b2WheelJoint.cpp <37:1 37:22>]
COMMENT: comment [b2WheelJoint.cpp <103:2 103:34>]
COMMENT: comment [b2WheelJoint.cpp <108:2 108:29>]
COMMENT: comment [b2WheelJoint.cpp <122:2 122:22>]
COMMENT: comment [b2WheelJoint.cpp <140:4 140:16>]
REFERENCE_MACRO_USAGE b2WheelJoint.cpp -> b2_pi [b2WheelJoint.cpp <141:27 141:31>]
COMMENT: comment [b2WheelJoint.cpp <143:4 143:26>]
COMMENT: comment [b2WheelJoint.cpp <146:4 146:23>]
COMMENT: comment [b2WheelJoint.cpp <149:4 149:21>]
COMMENT: comment [b2WheelJoint.cpp <171:2 171:21>]
COMMENT: comment [b2WheelJoint.cpp <188:3 188:37>]
COMMENT: comment [b2WheelJoint.cpp <226:2 226:28>]
COMMENT: comment [b2WheelJoint.cpp <243:2 243:38>]
COMMENT: comment [b2WheelJoint.cpp <257:2 257:35>]
REFERENCE_MACRO_USAGE b2WheelJoint.cpp -> b2_linearSlop [b2WheelJoint.cpp <326:21 326:33>]
SYMBOL_METHOD public void b2WheelJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <39:1 <39:23 39:32> 46:1>]
SYMBOL_STRUCT b2WheelJointDef
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2WheelJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> void [b2WheelJoint.cpp <39:1 39:4>]
LOCAL_SYMBOL: b2WheelJoint.cpp<39:42> [b2WheelJoint.cpp <39:42 39:43>]
REFERENCE_TYPE_USAGE void b2WheelJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Body [b2WheelJoint.cpp <39:34 39:39>]
LOCAL_SYMBOL: b2WheelJoint.cpp<39:54> [b2WheelJoint.cpp <39:54 39:55>]
REFERENCE_TYPE_USAGE void b2WheelJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Body [b2WheelJoint.cpp <39:46 39:51>]
LOCAL_SYMBOL: b2WheelJoint.cpp<39:72> [b2WheelJoint.cpp <39:72 39:77>]
REFERENCE_TYPE_USAGE void b2WheelJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2WheelJoint.cpp <39:64 39:69>]
LOCAL_SYMBOL: b2WheelJoint.cpp<39:94> [b2WheelJoint.cpp <39:94 39:97>]
REFERENCE_TYPE_USAGE void b2WheelJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2WheelJoint.cpp <39:86 39:91>]
REFERENCE_USAGE void b2WheelJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Body * b2JointDef::bodyA [b2WheelJoint.cpp <41:2 41:6>]
LOCAL_SYMBOL: b2WheelJoint.cpp<39:42> [b2WheelJoint.cpp <41:10 41:11>]
REFERENCE_USAGE void b2WheelJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Body * b2JointDef::bodyB [b2WheelJoint.cpp <42:2 42:6>]
LOCAL_SYMBOL: b2WheelJoint.cpp<39:54> [b2WheelJoint.cpp <42:10 42:11>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2WheelJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2WheelJoint.cpp <43:15 43:15>]
REFERENCE_USAGE void b2WheelJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2WheelJointDef::localAnchorA [b2WheelJoint.cpp <43:2 43:13>]
SYMBOL_FUNCTION b2Vec2 b2Body::GetLocalPoint(const b2Vec2 &) const
REFERENCE_CALL void b2WheelJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Body::GetLocalPoint(const b2Vec2 &) const [b2WheelJoint.cpp <43:24 43:36>]
REFERENCE_USAGE void b2WheelJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Body * b2JointDef::bodyA [b2WheelJoint.cpp <43:17 43:21>]
LOCAL_SYMBOL: b2WheelJoint.cpp<39:72> [b2WheelJoint.cpp <43:38 43:43>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2WheelJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2WheelJoint.cpp <44:15 44:15>]
REFERENCE_USAGE void b2WheelJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2WheelJointDef::localAnchorB [b2WheelJoint.cpp <44:2 44:13>]
SYMBOL_FUNCTION b2Vec2 b2Body::GetLocalPoint(const b2Vec2 &) const
REFERENCE_CALL void b2WheelJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Body::GetLocalPoint(const b2Vec2 &) const [b2WheelJoint.cpp <44:24 44:36>]
REFERENCE_USAGE void b2WheelJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Body * b2JointDef::bodyB [b2WheelJoint.cpp <44:17 44:21>]
LOCAL_SYMBOL: b2WheelJoint.cpp<39:72> [b2WheelJoint.cpp <44:38 44:43>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2WheelJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2WheelJoint.cpp <45:13 45:13>]
REFERENCE_USAGE void b2WheelJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2WheelJointDef::localAxisA [b2WheelJoint.cpp <45:2 45:11>]
SYMBOL_FUNCTION b2Vec2 b2Body::GetLocalVector(const b2Vec2 &) const
REFERENCE_CALL void b2WheelJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Body::GetLocalVector(const b2Vec2 &) const [b2WheelJoint.cpp <45:22 45:35>]
REFERENCE_USAGE void b2WheelJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &) -> b2Body * b2JointDef::bodyA [b2WheelJoint.cpp <45:15 45:19>]
LOCAL_SYMBOL: b2WheelJoint.cpp<39:94> [b2WheelJoint.cpp <45:37 45:40>]
SYMBOL_METHOD protected void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) [b2WheelJoint.cpp <48:1 <48:15 48:26> 75:1>]
SYMBOL_CLASS b2WheelJoint
LOCAL_SYMBOL: b2WheelJoint.cpp<48:51> [b2WheelJoint.cpp <48:51 48:53>]
REFERENCE_TYPE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2WheelJointDef [b2WheelJoint.cpp <48:34 48:48>]
REFERENCE_TYPE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Joint [b2WheelJoint.cpp <49:3 49:9>]
SYMBOL_FUNCTION void b2Joint::b2Joint(const b2JointDef *)
REFERENCE_CALL void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> void b2Joint::b2Joint(const b2JointDef *) [b2WheelJoint.cpp <49:3 49:9>]
LOCAL_SYMBOL: b2WheelJoint.cpp<48:51> [b2WheelJoint.cpp <49:11 49:13>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Vec2 b2WheelJoint::m_localAnchorA [b2WheelJoint.cpp <48:15 48:26>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> void b2Vec2::b2Vec2() [b2WheelJoint.cpp <48:15 48:26>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Vec2 b2WheelJoint::m_localAnchorB [b2WheelJoint.cpp <48:15 48:26>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> void b2Vec2::b2Vec2() [b2WheelJoint.cpp <48:15 48:26>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Vec2 b2WheelJoint::m_localXAxisA [b2WheelJoint.cpp <48:15 48:26>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> void b2Vec2::b2Vec2() [b2WheelJoint.cpp <48:15 48:26>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Vec2 b2WheelJoint::m_localYAxisA [b2WheelJoint.cpp <48:15 48:26>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> void b2Vec2::b2Vec2() [b2WheelJoint.cpp <48:15 48:26>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Vec2 b2WheelJoint::m_localCenterA [b2WheelJoint.cpp <48:15 48:26>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> void b2Vec2::b2Vec2() [b2WheelJoint.cpp <48:15 48:26>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Vec2 b2WheelJoint::m_localCenterB [b2WheelJoint.cpp <48:15 48:26>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> void b2Vec2::b2Vec2() [b2WheelJoint.cpp <48:15 48:26>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Vec2 b2WheelJoint::m_ax [b2WheelJoint.cpp <48:15 48:26>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> void b2Vec2::b2Vec2() [b2WheelJoint.cpp <48:15 48:26>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Vec2 b2WheelJoint::m_ay [b2WheelJoint.cpp <48:15 48:26>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> void b2Vec2::b2Vec2() [b2WheelJoint.cpp <48:15 48:26>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2WheelJoint.cpp <51:17 51:17>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Vec2 b2WheelJoint::m_localAnchorA [b2WheelJoint.cpp <51:2 51:15>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Vec2 b2WheelJointDef::localAnchorA [b2WheelJoint.cpp <51:24 51:35>]
LOCAL_SYMBOL: b2WheelJoint.cpp<48:51> [b2WheelJoint.cpp <51:19 51:21>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2WheelJoint.cpp <52:17 52:17>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Vec2 b2WheelJoint::m_localAnchorB [b2WheelJoint.cpp <52:2 52:15>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Vec2 b2WheelJointDef::localAnchorB [b2WheelJoint.cpp <52:24 52:35>]
LOCAL_SYMBOL: b2WheelJoint.cpp<48:51> [b2WheelJoint.cpp <52:19 52:21>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2WheelJoint.cpp <53:16 53:16>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Vec2 b2WheelJoint::m_localXAxisA [b2WheelJoint.cpp <53:2 53:14>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Vec2 b2WheelJointDef::localAxisA [b2WheelJoint.cpp <53:23 53:32>]
LOCAL_SYMBOL: b2WheelJoint.cpp<48:51> [b2WheelJoint.cpp <53:18 53:20>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2WheelJoint.cpp <54:16 54:16>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Vec2 b2WheelJoint::m_localYAxisA [b2WheelJoint.cpp <54:2 54:14>]
SYMBOL_FUNCTION b2Vec2 b2Cross(float32, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Vec2 b2Cross(float32, const b2Vec2 &) [b2WheelJoint.cpp <54:18 54:24>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Vec2 b2WheelJoint::m_localXAxisA [b2WheelJoint.cpp <54:32 54:44>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> float32 b2WheelJoint::m_mass [b2WheelJoint.cpp <56:2 56:7>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> float32 b2WheelJoint::m_impulse [b2WheelJoint.cpp <57:2 57:10>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> float32 b2WheelJoint::m_motorMass [b2WheelJoint.cpp <58:2 58:12>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> float32 b2WheelJoint::m_motorImpulse [b2WheelJoint.cpp <59:2 59:15>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> float32 b2WheelJoint::m_springMass [b2WheelJoint.cpp <60:2 60:13>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> float32 b2WheelJoint::m_springImpulse [b2WheelJoint.cpp <61:2 61:16>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> float32 b2WheelJoint::m_maxMotorTorque [b2WheelJoint.cpp <63:2 63:17>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> float32 b2WheelJointDef::maxMotorTorque [b2WheelJoint.cpp <63:26 63:39>]
LOCAL_SYMBOL: b2WheelJoint.cpp<48:51> [b2WheelJoint.cpp <63:21 63:23>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> float32 b2WheelJoint::m_motorSpeed [b2WheelJoint.cpp <64:2 64:13>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> float32 b2WheelJointDef::motorSpeed [b2WheelJoint.cpp <64:22 64:31>]
LOCAL_SYMBOL: b2WheelJoint.cpp<48:51> [b2WheelJoint.cpp <64:17 64:19>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> bool b2WheelJoint::m_enableMotor [b2WheelJoint.cpp <65:2 65:14>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> bool b2WheelJointDef::enableMotor [b2WheelJoint.cpp <65:23 65:33>]
LOCAL_SYMBOL: b2WheelJoint.cpp<48:51> [b2WheelJoint.cpp <65:18 65:20>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> float32 b2WheelJoint::m_frequencyHz [b2WheelJoint.cpp <67:2 67:14>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> float32 b2WheelJointDef::frequencyHz [b2WheelJoint.cpp <67:23 67:33>]
LOCAL_SYMBOL: b2WheelJoint.cpp<48:51> [b2WheelJoint.cpp <67:18 67:20>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> float32 b2WheelJoint::m_dampingRatio [b2WheelJoint.cpp <68:2 68:15>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> float32 b2WheelJointDef::dampingRatio [b2WheelJoint.cpp <68:24 68:35>]
LOCAL_SYMBOL: b2WheelJoint.cpp<48:51> [b2WheelJoint.cpp <68:19 68:21>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> float32 b2WheelJoint::m_bias [b2WheelJoint.cpp <70:2 70:7>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> float32 b2WheelJoint::m_gamma [b2WheelJoint.cpp <71:2 71:8>]
SYMBOL_FUNCTION void b2Vec2::SetZero()
REFERENCE_CALL void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> void b2Vec2::SetZero() [b2WheelJoint.cpp <73:7 73:13>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Vec2 b2WheelJoint::m_ax [b2WheelJoint.cpp <73:2 73:5>]
SYMBOL_FUNCTION void b2Vec2::SetZero()
REFERENCE_CALL void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> void b2Vec2::SetZero() [b2WheelJoint.cpp <74:7 74:13>]
REFERENCE_USAGE void b2WheelJoint::b2WheelJoint(const b2WheelJointDef *) -> b2Vec2 b2WheelJoint::m_ay [b2WheelJoint.cpp <74:2 74:5>]
SYMBOL_METHOD protected void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) [b2WheelJoint.cpp <77:1 <77:20 77:42> 214:1>]
SYMBOL_FUNCTION void b2Joint::InitVelocityConstraints(const b2SolverData &)
REFERENCE_OVERRIDE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Joint::InitVelocityConstraints(const b2SolverData &) [b2WheelJoint.cpp <77:20 77:42>]
SYMBOL_CLASS b2WheelJoint
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> void [b2WheelJoint.cpp <77:1 77:4>]
LOCAL_SYMBOL: b2WheelJoint.cpp<77:64> [b2WheelJoint.cpp <77:64 77:67>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2SolverData [b2WheelJoint.cpp <77:50 77:61>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexA [b2WheelJoint.cpp <79:2 79:9>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2Body::m_islandIndex [b2WheelJoint.cpp <79:22 79:34>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2WheelJoint.cpp <79:13 79:19>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexB [b2WheelJoint.cpp <80:2 80:9>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2Body::m_islandIndex [b2WheelJoint.cpp <80:22 80:34>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2WheelJoint.cpp <80:13 80:19>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2WheelJoint.cpp <81:17 81:17>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_localCenterA [b2WheelJoint.cpp <81:2 81:15>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Sweep::localCenter [b2WheelJoint.cpp <81:36 81:46>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Sweep b2Body::m_sweep [b2WheelJoint.cpp <81:28 81:34>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2WheelJoint.cpp <81:19 81:25>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2WheelJoint.cpp <82:17 82:17>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_localCenterB [b2WheelJoint.cpp <82:2 82:15>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Sweep::localCenter [b2WheelJoint.cpp <82:36 82:46>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Sweep b2Body::m_sweep [b2WheelJoint.cpp <82:28 82:34>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2WheelJoint.cpp <82:19 82:25>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invMassA [b2WheelJoint.cpp <83:2 83:11>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invMass [b2WheelJoint.cpp <83:24 83:32>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2WheelJoint.cpp <83:15 83:21>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invMassB [b2WheelJoint.cpp <84:2 84:11>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invMass [b2WheelJoint.cpp <84:24 84:32>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2WheelJoint.cpp <84:15 84:21>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invIA [b2WheelJoint.cpp <85:2 85:8>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invI [b2WheelJoint.cpp <85:21 85:26>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2WheelJoint.cpp <85:12 85:18>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invIB [b2WheelJoint.cpp <86:2 86:8>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invI [b2WheelJoint.cpp <86:21 86:26>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2WheelJoint.cpp <86:12 86:18>]
LOCAL_SYMBOL: b2WheelJoint.cpp<88:10> [b2WheelJoint.cpp <88:10 88:11>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <88:2 88:8>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invMassA [b2WheelJoint.cpp <88:15 88:24>]
LOCAL_SYMBOL: b2WheelJoint.cpp<88:27> [b2WheelJoint.cpp <88:27 88:28>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <88:2 88:8>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invMassB [b2WheelJoint.cpp <88:32 88:41>]
LOCAL_SYMBOL: b2WheelJoint.cpp<89:10> [b2WheelJoint.cpp <89:10 89:11>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <89:2 89:8>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invIA [b2WheelJoint.cpp <89:15 89:21>]
LOCAL_SYMBOL: b2WheelJoint.cpp<89:24> [b2WheelJoint.cpp <89:24 89:25>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <89:2 89:8>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invIB [b2WheelJoint.cpp <89:29 89:35>]
LOCAL_SYMBOL: b2WheelJoint.cpp<91:9> [b2WheelJoint.cpp <91:9 91:10>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2WheelJoint.cpp <91:2 91:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2WheelJoint.cpp <91:39 91:39>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2WheelJoint.cpp <91:39 91:39>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2WheelJoint.cpp <91:19 91:27>]
LOCAL_SYMBOL: b2WheelJoint.cpp<77:64> [b2WheelJoint.cpp <91:14 91:17>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexA [b2WheelJoint.cpp <91:29 91:36>]
LOCAL_SYMBOL: b2WheelJoint.cpp<92:10> [b2WheelJoint.cpp <92:10 92:11>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <92:2 92:8>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Position::a [b2WheelJoint.cpp <92:40 92:40>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2WheelJoint.cpp <92:20 92:28>]
LOCAL_SYMBOL: b2WheelJoint.cpp<77:64> [b2WheelJoint.cpp <92:15 92:18>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexA [b2WheelJoint.cpp <92:30 92:37>]
LOCAL_SYMBOL: b2WheelJoint.cpp<93:9> [b2WheelJoint.cpp <93:9 93:10>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2WheelJoint.cpp <93:2 93:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2WheelJoint.cpp <93:40 93:40>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2WheelJoint.cpp <93:40 93:40>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WheelJoint.cpp <93:19 93:28>]
LOCAL_SYMBOL: b2WheelJoint.cpp<77:64> [b2WheelJoint.cpp <93:14 93:17>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexA [b2WheelJoint.cpp <93:30 93:37>]
LOCAL_SYMBOL: b2WheelJoint.cpp<94:10> [b2WheelJoint.cpp <94:10 94:11>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <94:2 94:8>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2WheelJoint.cpp <94:41 94:41>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WheelJoint.cpp <94:20 94:29>]
LOCAL_SYMBOL: b2WheelJoint.cpp<77:64> [b2WheelJoint.cpp <94:15 94:18>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexA [b2WheelJoint.cpp <94:31 94:38>]
LOCAL_SYMBOL: b2WheelJoint.cpp<96:9> [b2WheelJoint.cpp <96:9 96:10>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2WheelJoint.cpp <96:2 96:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2WheelJoint.cpp <96:39 96:39>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2WheelJoint.cpp <96:39 96:39>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2WheelJoint.cpp <96:19 96:27>]
LOCAL_SYMBOL: b2WheelJoint.cpp<77:64> [b2WheelJoint.cpp <96:14 96:17>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexB [b2WheelJoint.cpp <96:29 96:36>]
LOCAL_SYMBOL: b2WheelJoint.cpp<97:10> [b2WheelJoint.cpp <97:10 97:11>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <97:2 97:8>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Position::a [b2WheelJoint.cpp <97:40 97:40>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2WheelJoint.cpp <97:20 97:28>]
LOCAL_SYMBOL: b2WheelJoint.cpp<77:64> [b2WheelJoint.cpp <97:15 97:18>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexB [b2WheelJoint.cpp <97:30 97:37>]
LOCAL_SYMBOL: b2WheelJoint.cpp<98:9> [b2WheelJoint.cpp <98:9 98:10>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2WheelJoint.cpp <98:2 98:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2WheelJoint.cpp <98:40 98:40>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2WheelJoint.cpp <98:40 98:40>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WheelJoint.cpp <98:19 98:28>]
LOCAL_SYMBOL: b2WheelJoint.cpp<77:64> [b2WheelJoint.cpp <98:14 98:17>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexB [b2WheelJoint.cpp <98:30 98:37>]
LOCAL_SYMBOL: b2WheelJoint.cpp<99:10> [b2WheelJoint.cpp <99:10 99:11>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <99:2 99:8>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2WheelJoint.cpp <99:41 99:41>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WheelJoint.cpp <99:20 99:29>]
LOCAL_SYMBOL: b2WheelJoint.cpp<77:64> [b2WheelJoint.cpp <99:15 99:18>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexB [b2WheelJoint.cpp <99:31 99:38>]
LOCAL_SYMBOL: b2WheelJoint.cpp<101:8> [b2WheelJoint.cpp <101:8 101:9>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Rot [b2WheelJoint.cpp <101:2 101:6>]
SYMBOL_FUNCTION void b2Rot::b2Rot(float32)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2WheelJoint.cpp <101:8 101:9>]
LOCAL_SYMBOL: b2WheelJoint.cpp<92:10> [b2WheelJoint.cpp <101:11 101:12>]
LOCAL_SYMBOL: b2WheelJoint.cpp<101:16> [b2WheelJoint.cpp <101:16 101:17>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Rot [b2WheelJoint.cpp <101:2 101:6>]
SYMBOL_FUNCTION void b2Rot::b2Rot(float32)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2WheelJoint.cpp <101:16 101:17>]
LOCAL_SYMBOL: b2WheelJoint.cpp<97:10> [b2WheelJoint.cpp <101:19 101:20>]
LOCAL_SYMBOL: b2WheelJoint.cpp<104:9> [b2WheelJoint.cpp <104:9 104:10>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2WheelJoint.cpp <104:2 104:7>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2WheelJoint.cpp <104:14 104:18>]
LOCAL_SYMBOL: b2WheelJoint.cpp<101:8> [b2WheelJoint.cpp <104:20 104:21>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <104:39 104:39>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_localAnchorA [b2WheelJoint.cpp <104:24 104:37>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_localCenterA [b2WheelJoint.cpp <104:41 104:54>]
LOCAL_SYMBOL: b2WheelJoint.cpp<105:9> [b2WheelJoint.cpp <105:9 105:10>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2WheelJoint.cpp <105:2 105:7>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2WheelJoint.cpp <105:14 105:18>]
LOCAL_SYMBOL: b2WheelJoint.cpp<101:16> [b2WheelJoint.cpp <105:20 105:21>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <105:39 105:39>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_localAnchorB [b2WheelJoint.cpp <105:24 105:37>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_localCenterB [b2WheelJoint.cpp <105:41 105:54>]
LOCAL_SYMBOL: b2WheelJoint.cpp<106:9> [b2WheelJoint.cpp <106:9 106:9>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2WheelJoint.cpp <106:2 106:7>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <106:26 106:26>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <106:21 106:21>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <106:16 106:16>]
LOCAL_SYMBOL: b2WheelJoint.cpp<96:9> [b2WheelJoint.cpp <106:13 106:14>]
LOCAL_SYMBOL: b2WheelJoint.cpp<105:9> [b2WheelJoint.cpp <106:18 106:19>]
LOCAL_SYMBOL: b2WheelJoint.cpp<91:9> [b2WheelJoint.cpp <106:23 106:24>]
LOCAL_SYMBOL: b2WheelJoint.cpp<104:9> [b2WheelJoint.cpp <106:28 106:29>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2WheelJoint.cpp <110:8 110:8>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_ay [b2WheelJoint.cpp <110:3 110:6>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2WheelJoint.cpp <110:10 110:14>]
LOCAL_SYMBOL: b2WheelJoint.cpp<101:8> [b2WheelJoint.cpp <110:16 110:17>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_localYAxisA [b2WheelJoint.cpp <110:20 110:32>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sAy [b2WheelJoint.cpp <111:3 111:7>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <111:11 111:17>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <111:21 111:21>]
LOCAL_SYMBOL: b2WheelJoint.cpp<106:9> [b2WheelJoint.cpp <111:19 111:19>]
LOCAL_SYMBOL: b2WheelJoint.cpp<104:9> [b2WheelJoint.cpp <111:23 111:24>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_ay [b2WheelJoint.cpp <111:27 111:30>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sBy [b2WheelJoint.cpp <112:3 112:7>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <112:11 112:17>]
LOCAL_SYMBOL: b2WheelJoint.cpp<105:9> [b2WheelJoint.cpp <112:19 112:20>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_ay [b2WheelJoint.cpp <112:23 112:26>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_mass [b2WheelJoint.cpp <114:3 114:8>]
LOCAL_SYMBOL: b2WheelJoint.cpp<88:10> [b2WheelJoint.cpp <114:12 114:13>]
LOCAL_SYMBOL: b2WheelJoint.cpp<88:27> [b2WheelJoint.cpp <114:17 114:18>]
LOCAL_SYMBOL: b2WheelJoint.cpp<89:10> [b2WheelJoint.cpp <114:22 114:23>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sAy [b2WheelJoint.cpp <114:27 114:31>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sAy [b2WheelJoint.cpp <114:35 114:39>]
LOCAL_SYMBOL: b2WheelJoint.cpp<89:24> [b2WheelJoint.cpp <114:43 114:44>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sBy [b2WheelJoint.cpp <114:48 114:52>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sBy [b2WheelJoint.cpp <114:56 114:60>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_mass [b2WheelJoint.cpp <116:7 116:12>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_mass [b2WheelJoint.cpp <118:4 118:9>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_mass [b2WheelJoint.cpp <118:20 118:25>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_springMass [b2WheelJoint.cpp <123:2 123:13>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_bias [b2WheelJoint.cpp <124:2 124:7>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_gamma [b2WheelJoint.cpp <125:2 125:8>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_frequencyHz [b2WheelJoint.cpp <126:6 126:18>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2WheelJoint.cpp <128:8 128:8>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_ax [b2WheelJoint.cpp <128:3 128:6>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2WheelJoint.cpp <128:10 128:14>]
LOCAL_SYMBOL: b2WheelJoint.cpp<101:8> [b2WheelJoint.cpp <128:16 128:17>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_localXAxisA [b2WheelJoint.cpp <128:20 128:32>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sAx [b2WheelJoint.cpp <129:3 129:7>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <129:11 129:17>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <129:21 129:21>]
LOCAL_SYMBOL: b2WheelJoint.cpp<106:9> [b2WheelJoint.cpp <129:19 129:19>]
LOCAL_SYMBOL: b2WheelJoint.cpp<104:9> [b2WheelJoint.cpp <129:23 129:24>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_ax [b2WheelJoint.cpp <129:27 129:30>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sBx [b2WheelJoint.cpp <130:3 130:7>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <130:11 130:17>]
LOCAL_SYMBOL: b2WheelJoint.cpp<105:9> [b2WheelJoint.cpp <130:19 130:20>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_ax [b2WheelJoint.cpp <130:23 130:26>]
LOCAL_SYMBOL: b2WheelJoint.cpp<132:11> [b2WheelJoint.cpp <132:11 132:17>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <132:3 132:9>]
LOCAL_SYMBOL: b2WheelJoint.cpp<88:10> [b2WheelJoint.cpp <132:21 132:22>]
LOCAL_SYMBOL: b2WheelJoint.cpp<88:27> [b2WheelJoint.cpp <132:26 132:27>]
LOCAL_SYMBOL: b2WheelJoint.cpp<89:10> [b2WheelJoint.cpp <132:31 132:32>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sAx [b2WheelJoint.cpp <132:36 132:40>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sAx [b2WheelJoint.cpp <132:44 132:48>]
LOCAL_SYMBOL: b2WheelJoint.cpp<89:24> [b2WheelJoint.cpp <132:52 132:53>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sBx [b2WheelJoint.cpp <132:57 132:61>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sBx [b2WheelJoint.cpp <132:65 132:69>]
LOCAL_SYMBOL: b2WheelJoint.cpp<132:11> [b2WheelJoint.cpp <134:7 134:13>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_springMass [b2WheelJoint.cpp <136:4 136:15>]
LOCAL_SYMBOL: b2WheelJoint.cpp<132:11> [b2WheelJoint.cpp <136:26 136:32>]
LOCAL_SYMBOL: b2WheelJoint.cpp<138:12> [b2WheelJoint.cpp <138:12 138:12>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <138:4 138:10>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <138:16 138:20>]
LOCAL_SYMBOL: b2WheelJoint.cpp<106:9> [b2WheelJoint.cpp <138:22 138:22>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_ax [b2WheelJoint.cpp <138:25 138:28>]
LOCAL_SYMBOL: b2WheelJoint.cpp<141:12> [b2WheelJoint.cpp <141:12 141:16>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <141:4 141:10>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_frequencyHz [b2WheelJoint.cpp <141:35 141:47>]
LOCAL_SYMBOL: b2WheelJoint.cpp<144:12> [b2WheelJoint.cpp <144:12 144:15>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <144:4 144:10>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_springMass [b2WheelJoint.cpp <144:26 144:37>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_dampingRatio [b2WheelJoint.cpp <144:41 144:54>]
LOCAL_SYMBOL: b2WheelJoint.cpp<141:12> [b2WheelJoint.cpp <144:58 144:62>]
LOCAL_SYMBOL: b2WheelJoint.cpp<147:12> [b2WheelJoint.cpp <147:12 147:12>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <147:4 147:10>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_springMass [b2WheelJoint.cpp <147:16 147:27>]
LOCAL_SYMBOL: b2WheelJoint.cpp<141:12> [b2WheelJoint.cpp <147:31 147:35>]
LOCAL_SYMBOL: b2WheelJoint.cpp<141:12> [b2WheelJoint.cpp <147:39 147:43>]
LOCAL_SYMBOL: b2WheelJoint.cpp<150:12> [b2WheelJoint.cpp <150:12 150:12>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <150:4 150:10>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2TimeStep::dt [b2WheelJoint.cpp <150:26 150:27>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2TimeStep b2SolverData::step [b2WheelJoint.cpp <150:21 150:24>]
LOCAL_SYMBOL: b2WheelJoint.cpp<77:64> [b2WheelJoint.cpp <150:16 150:19>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_gamma [b2WheelJoint.cpp <151:4 151:10>]
LOCAL_SYMBOL: b2WheelJoint.cpp<150:12> [b2WheelJoint.cpp <151:14 151:14>]
LOCAL_SYMBOL: b2WheelJoint.cpp<144:12> [b2WheelJoint.cpp <151:19 151:22>]
LOCAL_SYMBOL: b2WheelJoint.cpp<150:12> [b2WheelJoint.cpp <151:26 151:26>]
LOCAL_SYMBOL: b2WheelJoint.cpp<147:12> [b2WheelJoint.cpp <151:30 151:30>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_gamma [b2WheelJoint.cpp <152:8 152:14>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_gamma [b2WheelJoint.cpp <154:5 154:11>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_gamma [b2WheelJoint.cpp <154:22 154:28>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_bias [b2WheelJoint.cpp <157:4 157:9>]
LOCAL_SYMBOL: b2WheelJoint.cpp<138:12> [b2WheelJoint.cpp <157:13 157:13>]
LOCAL_SYMBOL: b2WheelJoint.cpp<150:12> [b2WheelJoint.cpp <157:17 157:17>]
LOCAL_SYMBOL: b2WheelJoint.cpp<147:12> [b2WheelJoint.cpp <157:21 157:21>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_gamma [b2WheelJoint.cpp <157:25 157:31>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_springMass [b2WheelJoint.cpp <159:4 159:15>]
LOCAL_SYMBOL: b2WheelJoint.cpp<132:11> [b2WheelJoint.cpp <159:19 159:25>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_gamma [b2WheelJoint.cpp <159:29 159:35>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_springMass [b2WheelJoint.cpp <160:8 160:19>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_springMass [b2WheelJoint.cpp <162:5 162:16>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_springMass [b2WheelJoint.cpp <162:27 162:38>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_springImpulse [b2WheelJoint.cpp <168:3 168:17>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> bool b2WheelJoint::m_enableMotor [b2WheelJoint.cpp <172:6 172:18>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_motorMass [b2WheelJoint.cpp <174:3 174:13>]
LOCAL_SYMBOL: b2WheelJoint.cpp<89:10> [b2WheelJoint.cpp <174:17 174:18>]
LOCAL_SYMBOL: b2WheelJoint.cpp<89:24> [b2WheelJoint.cpp <174:22 174:23>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_motorMass [b2WheelJoint.cpp <175:7 175:17>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_motorMass [b2WheelJoint.cpp <177:4 177:14>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_motorMass [b2WheelJoint.cpp <177:25 177:35>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_motorMass [b2WheelJoint.cpp <182:3 182:13>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_motorImpulse [b2WheelJoint.cpp <183:3 183:16>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> bool b2TimeStep::warmStarting [b2WheelJoint.cpp <186:16 186:27>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2TimeStep b2SolverData::step [b2WheelJoint.cpp <186:11 186:14>]
LOCAL_SYMBOL: b2WheelJoint.cpp<77:64> [b2WheelJoint.cpp <186:6 186:9>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_impulse [b2WheelJoint.cpp <189:3 189:11>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2TimeStep::dtRatio [b2WheelJoint.cpp <189:26 189:32>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2TimeStep b2SolverData::step [b2WheelJoint.cpp <189:21 189:24>]
LOCAL_SYMBOL: b2WheelJoint.cpp<77:64> [b2WheelJoint.cpp <189:16 189:19>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_springImpulse [b2WheelJoint.cpp <190:3 190:17>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2TimeStep::dtRatio [b2WheelJoint.cpp <190:32 190:38>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2TimeStep b2SolverData::step [b2WheelJoint.cpp <190:27 190:30>]
LOCAL_SYMBOL: b2WheelJoint.cpp<77:64> [b2WheelJoint.cpp <190:22 190:25>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_motorImpulse [b2WheelJoint.cpp <191:3 191:16>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2TimeStep::dtRatio [b2WheelJoint.cpp <191:31 191:37>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2TimeStep b2SolverData::step [b2WheelJoint.cpp <191:26 191:29>]
LOCAL_SYMBOL: b2WheelJoint.cpp<77:64> [b2WheelJoint.cpp <191:21 191:24>]
LOCAL_SYMBOL: b2WheelJoint.cpp<193:10> [b2WheelJoint.cpp <193:10 193:10>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2WheelJoint.cpp <193:3 193:8>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <193:31 193:31>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WheelJoint.cpp <193:24 193:24>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_impulse [b2WheelJoint.cpp <193:14 193:22>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_ay [b2WheelJoint.cpp <193:26 193:29>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WheelJoint.cpp <193:49 193:49>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_springImpulse [b2WheelJoint.cpp <193:33 193:47>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_ax [b2WheelJoint.cpp <193:51 193:54>]
LOCAL_SYMBOL: b2WheelJoint.cpp<194:11> [b2WheelJoint.cpp <194:11 194:12>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <194:3 194:9>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_impulse [b2WheelJoint.cpp <194:16 194:24>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sAy [b2WheelJoint.cpp <194:28 194:32>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_springImpulse [b2WheelJoint.cpp <194:36 194:50>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sAx [b2WheelJoint.cpp <194:54 194:58>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_motorImpulse [b2WheelJoint.cpp <194:62 194:75>]
LOCAL_SYMBOL: b2WheelJoint.cpp<195:11> [b2WheelJoint.cpp <195:11 195:12>]
REFERENCE_TYPE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <195:3 195:9>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_impulse [b2WheelJoint.cpp <195:16 195:24>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sBy [b2WheelJoint.cpp <195:28 195:32>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_springImpulse [b2WheelJoint.cpp <195:36 195:50>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sBx [b2WheelJoint.cpp <195:54 195:58>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_motorImpulse [b2WheelJoint.cpp <195:62 195:75>]
SYMBOL_FUNCTION void b2Vec2::operator-=(const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2WheelJoint.cpp <197:6 197:7>]
LOCAL_SYMBOL: b2WheelJoint.cpp<93:9> [b2WheelJoint.cpp <197:3 197:4>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WheelJoint.cpp <197:20 197:20>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invMassA [b2WheelJoint.cpp <197:9 197:18>]
LOCAL_SYMBOL: b2WheelJoint.cpp<193:10> [b2WheelJoint.cpp <197:22 197:22>]
LOCAL_SYMBOL: b2WheelJoint.cpp<94:10> [b2WheelJoint.cpp <198:3 198:4>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invIA [b2WheelJoint.cpp <198:9 198:15>]
LOCAL_SYMBOL: b2WheelJoint.cpp<194:11> [b2WheelJoint.cpp <198:19 198:20>]
SYMBOL_FUNCTION void b2Vec2::operator+=(const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2WheelJoint.cpp <200:6 200:7>]
LOCAL_SYMBOL: b2WheelJoint.cpp<98:9> [b2WheelJoint.cpp <200:3 200:4>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WheelJoint.cpp <200:20 200:20>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invMassB [b2WheelJoint.cpp <200:9 200:18>]
LOCAL_SYMBOL: b2WheelJoint.cpp<193:10> [b2WheelJoint.cpp <200:22 200:22>]
LOCAL_SYMBOL: b2WheelJoint.cpp<99:10> [b2WheelJoint.cpp <201:3 201:4>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invIB [b2WheelJoint.cpp <201:9 201:15>]
LOCAL_SYMBOL: b2WheelJoint.cpp<195:11> [b2WheelJoint.cpp <201:19 201:20>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_impulse [b2WheelJoint.cpp <205:3 205:11>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_springImpulse [b2WheelJoint.cpp <206:3 206:17>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_motorImpulse [b2WheelJoint.cpp <207:3 207:16>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2WheelJoint.cpp <210:30 210:30>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2WheelJoint.cpp <210:28 210:28>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WheelJoint.cpp <210:7 210:16>]
LOCAL_SYMBOL: b2WheelJoint.cpp<77:64> [b2WheelJoint.cpp <210:2 210:5>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexA [b2WheelJoint.cpp <210:18 210:25>]
LOCAL_SYMBOL: b2WheelJoint.cpp<93:9> [b2WheelJoint.cpp <210:32 210:33>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2WheelJoint.cpp <211:28 211:28>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WheelJoint.cpp <211:7 211:16>]
LOCAL_SYMBOL: b2WheelJoint.cpp<77:64> [b2WheelJoint.cpp <211:2 211:5>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexA [b2WheelJoint.cpp <211:18 211:25>]
LOCAL_SYMBOL: b2WheelJoint.cpp<94:10> [b2WheelJoint.cpp <211:32 211:33>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2WheelJoint.cpp <212:30 212:30>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2WheelJoint.cpp <212:28 212:28>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WheelJoint.cpp <212:7 212:16>]
LOCAL_SYMBOL: b2WheelJoint.cpp<77:64> [b2WheelJoint.cpp <212:2 212:5>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexB [b2WheelJoint.cpp <212:18 212:25>]
LOCAL_SYMBOL: b2WheelJoint.cpp<98:9> [b2WheelJoint.cpp <212:32 212:33>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2WheelJoint.cpp <213:28 213:28>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WheelJoint.cpp <213:7 213:16>]
LOCAL_SYMBOL: b2WheelJoint.cpp<77:64> [b2WheelJoint.cpp <213:2 213:5>]
REFERENCE_USAGE void b2WheelJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexB [b2WheelJoint.cpp <213:18 213:25>]
LOCAL_SYMBOL: b2WheelJoint.cpp<99:10> [b2WheelJoint.cpp <213:32 213:33>]
SYMBOL_METHOD protected void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) [b2WheelJoint.cpp <216:1 <216:20 216:43> 278:1>]
SYMBOL_FUNCTION void b2Joint::SolveVelocityConstraints(const b2SolverData &)
REFERENCE_OVERRIDE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Joint::SolveVelocityConstraints(const b2SolverData &) [b2WheelJoint.cpp <216:20 216:43>]
SYMBOL_CLASS b2WheelJoint
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> void [b2WheelJoint.cpp <216:1 216:4>]
LOCAL_SYMBOL: b2WheelJoint.cpp<216:65> [b2WheelJoint.cpp <216:65 216:68>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2SolverData [b2WheelJoint.cpp <216:51 216:62>]
LOCAL_SYMBOL: b2WheelJoint.cpp<218:10> [b2WheelJoint.cpp <218:10 218:11>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <218:2 218:8>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invMassA [b2WheelJoint.cpp <218:15 218:24>]
LOCAL_SYMBOL: b2WheelJoint.cpp<218:27> [b2WheelJoint.cpp <218:27 218:28>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <218:2 218:8>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invMassB [b2WheelJoint.cpp <218:32 218:41>]
LOCAL_SYMBOL: b2WheelJoint.cpp<219:10> [b2WheelJoint.cpp <219:10 219:11>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <219:2 219:8>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invIA [b2WheelJoint.cpp <219:15 219:21>]
LOCAL_SYMBOL: b2WheelJoint.cpp<219:24> [b2WheelJoint.cpp <219:24 219:25>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <219:2 219:8>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invIB [b2WheelJoint.cpp <219:29 219:35>]
LOCAL_SYMBOL: b2WheelJoint.cpp<221:9> [b2WheelJoint.cpp <221:9 221:10>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2WheelJoint.cpp <221:2 221:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2WheelJoint.cpp <221:40 221:40>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2WheelJoint.cpp <221:40 221:40>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WheelJoint.cpp <221:19 221:28>]
LOCAL_SYMBOL: b2WheelJoint.cpp<216:65> [b2WheelJoint.cpp <221:14 221:17>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexA [b2WheelJoint.cpp <221:30 221:37>]
LOCAL_SYMBOL: b2WheelJoint.cpp<222:10> [b2WheelJoint.cpp <222:10 222:11>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <222:2 222:8>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2WheelJoint.cpp <222:41 222:41>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WheelJoint.cpp <222:20 222:29>]
LOCAL_SYMBOL: b2WheelJoint.cpp<216:65> [b2WheelJoint.cpp <222:15 222:18>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexA [b2WheelJoint.cpp <222:31 222:38>]
LOCAL_SYMBOL: b2WheelJoint.cpp<223:9> [b2WheelJoint.cpp <223:9 223:10>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2WheelJoint.cpp <223:2 223:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2WheelJoint.cpp <223:40 223:40>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2WheelJoint.cpp <223:40 223:40>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WheelJoint.cpp <223:19 223:28>]
LOCAL_SYMBOL: b2WheelJoint.cpp<216:65> [b2WheelJoint.cpp <223:14 223:17>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexB [b2WheelJoint.cpp <223:30 223:37>]
LOCAL_SYMBOL: b2WheelJoint.cpp<224:10> [b2WheelJoint.cpp <224:10 224:11>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <224:2 224:8>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2WheelJoint.cpp <224:41 224:41>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WheelJoint.cpp <224:20 224:29>]
LOCAL_SYMBOL: b2WheelJoint.cpp<216:65> [b2WheelJoint.cpp <224:15 224:18>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexB [b2WheelJoint.cpp <224:31 224:38>]
LOCAL_SYMBOL: b2WheelJoint.cpp<228:11> [b2WheelJoint.cpp <228:11 228:14>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <228:3 228:9>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <228:18 228:22>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_ax [b2WheelJoint.cpp <228:24 228:27>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <228:33 228:33>]
LOCAL_SYMBOL: b2WheelJoint.cpp<223:9> [b2WheelJoint.cpp <228:30 228:31>]
LOCAL_SYMBOL: b2WheelJoint.cpp<221:9> [b2WheelJoint.cpp <228:35 228:36>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sBx [b2WheelJoint.cpp <228:41 228:45>]
LOCAL_SYMBOL: b2WheelJoint.cpp<224:10> [b2WheelJoint.cpp <228:49 228:50>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sAx [b2WheelJoint.cpp <228:54 228:58>]
LOCAL_SYMBOL: b2WheelJoint.cpp<222:10> [b2WheelJoint.cpp <228:62 228:63>]
LOCAL_SYMBOL: b2WheelJoint.cpp<229:11> [b2WheelJoint.cpp <229:11 229:17>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <229:3 229:9>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_springMass [b2WheelJoint.cpp <229:22 229:33>]
LOCAL_SYMBOL: b2WheelJoint.cpp<228:11> [b2WheelJoint.cpp <229:38 229:41>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_bias [b2WheelJoint.cpp <229:45 229:50>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_gamma [b2WheelJoint.cpp <229:54 229:60>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_springImpulse [b2WheelJoint.cpp <229:64 229:78>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_springImpulse [b2WheelJoint.cpp <230:3 230:17>]
LOCAL_SYMBOL: b2WheelJoint.cpp<229:11> [b2WheelJoint.cpp <230:22 230:28>]
LOCAL_SYMBOL: b2WheelJoint.cpp<232:10> [b2WheelJoint.cpp <232:10 232:10>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2WheelJoint.cpp <232:3 232:8>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WheelJoint.cpp <232:22 232:22>]
LOCAL_SYMBOL: b2WheelJoint.cpp<229:11> [b2WheelJoint.cpp <232:14 232:20>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_ax [b2WheelJoint.cpp <232:24 232:27>]
LOCAL_SYMBOL: b2WheelJoint.cpp<233:11> [b2WheelJoint.cpp <233:11 233:12>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <233:3 233:9>]
LOCAL_SYMBOL: b2WheelJoint.cpp<229:11> [b2WheelJoint.cpp <233:16 233:22>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sAx [b2WheelJoint.cpp <233:26 233:30>]
LOCAL_SYMBOL: b2WheelJoint.cpp<234:11> [b2WheelJoint.cpp <234:11 234:12>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <234:3 234:9>]
LOCAL_SYMBOL: b2WheelJoint.cpp<229:11> [b2WheelJoint.cpp <234:16 234:22>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sBx [b2WheelJoint.cpp <234:26 234:30>]
SYMBOL_FUNCTION void b2Vec2::operator-=(const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2WheelJoint.cpp <236:6 236:7>]
LOCAL_SYMBOL: b2WheelJoint.cpp<221:9> [b2WheelJoint.cpp <236:3 236:4>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WheelJoint.cpp <236:12 236:12>]
LOCAL_SYMBOL: b2WheelJoint.cpp<218:10> [b2WheelJoint.cpp <236:9 236:10>]
LOCAL_SYMBOL: b2WheelJoint.cpp<232:10> [b2WheelJoint.cpp <236:14 236:14>]
LOCAL_SYMBOL: b2WheelJoint.cpp<222:10> [b2WheelJoint.cpp <237:3 237:4>]
LOCAL_SYMBOL: b2WheelJoint.cpp<219:10> [b2WheelJoint.cpp <237:9 237:10>]
LOCAL_SYMBOL: b2WheelJoint.cpp<233:11> [b2WheelJoint.cpp <237:14 237:15>]
SYMBOL_FUNCTION void b2Vec2::operator+=(const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2WheelJoint.cpp <239:6 239:7>]
LOCAL_SYMBOL: b2WheelJoint.cpp<223:9> [b2WheelJoint.cpp <239:3 239:4>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WheelJoint.cpp <239:12 239:12>]
LOCAL_SYMBOL: b2WheelJoint.cpp<218:27> [b2WheelJoint.cpp <239:9 239:10>]
LOCAL_SYMBOL: b2WheelJoint.cpp<232:10> [b2WheelJoint.cpp <239:14 239:14>]
LOCAL_SYMBOL: b2WheelJoint.cpp<224:10> [b2WheelJoint.cpp <240:3 240:4>]
LOCAL_SYMBOL: b2WheelJoint.cpp<219:24> [b2WheelJoint.cpp <240:9 240:10>]
LOCAL_SYMBOL: b2WheelJoint.cpp<234:11> [b2WheelJoint.cpp <240:14 240:15>]
LOCAL_SYMBOL: b2WheelJoint.cpp<245:11> [b2WheelJoint.cpp <245:11 245:14>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <245:3 245:9>]
LOCAL_SYMBOL: b2WheelJoint.cpp<224:10> [b2WheelJoint.cpp <245:18 245:19>]
LOCAL_SYMBOL: b2WheelJoint.cpp<222:10> [b2WheelJoint.cpp <245:23 245:24>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_motorSpeed [b2WheelJoint.cpp <245:28 245:39>]
LOCAL_SYMBOL: b2WheelJoint.cpp<246:11> [b2WheelJoint.cpp <246:11 246:17>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <246:3 246:9>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_motorMass [b2WheelJoint.cpp <246:22 246:32>]
LOCAL_SYMBOL: b2WheelJoint.cpp<245:11> [b2WheelJoint.cpp <246:36 246:39>]
LOCAL_SYMBOL: b2WheelJoint.cpp<248:11> [b2WheelJoint.cpp <248:11 248:20>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <248:3 248:9>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_motorImpulse [b2WheelJoint.cpp <248:24 248:37>]
LOCAL_SYMBOL: b2WheelJoint.cpp<249:11> [b2WheelJoint.cpp <249:11 249:20>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <249:3 249:9>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2TimeStep::dt [b2WheelJoint.cpp <249:34 249:35>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2TimeStep b2SolverData::step [b2WheelJoint.cpp <249:29 249:32>]
LOCAL_SYMBOL: b2WheelJoint.cpp<216:65> [b2WheelJoint.cpp <249:24 249:27>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_maxMotorTorque [b2WheelJoint.cpp <249:39 249:54>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_motorImpulse [b2WheelJoint.cpp <250:3 250:16>]
SYMBOL_FUNCTION float b2Clamp<float>(float, float, float)
REFERENCE_CALL void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float b2Clamp<float>(float, float, float) [b2WheelJoint.cpp <250:20 250:26>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_motorImpulse [b2WheelJoint.cpp <250:28 250:41>]
LOCAL_SYMBOL: b2WheelJoint.cpp<246:11> [b2WheelJoint.cpp <250:45 250:51>]
LOCAL_SYMBOL: b2WheelJoint.cpp<249:11> [b2WheelJoint.cpp <250:55 250:64>]
LOCAL_SYMBOL: b2WheelJoint.cpp<249:11> [b2WheelJoint.cpp <250:67 250:76>]
LOCAL_SYMBOL: b2WheelJoint.cpp<246:11> [b2WheelJoint.cpp <251:3 251:9>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_motorImpulse [b2WheelJoint.cpp <251:13 251:26>]
LOCAL_SYMBOL: b2WheelJoint.cpp<248:11> [b2WheelJoint.cpp <251:30 251:39>]
LOCAL_SYMBOL: b2WheelJoint.cpp<222:10> [b2WheelJoint.cpp <253:3 253:4>]
LOCAL_SYMBOL: b2WheelJoint.cpp<219:10> [b2WheelJoint.cpp <253:9 253:10>]
LOCAL_SYMBOL: b2WheelJoint.cpp<246:11> [b2WheelJoint.cpp <253:14 253:20>]
LOCAL_SYMBOL: b2WheelJoint.cpp<224:10> [b2WheelJoint.cpp <254:3 254:4>]
LOCAL_SYMBOL: b2WheelJoint.cpp<219:24> [b2WheelJoint.cpp <254:9 254:10>]
LOCAL_SYMBOL: b2WheelJoint.cpp<246:11> [b2WheelJoint.cpp <254:14 254:20>]
LOCAL_SYMBOL: b2WheelJoint.cpp<259:11> [b2WheelJoint.cpp <259:11 259:14>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <259:3 259:9>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <259:18 259:22>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_ay [b2WheelJoint.cpp <259:24 259:27>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <259:33 259:33>]
LOCAL_SYMBOL: b2WheelJoint.cpp<223:9> [b2WheelJoint.cpp <259:30 259:31>]
LOCAL_SYMBOL: b2WheelJoint.cpp<221:9> [b2WheelJoint.cpp <259:35 259:36>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sBy [b2WheelJoint.cpp <259:41 259:45>]
LOCAL_SYMBOL: b2WheelJoint.cpp<224:10> [b2WheelJoint.cpp <259:49 259:50>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sAy [b2WheelJoint.cpp <259:54 259:58>]
LOCAL_SYMBOL: b2WheelJoint.cpp<222:10> [b2WheelJoint.cpp <259:62 259:63>]
LOCAL_SYMBOL: b2WheelJoint.cpp<260:11> [b2WheelJoint.cpp <260:11 260:17>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <260:3 260:9>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_mass [b2WheelJoint.cpp <260:22 260:27>]
LOCAL_SYMBOL: b2WheelJoint.cpp<259:11> [b2WheelJoint.cpp <260:31 260:34>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_impulse [b2WheelJoint.cpp <261:3 261:11>]
LOCAL_SYMBOL: b2WheelJoint.cpp<260:11> [b2WheelJoint.cpp <261:16 261:22>]
LOCAL_SYMBOL: b2WheelJoint.cpp<263:10> [b2WheelJoint.cpp <263:10 263:10>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2WheelJoint.cpp <263:3 263:8>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WheelJoint.cpp <263:22 263:22>]
LOCAL_SYMBOL: b2WheelJoint.cpp<260:11> [b2WheelJoint.cpp <263:14 263:20>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_ay [b2WheelJoint.cpp <263:24 263:27>]
LOCAL_SYMBOL: b2WheelJoint.cpp<264:11> [b2WheelJoint.cpp <264:11 264:12>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <264:3 264:9>]
LOCAL_SYMBOL: b2WheelJoint.cpp<260:11> [b2WheelJoint.cpp <264:16 264:22>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sAy [b2WheelJoint.cpp <264:26 264:30>]
LOCAL_SYMBOL: b2WheelJoint.cpp<265:11> [b2WheelJoint.cpp <265:11 265:12>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <265:3 265:9>]
LOCAL_SYMBOL: b2WheelJoint.cpp<260:11> [b2WheelJoint.cpp <265:16 265:22>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sBy [b2WheelJoint.cpp <265:26 265:30>]
SYMBOL_FUNCTION void b2Vec2::operator-=(const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2WheelJoint.cpp <267:6 267:7>]
LOCAL_SYMBOL: b2WheelJoint.cpp<221:9> [b2WheelJoint.cpp <267:3 267:4>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WheelJoint.cpp <267:12 267:12>]
LOCAL_SYMBOL: b2WheelJoint.cpp<218:10> [b2WheelJoint.cpp <267:9 267:10>]
LOCAL_SYMBOL: b2WheelJoint.cpp<263:10> [b2WheelJoint.cpp <267:14 267:14>]
LOCAL_SYMBOL: b2WheelJoint.cpp<222:10> [b2WheelJoint.cpp <268:3 268:4>]
LOCAL_SYMBOL: b2WheelJoint.cpp<219:10> [b2WheelJoint.cpp <268:9 268:10>]
LOCAL_SYMBOL: b2WheelJoint.cpp<264:11> [b2WheelJoint.cpp <268:14 268:15>]
SYMBOL_FUNCTION void b2Vec2::operator+=(const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2WheelJoint.cpp <270:6 270:7>]
LOCAL_SYMBOL: b2WheelJoint.cpp<223:9> [b2WheelJoint.cpp <270:3 270:4>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WheelJoint.cpp <270:12 270:12>]
LOCAL_SYMBOL: b2WheelJoint.cpp<218:27> [b2WheelJoint.cpp <270:9 270:10>]
LOCAL_SYMBOL: b2WheelJoint.cpp<263:10> [b2WheelJoint.cpp <270:14 270:14>]
LOCAL_SYMBOL: b2WheelJoint.cpp<224:10> [b2WheelJoint.cpp <271:3 271:4>]
LOCAL_SYMBOL: b2WheelJoint.cpp<219:24> [b2WheelJoint.cpp <271:9 271:10>]
LOCAL_SYMBOL: b2WheelJoint.cpp<265:11> [b2WheelJoint.cpp <271:14 271:15>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2WheelJoint.cpp <274:30 274:30>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2WheelJoint.cpp <274:28 274:28>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WheelJoint.cpp <274:7 274:16>]
LOCAL_SYMBOL: b2WheelJoint.cpp<216:65> [b2WheelJoint.cpp <274:2 274:5>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexA [b2WheelJoint.cpp <274:18 274:25>]
LOCAL_SYMBOL: b2WheelJoint.cpp<221:9> [b2WheelJoint.cpp <274:32 274:33>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2WheelJoint.cpp <275:28 275:28>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WheelJoint.cpp <275:7 275:16>]
LOCAL_SYMBOL: b2WheelJoint.cpp<216:65> [b2WheelJoint.cpp <275:2 275:5>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexA [b2WheelJoint.cpp <275:18 275:25>]
LOCAL_SYMBOL: b2WheelJoint.cpp<222:10> [b2WheelJoint.cpp <275:32 275:33>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2WheelJoint.cpp <276:30 276:30>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2WheelJoint.cpp <276:28 276:28>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WheelJoint.cpp <276:7 276:16>]
LOCAL_SYMBOL: b2WheelJoint.cpp<216:65> [b2WheelJoint.cpp <276:2 276:5>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexB [b2WheelJoint.cpp <276:18 276:25>]
LOCAL_SYMBOL: b2WheelJoint.cpp<223:9> [b2WheelJoint.cpp <276:32 276:33>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2WheelJoint.cpp <277:28 277:28>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2WheelJoint.cpp <277:7 277:16>]
LOCAL_SYMBOL: b2WheelJoint.cpp<216:65> [b2WheelJoint.cpp <277:2 277:5>]
REFERENCE_USAGE void b2WheelJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexB [b2WheelJoint.cpp <277:18 277:25>]
LOCAL_SYMBOL: b2WheelJoint.cpp<224:10> [b2WheelJoint.cpp <277:32 277:33>]
SYMBOL_METHOD protected bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) [b2WheelJoint.cpp <280:1 <280:20 280:43> 327:1>]
SYMBOL_FUNCTION bool b2Joint::SolvePositionConstraints(const b2SolverData &)
REFERENCE_OVERRIDE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> bool b2Joint::SolvePositionConstraints(const b2SolverData &) [b2WheelJoint.cpp <280:20 280:43>]
SYMBOL_CLASS b2WheelJoint
SYMBOL_BUILTIN_TYPE bool
REFERENCE_TYPE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> bool [b2WheelJoint.cpp <280:1 280:4>]
LOCAL_SYMBOL: b2WheelJoint.cpp<280:65> [b2WheelJoint.cpp <280:65 280:68>]
REFERENCE_TYPE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2SolverData [b2WheelJoint.cpp <280:51 280:62>]
LOCAL_SYMBOL: b2WheelJoint.cpp<282:9> [b2WheelJoint.cpp <282:9 282:10>]
REFERENCE_TYPE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2WheelJoint.cpp <282:2 282:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2WheelJoint.cpp <282:39 282:39>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2WheelJoint.cpp <282:39 282:39>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2WheelJoint.cpp <282:19 282:27>]
LOCAL_SYMBOL: b2WheelJoint.cpp<280:65> [b2WheelJoint.cpp <282:14 282:17>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexA [b2WheelJoint.cpp <282:29 282:36>]
LOCAL_SYMBOL: b2WheelJoint.cpp<283:10> [b2WheelJoint.cpp <283:10 283:11>]
REFERENCE_TYPE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <283:2 283:8>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2WheelJoint.cpp <283:40 283:40>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2WheelJoint.cpp <283:20 283:28>]
LOCAL_SYMBOL: b2WheelJoint.cpp<280:65> [b2WheelJoint.cpp <283:15 283:18>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexA [b2WheelJoint.cpp <283:30 283:37>]
LOCAL_SYMBOL: b2WheelJoint.cpp<284:9> [b2WheelJoint.cpp <284:9 284:10>]
REFERENCE_TYPE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2WheelJoint.cpp <284:2 284:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2WheelJoint.cpp <284:39 284:39>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2WheelJoint.cpp <284:39 284:39>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2WheelJoint.cpp <284:19 284:27>]
LOCAL_SYMBOL: b2WheelJoint.cpp<280:65> [b2WheelJoint.cpp <284:14 284:17>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexB [b2WheelJoint.cpp <284:29 284:36>]
LOCAL_SYMBOL: b2WheelJoint.cpp<285:10> [b2WheelJoint.cpp <285:10 285:11>]
REFERENCE_TYPE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <285:2 285:8>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2WheelJoint.cpp <285:40 285:40>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2WheelJoint.cpp <285:20 285:28>]
LOCAL_SYMBOL: b2WheelJoint.cpp<280:65> [b2WheelJoint.cpp <285:15 285:18>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexB [b2WheelJoint.cpp <285:30 285:37>]
LOCAL_SYMBOL: b2WheelJoint.cpp<287:8> [b2WheelJoint.cpp <287:8 287:9>]
REFERENCE_TYPE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Rot [b2WheelJoint.cpp <287:2 287:6>]
SYMBOL_FUNCTION void b2Rot::b2Rot(float32)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2WheelJoint.cpp <287:8 287:9>]
LOCAL_SYMBOL: b2WheelJoint.cpp<283:10> [b2WheelJoint.cpp <287:11 287:12>]
LOCAL_SYMBOL: b2WheelJoint.cpp<287:16> [b2WheelJoint.cpp <287:16 287:17>]
REFERENCE_TYPE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Rot [b2WheelJoint.cpp <287:2 287:6>]
SYMBOL_FUNCTION void b2Rot::b2Rot(float32)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2WheelJoint.cpp <287:16 287:17>]
LOCAL_SYMBOL: b2WheelJoint.cpp<285:10> [b2WheelJoint.cpp <287:19 287:20>]
LOCAL_SYMBOL: b2WheelJoint.cpp<289:9> [b2WheelJoint.cpp <289:9 289:10>]
REFERENCE_TYPE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2WheelJoint.cpp <289:2 289:7>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2WheelJoint.cpp <289:14 289:18>]
LOCAL_SYMBOL: b2WheelJoint.cpp<287:8> [b2WheelJoint.cpp <289:20 289:21>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <289:39 289:39>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_localAnchorA [b2WheelJoint.cpp <289:24 289:37>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_localCenterA [b2WheelJoint.cpp <289:41 289:54>]
LOCAL_SYMBOL: b2WheelJoint.cpp<290:9> [b2WheelJoint.cpp <290:9 290:10>]
REFERENCE_TYPE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2WheelJoint.cpp <290:2 290:7>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2WheelJoint.cpp <290:14 290:18>]
LOCAL_SYMBOL: b2WheelJoint.cpp<287:16> [b2WheelJoint.cpp <290:20 290:21>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <290:39 290:39>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_localAnchorB [b2WheelJoint.cpp <290:24 290:37>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_localCenterB [b2WheelJoint.cpp <290:41 290:54>]
LOCAL_SYMBOL: b2WheelJoint.cpp<291:9> [b2WheelJoint.cpp <291:9 291:9>]
REFERENCE_TYPE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2WheelJoint.cpp <291:2 291:7>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <291:28 291:28>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <291:23 291:23>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <291:17 291:17>]
LOCAL_SYMBOL: b2WheelJoint.cpp<284:9> [b2WheelJoint.cpp <291:14 291:15>]
LOCAL_SYMBOL: b2WheelJoint.cpp<282:9> [b2WheelJoint.cpp <291:19 291:20>]
LOCAL_SYMBOL: b2WheelJoint.cpp<290:9> [b2WheelJoint.cpp <291:25 291:26>]
LOCAL_SYMBOL: b2WheelJoint.cpp<289:9> [b2WheelJoint.cpp <291:30 291:31>]
LOCAL_SYMBOL: b2WheelJoint.cpp<293:9> [b2WheelJoint.cpp <293:9 293:10>]
REFERENCE_TYPE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2WheelJoint.cpp <293:2 293:7>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2WheelJoint.cpp <293:14 293:18>]
LOCAL_SYMBOL: b2WheelJoint.cpp<287:8> [b2WheelJoint.cpp <293:20 293:21>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2WheelJoint::m_localYAxisA [b2WheelJoint.cpp <293:24 293:36>]
LOCAL_SYMBOL: b2WheelJoint.cpp<295:10> [b2WheelJoint.cpp <295:10 295:12>]
REFERENCE_TYPE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <295:2 295:8>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <295:16 295:22>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <295:26 295:26>]
LOCAL_SYMBOL: b2WheelJoint.cpp<291:9> [b2WheelJoint.cpp <295:24 295:24>]
LOCAL_SYMBOL: b2WheelJoint.cpp<289:9> [b2WheelJoint.cpp <295:28 295:29>]
LOCAL_SYMBOL: b2WheelJoint.cpp<293:9> [b2WheelJoint.cpp <295:32 295:33>]
LOCAL_SYMBOL: b2WheelJoint.cpp<296:10> [b2WheelJoint.cpp <296:10 296:12>]
REFERENCE_TYPE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <296:2 296:8>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <296:16 296:22>]
LOCAL_SYMBOL: b2WheelJoint.cpp<290:9> [b2WheelJoint.cpp <296:24 296:25>]
LOCAL_SYMBOL: b2WheelJoint.cpp<293:9> [b2WheelJoint.cpp <296:28 296:29>]
LOCAL_SYMBOL: b2WheelJoint.cpp<298:10> [b2WheelJoint.cpp <298:10 298:10>]
REFERENCE_TYPE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <298:2 298:8>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <298:14 298:18>]
LOCAL_SYMBOL: b2WheelJoint.cpp<291:9> [b2WheelJoint.cpp <298:20 298:20>]
LOCAL_SYMBOL: b2WheelJoint.cpp<293:9> [b2WheelJoint.cpp <298:23 298:24>]
LOCAL_SYMBOL: b2WheelJoint.cpp<300:10> [b2WheelJoint.cpp <300:10 300:10>]
REFERENCE_TYPE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <300:2 300:8>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invMassA [b2WheelJoint.cpp <300:14 300:23>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invMassB [b2WheelJoint.cpp <300:27 300:36>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invIA [b2WheelJoint.cpp <300:40 300:46>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sAy [b2WheelJoint.cpp <300:50 300:54>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sAy [b2WheelJoint.cpp <300:58 300:62>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invIB [b2WheelJoint.cpp <300:66 300:72>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sBy [b2WheelJoint.cpp <300:76 300:80>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_sBy [b2WheelJoint.cpp <300:84 300:88>]
LOCAL_SYMBOL: b2WheelJoint.cpp<302:10> [b2WheelJoint.cpp <302:10 302:16>]
REFERENCE_TYPE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <302:2 302:8>]
LOCAL_SYMBOL: b2WheelJoint.cpp<300:10> [b2WheelJoint.cpp <303:6 303:6>]
LOCAL_SYMBOL: b2WheelJoint.cpp<302:10> [b2WheelJoint.cpp <305:3 305:9>]
LOCAL_SYMBOL: b2WheelJoint.cpp<298:10> [b2WheelJoint.cpp <305:15 305:15>]
LOCAL_SYMBOL: b2WheelJoint.cpp<300:10> [b2WheelJoint.cpp <305:19 305:19>]
LOCAL_SYMBOL: b2WheelJoint.cpp<302:10> [b2WheelJoint.cpp <309:3 309:9>]
LOCAL_SYMBOL: b2WheelJoint.cpp<312:9> [b2WheelJoint.cpp <312:9 312:9>]
REFERENCE_TYPE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2WheelJoint.cpp <312:2 312:7>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WheelJoint.cpp <312:21 312:21>]
LOCAL_SYMBOL: b2WheelJoint.cpp<302:10> [b2WheelJoint.cpp <312:13 312:19>]
LOCAL_SYMBOL: b2WheelJoint.cpp<293:9> [b2WheelJoint.cpp <312:23 312:24>]
LOCAL_SYMBOL: b2WheelJoint.cpp<313:10> [b2WheelJoint.cpp <313:10 313:11>]
REFERENCE_TYPE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <313:2 313:8>]
LOCAL_SYMBOL: b2WheelJoint.cpp<302:10> [b2WheelJoint.cpp <313:15 313:21>]
LOCAL_SYMBOL: b2WheelJoint.cpp<295:10> [b2WheelJoint.cpp <313:25 313:27>]
LOCAL_SYMBOL: b2WheelJoint.cpp<314:10> [b2WheelJoint.cpp <314:10 314:11>]
REFERENCE_TYPE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2WheelJoint.cpp <314:2 314:8>]
LOCAL_SYMBOL: b2WheelJoint.cpp<302:10> [b2WheelJoint.cpp <314:15 314:21>]
LOCAL_SYMBOL: b2WheelJoint.cpp<296:10> [b2WheelJoint.cpp <314:25 314:27>]
SYMBOL_FUNCTION void b2Vec2::operator-=(const b2Vec2 &)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2WheelJoint.cpp <316:5 316:6>]
LOCAL_SYMBOL: b2WheelJoint.cpp<282:9> [b2WheelJoint.cpp <316:2 316:3>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WheelJoint.cpp <316:19 316:19>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invMassA [b2WheelJoint.cpp <316:8 316:17>]
LOCAL_SYMBOL: b2WheelJoint.cpp<312:9> [b2WheelJoint.cpp <316:21 316:21>]
LOCAL_SYMBOL: b2WheelJoint.cpp<283:10> [b2WheelJoint.cpp <317:2 317:3>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invIA [b2WheelJoint.cpp <317:8 317:14>]
LOCAL_SYMBOL: b2WheelJoint.cpp<313:10> [b2WheelJoint.cpp <317:18 317:19>]
SYMBOL_FUNCTION void b2Vec2::operator+=(const b2Vec2 &)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2WheelJoint.cpp <318:5 318:6>]
LOCAL_SYMBOL: b2WheelJoint.cpp<284:9> [b2WheelJoint.cpp <318:2 318:3>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WheelJoint.cpp <318:19 318:19>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invMassB [b2WheelJoint.cpp <318:8 318:17>]
LOCAL_SYMBOL: b2WheelJoint.cpp<312:9> [b2WheelJoint.cpp <318:21 318:21>]
LOCAL_SYMBOL: b2WheelJoint.cpp<285:10> [b2WheelJoint.cpp <319:2 319:3>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2WheelJoint::m_invIB [b2WheelJoint.cpp <319:8 319:14>]
LOCAL_SYMBOL: b2WheelJoint.cpp<314:10> [b2WheelJoint.cpp <319:18 319:19>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2WheelJoint.cpp <321:29 321:29>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2WheelJoint.cpp <321:27 321:27>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2WheelJoint.cpp <321:7 321:15>]
LOCAL_SYMBOL: b2WheelJoint.cpp<280:65> [b2WheelJoint.cpp <321:2 321:5>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexA [b2WheelJoint.cpp <321:17 321:24>]
LOCAL_SYMBOL: b2WheelJoint.cpp<282:9> [b2WheelJoint.cpp <321:31 321:32>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2WheelJoint.cpp <322:27 322:27>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2WheelJoint.cpp <322:7 322:15>]
LOCAL_SYMBOL: b2WheelJoint.cpp<280:65> [b2WheelJoint.cpp <322:2 322:5>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexA [b2WheelJoint.cpp <322:17 322:24>]
LOCAL_SYMBOL: b2WheelJoint.cpp<283:10> [b2WheelJoint.cpp <322:31 322:32>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2WheelJoint.cpp <323:29 323:29>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2WheelJoint.cpp <323:27 323:27>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2WheelJoint.cpp <323:7 323:15>]
LOCAL_SYMBOL: b2WheelJoint.cpp<280:65> [b2WheelJoint.cpp <323:2 323:5>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexB [b2WheelJoint.cpp <323:17 323:24>]
LOCAL_SYMBOL: b2WheelJoint.cpp<284:9> [b2WheelJoint.cpp <323:31 323:32>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2WheelJoint.cpp <324:27 324:27>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2WheelJoint.cpp <324:7 324:15>]
LOCAL_SYMBOL: b2WheelJoint.cpp<280:65> [b2WheelJoint.cpp <324:2 324:5>]
REFERENCE_USAGE bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2WheelJoint::m_indexB [b2WheelJoint.cpp <324:17 324:24>]
LOCAL_SYMBOL: b2WheelJoint.cpp<285:10> [b2WheelJoint.cpp <324:31 324:32>]
SYMBOL_FUNCTION float b2Abs<float>(float)
REFERENCE_CALL bool b2WheelJoint::SolvePositionConstraints(const b2SolverData &) -> float b2Abs<float>(float) [b2WheelJoint.cpp <326:9 326:13>]
LOCAL_SYMBOL: b2WheelJoint.cpp<298:10> [b2WheelJoint.cpp <326:15 326:15>]
SYMBOL_METHOD public b2Vec2 b2WheelJoint::GetAnchorA() const [b2WheelJoint.cpp <329:1 <329:22 329:31> 332:1>]
SYMBOL_FUNCTION b2Vec2 b2Joint::GetAnchorA() const
REFERENCE_OVERRIDE b2Vec2 b2WheelJoint::GetAnchorA() const -> b2Vec2 b2Joint::GetAnchorA() const [b2WheelJoint.cpp <329:22 329:31>]
SYMBOL_CLASS b2WheelJoint
REFERENCE_TYPE_USAGE b2Vec2 b2WheelJoint::GetAnchorA() const -> b2Vec2 [b2WheelJoint.cpp <329:1 329:6>]
SYMBOL_FUNCTION b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const
REFERENCE_CALL b2Vec2 b2WheelJoint::GetAnchorA() const -> b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const [b2WheelJoint.cpp <331:18 331:30>]
REFERENCE_USAGE b2Vec2 b2WheelJoint::GetAnchorA() const -> b2Body * b2Joint::m_bodyA [b2WheelJoint.cpp <331:9 331:15>]
REFERENCE_USAGE b2Vec2 b2WheelJoint::GetAnchorA() const -> b2Vec2 b2WheelJoint::m_localAnchorA [b2WheelJoint.cpp <331:32 331:45>]
SYMBOL_METHOD public b2Vec2 b2WheelJoint::GetAnchorB() const [b2WheelJoint.cpp <334:1 <334:22 334:31> 337:1>]
SYMBOL_FUNCTION b2Vec2 b2Joint::GetAnchorB() const
REFERENCE_OVERRIDE b2Vec2 b2WheelJoint::GetAnchorB() const -> b2Vec2 b2Joint::GetAnchorB() const [b2WheelJoint.cpp <334:22 334:31>]
SYMBOL_CLASS b2WheelJoint
REFERENCE_TYPE_USAGE b2Vec2 b2WheelJoint::GetAnchorB() const -> b2Vec2 [b2WheelJoint.cpp <334:1 334:6>]
SYMBOL_FUNCTION b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const
REFERENCE_CALL b2Vec2 b2WheelJoint::GetAnchorB() const -> b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const [b2WheelJoint.cpp <336:18 336:30>]
REFERENCE_USAGE b2Vec2 b2WheelJoint::GetAnchorB() const -> b2Body * b2Joint::m_bodyB [b2WheelJoint.cpp <336:9 336:15>]
REFERENCE_USAGE b2Vec2 b2WheelJoint::GetAnchorB() const -> b2Vec2 b2WheelJoint::m_localAnchorB [b2WheelJoint.cpp <336:32 336:45>]
SYMBOL_METHOD public b2Vec2 b2WheelJoint::GetReactionForce(float32) const [b2WheelJoint.cpp <339:1 <339:22 339:37> 342:1>]
SYMBOL_FUNCTION b2Vec2 b2Joint::GetReactionForce(float32) const
REFERENCE_OVERRIDE b2Vec2 b2WheelJoint::GetReactionForce(float32) const -> b2Vec2 b2Joint::GetReactionForce(float32) const [b2WheelJoint.cpp <339:22 339:37>]
SYMBOL_CLASS b2WheelJoint
REFERENCE_TYPE_USAGE b2Vec2 b2WheelJoint::GetReactionForce(float32) const -> b2Vec2 [b2WheelJoint.cpp <339:1 339:6>]
LOCAL_SYMBOL: b2WheelJoint.cpp<339:47> [b2WheelJoint.cpp <339:47 339:52>]
REFERENCE_TYPE_USAGE b2Vec2 b2WheelJoint::GetReactionForce(float32) const -> float32 [b2WheelJoint.cpp <339:39 339:45>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL b2Vec2 b2WheelJoint::GetReactionForce(float32) const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WheelJoint.cpp <341:16 341:16>]
LOCAL_SYMBOL: b2WheelJoint.cpp<339:47> [b2WheelJoint.cpp <341:9 341:14>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL b2Vec2 b2WheelJoint::GetReactionForce(float32) const -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <341:36 341:36>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL b2Vec2 b2WheelJoint::GetReactionForce(float32) const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WheelJoint.cpp <341:29 341:29>]
REFERENCE_USAGE b2Vec2 b2WheelJoint::GetReactionForce(float32) const -> float32 b2WheelJoint::m_impulse [b2WheelJoint.cpp <341:19 341:27>]
REFERENCE_USAGE b2Vec2 b2WheelJoint::GetReactionForce(float32) const -> b2Vec2 b2WheelJoint::m_ay [b2WheelJoint.cpp <341:31 341:34>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL b2Vec2 b2WheelJoint::GetReactionForce(float32) const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2WheelJoint.cpp <341:54 341:54>]
REFERENCE_USAGE b2Vec2 b2WheelJoint::GetReactionForce(float32) const -> float32 b2WheelJoint::m_springImpulse [b2WheelJoint.cpp <341:38 341:52>]
REFERENCE_USAGE b2Vec2 b2WheelJoint::GetReactionForce(float32) const -> b2Vec2 b2WheelJoint::m_ax [b2WheelJoint.cpp <341:56 341:59>]
SYMBOL_METHOD public float32 b2WheelJoint::GetReactionTorque(float32) const [b2WheelJoint.cpp <344:1 <344:23 344:39> 347:1>]
SYMBOL_FUNCTION float32 b2Joint::GetReactionTorque(float32) const
REFERENCE_OVERRIDE float32 b2WheelJoint::GetReactionTorque(float32) const -> float32 b2Joint::GetReactionTorque(float32) const [b2WheelJoint.cpp <344:23 344:39>]
SYMBOL_CLASS b2WheelJoint
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetReactionTorque(float32) const -> float32 [b2WheelJoint.cpp <344:1 344:7>]
LOCAL_SYMBOL: b2WheelJoint.cpp<344:49> [b2WheelJoint.cpp <344:49 344:54>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetReactionTorque(float32) const -> float32 [b2WheelJoint.cpp <344:41 344:47>]
LOCAL_SYMBOL: b2WheelJoint.cpp<344:49> [b2WheelJoint.cpp <346:9 346:14>]
REFERENCE_USAGE float32 b2WheelJoint::GetReactionTorque(float32) const -> float32 b2WheelJoint::m_motorImpulse [b2WheelJoint.cpp <346:18 346:31>]
SYMBOL_METHOD public float32 b2WheelJoint::GetJointTranslation() const [b2WheelJoint.cpp <349:1 <349:23 349:41> 361:1>]
SYMBOL_CLASS b2WheelJoint
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointTranslation() const -> float32 [b2WheelJoint.cpp <349:1 349:7>]
LOCAL_SYMBOL: b2WheelJoint.cpp<351:10> [b2WheelJoint.cpp <351:10 351:11>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointTranslation() const -> b2Body [b2WheelJoint.cpp <351:2 351:7>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointTranslation() const -> b2Body * b2Joint::m_bodyA [b2WheelJoint.cpp <351:15 351:21>]
LOCAL_SYMBOL: b2WheelJoint.cpp<352:10> [b2WheelJoint.cpp <352:10 352:11>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointTranslation() const -> b2Body [b2WheelJoint.cpp <352:2 352:7>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointTranslation() const -> b2Body * b2Joint::m_bodyB [b2WheelJoint.cpp <352:15 352:21>]
LOCAL_SYMBOL: b2WheelJoint.cpp<354:9> [b2WheelJoint.cpp <354:9 354:10>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointTranslation() const -> b2Vec2 [b2WheelJoint.cpp <354:2 354:7>]
SYMBOL_FUNCTION b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const
REFERENCE_CALL float32 b2WheelJoint::GetJointTranslation() const -> b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const [b2WheelJoint.cpp <354:18 354:30>]
LOCAL_SYMBOL: b2WheelJoint.cpp<351:10> [b2WheelJoint.cpp <354:14 354:15>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointTranslation() const -> b2Vec2 b2WheelJoint::m_localAnchorA [b2WheelJoint.cpp <354:32 354:45>]
LOCAL_SYMBOL: b2WheelJoint.cpp<355:9> [b2WheelJoint.cpp <355:9 355:10>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointTranslation() const -> b2Vec2 [b2WheelJoint.cpp <355:2 355:7>]
SYMBOL_FUNCTION b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const
REFERENCE_CALL float32 b2WheelJoint::GetJointTranslation() const -> b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const [b2WheelJoint.cpp <355:18 355:30>]
LOCAL_SYMBOL: b2WheelJoint.cpp<352:10> [b2WheelJoint.cpp <355:14 355:15>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointTranslation() const -> b2Vec2 b2WheelJoint::m_localAnchorB [b2WheelJoint.cpp <355:32 355:45>]
LOCAL_SYMBOL: b2WheelJoint.cpp<356:9> [b2WheelJoint.cpp <356:9 356:9>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointTranslation() const -> b2Vec2 [b2WheelJoint.cpp <356:2 356:7>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL float32 b2WheelJoint::GetJointTranslation() const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <356:16 356:16>]
LOCAL_SYMBOL: b2WheelJoint.cpp<355:9> [b2WheelJoint.cpp <356:13 356:14>]
LOCAL_SYMBOL: b2WheelJoint.cpp<354:9> [b2WheelJoint.cpp <356:18 356:19>]
LOCAL_SYMBOL: b2WheelJoint.cpp<357:9> [b2WheelJoint.cpp <357:9 357:12>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointTranslation() const -> b2Vec2 [b2WheelJoint.cpp <357:2 357:7>]
SYMBOL_FUNCTION b2Vec2 b2Body::GetWorldVector(const b2Vec2 &) const
REFERENCE_CALL float32 b2WheelJoint::GetJointTranslation() const -> b2Vec2 b2Body::GetWorldVector(const b2Vec2 &) const [b2WheelJoint.cpp <357:20 357:33>]
LOCAL_SYMBOL: b2WheelJoint.cpp<351:10> [b2WheelJoint.cpp <357:16 357:17>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointTranslation() const -> b2Vec2 b2WheelJoint::m_localXAxisA [b2WheelJoint.cpp <357:35 357:47>]
LOCAL_SYMBOL: b2WheelJoint.cpp<359:10> [b2WheelJoint.cpp <359:10 359:20>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointTranslation() const -> float32 [b2WheelJoint.cpp <359:2 359:8>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL float32 b2WheelJoint::GetJointTranslation() const -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <359:24 359:28>]
LOCAL_SYMBOL: b2WheelJoint.cpp<356:9> [b2WheelJoint.cpp <359:30 359:30>]
LOCAL_SYMBOL: b2WheelJoint.cpp<357:9> [b2WheelJoint.cpp <359:33 359:36>]
LOCAL_SYMBOL: b2WheelJoint.cpp<359:10> [b2WheelJoint.cpp <360:9 360:19>]
SYMBOL_METHOD public float32 b2WheelJoint::GetJointLinearSpeed() const [b2WheelJoint.cpp <363:1 <363:23 363:41> 382:1>]
SYMBOL_CLASS b2WheelJoint
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> float32 [b2WheelJoint.cpp <363:1 363:7>]
LOCAL_SYMBOL: b2WheelJoint.cpp<365:10> [b2WheelJoint.cpp <365:10 365:11>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Body [b2WheelJoint.cpp <365:2 365:7>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Body * b2Joint::m_bodyA [b2WheelJoint.cpp <365:15 365:21>]
LOCAL_SYMBOL: b2WheelJoint.cpp<366:10> [b2WheelJoint.cpp <366:10 366:11>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Body [b2WheelJoint.cpp <366:2 366:7>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Body * b2Joint::m_bodyB [b2WheelJoint.cpp <366:15 366:21>]
LOCAL_SYMBOL: b2WheelJoint.cpp<368:9> [b2WheelJoint.cpp <368:9 368:10>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 [b2WheelJoint.cpp <368:2 368:7>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2WheelJoint.cpp <368:14 368:18>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Rot b2Transform::q [b2WheelJoint.cpp <368:29 368:29>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Transform b2Body::m_xf [b2WheelJoint.cpp <368:24 368:27>]
LOCAL_SYMBOL: b2WheelJoint.cpp<365:10> [b2WheelJoint.cpp <368:20 368:21>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <368:47 368:47>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 b2WheelJoint::m_localAnchorA [b2WheelJoint.cpp <368:32 368:45>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 b2Sweep::localCenter [b2WheelJoint.cpp <368:61 368:71>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Sweep b2Body::m_sweep [b2WheelJoint.cpp <368:53 368:59>]
LOCAL_SYMBOL: b2WheelJoint.cpp<365:10> [b2WheelJoint.cpp <368:49 368:50>]
LOCAL_SYMBOL: b2WheelJoint.cpp<369:9> [b2WheelJoint.cpp <369:9 369:10>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 [b2WheelJoint.cpp <369:2 369:7>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2WheelJoint.cpp <369:14 369:18>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Rot b2Transform::q [b2WheelJoint.cpp <369:29 369:29>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Transform b2Body::m_xf [b2WheelJoint.cpp <369:24 369:27>]
LOCAL_SYMBOL: b2WheelJoint.cpp<366:10> [b2WheelJoint.cpp <369:20 369:21>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <369:47 369:47>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 b2WheelJoint::m_localAnchorB [b2WheelJoint.cpp <369:32 369:45>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 b2Sweep::localCenter [b2WheelJoint.cpp <369:61 369:71>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Sweep b2Body::m_sweep [b2WheelJoint.cpp <369:53 369:59>]
LOCAL_SYMBOL: b2WheelJoint.cpp<366:10> [b2WheelJoint.cpp <369:49 369:50>]
LOCAL_SYMBOL: b2WheelJoint.cpp<370:9> [b2WheelJoint.cpp <370:9 370:10>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 [b2WheelJoint.cpp <370:2 370:7>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <370:28 370:28>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 b2Sweep::c [b2WheelJoint.cpp <370:26 370:26>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Sweep b2Body::m_sweep [b2WheelJoint.cpp <370:18 370:24>]
LOCAL_SYMBOL: b2WheelJoint.cpp<365:10> [b2WheelJoint.cpp <370:14 370:15>]
LOCAL_SYMBOL: b2WheelJoint.cpp<368:9> [b2WheelJoint.cpp <370:30 370:31>]
LOCAL_SYMBOL: b2WheelJoint.cpp<371:9> [b2WheelJoint.cpp <371:9 371:10>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 [b2WheelJoint.cpp <371:2 371:7>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <371:28 371:28>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 b2Sweep::c [b2WheelJoint.cpp <371:26 371:26>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Sweep b2Body::m_sweep [b2WheelJoint.cpp <371:18 371:24>]
LOCAL_SYMBOL: b2WheelJoint.cpp<366:10> [b2WheelJoint.cpp <371:14 371:15>]
LOCAL_SYMBOL: b2WheelJoint.cpp<369:9> [b2WheelJoint.cpp <371:30 371:31>]
LOCAL_SYMBOL: b2WheelJoint.cpp<372:9> [b2WheelJoint.cpp <372:9 372:9>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 [b2WheelJoint.cpp <372:2 372:7>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <372:16 372:16>]
LOCAL_SYMBOL: b2WheelJoint.cpp<371:9> [b2WheelJoint.cpp <372:13 372:14>]
LOCAL_SYMBOL: b2WheelJoint.cpp<370:9> [b2WheelJoint.cpp <372:18 372:19>]
LOCAL_SYMBOL: b2WheelJoint.cpp<373:9> [b2WheelJoint.cpp <373:9 373:12>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 [b2WheelJoint.cpp <373:2 373:7>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2WheelJoint.cpp <373:16 373:20>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Rot b2Transform::q [b2WheelJoint.cpp <373:31 373:31>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Transform b2Body::m_xf [b2WheelJoint.cpp <373:26 373:29>]
LOCAL_SYMBOL: b2WheelJoint.cpp<365:10> [b2WheelJoint.cpp <373:22 373:23>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 b2WheelJoint::m_localXAxisA [b2WheelJoint.cpp <373:34 373:46>]
LOCAL_SYMBOL: b2WheelJoint.cpp<375:9> [b2WheelJoint.cpp <375:9 375:10>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 [b2WheelJoint.cpp <375:2 375:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL float32 b2WheelJoint::GetJointLinearSpeed() const -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2WheelJoint.cpp <375:18 375:33>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 b2Body::m_linearVelocity [b2WheelJoint.cpp <375:18 375:33>]
LOCAL_SYMBOL: b2WheelJoint.cpp<365:10> [b2WheelJoint.cpp <375:14 375:15>]
LOCAL_SYMBOL: b2WheelJoint.cpp<376:9> [b2WheelJoint.cpp <376:9 376:10>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 [b2WheelJoint.cpp <376:2 376:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL float32 b2WheelJoint::GetJointLinearSpeed() const -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2WheelJoint.cpp <376:18 376:33>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 b2Body::m_linearVelocity [b2WheelJoint.cpp <376:18 376:33>]
LOCAL_SYMBOL: b2WheelJoint.cpp<366:10> [b2WheelJoint.cpp <376:14 376:15>]
LOCAL_SYMBOL: b2WheelJoint.cpp<377:10> [b2WheelJoint.cpp <377:10 377:11>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> float32 [b2WheelJoint.cpp <377:2 377:8>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> float32 b2Body::m_angularVelocity [b2WheelJoint.cpp <377:19 377:35>]
LOCAL_SYMBOL: b2WheelJoint.cpp<365:10> [b2WheelJoint.cpp <377:15 377:16>]
LOCAL_SYMBOL: b2WheelJoint.cpp<378:10> [b2WheelJoint.cpp <378:10 378:11>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> float32 [b2WheelJoint.cpp <378:2 378:8>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> float32 b2Body::m_angularVelocity [b2WheelJoint.cpp <378:19 378:35>]
LOCAL_SYMBOL: b2WheelJoint.cpp<366:10> [b2WheelJoint.cpp <378:15 378:16>]
LOCAL_SYMBOL: b2WheelJoint.cpp<380:10> [b2WheelJoint.cpp <380:10 380:14>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointLinearSpeed() const -> float32 [b2WheelJoint.cpp <380:2 380:8>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL float32 b2WheelJoint::GetJointLinearSpeed() const -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <380:18 380:22>]
LOCAL_SYMBOL: b2WheelJoint.cpp<372:9> [b2WheelJoint.cpp <380:24 380:24>]
SYMBOL_FUNCTION b2Vec2 b2Cross(float32, const b2Vec2 &)
REFERENCE_CALL float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 b2Cross(float32, const b2Vec2 &) [b2WheelJoint.cpp <380:27 380:33>]
LOCAL_SYMBOL: b2WheelJoint.cpp<377:10> [b2WheelJoint.cpp <380:35 380:36>]
LOCAL_SYMBOL: b2WheelJoint.cpp<373:9> [b2WheelJoint.cpp <380:39 380:42>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL float32 b2WheelJoint::GetJointLinearSpeed() const -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <380:48 380:52>]
LOCAL_SYMBOL: b2WheelJoint.cpp<373:9> [b2WheelJoint.cpp <380:54 380:57>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <380:86 380:86>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <380:81 380:81>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2WheelJoint.cpp <380:63 380:63>]
LOCAL_SYMBOL: b2WheelJoint.cpp<376:9> [b2WheelJoint.cpp <380:60 380:61>]
SYMBOL_FUNCTION b2Vec2 b2Cross(float32, const b2Vec2 &)
REFERENCE_CALL float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 b2Cross(float32, const b2Vec2 &) [b2WheelJoint.cpp <380:65 380:71>]
LOCAL_SYMBOL: b2WheelJoint.cpp<378:10> [b2WheelJoint.cpp <380:73 380:74>]
LOCAL_SYMBOL: b2WheelJoint.cpp<369:9> [b2WheelJoint.cpp <380:77 380:78>]
LOCAL_SYMBOL: b2WheelJoint.cpp<375:9> [b2WheelJoint.cpp <380:83 380:84>]
SYMBOL_FUNCTION b2Vec2 b2Cross(float32, const b2Vec2 &)
REFERENCE_CALL float32 b2WheelJoint::GetJointLinearSpeed() const -> b2Vec2 b2Cross(float32, const b2Vec2 &) [b2WheelJoint.cpp <380:88 380:94>]
LOCAL_SYMBOL: b2WheelJoint.cpp<377:10> [b2WheelJoint.cpp <380:96 380:97>]
LOCAL_SYMBOL: b2WheelJoint.cpp<368:9> [b2WheelJoint.cpp <380:100 380:101>]
LOCAL_SYMBOL: b2WheelJoint.cpp<380:10> [b2WheelJoint.cpp <381:9 381:13>]
SYMBOL_METHOD public float32 b2WheelJoint::GetJointAngle() const [b2WheelJoint.cpp <384:1 <384:23 384:35> 389:1>]
SYMBOL_CLASS b2WheelJoint
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointAngle() const -> float32 [b2WheelJoint.cpp <384:1 384:7>]
LOCAL_SYMBOL: b2WheelJoint.cpp<386:10> [b2WheelJoint.cpp <386:10 386:11>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointAngle() const -> b2Body [b2WheelJoint.cpp <386:2 386:7>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointAngle() const -> b2Body * b2Joint::m_bodyA [b2WheelJoint.cpp <386:15 386:21>]
LOCAL_SYMBOL: b2WheelJoint.cpp<387:10> [b2WheelJoint.cpp <387:10 387:11>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointAngle() const -> b2Body [b2WheelJoint.cpp <387:2 387:7>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointAngle() const -> b2Body * b2Joint::m_bodyB [b2WheelJoint.cpp <387:15 387:21>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointAngle() const -> float32 b2Sweep::a [b2WheelJoint.cpp <388:21 388:21>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointAngle() const -> b2Sweep b2Body::m_sweep [b2WheelJoint.cpp <388:13 388:19>]
LOCAL_SYMBOL: b2WheelJoint.cpp<387:10> [b2WheelJoint.cpp <388:9 388:10>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointAngle() const -> float32 b2Sweep::a [b2WheelJoint.cpp <388:37 388:37>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointAngle() const -> b2Sweep b2Body::m_sweep [b2WheelJoint.cpp <388:29 388:35>]
LOCAL_SYMBOL: b2WheelJoint.cpp<386:10> [b2WheelJoint.cpp <388:25 388:26>]
SYMBOL_METHOD public float32 b2WheelJoint::GetJointAngularSpeed() const [b2WheelJoint.cpp <391:1 <391:23 391:42> 396:1>]
SYMBOL_CLASS b2WheelJoint
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointAngularSpeed() const -> float32 [b2WheelJoint.cpp <391:1 391:7>]
LOCAL_SYMBOL: b2WheelJoint.cpp<393:10> [b2WheelJoint.cpp <393:10 393:11>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointAngularSpeed() const -> float32 [b2WheelJoint.cpp <393:2 393:8>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointAngularSpeed() const -> float32 b2Body::m_angularVelocity [b2WheelJoint.cpp <393:24 393:40>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointAngularSpeed() const -> b2Body * b2Joint::m_bodyA [b2WheelJoint.cpp <393:15 393:21>]
LOCAL_SYMBOL: b2WheelJoint.cpp<394:10> [b2WheelJoint.cpp <394:10 394:11>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetJointAngularSpeed() const -> float32 [b2WheelJoint.cpp <394:2 394:8>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointAngularSpeed() const -> float32 b2Body::m_angularVelocity [b2WheelJoint.cpp <394:24 394:40>]
REFERENCE_USAGE float32 b2WheelJoint::GetJointAngularSpeed() const -> b2Body * b2Joint::m_bodyB [b2WheelJoint.cpp <394:15 394:21>]
LOCAL_SYMBOL: b2WheelJoint.cpp<394:10> [b2WheelJoint.cpp <395:9 395:10>]
LOCAL_SYMBOL: b2WheelJoint.cpp<393:10> [b2WheelJoint.cpp <395:14 395:15>]
SYMBOL_METHOD public bool b2WheelJoint::IsMotorEnabled() const [b2WheelJoint.cpp <398:1 <398:20 398:33> 401:1>]
SYMBOL_CLASS b2WheelJoint
SYMBOL_BUILTIN_TYPE bool
REFERENCE_TYPE_USAGE bool b2WheelJoint::IsMotorEnabled() const -> bool [b2WheelJoint.cpp <398:1 398:4>]
REFERENCE_USAGE bool b2WheelJoint::IsMotorEnabled() const -> bool b2WheelJoint::m_enableMotor [b2WheelJoint.cpp <400:9 400:21>]
SYMBOL_METHOD public void b2WheelJoint::EnableMotor(bool) [b2WheelJoint.cpp <403:1 <403:20 403:30> 411:1>]
SYMBOL_CLASS b2WheelJoint
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2WheelJoint::EnableMotor(bool) -> void [b2WheelJoint.cpp <403:1 403:4>]
LOCAL_SYMBOL: b2WheelJoint.cpp<403:37> [b2WheelJoint.cpp <403:37 403:40>]
SYMBOL_BUILTIN_TYPE bool
REFERENCE_TYPE_USAGE void b2WheelJoint::EnableMotor(bool) -> bool [b2WheelJoint.cpp <403:32 403:35>]
LOCAL_SYMBOL: b2WheelJoint.cpp<403:37> [b2WheelJoint.cpp <405:6 405:9>]
REFERENCE_USAGE void b2WheelJoint::EnableMotor(bool) -> bool b2WheelJoint::m_enableMotor [b2WheelJoint.cpp <405:14 405:26>]
SYMBOL_FUNCTION void b2Body::SetAwake(bool)
REFERENCE_CALL void b2WheelJoint::EnableMotor(bool) -> void b2Body::SetAwake(bool) [b2WheelJoint.cpp <407:12 407:19>]
REFERENCE_USAGE void b2WheelJoint::EnableMotor(bool) -> b2Body * b2Joint::m_bodyA [b2WheelJoint.cpp <407:3 407:9>]
SYMBOL_FUNCTION void b2Body::SetAwake(bool)
REFERENCE_CALL void b2WheelJoint::EnableMotor(bool) -> void b2Body::SetAwake(bool) [b2WheelJoint.cpp <408:12 408:19>]
REFERENCE_USAGE void b2WheelJoint::EnableMotor(bool) -> b2Body * b2Joint::m_bodyB [b2WheelJoint.cpp <408:3 408:9>]
REFERENCE_USAGE void b2WheelJoint::EnableMotor(bool) -> bool b2WheelJoint::m_enableMotor [b2WheelJoint.cpp <409:3 409:15>]
LOCAL_SYMBOL: b2WheelJoint.cpp<403:37> [b2WheelJoint.cpp <409:19 409:22>]
SYMBOL_METHOD public void b2WheelJoint::SetMotorSpeed(float32) [b2WheelJoint.cpp <413:1 <413:20 413:32> 421:1>]
SYMBOL_CLASS b2WheelJoint
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2WheelJoint::SetMotorSpeed(float32) -> void [b2WheelJoint.cpp <413:1 413:4>]
LOCAL_SYMBOL: b2WheelJoint.cpp<413:42> [b2WheelJoint.cpp <413:42 413:46>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SetMotorSpeed(float32) -> float32 [b2WheelJoint.cpp <413:34 413:40>]
LOCAL_SYMBOL: b2WheelJoint.cpp<413:42> [b2WheelJoint.cpp <415:6 415:10>]
REFERENCE_USAGE void b2WheelJoint::SetMotorSpeed(float32) -> float32 b2WheelJoint::m_motorSpeed [b2WheelJoint.cpp <415:15 415:26>]
SYMBOL_FUNCTION void b2Body::SetAwake(bool)
REFERENCE_CALL void b2WheelJoint::SetMotorSpeed(float32) -> void b2Body::SetAwake(bool) [b2WheelJoint.cpp <417:12 417:19>]
REFERENCE_USAGE void b2WheelJoint::SetMotorSpeed(float32) -> b2Body * b2Joint::m_bodyA [b2WheelJoint.cpp <417:3 417:9>]
SYMBOL_FUNCTION void b2Body::SetAwake(bool)
REFERENCE_CALL void b2WheelJoint::SetMotorSpeed(float32) -> void b2Body::SetAwake(bool) [b2WheelJoint.cpp <418:12 418:19>]
REFERENCE_USAGE void b2WheelJoint::SetMotorSpeed(float32) -> b2Body * b2Joint::m_bodyB [b2WheelJoint.cpp <418:3 418:9>]
REFERENCE_USAGE void b2WheelJoint::SetMotorSpeed(float32) -> float32 b2WheelJoint::m_motorSpeed [b2WheelJoint.cpp <419:3 419:14>]
LOCAL_SYMBOL: b2WheelJoint.cpp<413:42> [b2WheelJoint.cpp <419:18 419:22>]
SYMBOL_METHOD public void b2WheelJoint::SetMaxMotorTorque(float32) [b2WheelJoint.cpp <423:1 <423:20 423:36> 431:1>]
SYMBOL_CLASS b2WheelJoint
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2WheelJoint::SetMaxMotorTorque(float32) -> void [b2WheelJoint.cpp <423:1 423:4>]
LOCAL_SYMBOL: b2WheelJoint.cpp<423:46> [b2WheelJoint.cpp <423:46 423:51>]
REFERENCE_TYPE_USAGE void b2WheelJoint::SetMaxMotorTorque(float32) -> float32 [b2WheelJoint.cpp <423:38 423:44>]
LOCAL_SYMBOL: b2WheelJoint.cpp<423:46> [b2WheelJoint.cpp <425:6 425:11>]
REFERENCE_USAGE void b2WheelJoint::SetMaxMotorTorque(float32) -> float32 b2WheelJoint::m_maxMotorTorque [b2WheelJoint.cpp <425:16 425:31>]
SYMBOL_FUNCTION void b2Body::SetAwake(bool)
REFERENCE_CALL void b2WheelJoint::SetMaxMotorTorque(float32) -> void b2Body::SetAwake(bool) [b2WheelJoint.cpp <427:12 427:19>]
REFERENCE_USAGE void b2WheelJoint::SetMaxMotorTorque(float32) -> b2Body * b2Joint::m_bodyA [b2WheelJoint.cpp <427:3 427:9>]
SYMBOL_FUNCTION void b2Body::SetAwake(bool)
REFERENCE_CALL void b2WheelJoint::SetMaxMotorTorque(float32) -> void b2Body::SetAwake(bool) [b2WheelJoint.cpp <428:12 428:19>]
REFERENCE_USAGE void b2WheelJoint::SetMaxMotorTorque(float32) -> b2Body * b2Joint::m_bodyB [b2WheelJoint.cpp <428:3 428:9>]
REFERENCE_USAGE void b2WheelJoint::SetMaxMotorTorque(float32) -> float32 b2WheelJoint::m_maxMotorTorque [b2WheelJoint.cpp <429:3 429:18>]
LOCAL_SYMBOL: b2WheelJoint.cpp<423:46> [b2WheelJoint.cpp <429:22 429:27>]
SYMBOL_METHOD public float32 b2WheelJoint::GetMotorTorque(float32) const [b2WheelJoint.cpp <433:1 <433:23 433:36> 436:1>]
SYMBOL_CLASS b2WheelJoint
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetMotorTorque(float32) const -> float32 [b2WheelJoint.cpp <433:1 433:7>]
LOCAL_SYMBOL: b2WheelJoint.cpp<433:46> [b2WheelJoint.cpp <433:46 433:51>]
REFERENCE_TYPE_USAGE float32 b2WheelJoint::GetMotorTorque(float32) const -> float32 [b2WheelJoint.cpp <433:38 433:44>]
LOCAL_SYMBOL: b2WheelJoint.cpp<433:46> [b2WheelJoint.cpp <435:9 435:14>]
REFERENCE_USAGE float32 b2WheelJoint::GetMotorTorque(float32) const -> float32 b2WheelJoint::m_motorImpulse [b2WheelJoint.cpp <435:18 435:31>]
SYMBOL_METHOD public void b2WheelJoint::Dump() [b2WheelJoint.cpp <438:1 <438:20 438:23> 456:1>]
SYMBOL_FUNCTION void b2Joint::Dump()
REFERENCE_OVERRIDE void b2WheelJoint::Dump() -> void b2Joint::Dump() [b2WheelJoint.cpp <438:20 438:23>]
SYMBOL_CLASS b2WheelJoint
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2WheelJoint::Dump() -> void [b2WheelJoint.cpp <438:1 438:4>]
LOCAL_SYMBOL: b2WheelJoint.cpp<440:8> [b2WheelJoint.cpp <440:8 440:13>]
REFERENCE_TYPE_USAGE void b2WheelJoint::Dump() -> int32 [b2WheelJoint.cpp <440:2 440:6>]
REFERENCE_USAGE void b2WheelJoint::Dump() -> int32 b2Body::m_islandIndex [b2WheelJoint.cpp <440:26 440:38>]
REFERENCE_USAGE void b2WheelJoint::Dump() -> b2Body * b2Joint::m_bodyA [b2WheelJoint.cpp <440:17 440:23>]
LOCAL_SYMBOL: b2WheelJoint.cpp<441:8> [b2WheelJoint.cpp <441:8 441:13>]
REFERENCE_TYPE_USAGE void b2WheelJoint::Dump() -> int32 [b2WheelJoint.cpp <441:2 441:6>]
REFERENCE_USAGE void b2WheelJoint::Dump() -> int32 b2Body::m_islandIndex [b2WheelJoint.cpp <441:26 441:38>]
REFERENCE_USAGE void b2WheelJoint::Dump() -> b2Body * b2Joint::m_bodyB [b2WheelJoint.cpp <441:17 441:23>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2WheelJoint::Dump() -> void b2Log(const char *) [b2WheelJoint.cpp <443:2 443:6>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2WheelJoint::Dump() -> void b2Log(const char *) [b2WheelJoint.cpp <444:2 444:6>]
LOCAL_SYMBOL: b2WheelJoint.cpp<440:8> [b2WheelJoint.cpp <444:38 444:43>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2WheelJoint::Dump() -> void b2Log(const char *) [b2WheelJoint.cpp <445:2 445:6>]
LOCAL_SYMBOL: b2WheelJoint.cpp<441:8> [b2WheelJoint.cpp <445:38 445:43>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2WheelJoint::Dump() -> void b2Log(const char *) [b2WheelJoint.cpp <446:2 446:6>]
REFERENCE_USAGE void b2WheelJoint::Dump() -> bool b2Joint::m_collideConnected [b2WheelJoint.cpp <446:47 446:64>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2WheelJoint::Dump() -> void b2Log(const char *) [b2WheelJoint.cpp <447:2 447:6>]
REFERENCE_USAGE void b2WheelJoint::Dump() -> float32 b2Vec2::x [b2WheelJoint.cpp <447:69 447:69>]
REFERENCE_USAGE void b2WheelJoint::Dump() -> b2Vec2 b2WheelJoint::m_localAnchorA [b2WheelJoint.cpp <447:54 447:67>]
REFERENCE_USAGE void b2WheelJoint::Dump() -> float32 b2Vec2::y [b2WheelJoint.cpp <447:87 447:87>]
REFERENCE_USAGE void b2WheelJoint::Dump() -> b2Vec2 b2WheelJoint::m_localAnchorA [b2WheelJoint.cpp <447:72 447:85>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2WheelJoint::Dump() -> void b2Log(const char *) [b2WheelJoint.cpp <448:2 448:6>]
REFERENCE_USAGE void b2WheelJoint::Dump() -> float32 b2Vec2::x [b2WheelJoint.cpp <448:69 448:69>]
REFERENCE_USAGE void b2WheelJoint::Dump() -> b2Vec2 b2WheelJoint::m_localAnchorB [b2WheelJoint.cpp <448:54 448:67>]
REFERENCE_USAGE void b2WheelJoint::Dump() -> float32 b2Vec2::y [b2WheelJoint.cpp <448:87 448:87>]
REFERENCE_USAGE void b2WheelJoint::Dump() -> b2Vec2 b2WheelJoint::m_localAnchorB [b2WheelJoint.cpp <448:72 448:85>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2WheelJoint::Dump() -> void b2Log(const char *) [b2WheelJoint.cpp <449:2 449:6>]
REFERENCE_USAGE void b2WheelJoint::Dump() -> float32 b2Vec2::x [b2WheelJoint.cpp <449:66 449:66>]
REFERENCE_USAGE void b2WheelJoint::Dump() -> b2Vec2 b2WheelJoint::m_localXAxisA [b2WheelJoint.cpp <449:52 449:64>]
REFERENCE_USAGE void b2WheelJoint::Dump() -> float32 b2Vec2::y [b2WheelJoint.cpp <449:83 449:83>]
REFERENCE_USAGE void b2WheelJoint::Dump() -> b2Vec2 b2WheelJoint::m_localXAxisA [b2WheelJoint.cpp <449:69 449:81>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2WheelJoint::Dump() -> void b2Log(const char *) [b2WheelJoint.cpp <450:2 450:6>]
REFERENCE_USAGE void b2WheelJoint::Dump() -> bool b2WheelJoint::m_enableMotor [b2WheelJoint.cpp <450:42 450:54>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2WheelJoint::Dump() -> void b2Log(const char *) [b2WheelJoint.cpp <451:2 451:6>]
REFERENCE_USAGE void b2WheelJoint::Dump() -> float32 b2WheelJoint::m_motorSpeed [b2WheelJoint.cpp <451:40 451:51>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2WheelJoint::Dump() -> void b2Log(const char *) [b2WheelJoint.cpp <452:2 452:6>]
REFERENCE_USAGE void b2WheelJoint::Dump() -> float32 b2WheelJoint::m_maxMotorTorque [b2WheelJoint.cpp <452:44 452:59>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2WheelJoint::Dump() -> void b2Log(const char *) [b2WheelJoint.cpp <453:2 453:6>]
REFERENCE_USAGE void b2WheelJoint::Dump() -> float32 b2WheelJoint::m_frequencyHz [b2WheelJoint.cpp <453:41 453:53>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2WheelJoint::Dump() -> void b2Log(const char *) [b2WheelJoint.cpp <454:2 454:6>]
REFERENCE_USAGE void b2WheelJoint::Dump() -> float32 b2WheelJoint::m_dampingRatio [b2WheelJoint.cpp <454:42 454:55>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2WheelJoint::Dump() -> void b2Log(const char *) [b2WheelJoint.cpp <455:2 455:6>]
REFERENCE_USAGE void b2WheelJoint::Dump() -> int32 b2Joint::m_index [b2WheelJoint.cpp <455:55 455:61>]
