FILE: b2Timer.cpp
COMMENT: comment [b2Timer.cpp <1:1 17:3>]
REFERENCE_INCLUDE b2Timer.cpp -> b2Timer.h [b2Timer.cpp <19:10 19:33>]
FILE: b2Timer.h
COMMENT: comment [b2Timer.h <1:1 17:3>]
REFERENCE_MACRO_USAGE b2Timer.h -> B2_TIMER_H [b2Timer.h <19:9 19:18>]
SYMBOL_MACRO B2_TIMER_H [b2Timer.h <20:9 <20:9 20:18> 20:8>]
REFERENCE_INCLUDE b2Timer.h -> b2Settings.h [b2Timer.h <22:10 22:36>]
FILE: b2Settings.h
COMMENT: comment [b2Settings.h <1:1 17:3>]
REFERENCE_MACRO_USAGE b2Settings.h -> B2_SETTINGS_H [b2Settings.h <19:9 19:21>]
SYMBOL_MACRO B2_SETTINGS_H [b2Settings.h <20:9 <20:9 20:21> 20:8>]
REFERENCE_INCLUDE b2Settings.h -> stddef.h [b2Settings.h <22:10 22:19>]
FILE: stddef.h non-indexed
REFERENCE_INCLUDE stddef.h -> corecrt.h [stddef.h <11:10 11:20>]
FILE: corecrt.h non-indexed
REFERENCE_INCLUDE corecrt.h -> vcruntime.h [corecrt.h <10:10 10:22>]
FILE: vcruntime.h non-indexed
REFERENCE_INCLUDE vcruntime.h -> sal.h [vcruntime.h <45:10 45:16>]
FILE: sal.h non-indexed
REFERENCE_INCLUDE sal.h -> concurrencysal.h [sal.h <2990:10 2990:27>]
FILE: concurrencysal.h non-indexed
REFERENCE_INCLUDE vcruntime.h -> vadefs.h [vcruntime.h <46:10 46:19>]
FILE: vadefs.h non-indexed
REFERENCE_INCLUDE b2Settings.h -> assert.h [b2Settings.h <23:10 23:19>]
FILE: assert.h non-indexed
REFERENCE_INCLUDE assert.h -> corecrt.h [assert.h <12:10 12:20>]
REFERENCE_INCLUDE b2Settings.h -> float.h [b2Settings.h <24:10 24:18>]
FILE: float.h non-indexed
REFERENCE_INCLUDE float.h -> corecrt.h [float.h <12:10 12:20>]
REFERENCE_MACRO_USAGE b2Settings.h -> NDEBUG [b2Settings.h <26:14 26:19>]
SYMBOL_MACRO b2DEBUG [b2Settings.h <27:10 <27:10 27:16> 27:9>]
SYMBOL_MACRO B2_NOT_USED [b2Settings.h <30:9 <30:9 30:19> 30:33>]
SYMBOL_MACRO b2Assert [b2Settings.h <31:9 <31:9 31:16> 31:28>]
SYMBOL_MACRO b2_maxFloat [b2Settings.h <42:9 <42:9 42:19> 42:21>]
SYMBOL_MACRO b2_epsilon [b2Settings.h <43:9 <43:9 43:18> 43:20>]
SYMBOL_MACRO b2_pi [b2Settings.h <44:9 <44:9 44:13> 44:16>]
COMMENT: comment [b2Settings.h <46:1 46:10>]
COMMENT: comment [b2Settings.h <47:1 47:75>]
COMMENT: comment [b2Settings.h <48:1 48:4>]
COMMENT: comment [b2Settings.h <50:1 50:13>]
COMMENT: comment [b2Settings.h <52:1 52:71>]
COMMENT: comment [b2Settings.h <53:1 53:27>]
SYMBOL_MACRO b2_maxManifoldPoints [b2Settings.h <54:9 <54:9 54:28> 54:29>]
COMMENT: comment [b2Settings.h <56:1 56:76>]
COMMENT: comment [b2Settings.h <57:1 57:70>]
SYMBOL_MACRO b2_maxPolygonVertices [b2Settings.h <58:9 <58:9 58:29> 58:30>]
COMMENT: comment [b2Settings.h <60:1 60:74>]
COMMENT: comment [b2Settings.h <61:1 61:68>]
COMMENT: comment [b2Settings.h <62:1 62:23>]
SYMBOL_MACRO b2_aabbExtension [b2Settings.h <63:9 <63:9 63:24> 63:26>]
COMMENT: comment [b2Settings.h <65:1 65:78>]
COMMENT: comment [b2Settings.h <66:1 66:59>]
COMMENT: comment [b2Settings.h <67:1 67:40>]
SYMBOL_MACRO b2_aabbMultiplier [b2Settings.h <68:9 <68:9 68:25> 68:27>]
COMMENT: comment [b2Settings.h <70:1 70:79>]
COMMENT: comment [b2Settings.h <71:1 71:70>]
SYMBOL_MACRO b2_linearSlop [b2Settings.h <72:9 <72:9 72:21> 72:24>]
COMMENT: comment [b2Settings.h <74:1 74:78>]
COMMENT: comment [b2Settings.h <75:1 75:70>]
SYMBOL_MACRO b2_angularSlop [b2Settings.h <76:9 <76:9 76:22> 76:47>]
COMMENT: comment [b2Settings.h <78:1 78:83>]
COMMENT: comment [b2Settings.h <79:1 79:91>]
COMMENT: comment [b2Settings.h <80:1 80:64>]
SYMBOL_MACRO b2_polygonRadius [b2Settings.h <81:9 <81:9 81:24> 81:47>]
COMMENT: comment [b2Settings.h <83:1 83:78>]
SYMBOL_MACRO b2_maxSubSteps [b2Settings.h <84:9 <84:9 84:22> 84:25>]
COMMENT: comment [b2Settings.h <87:1 87:12>]
COMMENT: comment [b2Settings.h <89:1 89:68>]
SYMBOL_MACRO b2_maxTOIContacts [b2Settings.h <90:9 <90:9 90:25> 90:28>]
COMMENT: comment [b2Settings.h <92:1 92:86>]
COMMENT: comment [b2Settings.h <93:1 93:64>]
SYMBOL_MACRO b2_velocityThreshold [b2Settings.h <94:9 <94:9 94:28> 94:30>]
COMMENT: comment [b2Settings.h <96:1 96:88>]
COMMENT: comment [b2Settings.h <97:1 97:23>]
SYMBOL_MACRO b2_maxLinearCorrection [b2Settings.h <98:9 <98:9 98:30> 98:32>]
COMMENT: comment [b2Settings.h <100:1 100:89>]
COMMENT: comment [b2Settings.h <101:1 101:23>]
SYMBOL_MACRO b2_maxAngularCorrection [b2Settings.h <102:9 <102:9 102:31> 102:55>]
COMMENT: comment [b2Settings.h <104:1 104:80>]
COMMENT: comment [b2Settings.h <105:1 105:70>]
SYMBOL_MACRO b2_maxTranslation [b2Settings.h <106:9 <106:9 106:25> 106:28>]
SYMBOL_MACRO b2_maxTranslationSquared [b2Settings.h <107:9 <107:9 107:32> 107:71>]
COMMENT: comment [b2Settings.h <109:1 109:81>]
COMMENT: comment [b2Settings.h <110:1 110:70>]
SYMBOL_MACRO b2_maxRotation [b2Settings.h <111:9 <111:9 111:22> 111:39>]
SYMBOL_MACRO b2_maxRotationSquared [b2Settings.h <112:9 <112:9 112:29> 112:63>]
COMMENT: comment [b2Settings.h <114:1 114:88>]
COMMENT: comment [b2Settings.h <115:1 115:89>]
COMMENT: comment [b2Settings.h <116:1 116:18>]
SYMBOL_MACRO b2_baumgarte [b2Settings.h <117:9 <117:9 117:20> 117:24>]
SYMBOL_MACRO b2_toiBaugarte [b2Settings.h <118:9 <118:9 118:22> 118:26>]
COMMENT: comment [b2Settings.h <121:1 121:9>]
COMMENT: comment [b2Settings.h <123:1 123:67>]
SYMBOL_MACRO b2_timeToSleep [b2Settings.h <124:9 <124:9 124:22> 124:26>]
COMMENT: comment [b2Settings.h <126:1 126:72>]
SYMBOL_MACRO b2_linearSleepTolerance [b2Settings.h <127:9 <127:9 127:31> 127:33>]
COMMENT: comment [b2Settings.h <129:1 129:73>]
SYMBOL_MACRO b2_angularSleepTolerance [b2Settings.h <130:9 <130:9 130:32> 130:55>]
COMMENT: comment [b2Settings.h <132:1 132:21>]
COMMENT: comment [b2Settings.h <134:1 134:62>]
COMMENT: comment [b2Settings.h <137:1 137:71>]
COMMENT: comment [b2Settings.h <140:1 140:22>]
COMMENT: comment [b2Settings.h <143:1 143:30>]
COMMENT: comment [b2Settings.h <144:1 144:57>]
COMMENT: comment [b2Settings.h <147:16 147:40>]
COMMENT: comment [b2Settings.h <148:16 148:40>]
COMMENT: comment [b2Settings.h <149:19 149:33>]
COMMENT: comment [b2Settings.h <152:1 152:21>]
COMMENT: comment [b2Timer.h <24:1 24:65>]
COMMENT: comment [b2Timer.h <25:1 25:32>]
COMMENT: comment [b2Timer.h <30:2 30:17>]
COMMENT: comment [b2Timer.h <33:2 33:22>]
COMMENT: comment [b2Timer.h <36:2 36:56>]
REFERENCE_MACRO_USAGE b2Timer.h -> _WIN32 [b2Timer.h <41:13 41:18>]
REFERENCE_MACRO_USAGE b2Timer.cpp -> _WIN32 [b2Timer.cpp <21:13 21:18>]
REFERENCE_MACRO_USAGE b2Timer.cpp -> WIN32_LEAN_AND_MEAN [b2Timer.cpp <25:9 25:27>]
SYMBOL_MACRO WIN32_LEAN_AND_MEAN [b2Timer.cpp <26:9 <26:9 26:27> 26:8>]
REFERENCE_INCLUDE b2Timer.cpp -> Windows.h [b2Timer.cpp <29:10 29:20>]
FILE: Windows.h non-indexed
REFERENCE_INCLUDE Windows.h -> winapifamily.h [Windows.h <1:10 1:25>]
FILE: winapifamily.h non-indexed
REFERENCE_INCLUDE Windows.h -> sdkddkver.h [Windows.h <22:10 22:22>]
FILE: sdkddkver.h non-indexed
REFERENCE_INCLUDE Windows.h -> excpt.h [Windows.h <160:10 160:18>]
FILE: excpt.h non-indexed
REFERENCE_INCLUDE excpt.h -> vcruntime.h [excpt.h <12:10 12:22>]
REFERENCE_INCLUDE Windows.h -> stdarg.h [Windows.h <161:10 161:19>]
FILE: stdarg.h non-indexed
REFERENCE_INCLUDE stdarg.h -> vcruntime.h [stdarg.h <11:10 11:22>]
REFERENCE_INCLUDE Windows.h -> windef.h [Windows.h <164:10 164:19>]
FILE: windef.h non-indexed
REFERENCE_INCLUDE windef.h -> winapifamily.h [windef.h <1:10 1:25>]
REFERENCE_INCLUDE windef.h -> minwindef.h [windef.h <24:10 24:22>]
FILE: minwindef.h non-indexed
REFERENCE_INCLUDE minwindef.h -> specstrings.h [minwindef.h <14:10 14:24>]
FILE: specstrings.h non-indexed
REFERENCE_INCLUDE specstrings.h -> sal.h [specstrings.h <56:10 56:16>]
REFERENCE_INCLUDE specstrings.h -> specstrings_strict.h [specstrings.h <513:10 513:31>]
FILE: specstrings_strict.h non-indexed
REFERENCE_INCLUDE specstrings_strict.h -> specstrings_undef.h [specstrings_strict.h <188:10 188:30>]
FILE: specstrings_undef.h non-indexed
REFERENCE_INCLUDE specstrings.h -> driverspecs.h [specstrings.h <534:10 534:24>]
FILE: driverspecs.h non-indexed
REFERENCE_INCLUDE driverspecs.h -> sdv_driverspecs.h [driverspecs.h <125:10 125:28>]
FILE: sdv_driverspecs.h non-indexed
REFERENCE_INCLUDE driverspecs.h -> concurrencysal.h [driverspecs.h <126:10 126:27>]
REFERENCE_INCLUDE minwindef.h -> winapifamily.h [minwindef.h <16:10 16:25>]
REFERENCE_INCLUDE minwindef.h -> winnt.h [minwindef.h <182:10 182:18>]
FILE: winnt.h non-indexed
REFERENCE_INCLUDE winnt.h -> ctype.h [winnt.h <31:10 31:18>]
FILE: ctype.h non-indexed
REFERENCE_INCLUDE ctype.h -> corecrt.h [ctype.h <11:10 11:20>]
REFERENCE_INCLUDE ctype.h -> corecrt_wctype.h [ctype.h <12:10 12:27>]
FILE: corecrt_wctype.h non-indexed
REFERENCE_INCLUDE corecrt_wctype.h -> corecrt.h [corecrt_wctype.h <11:10 11:20>]
REFERENCE_INCLUDE winnt.h -> winapifamily.h [winnt.h <32:10 32:25>]
REFERENCE_INCLUDE winnt.h -> specstrings.h [winnt.h <82:10 82:24>]
REFERENCE_INCLUDE winnt.h -> kernelspecs.h [winnt.h <83:10 83:24>]
FILE: kernelspecs.h non-indexed
REFERENCE_INCLUDE kernelspecs.h -> driverspecs.h [kernelspecs.h <36:10 36:24>]
REFERENCE_INCLUDE winnt.h -> basetsd.h [winnt.h <171:10 171:20>]
FILE: basetsd.h non-indexed
REFERENCE_INCLUDE winnt.h -> guiddef.h [winnt.h <1083:10 1083:20>]
FILE: guiddef.h non-indexed
REFERENCE_INCLUDE guiddef.h -> string.h [guiddef.h <146:10 146:19>]
FILE: string.h non-indexed
REFERENCE_INCLUDE string.h -> corecrt.h [string.h <11:10 11:20>]
REFERENCE_INCLUDE string.h -> corecrt_memory.h [string.h <12:10 12:27>]
FILE: corecrt_memory.h non-indexed
REFERENCE_INCLUDE corecrt_memory.h -> corecrt.h [corecrt_memory.h <13:10 13:20>]
REFERENCE_INCLUDE corecrt_memory.h -> corecrt_memcpy_s.h [corecrt_memory.h <14:10 14:29>]
FILE: corecrt_memcpy_s.h non-indexed
REFERENCE_INCLUDE corecrt_memcpy_s.h -> corecrt.h [corecrt_memcpy_s.h <10:10 10:20>]
REFERENCE_INCLUDE corecrt_memcpy_s.h -> errno.h [corecrt_memcpy_s.h <11:10 11:18>]
FILE: errno.h non-indexed
REFERENCE_INCLUDE errno.h -> corecrt.h [errno.h <11:10 11:20>]
REFERENCE_INCLUDE corecrt_memcpy_s.h -> vcruntime_string.h [corecrt_memcpy_s.h <12:10 12:29>]
FILE: vcruntime_string.h non-indexed
REFERENCE_INCLUDE vcruntime_string.h -> vcruntime.h [vcruntime_string.h <10:10 10:22>]
REFERENCE_INCLUDE corecrt_memory.h -> vcruntime_string.h [corecrt_memory.h <15:10 15:29>]
REFERENCE_INCLUDE string.h -> corecrt_wstring.h [string.h <13:10 13:28>]
FILE: corecrt_wstring.h non-indexed
REFERENCE_INCLUDE corecrt_wstring.h -> corecrt.h [corecrt_wstring.h <11:10 11:20>]
REFERENCE_INCLUDE corecrt_wstring.h -> vcruntime_string.h [corecrt_wstring.h <12:10 12:29>]
REFERENCE_INCLUDE string.h -> vcruntime_string.h [string.h <14:10 14:29>]
REFERENCE_INCLUDE winnt.h -> excpt.h [winnt.h <1304:10 1304:18>]
REFERENCE_INCLUDE winnt.h -> sdkddkver.h [winnt.h <1466:10 1466:22>]
REFERENCE_INCLUDE winnt.h -> pshpack4.h [winnt.h <8835:10 8835:21>]
FILE: pshpack4.h non-indexed
REFERENCE_INCLUDE winnt.h -> poppack.h [winnt.h <8935:10 8935:20>]
FILE: poppack.h non-indexed
REFERENCE_INCLUDE winnt.h -> pshpack4.h [winnt.h <9168:10 9168:21>]
REFERENCE_INCLUDE winnt.h -> poppack.h [winnt.h <9177:10 9177:20>]
REFERENCE_INCLUDE winnt.h -> pshpack4.h [winnt.h <14869:10 14869:21>]
REFERENCE_INCLUDE winnt.h -> pshpack2.h [winnt.h <14877:10 14877:21>]
FILE: pshpack2.h non-indexed
REFERENCE_INCLUDE winnt.h -> poppack.h [winnt.h <14999:10 14999:20>]
REFERENCE_INCLUDE winnt.h -> pshpack2.h [winnt.h <15405:10 15405:21>]
REFERENCE_INCLUDE winnt.h -> pshpack2.h [winnt.h <15568:10 15568:21>]
REFERENCE_INCLUDE winnt.h -> poppack.h [winnt.h <15579:10 15579:20>]
REFERENCE_INCLUDE winnt.h -> poppack.h [winnt.h <16074:10 16074:20>]
REFERENCE_INCLUDE winnt.h -> pshpack8.h [winnt.h <16171:10 16171:21>]
FILE: pshpack8.h non-indexed
REFERENCE_INCLUDE winnt.h -> poppack.h [winnt.h <16183:10 16183:20>]
REFERENCE_INCLUDE winnt.h -> poppack.h [winnt.h <16764:10 16764:20>]
REFERENCE_INCLUDE winnt.h -> apiset.h [winnt.h <16892:10 16892:19>]
FILE: apiset.h non-indexed
REFERENCE_INCLUDE winnt.h -> string.h [winnt.h <17464:10 17464:19>]
REFERENCE_INCLUDE winnt.h -> ktmtypes.h [winnt.h <19112:10 19112:21>]
FILE: ktmtypes.h non-indexed
REFERENCE_INCLUDE windef.h -> winnt.h [windef.h <31:10 31:18>]
REFERENCE_INCLUDE Windows.h -> WinBase.h [Windows.h <165:10 165:20>]
FILE: WinBase.h non-indexed
REFERENCE_INCLUDE WinBase.h -> winapifamily.h [WinBase.h <1:10 1:25>]
REFERENCE_INCLUDE WinBase.h -> apisetcconv.h [WinBase.h <30:10 30:24>]
FILE: apisetcconv.h non-indexed
REFERENCE_INCLUDE WinBase.h -> minwinbase.h [WinBase.h <31:10 31:23>]
FILE: minwinbase.h non-indexed
REFERENCE_INCLUDE WinBase.h -> processenv.h [WinBase.h <37:10 37:23>]
FILE: processenv.h non-indexed
REFERENCE_INCLUDE processenv.h -> apiset.h [processenv.h <19:10 19:19>]
REFERENCE_INCLUDE processenv.h -> apisetcconv.h [processenv.h <20:10 20:24>]
REFERENCE_INCLUDE processenv.h -> minwindef.h [processenv.h <23:10 23:22>]
REFERENCE_INCLUDE WinBase.h -> fileapi.h [WinBase.h <38:10 38:20>]
FILE: fileapi.h non-indexed
REFERENCE_INCLUDE fileapi.h -> apiset.h [fileapi.h <21:10 21:19>]
REFERENCE_INCLUDE fileapi.h -> apisetcconv.h [fileapi.h <22:10 22:24>]
REFERENCE_INCLUDE fileapi.h -> minwindef.h [fileapi.h <23:10 23:22>]
REFERENCE_INCLUDE fileapi.h -> minwinbase.h [fileapi.h <24:10 24:23>]
REFERENCE_INCLUDE WinBase.h -> debugapi.h [WinBase.h <39:10 39:21>]
FILE: debugapi.h non-indexed
REFERENCE_INCLUDE debugapi.h -> apiset.h [debugapi.h <19:10 19:19>]
REFERENCE_INCLUDE debugapi.h -> apisetcconv.h [debugapi.h <20:10 20:24>]
REFERENCE_INCLUDE debugapi.h -> minwindef.h [debugapi.h <21:10 21:22>]
REFERENCE_INCLUDE debugapi.h -> minwinbase.h [debugapi.h <22:10 22:23>]
REFERENCE_INCLUDE WinBase.h -> utilapiset.h [WinBase.h <40:10 40:23>]
FILE: utilapiset.h non-indexed
REFERENCE_INCLUDE utilapiset.h -> apiset.h [utilapiset.h <17:10 17:19>]
REFERENCE_INCLUDE utilapiset.h -> apisetcconv.h [utilapiset.h <18:10 18:24>]
REFERENCE_INCLUDE utilapiset.h -> minwindef.h [utilapiset.h <19:10 19:22>]
REFERENCE_INCLUDE WinBase.h -> handleapi.h [WinBase.h <41:10 41:22>]
FILE: handleapi.h non-indexed
REFERENCE_INCLUDE handleapi.h -> apiset.h [handleapi.h <17:10 17:19>]
REFERENCE_INCLUDE handleapi.h -> apisetcconv.h [handleapi.h <18:10 18:24>]
REFERENCE_INCLUDE handleapi.h -> minwindef.h [handleapi.h <19:10 19:22>]
REFERENCE_INCLUDE WinBase.h -> errhandlingapi.h [WinBase.h <42:10 42:27>]
FILE: errhandlingapi.h non-indexed
REFERENCE_INCLUDE errhandlingapi.h -> apiset.h [errhandlingapi.h <19:10 19:19>]
REFERENCE_INCLUDE errhandlingapi.h -> apisetcconv.h [errhandlingapi.h <20:10 20:24>]
REFERENCE_INCLUDE errhandlingapi.h -> minwindef.h [errhandlingapi.h <21:10 21:22>]
REFERENCE_INCLUDE WinBase.h -> fibersapi.h [WinBase.h <43:10 43:22>]
FILE: fibersapi.h non-indexed
REFERENCE_INCLUDE fibersapi.h -> apiset.h [fibersapi.h <19:10 19:19>]
REFERENCE_INCLUDE fibersapi.h -> apisetcconv.h [fibersapi.h <20:10 20:24>]
REFERENCE_INCLUDE fibersapi.h -> minwindef.h [fibersapi.h <21:10 21:22>]
REFERENCE_INCLUDE WinBase.h -> namedpipeapi.h [WinBase.h <44:10 44:25>]
FILE: namedpipeapi.h non-indexed
REFERENCE_INCLUDE namedpipeapi.h -> apiset.h [namedpipeapi.h <19:10 19:19>]
REFERENCE_INCLUDE namedpipeapi.h -> apisetcconv.h [namedpipeapi.h <20:10 20:24>]
REFERENCE_INCLUDE namedpipeapi.h -> minwindef.h [namedpipeapi.h <21:10 21:22>]
REFERENCE_INCLUDE namedpipeapi.h -> minwinbase.h [namedpipeapi.h <22:10 22:23>]
REFERENCE_INCLUDE WinBase.h -> profileapi.h [WinBase.h <45:10 45:23>]
FILE: profileapi.h non-indexed
REFERENCE_INCLUDE profileapi.h -> apiset.h [profileapi.h <17:10 17:19>]
REFERENCE_INCLUDE profileapi.h -> apisetcconv.h [profileapi.h <18:10 18:24>]
REFERENCE_INCLUDE profileapi.h -> minwindef.h [profileapi.h <19:10 19:22>]
REFERENCE_INCLUDE WinBase.h -> heapapi.h [WinBase.h <46:10 46:20>]
FILE: heapapi.h non-indexed
REFERENCE_INCLUDE heapapi.h -> apiset.h [heapapi.h <17:10 17:19>]
REFERENCE_INCLUDE heapapi.h -> apisetcconv.h [heapapi.h <18:10 18:24>]
REFERENCE_INCLUDE heapapi.h -> minwindef.h [heapapi.h <19:10 19:22>]
REFERENCE_INCLUDE heapapi.h -> minwinbase.h [heapapi.h <20:10 20:23>]
REFERENCE_INCLUDE WinBase.h -> ioapiset.h [WinBase.h <47:10 47:21>]
FILE: ioapiset.h non-indexed
REFERENCE_INCLUDE ioapiset.h -> apiset.h [ioapiset.h <19:10 19:19>]
REFERENCE_INCLUDE ioapiset.h -> apisetcconv.h [ioapiset.h <20:10 20:24>]
REFERENCE_INCLUDE ioapiset.h -> minwindef.h [ioapiset.h <21:10 21:22>]
REFERENCE_INCLUDE ioapiset.h -> minwinbase.h [ioapiset.h <22:10 22:23>]
REFERENCE_INCLUDE WinBase.h -> synchapi.h [WinBase.h <48:10 48:21>]
FILE: synchapi.h non-indexed
REFERENCE_INCLUDE synchapi.h -> apiset.h [synchapi.h <20:10 20:19>]
REFERENCE_INCLUDE synchapi.h -> apisetcconv.h [synchapi.h <21:10 21:24>]
REFERENCE_INCLUDE synchapi.h -> minwindef.h [synchapi.h <22:10 22:22>]
REFERENCE_INCLUDE synchapi.h -> minwinbase.h [synchapi.h <23:10 23:23>]
REFERENCE_INCLUDE WinBase.h -> interlockedapi.h [WinBase.h <49:10 49:27>]
FILE: interlockedapi.h non-indexed
REFERENCE_INCLUDE interlockedapi.h -> apiset.h [interlockedapi.h <19:10 19:19>]
REFERENCE_INCLUDE interlockedapi.h -> apisetcconv.h [interlockedapi.h <20:10 20:24>]
REFERENCE_INCLUDE interlockedapi.h -> minwindef.h [interlockedapi.h <21:10 21:22>]
REFERENCE_INCLUDE WinBase.h -> processthreadsapi.h [WinBase.h <50:10 50:30>]
FILE: processthreadsapi.h non-indexed
REFERENCE_INCLUDE processthreadsapi.h -> apiset.h [processthreadsapi.h <20:10 20:19>]
REFERENCE_INCLUDE processthreadsapi.h -> apisetcconv.h [processthreadsapi.h <21:10 21:24>]
REFERENCE_INCLUDE processthreadsapi.h -> minwindef.h [processthreadsapi.h <22:10 22:22>]
REFERENCE_INCLUDE processthreadsapi.h -> minwinbase.h [processthreadsapi.h <23:10 23:23>]
REFERENCE_INCLUDE WinBase.h -> sysinfoapi.h [WinBase.h <51:10 51:23>]
FILE: sysinfoapi.h non-indexed
REFERENCE_INCLUDE sysinfoapi.h -> apiset.h [sysinfoapi.h <21:10 21:19>]
REFERENCE_INCLUDE sysinfoapi.h -> apisetcconv.h [sysinfoapi.h <22:10 22:24>]
REFERENCE_INCLUDE sysinfoapi.h -> minwindef.h [sysinfoapi.h <23:10 23:22>]
REFERENCE_INCLUDE sysinfoapi.h -> minwinbase.h [sysinfoapi.h <24:10 24:23>]
REFERENCE_INCLUDE WinBase.h -> memoryapi.h [WinBase.h <52:10 52:22>]
FILE: memoryapi.h non-indexed
REFERENCE_INCLUDE memoryapi.h -> apiset.h [memoryapi.h <20:10 20:19>]
REFERENCE_INCLUDE memoryapi.h -> apisetcconv.h [memoryapi.h <21:10 21:24>]
REFERENCE_INCLUDE memoryapi.h -> minwindef.h [memoryapi.h <22:10 22:22>]
REFERENCE_INCLUDE memoryapi.h -> minwinbase.h [memoryapi.h <23:10 23:23>]
REFERENCE_INCLUDE WinBase.h -> threadpoollegacyapiset.h [WinBase.h <53:10 53:35>]
FILE: threadpoollegacyapiset.h non-indexed
REFERENCE_INCLUDE threadpoollegacyapiset.h -> apiset.h [threadpoollegacyapiset.h <17:10 17:19>]
REFERENCE_INCLUDE threadpoollegacyapiset.h -> apisetcconv.h [threadpoollegacyapiset.h <18:10 18:24>]
REFERENCE_INCLUDE threadpoollegacyapiset.h -> minwindef.h [threadpoollegacyapiset.h <19:10 19:22>]
REFERENCE_INCLUDE threadpoollegacyapiset.h -> minwinbase.h [threadpoollegacyapiset.h <20:10 20:23>]
REFERENCE_INCLUDE WinBase.h -> threadpoolapiset.h [WinBase.h <54:10 54:29>]
FILE: threadpoolapiset.h non-indexed
REFERENCE_INCLUDE threadpoolapiset.h -> apiset.h [threadpoolapiset.h <18:10 18:19>]
REFERENCE_INCLUDE threadpoolapiset.h -> apisetcconv.h [threadpoolapiset.h <19:10 19:24>]
REFERENCE_INCLUDE threadpoolapiset.h -> minwindef.h [threadpoolapiset.h <20:10 20:22>]
REFERENCE_INCLUDE threadpoolapiset.h -> minwinbase.h [threadpoolapiset.h <21:10 21:23>]
REFERENCE_INCLUDE WinBase.h -> bemapiset.h [WinBase.h <55:10 55:22>]
FILE: bemapiset.h non-indexed
REFERENCE_INCLUDE bemapiset.h -> apiset.h [bemapiset.h <17:10 17:19>]
REFERENCE_INCLUDE bemapiset.h -> apisetcconv.h [bemapiset.h <18:10 18:24>]
REFERENCE_INCLUDE bemapiset.h -> minwindef.h [bemapiset.h <19:10 19:22>]
REFERENCE_INCLUDE bemapiset.h -> minwinbase.h [bemapiset.h <20:10 20:23>]
REFERENCE_INCLUDE WinBase.h -> jobapi.h [WinBase.h <56:10 56:19>]
FILE: jobapi.h non-indexed
REFERENCE_INCLUDE jobapi.h -> apiset.h [jobapi.h <17:10 17:19>]
REFERENCE_INCLUDE jobapi.h -> apisetcconv.h [jobapi.h <18:10 18:24>]
REFERENCE_INCLUDE jobapi.h -> minwindef.h [jobapi.h <19:10 19:22>]
REFERENCE_INCLUDE jobapi.h -> minwinbase.h [jobapi.h <20:10 20:23>]
REFERENCE_INCLUDE WinBase.h -> wow64apiset.h [WinBase.h <57:10 57:24>]
FILE: wow64apiset.h non-indexed
REFERENCE_INCLUDE wow64apiset.h -> apiset.h [wow64apiset.h <17:10 17:19>]
REFERENCE_INCLUDE wow64apiset.h -> apisetcconv.h [wow64apiset.h <18:10 18:24>]
REFERENCE_INCLUDE wow64apiset.h -> minwindef.h [wow64apiset.h <19:10 19:22>]
REFERENCE_INCLUDE wow64apiset.h -> minwinbase.h [wow64apiset.h <20:10 20:23>]
REFERENCE_INCLUDE WinBase.h -> libloaderapi.h [WinBase.h <58:10 58:25>]
FILE: libloaderapi.h non-indexed
REFERENCE_INCLUDE libloaderapi.h -> apiset.h [libloaderapi.h <20:10 20:19>]
REFERENCE_INCLUDE libloaderapi.h -> apisetcconv.h [libloaderapi.h <21:10 21:24>]
REFERENCE_INCLUDE libloaderapi.h -> minwindef.h [libloaderapi.h <22:10 22:22>]
REFERENCE_INCLUDE libloaderapi.h -> minwinbase.h [libloaderapi.h <23:10 23:23>]
REFERENCE_INCLUDE WinBase.h -> securitybaseapi.h [WinBase.h <59:10 59:28>]
FILE: securitybaseapi.h non-indexed
REFERENCE_INCLUDE securitybaseapi.h -> apiset.h [securitybaseapi.h <19:10 19:19>]
REFERENCE_INCLUDE securitybaseapi.h -> apisetcconv.h [securitybaseapi.h <20:10 20:24>]
REFERENCE_INCLUDE securitybaseapi.h -> minwindef.h [securitybaseapi.h <21:10 21:22>]
REFERENCE_INCLUDE securitybaseapi.h -> minwinbase.h [securitybaseapi.h <22:10 22:23>]
REFERENCE_INCLUDE WinBase.h -> namespaceapi.h [WinBase.h <60:10 60:25>]
FILE: namespaceapi.h non-indexed
REFERENCE_INCLUDE namespaceapi.h -> apiset.h [namespaceapi.h <17:10 17:19>]
REFERENCE_INCLUDE namespaceapi.h -> apisetcconv.h [namespaceapi.h <18:10 18:24>]
REFERENCE_INCLUDE namespaceapi.h -> minwindef.h [namespaceapi.h <19:10 19:22>]
REFERENCE_INCLUDE namespaceapi.h -> minwinbase.h [namespaceapi.h <20:10 20:23>]
REFERENCE_INCLUDE WinBase.h -> systemtopologyapi.h [WinBase.h <61:10 61:30>]
FILE: systemtopologyapi.h non-indexed
REFERENCE_INCLUDE systemtopologyapi.h -> apiset.h [systemtopologyapi.h <17:10 17:19>]
REFERENCE_INCLUDE systemtopologyapi.h -> apisetcconv.h [systemtopologyapi.h <18:10 18:24>]
REFERENCE_INCLUDE systemtopologyapi.h -> minwindef.h [systemtopologyapi.h <19:10 19:22>]
REFERENCE_INCLUDE systemtopologyapi.h -> minwinbase.h [systemtopologyapi.h <20:10 20:23>]
REFERENCE_INCLUDE WinBase.h -> processtopologyapi.h [WinBase.h <62:10 62:31>]
FILE: processtopologyapi.h non-indexed
REFERENCE_INCLUDE processtopologyapi.h -> apiset.h [processtopologyapi.h <18:10 18:19>]
REFERENCE_INCLUDE processtopologyapi.h -> apisetcconv.h [processtopologyapi.h <19:10 19:24>]
REFERENCE_INCLUDE processtopologyapi.h -> minwindef.h [processtopologyapi.h <20:10 20:22>]
REFERENCE_INCLUDE processtopologyapi.h -> minwinbase.h [processtopologyapi.h <21:10 21:23>]
REFERENCE_INCLUDE WinBase.h -> securityappcontainer.h [WinBase.h <63:10 63:33>]
FILE: securityappcontainer.h non-indexed
REFERENCE_INCLUDE securityappcontainer.h -> apiset.h [securityappcontainer.h <17:10 17:19>]
REFERENCE_INCLUDE securityappcontainer.h -> apisetcconv.h [securityappcontainer.h <18:10 18:24>]
REFERENCE_INCLUDE securityappcontainer.h -> minwindef.h [securityappcontainer.h <21:10 21:22>]
REFERENCE_INCLUDE securityappcontainer.h -> minwinbase.h [securityappcontainer.h <22:10 22:23>]
REFERENCE_INCLUDE WinBase.h -> realtimeapiset.h [WinBase.h <64:10 64:27>]
FILE: realtimeapiset.h non-indexed
REFERENCE_INCLUDE realtimeapiset.h -> apiset.h [realtimeapiset.h <17:10 17:19>]
REFERENCE_INCLUDE realtimeapiset.h -> apisetcconv.h [realtimeapiset.h <18:10 18:24>]
REFERENCE_INCLUDE realtimeapiset.h -> minwindef.h [realtimeapiset.h <19:10 19:22>]
REFERENCE_INCLUDE WinBase.h -> winerror.h [WinBase.h <7358:10 7358:21>]
FILE: winerror.h non-indexed
REFERENCE_INCLUDE winerror.h -> specstrings.h [winerror.h <24:10 24:24>]
REFERENCE_INCLUDE WinBase.h -> timezoneapi.h [WinBase.h <7359:10 7359:24>]
FILE: timezoneapi.h non-indexed
REFERENCE_INCLUDE timezoneapi.h -> apiset.h [timezoneapi.h <18:10 18:19>]
REFERENCE_INCLUDE timezoneapi.h -> apisetcconv.h [timezoneapi.h <19:10 19:24>]
REFERENCE_INCLUDE timezoneapi.h -> minwindef.h [timezoneapi.h <20:10 20:22>]
REFERENCE_INCLUDE timezoneapi.h -> minwinbase.h [timezoneapi.h <21:10 21:23>]
REFERENCE_INCLUDE Windows.h -> wingdi.h [Windows.h <166:10 166:19>]
FILE: wingdi.h non-indexed
REFERENCE_INCLUDE wingdi.h -> winapifamily.h [wingdi.h <1:10 1:25>]
REFERENCE_INCLUDE wingdi.h -> pshpack1.h [wingdi.h <611:10 611:21>]
FILE: pshpack1.h non-indexed
REFERENCE_INCLUDE wingdi.h -> poppack.h [wingdi.h <625:10 625:20>]
REFERENCE_INCLUDE wingdi.h -> pshpack2.h [wingdi.h <928:10 928:21>]
REFERENCE_INCLUDE wingdi.h -> poppack.h [wingdi.h <944:10 944:20>]
REFERENCE_INCLUDE wingdi.h -> pshpack2.h [wingdi.h <1039:10 1039:21>]
REFERENCE_INCLUDE wingdi.h -> poppack.h [wingdi.h <1060:10 1060:20>]
REFERENCE_INCLUDE wingdi.h -> pshpack4.h [wingdi.h <1138:10 1138:21>]
REFERENCE_INCLUDE wingdi.h -> poppack.h [wingdi.h <1204:10 1204:20>]
REFERENCE_INCLUDE wingdi.h -> pshpack4.h [wingdi.h <1221:10 1221:21>]
REFERENCE_INCLUDE wingdi.h -> poppack.h [wingdi.h <1295:10 1295:20>]
REFERENCE_INCLUDE Windows.h -> WinUser.h [Windows.h <167:10 167:20>]
FILE: WinUser.h non-indexed
REFERENCE_INCLUDE WinUser.h -> winapifamily.h [WinUser.h <1:10 1:25>]
REFERENCE_INCLUDE WinUser.h -> stdarg.h [WinUser.h <51:10 51:19>]
REFERENCE_INCLUDE WinUser.h -> libloaderapi.h [WinUser.h <54:10 54:25>]
REFERENCE_INCLUDE WinUser.h -> pshpack2.h [WinUser.h <4686:10 4686:21>]
REFERENCE_INCLUDE WinUser.h -> poppack.h [WinUser.h <4770:10 4770:20>]
REFERENCE_INCLUDE WinUser.h -> tvout.h [WinUser.h <12344:10 12344:18>]
FILE: tvout.h non-indexed
REFERENCE_INCLUDE tvout.h -> winapifamily.h [tvout.h <1:10 1:25>]
REFERENCE_INCLUDE Windows.h -> WinNls.h [Windows.h <169:10 169:19>]
FILE: WinNls.h non-indexed
REFERENCE_INCLUDE WinNls.h -> winapifamily.h [WinNls.h <20:10 20:25>]
REFERENCE_INCLUDE WinNls.h -> datetimeapi.h [WinNls.h <30:10 30:24>]
FILE: datetimeapi.h non-indexed
REFERENCE_INCLUDE datetimeapi.h -> apiset.h [datetimeapi.h <19:10 19:19>]
REFERENCE_INCLUDE datetimeapi.h -> apisetcconv.h [datetimeapi.h <20:10 20:24>]
REFERENCE_INCLUDE datetimeapi.h -> minwindef.h [datetimeapi.h <21:10 21:22>]
REFERENCE_INCLUDE datetimeapi.h -> minwinbase.h [datetimeapi.h <22:10 22:23>]
REFERENCE_INCLUDE WinNls.h -> libloaderapi.h [WinNls.h <31:10 31:25>]
REFERENCE_INCLUDE WinNls.h -> stringapiset.h [WinNls.h <1279:10 1279:25>]
FILE: stringapiset.h non-indexed
REFERENCE_INCLUDE stringapiset.h -> apiset.h [stringapiset.h <17:10 17:19>]
REFERENCE_INCLUDE stringapiset.h -> apisetcconv.h [stringapiset.h <18:10 18:24>]
REFERENCE_INCLUDE stringapiset.h -> minwindef.h [stringapiset.h <19:10 19:22>]
REFERENCE_INCLUDE stringapiset.h -> WinNls.h [stringapiset.h <20:10 20:19>]
REFERENCE_INCLUDE Windows.h -> wincon.h [Windows.h <172:10 172:19>]
FILE: wincon.h non-indexed
REFERENCE_INCLUDE wincon.h -> winapifamily.h [wincon.h <1:10 1:25>]
REFERENCE_INCLUDE wincon.h -> wingdi.h [wincon.h <34:10 34:19>]
REFERENCE_INCLUDE wincon.h -> consoleapi.h [wincon.h <817:10 817:23>]
FILE: consoleapi.h non-indexed
REFERENCE_INCLUDE consoleapi.h -> apiset.h [consoleapi.h <17:10 17:19>]
REFERENCE_INCLUDE consoleapi.h -> apisetcconv.h [consoleapi.h <18:10 18:24>]
REFERENCE_INCLUDE consoleapi.h -> Windows.h [consoleapi.h <21:10 21:20>]
REFERENCE_INCLUDE Windows.h -> winver.h [Windows.h <173:10 173:19>]
FILE: winver.h non-indexed
REFERENCE_INCLUDE winver.h -> winapifamily.h [winver.h <1:10 1:25>]
REFERENCE_INCLUDE winver.h -> specstrings.h [winver.h <18:10 18:24>]
REFERENCE_INCLUDE winver.h -> verrsrc.h [winver.h <19:10 19:20>]
FILE: verrsrc.h non-indexed
REFERENCE_INCLUDE verrsrc.h -> winapifamily.h [verrsrc.h <1:10 1:25>]
REFERENCE_INCLUDE Windows.h -> winreg.h [Windows.h <176:10 176:19>]
FILE: winreg.h non-indexed
REFERENCE_INCLUDE winreg.h -> winapifamily.h [winreg.h <20:10 20:25>]
REFERENCE_INCLUDE winreg.h -> apiset.h [winreg.h <22:10 22:19>]
REFERENCE_INCLUDE winreg.h -> apisetcconv.h [winreg.h <23:10 23:24>]
REFERENCE_INCLUDE winreg.h -> minwindef.h [winreg.h <24:10 24:22>]
REFERENCE_INCLUDE winreg.h -> minwinbase.h [winreg.h <25:10 25:23>]
REFERENCE_INCLUDE winreg.h -> reason.h [winreg.h <1316:10 1316:19>]
FILE: reason.h non-indexed
REFERENCE_INCLUDE reason.h -> winapifamily.h [reason.h <1:10 1:25>]
REFERENCE_INCLUDE Windows.h -> winnetwk.h [Windows.h <179:10 179:21>]
FILE: winnetwk.h non-indexed
REFERENCE_INCLUDE winnetwk.h -> winapifamily.h [winnetwk.h <1:10 1:25>]
REFERENCE_INCLUDE winnetwk.h -> wnnc.h [winnetwk.h <43:10 43:17>]
FILE: wnnc.h non-indexed
REFERENCE_INCLUDE wnnc.h -> winapifamily.h [wnnc.h <1:10 1:25>]
REFERENCE_INCLUDE Windows.h -> stralign.h [Windows.h <217:10 217:21>]
FILE: stralign.h non-indexed
REFERENCE_INCLUDE stralign.h -> winapifamily.h [stralign.h <1:10 1:25>]
REFERENCE_INCLUDE Windows.h -> winsvc.h [Windows.h <230:10 230:19>]
FILE: winsvc.h non-indexed
REFERENCE_INCLUDE winsvc.h -> winapifamily.h [winsvc.h <21:10 21:25>]
REFERENCE_INCLUDE Windows.h -> mcx.h [Windows.h <235:10 235:16>]
FILE: mcx.h non-indexed
REFERENCE_INCLUDE Windows.h -> imm.h [Windows.h <239:10 239:16>]
FILE: imm.h non-indexed
REFERENCE_INCLUDE imm.h -> winapifamily.h [imm.h <1:10 1:25>]
REFERENCE_INCLUDE imm.h -> ime_cmodes.h [imm.h <638:10 638:23>]
FILE: ime_cmodes.h non-indexed
SYMBOL_TYPEDEF int8 [b2Settings.h <33:21 33:24>]
SYMBOL_BUILTIN_TYPE signed char
REFERENCE_TYPE_USAGE int8 -> signed char [b2Settings.h <33:9 33:14>]
SYMBOL_TYPEDEF int16 [b2Settings.h <34:22 34:26>]
SYMBOL_BUILTIN_TYPE short
REFERENCE_TYPE_USAGE int16 -> short [b2Settings.h <34:9 34:14>]
SYMBOL_TYPEDEF int32 [b2Settings.h <35:20 35:24>]
SYMBOL_BUILTIN_TYPE int
REFERENCE_TYPE_USAGE int32 -> int [b2Settings.h <35:9 35:14>]
SYMBOL_TYPEDEF uint8 [b2Settings.h <36:23 36:27>]
SYMBOL_BUILTIN_TYPE unsigned char
REFERENCE_TYPE_USAGE uint8 -> unsigned char [b2Settings.h <36:9 36:16>]
SYMBOL_TYPEDEF uint16 [b2Settings.h <37:24 37:29>]
SYMBOL_BUILTIN_TYPE unsigned short
REFERENCE_TYPE_USAGE uint16 -> unsigned short [b2Settings.h <37:9 37:16>]
SYMBOL_TYPEDEF uint32 [b2Settings.h <38:22 38:27>]
SYMBOL_BUILTIN_TYPE unsigned int
REFERENCE_TYPE_USAGE uint32 -> unsigned int [b2Settings.h <38:9 38:16>]
SYMBOL_TYPEDEF float32 [b2Settings.h <39:15 39:21>]
SYMBOL_BUILTIN_TYPE float
REFERENCE_TYPE_USAGE float32 -> float [b2Settings.h <39:9 39:13>]
SYMBOL_TYPEDEF float64 [b2Settings.h <40:16 40:22>]
SYMBOL_BUILTIN_TYPE double
REFERENCE_TYPE_USAGE float64 -> double [b2Settings.h <40:9 40:14>]
SYMBOL_FUNCTION void * b2Alloc(int32) [b2Settings.h <135:1 <135:7 135:13> 135:25>]
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void * b2Alloc(int32) -> void [b2Settings.h <135:1 135:4>]
LOCAL_SYMBOL: b2Settings.h<135:21> [b2Settings.h <135:21 135:24>]
REFERENCE_TYPE_USAGE void * b2Alloc(int32) -> int32 [b2Settings.h <135:15 135:19>]
SYMBOL_FUNCTION void b2Free(void *) [b2Settings.h <138:1 <138:6 138:11> 138:22>]
REFERENCE_TYPE_USAGE void b2Free(void *) -> void [b2Settings.h <138:1 138:4>]
LOCAL_SYMBOL: b2Settings.h<138:19> [b2Settings.h <138:19 138:21>]
REFERENCE_TYPE_USAGE void b2Free(void *) -> void [b2Settings.h <138:13 138:16>]
SYMBOL_FUNCTION void b2Log(const char *) [b2Settings.h <141:1 <141:6 141:10> 141:35>]
REFERENCE_TYPE_USAGE void b2Log(const char *) -> void [b2Settings.h <141:1 141:4>]
LOCAL_SYMBOL: b2Settings.h<141:24> [b2Settings.h <141:24 141:29>]
SYMBOL_BUILTIN_TYPE char
REFERENCE_TYPE_USAGE void b2Log(const char *) -> char [b2Settings.h <141:18 141:21>]
SYMBOL_STRUCT b2Version [b2Settings.h <145:1 <145:8 145:16> 150:1>]
LOCAL_SYMBOL: b2Settings.h<146:1> [b2Settings.h <146:1 146:1>]
LOCAL_SYMBOL: b2Settings.h<146:1> [b2Settings.h <150:1 150:1>]
SYMBOL_FIELD public int32 b2Version::major [b2Settings.h <147:8 147:12>]
REFERENCE_TYPE_USAGE int32 b2Version::major -> int32 [b2Settings.h <147:2 147:6>]
SYMBOL_FIELD public int32 b2Version::minor [b2Settings.h <148:8 148:12>]
REFERENCE_TYPE_USAGE int32 b2Version::minor -> int32 [b2Settings.h <148:2 148:6>]
SYMBOL_FIELD public int32 b2Version::revision [b2Settings.h <149:8 149:15>]
REFERENCE_TYPE_USAGE int32 b2Version::revision -> int32 [b2Settings.h <149:2 149:6>]
SYMBOL_GLOBAL_VARIABLE b2Version b2_version [b2Settings.h <153:18 153:27>]
REFERENCE_TYPE_USAGE b2Version b2_version -> b2Version [b2Settings.h <153:8 153:16>]
SYMBOL_CLASS b2Timer [b2Timer.h <26:1 <26:7 26:13> 48:1>]
LOCAL_SYMBOL: b2Timer.h<27:1> [b2Timer.h <27:1 27:1>]
LOCAL_SYMBOL: b2Timer.h<27:1> [b2Timer.h <48:1 48:1>]
SYMBOL_METHOD public void b2Timer::b2Timer() [b2Timer.h <31:2 <31:2 31:8> 31:10>]
SYMBOL_METHOD public void b2Timer::Reset() [b2Timer.h <34:2 <34:7 34:11> 34:13>]
REFERENCE_TYPE_USAGE void b2Timer::Reset() -> void [b2Timer.h <34:2 34:5>]
SYMBOL_METHOD public float32 b2Timer::GetMilliseconds() const [b2Timer.h <37:2 <37:10 37:24> 37:32>]
REFERENCE_TYPE_USAGE float32 b2Timer::GetMilliseconds() const -> float32 [b2Timer.h <37:2 37:8>]
SYMBOL_FIELD private float64 b2Timer::m_start [b2Timer.h <42:10 42:16>]
REFERENCE_TYPE_USAGE float64 b2Timer::m_start -> float64 [b2Timer.h <42:2 42:8>]
SYMBOL_FIELD private static float64 b2Timer::s_invFrequency [b2Timer.h <43:17 43:30>]
REFERENCE_TYPE_USAGE static float64 b2Timer::s_invFrequency -> float64 [b2Timer.h <43:9 43:15>]
SYMBOL_METHOD public void b2Timer::b2Timer(const b2Timer &) [b2Timer.h <26:7 <26:7 26:13> 26:13>]
SYMBOL_METHOD public void b2Timer::b2Timer(b2Timer &&) [b2Timer.h <26:7 <26:7 26:13> 26:13>]
SYMBOL_FIELD private static float64 b2Timer::s_invFrequency [b2Timer.cpp <23:18 23:31>]
SYMBOL_CLASS b2Timer
QUALIFIER: b2Timer [b2Timer.cpp <23:9 23:15>]
REFERENCE_TYPE_USAGE static float64 b2Timer::s_invFrequency -> float64 [b2Timer.cpp <23:1 23:7>]
SYMBOL_METHOD public void b2Timer::b2Timer() [b2Timer.cpp <31:1 <31:10 31:16> 47:1>]
QUALIFIER: b2Timer [b2Timer.cpp <31:1 31:7>]
LOCAL_SYMBOL: b2Timer.cpp<32:1> [b2Timer.cpp <32:1 32:1>]
LOCAL_SYMBOL: b2Timer.cpp<32:1> [b2Timer.cpp <47:1 47:1>]
LOCAL_SYMBOL: b2Timer.cpp<33:16> [b2Timer.cpp <33:16 33:27>]
REFERENCE_TYPE_USAGE void b2Timer::b2Timer() -> LARGE_INTEGER [b2Timer.cpp <33:2 33:14>]
SYMBOL_FUNCTION void _LARGE_INTEGER::_LARGE_INTEGER()
REFERENCE_CALL void b2Timer::b2Timer() -> void _LARGE_INTEGER::_LARGE_INTEGER() [b2Timer.cpp <33:16 33:27>]
REFERENCE_USAGE void b2Timer::b2Timer() -> static float64 b2Timer::s_invFrequency [b2Timer.cpp <35:6 35:19>]
LOCAL_SYMBOL: b2Timer.cpp<36:2> [b2Timer.cpp <36:2 36:2>]
LOCAL_SYMBOL: b2Timer.cpp<36:2> [b2Timer.cpp <43:2 43:2>]
SYMBOL_FUNCTION BOOL QueryPerformanceFrequency(LARGE_INTEGER *)
REFERENCE_CALL void b2Timer::b2Timer() -> BOOL QueryPerformanceFrequency(LARGE_INTEGER *) [b2Timer.cpp <37:3 37:27>]
LOCAL_SYMBOL: b2Timer.cpp<33:16> [b2Timer.cpp <37:30 37:41>]
REFERENCE_USAGE void b2Timer::b2Timer() -> static float64 b2Timer::s_invFrequency [b2Timer.cpp <38:3 38:16>]
REFERENCE_TYPE_USAGE void b2Timer::b2Timer() -> float64 [b2Timer.cpp <38:20 38:26>]
REFERENCE_USAGE void b2Timer::b2Timer() -> LONGLONG _LARGE_INTEGER::QuadPart [b2Timer.cpp <38:41 38:48>]
LOCAL_SYMBOL: b2Timer.cpp<33:16> [b2Timer.cpp <38:28 38:39>]
REFERENCE_USAGE void b2Timer::b2Timer() -> static float64 b2Timer::s_invFrequency [b2Timer.cpp <39:7 39:20>]
LOCAL_SYMBOL: b2Timer.cpp<40:3> [b2Timer.cpp <40:3 40:3>]
LOCAL_SYMBOL: b2Timer.cpp<40:3> [b2Timer.cpp <42:3 42:3>]
REFERENCE_USAGE void b2Timer::b2Timer() -> static float64 b2Timer::s_invFrequency [b2Timer.cpp <41:4 41:17>]
REFERENCE_USAGE void b2Timer::b2Timer() -> static float64 b2Timer::s_invFrequency [b2Timer.cpp <41:31 41:44>]
SYMBOL_FUNCTION BOOL QueryPerformanceCounter(LARGE_INTEGER *)
REFERENCE_CALL void b2Timer::b2Timer() -> BOOL QueryPerformanceCounter(LARGE_INTEGER *) [b2Timer.cpp <45:2 45:24>]
LOCAL_SYMBOL: b2Timer.cpp<33:16> [b2Timer.cpp <45:27 45:38>]
REFERENCE_USAGE void b2Timer::b2Timer() -> float64 b2Timer::m_start [b2Timer.cpp <46:2 46:8>]
REFERENCE_TYPE_USAGE void b2Timer::b2Timer() -> float64 [b2Timer.cpp <46:12 46:18>]
REFERENCE_USAGE void b2Timer::b2Timer() -> LONGLONG _LARGE_INTEGER::QuadPart [b2Timer.cpp <46:33 46:40>]
LOCAL_SYMBOL: b2Timer.cpp<33:16> [b2Timer.cpp <46:20 46:31>]
SYMBOL_METHOD public void b2Timer::Reset() [b2Timer.cpp <49:1 <49:15 49:19> 54:1>]
QUALIFIER: b2Timer [b2Timer.cpp <49:6 49:12>]
REFERENCE_TYPE_USAGE void b2Timer::Reset() -> void [b2Timer.cpp <49:1 49:4>]
LOCAL_SYMBOL: b2Timer.cpp<50:1> [b2Timer.cpp <50:1 50:1>]
LOCAL_SYMBOL: b2Timer.cpp<50:1> [b2Timer.cpp <54:1 54:1>]
LOCAL_SYMBOL: b2Timer.cpp<51:16> [b2Timer.cpp <51:16 51:27>]
REFERENCE_TYPE_USAGE void b2Timer::Reset() -> LARGE_INTEGER [b2Timer.cpp <51:2 51:14>]
REFERENCE_CALL void b2Timer::Reset() -> void _LARGE_INTEGER::_LARGE_INTEGER() [b2Timer.cpp <51:16 51:27>]
REFERENCE_CALL void b2Timer::Reset() -> BOOL QueryPerformanceCounter(LARGE_INTEGER *) [b2Timer.cpp <52:2 52:24>]
LOCAL_SYMBOL: b2Timer.cpp<51:16> [b2Timer.cpp <52:27 52:38>]
REFERENCE_USAGE void b2Timer::Reset() -> float64 b2Timer::m_start [b2Timer.cpp <53:2 53:8>]
REFERENCE_TYPE_USAGE void b2Timer::Reset() -> float64 [b2Timer.cpp <53:12 53:18>]
REFERENCE_USAGE void b2Timer::Reset() -> LONGLONG _LARGE_INTEGER::QuadPart [b2Timer.cpp <53:33 53:40>]
LOCAL_SYMBOL: b2Timer.cpp<51:16> [b2Timer.cpp <53:20 53:31>]
SYMBOL_METHOD public float32 b2Timer::GetMilliseconds() const [b2Timer.cpp <56:1 <56:18 56:32> 63:1>]
QUALIFIER: b2Timer [b2Timer.cpp <56:9 56:15>]
REFERENCE_TYPE_USAGE float32 b2Timer::GetMilliseconds() const -> float32 [b2Timer.cpp <56:1 56:7>]
LOCAL_SYMBOL: b2Timer.cpp<57:1> [b2Timer.cpp <57:1 57:1>]
LOCAL_SYMBOL: b2Timer.cpp<57:1> [b2Timer.cpp <63:1 63:1>]
LOCAL_SYMBOL: b2Timer.cpp<58:16> [b2Timer.cpp <58:16 58:27>]
REFERENCE_TYPE_USAGE float32 b2Timer::GetMilliseconds() const -> LARGE_INTEGER [b2Timer.cpp <58:2 58:14>]
REFERENCE_CALL float32 b2Timer::GetMilliseconds() const -> void _LARGE_INTEGER::_LARGE_INTEGER() [b2Timer.cpp <58:16 58:27>]
REFERENCE_CALL float32 b2Timer::GetMilliseconds() const -> BOOL QueryPerformanceCounter(LARGE_INTEGER *) [b2Timer.cpp <59:2 59:24>]
LOCAL_SYMBOL: b2Timer.cpp<58:16> [b2Timer.cpp <59:27 59:38>]
LOCAL_SYMBOL: b2Timer.cpp<60:10> [b2Timer.cpp <60:10 60:14>]
REFERENCE_TYPE_USAGE float32 b2Timer::GetMilliseconds() const -> float64 [b2Timer.cpp <60:2 60:8>]
REFERENCE_TYPE_USAGE float32 b2Timer::GetMilliseconds() const -> float64 [b2Timer.cpp <60:18 60:24>]
REFERENCE_USAGE float32 b2Timer::GetMilliseconds() const -> LONGLONG _LARGE_INTEGER::QuadPart [b2Timer.cpp <60:39 60:46>]
LOCAL_SYMBOL: b2Timer.cpp<58:16> [b2Timer.cpp <60:26 60:37>]
LOCAL_SYMBOL: b2Timer.cpp<61:10> [b2Timer.cpp <61:10 61:11>]
REFERENCE_TYPE_USAGE float32 b2Timer::GetMilliseconds() const -> float32 [b2Timer.cpp <61:2 61:8>]
REFERENCE_TYPE_USAGE float32 b2Timer::GetMilliseconds() const -> float32 [b2Timer.cpp <61:15 61:21>]
REFERENCE_USAGE float32 b2Timer::GetMilliseconds() const -> static float64 b2Timer::s_invFrequency [b2Timer.cpp <61:23 61:36>]
LOCAL_SYMBOL: b2Timer.cpp<60:10> [b2Timer.cpp <61:41 61:45>]
REFERENCE_USAGE float32 b2Timer::GetMilliseconds() const -> float64 b2Timer::m_start [b2Timer.cpp <61:49 61:55>]
LOCAL_SYMBOL: b2Timer.cpp<61:10> [b2Timer.cpp <62:9 62:10>]
