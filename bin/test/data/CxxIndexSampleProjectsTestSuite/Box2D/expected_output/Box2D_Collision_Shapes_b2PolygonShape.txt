FILE: b2PolygonShape.cpp
COMMENT: comment [b2PolygonShape.cpp <1:1 17:3>]
REFERENCE_INCLUDE b2PolygonShape.cpp -> b2PolygonShape.h [b2PolygonShape.cpp <19:10 19:50>]
FILE: b2PolygonShape.h
COMMENT: comment [b2PolygonShape.h <1:1 17:3>]
REFERENCE_MACRO_USAGE b2PolygonShape.h -> B2_POLYGON_SHAPE_H [b2PolygonShape.h <19:9 19:26>]
SYMBOL_MACRO B2_POLYGON_SHAPE_H [b2PolygonShape.h <20:9 <20:9 20:26> 20:8>]
REFERENCE_INCLUDE b2PolygonShape.h -> b2Shape.h [b2PolygonShape.h <22:10 22:43>]
FILE: b2Shape.h
COMMENT: comment [b2Shape.h <1:1 17:3>]
REFERENCE_MACRO_USAGE b2Shape.h -> B2_SHAPE_H [b2Shape.h <19:9 19:18>]
SYMBOL_MACRO B2_SHAPE_H [b2Shape.h <20:9 <20:9 20:18> 20:8>]
REFERENCE_INCLUDE b2Shape.h -> b2BlockAllocator.h [b2Shape.h <22:10 22:42>]
FILE: b2BlockAllocator.h
COMMENT: comment [b2BlockAllocator.h <1:1 17:3>]
REFERENCE_MACRO_USAGE b2BlockAllocator.h -> B2_BLOCK_ALLOCATOR_H [b2BlockAllocator.h <19:9 19:28>]
SYMBOL_MACRO B2_BLOCK_ALLOCATOR_H [b2BlockAllocator.h <20:9 <20:9 20:28> 20:8>]
REFERENCE_INCLUDE b2BlockAllocator.h -> b2Settings.h [b2BlockAllocator.h <22:10 22:36>]
FILE: b2Settings.h
COMMENT: comment [b2Settings.h <1:1 17:3>]
REFERENCE_MACRO_USAGE b2Settings.h -> B2_SETTINGS_H [b2Settings.h <19:9 19:21>]
SYMBOL_MACRO B2_SETTINGS_H [b2Settings.h <20:9 <20:9 20:21> 20:8>]
REFERENCE_INCLUDE b2Settings.h -> stddef.h [b2Settings.h <22:10 22:19>]
FILE: stddef.h non-indexed
REFERENCE_INCLUDE stddef.h -> corecrt.h [stddef.h <11:10 11:20>]
FILE: corecrt.h non-indexed
REFERENCE_INCLUDE corecrt.h -> vcruntime.h [corecrt.h <10:10 10:22>]
FILE: vcruntime.h non-indexed
REFERENCE_INCLUDE vcruntime.h -> sal.h [vcruntime.h <45:10 45:16>]
FILE: sal.h non-indexed
REFERENCE_INCLUDE sal.h -> concurrencysal.h [sal.h <2990:10 2990:27>]
FILE: concurrencysal.h non-indexed
REFERENCE_INCLUDE vcruntime.h -> vadefs.h [vcruntime.h <46:10 46:19>]
FILE: vadefs.h non-indexed
REFERENCE_INCLUDE b2Settings.h -> assert.h [b2Settings.h <23:10 23:19>]
FILE: assert.h non-indexed
REFERENCE_INCLUDE assert.h -> corecrt.h [assert.h <12:10 12:20>]
REFERENCE_INCLUDE b2Settings.h -> float.h [b2Settings.h <24:10 24:18>]
FILE: float.h non-indexed
REFERENCE_INCLUDE float.h -> corecrt.h [float.h <12:10 12:20>]
REFERENCE_MACRO_USAGE b2Settings.h -> NDEBUG [b2Settings.h <26:14 26:19>]
SYMBOL_MACRO b2DEBUG [b2Settings.h <27:10 <27:10 27:16> 27:9>]
SYMBOL_MACRO B2_NOT_USED [b2Settings.h <30:9 <30:9 30:19> 30:33>]
SYMBOL_MACRO b2Assert [b2Settings.h <31:9 <31:9 31:16> 31:28>]
SYMBOL_MACRO b2_maxFloat [b2Settings.h <42:9 <42:9 42:19> 42:21>]
SYMBOL_MACRO b2_epsilon [b2Settings.h <43:9 <43:9 43:18> 43:20>]
SYMBOL_MACRO b2_pi [b2Settings.h <44:9 <44:9 44:13> 44:16>]
COMMENT: comment [b2Settings.h <46:1 46:10>]
COMMENT: comment [b2Settings.h <47:1 47:75>]
COMMENT: comment [b2Settings.h <48:1 48:4>]
COMMENT: comment [b2Settings.h <50:1 50:13>]
COMMENT: comment [b2Settings.h <52:1 52:71>]
COMMENT: comment [b2Settings.h <53:1 53:27>]
SYMBOL_MACRO b2_maxManifoldPoints [b2Settings.h <54:9 <54:9 54:28> 54:29>]
COMMENT: comment [b2Settings.h <56:1 56:76>]
COMMENT: comment [b2Settings.h <57:1 57:70>]
SYMBOL_MACRO b2_maxPolygonVertices [b2Settings.h <58:9 <58:9 58:29> 58:30>]
COMMENT: comment [b2Settings.h <60:1 60:74>]
COMMENT: comment [b2Settings.h <61:1 61:68>]
COMMENT: comment [b2Settings.h <62:1 62:23>]
SYMBOL_MACRO b2_aabbExtension [b2Settings.h <63:9 <63:9 63:24> 63:26>]
COMMENT: comment [b2Settings.h <65:1 65:78>]
COMMENT: comment [b2Settings.h <66:1 66:59>]
COMMENT: comment [b2Settings.h <67:1 67:40>]
SYMBOL_MACRO b2_aabbMultiplier [b2Settings.h <68:9 <68:9 68:25> 68:27>]
COMMENT: comment [b2Settings.h <70:1 70:79>]
COMMENT: comment [b2Settings.h <71:1 71:70>]
SYMBOL_MACRO b2_linearSlop [b2Settings.h <72:9 <72:9 72:21> 72:24>]
COMMENT: comment [b2Settings.h <74:1 74:78>]
COMMENT: comment [b2Settings.h <75:1 75:70>]
SYMBOL_MACRO b2_angularSlop [b2Settings.h <76:9 <76:9 76:22> 76:47>]
COMMENT: comment [b2Settings.h <78:1 78:83>]
COMMENT: comment [b2Settings.h <79:1 79:91>]
COMMENT: comment [b2Settings.h <80:1 80:64>]
SYMBOL_MACRO b2_polygonRadius [b2Settings.h <81:9 <81:9 81:24> 81:47>]
COMMENT: comment [b2Settings.h <83:1 83:78>]
SYMBOL_MACRO b2_maxSubSteps [b2Settings.h <84:9 <84:9 84:22> 84:25>]
COMMENT: comment [b2Settings.h <87:1 87:12>]
COMMENT: comment [b2Settings.h <89:1 89:68>]
SYMBOL_MACRO b2_maxTOIContacts [b2Settings.h <90:9 <90:9 90:25> 90:28>]
COMMENT: comment [b2Settings.h <92:1 92:86>]
COMMENT: comment [b2Settings.h <93:1 93:64>]
SYMBOL_MACRO b2_velocityThreshold [b2Settings.h <94:9 <94:9 94:28> 94:30>]
COMMENT: comment [b2Settings.h <96:1 96:88>]
COMMENT: comment [b2Settings.h <97:1 97:23>]
SYMBOL_MACRO b2_maxLinearCorrection [b2Settings.h <98:9 <98:9 98:30> 98:32>]
COMMENT: comment [b2Settings.h <100:1 100:89>]
COMMENT: comment [b2Settings.h <101:1 101:23>]
SYMBOL_MACRO b2_maxAngularCorrection [b2Settings.h <102:9 <102:9 102:31> 102:55>]
COMMENT: comment [b2Settings.h <104:1 104:80>]
COMMENT: comment [b2Settings.h <105:1 105:70>]
SYMBOL_MACRO b2_maxTranslation [b2Settings.h <106:9 <106:9 106:25> 106:28>]
SYMBOL_MACRO b2_maxTranslationSquared [b2Settings.h <107:9 <107:9 107:32> 107:71>]
COMMENT: comment [b2Settings.h <109:1 109:81>]
COMMENT: comment [b2Settings.h <110:1 110:70>]
SYMBOL_MACRO b2_maxRotation [b2Settings.h <111:9 <111:9 111:22> 111:39>]
SYMBOL_MACRO b2_maxRotationSquared [b2Settings.h <112:9 <112:9 112:29> 112:63>]
COMMENT: comment [b2Settings.h <114:1 114:88>]
COMMENT: comment [b2Settings.h <115:1 115:89>]
COMMENT: comment [b2Settings.h <116:1 116:18>]
SYMBOL_MACRO b2_baumgarte [b2Settings.h <117:9 <117:9 117:20> 117:24>]
SYMBOL_MACRO b2_toiBaugarte [b2Settings.h <118:9 <118:9 118:22> 118:26>]
COMMENT: comment [b2Settings.h <121:1 121:9>]
COMMENT: comment [b2Settings.h <123:1 123:67>]
SYMBOL_MACRO b2_timeToSleep [b2Settings.h <124:9 <124:9 124:22> 124:26>]
COMMENT: comment [b2Settings.h <126:1 126:72>]
SYMBOL_MACRO b2_linearSleepTolerance [b2Settings.h <127:9 <127:9 127:31> 127:33>]
COMMENT: comment [b2Settings.h <129:1 129:73>]
SYMBOL_MACRO b2_angularSleepTolerance [b2Settings.h <130:9 <130:9 130:32> 130:55>]
COMMENT: comment [b2Settings.h <132:1 132:21>]
COMMENT: comment [b2Settings.h <134:1 134:62>]
COMMENT: comment [b2Settings.h <137:1 137:71>]
COMMENT: comment [b2Settings.h <140:1 140:22>]
COMMENT: comment [b2Settings.h <143:1 143:30>]
COMMENT: comment [b2Settings.h <144:1 144:57>]
COMMENT: comment [b2Settings.h <147:16 147:40>]
COMMENT: comment [b2Settings.h <148:16 148:40>]
COMMENT: comment [b2Settings.h <149:19 149:33>]
COMMENT: comment [b2Settings.h <152:1 152:21>]
COMMENT: comment [b2BlockAllocator.h <32:1 32:63>]
COMMENT: comment [b2BlockAllocator.h <33:1 33:54>]
COMMENT: comment [b2BlockAllocator.h <34:1 34:72>]
COMMENT: comment [b2BlockAllocator.h <41:2 41:88>]
COMMENT: comment [b2BlockAllocator.h <44:2 44:83>]
REFERENCE_INCLUDE b2Shape.h -> b2Math.h [b2Shape.h <23:10 23:32>]
FILE: b2Math.h
COMMENT: comment [b2Math.h <1:1 17:3>]
REFERENCE_MACRO_USAGE b2Math.h -> B2_MATH_H [b2Math.h <19:9 19:17>]
SYMBOL_MACRO B2_MATH_H [b2Math.h <20:9 <20:9 20:17> 20:8>]
REFERENCE_INCLUDE b2Math.h -> b2Settings.h [b2Math.h <22:10 22:36>]
REFERENCE_INCLUDE b2Math.h -> math.h [b2Math.h <23:10 23:17>]
FILE: math.h non-indexed
REFERENCE_INCLUDE math.h -> corecrt.h [math.h <11:10 11:20>]
COMMENT: comment [b2Math.h <25:1 25:91>]
COMMENT: comment [b2Math.h <32:1 32:56>]
SYMBOL_MACRO b2Sqrt [b2Math.h <49:9 <49:9 49:14> 49:25>]
SYMBOL_MACRO b2Atan2 [b2Math.h <50:9 <50:9 50:15> 50:33>]
COMMENT: comment [b2Math.h <52:1 52:24>]
COMMENT: comment [b2Math.h <55:2 55:57>]
COMMENT: comment [b2Math.h <58:2 58:34>]
COMMENT: comment [b2Math.h <61:2 61:35>]
COMMENT: comment [b2Math.h <64:2 64:52>]
COMMENT: comment [b2Math.h <67:2 67:25>]
COMMENT: comment [b2Math.h <70:2 70:36>]
COMMENT: comment [b2Math.h <76:2 76:34>]
COMMENT: comment [b2Math.h <82:2 82:34>]
COMMENT: comment [b2Math.h <88:2 88:41>]
COMMENT: comment [b2Math.h <94:2 94:39>]
COMMENT: comment [b2Math.h <100:2 100:47>]
REFERENCE_MACRO_USAGE b2Math.h -> b2Sqrt [b2Math.h <103:10 103:15>]
COMMENT: comment [b2Math.h <106:2 106:66>]
COMMENT: comment [b2Math.h <107:2 107:35>]
COMMENT: comment [b2Math.h <113:2 113:65>]
REFERENCE_MACRO_USAGE b2Math.h -> b2_epsilon [b2Math.h <117:16 117:25>]
REFERENCE_MACRO_USAGE b2Settings.h -> FLT_EPSILON [b2Settings.h <43:21 43:31>]
COMMENT: comment [b2Math.h <128:2 128:50>]
COMMENT: comment [b2Math.h <134:2 134:77>]
COMMENT: comment [b2Math.h <143:1 143:40>]
COMMENT: comment [b2Math.h <146:2 146:57>]
COMMENT: comment [b2Math.h <149:2 149:34>]
COMMENT: comment [b2Math.h <152:2 152:35>]
COMMENT: comment [b2Math.h <155:2 155:52>]
COMMENT: comment [b2Math.h <158:2 158:25>]
COMMENT: comment [b2Math.h <161:2 161:34>]
COMMENT: comment [b2Math.h <167:2 167:41>]
COMMENT: comment [b2Math.h <173:2 173:39>]
COMMENT: comment [b2Math.h <182:1 182:51>]
COMMENT: comment [b2Math.h <185:2 185:61>]
COMMENT: comment [b2Math.h <188:2 188:42>]
COMMENT: comment [b2Math.h <195:2 195:42>]
COMMENT: comment [b2Math.h <202:2 202:43>]
COMMENT: comment [b2Math.h <209:2 209:38>]
COMMENT: comment [b2Math.h <216:2 216:35>]
COMMENT: comment [b2Math.h <237:2 237:73>]
COMMENT: comment [b2Math.h <238:2 238:51>]
COMMENT: comment [b2Math.h <256:1 256:51>]
COMMENT: comment [b2Math.h <259:2 259:61>]
COMMENT: comment [b2Math.h <262:2 262:42>]
COMMENT: comment [b2Math.h <270:2 270:35>]
COMMENT: comment [b2Math.h <278:2 278:73>]
COMMENT: comment [b2Math.h <279:2 279:51>]
COMMENT: comment [b2Math.h <282:2 282:73>]
COMMENT: comment [b2Math.h <283:2 283:72>]
COMMENT: comment [b2Math.h <284:2 284:29>]
COMMENT: comment [b2Math.h <287:2 287:49>]
COMMENT: comment [b2Math.h <288:2 288:42>]
COMMENT: comment [b2Math.h <291:2 291:59>]
COMMENT: comment [b2Math.h <292:2 292:42>]
COMMENT: comment [b2Math.h <298:1 298:13>]
COMMENT: comment [b2Math.h <303:2 303:41>]
COMMENT: comment [b2Math.h <306:3 306:25>]
COMMENT: comment [b2Math.h <311:2 311:36>]
COMMENT: comment [b2Math.h <314:3 314:25>]
COMMENT: comment [b2Math.h <319:2 319:34>]
COMMENT: comment [b2Math.h <326:2 326:30>]
REFERENCE_MACRO_USAGE b2Math.h -> b2Atan2 [b2Math.h <329:10 329:16>]
COMMENT: comment [b2Math.h <332:2 332:20>]
COMMENT: comment [b2Math.h <338:2 338:20>]
COMMENT: comment [b2Math.h <344:2 344:21>]
COMMENT: comment [b2Math.h <348:1 348:75>]
COMMENT: comment [b2Math.h <349:1 349:50>]
COMMENT: comment [b2Math.h <352:2 352:43>]
COMMENT: comment [b2Math.h <355:2 355:56>]
COMMENT: comment [b2Math.h <358:2 358:41>]
COMMENT: comment [b2Math.h <365:2 365:47>]
COMMENT: comment [b2Math.h <376:1 376:67>]
COMMENT: comment [b2Math.h <377:1 377:66>]
COMMENT: comment [b2Math.h <378:1 378:70>]
COMMENT: comment [b2Math.h <379:1 379:53>]
COMMENT: comment [b2Math.h <382:2 382:56>]
COMMENT: comment [b2Math.h <383:2 383:65>]
COMMENT: comment [b2Math.h <386:2 386:62>]
COMMENT: comment [b2Math.h <387:2 387:40>]
COMMENT: comment [b2Math.h <390:2 390:27>]
COMMENT: comment [b2Math.h <393:22 393:56>]
COMMENT: comment [b2Math.h <394:17 394:44>]
COMMENT: comment [b2Math.h <395:18 395:35>]
COMMENT: comment [b2Math.h <397:2 397:58>]
COMMENT: comment [b2Math.h <398:2 398:44>]
COMMENT: comment [b2Math.h <402:1 402:20>]
COMMENT: comment [b2Math.h <405:1 405:44>]
COMMENT: comment [b2Math.h <411:1 411:76>]
COMMENT: comment [b2Math.h <417:1 417:76>]
COMMENT: comment [b2Math.h <418:1 418:14>]
COMMENT: comment [b2Math.h <424:1 424:76>]
COMMENT: comment [b2Math.h <425:1 425:14>]
COMMENT: comment [b2Math.h <431:1 431:72>]
COMMENT: comment [b2Math.h <432:1 432:63>]
COMMENT: comment [b2Math.h <438:1 438:82>]
COMMENT: comment [b2Math.h <439:1 439:83>]
COMMENT: comment [b2Math.h <445:1 445:36>]
COMMENT: comment [b2Math.h <451:1 451:41>]
COMMENT: comment [b2Math.h <489:1 489:36>]
COMMENT: comment [b2Math.h <495:1 495:41>]
COMMENT: comment [b2Math.h <501:1 501:44>]
COMMENT: comment [b2Math.h <507:1 507:46>]
COMMENT: comment [b2Math.h <518:1 518:9>]
COMMENT: comment [b2Math.h <524:1 524:11>]
COMMENT: comment [b2Math.h <532:1 532:38>]
COMMENT: comment [b2Math.h <538:1 538:38>]
COMMENT: comment [b2Math.h <544:1 544:34>]
COMMENT: comment [b2Math.h <547:2 547:53>]
COMMENT: comment [b2Math.h <548:2 548:53>]
COMMENT: comment [b2Math.h <549:2 549:26>]
COMMENT: comment [b2Math.h <550:2 550:26>]
COMMENT: comment [b2Math.h <557:1 557:45>]
COMMENT: comment [b2Math.h <560:2 560:53>]
COMMENT: comment [b2Math.h <561:2 561:53>]
COMMENT: comment [b2Math.h <562:2 562:26>]
COMMENT: comment [b2Math.h <563:2 563:26>]
COMMENT: comment [b2Math.h <570:1 570:20>]
COMMENT: comment [b2Math.h <576:1 576:28>]
COMMENT: comment [b2Math.h <600:1 600:41>]
COMMENT: comment [b2Math.h <601:1 601:49>]
COMMENT: comment [b2Math.h <610:1 610:38>]
COMMENT: comment [b2Math.h <611:1 611:45>]
COMMENT: comment [b2Math.h <676:1 676:29>]
COMMENT: comment [b2Math.h <677:1 677:100>]
COMMENT: comment [b2Math.h <678:1 678:103>]
COMMENT: comment [b2Math.h <679:1 679:99>]
COMMENT: comment [b2Math.h <680:1 680:45>]
COMMENT: comment [b2Math.h <703:2 703:20>]
REFERENCE_MACRO_USAGE b2Math.h -> b2Assert [b2Math.h <709:2 709:9>]
REFERENCE_MACRO_USAGE b2Settings.h -> assert [b2Settings.h <31:21 31:26>]
COMMENT: comment [b2Math.h <716:1 716:59>]
REFERENCE_MACRO_USAGE b2Math.h -> b2_pi [b2Math.h <719:25 719:29>]
REFERENCE_INCLUDE b2Shape.h -> b2Collision.h [b2Shape.h <24:10 24:40>]
FILE: b2Collision.h
COMMENT: comment [b2Collision.h <1:1 17:3>]
REFERENCE_MACRO_USAGE b2Collision.h -> B2_COLLISION_H [b2Collision.h <19:9 19:22>]
SYMBOL_MACRO B2_COLLISION_H [b2Collision.h <20:9 <20:9 20:22> 20:8>]
REFERENCE_INCLUDE b2Collision.h -> b2Math.h [b2Collision.h <22:10 22:32>]
REFERENCE_INCLUDE b2Collision.h -> limits.h [b2Collision.h <23:10 23:19>]
FILE: limits.h non-indexed
REFERENCE_INCLUDE limits.h -> vcruntime.h [limits.h <11:10 11:22>]
COMMENT: comment [b2Collision.h <25:1 25:10>]
COMMENT: comment [b2Collision.h <26:1 26:73>]
COMMENT: comment [b2Collision.h <27:1 27:30>]
REFERENCE_MACRO_USAGE b2Collision.h -> UCHAR_MAX [b2Collision.h <34:30 34:38>]
COMMENT: comment [b2Collision.h <36:1 36:58>]
COMMENT: comment [b2Collision.h <37:1 37:34>]
COMMENT: comment [b2Collision.h <46:17 46:45>]
COMMENT: comment [b2Collision.h <47:17 47:45>]
COMMENT: comment [b2Collision.h <48:16 48:47>]
COMMENT: comment [b2Collision.h <49:16 49:47>]
COMMENT: comment [b2Collision.h <52:1 52:45>]
COMMENT: comment [b2Collision.h <56:18 56:59>]
COMMENT: comment [b2Collision.h <59:1 59:63>]
COMMENT: comment [b2Collision.h <60:1 60:68>]
COMMENT: comment [b2Collision.h <61:1 61:27>]
COMMENT: comment [b2Collision.h <62:1 62:56>]
COMMENT: comment [b2Collision.h <63:1 63:44>]
COMMENT: comment [b2Collision.h <64:1 64:72>]
COMMENT: comment [b2Collision.h <65:1 65:41>]
COMMENT: comment [b2Collision.h <66:1 66:69>]
COMMENT: comment [b2Collision.h <67:1 67:65>]
COMMENT: comment [b2Collision.h <68:1 68:75>]
COMMENT: comment [b2Collision.h <71:22 71:57>]
COMMENT: comment [b2Collision.h <72:25 72:57>]
COMMENT: comment [b2Collision.h <73:26 73:51>]
COMMENT: comment [b2Collision.h <74:20 74:79>]
COMMENT: comment [b2Collision.h <77:1 77:47>]
COMMENT: comment [b2Collision.h <78:1 78:46>]
COMMENT: comment [b2Collision.h <79:1 79:42>]
COMMENT: comment [b2Collision.h <80:1 80:47>]
COMMENT: comment [b2Collision.h <81:1 81:56>]
COMMENT: comment [b2Collision.h <82:1 82:44>]
COMMENT: comment [b2Collision.h <83:1 83:34>]
COMMENT: comment [b2Collision.h <84:1 84:34>]
COMMENT: comment [b2Collision.h <85:1 85:38>]
COMMENT: comment [b2Collision.h <86:1 86:25>]
COMMENT: comment [b2Collision.h <87:1 87:37>]
COMMENT: comment [b2Collision.h <88:1 88:37>]
COMMENT: comment [b2Collision.h <89:1 89:66>]
COMMENT: comment [b2Collision.h <90:1 90:68>]
COMMENT: comment [b2Collision.h <91:1 91:67>]
COMMENT: comment [b2Collision.h <92:1 92:69>]
REFERENCE_MACRO_USAGE b2Collision.h -> b2_maxManifoldPoints [b2Collision.h <102:25 102:44>]
COMMENT: comment [b2Collision.h <102:48 102:74>]
COMMENT: comment [b2Collision.h <103:29 103:60>]
COMMENT: comment [b2Collision.h <104:28 104:63>]
COMMENT: comment [b2Collision.h <106:27 106:61>]
COMMENT: comment [b2Collision.h <109:1 109:69>]
COMMENT: comment [b2Collision.h <112:2 112:66>]
COMMENT: comment [b2Collision.h <113:2 113:69>]
COMMENT: comment [b2Collision.h <114:2 114:69>]
COMMENT: comment [b2Collision.h <115:2 115:34>]
COMMENT: comment [b2Collision.h <120:24 120:62>]
REFERENCE_MACRO_USAGE b2Collision.h -> b2_maxManifoldPoints [b2Collision.h <121:16 121:35>]
COMMENT: comment [b2Collision.h <121:40 121:88>]
REFERENCE_MACRO_USAGE b2Collision.h -> b2_maxManifoldPoints [b2Collision.h <122:22 122:41>]
COMMENT: comment [b2Collision.h <122:45 122:95>]
COMMENT: comment [b2Collision.h <125:1 125:62>]
COMMENT: comment [b2Collision.h <128:17 128:42>]
COMMENT: comment [b2Collision.h <129:16 129:50>]
COMMENT: comment [b2Collision.h <130:19 130:57>]
COMMENT: comment [b2Collision.h <131:18 131:54>]
COMMENT: comment [b2Collision.h <134:1 134:102>]
COMMENT: comment [b2Collision.h <135:1 135:95>]
REFERENCE_MACRO_USAGE b2Collision.h -> b2_maxManifoldPoints [b2Collision.h <136:43 136:62>]
REFERENCE_MACRO_USAGE b2Collision.h -> b2_maxManifoldPoints [b2Collision.h <136:86 136:105>]
COMMENT: comment [b2Collision.h <139:1 139:42>]
COMMENT: comment [b2Collision.h <146:1 146:82>]
COMMENT: comment [b2Collision.h <153:1 153:85>]
COMMENT: comment [b2Collision.h <154:1 154:30>]
COMMENT: comment [b2Collision.h <161:1 161:34>]
COMMENT: comment [b2Collision.h <164:2 164:40>]
COMMENT: comment [b2Collision.h <167:2 167:33>]
COMMENT: comment [b2Collision.h <173:2 173:48>]
COMMENT: comment [b2Collision.h <179:2 179:30>]
COMMENT: comment [b2Collision.h <187:2 187:36>]
COMMENT: comment [b2Collision.h <194:2 194:38>]
COMMENT: comment [b2Collision.h <201:2 201:47>]
COMMENT: comment [b2Collision.h <214:21 214:42>]
COMMENT: comment [b2Collision.h <215:21 215:42>]
COMMENT: comment [b2Collision.h <218:1 218:56>]
COMMENT: comment [b2Collision.h <223:1 223:67>]
COMMENT: comment [b2Collision.h <228:1 228:57>]
COMMENT: comment [b2Collision.h <233:1 233:65>]
COMMENT: comment [b2Collision.h <238:1 238:65>]
COMMENT: comment [b2Collision.h <243:1 243:36>]
COMMENT: comment [b2Collision.h <247:1 247:45>]
COMMENT: comment [b2Collision.h <252:1 252:80>]
COMMENT: comment [b2Shape.h <26:1 26:51>]
COMMENT: comment [b2Shape.h <29:2 29:50>]
COMMENT: comment [b2Shape.h <32:2 32:74>]
COMMENT: comment [b2Shape.h <35:2 35:65>]
COMMENT: comment [b2Shape.h <39:1 39:86>]
COMMENT: comment [b2Shape.h <40:1 40:85>]
COMMENT: comment [b2Shape.h <41:1 41:67>]
COMMENT: comment [b2Shape.h <57:2 57:60>]
COMMENT: comment [b2Shape.h <60:2 60:86>]
COMMENT: comment [b2Shape.h <61:2 61:29>]
COMMENT: comment [b2Shape.h <64:2 64:41>]
COMMENT: comment [b2Shape.h <67:2 67:84>]
COMMENT: comment [b2Shape.h <68:2 68:42>]
COMMENT: comment [b2Shape.h <69:2 69:44>]
COMMENT: comment [b2Shape.h <72:2 72:39>]
COMMENT: comment [b2Shape.h <73:2 73:41>]
COMMENT: comment [b2Shape.h <74:2 74:49>]
COMMENT: comment [b2Shape.h <75:2 75:64>]
COMMENT: comment [b2Shape.h <76:2 76:45>]
COMMENT: comment [b2Shape.h <80:2 80:92>]
COMMENT: comment [b2Shape.h <81:2 81:47>]
COMMENT: comment [b2Shape.h <82:2 82:49>]
COMMENT: comment [b2Shape.h <83:2 83:39>]
COMMENT: comment [b2Shape.h <86:2 86:81>]
COMMENT: comment [b2Shape.h <87:2 87:60>]
COMMENT: comment [b2Shape.h <88:2 88:59>]
COMMENT: comment [b2Shape.h <89:2 89:64>]
COMMENT: comment [b2Shape.h <94:2 94:100>]
COMMENT: comment [b2Shape.h <95:2 95:30>]
COMMENT: comment [b2PolygonShape.h <24:1 24:75>]
COMMENT: comment [b2PolygonShape.h <25:1 25:27>]
COMMENT: comment [b2PolygonShape.h <26:1 26:79>]
COMMENT: comment [b2PolygonShape.h <27:1 27:74>]
COMMENT: comment [b2PolygonShape.h <33:2 33:24>]
COMMENT: comment [b2PolygonShape.h <36:2 36:33>]
COMMENT: comment [b2PolygonShape.h <39:2 39:64>]
COMMENT: comment [b2PolygonShape.h <40:2 40:64>]
COMMENT: comment [b2PolygonShape.h <41:2 41:79>]
COMMENT: comment [b2PolygonShape.h <42:2 42:77>]
COMMENT: comment [b2PolygonShape.h <43:2 43:41>]
COMMENT: comment [b2PolygonShape.h <46:2 46:83>]
COMMENT: comment [b2PolygonShape.h <47:2 47:31>]
COMMENT: comment [b2PolygonShape.h <48:2 48:32>]
COMMENT: comment [b2PolygonShape.h <51:2 51:50>]
COMMENT: comment [b2PolygonShape.h <52:2 52:31>]
COMMENT: comment [b2PolygonShape.h <53:2 53:32>]
COMMENT: comment [b2PolygonShape.h <54:2 54:63>]
COMMENT: comment [b2PolygonShape.h <55:2 55:64>]
COMMENT: comment [b2PolygonShape.h <58:2 58:29>]
COMMENT: comment [b2PolygonShape.h <61:2 61:24>]
COMMENT: comment [b2PolygonShape.h <65:2 65:31>]
COMMENT: comment [b2PolygonShape.h <68:2 68:31>]
COMMENT: comment [b2PolygonShape.h <71:2 71:66>]
COMMENT: comment [b2PolygonShape.h <72:2 72:28>]
REFERENCE_MACRO_USAGE b2PolygonShape.h -> b2_maxPolygonVertices [b2PolygonShape.h <76:20 76:40>]
REFERENCE_MACRO_USAGE b2PolygonShape.h -> b2_maxPolygonVertices [b2PolygonShape.h <77:19 77:39>]
REFERENCE_MACRO_USAGE b2PolygonShape.h -> b2_polygonRadius [b2PolygonShape.h <84:13 84:28>]
REFERENCE_MACRO_USAGE b2Settings.h -> b2_linearSlop [b2Settings.h <81:35 81:47>]
REFERENCE_INCLUDE b2PolygonShape.cpp -> new [b2PolygonShape.cpp <20:10 20:14>]
FILE: new non-indexed
REFERENCE_INCLUDE new -> exception [new <6:10 6:20>]
FILE: exception non-indexed
REFERENCE_INCLUDE exception -> type_traits [exception <7:10 7:22>]
FILE: type_traits non-indexed
REFERENCE_INCLUDE type_traits -> xstddef [type_traits <6:10 6:18>]
FILE: xstddef non-indexed
REFERENCE_INCLUDE xstddef -> cstddef [xstddef <6:10 6:18>]
FILE: cstddef non-indexed
REFERENCE_INCLUDE cstddef -> yvals.h [cstddef <5:10 5:18>]
FILE: yvals.h non-indexed
REFERENCE_INCLUDE yvals.h -> xkeycheck.h [yvals.h <7:10 7:22>]
FILE: xkeycheck.h non-indexed
REFERENCE_INCLUDE yvals.h -> crtdefs.h [yvals.h <8:10 8:20>]
FILE: crtdefs.h non-indexed
REFERENCE_INCLUDE crtdefs.h -> vcruntime.h [crtdefs.h <9:10 9:22>]
REFERENCE_INCLUDE crtdefs.h -> corecrt.h [crtdefs.h <10:10 10:20>]
REFERENCE_INCLUDE yvals.h -> use_ansi.h [yvals.h <412:10 412:21>]
FILE: use_ansi.h non-indexed
REFERENCE_INCLUDE cstddef -> stddef.h [cstddef <13:11 13:20>]
REFERENCE_INCLUDE xstddef -> cstdlib [xstddef <7:10 7:18>]
FILE: cstdlib non-indexed
REFERENCE_INCLUDE cstdlib -> yvals.h [cstdlib <5:10 5:18>]
REFERENCE_INCLUDE cstdlib -> stdlib.h [cstdlib <13:11 13:20>]
FILE: stdlib.h non-indexed
REFERENCE_INCLUDE stdlib.h -> corecrt.h [stdlib.h <11:10 11:20>]
REFERENCE_INCLUDE stdlib.h -> corecrt_malloc.h [stdlib.h <12:10 12:27>]
FILE: corecrt_malloc.h non-indexed
REFERENCE_INCLUDE corecrt_malloc.h -> corecrt.h [corecrt_malloc.h <11:10 11:20>]
REFERENCE_INCLUDE stdlib.h -> corecrt_search.h [stdlib.h <13:10 13:27>]
FILE: corecrt_search.h non-indexed
REFERENCE_INCLUDE corecrt_search.h -> corecrt.h [corecrt_search.h <13:10 13:20>]
REFERENCE_INCLUDE corecrt_search.h -> stddef.h [corecrt_search.h <14:10 14:19>]
REFERENCE_INCLUDE stdlib.h -> corecrt_wstdlib.h [stdlib.h <14:10 14:28>]
FILE: corecrt_wstdlib.h non-indexed
REFERENCE_INCLUDE corecrt_wstdlib.h -> corecrt.h [corecrt_wstdlib.h <11:10 11:20>]
REFERENCE_INCLUDE stdlib.h -> limits.h [stdlib.h <15:10 15:19>]
REFERENCE_INCLUDE xstddef -> initializer_list [xstddef <9:10 9:27>]
FILE: initializer_list non-indexed
REFERENCE_INCLUDE initializer_list -> cstddef [initializer_list <6:10 6:18>]
REFERENCE_INCLUDE xstddef -> xtr1common [xstddef <11:10 11:21>]
FILE: xtr1common non-indexed
REFERENCE_INCLUDE xtr1common -> cstdlib [xtr1common <6:10 6:18>]
REFERENCE_INCLUDE exception -> malloc.h [exception <40:10 40:19>]
FILE: malloc.h non-indexed
REFERENCE_INCLUDE malloc.h -> corecrt.h [malloc.h <11:10 11:20>]
REFERENCE_INCLUDE malloc.h -> corecrt_malloc.h [malloc.h <12:10 12:27>]
REFERENCE_INCLUDE exception -> vcruntime_exception.h [exception <41:10 41:32>]
FILE: vcruntime_exception.h non-indexed
REFERENCE_INCLUDE vcruntime_exception.h -> eh.h [vcruntime_exception.h <10:10 10:15>]
FILE: eh.h non-indexed
REFERENCE_INCLUDE eh.h -> corecrt_terminate.h [eh.h <11:10 11:30>]
FILE: corecrt_terminate.h non-indexed
REFERENCE_INCLUDE corecrt_terminate.h -> corecrt.h [corecrt_terminate.h <10:10 10:20>]
REFERENCE_INCLUDE new -> vcruntime_new.h [new <7:10 7:26>]
FILE: vcruntime_new.h non-indexed
REFERENCE_INCLUDE vcruntime_new.h -> vcruntime.h [vcruntime_new.h <10:10 10:22>]
COMMENT: comment [b2PolygonShape.cpp <61:2 61:36>]
REFERENCE_MACRO_USAGE b2PolygonShape.cpp -> b2Assert [b2PolygonShape.cpp <76:2 76:9>]
COMMENT: comment [b2PolygonShape.cpp <81:2 81:55>]
COMMENT: comment [b2PolygonShape.cpp <82:2 82:73>]
COMMENT: comment [b2PolygonShape.cpp <97:3 97:24>]
COMMENT: comment [b2PolygonShape.cpp <110:3 110:28>]
COMMENT: comment [b2PolygonShape.cpp <114:2 114:13>]
REFERENCE_MACRO_USAGE b2PolygonShape.cpp -> b2Assert [b2PolygonShape.cpp <115:2 115:9>]
REFERENCE_MACRO_USAGE b2PolygonShape.cpp -> b2_epsilon [b2PolygonShape.cpp <115:18 115:27>]
REFERENCE_MACRO_USAGE b2PolygonShape.cpp -> b2Assert [b2PolygonShape.cpp <122:2 122:9>]
REFERENCE_MACRO_USAGE b2PolygonShape.cpp -> b2_maxPolygonVertices [b2PolygonShape.cpp <122:34 122:54>]
REFERENCE_MACRO_USAGE b2PolygonShape.cpp -> b2_maxPolygonVertices [b2PolygonShape.cpp <129:25 129:45>]
COMMENT: comment [b2PolygonShape.cpp <131:2 131:57>]
REFERENCE_MACRO_USAGE b2PolygonShape.cpp -> b2_maxPolygonVertices [b2PolygonShape.cpp <132:12 132:32>]
REFERENCE_MACRO_USAGE b2PolygonShape.cpp -> b2_linearSlop [b2PolygonShape.cpp <141:47 141:59>]
REFERENCE_MACRO_USAGE b2PolygonShape.cpp -> b2_linearSlop [b2PolygonShape.cpp <141:72 141:84>]
COMMENT: comment [b2PolygonShape.cpp <157:3 157:28>]
REFERENCE_MACRO_USAGE b2PolygonShape.cpp -> b2Assert [b2PolygonShape.cpp <158:3 158:10>]
COMMENT: comment [b2PolygonShape.cpp <163:2 163:61>]
COMMENT: comment [b2PolygonShape.cpp <164:2 164:57>]
COMMENT: comment [b2PolygonShape.cpp <166:2 166:42>]
REFERENCE_MACRO_USAGE b2PolygonShape.cpp -> b2_maxPolygonVertices [b2PolygonShape.cpp <179:13 179:33>]
REFERENCE_MACRO_USAGE b2PolygonShape.cpp -> b2Assert [b2PolygonShape.cpp <185:3 185:10>]
REFERENCE_MACRO_USAGE b2PolygonShape.cpp -> b2_maxPolygonVertices [b2PolygonShape.cpp <185:16 185:36>]
COMMENT: comment [b2PolygonShape.cpp <205:4 205:25>]
COMMENT: comment [b2PolygonShape.cpp <223:3 223:28>]
REFERENCE_MACRO_USAGE b2PolygonShape.cpp -> b2Assert [b2PolygonShape.cpp <224:3 224:10>]
COMMENT: comment [b2PolygonShape.cpp <231:2 231:19>]
COMMENT: comment [b2PolygonShape.cpp <237:2 237:60>]
REFERENCE_MACRO_USAGE b2PolygonShape.cpp -> b2Assert [b2PolygonShape.cpp <243:3 243:10>]
REFERENCE_MACRO_USAGE b2PolygonShape.cpp -> b2_epsilon [b2PolygonShape.cpp <243:35 243:44>]
REFERENCE_MACRO_USAGE b2PolygonShape.cpp -> b2_epsilon [b2PolygonShape.cpp <243:48 243:57>]
COMMENT: comment [b2PolygonShape.cpp <248:2 248:34>]
REFERENCE_MACRO_USAGE b2PolygonShape.cpp -> B2_NOT_USED [b2PolygonShape.cpp <271:2 271:12>]
COMMENT: comment [b2PolygonShape.cpp <273:2 273:55>]
COMMENT: comment [b2PolygonShape.cpp <284:3 284:20>]
COMMENT: comment [b2PolygonShape.cpp <285:3 285:28>]
COMMENT: comment [b2PolygonShape.cpp <286:3 286:50>]
COMMENT: comment [b2PolygonShape.cpp <299:4 299:53>]
COMMENT: comment [b2PolygonShape.cpp <300:4 300:61>]
COMMENT: comment [b2PolygonShape.cpp <301:4 301:61>]
COMMENT: comment [b2PolygonShape.cpp <302:4 302:76>]
COMMENT: comment [b2PolygonShape.cpp <305:5 305:23>]
COMMENT: comment [b2PolygonShape.cpp <306:5 306:43>]
COMMENT: comment [b2PolygonShape.cpp <312:5 312:23>]
COMMENT: comment [b2PolygonShape.cpp <313:5 313:42>]
COMMENT: comment [b2PolygonShape.cpp <318:3 318:64>]
COMMENT: comment [b2PolygonShape.cpp <319:3 319:67>]
COMMENT: comment [b2PolygonShape.cpp <320:3 320:56>]
COMMENT: comment [b2PolygonShape.cpp <321:3 321:36>]
REFERENCE_MACRO_USAGE b2PolygonShape.cpp -> b2Assert [b2PolygonShape.cpp <328:2 328:9>]
REFERENCE_MACRO_USAGE b2PolygonShape.cpp -> B2_NOT_USED [b2PolygonShape.cpp <342:2 342:12>]
COMMENT: comment [b2PolygonShape.cpp <361:2 361:41>]
COMMENT: comment [b2PolygonShape.cpp <362:2 362:58>]
COMMENT: comment [b2PolygonShape.cpp <363:2 363:10>]
COMMENT: comment [b2PolygonShape.cpp <364:2 364:25>]
COMMENT: comment [b2PolygonShape.cpp <365:2 365:46>]
COMMENT: comment [b2PolygonShape.cpp <366:2 366:46>]
COMMENT: comment [b2PolygonShape.cpp <367:2 367:36>]
COMMENT: comment [b2PolygonShape.cpp <368:2 368:4>]
COMMENT: comment [b2PolygonShape.cpp <369:2 369:64>]
COMMENT: comment [b2PolygonShape.cpp <370:2 370:63>]
COMMENT: comment [b2PolygonShape.cpp <371:2 371:60>]
COMMENT: comment [b2PolygonShape.cpp <372:2 372:43>]
COMMENT: comment [b2PolygonShape.cpp <373:2 373:31>]
COMMENT: comment [b2PolygonShape.cpp <374:2 374:31>]
COMMENT: comment [b2PolygonShape.cpp <375:2 375:42>]
COMMENT: comment [b2PolygonShape.cpp <376:2 376:4>]
COMMENT: comment [b2PolygonShape.cpp <377:2 377:55>]
COMMENT: comment [b2PolygonShape.cpp <378:2 378:60>]
COMMENT: comment [b2PolygonShape.cpp <379:2 379:22>]
COMMENT: comment [b2PolygonShape.cpp <380:2 380:4>]
COMMENT: comment [b2PolygonShape.cpp <381:2 381:63>]
COMMENT: comment [b2PolygonShape.cpp <382:2 382:4>]
COMMENT: comment [b2PolygonShape.cpp <383:2 383:63>]
REFERENCE_MACRO_USAGE b2PolygonShape.cpp -> b2Assert [b2PolygonShape.cpp <385:2 385:9>]
COMMENT: comment [b2PolygonShape.cpp <391:2 391:52>]
COMMENT: comment [b2PolygonShape.cpp <392:2 392:73>]
COMMENT: comment [b2PolygonShape.cpp <395:2 395:64>]
COMMENT: comment [b2PolygonShape.cpp <406:3 406:24>]
COMMENT: comment [b2PolygonShape.cpp <415:3 415:28>]
COMMENT: comment [b2PolygonShape.cpp <427:2 427:15>]
COMMENT: comment [b2PolygonShape.cpp <430:2 430:19>]
REFERENCE_MACRO_USAGE b2PolygonShape.cpp -> b2Assert [b2PolygonShape.cpp <431:2 431:9>]
REFERENCE_MACRO_USAGE b2PolygonShape.cpp -> b2_epsilon [b2PolygonShape.cpp <431:18 431:27>]
COMMENT: comment [b2PolygonShape.cpp <435:2 435:59>]
COMMENT: comment [b2PolygonShape.cpp <438:2 438:58>]
SYMBOL_TYPEDEF int8 [b2Settings.h <33:21 33:24>]
SYMBOL_BUILTIN_TYPE signed char
REFERENCE_TYPE_USAGE int8 -> signed char [b2Settings.h <33:9 33:14>]
SYMBOL_TYPEDEF int16 [b2Settings.h <34:22 34:26>]
SYMBOL_BUILTIN_TYPE short
REFERENCE_TYPE_USAGE int16 -> short [b2Settings.h <34:9 34:14>]
SYMBOL_TYPEDEF int32 [b2Settings.h <35:20 35:24>]
SYMBOL_BUILTIN_TYPE int
REFERENCE_TYPE_USAGE int32 -> int [b2Settings.h <35:9 35:14>]
SYMBOL_TYPEDEF uint8 [b2Settings.h <36:23 36:27>]
SYMBOL_BUILTIN_TYPE unsigned char
REFERENCE_TYPE_USAGE uint8 -> unsigned char [b2Settings.h <36:9 36:16>]
SYMBOL_TYPEDEF uint16 [b2Settings.h <37:24 37:29>]
SYMBOL_BUILTIN_TYPE unsigned short
REFERENCE_TYPE_USAGE uint16 -> unsigned short [b2Settings.h <37:9 37:16>]
SYMBOL_TYPEDEF uint32 [b2Settings.h <38:22 38:27>]
SYMBOL_BUILTIN_TYPE unsigned int
REFERENCE_TYPE_USAGE uint32 -> unsigned int [b2Settings.h <38:9 38:16>]
SYMBOL_TYPEDEF float32 [b2Settings.h <39:15 39:21>]
SYMBOL_BUILTIN_TYPE float
REFERENCE_TYPE_USAGE float32 -> float [b2Settings.h <39:9 39:13>]
SYMBOL_TYPEDEF float64 [b2Settings.h <40:16 40:22>]
SYMBOL_BUILTIN_TYPE double
REFERENCE_TYPE_USAGE float64 -> double [b2Settings.h <40:9 40:14>]
SYMBOL_FUNCTION void * b2Alloc(int32) [b2Settings.h <135:7 135:13>]
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void * b2Alloc(int32) -> void [b2Settings.h <135:1 135:4>]
LOCAL_SYMBOL: b2Settings.h<135:21> [b2Settings.h <135:21 135:24>]
REFERENCE_TYPE_USAGE void * b2Alloc(int32) -> int32 [b2Settings.h <135:15 135:19>]
SYMBOL_FUNCTION void b2Free(void *) [b2Settings.h <138:6 138:11>]
REFERENCE_TYPE_USAGE void b2Free(void *) -> void [b2Settings.h <138:1 138:4>]
LOCAL_SYMBOL: b2Settings.h<138:19> [b2Settings.h <138:19 138:21>]
REFERENCE_TYPE_USAGE void b2Free(void *) -> void [b2Settings.h <138:13 138:16>]
SYMBOL_FUNCTION void b2Log(const char *) [b2Settings.h <141:6 141:10>]
REFERENCE_TYPE_USAGE void b2Log(const char *) -> void [b2Settings.h <141:1 141:4>]
LOCAL_SYMBOL: b2Settings.h<141:24> [b2Settings.h <141:24 141:29>]
SYMBOL_BUILTIN_TYPE char
REFERENCE_TYPE_USAGE void b2Log(const char *) -> char [b2Settings.h <141:18 141:21>]
SYMBOL_STRUCT b2Version [b2Settings.h <145:1 <145:8 145:16> 150:1>]
SYMBOL_FIELD public int32 b2Version::major [b2Settings.h <147:8 147:12>]
REFERENCE_TYPE_USAGE int32 b2Version::major -> int32 [b2Settings.h <147:2 147:6>]
SYMBOL_FIELD public int32 b2Version::minor [b2Settings.h <148:8 148:12>]
REFERENCE_TYPE_USAGE int32 b2Version::minor -> int32 [b2Settings.h <148:2 148:6>]
SYMBOL_FIELD public int32 b2Version::revision [b2Settings.h <149:8 149:15>]
REFERENCE_TYPE_USAGE int32 b2Version::revision -> int32 [b2Settings.h <149:2 149:6>]
SYMBOL_GLOBAL_VARIABLE b2Version b2_version [b2Settings.h <153:18 153:27>]
REFERENCE_TYPE_USAGE b2Version b2_version -> b2Version [b2Settings.h <153:8 153:16>]
SYMBOL_GLOBAL_VARIABLE const int32 b2_chunkSize [b2BlockAllocator.h <24:13 24:24>]
REFERENCE_TYPE_USAGE const int32 b2_chunkSize -> int32 [b2BlockAllocator.h <24:7 24:11>]
SYMBOL_GLOBAL_VARIABLE const int32 b2_maxBlockSize [b2BlockAllocator.h <25:13 25:27>]
REFERENCE_TYPE_USAGE const int32 b2_maxBlockSize -> int32 [b2BlockAllocator.h <25:7 25:11>]
SYMBOL_GLOBAL_VARIABLE const int32 b2_blockSizes [b2BlockAllocator.h <26:13 26:25>]
REFERENCE_TYPE_USAGE const int32 b2_blockSizes -> int32 [b2BlockAllocator.h <26:7 26:11>]
SYMBOL_GLOBAL_VARIABLE const int32 b2_chunkArrayIncrement [b2BlockAllocator.h <27:13 27:34>]
REFERENCE_TYPE_USAGE const int32 b2_chunkArrayIncrement -> int32 [b2BlockAllocator.h <27:7 27:11>]
SYMBOL_STRUCT b2Block [b2BlockAllocator.h <29:8 29:14>]
SYMBOL_STRUCT b2Chunk [b2BlockAllocator.h <30:8 30:14>]
SYMBOL_CLASS b2BlockAllocator [b2BlockAllocator.h <35:1 <35:7 35:22> 60:1>]
SYMBOL_METHOD public void b2BlockAllocator::b2BlockAllocator() [b2BlockAllocator.h <38:2 38:17>]
SYMBOL_METHOD public void b2BlockAllocator::~b2BlockAllocator() [b2BlockAllocator.h <39:2 39:18>]
SYMBOL_METHOD public void * b2BlockAllocator::Allocate(int32) [b2BlockAllocator.h <42:8 42:15>]
REFERENCE_TYPE_USAGE void * b2BlockAllocator::Allocate(int32) -> void [b2BlockAllocator.h <42:2 42:5>]
LOCAL_SYMBOL: b2BlockAllocator.h<42:23> [b2BlockAllocator.h <42:23 42:26>]
REFERENCE_TYPE_USAGE void * b2BlockAllocator::Allocate(int32) -> int32 [b2BlockAllocator.h <42:17 42:21>]
SYMBOL_METHOD public void b2BlockAllocator::Free(void *, int32) [b2BlockAllocator.h <45:7 45:10>]
REFERENCE_TYPE_USAGE void b2BlockAllocator::Free(void *, int32) -> void [b2BlockAllocator.h <45:2 45:5>]
LOCAL_SYMBOL: b2BlockAllocator.h<45:18> [b2BlockAllocator.h <45:18 45:18>]
REFERENCE_TYPE_USAGE void b2BlockAllocator::Free(void *, int32) -> void [b2BlockAllocator.h <45:12 45:15>]
LOCAL_SYMBOL: b2BlockAllocator.h<45:27> [b2BlockAllocator.h <45:27 45:30>]
REFERENCE_TYPE_USAGE void b2BlockAllocator::Free(void *, int32) -> int32 [b2BlockAllocator.h <45:21 45:25>]
SYMBOL_METHOD public void b2BlockAllocator::Clear() [b2BlockAllocator.h <47:7 47:11>]
REFERENCE_TYPE_USAGE void b2BlockAllocator::Clear() -> void [b2BlockAllocator.h <47:2 47:5>]
SYMBOL_FIELD private b2Chunk * b2BlockAllocator::m_chunks [b2BlockAllocator.h <51:11 51:18>]
REFERENCE_TYPE_USAGE b2Chunk * b2BlockAllocator::m_chunks -> b2Chunk [b2BlockAllocator.h <51:2 51:8>]
SYMBOL_FIELD private int32 b2BlockAllocator::m_chunkCount [b2BlockAllocator.h <52:8 52:19>]
REFERENCE_TYPE_USAGE int32 b2BlockAllocator::m_chunkCount -> int32 [b2BlockAllocator.h <52:2 52:6>]
SYMBOL_FIELD private int32 b2BlockAllocator::m_chunkSpace [b2BlockAllocator.h <53:8 53:19>]
REFERENCE_TYPE_USAGE int32 b2BlockAllocator::m_chunkSpace -> int32 [b2BlockAllocator.h <53:2 53:6>]
SYMBOL_FIELD private b2Block * [] b2BlockAllocator::m_freeLists [b2BlockAllocator.h <55:11 55:21>]
REFERENCE_TYPE_USAGE b2Block * [] b2BlockAllocator::m_freeLists -> b2Block [b2BlockAllocator.h <55:2 55:8>]
REFERENCE_USAGE b2Block * [] b2BlockAllocator::m_freeLists -> const int32 b2_blockSizes [b2BlockAllocator.h <55:23 55:35>]
SYMBOL_FIELD private static int32 [] b2BlockAllocator::s_blockSizes [b2BlockAllocator.h <57:15 57:26>]
REFERENCE_TYPE_USAGE static int32 [] b2BlockAllocator::s_blockSizes -> int32 [b2BlockAllocator.h <57:9 57:13>]
REFERENCE_USAGE static int32 [] b2BlockAllocator::s_blockSizes -> const int32 b2_blockSizes [b2BlockAllocator.h <57:28 57:40>]
SYMBOL_FIELD private static uint8 [] b2BlockAllocator::s_blockSizeLookup [b2BlockAllocator.h <58:15 58:31>]
REFERENCE_TYPE_USAGE static uint8 [] b2BlockAllocator::s_blockSizeLookup -> uint8 [b2BlockAllocator.h <58:9 58:13>]
REFERENCE_USAGE static uint8 [] b2BlockAllocator::s_blockSizeLookup -> const int32 b2_maxBlockSize [b2BlockAllocator.h <58:33 58:47>]
SYMBOL_FIELD private static bool b2BlockAllocator::s_blockSizeLookupInitialized [b2BlockAllocator.h <59:14 59:41>]
SYMBOL_BUILTIN_TYPE bool
REFERENCE_TYPE_USAGE static bool b2BlockAllocator::s_blockSizeLookupInitialized -> bool [b2BlockAllocator.h <59:9 59:12>]
SYMBOL_FUNCTION bool b2IsValid(float32) [b2Math.h <26:1 <26:13 26:21> 30:1>]
REFERENCE_TYPE_USAGE bool b2IsValid(float32) -> bool [b2Math.h <26:8 26:11>]
LOCAL_SYMBOL: b2Math.h<26:31> [b2Math.h <26:31 26:31>]
REFERENCE_TYPE_USAGE bool b2IsValid(float32) -> float32 [b2Math.h <26:23 26:29>]
LOCAL_SYMBOL: b2Math.h<28:8> [b2Math.h <28:8 28:9>]
REFERENCE_TYPE_USAGE bool b2IsValid(float32) -> int32 [b2Math.h <28:2 28:6>]
REFERENCE_TYPE_USAGE bool b2IsValid(float32) -> int32 [b2Math.h <28:31 28:35>]
LOCAL_SYMBOL: b2Math.h<26:31> [b2Math.h <28:40 28:40>]
LOCAL_SYMBOL: b2Math.h<28:8> [b2Math.h <29:10 29:11>]
SYMBOL_FUNCTION float32 b2InvSqrt(float32) [b2Math.h <33:1 <33:16 33:24> 47:1>]
REFERENCE_TYPE_USAGE float32 b2InvSqrt(float32) -> float32 [b2Math.h <33:8 33:14>]
LOCAL_SYMBOL: b2Math.h<33:34> [b2Math.h <33:34 33:34>]
REFERENCE_TYPE_USAGE float32 b2InvSqrt(float32) -> float32 [b2Math.h <33:26 33:32>]
SYMBOL_UNION b2InvSqrt::anonymous union (b2Math.h<35:2>) [b2Math.h <35:2 <35:2 35:6> 39:2>]
SYMBOL_FIELD public float32 b2InvSqrt::anonymous union (b2Math.h<35:2>)::x [b2Math.h <37:11 37:11>]
REFERENCE_TYPE_USAGE float32 b2InvSqrt::anonymous union (b2Math.h<35:2>)::x -> float32 [b2Math.h <37:3 37:9>]
SYMBOL_FIELD public int32 b2InvSqrt::anonymous union (b2Math.h<35:2>)::i [b2Math.h <38:9 38:9>]
REFERENCE_TYPE_USAGE int32 b2InvSqrt::anonymous union (b2Math.h<35:2>)::i -> int32 [b2Math.h <38:3 38:7>]
SYMBOL_METHOD public void b2InvSqrt::anonymous union (b2Math.h<35:2>)::() [b2Math.h <35:2 <35:2 35:6> 35:6>]
SYMBOL_METHOD public void b2InvSqrt::anonymous union (b2Math.h<35:2>)::(const b2InvSqrt::anonymous union (b2Math.h<35:2>) &) [b2Math.h <35:2 35:6>]
SYMBOL_METHOD public void b2InvSqrt::anonymous union (b2Math.h<35:2>)::(b2InvSqrt::anonymous union (b2Math.h<35:2>) &&) [b2Math.h <35:2 35:6>]
LOCAL_SYMBOL: b2Math.h<39:4> [b2Math.h <39:4 39:10>]
REFERENCE_TYPE_USAGE float32 b2InvSqrt(float32) -> b2InvSqrt::anonymous union (b2Math.h<35:2>) [b2Math.h <35:2 35:6>]
SYMBOL_FUNCTION void b2InvSqrt::anonymous union (b2Math.h<35:2>)::()
REFERENCE_CALL float32 b2InvSqrt(float32) -> void b2InvSqrt::anonymous union (b2Math.h<35:2>)::() [b2Math.h <39:4 39:10>]
REFERENCE_USAGE float32 b2InvSqrt(float32) -> float32 b2InvSqrt::anonymous union (b2Math.h<35:2>)::x [b2Math.h <41:10 41:10>]
LOCAL_SYMBOL: b2Math.h<39:4> [b2Math.h <41:2 41:8>]
LOCAL_SYMBOL: b2Math.h<33:34> [b2Math.h <41:14 41:14>]
LOCAL_SYMBOL: b2Math.h<42:10> [b2Math.h <42:10 42:14>]
REFERENCE_TYPE_USAGE float32 b2InvSqrt(float32) -> float32 [b2Math.h <42:2 42:8>]
LOCAL_SYMBOL: b2Math.h<33:34> [b2Math.h <42:25 42:25>]
REFERENCE_USAGE float32 b2InvSqrt(float32) -> int32 b2InvSqrt::anonymous union (b2Math.h<35:2>)::i [b2Math.h <43:10 43:10>]
LOCAL_SYMBOL: b2Math.h<39:4> [b2Math.h <43:2 43:8>]
REFERENCE_USAGE float32 b2InvSqrt(float32) -> int32 b2InvSqrt::anonymous union (b2Math.h<35:2>)::i [b2Math.h <43:36 43:36>]
LOCAL_SYMBOL: b2Math.h<39:4> [b2Math.h <43:28 43:34>]
LOCAL_SYMBOL: b2Math.h<33:34> [b2Math.h <44:2 44:2>]
REFERENCE_USAGE float32 b2InvSqrt(float32) -> float32 b2InvSqrt::anonymous union (b2Math.h<35:2>)::x [b2Math.h <44:14 44:14>]
LOCAL_SYMBOL: b2Math.h<39:4> [b2Math.h <44:6 44:12>]
LOCAL_SYMBOL: b2Math.h<33:34> [b2Math.h <45:2 45:2>]
LOCAL_SYMBOL: b2Math.h<33:34> [b2Math.h <45:6 45:6>]
LOCAL_SYMBOL: b2Math.h<42:10> [b2Math.h <45:18 45:22>]
LOCAL_SYMBOL: b2Math.h<33:34> [b2Math.h <45:26 45:26>]
LOCAL_SYMBOL: b2Math.h<33:34> [b2Math.h <45:30 45:30>]
LOCAL_SYMBOL: b2Math.h<33:34> [b2Math.h <46:9 46:9>]
SYMBOL_STRUCT b2Vec2 [b2Math.h <53:1 <53:8 53:13> 141:1>]
SYMBOL_METHOD public void b2Vec2::b2Vec2() [b2Math.h <56:2 <56:2 56:7> 56:12>]
SYMBOL_METHOD public void b2Vec2::b2Vec2(float32, float32) [b2Math.h <59:2 <59:2 59:7> 59:53>]
LOCAL_SYMBOL: b2Math.h<59:17> [b2Math.h <59:17 59:19>]
REFERENCE_TYPE_USAGE void b2Vec2::b2Vec2(float32, float32) -> float32 [b2Math.h <59:9 59:15>]
LOCAL_SYMBOL: b2Math.h<59:30> [b2Math.h <59:30 59:32>]
REFERENCE_TYPE_USAGE void b2Vec2::b2Vec2(float32, float32) -> float32 [b2Math.h <59:22 59:28>]
REFERENCE_USAGE void b2Vec2::b2Vec2(float32, float32) -> float32 b2Vec2::x [b2Math.h <59:37 59:37>]
LOCAL_SYMBOL: b2Math.h<59:17> [b2Math.h <59:39 59:41>]
REFERENCE_USAGE void b2Vec2::b2Vec2(float32, float32) -> float32 b2Vec2::y [b2Math.h <59:45 59:45>]
LOCAL_SYMBOL: b2Math.h<59:30> [b2Math.h <59:47 59:49>]
SYMBOL_METHOD public void b2Vec2::SetZero() [b2Math.h <62:2 <62:7 62:13> 62:39>]
REFERENCE_TYPE_USAGE void b2Vec2::SetZero() -> void [b2Math.h <62:2 62:5>]
REFERENCE_USAGE void b2Vec2::SetZero() -> float32 b2Vec2::x [b2Math.h <62:19 62:19>]
REFERENCE_USAGE void b2Vec2::SetZero() -> float32 b2Vec2::y [b2Math.h <62:29 62:29>]
SYMBOL_METHOD public void b2Vec2::Set(float32, float32) [b2Math.h <65:2 <65:7 65:9> 65:53>]
REFERENCE_TYPE_USAGE void b2Vec2::Set(float32, float32) -> void [b2Math.h <65:2 65:5>]
LOCAL_SYMBOL: b2Math.h<65:19> [b2Math.h <65:19 65:20>]
REFERENCE_TYPE_USAGE void b2Vec2::Set(float32, float32) -> float32 [b2Math.h <65:11 65:17>]
LOCAL_SYMBOL: b2Math.h<65:31> [b2Math.h <65:31 65:32>]
REFERENCE_TYPE_USAGE void b2Vec2::Set(float32, float32) -> float32 [b2Math.h <65:23 65:29>]
REFERENCE_USAGE void b2Vec2::Set(float32, float32) -> float32 b2Vec2::x [b2Math.h <65:37 65:37>]
LOCAL_SYMBOL: b2Math.h<65:19> [b2Math.h <65:41 65:42>]
REFERENCE_USAGE void b2Vec2::Set(float32, float32) -> float32 b2Vec2::y [b2Math.h <65:45 65:45>]
LOCAL_SYMBOL: b2Math.h<65:31> [b2Math.h <65:49 65:50>]
SYMBOL_METHOD public b2Vec2 b2Vec2::operator-() const [b2Math.h <68:2 <68:9 68:18> 68:65>]
REFERENCE_TYPE_USAGE b2Vec2 b2Vec2::operator-() const -> b2Vec2 [b2Math.h <68:2 68:7>]
LOCAL_SYMBOL: b2Math.h<68:37> [b2Math.h <68:37 68:37>]
REFERENCE_TYPE_USAGE b2Vec2 b2Vec2::operator-() const -> b2Vec2 [b2Math.h <68:30 68:35>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL b2Vec2 b2Vec2::operator-() const -> void b2Vec2::b2Vec2() [b2Math.h <68:37 68:37>]
SYMBOL_FUNCTION void b2Vec2::Set(float32, float32)
REFERENCE_CALL b2Vec2 b2Vec2::operator-() const -> void b2Vec2::Set(float32, float32) [b2Math.h <68:42 68:44>]
LOCAL_SYMBOL: b2Math.h<68:37> [b2Math.h <68:40 68:40>]
REFERENCE_USAGE b2Vec2 b2Vec2::operator-() const -> float32 b2Vec2::x [b2Math.h <68:47 68:47>]
REFERENCE_USAGE b2Vec2 b2Vec2::operator-() const -> float32 b2Vec2::y [b2Math.h <68:51 68:51>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(b2Vec2 &&)
REFERENCE_CALL b2Vec2 b2Vec2::operator-() const -> void b2Vec2::b2Vec2(b2Vec2 &&) [b2Math.h <68:62 68:62>]
LOCAL_SYMBOL: b2Math.h<68:37> [b2Math.h <68:62 68:62>]
SYMBOL_METHOD public float32 b2Vec2::operator()(int32) const [b2Math.h <71:2 <71:10 71:20> 74:2>]
REFERENCE_TYPE_USAGE float32 b2Vec2::operator()(int32) const -> float32 [b2Math.h <71:2 71:8>]
LOCAL_SYMBOL: b2Math.h<71:29> [b2Math.h <71:29 71:29>]
REFERENCE_TYPE_USAGE float32 b2Vec2::operator()(int32) const -> int32 [b2Math.h <71:23 71:27>]
REFERENCE_USAGE float32 b2Vec2::operator()(int32) const -> float32 b2Vec2::x [b2Math.h <73:12 73:12>]
LOCAL_SYMBOL: b2Math.h<71:29> [b2Math.h <73:15 73:15>]
SYMBOL_METHOD public float32 & b2Vec2::operator()(int32) [b2Math.h <77:2 <77:11 77:21> 80:2>]
REFERENCE_TYPE_USAGE float32 & b2Vec2::operator()(int32) -> float32 [b2Math.h <77:2 77:8>]
LOCAL_SYMBOL: b2Math.h<77:30> [b2Math.h <77:30 77:30>]
REFERENCE_TYPE_USAGE float32 & b2Vec2::operator()(int32) -> int32 [b2Math.h <77:24 77:28>]
REFERENCE_USAGE float32 & b2Vec2::operator()(int32) -> float32 b2Vec2::x [b2Math.h <79:12 79:12>]
LOCAL_SYMBOL: b2Math.h<77:30> [b2Math.h <79:15 79:15>]
SYMBOL_METHOD public void b2Vec2::operator+=(const b2Vec2 &) [b2Math.h <83:2 <83:7 83:17> 86:2>]
REFERENCE_TYPE_USAGE void b2Vec2::operator+=(const b2Vec2 &) -> void [b2Math.h <83:2 83:5>]
LOCAL_SYMBOL: b2Math.h<83:34> [b2Math.h <83:34 83:34>]
REFERENCE_TYPE_USAGE void b2Vec2::operator+=(const b2Vec2 &) -> b2Vec2 [b2Math.h <83:26 83:31>]
REFERENCE_USAGE void b2Vec2::operator+=(const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <85:3 85:3>]
REFERENCE_USAGE void b2Vec2::operator+=(const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <85:10 85:10>]
LOCAL_SYMBOL: b2Math.h<83:34> [b2Math.h <85:8 85:8>]
REFERENCE_USAGE void b2Vec2::operator+=(const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <85:13 85:13>]
REFERENCE_USAGE void b2Vec2::operator+=(const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <85:20 85:20>]
LOCAL_SYMBOL: b2Math.h<83:34> [b2Math.h <85:18 85:18>]
SYMBOL_METHOD public void b2Vec2::operator-=(const b2Vec2 &) [b2Math.h <89:2 <89:7 89:17> 92:2>]
REFERENCE_TYPE_USAGE void b2Vec2::operator-=(const b2Vec2 &) -> void [b2Math.h <89:2 89:5>]
LOCAL_SYMBOL: b2Math.h<89:34> [b2Math.h <89:34 89:34>]
REFERENCE_TYPE_USAGE void b2Vec2::operator-=(const b2Vec2 &) -> b2Vec2 [b2Math.h <89:26 89:31>]
REFERENCE_USAGE void b2Vec2::operator-=(const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <91:3 91:3>]
REFERENCE_USAGE void b2Vec2::operator-=(const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <91:10 91:10>]
LOCAL_SYMBOL: b2Math.h<89:34> [b2Math.h <91:8 91:8>]
REFERENCE_USAGE void b2Vec2::operator-=(const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <91:13 91:13>]
REFERENCE_USAGE void b2Vec2::operator-=(const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <91:20 91:20>]
LOCAL_SYMBOL: b2Math.h<89:34> [b2Math.h <91:18 91:18>]
SYMBOL_METHOD public void b2Vec2::operator*=(float32) [b2Math.h <95:2 <95:7 95:17> 98:2>]
REFERENCE_TYPE_USAGE void b2Vec2::operator*=(float32) -> void [b2Math.h <95:2 95:5>]
LOCAL_SYMBOL: b2Math.h<95:28> [b2Math.h <95:28 95:28>]
REFERENCE_TYPE_USAGE void b2Vec2::operator*=(float32) -> float32 [b2Math.h <95:20 95:26>]
REFERENCE_USAGE void b2Vec2::operator*=(float32) -> float32 b2Vec2::x [b2Math.h <97:3 97:3>]
LOCAL_SYMBOL: b2Math.h<95:28> [b2Math.h <97:8 97:8>]
REFERENCE_USAGE void b2Vec2::operator*=(float32) -> float32 b2Vec2::y [b2Math.h <97:11 97:11>]
LOCAL_SYMBOL: b2Math.h<95:28> [b2Math.h <97:16 97:16>]
SYMBOL_METHOD public float32 b2Vec2::Length() const [b2Math.h <101:2 <101:10 101:15> 104:2>]
REFERENCE_TYPE_USAGE float32 b2Vec2::Length() const -> float32 [b2Math.h <101:2 101:8>]
SYMBOL_FUNCTION float sqrtf(float)
REFERENCE_CALL float32 b2Vec2::Length() const -> float sqrtf(float) [b2Math.h <103:10 103:15>]
REFERENCE_USAGE float32 b2Vec2::Length() const -> float32 b2Vec2::x [b2Math.h <103:17 103:17>]
REFERENCE_USAGE float32 b2Vec2::Length() const -> float32 b2Vec2::x [b2Math.h <103:21 103:21>]
REFERENCE_USAGE float32 b2Vec2::Length() const -> float32 b2Vec2::y [b2Math.h <103:25 103:25>]
REFERENCE_USAGE float32 b2Vec2::Length() const -> float32 b2Vec2::y [b2Math.h <103:29 103:29>]
SYMBOL_METHOD public float32 b2Vec2::LengthSquared() const [b2Math.h <108:2 <108:10 108:22> 111:2>]
REFERENCE_TYPE_USAGE float32 b2Vec2::LengthSquared() const -> float32 [b2Math.h <108:2 108:8>]
REFERENCE_USAGE float32 b2Vec2::LengthSquared() const -> float32 b2Vec2::x [b2Math.h <110:10 110:10>]
REFERENCE_USAGE float32 b2Vec2::LengthSquared() const -> float32 b2Vec2::x [b2Math.h <110:14 110:14>]
REFERENCE_USAGE float32 b2Vec2::LengthSquared() const -> float32 b2Vec2::y [b2Math.h <110:18 110:18>]
REFERENCE_USAGE float32 b2Vec2::LengthSquared() const -> float32 b2Vec2::y [b2Math.h <110:22 110:22>]
SYMBOL_METHOD public float32 b2Vec2::Normalize() [b2Math.h <114:2 <114:10 114:18> 126:2>]
REFERENCE_TYPE_USAGE float32 b2Vec2::Normalize() -> float32 [b2Math.h <114:2 114:8>]
LOCAL_SYMBOL: b2Math.h<116:11> [b2Math.h <116:11 116:16>]
REFERENCE_TYPE_USAGE float32 b2Vec2::Normalize() -> float32 [b2Math.h <116:3 116:9>]
SYMBOL_FUNCTION float32 b2Vec2::Length() const
REFERENCE_CALL float32 b2Vec2::Normalize() -> float32 b2Vec2::Length() const [b2Math.h <116:20 116:25>]
LOCAL_SYMBOL: b2Math.h<116:11> [b2Math.h <117:7 117:12>]
LOCAL_SYMBOL: b2Math.h<121:11> [b2Math.h <121:11 121:19>]
REFERENCE_TYPE_USAGE float32 b2Vec2::Normalize() -> float32 [b2Math.h <121:3 121:9>]
LOCAL_SYMBOL: b2Math.h<116:11> [b2Math.h <121:30 121:35>]
REFERENCE_USAGE float32 b2Vec2::Normalize() -> float32 b2Vec2::x [b2Math.h <122:3 122:3>]
LOCAL_SYMBOL: b2Math.h<121:11> [b2Math.h <122:8 122:16>]
REFERENCE_USAGE float32 b2Vec2::Normalize() -> float32 b2Vec2::y [b2Math.h <123:3 123:3>]
LOCAL_SYMBOL: b2Math.h<121:11> [b2Math.h <123:8 123:16>]
LOCAL_SYMBOL: b2Math.h<116:11> [b2Math.h <125:10 125:15>]
SYMBOL_METHOD public bool b2Vec2::IsValid() const [b2Math.h <129:2 <129:7 129:13> 132:2>]
REFERENCE_TYPE_USAGE bool b2Vec2::IsValid() const -> bool [b2Math.h <129:2 129:5>]
SYMBOL_FUNCTION bool b2IsValid(float32)
REFERENCE_CALL bool b2Vec2::IsValid() const -> bool b2IsValid(float32) [b2Math.h <131:10 131:18>]
REFERENCE_USAGE bool b2Vec2::IsValid() const -> float32 b2Vec2::x [b2Math.h <131:20 131:20>]
REFERENCE_CALL bool b2Vec2::IsValid() const -> bool b2IsValid(float32) [b2Math.h <131:26 131:34>]
REFERENCE_USAGE bool b2Vec2::IsValid() const -> float32 b2Vec2::y [b2Math.h <131:36 131:36>]
SYMBOL_METHOD public b2Vec2 b2Vec2::Skew() const [b2Math.h <135:2 <135:9 135:12> 138:2>]
REFERENCE_TYPE_USAGE b2Vec2 b2Vec2::Skew() const -> b2Vec2 [b2Math.h <135:2 135:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(float32, float32)
REFERENCE_CALL b2Vec2 b2Vec2::Skew() const -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <137:10 137:15>]
REFERENCE_TYPE_USAGE b2Vec2 b2Vec2::Skew() const -> b2Vec2 [b2Math.h <137:10 137:15>]
REFERENCE_USAGE b2Vec2 b2Vec2::Skew() const -> float32 b2Vec2::y [b2Math.h <137:18 137:18>]
REFERENCE_USAGE b2Vec2 b2Vec2::Skew() const -> float32 b2Vec2::x [b2Math.h <137:21 137:21>]
SYMBOL_FIELD public float32 b2Vec2::x [b2Math.h <140:10 140:10>]
REFERENCE_TYPE_USAGE float32 b2Vec2::x -> float32 [b2Math.h <140:2 140:8>]
SYMBOL_FIELD public float32 b2Vec2::y [b2Math.h <140:13 140:13>]
REFERENCE_TYPE_USAGE float32 b2Vec2::y -> float32 [b2Math.h <140:2 140:8>]
SYMBOL_METHOD public void b2Vec2::b2Vec2(const b2Vec2 &) [b2Math.h <53:8 <53:8 53:13> 53:13>]
REFERENCE_USAGE void b2Vec2::b2Vec2(const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <53:8 53:13>]
LOCAL_SYMBOL: b2Math.h<53:8> [b2Math.h <53:8 53:13>]
REFERENCE_USAGE void b2Vec2::b2Vec2(const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <53:8 53:13>]
SYMBOL_METHOD public void b2Vec2::b2Vec2(b2Vec2 &&) [b2Math.h <53:8 <53:8 53:13> 53:13>]
REFERENCE_USAGE void b2Vec2::b2Vec2(b2Vec2 &&) -> float32 b2Vec2::x [b2Math.h <53:8 53:13>]
REFERENCE_TYPE_USAGE void b2Vec2::b2Vec2(b2Vec2 &&) -> b2Vec2 [b2Math.h <53:8 53:13>]
REFERENCE_USAGE void b2Vec2::b2Vec2(b2Vec2 &&) -> float32 b2Vec2::y [b2Math.h <53:8 53:13>]
SYMBOL_METHOD public void b2Vec2::~b2Vec2() [b2Math.h <53:8 53:13>]
SYMBOL_METHOD public b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Math.h <53:8 <53:8 53:13> 53:13>]
REFERENCE_USAGE b2Vec2 & b2Vec2::operator=(const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <53:8 53:13>]
REFERENCE_USAGE b2Vec2 & b2Vec2::operator=(const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <53:8 53:13>]
SYMBOL_METHOD public b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Math.h <53:8 <53:8 53:13> 53:13>]
REFERENCE_USAGE b2Vec2 & b2Vec2::operator=(b2Vec2 &&) -> float32 b2Vec2::x [b2Math.h <53:8 53:13>]
REFERENCE_TYPE_USAGE b2Vec2 & b2Vec2::operator=(b2Vec2 &&) -> b2Vec2 [b2Math.h <53:8 53:13>]
REFERENCE_USAGE b2Vec2 & b2Vec2::operator=(b2Vec2 &&) -> float32 b2Vec2::y [b2Math.h <53:8 53:13>]
SYMBOL_STRUCT b2Vec3 [b2Math.h <144:1 <144:8 144:13> 180:1>]
SYMBOL_METHOD public void b2Vec3::b2Vec3() [b2Math.h <147:2 <147:2 147:7> 147:12>]
SYMBOL_METHOD public void b2Vec3::b2Vec3(float32, float32, float32) [b2Math.h <150:2 <150:2 150:7> 150:74>]
LOCAL_SYMBOL: b2Math.h<150:17> [b2Math.h <150:17 150:19>]
REFERENCE_TYPE_USAGE void b2Vec3::b2Vec3(float32, float32, float32) -> float32 [b2Math.h <150:9 150:15>]
LOCAL_SYMBOL: b2Math.h<150:30> [b2Math.h <150:30 150:32>]
REFERENCE_TYPE_USAGE void b2Vec3::b2Vec3(float32, float32, float32) -> float32 [b2Math.h <150:22 150:28>]
LOCAL_SYMBOL: b2Math.h<150:43> [b2Math.h <150:43 150:45>]
REFERENCE_TYPE_USAGE void b2Vec3::b2Vec3(float32, float32, float32) -> float32 [b2Math.h <150:35 150:41>]
REFERENCE_USAGE void b2Vec3::b2Vec3(float32, float32, float32) -> float32 b2Vec3::x [b2Math.h <150:50 150:50>]
LOCAL_SYMBOL: b2Math.h<150:17> [b2Math.h <150:52 150:54>]
REFERENCE_USAGE void b2Vec3::b2Vec3(float32, float32, float32) -> float32 b2Vec3::y [b2Math.h <150:58 150:58>]
LOCAL_SYMBOL: b2Math.h<150:30> [b2Math.h <150:60 150:62>]
REFERENCE_USAGE void b2Vec3::b2Vec3(float32, float32, float32) -> float32 b2Vec3::z [b2Math.h <150:66 150:66>]
LOCAL_SYMBOL: b2Math.h<150:43> [b2Math.h <150:68 150:70>]
SYMBOL_METHOD public void b2Vec3::SetZero() [b2Math.h <153:2 <153:7 153:13> 153:49>]
REFERENCE_TYPE_USAGE void b2Vec3::SetZero() -> void [b2Math.h <153:2 153:5>]
REFERENCE_USAGE void b2Vec3::SetZero() -> float32 b2Vec3::x [b2Math.h <153:19 153:19>]
REFERENCE_USAGE void b2Vec3::SetZero() -> float32 b2Vec3::y [b2Math.h <153:29 153:29>]
REFERENCE_USAGE void b2Vec3::SetZero() -> float32 b2Vec3::z [b2Math.h <153:39 153:39>]
SYMBOL_METHOD public void b2Vec3::Set(float32, float32, float32) [b2Math.h <156:2 <156:7 156:9> 156:73>]
REFERENCE_TYPE_USAGE void b2Vec3::Set(float32, float32, float32) -> void [b2Math.h <156:2 156:5>]
LOCAL_SYMBOL: b2Math.h<156:19> [b2Math.h <156:19 156:20>]
REFERENCE_TYPE_USAGE void b2Vec3::Set(float32, float32, float32) -> float32 [b2Math.h <156:11 156:17>]
LOCAL_SYMBOL: b2Math.h<156:31> [b2Math.h <156:31 156:32>]
REFERENCE_TYPE_USAGE void b2Vec3::Set(float32, float32, float32) -> float32 [b2Math.h <156:23 156:29>]
LOCAL_SYMBOL: b2Math.h<156:43> [b2Math.h <156:43 156:44>]
REFERENCE_TYPE_USAGE void b2Vec3::Set(float32, float32, float32) -> float32 [b2Math.h <156:35 156:41>]
REFERENCE_USAGE void b2Vec3::Set(float32, float32, float32) -> float32 b2Vec3::x [b2Math.h <156:49 156:49>]
LOCAL_SYMBOL: b2Math.h<156:19> [b2Math.h <156:53 156:54>]
REFERENCE_USAGE void b2Vec3::Set(float32, float32, float32) -> float32 b2Vec3::y [b2Math.h <156:57 156:57>]
LOCAL_SYMBOL: b2Math.h<156:31> [b2Math.h <156:61 156:62>]
REFERENCE_USAGE void b2Vec3::Set(float32, float32, float32) -> float32 b2Vec3::z [b2Math.h <156:65 156:65>]
LOCAL_SYMBOL: b2Math.h<156:43> [b2Math.h <156:69 156:70>]
SYMBOL_METHOD public b2Vec3 b2Vec3::operator-() const [b2Math.h <159:2 <159:9 159:18> 159:69>]
REFERENCE_TYPE_USAGE b2Vec3 b2Vec3::operator-() const -> b2Vec3 [b2Math.h <159:2 159:7>]
LOCAL_SYMBOL: b2Math.h<159:37> [b2Math.h <159:37 159:37>]
REFERENCE_TYPE_USAGE b2Vec3 b2Vec3::operator-() const -> b2Vec3 [b2Math.h <159:30 159:35>]
SYMBOL_FUNCTION void b2Vec3::b2Vec3()
REFERENCE_CALL b2Vec3 b2Vec3::operator-() const -> void b2Vec3::b2Vec3() [b2Math.h <159:37 159:37>]
SYMBOL_FUNCTION void b2Vec3::Set(float32, float32, float32)
REFERENCE_CALL b2Vec3 b2Vec3::operator-() const -> void b2Vec3::Set(float32, float32, float32) [b2Math.h <159:42 159:44>]
LOCAL_SYMBOL: b2Math.h<159:37> [b2Math.h <159:40 159:40>]
REFERENCE_USAGE b2Vec3 b2Vec3::operator-() const -> float32 b2Vec3::x [b2Math.h <159:47 159:47>]
REFERENCE_USAGE b2Vec3 b2Vec3::operator-() const -> float32 b2Vec3::y [b2Math.h <159:51 159:51>]
REFERENCE_USAGE b2Vec3 b2Vec3::operator-() const -> float32 b2Vec3::z [b2Math.h <159:55 159:55>]
SYMBOL_FUNCTION void b2Vec3::b2Vec3(b2Vec3 &&)
REFERENCE_CALL b2Vec3 b2Vec3::operator-() const -> void b2Vec3::b2Vec3(b2Vec3 &&) [b2Math.h <159:66 159:66>]
LOCAL_SYMBOL: b2Math.h<159:37> [b2Math.h <159:66 159:66>]
SYMBOL_METHOD public void b2Vec3::operator+=(const b2Vec3 &) [b2Math.h <162:2 <162:7 162:17> 165:2>]
REFERENCE_TYPE_USAGE void b2Vec3::operator+=(const b2Vec3 &) -> void [b2Math.h <162:2 162:5>]
LOCAL_SYMBOL: b2Math.h<162:34> [b2Math.h <162:34 162:34>]
REFERENCE_TYPE_USAGE void b2Vec3::operator+=(const b2Vec3 &) -> b2Vec3 [b2Math.h <162:26 162:31>]
REFERENCE_USAGE void b2Vec3::operator+=(const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <164:3 164:3>]
REFERENCE_USAGE void b2Vec3::operator+=(const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <164:10 164:10>]
LOCAL_SYMBOL: b2Math.h<162:34> [b2Math.h <164:8 164:8>]
REFERENCE_USAGE void b2Vec3::operator+=(const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <164:13 164:13>]
REFERENCE_USAGE void b2Vec3::operator+=(const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <164:20 164:20>]
LOCAL_SYMBOL: b2Math.h<162:34> [b2Math.h <164:18 164:18>]
REFERENCE_USAGE void b2Vec3::operator+=(const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <164:23 164:23>]
REFERENCE_USAGE void b2Vec3::operator+=(const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <164:30 164:30>]
LOCAL_SYMBOL: b2Math.h<162:34> [b2Math.h <164:28 164:28>]
SYMBOL_METHOD public void b2Vec3::operator-=(const b2Vec3 &) [b2Math.h <168:2 <168:7 168:17> 171:2>]
REFERENCE_TYPE_USAGE void b2Vec3::operator-=(const b2Vec3 &) -> void [b2Math.h <168:2 168:5>]
LOCAL_SYMBOL: b2Math.h<168:34> [b2Math.h <168:34 168:34>]
REFERENCE_TYPE_USAGE void b2Vec3::operator-=(const b2Vec3 &) -> b2Vec3 [b2Math.h <168:26 168:31>]
REFERENCE_USAGE void b2Vec3::operator-=(const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <170:3 170:3>]
REFERENCE_USAGE void b2Vec3::operator-=(const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <170:10 170:10>]
LOCAL_SYMBOL: b2Math.h<168:34> [b2Math.h <170:8 170:8>]
REFERENCE_USAGE void b2Vec3::operator-=(const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <170:13 170:13>]
REFERENCE_USAGE void b2Vec3::operator-=(const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <170:20 170:20>]
LOCAL_SYMBOL: b2Math.h<168:34> [b2Math.h <170:18 170:18>]
REFERENCE_USAGE void b2Vec3::operator-=(const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <170:23 170:23>]
REFERENCE_USAGE void b2Vec3::operator-=(const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <170:30 170:30>]
LOCAL_SYMBOL: b2Math.h<168:34> [b2Math.h <170:28 170:28>]
SYMBOL_METHOD public void b2Vec3::operator*=(float32) [b2Math.h <174:2 <174:7 174:17> 177:2>]
REFERENCE_TYPE_USAGE void b2Vec3::operator*=(float32) -> void [b2Math.h <174:2 174:5>]
LOCAL_SYMBOL: b2Math.h<174:28> [b2Math.h <174:28 174:28>]
REFERENCE_TYPE_USAGE void b2Vec3::operator*=(float32) -> float32 [b2Math.h <174:20 174:26>]
REFERENCE_USAGE void b2Vec3::operator*=(float32) -> float32 b2Vec3::x [b2Math.h <176:3 176:3>]
LOCAL_SYMBOL: b2Math.h<174:28> [b2Math.h <176:8 176:8>]
REFERENCE_USAGE void b2Vec3::operator*=(float32) -> float32 b2Vec3::y [b2Math.h <176:11 176:11>]
LOCAL_SYMBOL: b2Math.h<174:28> [b2Math.h <176:16 176:16>]
REFERENCE_USAGE void b2Vec3::operator*=(float32) -> float32 b2Vec3::z [b2Math.h <176:19 176:19>]
LOCAL_SYMBOL: b2Math.h<174:28> [b2Math.h <176:24 176:24>]
SYMBOL_FIELD public float32 b2Vec3::x [b2Math.h <179:10 179:10>]
REFERENCE_TYPE_USAGE float32 b2Vec3::x -> float32 [b2Math.h <179:2 179:8>]
SYMBOL_FIELD public float32 b2Vec3::y [b2Math.h <179:13 179:13>]
REFERENCE_TYPE_USAGE float32 b2Vec3::y -> float32 [b2Math.h <179:2 179:8>]
SYMBOL_FIELD public float32 b2Vec3::z [b2Math.h <179:16 179:16>]
REFERENCE_TYPE_USAGE float32 b2Vec3::z -> float32 [b2Math.h <179:2 179:8>]
SYMBOL_METHOD public void b2Vec3::b2Vec3(const b2Vec3 &) [b2Math.h <144:8 144:13>]
SYMBOL_METHOD public void b2Vec3::b2Vec3(b2Vec3 &&) [b2Math.h <144:8 <144:8 144:13> 144:13>]
REFERENCE_USAGE void b2Vec3::b2Vec3(b2Vec3 &&) -> float32 b2Vec3::x [b2Math.h <144:8 144:13>]
REFERENCE_TYPE_USAGE void b2Vec3::b2Vec3(b2Vec3 &&) -> b2Vec3 [b2Math.h <144:8 144:13>]
LOCAL_SYMBOL: b2Math.h<144:8> [b2Math.h <144:8 144:13>]
REFERENCE_USAGE void b2Vec3::b2Vec3(b2Vec3 &&) -> float32 b2Vec3::y [b2Math.h <144:8 144:13>]
REFERENCE_USAGE void b2Vec3::b2Vec3(b2Vec3 &&) -> float32 b2Vec3::z [b2Math.h <144:8 144:13>]
SYMBOL_METHOD public b2Vec3 & b2Vec3::operator=(const b2Vec3 &) [b2Math.h <144:8 <144:8 144:13> 144:13>]
REFERENCE_USAGE b2Vec3 & b2Vec3::operator=(const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <144:8 144:13>]
REFERENCE_USAGE b2Vec3 & b2Vec3::operator=(const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <144:8 144:13>]
REFERENCE_USAGE b2Vec3 & b2Vec3::operator=(const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <144:8 144:13>]
SYMBOL_METHOD public b2Vec3 & b2Vec3::operator=(b2Vec3 &&) [b2Math.h <144:8 144:13>]
SYMBOL_METHOD public void b2Vec3::~b2Vec3() [b2Math.h <144:8 144:13>]
SYMBOL_STRUCT b2Mat22 [b2Math.h <183:1 <183:8 183:14> 254:1>]
SYMBOL_METHOD public void b2Mat22::b2Mat22() [b2Math.h <186:2 <186:2 186:8> 186:13>]
REFERENCE_USAGE void b2Mat22::b2Mat22() -> b2Vec2 b2Mat22::ex [b2Math.h <186:2 186:8>]
REFERENCE_CALL void b2Mat22::b2Mat22() -> void b2Vec2::b2Vec2() [b2Math.h <186:2 186:8>]
REFERENCE_USAGE void b2Mat22::b2Mat22() -> b2Vec2 b2Mat22::ey [b2Math.h <186:2 186:8>]
SYMBOL_METHOD public void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) [b2Math.h <189:2 <189:2 189:8> 193:2>]
LOCAL_SYMBOL: b2Math.h<189:24> [b2Math.h <189:24 189:25>]
REFERENCE_TYPE_USAGE void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <189:16 189:21>]
LOCAL_SYMBOL: b2Math.h<189:42> [b2Math.h <189:42 189:43>]
REFERENCE_TYPE_USAGE void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <189:34 189:39>]
REFERENCE_USAGE void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ex [b2Math.h <189:2 189:8>]
REFERENCE_CALL void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) -> void b2Vec2::b2Vec2() [b2Math.h <189:2 189:8>]
REFERENCE_USAGE void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ey [b2Math.h <189:2 189:8>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Math.h <191:6 191:6>]
REFERENCE_USAGE void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ex [b2Math.h <191:3 191:4>]
LOCAL_SYMBOL: b2Math.h<189:24> [b2Math.h <191:8 191:9>]
REFERENCE_CALL void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Math.h <192:6 192:6>]
REFERENCE_USAGE void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ey [b2Math.h <192:3 192:4>]
LOCAL_SYMBOL: b2Math.h<189:42> [b2Math.h <192:8 192:9>]
SYMBOL_METHOD public void b2Mat22::b2Mat22(float32, float32, float32, float32) [b2Math.h <196:2 <196:2 196:8> 200:2>]
LOCAL_SYMBOL: b2Math.h<196:18> [b2Math.h <196:18 196:20>]
REFERENCE_TYPE_USAGE void b2Mat22::b2Mat22(float32, float32, float32, float32) -> float32 [b2Math.h <196:10 196:16>]
LOCAL_SYMBOL: b2Math.h<196:31> [b2Math.h <196:31 196:33>]
REFERENCE_TYPE_USAGE void b2Mat22::b2Mat22(float32, float32, float32, float32) -> float32 [b2Math.h <196:23 196:29>]
LOCAL_SYMBOL: b2Math.h<196:44> [b2Math.h <196:44 196:46>]
REFERENCE_TYPE_USAGE void b2Mat22::b2Mat22(float32, float32, float32, float32) -> float32 [b2Math.h <196:36 196:42>]
LOCAL_SYMBOL: b2Math.h<196:57> [b2Math.h <196:57 196:59>]
REFERENCE_TYPE_USAGE void b2Mat22::b2Mat22(float32, float32, float32, float32) -> float32 [b2Math.h <196:49 196:55>]
REFERENCE_USAGE void b2Mat22::b2Mat22(float32, float32, float32, float32) -> b2Vec2 b2Mat22::ex [b2Math.h <196:2 196:8>]
REFERENCE_CALL void b2Mat22::b2Mat22(float32, float32, float32, float32) -> void b2Vec2::b2Vec2() [b2Math.h <196:2 196:8>]
REFERENCE_USAGE void b2Mat22::b2Mat22(float32, float32, float32, float32) -> b2Vec2 b2Mat22::ey [b2Math.h <196:2 196:8>]
REFERENCE_USAGE void b2Mat22::b2Mat22(float32, float32, float32, float32) -> float32 b2Vec2::x [b2Math.h <198:6 198:6>]
REFERENCE_USAGE void b2Mat22::b2Mat22(float32, float32, float32, float32) -> b2Vec2 b2Mat22::ex [b2Math.h <198:3 198:4>]
LOCAL_SYMBOL: b2Math.h<196:18> [b2Math.h <198:10 198:12>]
REFERENCE_USAGE void b2Mat22::b2Mat22(float32, float32, float32, float32) -> float32 b2Vec2::y [b2Math.h <198:18 198:18>]
REFERENCE_USAGE void b2Mat22::b2Mat22(float32, float32, float32, float32) -> b2Vec2 b2Mat22::ex [b2Math.h <198:15 198:16>]
LOCAL_SYMBOL: b2Math.h<196:44> [b2Math.h <198:22 198:24>]
REFERENCE_USAGE void b2Mat22::b2Mat22(float32, float32, float32, float32) -> float32 b2Vec2::x [b2Math.h <199:6 199:6>]
REFERENCE_USAGE void b2Mat22::b2Mat22(float32, float32, float32, float32) -> b2Vec2 b2Mat22::ey [b2Math.h <199:3 199:4>]
LOCAL_SYMBOL: b2Math.h<196:31> [b2Math.h <199:10 199:12>]
REFERENCE_USAGE void b2Mat22::b2Mat22(float32, float32, float32, float32) -> float32 b2Vec2::y [b2Math.h <199:18 199:18>]
REFERENCE_USAGE void b2Mat22::b2Mat22(float32, float32, float32, float32) -> b2Vec2 b2Mat22::ey [b2Math.h <199:15 199:16>]
LOCAL_SYMBOL: b2Math.h<196:57> [b2Math.h <199:22 199:24>]
SYMBOL_METHOD public void b2Mat22::Set(const b2Vec2 &, const b2Vec2 &) [b2Math.h <203:2 <203:7 203:9> 207:2>]
REFERENCE_TYPE_USAGE void b2Mat22::Set(const b2Vec2 &, const b2Vec2 &) -> void [b2Math.h <203:2 203:5>]
LOCAL_SYMBOL: b2Math.h<203:25> [b2Math.h <203:25 203:26>]
REFERENCE_TYPE_USAGE void b2Mat22::Set(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <203:17 203:22>]
LOCAL_SYMBOL: b2Math.h<203:43> [b2Math.h <203:43 203:44>]
REFERENCE_TYPE_USAGE void b2Mat22::Set(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <203:35 203:40>]
REFERENCE_CALL void b2Mat22::Set(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Math.h <205:6 205:6>]
REFERENCE_USAGE void b2Mat22::Set(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ex [b2Math.h <205:3 205:4>]
LOCAL_SYMBOL: b2Math.h<203:25> [b2Math.h <205:8 205:9>]
REFERENCE_CALL void b2Mat22::Set(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Math.h <206:6 206:6>]
REFERENCE_USAGE void b2Mat22::Set(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ey [b2Math.h <206:3 206:4>]
LOCAL_SYMBOL: b2Math.h<203:43> [b2Math.h <206:8 206:9>]
SYMBOL_METHOD public void b2Mat22::SetIdentity() [b2Math.h <210:2 <210:7 210:17> 214:2>]
REFERENCE_TYPE_USAGE void b2Mat22::SetIdentity() -> void [b2Math.h <210:2 210:5>]
REFERENCE_USAGE void b2Mat22::SetIdentity() -> float32 b2Vec2::x [b2Math.h <212:6 212:6>]
REFERENCE_USAGE void b2Mat22::SetIdentity() -> b2Vec2 b2Mat22::ex [b2Math.h <212:3 212:4>]
REFERENCE_USAGE void b2Mat22::SetIdentity() -> float32 b2Vec2::x [b2Math.h <212:19 212:19>]
REFERENCE_USAGE void b2Mat22::SetIdentity() -> b2Vec2 b2Mat22::ey [b2Math.h <212:16 212:17>]
REFERENCE_USAGE void b2Mat22::SetIdentity() -> float32 b2Vec2::y [b2Math.h <213:6 213:6>]
REFERENCE_USAGE void b2Mat22::SetIdentity() -> b2Vec2 b2Mat22::ex [b2Math.h <213:3 213:4>]
REFERENCE_USAGE void b2Mat22::SetIdentity() -> float32 b2Vec2::y [b2Math.h <213:19 213:19>]
REFERENCE_USAGE void b2Mat22::SetIdentity() -> b2Vec2 b2Mat22::ey [b2Math.h <213:16 213:17>]
SYMBOL_METHOD public void b2Mat22::SetZero() [b2Math.h <217:2 <217:7 217:13> 221:2>]
REFERENCE_TYPE_USAGE void b2Mat22::SetZero() -> void [b2Math.h <217:2 217:5>]
REFERENCE_USAGE void b2Mat22::SetZero() -> float32 b2Vec2::x [b2Math.h <219:6 219:6>]
REFERENCE_USAGE void b2Mat22::SetZero() -> b2Vec2 b2Mat22::ex [b2Math.h <219:3 219:4>]
REFERENCE_USAGE void b2Mat22::SetZero() -> float32 b2Vec2::x [b2Math.h <219:19 219:19>]
REFERENCE_USAGE void b2Mat22::SetZero() -> b2Vec2 b2Mat22::ey [b2Math.h <219:16 219:17>]
REFERENCE_USAGE void b2Mat22::SetZero() -> float32 b2Vec2::y [b2Math.h <220:6 220:6>]
REFERENCE_USAGE void b2Mat22::SetZero() -> b2Vec2 b2Mat22::ex [b2Math.h <220:3 220:4>]
REFERENCE_USAGE void b2Mat22::SetZero() -> float32 b2Vec2::y [b2Math.h <220:19 220:19>]
REFERENCE_USAGE void b2Mat22::SetZero() -> b2Vec2 b2Mat22::ey [b2Math.h <220:16 220:17>]
SYMBOL_METHOD public b2Mat22 b2Mat22::GetInverse() const [b2Math.h <223:2 <223:10 223:19> 235:2>]
REFERENCE_TYPE_USAGE b2Mat22 b2Mat22::GetInverse() const -> b2Mat22 [b2Math.h <223:2 223:8>]
LOCAL_SYMBOL: b2Math.h<225:11> [b2Math.h <225:11 225:11>]
REFERENCE_TYPE_USAGE b2Mat22 b2Mat22::GetInverse() const -> float32 [b2Math.h <225:3 225:9>]
REFERENCE_USAGE b2Mat22 b2Mat22::GetInverse() const -> float32 b2Vec2::x [b2Math.h <225:18 225:18>]
REFERENCE_USAGE b2Mat22 b2Mat22::GetInverse() const -> b2Vec2 b2Mat22::ex [b2Math.h <225:15 225:16>]
LOCAL_SYMBOL: b2Math.h<225:21> [b2Math.h <225:21 225:21>]
REFERENCE_USAGE b2Mat22 b2Mat22::GetInverse() const -> float32 b2Vec2::x [b2Math.h <225:28 225:28>]
REFERENCE_USAGE b2Mat22 b2Mat22::GetInverse() const -> b2Vec2 b2Mat22::ey [b2Math.h <225:25 225:26>]
LOCAL_SYMBOL: b2Math.h<225:31> [b2Math.h <225:31 225:31>]
REFERENCE_USAGE b2Mat22 b2Mat22::GetInverse() const -> float32 b2Vec2::y [b2Math.h <225:38 225:38>]
REFERENCE_USAGE b2Mat22 b2Mat22::GetInverse() const -> b2Vec2 b2Mat22::ex [b2Math.h <225:35 225:36>]
LOCAL_SYMBOL: b2Math.h<225:41> [b2Math.h <225:41 225:41>]
REFERENCE_USAGE b2Mat22 b2Mat22::GetInverse() const -> float32 b2Vec2::y [b2Math.h <225:48 225:48>]
REFERENCE_USAGE b2Mat22 b2Mat22::GetInverse() const -> b2Vec2 b2Mat22::ey [b2Math.h <225:45 225:46>]
LOCAL_SYMBOL: b2Math.h<226:11> [b2Math.h <226:11 226:11>]
REFERENCE_TYPE_USAGE b2Mat22 b2Mat22::GetInverse() const -> b2Mat22 [b2Math.h <226:3 226:9>]
SYMBOL_FUNCTION void b2Mat22::b2Mat22()
REFERENCE_CALL b2Mat22 b2Mat22::GetInverse() const -> void b2Mat22::b2Mat22() [b2Math.h <226:11 226:11>]
LOCAL_SYMBOL: b2Math.h<227:11> [b2Math.h <227:11 227:13>]
REFERENCE_TYPE_USAGE b2Mat22 b2Mat22::GetInverse() const -> float32 [b2Math.h <227:3 227:9>]
LOCAL_SYMBOL: b2Math.h<225:11> [b2Math.h <227:17 227:17>]
LOCAL_SYMBOL: b2Math.h<225:41> [b2Math.h <227:21 227:21>]
LOCAL_SYMBOL: b2Math.h<225:21> [b2Math.h <227:25 227:25>]
LOCAL_SYMBOL: b2Math.h<225:31> [b2Math.h <227:29 227:29>]
LOCAL_SYMBOL: b2Math.h<227:11> [b2Math.h <228:7 228:9>]
LOCAL_SYMBOL: b2Math.h<227:11> [b2Math.h <230:4 230:6>]
LOCAL_SYMBOL: b2Math.h<227:11> [b2Math.h <230:17 230:19>]
REFERENCE_USAGE b2Mat22 b2Mat22::GetInverse() const -> float32 b2Vec2::x [b2Math.h <232:8 232:8>]
REFERENCE_USAGE b2Mat22 b2Mat22::GetInverse() const -> b2Vec2 b2Mat22::ex [b2Math.h <232:5 232:6>]
LOCAL_SYMBOL: b2Math.h<226:11> [b2Math.h <232:3 232:3>]
LOCAL_SYMBOL: b2Math.h<227:11> [b2Math.h <232:13 232:15>]
LOCAL_SYMBOL: b2Math.h<225:41> [b2Math.h <232:19 232:19>]
REFERENCE_USAGE b2Mat22 b2Mat22::GetInverse() const -> float32 b2Vec2::x [b2Math.h <232:27 232:27>]
REFERENCE_USAGE b2Mat22 b2Mat22::GetInverse() const -> b2Vec2 b2Mat22::ey [b2Math.h <232:24 232:25>]
LOCAL_SYMBOL: b2Math.h<226:11> [b2Math.h <232:22 232:22>]
LOCAL_SYMBOL: b2Math.h<227:11> [b2Math.h <232:32 232:34>]
LOCAL_SYMBOL: b2Math.h<225:21> [b2Math.h <232:38 232:38>]
REFERENCE_USAGE b2Mat22 b2Mat22::GetInverse() const -> float32 b2Vec2::y [b2Math.h <233:8 233:8>]
REFERENCE_USAGE b2Mat22 b2Mat22::GetInverse() const -> b2Vec2 b2Mat22::ex [b2Math.h <233:5 233:6>]
LOCAL_SYMBOL: b2Math.h<226:11> [b2Math.h <233:3 233:3>]
LOCAL_SYMBOL: b2Math.h<227:11> [b2Math.h <233:13 233:15>]
LOCAL_SYMBOL: b2Math.h<225:31> [b2Math.h <233:19 233:19>]
REFERENCE_USAGE b2Mat22 b2Mat22::GetInverse() const -> float32 b2Vec2::y [b2Math.h <233:27 233:27>]
REFERENCE_USAGE b2Mat22 b2Mat22::GetInverse() const -> b2Vec2 b2Mat22::ey [b2Math.h <233:24 233:25>]
LOCAL_SYMBOL: b2Math.h<226:11> [b2Math.h <233:22 233:22>]
LOCAL_SYMBOL: b2Math.h<227:11> [b2Math.h <233:32 233:34>]
LOCAL_SYMBOL: b2Math.h<225:11> [b2Math.h <233:38 233:38>]
SYMBOL_FUNCTION void b2Mat22::b2Mat22(b2Mat22 &&)
REFERENCE_CALL b2Mat22 b2Mat22::GetInverse() const -> void b2Mat22::b2Mat22(b2Mat22 &&) [b2Math.h <234:10 234:10>]
LOCAL_SYMBOL: b2Math.h<226:11> [b2Math.h <234:10 234:10>]
SYMBOL_METHOD public b2Vec2 b2Mat22::Solve(const b2Vec2 &) const [b2Math.h <239:2 <239:9 239:13> 251:2>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> b2Vec2 [b2Math.h <239:2 239:7>]
LOCAL_SYMBOL: b2Math.h<239:29> [b2Math.h <239:29 239:29>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> b2Vec2 [b2Math.h <239:21 239:26>]
LOCAL_SYMBOL: b2Math.h<241:11> [b2Math.h <241:11 241:13>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 [b2Math.h <241:3 241:9>]
REFERENCE_USAGE b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 b2Vec2::x [b2Math.h <241:20 241:20>]
REFERENCE_USAGE b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> b2Vec2 b2Mat22::ex [b2Math.h <241:17 241:18>]
LOCAL_SYMBOL: b2Math.h<241:23> [b2Math.h <241:23 241:25>]
REFERENCE_USAGE b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 b2Vec2::x [b2Math.h <241:32 241:32>]
REFERENCE_USAGE b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> b2Vec2 b2Mat22::ey [b2Math.h <241:29 241:30>]
LOCAL_SYMBOL: b2Math.h<241:35> [b2Math.h <241:35 241:37>]
REFERENCE_USAGE b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 b2Vec2::y [b2Math.h <241:44 241:44>]
REFERENCE_USAGE b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> b2Vec2 b2Mat22::ex [b2Math.h <241:41 241:42>]
LOCAL_SYMBOL: b2Math.h<241:47> [b2Math.h <241:47 241:49>]
REFERENCE_USAGE b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 b2Vec2::y [b2Math.h <241:56 241:56>]
REFERENCE_USAGE b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> b2Vec2 b2Mat22::ey [b2Math.h <241:53 241:54>]
LOCAL_SYMBOL: b2Math.h<242:11> [b2Math.h <242:11 242:13>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 [b2Math.h <242:3 242:9>]
LOCAL_SYMBOL: b2Math.h<241:11> [b2Math.h <242:17 242:19>]
LOCAL_SYMBOL: b2Math.h<241:47> [b2Math.h <242:23 242:25>]
LOCAL_SYMBOL: b2Math.h<241:23> [b2Math.h <242:29 242:31>]
LOCAL_SYMBOL: b2Math.h<241:35> [b2Math.h <242:35 242:37>]
LOCAL_SYMBOL: b2Math.h<242:11> [b2Math.h <243:7 243:9>]
LOCAL_SYMBOL: b2Math.h<242:11> [b2Math.h <245:4 245:6>]
LOCAL_SYMBOL: b2Math.h<242:11> [b2Math.h <245:17 245:19>]
LOCAL_SYMBOL: b2Math.h<247:10> [b2Math.h <247:10 247:10>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> b2Vec2 [b2Math.h <247:3 247:8>]
REFERENCE_CALL b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> void b2Vec2::b2Vec2() [b2Math.h <247:10 247:10>]
REFERENCE_USAGE b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 b2Vec2::x [b2Math.h <248:5 248:5>]
LOCAL_SYMBOL: b2Math.h<247:10> [b2Math.h <248:3 248:3>]
LOCAL_SYMBOL: b2Math.h<242:11> [b2Math.h <248:9 248:11>]
LOCAL_SYMBOL: b2Math.h<241:47> [b2Math.h <248:16 248:18>]
REFERENCE_USAGE b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 b2Vec2::x [b2Math.h <248:24 248:24>]
LOCAL_SYMBOL: b2Math.h<239:29> [b2Math.h <248:22 248:22>]
LOCAL_SYMBOL: b2Math.h<241:23> [b2Math.h <248:28 248:30>]
REFERENCE_USAGE b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 b2Vec2::y [b2Math.h <248:36 248:36>]
LOCAL_SYMBOL: b2Math.h<239:29> [b2Math.h <248:34 248:34>]
REFERENCE_USAGE b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 b2Vec2::y [b2Math.h <249:5 249:5>]
LOCAL_SYMBOL: b2Math.h<247:10> [b2Math.h <249:3 249:3>]
LOCAL_SYMBOL: b2Math.h<242:11> [b2Math.h <249:9 249:11>]
LOCAL_SYMBOL: b2Math.h<241:11> [b2Math.h <249:16 249:18>]
REFERENCE_USAGE b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 b2Vec2::y [b2Math.h <249:24 249:24>]
LOCAL_SYMBOL: b2Math.h<239:29> [b2Math.h <249:22 249:22>]
LOCAL_SYMBOL: b2Math.h<241:35> [b2Math.h <249:28 249:30>]
REFERENCE_USAGE b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 b2Vec2::x [b2Math.h <249:36 249:36>]
LOCAL_SYMBOL: b2Math.h<239:29> [b2Math.h <249:34 249:34>]
REFERENCE_CALL b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> void b2Vec2::b2Vec2(b2Vec2 &&) [b2Math.h <250:10 250:10>]
LOCAL_SYMBOL: b2Math.h<247:10> [b2Math.h <250:10 250:10>]
SYMBOL_FIELD public b2Vec2 b2Mat22::ex [b2Math.h <253:9 253:10>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mat22::ex -> b2Vec2 [b2Math.h <253:2 253:7>]
SYMBOL_FIELD public b2Vec2 b2Mat22::ey [b2Math.h <253:13 253:14>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mat22::ey -> b2Vec2 [b2Math.h <253:2 253:7>]
SYMBOL_METHOD public void b2Mat22::b2Mat22(const b2Mat22 &) [b2Math.h <183:8 183:14>]
SYMBOL_METHOD public void b2Mat22::b2Mat22(b2Mat22 &&) [b2Math.h <183:8 <183:8 183:14> 183:14>]
REFERENCE_USAGE void b2Mat22::b2Mat22(b2Mat22 &&) -> b2Vec2 b2Mat22::ex [b2Math.h <183:8 183:14>]
REFERENCE_CALL void b2Mat22::b2Mat22(b2Mat22 &&) -> void b2Vec2::b2Vec2(b2Vec2 &&) [b2Math.h <183:8 183:14>]
REFERENCE_TYPE_USAGE void b2Mat22::b2Mat22(b2Mat22 &&) -> b2Mat22 [b2Math.h <183:8 183:14>]
LOCAL_SYMBOL: b2Math.h<183:8> [b2Math.h <183:8 183:14>]
REFERENCE_USAGE void b2Mat22::b2Mat22(b2Mat22 &&) -> b2Vec2 b2Mat22::ey [b2Math.h <183:8 183:14>]
SYMBOL_METHOD public void b2Mat22::~b2Mat22() [b2Math.h <183:8 183:14>]
SYMBOL_STRUCT b2Mat33 [b2Math.h <257:1 <257:8 257:14> 296:1>]
SYMBOL_METHOD public void b2Mat33::b2Mat33() [b2Math.h <260:2 <260:2 260:8> 260:13>]
REFERENCE_USAGE void b2Mat33::b2Mat33() -> b2Vec3 b2Mat33::ex [b2Math.h <260:2 260:8>]
REFERENCE_CALL void b2Mat33::b2Mat33() -> void b2Vec3::b2Vec3() [b2Math.h <260:2 260:8>]
REFERENCE_USAGE void b2Mat33::b2Mat33() -> b2Vec3 b2Mat33::ey [b2Math.h <260:2 260:8>]
REFERENCE_USAGE void b2Mat33::b2Mat33() -> b2Vec3 b2Mat33::ez [b2Math.h <260:2 260:8>]
SYMBOL_METHOD public void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) [b2Math.h <263:2 <263:2 263:8> 268:2>]
LOCAL_SYMBOL: b2Math.h<263:24> [b2Math.h <263:24 263:25>]
REFERENCE_TYPE_USAGE void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <263:16 263:21>]
LOCAL_SYMBOL: b2Math.h<263:42> [b2Math.h <263:42 263:43>]
REFERENCE_TYPE_USAGE void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <263:34 263:39>]
LOCAL_SYMBOL: b2Math.h<263:60> [b2Math.h <263:60 263:61>]
REFERENCE_TYPE_USAGE void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <263:52 263:57>]
REFERENCE_USAGE void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 b2Mat33::ex [b2Math.h <263:2 263:8>]
REFERENCE_CALL void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> void b2Vec3::b2Vec3() [b2Math.h <263:2 263:8>]
REFERENCE_USAGE void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 b2Mat33::ey [b2Math.h <263:2 263:8>]
REFERENCE_USAGE void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 b2Mat33::ez [b2Math.h <263:2 263:8>]
SYMBOL_FUNCTION b2Vec3 & b2Vec3::operator=(const b2Vec3 &)
REFERENCE_CALL void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 & b2Vec3::operator=(const b2Vec3 &) [b2Math.h <265:6 265:6>]
REFERENCE_USAGE void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 b2Mat33::ex [b2Math.h <265:3 265:4>]
LOCAL_SYMBOL: b2Math.h<263:24> [b2Math.h <265:8 265:9>]
REFERENCE_CALL void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 & b2Vec3::operator=(const b2Vec3 &) [b2Math.h <266:6 266:6>]
REFERENCE_USAGE void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 b2Mat33::ey [b2Math.h <266:3 266:4>]
LOCAL_SYMBOL: b2Math.h<263:42> [b2Math.h <266:8 266:9>]
REFERENCE_CALL void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 & b2Vec3::operator=(const b2Vec3 &) [b2Math.h <267:6 267:6>]
REFERENCE_USAGE void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 b2Mat33::ez [b2Math.h <267:3 267:4>]
LOCAL_SYMBOL: b2Math.h<263:60> [b2Math.h <267:8 267:9>]
SYMBOL_METHOD public void b2Mat33::SetZero() [b2Math.h <271:2 <271:7 271:13> 276:2>]
REFERENCE_TYPE_USAGE void b2Mat33::SetZero() -> void [b2Math.h <271:2 271:5>]
SYMBOL_FUNCTION void b2Vec3::SetZero()
REFERENCE_CALL void b2Mat33::SetZero() -> void b2Vec3::SetZero() [b2Math.h <273:6 273:12>]
REFERENCE_USAGE void b2Mat33::SetZero() -> b2Vec3 b2Mat33::ex [b2Math.h <273:3 273:4>]
REFERENCE_CALL void b2Mat33::SetZero() -> void b2Vec3::SetZero() [b2Math.h <274:6 274:12>]
REFERENCE_USAGE void b2Mat33::SetZero() -> b2Vec3 b2Mat33::ey [b2Math.h <274:3 274:4>]
REFERENCE_CALL void b2Mat33::SetZero() -> void b2Vec3::SetZero() [b2Math.h <275:6 275:12>]
REFERENCE_USAGE void b2Mat33::SetZero() -> b2Vec3 b2Mat33::ez [b2Math.h <275:3 275:4>]
SYMBOL_METHOD public b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const [b2Math.h <280:9 280:15>]
REFERENCE_TYPE_USAGE b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> b2Vec3 [b2Math.h <280:2 280:7>]
LOCAL_SYMBOL: b2Math.h<280:31> [b2Math.h <280:31 280:31>]
REFERENCE_TYPE_USAGE b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> b2Vec3 [b2Math.h <280:23 280:28>]
SYMBOL_METHOD public b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const [b2Math.h <285:9 285:15>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> b2Vec2 [b2Math.h <285:2 285:7>]
LOCAL_SYMBOL: b2Math.h<285:31> [b2Math.h <285:31 285:31>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> b2Vec2 [b2Math.h <285:23 285:28>]
SYMBOL_METHOD public void b2Mat33::GetInverse22(b2Mat33 *) const [b2Math.h <289:7 289:18>]
REFERENCE_TYPE_USAGE void b2Mat33::GetInverse22(b2Mat33 *) const -> void [b2Math.h <289:2 289:5>]
LOCAL_SYMBOL: b2Math.h<289:29> [b2Math.h <289:29 289:29>]
REFERENCE_TYPE_USAGE void b2Mat33::GetInverse22(b2Mat33 *) const -> b2Mat33 [b2Math.h <289:20 289:26>]
SYMBOL_METHOD public void b2Mat33::GetSymInverse33(b2Mat33 *) const [b2Math.h <293:7 293:21>]
REFERENCE_TYPE_USAGE void b2Mat33::GetSymInverse33(b2Mat33 *) const -> void [b2Math.h <293:2 293:5>]
LOCAL_SYMBOL: b2Math.h<293:32> [b2Math.h <293:32 293:32>]
REFERENCE_TYPE_USAGE void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Mat33 [b2Math.h <293:23 293:29>]
SYMBOL_FIELD public b2Vec3 b2Mat33::ex [b2Math.h <295:9 295:10>]
REFERENCE_TYPE_USAGE b2Vec3 b2Mat33::ex -> b2Vec3 [b2Math.h <295:2 295:7>]
SYMBOL_FIELD public b2Vec3 b2Mat33::ey [b2Math.h <295:13 295:14>]
REFERENCE_TYPE_USAGE b2Vec3 b2Mat33::ey -> b2Vec3 [b2Math.h <295:2 295:7>]
SYMBOL_FIELD public b2Vec3 b2Mat33::ez [b2Math.h <295:17 295:18>]
REFERENCE_TYPE_USAGE b2Vec3 b2Mat33::ez -> b2Vec3 [b2Math.h <295:2 295:7>]
SYMBOL_METHOD public void b2Mat33::b2Mat33(const b2Mat33 &) [b2Math.h <257:8 257:14>]
SYMBOL_METHOD public void b2Mat33::b2Mat33(b2Mat33 &&) [b2Math.h <257:8 257:14>]
SYMBOL_STRUCT b2Rot [b2Math.h <299:1 <299:8 299:12> 346:1>]
SYMBOL_METHOD public void b2Rot::b2Rot() [b2Math.h <301:2 <301:2 301:6> 301:11>]
SYMBOL_METHOD public void b2Rot::b2Rot(float32) [b2Math.h <304:2 <304:11 304:15> 309:2>]
LOCAL_SYMBOL: b2Math.h<304:25> [b2Math.h <304:25 304:29>]
REFERENCE_TYPE_USAGE void b2Rot::b2Rot(float32) -> float32 [b2Math.h <304:17 304:23>]
REFERENCE_USAGE void b2Rot::b2Rot(float32) -> float32 b2Rot::s [b2Math.h <307:3 307:3>]
SYMBOL_FUNCTION float sinf(float)
REFERENCE_CALL void b2Rot::b2Rot(float32) -> float sinf(float) [b2Math.h <307:7 307:10>]
LOCAL_SYMBOL: b2Math.h<304:25> [b2Math.h <307:12 307:16>]
REFERENCE_USAGE void b2Rot::b2Rot(float32) -> float32 b2Rot::c [b2Math.h <308:3 308:3>]
SYMBOL_FUNCTION float cosf(float)
REFERENCE_CALL void b2Rot::b2Rot(float32) -> float cosf(float) [b2Math.h <308:7 308:10>]
LOCAL_SYMBOL: b2Math.h<304:25> [b2Math.h <308:12 308:16>]
SYMBOL_METHOD public void b2Rot::Set(float32) [b2Math.h <312:2 <312:7 312:9> 317:2>]
REFERENCE_TYPE_USAGE void b2Rot::Set(float32) -> void [b2Math.h <312:2 312:5>]
LOCAL_SYMBOL: b2Math.h<312:19> [b2Math.h <312:19 312:23>]
REFERENCE_TYPE_USAGE void b2Rot::Set(float32) -> float32 [b2Math.h <312:11 312:17>]
REFERENCE_USAGE void b2Rot::Set(float32) -> float32 b2Rot::s [b2Math.h <315:3 315:3>]
REFERENCE_CALL void b2Rot::Set(float32) -> float sinf(float) [b2Math.h <315:7 315:10>]
LOCAL_SYMBOL: b2Math.h<312:19> [b2Math.h <315:12 315:16>]
REFERENCE_USAGE void b2Rot::Set(float32) -> float32 b2Rot::c [b2Math.h <316:3 316:3>]
REFERENCE_CALL void b2Rot::Set(float32) -> float cosf(float) [b2Math.h <316:7 316:10>]
LOCAL_SYMBOL: b2Math.h<312:19> [b2Math.h <316:12 316:16>]
SYMBOL_METHOD public void b2Rot::SetIdentity() [b2Math.h <320:2 <320:7 320:17> 324:2>]
REFERENCE_TYPE_USAGE void b2Rot::SetIdentity() -> void [b2Math.h <320:2 320:5>]
REFERENCE_USAGE void b2Rot::SetIdentity() -> float32 b2Rot::s [b2Math.h <322:3 322:3>]
REFERENCE_USAGE void b2Rot::SetIdentity() -> float32 b2Rot::c [b2Math.h <323:3 323:3>]
SYMBOL_METHOD public float32 b2Rot::GetAngle() const [b2Math.h <327:2 <327:10 327:17> 330:2>]
REFERENCE_TYPE_USAGE float32 b2Rot::GetAngle() const -> float32 [b2Math.h <327:2 327:8>]
SYMBOL_FUNCTION float atan2f(float, float)
REFERENCE_CALL float32 b2Rot::GetAngle() const -> float atan2f(float, float) [b2Math.h <329:10 329:16>]
REFERENCE_USAGE float32 b2Rot::GetAngle() const -> float32 b2Rot::s [b2Math.h <329:18 329:18>]
REFERENCE_USAGE float32 b2Rot::GetAngle() const -> float32 b2Rot::c [b2Math.h <329:21 329:21>]
SYMBOL_METHOD public b2Vec2 b2Rot::GetXAxis() const [b2Math.h <333:2 <333:9 333:16> 336:2>]
REFERENCE_TYPE_USAGE b2Vec2 b2Rot::GetXAxis() const -> b2Vec2 [b2Math.h <333:2 333:7>]
REFERENCE_CALL b2Vec2 b2Rot::GetXAxis() const -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <335:10 335:15>]
REFERENCE_TYPE_USAGE b2Vec2 b2Rot::GetXAxis() const -> b2Vec2 [b2Math.h <335:10 335:15>]
REFERENCE_USAGE b2Vec2 b2Rot::GetXAxis() const -> float32 b2Rot::c [b2Math.h <335:17 335:17>]
REFERENCE_USAGE b2Vec2 b2Rot::GetXAxis() const -> float32 b2Rot::s [b2Math.h <335:20 335:20>]
SYMBOL_METHOD public b2Vec2 b2Rot::GetYAxis() const [b2Math.h <339:2 <339:9 339:16> 342:2>]
REFERENCE_TYPE_USAGE b2Vec2 b2Rot::GetYAxis() const -> b2Vec2 [b2Math.h <339:2 339:7>]
REFERENCE_CALL b2Vec2 b2Rot::GetYAxis() const -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <341:10 341:15>]
REFERENCE_TYPE_USAGE b2Vec2 b2Rot::GetYAxis() const -> b2Vec2 [b2Math.h <341:10 341:15>]
REFERENCE_USAGE b2Vec2 b2Rot::GetYAxis() const -> float32 b2Rot::s [b2Math.h <341:18 341:18>]
REFERENCE_USAGE b2Vec2 b2Rot::GetYAxis() const -> float32 b2Rot::c [b2Math.h <341:21 341:21>]
SYMBOL_FIELD public float32 b2Rot::s [b2Math.h <345:10 345:10>]
REFERENCE_TYPE_USAGE float32 b2Rot::s -> float32 [b2Math.h <345:2 345:8>]
SYMBOL_FIELD public float32 b2Rot::c [b2Math.h <345:13 345:13>]
REFERENCE_TYPE_USAGE float32 b2Rot::c -> float32 [b2Math.h <345:2 345:8>]
SYMBOL_METHOD public void b2Rot::b2Rot(const b2Rot &) [b2Math.h <299:8 <299:8 299:12> 299:12>]
REFERENCE_USAGE void b2Rot::b2Rot(const b2Rot &) -> float32 b2Rot::s [b2Math.h <299:8 299:12>]
LOCAL_SYMBOL: b2Math.h<299:8> [b2Math.h <299:8 299:12>]
REFERENCE_USAGE void b2Rot::b2Rot(const b2Rot &) -> float32 b2Rot::c [b2Math.h <299:8 299:12>]
SYMBOL_METHOD public void b2Rot::b2Rot(b2Rot &&) [b2Math.h <299:8 <299:8 299:12> 299:12>]
REFERENCE_USAGE void b2Rot::b2Rot(b2Rot &&) -> float32 b2Rot::s [b2Math.h <299:8 299:12>]
REFERENCE_TYPE_USAGE void b2Rot::b2Rot(b2Rot &&) -> b2Rot [b2Math.h <299:8 299:12>]
REFERENCE_USAGE void b2Rot::b2Rot(b2Rot &&) -> float32 b2Rot::c [b2Math.h <299:8 299:12>]
SYMBOL_METHOD public void b2Rot::~b2Rot() [b2Math.h <299:8 299:12>]
SYMBOL_METHOD public b2Rot & b2Rot::operator=(const b2Rot &) [b2Math.h <299:8 299:12>]
SYMBOL_METHOD public b2Rot & b2Rot::operator=(b2Rot &&) [b2Math.h <299:8 <299:8 299:12> 299:12>]
REFERENCE_USAGE b2Rot & b2Rot::operator=(b2Rot &&) -> float32 b2Rot::s [b2Math.h <299:8 299:12>]
REFERENCE_TYPE_USAGE b2Rot & b2Rot::operator=(b2Rot &&) -> b2Rot [b2Math.h <299:8 299:12>]
REFERENCE_USAGE b2Rot & b2Rot::operator=(b2Rot &&) -> float32 b2Rot::c [b2Math.h <299:8 299:12>]
SYMBOL_STRUCT b2Transform [b2Math.h <350:1 <350:8 350:18> 374:1>]
SYMBOL_METHOD public void b2Transform::b2Transform() [b2Math.h <353:2 <353:2 353:12> 353:17>]
REFERENCE_USAGE void b2Transform::b2Transform() -> b2Vec2 b2Transform::p [b2Math.h <353:2 353:12>]
REFERENCE_CALL void b2Transform::b2Transform() -> void b2Vec2::b2Vec2() [b2Math.h <353:2 353:12>]
REFERENCE_USAGE void b2Transform::b2Transform() -> b2Rot b2Transform::q [b2Math.h <353:2 353:12>]
SYMBOL_FUNCTION void b2Rot::b2Rot()
REFERENCE_CALL void b2Transform::b2Transform() -> void b2Rot::b2Rot() [b2Math.h <353:2 353:12>]
SYMBOL_METHOD public void b2Transform::b2Transform(const b2Vec2 &, const b2Rot &) [b2Math.h <356:2 <356:2 356:12> 356:89>]
LOCAL_SYMBOL: b2Math.h<356:28> [b2Math.h <356:28 356:35>]
REFERENCE_TYPE_USAGE void b2Transform::b2Transform(const b2Vec2 &, const b2Rot &) -> b2Vec2 [b2Math.h <356:20 356:25>]
LOCAL_SYMBOL: b2Math.h<356:51> [b2Math.h <356:51 356:58>]
REFERENCE_TYPE_USAGE void b2Transform::b2Transform(const b2Vec2 &, const b2Rot &) -> b2Rot [b2Math.h <356:44 356:48>]
REFERENCE_USAGE void b2Transform::b2Transform(const b2Vec2 &, const b2Rot &) -> b2Vec2 b2Transform::p [b2Math.h <356:63 356:63>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2Transform::b2Transform(const b2Vec2 &, const b2Rot &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2Math.h <356:63 356:63>]
LOCAL_SYMBOL: b2Math.h<356:28> [b2Math.h <356:65 356:72>]
REFERENCE_USAGE void b2Transform::b2Transform(const b2Vec2 &, const b2Rot &) -> b2Rot b2Transform::q [b2Math.h <356:76 356:76>]
SYMBOL_FUNCTION void b2Rot::b2Rot(const b2Rot &)
REFERENCE_CALL void b2Transform::b2Transform(const b2Vec2 &, const b2Rot &) -> void b2Rot::b2Rot(const b2Rot &) [b2Math.h <356:76 356:76>]
LOCAL_SYMBOL: b2Math.h<356:51> [b2Math.h <356:78 356:85>]
SYMBOL_METHOD public void b2Transform::SetIdentity() [b2Math.h <359:2 <359:7 359:17> 363:2>]
REFERENCE_TYPE_USAGE void b2Transform::SetIdentity() -> void [b2Math.h <359:2 359:5>]
SYMBOL_FUNCTION void b2Vec2::SetZero()
REFERENCE_CALL void b2Transform::SetIdentity() -> void b2Vec2::SetZero() [b2Math.h <361:5 361:11>]
REFERENCE_USAGE void b2Transform::SetIdentity() -> b2Vec2 b2Transform::p [b2Math.h <361:3 361:3>]
SYMBOL_FUNCTION void b2Rot::SetIdentity()
REFERENCE_CALL void b2Transform::SetIdentity() -> void b2Rot::SetIdentity() [b2Math.h <362:5 362:15>]
REFERENCE_USAGE void b2Transform::SetIdentity() -> b2Rot b2Transform::q [b2Math.h <362:3 362:3>]
SYMBOL_METHOD public void b2Transform::Set(const b2Vec2 &, float32) [b2Math.h <366:2 <366:7 366:9> 370:2>]
REFERENCE_TYPE_USAGE void b2Transform::Set(const b2Vec2 &, float32) -> void [b2Math.h <366:2 366:5>]
LOCAL_SYMBOL: b2Math.h<366:25> [b2Math.h <366:25 366:32>]
REFERENCE_TYPE_USAGE void b2Transform::Set(const b2Vec2 &, float32) -> b2Vec2 [b2Math.h <366:17 366:22>]
LOCAL_SYMBOL: b2Math.h<366:43> [b2Math.h <366:43 366:47>]
REFERENCE_TYPE_USAGE void b2Transform::Set(const b2Vec2 &, float32) -> float32 [b2Math.h <366:35 366:41>]
REFERENCE_CALL void b2Transform::Set(const b2Vec2 &, float32) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Math.h <368:5 368:5>]
REFERENCE_USAGE void b2Transform::Set(const b2Vec2 &, float32) -> b2Vec2 b2Transform::p [b2Math.h <368:3 368:3>]
LOCAL_SYMBOL: b2Math.h<366:25> [b2Math.h <368:7 368:14>]
SYMBOL_FUNCTION void b2Rot::Set(float32)
REFERENCE_CALL void b2Transform::Set(const b2Vec2 &, float32) -> void b2Rot::Set(float32) [b2Math.h <369:5 369:7>]
REFERENCE_USAGE void b2Transform::Set(const b2Vec2 &, float32) -> b2Rot b2Transform::q [b2Math.h <369:3 369:3>]
LOCAL_SYMBOL: b2Math.h<366:43> [b2Math.h <369:9 369:13>]
SYMBOL_FIELD public b2Vec2 b2Transform::p [b2Math.h <372:9 372:9>]
REFERENCE_TYPE_USAGE b2Vec2 b2Transform::p -> b2Vec2 [b2Math.h <372:2 372:7>]
SYMBOL_FIELD public b2Rot b2Transform::q [b2Math.h <373:8 373:8>]
REFERENCE_TYPE_USAGE b2Rot b2Transform::q -> b2Rot [b2Math.h <373:2 373:6>]
SYMBOL_METHOD public void b2Transform::b2Transform(const b2Transform &) [b2Math.h <350:8 350:18>]
SYMBOL_METHOD public void b2Transform::b2Transform(b2Transform &&) [b2Math.h <350:8 <350:8 350:18> 350:18>]
REFERENCE_USAGE void b2Transform::b2Transform(b2Transform &&) -> b2Vec2 b2Transform::p [b2Math.h <350:8 350:18>]
REFERENCE_CALL void b2Transform::b2Transform(b2Transform &&) -> void b2Vec2::b2Vec2(b2Vec2 &&) [b2Math.h <350:8 350:18>]
REFERENCE_TYPE_USAGE void b2Transform::b2Transform(b2Transform &&) -> b2Transform [b2Math.h <350:8 350:18>]
LOCAL_SYMBOL: b2Math.h<350:8> [b2Math.h <350:8 350:18>]
REFERENCE_USAGE void b2Transform::b2Transform(b2Transform &&) -> b2Rot b2Transform::q [b2Math.h <350:8 350:18>]
SYMBOL_FUNCTION void b2Rot::b2Rot(b2Rot &&)
REFERENCE_CALL void b2Transform::b2Transform(b2Transform &&) -> void b2Rot::b2Rot(b2Rot &&) [b2Math.h <350:8 350:18>]
SYMBOL_STRUCT b2Sweep [b2Math.h <380:1 <380:8 380:14> 400:1>]
SYMBOL_METHOD public void b2Sweep::GetTransform(b2Transform *, float32) const [b2Math.h <384:7 384:18>]
REFERENCE_TYPE_USAGE void b2Sweep::GetTransform(b2Transform *, float32) const -> void [b2Math.h <384:2 384:5>]
LOCAL_SYMBOL: b2Math.h<384:33> [b2Math.h <384:33 384:35>]
REFERENCE_TYPE_USAGE void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Transform [b2Math.h <384:20 384:30>]
LOCAL_SYMBOL: b2Math.h<384:46> [b2Math.h <384:46 384:49>]
REFERENCE_TYPE_USAGE void b2Sweep::GetTransform(b2Transform *, float32) const -> float32 [b2Math.h <384:38 384:44>]
SYMBOL_METHOD public void b2Sweep::Advance(float32) [b2Math.h <388:7 388:13>]
REFERENCE_TYPE_USAGE void b2Sweep::Advance(float32) -> void [b2Math.h <388:2 388:5>]
LOCAL_SYMBOL: b2Math.h<388:23> [b2Math.h <388:23 388:27>]
REFERENCE_TYPE_USAGE void b2Sweep::Advance(float32) -> float32 [b2Math.h <388:15 388:21>]
SYMBOL_METHOD public void b2Sweep::Normalize() [b2Math.h <391:7 391:15>]
REFERENCE_TYPE_USAGE void b2Sweep::Normalize() -> void [b2Math.h <391:2 391:5>]
SYMBOL_FIELD public b2Vec2 b2Sweep::localCenter [b2Math.h <393:9 393:19>]
REFERENCE_TYPE_USAGE b2Vec2 b2Sweep::localCenter -> b2Vec2 [b2Math.h <393:2 393:7>]
SYMBOL_FIELD public b2Vec2 b2Sweep::c0 [b2Math.h <394:9 394:10>]
REFERENCE_TYPE_USAGE b2Vec2 b2Sweep::c0 -> b2Vec2 [b2Math.h <394:2 394:7>]
SYMBOL_FIELD public b2Vec2 b2Sweep::c [b2Math.h <394:13 394:13>]
REFERENCE_TYPE_USAGE b2Vec2 b2Sweep::c -> b2Vec2 [b2Math.h <394:2 394:7>]
SYMBOL_FIELD public float32 b2Sweep::a0 [b2Math.h <395:10 395:11>]
REFERENCE_TYPE_USAGE float32 b2Sweep::a0 -> float32 [b2Math.h <395:2 395:8>]
SYMBOL_FIELD public float32 b2Sweep::a [b2Math.h <395:14 395:14>]
REFERENCE_TYPE_USAGE float32 b2Sweep::a -> float32 [b2Math.h <395:2 395:8>]
SYMBOL_FIELD public float32 b2Sweep::alpha0 [b2Math.h <399:10 399:15>]
REFERENCE_TYPE_USAGE float32 b2Sweep::alpha0 -> float32 [b2Math.h <399:2 399:8>]
SYMBOL_GLOBAL_VARIABLE const b2Vec2 b2Vec2_zero [b2Math.h <403:21 403:31>]
REFERENCE_TYPE_USAGE const b2Vec2 b2Vec2_zero -> b2Vec2 [b2Math.h <403:14 403:19>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Math.h <406:1 <406:16 406:20> 409:1>]
REFERENCE_TYPE_USAGE float32 b2Dot(const b2Vec2 &, const b2Vec2 &) -> float32 [b2Math.h <406:8 406:14>]
LOCAL_SYMBOL: b2Math.h<406:36> [b2Math.h <406:36 406:36>]
REFERENCE_TYPE_USAGE float32 b2Dot(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <406:28 406:33>]
LOCAL_SYMBOL: b2Math.h<406:53> [b2Math.h <406:53 406:53>]
REFERENCE_TYPE_USAGE float32 b2Dot(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <406:45 406:50>]
REFERENCE_USAGE float32 b2Dot(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <408:11 408:11>]
LOCAL_SYMBOL: b2Math.h<406:36> [b2Math.h <408:9 408:9>]
REFERENCE_USAGE float32 b2Dot(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <408:17 408:17>]
LOCAL_SYMBOL: b2Math.h<406:53> [b2Math.h <408:15 408:15>]
REFERENCE_USAGE float32 b2Dot(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <408:23 408:23>]
LOCAL_SYMBOL: b2Math.h<406:36> [b2Math.h <408:21 408:21>]
REFERENCE_USAGE float32 b2Dot(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <408:29 408:29>]
LOCAL_SYMBOL: b2Math.h<406:53> [b2Math.h <408:27 408:27>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2Math.h <412:1 <412:16 412:22> 415:1>]
REFERENCE_TYPE_USAGE float32 b2Cross(const b2Vec2 &, const b2Vec2 &) -> float32 [b2Math.h <412:8 412:14>]
LOCAL_SYMBOL: b2Math.h<412:38> [b2Math.h <412:38 412:38>]
REFERENCE_TYPE_USAGE float32 b2Cross(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <412:30 412:35>]
LOCAL_SYMBOL: b2Math.h<412:55> [b2Math.h <412:55 412:55>]
REFERENCE_TYPE_USAGE float32 b2Cross(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <412:47 412:52>]
REFERENCE_USAGE float32 b2Cross(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <414:11 414:11>]
LOCAL_SYMBOL: b2Math.h<412:38> [b2Math.h <414:9 414:9>]
REFERENCE_USAGE float32 b2Cross(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <414:17 414:17>]
LOCAL_SYMBOL: b2Math.h<412:55> [b2Math.h <414:15 414:15>]
REFERENCE_USAGE float32 b2Cross(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <414:23 414:23>]
LOCAL_SYMBOL: b2Math.h<412:38> [b2Math.h <414:21 414:21>]
REFERENCE_USAGE float32 b2Cross(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <414:29 414:29>]
LOCAL_SYMBOL: b2Math.h<412:55> [b2Math.h <414:27 414:27>]
SYMBOL_FUNCTION b2Vec2 b2Cross(const b2Vec2 &, float32) [b2Math.h <419:1 <419:15 419:21> 422:1>]
REFERENCE_TYPE_USAGE b2Vec2 b2Cross(const b2Vec2 &, float32) -> b2Vec2 [b2Math.h <419:8 419:13>]
LOCAL_SYMBOL: b2Math.h<419:37> [b2Math.h <419:37 419:37>]
REFERENCE_TYPE_USAGE b2Vec2 b2Cross(const b2Vec2 &, float32) -> b2Vec2 [b2Math.h <419:29 419:34>]
LOCAL_SYMBOL: b2Math.h<419:48> [b2Math.h <419:48 419:48>]
REFERENCE_TYPE_USAGE b2Vec2 b2Cross(const b2Vec2 &, float32) -> float32 [b2Math.h <419:40 419:46>]
REFERENCE_CALL b2Vec2 b2Cross(const b2Vec2 &, float32) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <421:9 421:14>]
REFERENCE_TYPE_USAGE b2Vec2 b2Cross(const b2Vec2 &, float32) -> b2Vec2 [b2Math.h <421:9 421:14>]
LOCAL_SYMBOL: b2Math.h<419:48> [b2Math.h <421:16 421:16>]
REFERENCE_USAGE b2Vec2 b2Cross(const b2Vec2 &, float32) -> float32 b2Vec2::y [b2Math.h <421:22 421:22>]
LOCAL_SYMBOL: b2Math.h<419:37> [b2Math.h <421:20 421:20>]
LOCAL_SYMBOL: b2Math.h<419:48> [b2Math.h <421:26 421:26>]
REFERENCE_USAGE b2Vec2 b2Cross(const b2Vec2 &, float32) -> float32 b2Vec2::x [b2Math.h <421:32 421:32>]
LOCAL_SYMBOL: b2Math.h<419:37> [b2Math.h <421:30 421:30>]
SYMBOL_FUNCTION b2Vec2 b2Cross(float32, const b2Vec2 &) [b2Math.h <426:1 <426:15 426:21> 429:1>]
REFERENCE_TYPE_USAGE b2Vec2 b2Cross(float32, const b2Vec2 &) -> b2Vec2 [b2Math.h <426:8 426:13>]
LOCAL_SYMBOL: b2Math.h<426:31> [b2Math.h <426:31 426:31>]
REFERENCE_TYPE_USAGE b2Vec2 b2Cross(float32, const b2Vec2 &) -> float32 [b2Math.h <426:23 426:29>]
LOCAL_SYMBOL: b2Math.h<426:48> [b2Math.h <426:48 426:48>]
REFERENCE_TYPE_USAGE b2Vec2 b2Cross(float32, const b2Vec2 &) -> b2Vec2 [b2Math.h <426:40 426:45>]
REFERENCE_CALL b2Vec2 b2Cross(float32, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <428:9 428:14>]
REFERENCE_TYPE_USAGE b2Vec2 b2Cross(float32, const b2Vec2 &) -> b2Vec2 [b2Math.h <428:9 428:14>]
LOCAL_SYMBOL: b2Math.h<426:31> [b2Math.h <428:17 428:17>]
REFERENCE_USAGE b2Vec2 b2Cross(float32, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <428:23 428:23>]
LOCAL_SYMBOL: b2Math.h<426:48> [b2Math.h <428:21 428:21>]
LOCAL_SYMBOL: b2Math.h<426:31> [b2Math.h <428:26 428:26>]
REFERENCE_USAGE b2Vec2 b2Cross(float32, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <428:32 428:32>]
LOCAL_SYMBOL: b2Math.h<426:48> [b2Math.h <428:30 428:30>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) [b2Math.h <433:1 <433:15 433:19> 436:1>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <433:8 433:13>]
LOCAL_SYMBOL: b2Math.h<433:36> [b2Math.h <433:36 433:36>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> b2Mat22 [b2Math.h <433:27 433:33>]
LOCAL_SYMBOL: b2Math.h<433:53> [b2Math.h <433:53 433:53>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <433:45 433:50>]
REFERENCE_CALL b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <435:9 435:14>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <435:9 435:14>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <435:21 435:21>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ex [b2Math.h <435:18 435:19>]
LOCAL_SYMBOL: b2Math.h<433:36> [b2Math.h <435:16 435:16>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <435:27 435:27>]
LOCAL_SYMBOL: b2Math.h<433:53> [b2Math.h <435:25 435:25>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <435:36 435:36>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ey [b2Math.h <435:33 435:34>]
LOCAL_SYMBOL: b2Math.h<433:36> [b2Math.h <435:31 435:31>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <435:42 435:42>]
LOCAL_SYMBOL: b2Math.h<433:53> [b2Math.h <435:40 435:40>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <435:50 435:50>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ex [b2Math.h <435:47 435:48>]
LOCAL_SYMBOL: b2Math.h<433:36> [b2Math.h <435:45 435:45>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <435:56 435:56>]
LOCAL_SYMBOL: b2Math.h<433:53> [b2Math.h <435:54 435:54>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <435:65 435:65>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ey [b2Math.h <435:62 435:63>]
LOCAL_SYMBOL: b2Math.h<433:36> [b2Math.h <435:60 435:60>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <435:71 435:71>]
LOCAL_SYMBOL: b2Math.h<433:53> [b2Math.h <435:69 435:69>]
SYMBOL_FUNCTION b2Vec2 b2MulT(const b2Mat22 &, const b2Vec2 &) [b2Math.h <440:1 <440:15 440:20> 443:1>]
REFERENCE_TYPE_USAGE b2Vec2 b2MulT(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <440:8 440:13>]
LOCAL_SYMBOL: b2Math.h<440:37> [b2Math.h <440:37 440:37>]
REFERENCE_TYPE_USAGE b2Vec2 b2MulT(const b2Mat22 &, const b2Vec2 &) -> b2Mat22 [b2Math.h <440:28 440:34>]
LOCAL_SYMBOL: b2Math.h<440:54> [b2Math.h <440:54 440:54>]
REFERENCE_TYPE_USAGE b2Vec2 b2MulT(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <440:46 440:51>]
REFERENCE_CALL b2Vec2 b2MulT(const b2Mat22 &, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <442:9 442:14>]
REFERENCE_TYPE_USAGE b2Vec2 b2MulT(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <442:9 442:14>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL b2Vec2 b2MulT(const b2Mat22 &, const b2Vec2 &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Math.h <442:16 442:20>]
LOCAL_SYMBOL: b2Math.h<440:54> [b2Math.h <442:22 442:22>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ex [b2Math.h <442:27 442:28>]
LOCAL_SYMBOL: b2Math.h<440:37> [b2Math.h <442:25 442:25>]
REFERENCE_CALL b2Vec2 b2MulT(const b2Mat22 &, const b2Vec2 &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Math.h <442:32 442:36>]
LOCAL_SYMBOL: b2Math.h<440:54> [b2Math.h <442:38 442:38>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ey [b2Math.h <442:43 442:44>]
LOCAL_SYMBOL: b2Math.h<440:37> [b2Math.h <442:41 442:41>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2Math.h <446:1 <446:15 446:24> 449:1>]
REFERENCE_TYPE_USAGE b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <446:8 446:13>]
LOCAL_SYMBOL: b2Math.h<446:41> [b2Math.h <446:41 446:41>]
REFERENCE_TYPE_USAGE b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <446:33 446:38>]
LOCAL_SYMBOL: b2Math.h<446:58> [b2Math.h <446:58 446:58>]
REFERENCE_TYPE_USAGE b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <446:50 446:55>]
REFERENCE_CALL b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <448:9 448:14>]
REFERENCE_TYPE_USAGE b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <448:9 448:14>]
REFERENCE_USAGE b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <448:18 448:18>]
LOCAL_SYMBOL: b2Math.h<446:41> [b2Math.h <448:16 448:16>]
REFERENCE_USAGE b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <448:24 448:24>]
LOCAL_SYMBOL: b2Math.h<446:58> [b2Math.h <448:22 448:22>]
REFERENCE_USAGE b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <448:29 448:29>]
LOCAL_SYMBOL: b2Math.h<446:41> [b2Math.h <448:27 448:27>]
REFERENCE_USAGE b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <448:35 448:35>]
LOCAL_SYMBOL: b2Math.h<446:58> [b2Math.h <448:33 448:33>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Math.h <452:1 <452:15 452:24> 455:1>]
REFERENCE_TYPE_USAGE b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <452:8 452:13>]
LOCAL_SYMBOL: b2Math.h<452:41> [b2Math.h <452:41 452:41>]
REFERENCE_TYPE_USAGE b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <452:33 452:38>]
LOCAL_SYMBOL: b2Math.h<452:58> [b2Math.h <452:58 452:58>]
REFERENCE_TYPE_USAGE b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <452:50 452:55>]
REFERENCE_CALL b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <454:9 454:14>]
REFERENCE_TYPE_USAGE b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <454:9 454:14>]
REFERENCE_USAGE b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <454:18 454:18>]
LOCAL_SYMBOL: b2Math.h<452:41> [b2Math.h <454:16 454:16>]
REFERENCE_USAGE b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <454:24 454:24>]
LOCAL_SYMBOL: b2Math.h<452:58> [b2Math.h <454:22 454:22>]
REFERENCE_USAGE b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <454:29 454:29>]
LOCAL_SYMBOL: b2Math.h<452:41> [b2Math.h <454:27 454:27>]
REFERENCE_USAGE b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <454:35 454:35>]
LOCAL_SYMBOL: b2Math.h<452:58> [b2Math.h <454:33 454:33>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &) [b2Math.h <457:1 <457:15 457:24> 460:1>]
REFERENCE_TYPE_USAGE b2Vec2 operator*(float32, const b2Vec2 &) -> b2Vec2 [b2Math.h <457:8 457:13>]
LOCAL_SYMBOL: b2Math.h<457:35> [b2Math.h <457:35 457:35>]
REFERENCE_TYPE_USAGE b2Vec2 operator*(float32, const b2Vec2 &) -> float32 [b2Math.h <457:27 457:33>]
LOCAL_SYMBOL: b2Math.h<457:52> [b2Math.h <457:52 457:52>]
REFERENCE_TYPE_USAGE b2Vec2 operator*(float32, const b2Vec2 &) -> b2Vec2 [b2Math.h <457:44 457:49>]
REFERENCE_CALL b2Vec2 operator*(float32, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <459:9 459:14>]
REFERENCE_TYPE_USAGE b2Vec2 operator*(float32, const b2Vec2 &) -> b2Vec2 [b2Math.h <459:9 459:14>]
LOCAL_SYMBOL: b2Math.h<457:35> [b2Math.h <459:16 459:16>]
REFERENCE_USAGE b2Vec2 operator*(float32, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <459:22 459:22>]
LOCAL_SYMBOL: b2Math.h<457:52> [b2Math.h <459:20 459:20>]
LOCAL_SYMBOL: b2Math.h<457:35> [b2Math.h <459:25 459:25>]
REFERENCE_USAGE b2Vec2 operator*(float32, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <459:31 459:31>]
LOCAL_SYMBOL: b2Math.h<457:52> [b2Math.h <459:29 459:29>]
SYMBOL_FUNCTION bool operator==(const b2Vec2 &, const b2Vec2 &) [b2Math.h <462:1 <462:13 462:23> 465:1>]
REFERENCE_TYPE_USAGE bool operator==(const b2Vec2 &, const b2Vec2 &) -> bool [b2Math.h <462:8 462:11>]
LOCAL_SYMBOL: b2Math.h<462:40> [b2Math.h <462:40 462:40>]
REFERENCE_TYPE_USAGE bool operator==(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <462:32 462:37>]
LOCAL_SYMBOL: b2Math.h<462:57> [b2Math.h <462:57 462:57>]
REFERENCE_TYPE_USAGE bool operator==(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <462:49 462:54>]
REFERENCE_USAGE bool operator==(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <464:11 464:11>]
LOCAL_SYMBOL: b2Math.h<462:40> [b2Math.h <464:9 464:9>]
REFERENCE_USAGE bool operator==(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <464:18 464:18>]
LOCAL_SYMBOL: b2Math.h<462:57> [b2Math.h <464:16 464:16>]
REFERENCE_USAGE bool operator==(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <464:25 464:25>]
LOCAL_SYMBOL: b2Math.h<462:40> [b2Math.h <464:23 464:23>]
REFERENCE_USAGE bool operator==(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <464:32 464:32>]
LOCAL_SYMBOL: b2Math.h<462:57> [b2Math.h <464:30 464:30>]
SYMBOL_FUNCTION bool operator!=(const b2Vec2 &, const b2Vec2 &) [b2Math.h <467:1 <467:13 467:23> 470:1>]
REFERENCE_TYPE_USAGE bool operator!=(const b2Vec2 &, const b2Vec2 &) -> bool [b2Math.h <467:8 467:11>]
LOCAL_SYMBOL: b2Math.h<467:40> [b2Math.h <467:40 467:40>]
REFERENCE_TYPE_USAGE bool operator!=(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <467:32 467:37>]
LOCAL_SYMBOL: b2Math.h<467:57> [b2Math.h <467:57 467:57>]
REFERENCE_TYPE_USAGE bool operator!=(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <467:49 467:54>]
REFERENCE_USAGE bool operator!=(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <469:11 469:11>]
LOCAL_SYMBOL: b2Math.h<467:40> [b2Math.h <469:9 469:9>]
REFERENCE_USAGE bool operator!=(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <469:18 469:18>]
LOCAL_SYMBOL: b2Math.h<467:57> [b2Math.h <469:16 469:16>]
REFERENCE_USAGE bool operator!=(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <469:25 469:25>]
LOCAL_SYMBOL: b2Math.h<467:40> [b2Math.h <469:23 469:23>]
REFERENCE_USAGE bool operator!=(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <469:32 469:32>]
LOCAL_SYMBOL: b2Math.h<467:57> [b2Math.h <469:30 469:30>]
SYMBOL_FUNCTION float32 b2Distance(const b2Vec2 &, const b2Vec2 &) [b2Math.h <472:1 <472:16 472:25> 476:1>]
REFERENCE_TYPE_USAGE float32 b2Distance(const b2Vec2 &, const b2Vec2 &) -> float32 [b2Math.h <472:8 472:14>]
LOCAL_SYMBOL: b2Math.h<472:41> [b2Math.h <472:41 472:41>]
REFERENCE_TYPE_USAGE float32 b2Distance(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <472:33 472:38>]
LOCAL_SYMBOL: b2Math.h<472:58> [b2Math.h <472:58 472:58>]
REFERENCE_TYPE_USAGE float32 b2Distance(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <472:50 472:55>]
LOCAL_SYMBOL: b2Math.h<474:9> [b2Math.h <474:9 474:9>]
REFERENCE_TYPE_USAGE float32 b2Distance(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <474:2 474:7>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL float32 b2Distance(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Math.h <474:15 474:15>]
LOCAL_SYMBOL: b2Math.h<472:41> [b2Math.h <474:13 474:13>]
LOCAL_SYMBOL: b2Math.h<472:58> [b2Math.h <474:17 474:17>]
REFERENCE_CALL float32 b2Distance(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::Length() const [b2Math.h <475:11 475:16>]
LOCAL_SYMBOL: b2Math.h<474:9> [b2Math.h <475:9 475:9>]
SYMBOL_FUNCTION float32 b2DistanceSquared(const b2Vec2 &, const b2Vec2 &) [b2Math.h <478:1 <478:16 478:32> 482:1>]
REFERENCE_TYPE_USAGE float32 b2DistanceSquared(const b2Vec2 &, const b2Vec2 &) -> float32 [b2Math.h <478:8 478:14>]
LOCAL_SYMBOL: b2Math.h<478:48> [b2Math.h <478:48 478:48>]
REFERENCE_TYPE_USAGE float32 b2DistanceSquared(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <478:40 478:45>]
LOCAL_SYMBOL: b2Math.h<478:65> [b2Math.h <478:65 478:65>]
REFERENCE_TYPE_USAGE float32 b2DistanceSquared(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <478:57 478:62>]
LOCAL_SYMBOL: b2Math.h<480:9> [b2Math.h <480:9 480:9>]
REFERENCE_TYPE_USAGE float32 b2DistanceSquared(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <480:2 480:7>]
REFERENCE_CALL float32 b2DistanceSquared(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Math.h <480:15 480:15>]
LOCAL_SYMBOL: b2Math.h<478:48> [b2Math.h <480:13 480:13>]
LOCAL_SYMBOL: b2Math.h<478:65> [b2Math.h <480:17 480:17>]
REFERENCE_CALL float32 b2DistanceSquared(const b2Vec2 &, const b2Vec2 &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Math.h <481:9 481:13>]
LOCAL_SYMBOL: b2Math.h<480:9> [b2Math.h <481:15 481:15>]
LOCAL_SYMBOL: b2Math.h<480:9> [b2Math.h <481:18 481:18>]
SYMBOL_FUNCTION b2Vec3 operator*(float32, const b2Vec3 &) [b2Math.h <484:1 <484:15 484:24> 487:1>]
REFERENCE_TYPE_USAGE b2Vec3 operator*(float32, const b2Vec3 &) -> b2Vec3 [b2Math.h <484:8 484:13>]
LOCAL_SYMBOL: b2Math.h<484:35> [b2Math.h <484:35 484:35>]
REFERENCE_TYPE_USAGE b2Vec3 operator*(float32, const b2Vec3 &) -> float32 [b2Math.h <484:27 484:33>]
LOCAL_SYMBOL: b2Math.h<484:52> [b2Math.h <484:52 484:52>]
REFERENCE_TYPE_USAGE b2Vec3 operator*(float32, const b2Vec3 &) -> b2Vec3 [b2Math.h <484:44 484:49>]
SYMBOL_FUNCTION void b2Vec3::b2Vec3(float32, float32, float32)
REFERENCE_CALL b2Vec3 operator*(float32, const b2Vec3 &) -> void b2Vec3::b2Vec3(float32, float32, float32) [b2Math.h <486:9 486:14>]
REFERENCE_TYPE_USAGE b2Vec3 operator*(float32, const b2Vec3 &) -> b2Vec3 [b2Math.h <486:9 486:14>]
LOCAL_SYMBOL: b2Math.h<484:35> [b2Math.h <486:16 486:16>]
REFERENCE_USAGE b2Vec3 operator*(float32, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <486:22 486:22>]
LOCAL_SYMBOL: b2Math.h<484:52> [b2Math.h <486:20 486:20>]
LOCAL_SYMBOL: b2Math.h<484:35> [b2Math.h <486:25 486:25>]
REFERENCE_USAGE b2Vec3 operator*(float32, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <486:31 486:31>]
LOCAL_SYMBOL: b2Math.h<484:52> [b2Math.h <486:29 486:29>]
LOCAL_SYMBOL: b2Math.h<484:35> [b2Math.h <486:34 486:34>]
REFERENCE_USAGE b2Vec3 operator*(float32, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <486:40 486:40>]
LOCAL_SYMBOL: b2Math.h<484:52> [b2Math.h <486:38 486:38>]
SYMBOL_FUNCTION b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) [b2Math.h <490:1 <490:15 490:24> 493:1>]
REFERENCE_TYPE_USAGE b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <490:8 490:13>]
LOCAL_SYMBOL: b2Math.h<490:41> [b2Math.h <490:41 490:41>]
REFERENCE_TYPE_USAGE b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <490:33 490:38>]
LOCAL_SYMBOL: b2Math.h<490:58> [b2Math.h <490:58 490:58>]
REFERENCE_TYPE_USAGE b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <490:50 490:55>]
REFERENCE_CALL b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) -> void b2Vec3::b2Vec3(float32, float32, float32) [b2Math.h <492:9 492:14>]
REFERENCE_TYPE_USAGE b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <492:9 492:14>]
REFERENCE_USAGE b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <492:18 492:18>]
LOCAL_SYMBOL: b2Math.h<490:41> [b2Math.h <492:16 492:16>]
REFERENCE_USAGE b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <492:24 492:24>]
LOCAL_SYMBOL: b2Math.h<490:58> [b2Math.h <492:22 492:22>]
REFERENCE_USAGE b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <492:29 492:29>]
LOCAL_SYMBOL: b2Math.h<490:41> [b2Math.h <492:27 492:27>]
REFERENCE_USAGE b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <492:35 492:35>]
LOCAL_SYMBOL: b2Math.h<490:58> [b2Math.h <492:33 492:33>]
REFERENCE_USAGE b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <492:40 492:40>]
LOCAL_SYMBOL: b2Math.h<490:41> [b2Math.h <492:38 492:38>]
REFERENCE_USAGE b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <492:46 492:46>]
LOCAL_SYMBOL: b2Math.h<490:58> [b2Math.h <492:44 492:44>]
SYMBOL_FUNCTION b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) [b2Math.h <496:1 <496:15 496:24> 499:1>]
REFERENCE_TYPE_USAGE b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <496:8 496:13>]
LOCAL_SYMBOL: b2Math.h<496:41> [b2Math.h <496:41 496:41>]
REFERENCE_TYPE_USAGE b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <496:33 496:38>]
LOCAL_SYMBOL: b2Math.h<496:58> [b2Math.h <496:58 496:58>]
REFERENCE_TYPE_USAGE b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <496:50 496:55>]
REFERENCE_CALL b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) -> void b2Vec3::b2Vec3(float32, float32, float32) [b2Math.h <498:9 498:14>]
REFERENCE_TYPE_USAGE b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <498:9 498:14>]
REFERENCE_USAGE b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <498:18 498:18>]
LOCAL_SYMBOL: b2Math.h<496:41> [b2Math.h <498:16 498:16>]
REFERENCE_USAGE b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <498:24 498:24>]
LOCAL_SYMBOL: b2Math.h<496:58> [b2Math.h <498:22 498:22>]
REFERENCE_USAGE b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <498:29 498:29>]
LOCAL_SYMBOL: b2Math.h<496:41> [b2Math.h <498:27 498:27>]
REFERENCE_USAGE b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <498:35 498:35>]
LOCAL_SYMBOL: b2Math.h<496:58> [b2Math.h <498:33 498:33>]
REFERENCE_USAGE b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <498:40 498:40>]
LOCAL_SYMBOL: b2Math.h<496:41> [b2Math.h <498:38 498:38>]
REFERENCE_USAGE b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <498:46 498:46>]
LOCAL_SYMBOL: b2Math.h<496:58> [b2Math.h <498:44 498:44>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec3 &, const b2Vec3 &) [b2Math.h <502:1 <502:16 502:20> 505:1>]
REFERENCE_TYPE_USAGE float32 b2Dot(const b2Vec3 &, const b2Vec3 &) -> float32 [b2Math.h <502:8 502:14>]
LOCAL_SYMBOL: b2Math.h<502:36> [b2Math.h <502:36 502:36>]
REFERENCE_TYPE_USAGE float32 b2Dot(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <502:28 502:33>]
LOCAL_SYMBOL: b2Math.h<502:53> [b2Math.h <502:53 502:53>]
REFERENCE_TYPE_USAGE float32 b2Dot(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <502:45 502:50>]
REFERENCE_USAGE float32 b2Dot(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <504:11 504:11>]
LOCAL_SYMBOL: b2Math.h<502:36> [b2Math.h <504:9 504:9>]
REFERENCE_USAGE float32 b2Dot(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <504:17 504:17>]
LOCAL_SYMBOL: b2Math.h<502:53> [b2Math.h <504:15 504:15>]
REFERENCE_USAGE float32 b2Dot(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <504:23 504:23>]
LOCAL_SYMBOL: b2Math.h<502:36> [b2Math.h <504:21 504:21>]
REFERENCE_USAGE float32 b2Dot(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <504:29 504:29>]
LOCAL_SYMBOL: b2Math.h<502:53> [b2Math.h <504:27 504:27>]
REFERENCE_USAGE float32 b2Dot(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <504:35 504:35>]
LOCAL_SYMBOL: b2Math.h<502:36> [b2Math.h <504:33 504:33>]
REFERENCE_USAGE float32 b2Dot(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <504:41 504:41>]
LOCAL_SYMBOL: b2Math.h<502:53> [b2Math.h <504:39 504:39>]
SYMBOL_FUNCTION b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) [b2Math.h <508:1 <508:15 508:21> 511:1>]
REFERENCE_TYPE_USAGE b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <508:8 508:13>]
LOCAL_SYMBOL: b2Math.h<508:37> [b2Math.h <508:37 508:37>]
REFERENCE_TYPE_USAGE b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <508:29 508:34>]
LOCAL_SYMBOL: b2Math.h<508:54> [b2Math.h <508:54 508:54>]
REFERENCE_TYPE_USAGE b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <508:46 508:51>]
REFERENCE_CALL b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> void b2Vec3::b2Vec3(float32, float32, float32) [b2Math.h <510:9 510:14>]
REFERENCE_TYPE_USAGE b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <510:9 510:14>]
REFERENCE_USAGE b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <510:18 510:18>]
LOCAL_SYMBOL: b2Math.h<508:37> [b2Math.h <510:16 510:16>]
REFERENCE_USAGE b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <510:24 510:24>]
LOCAL_SYMBOL: b2Math.h<508:54> [b2Math.h <510:22 510:22>]
REFERENCE_USAGE b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <510:30 510:30>]
LOCAL_SYMBOL: b2Math.h<508:37> [b2Math.h <510:28 510:28>]
REFERENCE_USAGE b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <510:36 510:36>]
LOCAL_SYMBOL: b2Math.h<508:54> [b2Math.h <510:34 510:34>]
REFERENCE_USAGE b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <510:41 510:41>]
LOCAL_SYMBOL: b2Math.h<508:37> [b2Math.h <510:39 510:39>]
REFERENCE_USAGE b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <510:47 510:47>]
LOCAL_SYMBOL: b2Math.h<508:54> [b2Math.h <510:45 510:45>]
REFERENCE_USAGE b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <510:53 510:53>]
LOCAL_SYMBOL: b2Math.h<508:37> [b2Math.h <510:51 510:51>]
REFERENCE_USAGE b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <510:59 510:59>]
LOCAL_SYMBOL: b2Math.h<508:54> [b2Math.h <510:57 510:57>]
REFERENCE_USAGE b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <510:64 510:64>]
LOCAL_SYMBOL: b2Math.h<508:37> [b2Math.h <510:62 510:62>]
REFERENCE_USAGE b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <510:70 510:70>]
LOCAL_SYMBOL: b2Math.h<508:54> [b2Math.h <510:68 510:68>]
REFERENCE_USAGE b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <510:76 510:76>]
LOCAL_SYMBOL: b2Math.h<508:37> [b2Math.h <510:74 510:74>]
REFERENCE_USAGE b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <510:82 510:82>]
LOCAL_SYMBOL: b2Math.h<508:54> [b2Math.h <510:80 510:80>]
SYMBOL_FUNCTION b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) [b2Math.h <513:1 <513:16 513:25> 516:1>]
REFERENCE_TYPE_USAGE b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <513:8 513:14>]
LOCAL_SYMBOL: b2Math.h<513:43> [b2Math.h <513:43 513:43>]
REFERENCE_TYPE_USAGE b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <513:34 513:40>]
LOCAL_SYMBOL: b2Math.h<513:61> [b2Math.h <513:61 513:61>]
REFERENCE_TYPE_USAGE b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <513:52 513:58>]
SYMBOL_FUNCTION void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) -> void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) [b2Math.h <515:9 515:15>]
REFERENCE_TYPE_USAGE b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <515:9 515:15>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2Math.h <515:22 515:22>]
REFERENCE_USAGE b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ex [b2Math.h <515:19 515:20>]
LOCAL_SYMBOL: b2Math.h<513:43> [b2Math.h <515:17 515:17>]
REFERENCE_USAGE b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ex [b2Math.h <515:26 515:27>]
LOCAL_SYMBOL: b2Math.h<513:61> [b2Math.h <515:24 515:24>]
REFERENCE_CALL b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2Math.h <515:35 515:35>]
REFERENCE_USAGE b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ey [b2Math.h <515:32 515:33>]
LOCAL_SYMBOL: b2Math.h<513:43> [b2Math.h <515:30 515:30>]
REFERENCE_USAGE b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ey [b2Math.h <515:39 515:40>]
LOCAL_SYMBOL: b2Math.h<513:61> [b2Math.h <515:37 515:37>]
SYMBOL_FUNCTION b2Mat22 b2Mul(const b2Mat22 &, const b2Mat22 &) [b2Math.h <519:1 <519:16 519:20> 522:1>]
REFERENCE_TYPE_USAGE b2Mat22 b2Mul(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <519:8 519:14>]
LOCAL_SYMBOL: b2Math.h<519:37> [b2Math.h <519:37 519:37>]
REFERENCE_TYPE_USAGE b2Mat22 b2Mul(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <519:28 519:34>]
LOCAL_SYMBOL: b2Math.h<519:55> [b2Math.h <519:55 519:55>]
REFERENCE_TYPE_USAGE b2Mat22 b2Mul(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <519:46 519:52>]
REFERENCE_CALL b2Mat22 b2Mul(const b2Mat22 &, const b2Mat22 &) -> void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) [b2Math.h <521:9 521:15>]
REFERENCE_TYPE_USAGE b2Mat22 b2Mul(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <521:9 521:15>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &)
REFERENCE_CALL b2Mat22 b2Mul(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) [b2Math.h <521:17 521:21>]
LOCAL_SYMBOL: b2Math.h<519:37> [b2Math.h <521:23 521:23>]
REFERENCE_USAGE b2Mat22 b2Mul(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ex [b2Math.h <521:28 521:29>]
LOCAL_SYMBOL: b2Math.h<519:55> [b2Math.h <521:26 521:26>]
REFERENCE_CALL b2Mat22 b2Mul(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) [b2Math.h <521:33 521:37>]
LOCAL_SYMBOL: b2Math.h<519:37> [b2Math.h <521:39 521:39>]
REFERENCE_USAGE b2Mat22 b2Mul(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ey [b2Math.h <521:44 521:45>]
LOCAL_SYMBOL: b2Math.h<519:55> [b2Math.h <521:42 521:42>]
SYMBOL_FUNCTION b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) [b2Math.h <525:1 <525:16 525:21> 530:1>]
REFERENCE_TYPE_USAGE b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <525:8 525:14>]
LOCAL_SYMBOL: b2Math.h<525:38> [b2Math.h <525:38 525:38>]
REFERENCE_TYPE_USAGE b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <525:29 525:35>]
LOCAL_SYMBOL: b2Math.h<525:56> [b2Math.h <525:56 525:56>]
REFERENCE_TYPE_USAGE b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <525:47 525:53>]
LOCAL_SYMBOL: b2Math.h<527:9> [b2Math.h <527:9 527:10>]
REFERENCE_TYPE_USAGE b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 [b2Math.h <527:2 527:7>]
REFERENCE_CALL b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <527:9 527:10>]
REFERENCE_CALL b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Math.h <527:12 527:16>]
REFERENCE_USAGE b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ex [b2Math.h <527:20 527:21>]
LOCAL_SYMBOL: b2Math.h<525:38> [b2Math.h <527:18 527:18>]
REFERENCE_USAGE b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ex [b2Math.h <527:26 527:27>]
LOCAL_SYMBOL: b2Math.h<525:56> [b2Math.h <527:24 527:24>]
REFERENCE_CALL b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Math.h <527:31 527:35>]
REFERENCE_USAGE b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ey [b2Math.h <527:39 527:40>]
LOCAL_SYMBOL: b2Math.h<525:38> [b2Math.h <527:37 527:37>]
REFERENCE_USAGE b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ex [b2Math.h <527:45 527:46>]
LOCAL_SYMBOL: b2Math.h<525:56> [b2Math.h <527:43 527:43>]
LOCAL_SYMBOL: b2Math.h<528:9> [b2Math.h <528:9 528:10>]
REFERENCE_TYPE_USAGE b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 [b2Math.h <528:2 528:7>]
REFERENCE_CALL b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <528:9 528:10>]
REFERENCE_CALL b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Math.h <528:12 528:16>]
REFERENCE_USAGE b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ex [b2Math.h <528:20 528:21>]
LOCAL_SYMBOL: b2Math.h<525:38> [b2Math.h <528:18 528:18>]
REFERENCE_USAGE b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ey [b2Math.h <528:26 528:27>]
LOCAL_SYMBOL: b2Math.h<525:56> [b2Math.h <528:24 528:24>]
REFERENCE_CALL b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Math.h <528:31 528:35>]
REFERENCE_USAGE b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ey [b2Math.h <528:39 528:40>]
LOCAL_SYMBOL: b2Math.h<525:38> [b2Math.h <528:37 528:37>]
REFERENCE_USAGE b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ey [b2Math.h <528:45 528:46>]
LOCAL_SYMBOL: b2Math.h<525:56> [b2Math.h <528:43 528:43>]
REFERENCE_CALL b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) [b2Math.h <529:9 529:15>]
REFERENCE_TYPE_USAGE b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <529:9 529:15>]
LOCAL_SYMBOL: b2Math.h<527:9> [b2Math.h <529:17 529:18>]
LOCAL_SYMBOL: b2Math.h<528:9> [b2Math.h <529:21 529:22>]
SYMBOL_FUNCTION b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) [b2Math.h <533:1 <533:15 533:19> 536:1>]
REFERENCE_TYPE_USAGE b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <533:8 533:13>]
LOCAL_SYMBOL: b2Math.h<533:36> [b2Math.h <533:36 533:36>]
REFERENCE_TYPE_USAGE b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> b2Mat33 [b2Math.h <533:27 533:33>]
LOCAL_SYMBOL: b2Math.h<533:53> [b2Math.h <533:53 533:53>]
REFERENCE_TYPE_USAGE b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <533:45 533:50>]
SYMBOL_FUNCTION b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &)
REFERENCE_CALL b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) [b2Math.h <535:33 535:33>]
REFERENCE_CALL b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) [b2Math.h <535:20 535:20>]
SYMBOL_FUNCTION b2Vec3 operator*(float32, const b2Vec3 &)
REFERENCE_CALL b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> b2Vec3 operator*(float32, const b2Vec3 &) [b2Math.h <535:13 535:13>]
REFERENCE_USAGE b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <535:11 535:11>]
LOCAL_SYMBOL: b2Math.h<533:53> [b2Math.h <535:9 535:9>]
REFERENCE_USAGE b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> b2Vec3 b2Mat33::ex [b2Math.h <535:17 535:18>]
LOCAL_SYMBOL: b2Math.h<533:36> [b2Math.h <535:15 535:15>]
REFERENCE_CALL b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> b2Vec3 operator*(float32, const b2Vec3 &) [b2Math.h <535:26 535:26>]
REFERENCE_USAGE b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <535:24 535:24>]
LOCAL_SYMBOL: b2Math.h<533:53> [b2Math.h <535:22 535:22>]
REFERENCE_USAGE b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> b2Vec3 b2Mat33::ey [b2Math.h <535:30 535:31>]
LOCAL_SYMBOL: b2Math.h<533:36> [b2Math.h <535:28 535:28>]
REFERENCE_CALL b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> b2Vec3 operator*(float32, const b2Vec3 &) [b2Math.h <535:39 535:39>]
REFERENCE_USAGE b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <535:37 535:37>]
LOCAL_SYMBOL: b2Math.h<533:53> [b2Math.h <535:35 535:35>]
REFERENCE_USAGE b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> b2Vec3 b2Mat33::ez [b2Math.h <535:43 535:44>]
LOCAL_SYMBOL: b2Math.h<533:36> [b2Math.h <535:41 535:41>]
SYMBOL_FUNCTION b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) [b2Math.h <539:1 <539:15 539:21> 542:1>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <539:8 539:13>]
LOCAL_SYMBOL: b2Math.h<539:38> [b2Math.h <539:38 539:38>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> b2Mat33 [b2Math.h <539:29 539:35>]
LOCAL_SYMBOL: b2Math.h<539:55> [b2Math.h <539:55 539:55>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <539:47 539:52>]
REFERENCE_CALL b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <541:9 541:14>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <541:9 541:14>]
REFERENCE_USAGE b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> float32 b2Vec3::x [b2Math.h <541:21 541:21>]
REFERENCE_USAGE b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> b2Vec3 b2Mat33::ex [b2Math.h <541:18 541:19>]
LOCAL_SYMBOL: b2Math.h<539:38> [b2Math.h <541:16 541:16>]
REFERENCE_USAGE b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <541:27 541:27>]
LOCAL_SYMBOL: b2Math.h<539:55> [b2Math.h <541:25 541:25>]
REFERENCE_USAGE b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> float32 b2Vec3::x [b2Math.h <541:36 541:36>]
REFERENCE_USAGE b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> b2Vec3 b2Mat33::ey [b2Math.h <541:33 541:34>]
LOCAL_SYMBOL: b2Math.h<539:38> [b2Math.h <541:31 541:31>]
REFERENCE_USAGE b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <541:42 541:42>]
LOCAL_SYMBOL: b2Math.h<539:55> [b2Math.h <541:40 541:40>]
REFERENCE_USAGE b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> float32 b2Vec3::y [b2Math.h <541:50 541:50>]
REFERENCE_USAGE b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> b2Vec3 b2Mat33::ex [b2Math.h <541:47 541:48>]
LOCAL_SYMBOL: b2Math.h<539:38> [b2Math.h <541:45 541:45>]
REFERENCE_USAGE b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <541:56 541:56>]
LOCAL_SYMBOL: b2Math.h<539:55> [b2Math.h <541:54 541:54>]
REFERENCE_USAGE b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> float32 b2Vec3::y [b2Math.h <541:65 541:65>]
REFERENCE_USAGE b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> b2Vec3 b2Mat33::ey [b2Math.h <541:62 541:63>]
LOCAL_SYMBOL: b2Math.h<539:38> [b2Math.h <541:60 541:60>]
REFERENCE_USAGE b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <541:71 541:71>]
LOCAL_SYMBOL: b2Math.h<539:55> [b2Math.h <541:69 541:69>]
SYMBOL_FUNCTION b2Rot b2Mul(const b2Rot &, const b2Rot &) [b2Math.h <545:1 <545:14 545:18> 555:1>]
REFERENCE_TYPE_USAGE b2Rot b2Mul(const b2Rot &, const b2Rot &) -> b2Rot [b2Math.h <545:8 545:12>]
LOCAL_SYMBOL: b2Math.h<545:33> [b2Math.h <545:33 545:33>]
REFERENCE_TYPE_USAGE b2Rot b2Mul(const b2Rot &, const b2Rot &) -> b2Rot [b2Math.h <545:26 545:30>]
LOCAL_SYMBOL: b2Math.h<545:49> [b2Math.h <545:49 545:49>]
REFERENCE_TYPE_USAGE b2Rot b2Mul(const b2Rot &, const b2Rot &) -> b2Rot [b2Math.h <545:42 545:46>]
LOCAL_SYMBOL: b2Math.h<551:8> [b2Math.h <551:8 551:9>]
REFERENCE_TYPE_USAGE b2Rot b2Mul(const b2Rot &, const b2Rot &) -> b2Rot [b2Math.h <551:2 551:6>]
REFERENCE_CALL b2Rot b2Mul(const b2Rot &, const b2Rot &) -> void b2Rot::b2Rot() [b2Math.h <551:8 551:9>]
REFERENCE_USAGE b2Rot b2Mul(const b2Rot &, const b2Rot &) -> float32 b2Rot::s [b2Math.h <552:5 552:5>]
LOCAL_SYMBOL: b2Math.h<551:8> [b2Math.h <552:2 552:3>]
REFERENCE_USAGE b2Rot b2Mul(const b2Rot &, const b2Rot &) -> float32 b2Rot::s [b2Math.h <552:11 552:11>]
LOCAL_SYMBOL: b2Math.h<545:33> [b2Math.h <552:9 552:9>]
REFERENCE_USAGE b2Rot b2Mul(const b2Rot &, const b2Rot &) -> float32 b2Rot::c [b2Math.h <552:17 552:17>]
LOCAL_SYMBOL: b2Math.h<545:49> [b2Math.h <552:15 552:15>]
REFERENCE_USAGE b2Rot b2Mul(const b2Rot &, const b2Rot &) -> float32 b2Rot::c [b2Math.h <552:23 552:23>]
LOCAL_SYMBOL: b2Math.h<545:33> [b2Math.h <552:21 552:21>]
REFERENCE_USAGE b2Rot b2Mul(const b2Rot &, const b2Rot &) -> float32 b2Rot::s [b2Math.h <552:29 552:29>]
LOCAL_SYMBOL: b2Math.h<545:49> [b2Math.h <552:27 552:27>]
REFERENCE_USAGE b2Rot b2Mul(const b2Rot &, const b2Rot &) -> float32 b2Rot::c [b2Math.h <553:5 553:5>]
LOCAL_SYMBOL: b2Math.h<551:8> [b2Math.h <553:2 553:3>]
REFERENCE_USAGE b2Rot b2Mul(const b2Rot &, const b2Rot &) -> float32 b2Rot::c [b2Math.h <553:11 553:11>]
LOCAL_SYMBOL: b2Math.h<545:33> [b2Math.h <553:9 553:9>]
REFERENCE_USAGE b2Rot b2Mul(const b2Rot &, const b2Rot &) -> float32 b2Rot::c [b2Math.h <553:17 553:17>]
LOCAL_SYMBOL: b2Math.h<545:49> [b2Math.h <553:15 553:15>]
REFERENCE_USAGE b2Rot b2Mul(const b2Rot &, const b2Rot &) -> float32 b2Rot::s [b2Math.h <553:23 553:23>]
LOCAL_SYMBOL: b2Math.h<545:33> [b2Math.h <553:21 553:21>]
REFERENCE_USAGE b2Rot b2Mul(const b2Rot &, const b2Rot &) -> float32 b2Rot::s [b2Math.h <553:29 553:29>]
LOCAL_SYMBOL: b2Math.h<545:49> [b2Math.h <553:27 553:27>]
REFERENCE_CALL b2Rot b2Mul(const b2Rot &, const b2Rot &) -> void b2Rot::b2Rot(b2Rot &&) [b2Math.h <554:9 554:10>]
LOCAL_SYMBOL: b2Math.h<551:8> [b2Math.h <554:9 554:10>]
SYMBOL_FUNCTION b2Rot b2MulT(const b2Rot &, const b2Rot &) [b2Math.h <558:1 <558:14 558:19> 568:1>]
REFERENCE_TYPE_USAGE b2Rot b2MulT(const b2Rot &, const b2Rot &) -> b2Rot [b2Math.h <558:8 558:12>]
LOCAL_SYMBOL: b2Math.h<558:34> [b2Math.h <558:34 558:34>]
REFERENCE_TYPE_USAGE b2Rot b2MulT(const b2Rot &, const b2Rot &) -> b2Rot [b2Math.h <558:27 558:31>]
LOCAL_SYMBOL: b2Math.h<558:50> [b2Math.h <558:50 558:50>]
REFERENCE_TYPE_USAGE b2Rot b2MulT(const b2Rot &, const b2Rot &) -> b2Rot [b2Math.h <558:43 558:47>]
LOCAL_SYMBOL: b2Math.h<564:8> [b2Math.h <564:8 564:9>]
REFERENCE_TYPE_USAGE b2Rot b2MulT(const b2Rot &, const b2Rot &) -> b2Rot [b2Math.h <564:2 564:6>]
REFERENCE_CALL b2Rot b2MulT(const b2Rot &, const b2Rot &) -> void b2Rot::b2Rot() [b2Math.h <564:8 564:9>]
REFERENCE_USAGE b2Rot b2MulT(const b2Rot &, const b2Rot &) -> float32 b2Rot::s [b2Math.h <565:5 565:5>]
LOCAL_SYMBOL: b2Math.h<564:8> [b2Math.h <565:2 565:3>]
REFERENCE_USAGE b2Rot b2MulT(const b2Rot &, const b2Rot &) -> float32 b2Rot::c [b2Math.h <565:11 565:11>]
LOCAL_SYMBOL: b2Math.h<558:34> [b2Math.h <565:9 565:9>]
REFERENCE_USAGE b2Rot b2MulT(const b2Rot &, const b2Rot &) -> float32 b2Rot::s [b2Math.h <565:17 565:17>]
LOCAL_SYMBOL: b2Math.h<558:50> [b2Math.h <565:15 565:15>]
REFERENCE_USAGE b2Rot b2MulT(const b2Rot &, const b2Rot &) -> float32 b2Rot::s [b2Math.h <565:23 565:23>]
LOCAL_SYMBOL: b2Math.h<558:34> [b2Math.h <565:21 565:21>]
REFERENCE_USAGE b2Rot b2MulT(const b2Rot &, const b2Rot &) -> float32 b2Rot::c [b2Math.h <565:29 565:29>]
LOCAL_SYMBOL: b2Math.h<558:50> [b2Math.h <565:27 565:27>]
REFERENCE_USAGE b2Rot b2MulT(const b2Rot &, const b2Rot &) -> float32 b2Rot::c [b2Math.h <566:5 566:5>]
LOCAL_SYMBOL: b2Math.h<564:8> [b2Math.h <566:2 566:3>]
REFERENCE_USAGE b2Rot b2MulT(const b2Rot &, const b2Rot &) -> float32 b2Rot::c [b2Math.h <566:11 566:11>]
LOCAL_SYMBOL: b2Math.h<558:34> [b2Math.h <566:9 566:9>]
REFERENCE_USAGE b2Rot b2MulT(const b2Rot &, const b2Rot &) -> float32 b2Rot::c [b2Math.h <566:17 566:17>]
LOCAL_SYMBOL: b2Math.h<558:50> [b2Math.h <566:15 566:15>]
REFERENCE_USAGE b2Rot b2MulT(const b2Rot &, const b2Rot &) -> float32 b2Rot::s [b2Math.h <566:23 566:23>]
LOCAL_SYMBOL: b2Math.h<558:34> [b2Math.h <566:21 566:21>]
REFERENCE_USAGE b2Rot b2MulT(const b2Rot &, const b2Rot &) -> float32 b2Rot::s [b2Math.h <566:29 566:29>]
LOCAL_SYMBOL: b2Math.h<558:50> [b2Math.h <566:27 566:27>]
REFERENCE_CALL b2Rot b2MulT(const b2Rot &, const b2Rot &) -> void b2Rot::b2Rot(b2Rot &&) [b2Math.h <567:9 567:10>]
LOCAL_SYMBOL: b2Math.h<564:8> [b2Math.h <567:9 567:10>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2Math.h <571:1 <571:15 571:19> 574:1>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> b2Vec2 [b2Math.h <571:8 571:13>]
LOCAL_SYMBOL: b2Math.h<571:34> [b2Math.h <571:34 571:34>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> b2Rot [b2Math.h <571:27 571:31>]
LOCAL_SYMBOL: b2Math.h<571:51> [b2Math.h <571:51 571:51>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> b2Vec2 [b2Math.h <571:43 571:48>]
REFERENCE_CALL b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <573:9 573:14>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> b2Vec2 [b2Math.h <573:9 573:14>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> float32 b2Rot::c [b2Math.h <573:18 573:18>]
LOCAL_SYMBOL: b2Math.h<571:34> [b2Math.h <573:16 573:16>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <573:24 573:24>]
LOCAL_SYMBOL: b2Math.h<571:51> [b2Math.h <573:22 573:22>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> float32 b2Rot::s [b2Math.h <573:30 573:30>]
LOCAL_SYMBOL: b2Math.h<571:34> [b2Math.h <573:28 573:28>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <573:36 573:36>]
LOCAL_SYMBOL: b2Math.h<571:51> [b2Math.h <573:34 573:34>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> float32 b2Rot::s [b2Math.h <573:41 573:41>]
LOCAL_SYMBOL: b2Math.h<571:34> [b2Math.h <573:39 573:39>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <573:47 573:47>]
LOCAL_SYMBOL: b2Math.h<571:51> [b2Math.h <573:45 573:45>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> float32 b2Rot::c [b2Math.h <573:53 573:53>]
LOCAL_SYMBOL: b2Math.h<571:34> [b2Math.h <573:51 573:51>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <573:59 573:59>]
LOCAL_SYMBOL: b2Math.h<571:51> [b2Math.h <573:57 573:57>]
SYMBOL_FUNCTION b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) [b2Math.h <577:1 <577:15 577:20> 580:1>]
REFERENCE_TYPE_USAGE b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> b2Vec2 [b2Math.h <577:8 577:13>]
LOCAL_SYMBOL: b2Math.h<577:35> [b2Math.h <577:35 577:35>]
REFERENCE_TYPE_USAGE b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> b2Rot [b2Math.h <577:28 577:32>]
LOCAL_SYMBOL: b2Math.h<577:52> [b2Math.h <577:52 577:52>]
REFERENCE_TYPE_USAGE b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> b2Vec2 [b2Math.h <577:44 577:49>]
REFERENCE_CALL b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <579:9 579:14>]
REFERENCE_TYPE_USAGE b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> b2Vec2 [b2Math.h <579:9 579:14>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> float32 b2Rot::c [b2Math.h <579:18 579:18>]
LOCAL_SYMBOL: b2Math.h<577:35> [b2Math.h <579:16 579:16>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <579:24 579:24>]
LOCAL_SYMBOL: b2Math.h<577:52> [b2Math.h <579:22 579:22>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> float32 b2Rot::s [b2Math.h <579:30 579:30>]
LOCAL_SYMBOL: b2Math.h<577:35> [b2Math.h <579:28 579:28>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <579:36 579:36>]
LOCAL_SYMBOL: b2Math.h<577:52> [b2Math.h <579:34 579:34>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> float32 b2Rot::s [b2Math.h <579:42 579:42>]
LOCAL_SYMBOL: b2Math.h<577:35> [b2Math.h <579:40 579:40>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <579:48 579:48>]
LOCAL_SYMBOL: b2Math.h<577:52> [b2Math.h <579:46 579:46>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> float32 b2Rot::c [b2Math.h <579:54 579:54>]
LOCAL_SYMBOL: b2Math.h<577:35> [b2Math.h <579:52 579:52>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <579:60 579:60>]
LOCAL_SYMBOL: b2Math.h<577:52> [b2Math.h <579:58 579:58>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2Math.h <582:1 <582:15 582:19> 588:1>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> b2Vec2 [b2Math.h <582:8 582:13>]
LOCAL_SYMBOL: b2Math.h<582:40> [b2Math.h <582:40 582:40>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> b2Transform [b2Math.h <582:27 582:37>]
LOCAL_SYMBOL: b2Math.h<582:57> [b2Math.h <582:57 582:57>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> b2Vec2 [b2Math.h <582:49 582:54>]
LOCAL_SYMBOL: b2Math.h<584:10> [b2Math.h <584:10 584:10>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 [b2Math.h <584:2 584:8>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 b2Rot::c [b2Math.h <584:19 584:19>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> b2Rot b2Transform::q [b2Math.h <584:17 584:17>]
LOCAL_SYMBOL: b2Math.h<582:40> [b2Math.h <584:15 584:15>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <584:25 584:25>]
LOCAL_SYMBOL: b2Math.h<582:57> [b2Math.h <584:23 584:23>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 b2Rot::s [b2Math.h <584:33 584:33>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> b2Rot b2Transform::q [b2Math.h <584:31 584:31>]
LOCAL_SYMBOL: b2Math.h<582:40> [b2Math.h <584:29 584:29>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <584:39 584:39>]
LOCAL_SYMBOL: b2Math.h<582:57> [b2Math.h <584:37 584:37>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <584:48 584:48>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> b2Vec2 b2Transform::p [b2Math.h <584:46 584:46>]
LOCAL_SYMBOL: b2Math.h<582:40> [b2Math.h <584:44 584:44>]
LOCAL_SYMBOL: b2Math.h<585:10> [b2Math.h <585:10 585:10>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 [b2Math.h <585:2 585:8>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 b2Rot::s [b2Math.h <585:19 585:19>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> b2Rot b2Transform::q [b2Math.h <585:17 585:17>]
LOCAL_SYMBOL: b2Math.h<582:40> [b2Math.h <585:15 585:15>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <585:25 585:25>]
LOCAL_SYMBOL: b2Math.h<582:57> [b2Math.h <585:23 585:23>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 b2Rot::c [b2Math.h <585:33 585:33>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> b2Rot b2Transform::q [b2Math.h <585:31 585:31>]
LOCAL_SYMBOL: b2Math.h<582:40> [b2Math.h <585:29 585:29>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <585:39 585:39>]
LOCAL_SYMBOL: b2Math.h<582:57> [b2Math.h <585:37 585:37>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <585:48 585:48>]
REFERENCE_USAGE b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> b2Vec2 b2Transform::p [b2Math.h <585:46 585:46>]
LOCAL_SYMBOL: b2Math.h<582:40> [b2Math.h <585:44 585:44>]
REFERENCE_CALL b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <587:9 587:14>]
REFERENCE_TYPE_USAGE b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> b2Vec2 [b2Math.h <587:9 587:14>]
LOCAL_SYMBOL: b2Math.h<584:10> [b2Math.h <587:16 587:16>]
LOCAL_SYMBOL: b2Math.h<585:10> [b2Math.h <587:19 587:19>]
SYMBOL_FUNCTION b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) [b2Math.h <590:1 <590:15 590:20> 598:1>]
REFERENCE_TYPE_USAGE b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> b2Vec2 [b2Math.h <590:8 590:13>]
LOCAL_SYMBOL: b2Math.h<590:41> [b2Math.h <590:41 590:41>]
REFERENCE_TYPE_USAGE b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> b2Transform [b2Math.h <590:28 590:38>]
LOCAL_SYMBOL: b2Math.h<590:58> [b2Math.h <590:58 590:58>]
REFERENCE_TYPE_USAGE b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> b2Vec2 [b2Math.h <590:50 590:55>]
LOCAL_SYMBOL: b2Math.h<592:10> [b2Math.h <592:10 592:11>]
REFERENCE_TYPE_USAGE b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 [b2Math.h <592:2 592:8>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <592:17 592:17>]
LOCAL_SYMBOL: b2Math.h<590:58> [b2Math.h <592:15 592:15>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <592:25 592:25>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> b2Vec2 b2Transform::p [b2Math.h <592:23 592:23>]
LOCAL_SYMBOL: b2Math.h<590:41> [b2Math.h <592:21 592:21>]
LOCAL_SYMBOL: b2Math.h<593:10> [b2Math.h <593:10 593:11>]
REFERENCE_TYPE_USAGE b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 [b2Math.h <593:2 593:8>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <593:17 593:17>]
LOCAL_SYMBOL: b2Math.h<590:58> [b2Math.h <593:15 593:15>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <593:25 593:25>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> b2Vec2 b2Transform::p [b2Math.h <593:23 593:23>]
LOCAL_SYMBOL: b2Math.h<590:41> [b2Math.h <593:21 593:21>]
LOCAL_SYMBOL: b2Math.h<594:10> [b2Math.h <594:10 594:10>]
REFERENCE_TYPE_USAGE b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 [b2Math.h <594:2 594:8>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 b2Rot::c [b2Math.h <594:19 594:19>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> b2Rot b2Transform::q [b2Math.h <594:17 594:17>]
LOCAL_SYMBOL: b2Math.h<590:41> [b2Math.h <594:15 594:15>]
LOCAL_SYMBOL: b2Math.h<592:10> [b2Math.h <594:23 594:24>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 b2Rot::s [b2Math.h <594:32 594:32>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> b2Rot b2Transform::q [b2Math.h <594:30 594:30>]
LOCAL_SYMBOL: b2Math.h<590:41> [b2Math.h <594:28 594:28>]
LOCAL_SYMBOL: b2Math.h<593:10> [b2Math.h <594:36 594:37>]
LOCAL_SYMBOL: b2Math.h<595:10> [b2Math.h <595:10 595:10>]
REFERENCE_TYPE_USAGE b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 [b2Math.h <595:2 595:8>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 b2Rot::s [b2Math.h <595:20 595:20>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> b2Rot b2Transform::q [b2Math.h <595:18 595:18>]
LOCAL_SYMBOL: b2Math.h<590:41> [b2Math.h <595:16 595:16>]
LOCAL_SYMBOL: b2Math.h<592:10> [b2Math.h <595:24 595:25>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 b2Rot::c [b2Math.h <595:33 595:33>]
REFERENCE_USAGE b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> b2Rot b2Transform::q [b2Math.h <595:31 595:31>]
LOCAL_SYMBOL: b2Math.h<590:41> [b2Math.h <595:29 595:29>]
LOCAL_SYMBOL: b2Math.h<593:10> [b2Math.h <595:37 595:38>]
REFERENCE_CALL b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <597:9 597:14>]
REFERENCE_TYPE_USAGE b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> b2Vec2 [b2Math.h <597:9 597:14>]
LOCAL_SYMBOL: b2Math.h<594:10> [b2Math.h <597:16 597:16>]
LOCAL_SYMBOL: b2Math.h<595:10> [b2Math.h <597:19 597:19>]
SYMBOL_FUNCTION b2Transform b2Mul(const b2Transform &, const b2Transform &) [b2Math.h <602:1 <602:20 602:24> 608:1>]
REFERENCE_TYPE_USAGE b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Transform [b2Math.h <602:8 602:18>]
LOCAL_SYMBOL: b2Math.h<602:45> [b2Math.h <602:45 602:45>]
REFERENCE_TYPE_USAGE b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Transform [b2Math.h <602:32 602:42>]
LOCAL_SYMBOL: b2Math.h<602:67> [b2Math.h <602:67 602:67>]
REFERENCE_TYPE_USAGE b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Transform [b2Math.h <602:54 602:64>]
LOCAL_SYMBOL: b2Math.h<604:14> [b2Math.h <604:14 604:14>]
REFERENCE_TYPE_USAGE b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Transform [b2Math.h <604:2 604:12>]
SYMBOL_FUNCTION void b2Transform::b2Transform()
REFERENCE_CALL b2Transform b2Mul(const b2Transform &, const b2Transform &) -> void b2Transform::b2Transform() [b2Math.h <604:14 604:14>]
SYMBOL_FUNCTION b2Rot & b2Rot::operator=(b2Rot &&)
REFERENCE_CALL b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Rot & b2Rot::operator=(b2Rot &&) [b2Math.h <605:6 605:6>]
REFERENCE_USAGE b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Rot b2Transform::q [b2Math.h <605:4 605:4>]
LOCAL_SYMBOL: b2Math.h<604:14> [b2Math.h <605:2 605:2>]
SYMBOL_FUNCTION b2Rot b2Mul(const b2Rot &, const b2Rot &)
REFERENCE_CALL b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Rot b2Mul(const b2Rot &, const b2Rot &) [b2Math.h <605:8 605:12>]
REFERENCE_USAGE b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Rot b2Transform::q [b2Math.h <605:16 605:16>]
LOCAL_SYMBOL: b2Math.h<602:45> [b2Math.h <605:14 605:14>]
REFERENCE_USAGE b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Rot b2Transform::q [b2Math.h <605:21 605:21>]
LOCAL_SYMBOL: b2Math.h<602:67> [b2Math.h <605:19 605:19>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &&)
REFERENCE_CALL b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Math.h <606:6 606:6>]
REFERENCE_USAGE b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Vec2 b2Transform::p [b2Math.h <606:4 606:4>]
LOCAL_SYMBOL: b2Math.h<604:14> [b2Math.h <606:2 606:2>]
REFERENCE_CALL b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2Math.h <606:24 606:24>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2Math.h <606:8 606:12>]
REFERENCE_USAGE b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Rot b2Transform::q [b2Math.h <606:16 606:16>]
LOCAL_SYMBOL: b2Math.h<602:45> [b2Math.h <606:14 606:14>]
REFERENCE_USAGE b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Vec2 b2Transform::p [b2Math.h <606:21 606:21>]
LOCAL_SYMBOL: b2Math.h<602:67> [b2Math.h <606:19 606:19>]
REFERENCE_USAGE b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Vec2 b2Transform::p [b2Math.h <606:28 606:28>]
LOCAL_SYMBOL: b2Math.h<602:45> [b2Math.h <606:26 606:26>]
SYMBOL_FUNCTION void b2Transform::b2Transform(b2Transform &&)
REFERENCE_CALL b2Transform b2Mul(const b2Transform &, const b2Transform &) -> void b2Transform::b2Transform(b2Transform &&) [b2Math.h <607:9 607:9>]
LOCAL_SYMBOL: b2Math.h<604:14> [b2Math.h <607:9 607:9>]
SYMBOL_FUNCTION b2Transform b2MulT(const b2Transform &, const b2Transform &) [b2Math.h <612:1 <612:20 612:25> 618:1>]
REFERENCE_TYPE_USAGE b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Transform [b2Math.h <612:8 612:18>]
LOCAL_SYMBOL: b2Math.h<612:46> [b2Math.h <612:46 612:46>]
REFERENCE_TYPE_USAGE b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Transform [b2Math.h <612:33 612:43>]
LOCAL_SYMBOL: b2Math.h<612:68> [b2Math.h <612:68 612:68>]
REFERENCE_TYPE_USAGE b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Transform [b2Math.h <612:55 612:65>]
LOCAL_SYMBOL: b2Math.h<614:14> [b2Math.h <614:14 614:14>]
REFERENCE_TYPE_USAGE b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Transform [b2Math.h <614:2 614:12>]
REFERENCE_CALL b2Transform b2MulT(const b2Transform &, const b2Transform &) -> void b2Transform::b2Transform() [b2Math.h <614:14 614:14>]
REFERENCE_CALL b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Rot & b2Rot::operator=(b2Rot &&) [b2Math.h <615:6 615:6>]
REFERENCE_USAGE b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Rot b2Transform::q [b2Math.h <615:4 615:4>]
LOCAL_SYMBOL: b2Math.h<614:14> [b2Math.h <615:2 615:2>]
SYMBOL_FUNCTION b2Rot b2MulT(const b2Rot &, const b2Rot &)
REFERENCE_CALL b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Rot b2MulT(const b2Rot &, const b2Rot &) [b2Math.h <615:8 615:13>]
REFERENCE_USAGE b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Rot b2Transform::q [b2Math.h <615:17 615:17>]
LOCAL_SYMBOL: b2Math.h<612:46> [b2Math.h <615:15 615:15>]
REFERENCE_USAGE b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Rot b2Transform::q [b2Math.h <615:22 615:22>]
LOCAL_SYMBOL: b2Math.h<612:68> [b2Math.h <615:20 615:20>]
REFERENCE_CALL b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Math.h <616:6 616:6>]
REFERENCE_USAGE b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Vec2 b2Transform::p [b2Math.h <616:4 616:4>]
LOCAL_SYMBOL: b2Math.h<614:14> [b2Math.h <616:2 616:2>]
SYMBOL_FUNCTION b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) [b2Math.h <616:8 616:13>]
REFERENCE_USAGE b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Rot b2Transform::q [b2Math.h <616:17 616:17>]
LOCAL_SYMBOL: b2Math.h<612:46> [b2Math.h <616:15 616:15>]
REFERENCE_CALL b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Math.h <616:24 616:24>]
REFERENCE_USAGE b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Vec2 b2Transform::p [b2Math.h <616:22 616:22>]
LOCAL_SYMBOL: b2Math.h<612:68> [b2Math.h <616:20 616:20>]
REFERENCE_USAGE b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Vec2 b2Transform::p [b2Math.h <616:28 616:28>]
LOCAL_SYMBOL: b2Math.h<612:46> [b2Math.h <616:26 616:26>]
REFERENCE_CALL b2Transform b2MulT(const b2Transform &, const b2Transform &) -> void b2Transform::b2Transform(b2Transform &&) [b2Math.h <617:9 617:9>]
LOCAL_SYMBOL: b2Math.h<614:14> [b2Math.h <617:9 617:9>]
SYMBOL_TEMPLATE_PARAMETER b2Abs<typename T>::T [b2Math.h <620:20 620:20>]
SYMBOL_FUNCTION T b2Abs<typename T>(T) [b2Math.h <620:1 <621:10 621:14> 624:1>]
REFERENCE_TYPE_USAGE T b2Abs<typename T>(T) -> b2Abs<typename T>::T [b2Math.h <621:8 621:8>]
LOCAL_SYMBOL: b2Math.h<621:18> [b2Math.h <621:18 621:18>]
REFERENCE_TYPE_USAGE T b2Abs<typename T>(T) -> b2Abs<typename T>::T [b2Math.h <621:16 621:16>]
LOCAL_SYMBOL: b2Math.h<621:18> [b2Math.h <623:9 623:9>]
REFERENCE_TYPE_USAGE T b2Abs<typename T>(T) -> b2Abs<typename T>::T [b2Math.h <623:13 623:13>]
LOCAL_SYMBOL: b2Math.h<621:18> [b2Math.h <623:20 623:20>]
LOCAL_SYMBOL: b2Math.h<621:18> [b2Math.h <623:25 623:25>]
SYMBOL_FUNCTION float b2Abs<float>(float) [b2Math.h <621:1 <621:10 621:14> 624:1>]
SYMBOL_FUNCTION T b2Abs<typename T>(T)
REFERENCE_TEMPLATE_SPECIALIZATION float b2Abs<float>(float) -> T b2Abs<typename T>(T) [b2Math.h <621:10 621:14>]
SYMBOL_FUNCTION b2Vec2 b2Abs<b2Vec2>(b2Vec2) [b2Math.h <621:10 621:14>]
REFERENCE_TEMPLATE_SPECIALIZATION b2Vec2 b2Abs<b2Vec2>(b2Vec2) -> T b2Abs<typename T>(T) [b2Math.h <621:10 621:14>]
SYMBOL_FUNCTION b2Vec2 b2Abs(const b2Vec2 &) [b2Math.h <626:1 <626:15 626:19> 629:1>]
REFERENCE_TYPE_USAGE b2Vec2 b2Abs(const b2Vec2 &) -> b2Vec2 [b2Math.h <626:8 626:13>]
LOCAL_SYMBOL: b2Math.h<626:35> [b2Math.h <626:35 626:35>]
REFERENCE_TYPE_USAGE b2Vec2 b2Abs(const b2Vec2 &) -> b2Vec2 [b2Math.h <626:27 626:32>]
REFERENCE_CALL b2Vec2 b2Abs(const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <628:9 628:14>]
REFERENCE_TYPE_USAGE b2Vec2 b2Abs(const b2Vec2 &) -> b2Vec2 [b2Math.h <628:9 628:14>]
SYMBOL_FUNCTION float b2Abs<float>(float)
REFERENCE_CALL b2Vec2 b2Abs(const b2Vec2 &) -> float b2Abs<float>(float) [b2Math.h <628:16 628:20>]
REFERENCE_USAGE b2Vec2 b2Abs(const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <628:24 628:24>]
LOCAL_SYMBOL: b2Math.h<626:35> [b2Math.h <628:22 628:22>]
REFERENCE_CALL b2Vec2 b2Abs(const b2Vec2 &) -> float b2Abs<float>(float) [b2Math.h <628:28 628:32>]
REFERENCE_USAGE b2Vec2 b2Abs(const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <628:36 628:36>]
LOCAL_SYMBOL: b2Math.h<626:35> [b2Math.h <628:34 628:34>]
SYMBOL_FUNCTION b2Mat22 b2Abs(const b2Mat22 &) [b2Math.h <631:1 <631:16 631:20> 634:1>]
REFERENCE_TYPE_USAGE b2Mat22 b2Abs(const b2Mat22 &) -> b2Mat22 [b2Math.h <631:8 631:14>]
LOCAL_SYMBOL: b2Math.h<631:37> [b2Math.h <631:37 631:37>]
REFERENCE_TYPE_USAGE b2Mat22 b2Abs(const b2Mat22 &) -> b2Mat22 [b2Math.h <631:28 631:34>]
REFERENCE_CALL b2Mat22 b2Abs(const b2Mat22 &) -> void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) [b2Math.h <633:9 633:15>]
REFERENCE_TYPE_USAGE b2Mat22 b2Abs(const b2Mat22 &) -> b2Mat22 [b2Math.h <633:9 633:15>]
SYMBOL_FUNCTION b2Vec2 b2Abs(const b2Vec2 &)
REFERENCE_CALL b2Mat22 b2Abs(const b2Mat22 &) -> b2Vec2 b2Abs(const b2Vec2 &) [b2Math.h <633:17 633:21>]
REFERENCE_USAGE b2Mat22 b2Abs(const b2Mat22 &) -> b2Vec2 b2Mat22::ex [b2Math.h <633:25 633:26>]
LOCAL_SYMBOL: b2Math.h<631:37> [b2Math.h <633:23 633:23>]
REFERENCE_CALL b2Mat22 b2Abs(const b2Mat22 &) -> b2Vec2 b2Abs(const b2Vec2 &) [b2Math.h <633:30 633:34>]
REFERENCE_USAGE b2Mat22 b2Abs(const b2Mat22 &) -> b2Vec2 b2Mat22::ey [b2Math.h <633:38 633:39>]
LOCAL_SYMBOL: b2Math.h<631:37> [b2Math.h <633:36 633:36>]
SYMBOL_TEMPLATE_PARAMETER b2Min<typename T>::T [b2Math.h <636:20 636:20>]
SYMBOL_FUNCTION T b2Min<typename T>(T, T) [b2Math.h <636:1 <637:10 637:14> 640:1>]
REFERENCE_TYPE_USAGE T b2Min<typename T>(T, T) -> b2Min<typename T>::T [b2Math.h <637:8 637:8>]
LOCAL_SYMBOL: b2Math.h<637:18> [b2Math.h <637:18 637:18>]
REFERENCE_TYPE_USAGE T b2Min<typename T>(T, T) -> b2Min<typename T>::T [b2Math.h <637:16 637:16>]
LOCAL_SYMBOL: b2Math.h<637:23> [b2Math.h <637:23 637:23>]
REFERENCE_TYPE_USAGE T b2Min<typename T>(T, T) -> b2Min<typename T>::T [b2Math.h <637:21 637:21>]
LOCAL_SYMBOL: b2Math.h<637:18> [b2Math.h <639:9 639:9>]
LOCAL_SYMBOL: b2Math.h<637:23> [b2Math.h <639:13 639:13>]
LOCAL_SYMBOL: b2Math.h<637:18> [b2Math.h <639:17 639:17>]
LOCAL_SYMBOL: b2Math.h<637:23> [b2Math.h <639:21 639:21>]
SYMBOL_FUNCTION float b2Min<float>(float, float) [b2Math.h <637:1 <637:10 637:14> 640:1>]
SYMBOL_FUNCTION T b2Min<typename T>(T, T)
REFERENCE_TEMPLATE_SPECIALIZATION float b2Min<float>(float, float) -> T b2Min<typename T>(T, T) [b2Math.h <637:10 637:14>]
SYMBOL_FUNCTION b2Vec2 b2Min<b2Vec2>(b2Vec2, b2Vec2) [b2Math.h <637:10 637:14>]
REFERENCE_TEMPLATE_SPECIALIZATION b2Vec2 b2Min<b2Vec2>(b2Vec2, b2Vec2) -> T b2Min<typename T>(T, T) [b2Math.h <637:10 637:14>]
SYMBOL_FUNCTION int b2Min<int>(int, int) [b2Math.h <637:1 <637:10 637:14> 640:1>]
REFERENCE_TEMPLATE_SPECIALIZATION int b2Min<int>(int, int) -> T b2Min<typename T>(T, T) [b2Math.h <637:10 637:14>]
SYMBOL_FUNCTION b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) [b2Math.h <642:1 <642:15 642:19> 645:1>]
REFERENCE_TYPE_USAGE b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <642:8 642:13>]
LOCAL_SYMBOL: b2Math.h<642:35> [b2Math.h <642:35 642:35>]
REFERENCE_TYPE_USAGE b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <642:27 642:32>]
LOCAL_SYMBOL: b2Math.h<642:52> [b2Math.h <642:52 642:52>]
REFERENCE_TYPE_USAGE b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <642:44 642:49>]
REFERENCE_CALL b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <644:9 644:14>]
REFERENCE_TYPE_USAGE b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <644:9 644:14>]
SYMBOL_FUNCTION float b2Min<float>(float, float)
REFERENCE_CALL b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) -> float b2Min<float>(float, float) [b2Math.h <644:16 644:20>]
REFERENCE_USAGE b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <644:24 644:24>]
LOCAL_SYMBOL: b2Math.h<642:35> [b2Math.h <644:22 644:22>]
REFERENCE_USAGE b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <644:29 644:29>]
LOCAL_SYMBOL: b2Math.h<642:52> [b2Math.h <644:27 644:27>]
REFERENCE_CALL b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) -> float b2Min<float>(float, float) [b2Math.h <644:33 644:37>]
REFERENCE_USAGE b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <644:41 644:41>]
LOCAL_SYMBOL: b2Math.h<642:35> [b2Math.h <644:39 644:39>]
REFERENCE_USAGE b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <644:46 644:46>]
LOCAL_SYMBOL: b2Math.h<642:52> [b2Math.h <644:44 644:44>]
SYMBOL_TEMPLATE_PARAMETER b2Max<typename T>::T [b2Math.h <647:20 647:20>]
SYMBOL_FUNCTION T b2Max<typename T>(T, T) [b2Math.h <647:1 <648:10 648:14> 651:1>]
REFERENCE_TYPE_USAGE T b2Max<typename T>(T, T) -> b2Max<typename T>::T [b2Math.h <648:8 648:8>]
LOCAL_SYMBOL: b2Math.h<648:18> [b2Math.h <648:18 648:18>]
REFERENCE_TYPE_USAGE T b2Max<typename T>(T, T) -> b2Max<typename T>::T [b2Math.h <648:16 648:16>]
LOCAL_SYMBOL: b2Math.h<648:23> [b2Math.h <648:23 648:23>]
REFERENCE_TYPE_USAGE T b2Max<typename T>(T, T) -> b2Max<typename T>::T [b2Math.h <648:21 648:21>]
LOCAL_SYMBOL: b2Math.h<648:18> [b2Math.h <650:9 650:9>]
LOCAL_SYMBOL: b2Math.h<648:23> [b2Math.h <650:13 650:13>]
LOCAL_SYMBOL: b2Math.h<648:18> [b2Math.h <650:17 650:17>]
LOCAL_SYMBOL: b2Math.h<648:23> [b2Math.h <650:21 650:21>]
SYMBOL_FUNCTION float b2Max<float>(float, float) [b2Math.h <648:1 <648:10 648:14> 651:1>]
SYMBOL_FUNCTION T b2Max<typename T>(T, T)
REFERENCE_TEMPLATE_SPECIALIZATION float b2Max<float>(float, float) -> T b2Max<typename T>(T, T) [b2Math.h <648:10 648:14>]
SYMBOL_FUNCTION b2Vec2 b2Max<b2Vec2>(b2Vec2, b2Vec2) [b2Math.h <648:10 648:14>]
REFERENCE_TEMPLATE_SPECIALIZATION b2Vec2 b2Max<b2Vec2>(b2Vec2, b2Vec2) -> T b2Max<typename T>(T, T) [b2Math.h <648:10 648:14>]
SYMBOL_FUNCTION b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) [b2Math.h <653:1 <653:15 653:19> 656:1>]
REFERENCE_TYPE_USAGE b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <653:8 653:13>]
LOCAL_SYMBOL: b2Math.h<653:35> [b2Math.h <653:35 653:35>]
REFERENCE_TYPE_USAGE b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <653:27 653:32>]
LOCAL_SYMBOL: b2Math.h<653:52> [b2Math.h <653:52 653:52>]
REFERENCE_TYPE_USAGE b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <653:44 653:49>]
REFERENCE_CALL b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <655:9 655:14>]
REFERENCE_TYPE_USAGE b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <655:9 655:14>]
SYMBOL_FUNCTION float b2Max<float>(float, float)
REFERENCE_CALL b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) -> float b2Max<float>(float, float) [b2Math.h <655:16 655:20>]
REFERENCE_USAGE b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <655:24 655:24>]
LOCAL_SYMBOL: b2Math.h<653:35> [b2Math.h <655:22 655:22>]
REFERENCE_USAGE b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <655:29 655:29>]
LOCAL_SYMBOL: b2Math.h<653:52> [b2Math.h <655:27 655:27>]
REFERENCE_CALL b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) -> float b2Max<float>(float, float) [b2Math.h <655:33 655:37>]
REFERENCE_USAGE b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <655:41 655:41>]
LOCAL_SYMBOL: b2Math.h<653:35> [b2Math.h <655:39 655:39>]
REFERENCE_USAGE b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <655:46 655:46>]
LOCAL_SYMBOL: b2Math.h<653:52> [b2Math.h <655:44 655:44>]
SYMBOL_TEMPLATE_PARAMETER b2Clamp<typename T>::T [b2Math.h <658:20 658:20>]
SYMBOL_FUNCTION T b2Clamp<typename T>(T, T, T) [b2Math.h <658:1 <659:10 659:16> 662:1>]
REFERENCE_TYPE_USAGE T b2Clamp<typename T>(T, T, T) -> b2Clamp<typename T>::T [b2Math.h <659:8 659:8>]
LOCAL_SYMBOL: b2Math.h<659:20> [b2Math.h <659:20 659:20>]
REFERENCE_TYPE_USAGE T b2Clamp<typename T>(T, T, T) -> b2Clamp<typename T>::T [b2Math.h <659:18 659:18>]
LOCAL_SYMBOL: b2Math.h<659:25> [b2Math.h <659:25 659:27>]
REFERENCE_TYPE_USAGE T b2Clamp<typename T>(T, T, T) -> b2Clamp<typename T>::T [b2Math.h <659:23 659:23>]
LOCAL_SYMBOL: b2Math.h<659:32> [b2Math.h <659:32 659:35>]
REFERENCE_TYPE_USAGE T b2Clamp<typename T>(T, T, T) -> b2Clamp<typename T>::T [b2Math.h <659:30 659:30>]
LOCAL_SYMBOL: b2Math.h<659:25> [b2Math.h <661:15 661:17>]
LOCAL_SYMBOL: b2Math.h<659:20> [b2Math.h <661:26 661:26>]
LOCAL_SYMBOL: b2Math.h<659:32> [b2Math.h <661:29 661:32>]
SYMBOL_FUNCTION b2Vec2 b2Clamp(const b2Vec2 &, const b2Vec2 &, const b2Vec2 &) [b2Math.h <664:1 <664:15 664:21> 667:1>]
REFERENCE_TYPE_USAGE b2Vec2 b2Clamp(const b2Vec2 &, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <664:8 664:13>]
LOCAL_SYMBOL: b2Math.h<664:37> [b2Math.h <664:37 664:37>]
REFERENCE_TYPE_USAGE b2Vec2 b2Clamp(const b2Vec2 &, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <664:29 664:34>]
LOCAL_SYMBOL: b2Math.h<664:54> [b2Math.h <664:54 664:56>]
REFERENCE_TYPE_USAGE b2Vec2 b2Clamp(const b2Vec2 &, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <664:46 664:51>]
LOCAL_SYMBOL: b2Math.h<664:73> [b2Math.h <664:73 664:76>]
REFERENCE_TYPE_USAGE b2Vec2 b2Clamp(const b2Vec2 &, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <664:65 664:70>]
SYMBOL_FUNCTION b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL b2Vec2 b2Clamp(const b2Vec2 &, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) [b2Math.h <666:9 666:13>]
LOCAL_SYMBOL: b2Math.h<664:54> [b2Math.h <666:15 666:17>]
SYMBOL_FUNCTION b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL b2Vec2 b2Clamp(const b2Vec2 &, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) [b2Math.h <666:20 666:24>]
LOCAL_SYMBOL: b2Math.h<664:37> [b2Math.h <666:26 666:26>]
LOCAL_SYMBOL: b2Math.h<664:73> [b2Math.h <666:29 666:32>]
SYMBOL_TEMPLATE_PARAMETER b2Swap<typename T>::T [b2Math.h <669:19 669:19>]
SYMBOL_FUNCTION void b2Swap<typename T>(T &, T &) [b2Math.h <669:1 <669:34 669:39> 674:1>]
REFERENCE_TYPE_USAGE void b2Swap<typename T>(T &, T &) -> void [b2Math.h <669:29 669:32>]
LOCAL_SYMBOL: b2Math.h<669:44> [b2Math.h <669:44 669:44>]
REFERENCE_TYPE_USAGE void b2Swap<typename T>(T &, T &) -> b2Swap<typename T>::T [b2Math.h <669:41 669:41>]
LOCAL_SYMBOL: b2Math.h<669:50> [b2Math.h <669:50 669:50>]
REFERENCE_TYPE_USAGE void b2Swap<typename T>(T &, T &) -> b2Swap<typename T>::T [b2Math.h <669:47 669:47>]
LOCAL_SYMBOL: b2Math.h<671:4> [b2Math.h <671:4 671:6>]
REFERENCE_TYPE_USAGE void b2Swap<typename T>(T &, T &) -> b2Swap<typename T>::T [b2Math.h <671:2 671:2>]
LOCAL_SYMBOL: b2Math.h<669:44> [b2Math.h <671:10 671:10>]
LOCAL_SYMBOL: b2Math.h<669:44> [b2Math.h <672:2 672:2>]
LOCAL_SYMBOL: b2Math.h<669:50> [b2Math.h <672:6 672:6>]
LOCAL_SYMBOL: b2Math.h<669:50> [b2Math.h <673:2 673:2>]
LOCAL_SYMBOL: b2Math.h<671:4> [b2Math.h <673:6 673:8>]
SYMBOL_FUNCTION uint32 b2NextPowerOfTwo(uint32) [b2Math.h <681:1 <681:15 681:30> 689:1>]
REFERENCE_TYPE_USAGE uint32 b2NextPowerOfTwo(uint32) -> uint32 [b2Math.h <681:8 681:13>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <681:39 681:39>]
REFERENCE_TYPE_USAGE uint32 b2NextPowerOfTwo(uint32) -> uint32 [b2Math.h <681:32 681:37>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <683:2 683:2>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <683:8 683:8>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <684:2 684:2>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <684:8 684:8>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <685:2 685:2>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <685:8 685:8>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <686:2 686:2>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <686:8 686:8>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <687:2 687:2>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <687:8 687:8>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <688:9 688:9>]
SYMBOL_FUNCTION bool b2IsPowerOfTwo(uint32) [b2Math.h <691:1 <691:13 691:26> 695:1>]
REFERENCE_TYPE_USAGE bool b2IsPowerOfTwo(uint32) -> bool [b2Math.h <691:8 691:11>]
LOCAL_SYMBOL: b2Math.h<691:35> [b2Math.h <691:35 691:35>]
REFERENCE_TYPE_USAGE bool b2IsPowerOfTwo(uint32) -> uint32 [b2Math.h <691:28 691:33>]
LOCAL_SYMBOL: b2Math.h<693:7> [b2Math.h <693:7 693:12>]
REFERENCE_TYPE_USAGE bool b2IsPowerOfTwo(uint32) -> bool [b2Math.h <693:2 693:5>]
LOCAL_SYMBOL: b2Math.h<691:35> [b2Math.h <693:16 693:16>]
LOCAL_SYMBOL: b2Math.h<691:35> [b2Math.h <693:26 693:26>]
LOCAL_SYMBOL: b2Math.h<691:35> [b2Math.h <693:31 693:31>]
LOCAL_SYMBOL: b2Math.h<693:7> [b2Math.h <694:9 694:14>]
SYMBOL_METHOD public void b2Sweep::GetTransform(b2Transform *, float32) const [b2Math.h <697:1 <697:22 697:33> 705:1>]
SYMBOL_STRUCT b2Sweep
QUALIFIER: b2Sweep [b2Math.h <697:13 697:19>]
REFERENCE_TYPE_USAGE void b2Sweep::GetTransform(b2Transform *, float32) const -> void [b2Math.h <697:8 697:11>]
LOCAL_SYMBOL: b2Math.h<697:48> [b2Math.h <697:48 697:49>]
REFERENCE_TYPE_USAGE void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Transform [b2Math.h <697:35 697:45>]
LOCAL_SYMBOL: b2Math.h<697:60> [b2Math.h <697:60 697:63>]
REFERENCE_TYPE_USAGE void b2Sweep::GetTransform(b2Transform *, float32) const -> float32 [b2Math.h <697:52 697:58>]
REFERENCE_CALL void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Math.h <699:8 699:8>]
REFERENCE_USAGE void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Vec2 b2Transform::p [b2Math.h <699:6 699:6>]
LOCAL_SYMBOL: b2Math.h<697:48> [b2Math.h <699:2 699:3>]
REFERENCE_CALL void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2Math.h <699:29 699:29>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2Math.h <699:24 699:24>]
LOCAL_SYMBOL: b2Math.h<697:60> [b2Math.h <699:18 699:21>]
REFERENCE_USAGE void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Vec2 b2Sweep::c0 [b2Math.h <699:26 699:27>]
REFERENCE_CALL void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2Math.h <699:36 699:36>]
LOCAL_SYMBOL: b2Math.h<697:60> [b2Math.h <699:31 699:34>]
REFERENCE_USAGE void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Vec2 b2Sweep::c [b2Math.h <699:38 699:38>]
LOCAL_SYMBOL: b2Math.h<700:10> [b2Math.h <700:10 700:14>]
REFERENCE_TYPE_USAGE void b2Sweep::GetTransform(b2Transform *, float32) const -> float32 [b2Math.h <700:2 700:8>]
LOCAL_SYMBOL: b2Math.h<697:60> [b2Math.h <700:26 700:29>]
REFERENCE_USAGE void b2Sweep::GetTransform(b2Transform *, float32) const -> float32 b2Sweep::a0 [b2Math.h <700:34 700:35>]
LOCAL_SYMBOL: b2Math.h<697:60> [b2Math.h <700:39 700:42>]
REFERENCE_USAGE void b2Sweep::GetTransform(b2Transform *, float32) const -> float32 b2Sweep::a [b2Math.h <700:46 700:46>]
REFERENCE_CALL void b2Sweep::GetTransform(b2Transform *, float32) const -> void b2Rot::Set(float32) [b2Math.h <701:8 701:10>]
REFERENCE_USAGE void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Rot b2Transform::q [b2Math.h <701:6 701:6>]
LOCAL_SYMBOL: b2Math.h<697:48> [b2Math.h <701:2 701:3>]
LOCAL_SYMBOL: b2Math.h<700:10> [b2Math.h <701:12 701:16>]
SYMBOL_FUNCTION void b2Vec2::operator-=(const b2Vec2 &)
REFERENCE_CALL void b2Sweep::GetTransform(b2Transform *, float32) const -> void b2Vec2::operator-=(const b2Vec2 &) [b2Math.h <704:8 704:9>]
REFERENCE_USAGE void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Vec2 b2Transform::p [b2Math.h <704:6 704:6>]
LOCAL_SYMBOL: b2Math.h<697:48> [b2Math.h <704:2 704:3>]
REFERENCE_CALL void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2Math.h <704:11 704:15>]
REFERENCE_USAGE void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Rot b2Transform::q [b2Math.h <704:21 704:21>]
LOCAL_SYMBOL: b2Math.h<697:48> [b2Math.h <704:17 704:18>]
REFERENCE_USAGE void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Vec2 b2Sweep::localCenter [b2Math.h <704:24 704:34>]
SYMBOL_METHOD public void b2Sweep::Advance(float32) [b2Math.h <707:1 <707:22 707:28> 714:1>]
QUALIFIER: b2Sweep [b2Math.h <707:13 707:19>]
REFERENCE_TYPE_USAGE void b2Sweep::Advance(float32) -> void [b2Math.h <707:8 707:11>]
LOCAL_SYMBOL: b2Math.h<707:38> [b2Math.h <707:38 707:42>]
REFERENCE_TYPE_USAGE void b2Sweep::Advance(float32) -> float32 [b2Math.h <707:30 707:36>]
REFERENCE_TYPE_USAGE void b2Sweep::Advance(float32) -> void [b2Math.h <709:2 709:9>]
REFERENCE_USAGE void b2Sweep::Advance(float32) -> float32 b2Sweep::alpha0 [b2Math.h <709:11 709:16>]
SYMBOL_FUNCTION void _wassert(const wchar_t *, const wchar_t *, unsigned int)
REFERENCE_CALL void b2Sweep::Advance(float32) -> void _wassert(const wchar_t *, const wchar_t *, unsigned int) [b2Math.h <709:2 709:9>]
REFERENCE_TYPE_USAGE void b2Sweep::Advance(float32) -> unsigned int [b2Math.h <709:2 709:9>]
LOCAL_SYMBOL: b2Math.h<710:10> [b2Math.h <710:10 710:13>]
REFERENCE_TYPE_USAGE void b2Sweep::Advance(float32) -> float32 [b2Math.h <710:2 710:8>]
LOCAL_SYMBOL: b2Math.h<707:38> [b2Math.h <710:18 710:22>]
REFERENCE_USAGE void b2Sweep::Advance(float32) -> float32 b2Sweep::alpha0 [b2Math.h <710:26 710:31>]
REFERENCE_USAGE void b2Sweep::Advance(float32) -> float32 b2Sweep::alpha0 [b2Math.h <710:44 710:49>]
SYMBOL_FUNCTION void b2Vec2::operator+=(const b2Vec2 &)
REFERENCE_CALL void b2Sweep::Advance(float32) -> void b2Vec2::operator+=(const b2Vec2 &) [b2Math.h <711:5 711:6>]
REFERENCE_USAGE void b2Sweep::Advance(float32) -> b2Vec2 b2Sweep::c0 [b2Math.h <711:2 711:3>]
REFERENCE_CALL void b2Sweep::Advance(float32) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2Math.h <711:13 711:13>]
LOCAL_SYMBOL: b2Math.h<710:10> [b2Math.h <711:8 711:11>]
REFERENCE_CALL void b2Sweep::Advance(float32) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Math.h <711:18 711:18>]
REFERENCE_USAGE void b2Sweep::Advance(float32) -> b2Vec2 b2Sweep::c [b2Math.h <711:16 711:16>]
REFERENCE_USAGE void b2Sweep::Advance(float32) -> b2Vec2 b2Sweep::c0 [b2Math.h <711:20 711:21>]
REFERENCE_USAGE void b2Sweep::Advance(float32) -> float32 b2Sweep::a0 [b2Math.h <712:2 712:3>]
LOCAL_SYMBOL: b2Math.h<710:10> [b2Math.h <712:8 712:11>]
REFERENCE_USAGE void b2Sweep::Advance(float32) -> float32 b2Sweep::a [b2Math.h <712:16 712:16>]
REFERENCE_USAGE void b2Sweep::Advance(float32) -> float32 b2Sweep::a0 [b2Math.h <712:20 712:21>]
REFERENCE_USAGE void b2Sweep::Advance(float32) -> float32 b2Sweep::alpha0 [b2Math.h <713:2 713:7>]
LOCAL_SYMBOL: b2Math.h<707:38> [b2Math.h <713:11 713:15>]
SYMBOL_METHOD public void b2Sweep::Normalize() [b2Math.h <717:1 <717:22 717:30> 723:1>]
QUALIFIER: b2Sweep [b2Math.h <717:13 717:19>]
REFERENCE_TYPE_USAGE void b2Sweep::Normalize() -> void [b2Math.h <717:8 717:11>]
LOCAL_SYMBOL: b2Math.h<719:10> [b2Math.h <719:10 719:14>]
REFERENCE_TYPE_USAGE void b2Sweep::Normalize() -> float32 [b2Math.h <719:2 719:8>]
LOCAL_SYMBOL: b2Math.h<720:10> [b2Math.h <720:10 720:10>]
REFERENCE_TYPE_USAGE void b2Sweep::Normalize() -> float32 [b2Math.h <720:2 720:8>]
LOCAL_SYMBOL: b2Math.h<719:10> [b2Math.h <720:15 720:19>]
SYMBOL_FUNCTION float floorf(float)
REFERENCE_CALL void b2Sweep::Normalize() -> float floorf(float) [b2Math.h <720:23 720:28>]
REFERENCE_USAGE void b2Sweep::Normalize() -> float32 b2Sweep::a0 [b2Math.h <720:30 720:31>]
LOCAL_SYMBOL: b2Math.h<719:10> [b2Math.h <720:35 720:39>]
REFERENCE_USAGE void b2Sweep::Normalize() -> float32 b2Sweep::a0 [b2Math.h <721:2 721:3>]
LOCAL_SYMBOL: b2Math.h<720:10> [b2Math.h <721:8 721:8>]
REFERENCE_USAGE void b2Sweep::Normalize() -> float32 b2Sweep::a [b2Math.h <722:2 722:2>]
LOCAL_SYMBOL: b2Math.h<720:10> [b2Math.h <722:7 722:7>]
SYMBOL_CLASS b2Shape [b2Collision.h <29:7 29:13>]
SYMBOL_CLASS b2CircleShape [b2Collision.h <30:7 30:19>]
SYMBOL_CLASS b2EdgeShape [b2Collision.h <31:7 31:17>]
SYMBOL_CLASS b2PolygonShape [b2Collision.h <32:7 32:20>]
SYMBOL_GLOBAL_VARIABLE const uint8 b2_nullFeature [b2Collision.h <34:13 34:26>]
REFERENCE_TYPE_USAGE const uint8 b2_nullFeature -> uint8 [b2Collision.h <34:7 34:11>]
SYMBOL_STRUCT b2ContactFeature [b2Collision.h <38:1 <38:8 38:23> 50:1>]
SYMBOL_ENUM public b2ContactFeature::Type [b2Collision.h <40:2 <40:7 40:10> 44:2>]
SYMBOL_ENUM_CONSTANT b2ContactFeature::Type::e_vertex [b2Collision.h <42:3 42:10>]
SYMBOL_ENUM_CONSTANT b2ContactFeature::Type::e_face [b2Collision.h <43:3 43:8>]
SYMBOL_FIELD public uint8 b2ContactFeature::indexA [b2Collision.h <46:8 46:13>]
REFERENCE_TYPE_USAGE uint8 b2ContactFeature::indexA -> uint8 [b2Collision.h <46:2 46:6>]
SYMBOL_FIELD public uint8 b2ContactFeature::indexB [b2Collision.h <47:8 47:13>]
REFERENCE_TYPE_USAGE uint8 b2ContactFeature::indexB -> uint8 [b2Collision.h <47:2 47:6>]
SYMBOL_FIELD public uint8 b2ContactFeature::typeA [b2Collision.h <48:8 48:12>]
REFERENCE_TYPE_USAGE uint8 b2ContactFeature::typeA -> uint8 [b2Collision.h <48:2 48:6>]
SYMBOL_FIELD public uint8 b2ContactFeature::typeB [b2Collision.h <49:8 49:12>]
REFERENCE_TYPE_USAGE uint8 b2ContactFeature::typeB -> uint8 [b2Collision.h <49:2 49:6>]
SYMBOL_UNION b2ContactID [b2Collision.h <53:1 <53:7 53:17> 57:1>]
SYMBOL_FIELD public b2ContactFeature b2ContactID::cf [b2Collision.h <55:19 55:20>]
REFERENCE_TYPE_USAGE b2ContactFeature b2ContactID::cf -> b2ContactFeature [b2Collision.h <55:2 55:17>]
SYMBOL_FIELD public uint32 b2ContactID::key [b2Collision.h <56:9 56:11>]
REFERENCE_TYPE_USAGE uint32 b2ContactID::key -> uint32 [b2Collision.h <56:2 56:7>]
SYMBOL_STRUCT b2ManifoldPoint [b2Collision.h <69:1 <69:8 69:22> 75:1>]
SYMBOL_FIELD public b2Vec2 b2ManifoldPoint::localPoint [b2Collision.h <71:9 71:18>]
REFERENCE_TYPE_USAGE b2Vec2 b2ManifoldPoint::localPoint -> b2Vec2 [b2Collision.h <71:2 71:7>]
SYMBOL_FIELD public float32 b2ManifoldPoint::normalImpulse [b2Collision.h <72:10 72:22>]
REFERENCE_TYPE_USAGE float32 b2ManifoldPoint::normalImpulse -> float32 [b2Collision.h <72:2 72:8>]
SYMBOL_FIELD public float32 b2ManifoldPoint::tangentImpulse [b2Collision.h <73:10 73:23>]
REFERENCE_TYPE_USAGE float32 b2ManifoldPoint::tangentImpulse -> float32 [b2Collision.h <73:2 73:8>]
SYMBOL_FIELD public b2ContactID b2ManifoldPoint::id [b2Collision.h <74:14 74:15>]
REFERENCE_TYPE_USAGE b2ContactID b2ManifoldPoint::id -> b2ContactID [b2Collision.h <74:2 74:12>]
SYMBOL_STRUCT b2Manifold [b2Collision.h <93:1 <93:8 93:17> 107:1>]
SYMBOL_ENUM public b2Manifold::Type [b2Collision.h <95:2 <95:7 95:10> 100:2>]
SYMBOL_ENUM_CONSTANT b2Manifold::Type::e_circles [b2Collision.h <97:3 97:11>]
SYMBOL_ENUM_CONSTANT b2Manifold::Type::e_faceA [b2Collision.h <98:3 98:9>]
SYMBOL_ENUM_CONSTANT b2Manifold::Type::e_faceB [b2Collision.h <99:3 99:9>]
SYMBOL_FIELD public b2ManifoldPoint [] b2Manifold::points [b2Collision.h <102:18 102:23>]
REFERENCE_TYPE_USAGE b2ManifoldPoint [] b2Manifold::points -> b2ManifoldPoint [b2Collision.h <102:2 102:16>]
SYMBOL_FIELD public b2Vec2 b2Manifold::localNormal [b2Collision.h <103:9 103:19>]
REFERENCE_TYPE_USAGE b2Vec2 b2Manifold::localNormal -> b2Vec2 [b2Collision.h <103:2 103:7>]
SYMBOL_FIELD public b2Vec2 b2Manifold::localPoint [b2Collision.h <104:9 104:18>]
REFERENCE_TYPE_USAGE b2Vec2 b2Manifold::localPoint -> b2Vec2 [b2Collision.h <104:2 104:7>]
SYMBOL_FIELD public b2Manifold::Type b2Manifold::type [b2Collision.h <105:7 105:10>]
REFERENCE_TYPE_USAGE b2Manifold::Type b2Manifold::type -> b2Manifold::Type [b2Collision.h <105:2 105:5>]
SYMBOL_FIELD public int32 b2Manifold::pointCount [b2Collision.h <106:8 106:17>]
REFERENCE_TYPE_USAGE int32 b2Manifold::pointCount -> int32 [b2Collision.h <106:2 106:6>]
SYMBOL_STRUCT b2WorldManifold [b2Collision.h <110:1 <110:8 110:22> 123:1>]
SYMBOL_METHOD public void b2WorldManifold::Initialize(const b2Manifold *, const b2Transform &, float32, const b2Transform &, float32) [b2Collision.h <116:7 116:16>]
REFERENCE_TYPE_USAGE void b2WorldManifold::Initialize(const b2Manifold *, const b2Transform &, float32, const b2Transform &, float32) -> void [b2Collision.h <116:2 116:5>]
LOCAL_SYMBOL: b2Collision.h<116:36> [b2Collision.h <116:36 116:43>]
REFERENCE_TYPE_USAGE void b2WorldManifold::Initialize(const b2Manifold *, const b2Transform &, float32, const b2Transform &, float32) -> b2Manifold [b2Collision.h <116:24 116:33>]
LOCAL_SYMBOL: b2Collision.h<117:25> [b2Collision.h <117:25 117:27>]
REFERENCE_TYPE_USAGE void b2WorldManifold::Initialize(const b2Manifold *, const b2Transform &, float32, const b2Transform &, float32) -> b2Transform [b2Collision.h <117:12 117:22>]
LOCAL_SYMBOL: b2Collision.h<117:38> [b2Collision.h <117:38 117:44>]
REFERENCE_TYPE_USAGE void b2WorldManifold::Initialize(const b2Manifold *, const b2Transform &, float32, const b2Transform &, float32) -> float32 [b2Collision.h <117:30 117:36>]
LOCAL_SYMBOL: b2Collision.h<118:25> [b2Collision.h <118:25 118:27>]
REFERENCE_TYPE_USAGE void b2WorldManifold::Initialize(const b2Manifold *, const b2Transform &, float32, const b2Transform &, float32) -> b2Transform [b2Collision.h <118:12 118:22>]
LOCAL_SYMBOL: b2Collision.h<118:38> [b2Collision.h <118:38 118:44>]
REFERENCE_TYPE_USAGE void b2WorldManifold::Initialize(const b2Manifold *, const b2Transform &, float32, const b2Transform &, float32) -> float32 [b2Collision.h <118:30 118:36>]
SYMBOL_FIELD public b2Vec2 b2WorldManifold::normal [b2Collision.h <120:9 120:14>]
REFERENCE_TYPE_USAGE b2Vec2 b2WorldManifold::normal -> b2Vec2 [b2Collision.h <120:2 120:7>]
SYMBOL_FIELD public b2Vec2 [] b2WorldManifold::points [b2Collision.h <121:9 121:14>]
REFERENCE_TYPE_USAGE b2Vec2 [] b2WorldManifold::points -> b2Vec2 [b2Collision.h <121:2 121:7>]
SYMBOL_FIELD public float32 [] b2WorldManifold::separations [b2Collision.h <122:10 122:20>]
REFERENCE_TYPE_USAGE float32 [] b2WorldManifold::separations -> float32 [b2Collision.h <122:2 122:8>]
SYMBOL_ENUM b2PointState [b2Collision.h <126:1 <126:6 126:17> 132:1>]
SYMBOL_ENUM_CONSTANT b2PointState::b2_nullState [b2Collision.h <128:2 128:13>]
SYMBOL_ENUM_CONSTANT b2PointState::b2_addState [b2Collision.h <129:2 129:12>]
SYMBOL_ENUM_CONSTANT b2PointState::b2_persistState [b2Collision.h <130:2 130:16>]
SYMBOL_ENUM_CONSTANT b2PointState::b2_removeState [b2Collision.h <131:2 131:15>]
SYMBOL_FUNCTION void b2GetPointStates(b2PointState [], b2PointState [], const b2Manifold *, const b2Manifold *) [b2Collision.h <136:6 136:21>]
REFERENCE_TYPE_USAGE void b2GetPointStates(b2PointState [], b2PointState [], const b2Manifold *, const b2Manifold *) -> void [b2Collision.h <136:1 136:4>]
LOCAL_SYMBOL: b2Collision.h<136:36> [b2Collision.h <136:36 136:41>]
REFERENCE_TYPE_USAGE void b2GetPointStates(b2PointState [], b2PointState [], const b2Manifold *, const b2Manifold *) -> b2PointState [b2Collision.h <136:23 136:34>]
LOCAL_SYMBOL: b2Collision.h<136:79> [b2Collision.h <136:79 136:84>]
REFERENCE_TYPE_USAGE void b2GetPointStates(b2PointState [], b2PointState [], const b2Manifold *, const b2Manifold *) -> b2PointState [b2Collision.h <136:66 136:77>]
LOCAL_SYMBOL: b2Collision.h<137:26> [b2Collision.h <137:26 137:34>]
REFERENCE_TYPE_USAGE void b2GetPointStates(b2PointState [], b2PointState [], const b2Manifold *, const b2Manifold *) -> b2Manifold [b2Collision.h <137:14 137:23>]
LOCAL_SYMBOL: b2Collision.h<137:55> [b2Collision.h <137:55 137:63>]
REFERENCE_TYPE_USAGE void b2GetPointStates(b2PointState [], b2PointState [], const b2Manifold *, const b2Manifold *) -> b2Manifold [b2Collision.h <137:43 137:52>]
SYMBOL_STRUCT b2ClipVertex [b2Collision.h <140:1 <140:8 140:19> 144:1>]
SYMBOL_FIELD public b2Vec2 b2ClipVertex::v [b2Collision.h <142:9 142:9>]
REFERENCE_TYPE_USAGE b2Vec2 b2ClipVertex::v -> b2Vec2 [b2Collision.h <142:2 142:7>]
SYMBOL_FIELD public b2ContactID b2ClipVertex::id [b2Collision.h <143:14 143:15>]
REFERENCE_TYPE_USAGE b2ContactID b2ClipVertex::id -> b2ContactID [b2Collision.h <143:2 143:12>]
SYMBOL_STRUCT b2RayCastInput [b2Collision.h <147:1 <147:8 147:21> 151:1>]
SYMBOL_FIELD public b2Vec2 b2RayCastInput::p1 [b2Collision.h <149:9 149:10>]
REFERENCE_TYPE_USAGE b2Vec2 b2RayCastInput::p1 -> b2Vec2 [b2Collision.h <149:2 149:7>]
SYMBOL_FIELD public b2Vec2 b2RayCastInput::p2 [b2Collision.h <149:13 149:14>]
REFERENCE_TYPE_USAGE b2Vec2 b2RayCastInput::p2 -> b2Vec2 [b2Collision.h <149:2 149:7>]
SYMBOL_FIELD public float32 b2RayCastInput::maxFraction [b2Collision.h <150:10 150:20>]
REFERENCE_TYPE_USAGE float32 b2RayCastInput::maxFraction -> float32 [b2Collision.h <150:2 150:8>]
SYMBOL_STRUCT b2RayCastOutput [b2Collision.h <155:1 <155:8 155:22> 159:1>]
SYMBOL_FIELD public b2Vec2 b2RayCastOutput::normal [b2Collision.h <157:9 157:14>]
REFERENCE_TYPE_USAGE b2Vec2 b2RayCastOutput::normal -> b2Vec2 [b2Collision.h <157:2 157:7>]
SYMBOL_FIELD public float32 b2RayCastOutput::fraction [b2Collision.h <158:10 158:17>]
REFERENCE_TYPE_USAGE float32 b2RayCastOutput::fraction -> float32 [b2Collision.h <158:2 158:8>]
SYMBOL_STRUCT b2AABB [b2Collision.h <162:1 <162:8 162:13> 216:1>]
SYMBOL_METHOD public bool b2AABB::IsValid() const [b2Collision.h <165:7 165:13>]
REFERENCE_TYPE_USAGE bool b2AABB::IsValid() const -> bool [b2Collision.h <165:2 165:5>]
SYMBOL_METHOD public b2Vec2 b2AABB::GetCenter() const [b2Collision.h <168:2 <168:9 168:17> 171:2>]
REFERENCE_TYPE_USAGE b2Vec2 b2AABB::GetCenter() const -> b2Vec2 [b2Collision.h <168:2 168:7>]
REFERENCE_CALL b2Vec2 b2AABB::GetCenter() const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2Collision.h <170:15 170:15>]
REFERENCE_CALL b2Vec2 b2AABB::GetCenter() const -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2Collision.h <170:29 170:29>]
REFERENCE_USAGE b2Vec2 b2AABB::GetCenter() const -> b2Vec2 b2AABB::lowerBound [b2Collision.h <170:18 170:27>]
REFERENCE_USAGE b2Vec2 b2AABB::GetCenter() const -> b2Vec2 b2AABB::upperBound [b2Collision.h <170:31 170:40>]
SYMBOL_METHOD public b2Vec2 b2AABB::GetExtents() const [b2Collision.h <174:2 <174:9 174:18> 177:2>]
REFERENCE_TYPE_USAGE b2Vec2 b2AABB::GetExtents() const -> b2Vec2 [b2Collision.h <174:2 174:7>]
REFERENCE_CALL b2Vec2 b2AABB::GetExtents() const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2Collision.h <176:15 176:15>]
REFERENCE_CALL b2Vec2 b2AABB::GetExtents() const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Collision.h <176:29 176:29>]
REFERENCE_USAGE b2Vec2 b2AABB::GetExtents() const -> b2Vec2 b2AABB::upperBound [b2Collision.h <176:18 176:27>]
REFERENCE_USAGE b2Vec2 b2AABB::GetExtents() const -> b2Vec2 b2AABB::lowerBound [b2Collision.h <176:31 176:40>]
SYMBOL_METHOD public float32 b2AABB::GetPerimeter() const [b2Collision.h <180:2 <180:10 180:21> 185:2>]
REFERENCE_TYPE_USAGE float32 b2AABB::GetPerimeter() const -> float32 [b2Collision.h <180:2 180:8>]
LOCAL_SYMBOL: b2Collision.h<182:11> [b2Collision.h <182:11 182:12>]
REFERENCE_TYPE_USAGE float32 b2AABB::GetPerimeter() const -> float32 [b2Collision.h <182:3 182:9>]
REFERENCE_USAGE float32 b2AABB::GetPerimeter() const -> float32 b2Vec2::x [b2Collision.h <182:27 182:27>]
REFERENCE_USAGE float32 b2AABB::GetPerimeter() const -> b2Vec2 b2AABB::upperBound [b2Collision.h <182:16 182:25>]
REFERENCE_USAGE float32 b2AABB::GetPerimeter() const -> float32 b2Vec2::x [b2Collision.h <182:42 182:42>]
REFERENCE_USAGE float32 b2AABB::GetPerimeter() const -> b2Vec2 b2AABB::lowerBound [b2Collision.h <182:31 182:40>]
LOCAL_SYMBOL: b2Collision.h<183:11> [b2Collision.h <183:11 183:12>]
REFERENCE_TYPE_USAGE float32 b2AABB::GetPerimeter() const -> float32 [b2Collision.h <183:3 183:9>]
REFERENCE_USAGE float32 b2AABB::GetPerimeter() const -> float32 b2Vec2::y [b2Collision.h <183:27 183:27>]
REFERENCE_USAGE float32 b2AABB::GetPerimeter() const -> b2Vec2 b2AABB::upperBound [b2Collision.h <183:16 183:25>]
REFERENCE_USAGE float32 b2AABB::GetPerimeter() const -> float32 b2Vec2::y [b2Collision.h <183:42 183:42>]
REFERENCE_USAGE float32 b2AABB::GetPerimeter() const -> b2Vec2 b2AABB::lowerBound [b2Collision.h <183:31 183:40>]
LOCAL_SYMBOL: b2Collision.h<182:11> [b2Collision.h <184:18 184:19>]
LOCAL_SYMBOL: b2Collision.h<183:11> [b2Collision.h <184:23 184:24>]
SYMBOL_METHOD public void b2AABB::Combine(const b2AABB &) [b2Collision.h <188:2 <188:7 188:13> 192:2>]
REFERENCE_TYPE_USAGE void b2AABB::Combine(const b2AABB &) -> void [b2Collision.h <188:2 188:5>]
LOCAL_SYMBOL: b2Collision.h<188:29> [b2Collision.h <188:29 188:32>]
REFERENCE_TYPE_USAGE void b2AABB::Combine(const b2AABB &) -> b2AABB [b2Collision.h <188:21 188:26>]
REFERENCE_CALL void b2AABB::Combine(const b2AABB &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Collision.h <190:14 190:14>]
REFERENCE_USAGE void b2AABB::Combine(const b2AABB &) -> b2Vec2 b2AABB::lowerBound [b2Collision.h <190:3 190:12>]
REFERENCE_CALL void b2AABB::Combine(const b2AABB &) -> b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) [b2Collision.h <190:16 190:20>]
REFERENCE_USAGE void b2AABB::Combine(const b2AABB &) -> b2Vec2 b2AABB::lowerBound [b2Collision.h <190:22 190:31>]
REFERENCE_USAGE void b2AABB::Combine(const b2AABB &) -> b2Vec2 b2AABB::lowerBound [b2Collision.h <190:39 190:48>]
LOCAL_SYMBOL: b2Collision.h<188:29> [b2Collision.h <190:34 190:37>]
REFERENCE_CALL void b2AABB::Combine(const b2AABB &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Collision.h <191:14 191:14>]
REFERENCE_USAGE void b2AABB::Combine(const b2AABB &) -> b2Vec2 b2AABB::upperBound [b2Collision.h <191:3 191:12>]
REFERENCE_CALL void b2AABB::Combine(const b2AABB &) -> b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) [b2Collision.h <191:16 191:20>]
REFERENCE_USAGE void b2AABB::Combine(const b2AABB &) -> b2Vec2 b2AABB::upperBound [b2Collision.h <191:22 191:31>]
REFERENCE_USAGE void b2AABB::Combine(const b2AABB &) -> b2Vec2 b2AABB::upperBound [b2Collision.h <191:39 191:48>]
LOCAL_SYMBOL: b2Collision.h<188:29> [b2Collision.h <191:34 191:37>]
SYMBOL_METHOD public void b2AABB::Combine(const b2AABB &, const b2AABB &) [b2Collision.h <195:2 <195:7 195:13> 199:2>]
REFERENCE_TYPE_USAGE void b2AABB::Combine(const b2AABB &, const b2AABB &) -> void [b2Collision.h <195:2 195:5>]
LOCAL_SYMBOL: b2Collision.h<195:29> [b2Collision.h <195:29 195:33>]
REFERENCE_TYPE_USAGE void b2AABB::Combine(const b2AABB &, const b2AABB &) -> b2AABB [b2Collision.h <195:21 195:26>]
LOCAL_SYMBOL: b2Collision.h<195:50> [b2Collision.h <195:50 195:54>]
REFERENCE_TYPE_USAGE void b2AABB::Combine(const b2AABB &, const b2AABB &) -> b2AABB [b2Collision.h <195:42 195:47>]
REFERENCE_CALL void b2AABB::Combine(const b2AABB &, const b2AABB &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Collision.h <197:14 197:14>]
REFERENCE_USAGE void b2AABB::Combine(const b2AABB &, const b2AABB &) -> b2Vec2 b2AABB::lowerBound [b2Collision.h <197:3 197:12>]
REFERENCE_CALL void b2AABB::Combine(const b2AABB &, const b2AABB &) -> b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) [b2Collision.h <197:16 197:20>]
REFERENCE_USAGE void b2AABB::Combine(const b2AABB &, const b2AABB &) -> b2Vec2 b2AABB::lowerBound [b2Collision.h <197:28 197:37>]
LOCAL_SYMBOL: b2Collision.h<195:29> [b2Collision.h <197:22 197:26>]
REFERENCE_USAGE void b2AABB::Combine(const b2AABB &, const b2AABB &) -> b2Vec2 b2AABB::lowerBound [b2Collision.h <197:46 197:55>]
LOCAL_SYMBOL: b2Collision.h<195:50> [b2Collision.h <197:40 197:44>]
REFERENCE_CALL void b2AABB::Combine(const b2AABB &, const b2AABB &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Collision.h <198:14 198:14>]
REFERENCE_USAGE void b2AABB::Combine(const b2AABB &, const b2AABB &) -> b2Vec2 b2AABB::upperBound [b2Collision.h <198:3 198:12>]
REFERENCE_CALL void b2AABB::Combine(const b2AABB &, const b2AABB &) -> b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) [b2Collision.h <198:16 198:20>]
REFERENCE_USAGE void b2AABB::Combine(const b2AABB &, const b2AABB &) -> b2Vec2 b2AABB::upperBound [b2Collision.h <198:28 198:37>]
LOCAL_SYMBOL: b2Collision.h<195:29> [b2Collision.h <198:22 198:26>]
REFERENCE_USAGE void b2AABB::Combine(const b2AABB &, const b2AABB &) -> b2Vec2 b2AABB::upperBound [b2Collision.h <198:46 198:55>]
LOCAL_SYMBOL: b2Collision.h<195:50> [b2Collision.h <198:40 198:44>]
SYMBOL_METHOD public bool b2AABB::Contains(const b2AABB &) const [b2Collision.h <202:2 <202:7 202:14> 210:2>]
REFERENCE_TYPE_USAGE bool b2AABB::Contains(const b2AABB &) const -> bool [b2Collision.h <202:2 202:5>]
LOCAL_SYMBOL: b2Collision.h<202:30> [b2Collision.h <202:30 202:33>]
REFERENCE_TYPE_USAGE bool b2AABB::Contains(const b2AABB &) const -> b2AABB [b2Collision.h <202:22 202:27>]
LOCAL_SYMBOL: b2Collision.h<204:8> [b2Collision.h <204:8 204:13>]
REFERENCE_TYPE_USAGE bool b2AABB::Contains(const b2AABB &) const -> bool [b2Collision.h <204:3 204:6>]
LOCAL_SYMBOL: b2Collision.h<204:8> [b2Collision.h <205:3 205:8>]
LOCAL_SYMBOL: b2Collision.h<204:8> [b2Collision.h <205:12 205:17>]
REFERENCE_USAGE bool b2AABB::Contains(const b2AABB &) const -> float32 b2Vec2::x [b2Collision.h <205:33 205:33>]
REFERENCE_USAGE bool b2AABB::Contains(const b2AABB &) const -> b2Vec2 b2AABB::lowerBound [b2Collision.h <205:22 205:31>]
REFERENCE_USAGE bool b2AABB::Contains(const b2AABB &) const -> float32 b2Vec2::x [b2Collision.h <205:54 205:54>]
REFERENCE_USAGE bool b2AABB::Contains(const b2AABB &) const -> b2Vec2 b2AABB::lowerBound [b2Collision.h <205:43 205:52>]
LOCAL_SYMBOL: b2Collision.h<202:30> [b2Collision.h <205:38 205:41>]
LOCAL_SYMBOL: b2Collision.h<204:8> [b2Collision.h <206:3 206:8>]
LOCAL_SYMBOL: b2Collision.h<204:8> [b2Collision.h <206:12 206:17>]
REFERENCE_USAGE bool b2AABB::Contains(const b2AABB &) const -> float32 b2Vec2::y [b2Collision.h <206:33 206:33>]
REFERENCE_USAGE bool b2AABB::Contains(const b2AABB &) const -> b2Vec2 b2AABB::lowerBound [b2Collision.h <206:22 206:31>]
REFERENCE_USAGE bool b2AABB::Contains(const b2AABB &) const -> float32 b2Vec2::y [b2Collision.h <206:54 206:54>]
REFERENCE_USAGE bool b2AABB::Contains(const b2AABB &) const -> b2Vec2 b2AABB::lowerBound [b2Collision.h <206:43 206:52>]
LOCAL_SYMBOL: b2Collision.h<202:30> [b2Collision.h <206:38 206:41>]
LOCAL_SYMBOL: b2Collision.h<204:8> [b2Collision.h <207:3 207:8>]
LOCAL_SYMBOL: b2Collision.h<204:8> [b2Collision.h <207:12 207:17>]
REFERENCE_USAGE bool b2AABB::Contains(const b2AABB &) const -> float32 b2Vec2::x [b2Collision.h <207:38 207:38>]
REFERENCE_USAGE bool b2AABB::Contains(const b2AABB &) const -> b2Vec2 b2AABB::upperBound [b2Collision.h <207:27 207:36>]
LOCAL_SYMBOL: b2Collision.h<202:30> [b2Collision.h <207:22 207:25>]
REFERENCE_USAGE bool b2AABB::Contains(const b2AABB &) const -> float32 b2Vec2::x [b2Collision.h <207:54 207:54>]
REFERENCE_USAGE bool b2AABB::Contains(const b2AABB &) const -> b2Vec2 b2AABB::upperBound [b2Collision.h <207:43 207:52>]
LOCAL_SYMBOL: b2Collision.h<204:8> [b2Collision.h <208:3 208:8>]
LOCAL_SYMBOL: b2Collision.h<204:8> [b2Collision.h <208:12 208:17>]
REFERENCE_USAGE bool b2AABB::Contains(const b2AABB &) const -> float32 b2Vec2::y [b2Collision.h <208:38 208:38>]
REFERENCE_USAGE bool b2AABB::Contains(const b2AABB &) const -> b2Vec2 b2AABB::upperBound [b2Collision.h <208:27 208:36>]
LOCAL_SYMBOL: b2Collision.h<202:30> [b2Collision.h <208:22 208:25>]
REFERENCE_USAGE bool b2AABB::Contains(const b2AABB &) const -> float32 b2Vec2::y [b2Collision.h <208:54 208:54>]
REFERENCE_USAGE bool b2AABB::Contains(const b2AABB &) const -> b2Vec2 b2AABB::upperBound [b2Collision.h <208:43 208:52>]
LOCAL_SYMBOL: b2Collision.h<204:8> [b2Collision.h <209:10 209:15>]
SYMBOL_METHOD public bool b2AABB::RayCast(b2RayCastOutput *, const b2RayCastInput &) const [b2Collision.h <212:7 212:13>]
REFERENCE_TYPE_USAGE bool b2AABB::RayCast(b2RayCastOutput *, const b2RayCastInput &) const -> bool [b2Collision.h <212:2 212:5>]
LOCAL_SYMBOL: b2Collision.h<212:32> [b2Collision.h <212:32 212:37>]
REFERENCE_TYPE_USAGE bool b2AABB::RayCast(b2RayCastOutput *, const b2RayCastInput &) const -> b2RayCastOutput [b2Collision.h <212:15 212:29>]
LOCAL_SYMBOL: b2Collision.h<212:62> [b2Collision.h <212:62 212:66>]
REFERENCE_TYPE_USAGE bool b2AABB::RayCast(b2RayCastOutput *, const b2RayCastInput &) const -> b2RayCastInput [b2Collision.h <212:46 212:59>]
SYMBOL_FIELD public b2Vec2 b2AABB::lowerBound [b2Collision.h <214:9 214:18>]
REFERENCE_TYPE_USAGE b2Vec2 b2AABB::lowerBound -> b2Vec2 [b2Collision.h <214:2 214:7>]
SYMBOL_FIELD public b2Vec2 b2AABB::upperBound [b2Collision.h <215:9 215:18>]
REFERENCE_TYPE_USAGE b2Vec2 b2AABB::upperBound -> b2Vec2 [b2Collision.h <215:2 215:7>]
SYMBOL_FUNCTION void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) [b2Collision.h <219:6 219:21>]
REFERENCE_TYPE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> void [b2Collision.h <219:1 219:4>]
LOCAL_SYMBOL: b2Collision.h<219:35> [b2Collision.h <219:35 219:42>]
REFERENCE_TYPE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Manifold [b2Collision.h <219:23 219:32>]
LOCAL_SYMBOL: b2Collision.h<220:29> [b2Collision.h <220:29 220:35>]
REFERENCE_TYPE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2CircleShape [b2Collision.h <220:14 220:26>]
LOCAL_SYMBOL: b2Collision.h<220:57> [b2Collision.h <220:57 220:59>]
REFERENCE_TYPE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Transform [b2Collision.h <220:44 220:54>]
LOCAL_SYMBOL: b2Collision.h<221:29> [b2Collision.h <221:29 221:35>]
REFERENCE_TYPE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2CircleShape [b2Collision.h <221:14 221:26>]
LOCAL_SYMBOL: b2Collision.h<221:57> [b2Collision.h <221:57 221:59>]
REFERENCE_TYPE_USAGE void b2CollideCircles(b2Manifold *, const b2CircleShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Transform [b2Collision.h <221:44 221:54>]
SYMBOL_FUNCTION void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) [b2Collision.h <224:6 224:30>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> void [b2Collision.h <224:1 224:4>]
LOCAL_SYMBOL: b2Collision.h<224:44> [b2Collision.h <224:44 224:51>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Manifold [b2Collision.h <224:32 224:41>]
LOCAL_SYMBOL: b2Collision.h<225:33> [b2Collision.h <225:33 225:40>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2PolygonShape [b2Collision.h <225:17 225:30>]
LOCAL_SYMBOL: b2Collision.h<225:62> [b2Collision.h <225:62 225:64>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Transform [b2Collision.h <225:49 225:59>]
LOCAL_SYMBOL: b2Collision.h<226:32> [b2Collision.h <226:32 226:38>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2CircleShape [b2Collision.h <226:17 226:29>]
LOCAL_SYMBOL: b2Collision.h<226:60> [b2Collision.h <226:60 226:62>]
REFERENCE_TYPE_USAGE void b2CollidePolygonAndCircle(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Transform [b2Collision.h <226:47 226:57>]
SYMBOL_FUNCTION void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) [b2Collision.h <229:6 229:22>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void [b2Collision.h <229:1 229:4>]
LOCAL_SYMBOL: b2Collision.h<229:36> [b2Collision.h <229:36 229:43>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Manifold [b2Collision.h <229:24 229:33>]
LOCAL_SYMBOL: b2Collision.h<230:31> [b2Collision.h <230:31 230:38>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2PolygonShape [b2Collision.h <230:15 230:28>]
LOCAL_SYMBOL: b2Collision.h<230:60> [b2Collision.h <230:60 230:62>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform [b2Collision.h <230:47 230:57>]
LOCAL_SYMBOL: b2Collision.h<231:31> [b2Collision.h <231:31 231:38>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2PolygonShape [b2Collision.h <231:15 231:28>]
LOCAL_SYMBOL: b2Collision.h<231:60> [b2Collision.h <231:60 231:62>]
REFERENCE_TYPE_USAGE void b2CollidePolygons(b2Manifold *, const b2PolygonShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform [b2Collision.h <231:47 231:57>]
SYMBOL_FUNCTION void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) [b2Collision.h <234:6 234:27>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> void [b2Collision.h <234:1 234:4>]
LOCAL_SYMBOL: b2Collision.h<234:41> [b2Collision.h <234:41 234:48>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Manifold [b2Collision.h <234:29 234:38>]
LOCAL_SYMBOL: b2Collision.h<235:30> [b2Collision.h <235:30 235:37>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2EdgeShape [b2Collision.h <235:17 235:27>]
LOCAL_SYMBOL: b2Collision.h<235:59> [b2Collision.h <235:59 235:61>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Transform [b2Collision.h <235:46 235:56>]
LOCAL_SYMBOL: b2Collision.h<236:32> [b2Collision.h <236:32 236:38>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2CircleShape [b2Collision.h <236:17 236:29>]
LOCAL_SYMBOL: b2Collision.h<236:60> [b2Collision.h <236:60 236:62>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &) -> b2Transform [b2Collision.h <236:47 236:57>]
SYMBOL_FUNCTION void b2CollideEdgeAndPolygon(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) [b2Collision.h <239:6 239:28>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndPolygon(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> void [b2Collision.h <239:1 239:4>]
LOCAL_SYMBOL: b2Collision.h<239:42> [b2Collision.h <239:42 239:49>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndPolygon(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Manifold [b2Collision.h <239:30 239:39>]
LOCAL_SYMBOL: b2Collision.h<240:30> [b2Collision.h <240:30 240:34>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndPolygon(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2EdgeShape [b2Collision.h <240:17 240:27>]
LOCAL_SYMBOL: b2Collision.h<240:56> [b2Collision.h <240:56 240:58>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndPolygon(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform [b2Collision.h <240:43 240:53>]
LOCAL_SYMBOL: b2Collision.h<241:33> [b2Collision.h <241:33 241:39>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndPolygon(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2PolygonShape [b2Collision.h <241:17 241:30>]
LOCAL_SYMBOL: b2Collision.h<241:61> [b2Collision.h <241:61 241:63>]
REFERENCE_TYPE_USAGE void b2CollideEdgeAndPolygon(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) -> b2Transform [b2Collision.h <241:48 241:58>]
SYMBOL_FUNCTION int32 b2ClipSegmentToLine(b2ClipVertex [], const b2ClipVertex [] const, const b2Vec2 &, float32, int32) [b2Collision.h <244:7 244:25>]
REFERENCE_TYPE_USAGE int32 b2ClipSegmentToLine(b2ClipVertex [], const b2ClipVertex [] const, const b2Vec2 &, float32, int32) -> int32 [b2Collision.h <244:1 244:5>]
LOCAL_SYMBOL: b2Collision.h<244:40> [b2Collision.h <244:40 244:43>]
REFERENCE_TYPE_USAGE int32 b2ClipSegmentToLine(b2ClipVertex [], const b2ClipVertex [] const, const b2Vec2 &, float32, int32) -> b2ClipVertex [b2Collision.h <244:27 244:38>]
LOCAL_SYMBOL: b2Collision.h<244:68> [b2Collision.h <244:68 244:70>]
REFERENCE_TYPE_USAGE int32 b2ClipSegmentToLine(b2ClipVertex [], const b2ClipVertex [] const, const b2Vec2 &, float32, int32) -> b2ClipVertex [b2Collision.h <244:55 244:66>]
LOCAL_SYMBOL: b2Collision.h<245:22> [b2Collision.h <245:22 245:27>]
REFERENCE_TYPE_USAGE int32 b2ClipSegmentToLine(b2ClipVertex [], const b2ClipVertex [] const, const b2Vec2 &, float32, int32) -> b2Vec2 [b2Collision.h <245:14 245:19>]
LOCAL_SYMBOL: b2Collision.h<245:38> [b2Collision.h <245:38 245:43>]
REFERENCE_TYPE_USAGE int32 b2ClipSegmentToLine(b2ClipVertex [], const b2ClipVertex [] const, const b2Vec2 &, float32, int32) -> float32 [b2Collision.h <245:30 245:36>]
LOCAL_SYMBOL: b2Collision.h<245:52> [b2Collision.h <245:52 245:63>]
REFERENCE_TYPE_USAGE int32 b2ClipSegmentToLine(b2ClipVertex [], const b2ClipVertex [] const, const b2Vec2 &, float32, int32) -> int32 [b2Collision.h <245:46 245:50>]
SYMBOL_FUNCTION bool b2TestOverlap(const b2Shape *, int32, const b2Shape *, int32, const b2Transform &, const b2Transform &) [b2Collision.h <248:6 248:18>]
REFERENCE_TYPE_USAGE bool b2TestOverlap(const b2Shape *, int32, const b2Shape *, int32, const b2Transform &, const b2Transform &) -> bool [b2Collision.h <248:1 248:4>]
LOCAL_SYMBOL: b2Collision.h<248:36> [b2Collision.h <248:36 248:41>]
REFERENCE_TYPE_USAGE bool b2TestOverlap(const b2Shape *, int32, const b2Shape *, int32, const b2Transform &, const b2Transform &) -> b2Shape [b2Collision.h <248:27 248:33>]
LOCAL_SYMBOL: b2Collision.h<248:50> [b2Collision.h <248:50 248:55>]
REFERENCE_TYPE_USAGE bool b2TestOverlap(const b2Shape *, int32, const b2Shape *, int32, const b2Transform &, const b2Transform &) -> int32 [b2Collision.h <248:44 248:48>]
LOCAL_SYMBOL: b2Collision.h<249:21> [b2Collision.h <249:21 249:26>]
REFERENCE_TYPE_USAGE bool b2TestOverlap(const b2Shape *, int32, const b2Shape *, int32, const b2Transform &, const b2Transform &) -> b2Shape [b2Collision.h <249:12 249:18>]
LOCAL_SYMBOL: b2Collision.h<249:35> [b2Collision.h <249:35 249:40>]
REFERENCE_TYPE_USAGE bool b2TestOverlap(const b2Shape *, int32, const b2Shape *, int32, const b2Transform &, const b2Transform &) -> int32 [b2Collision.h <249:29 249:33>]
LOCAL_SYMBOL: b2Collision.h<250:25> [b2Collision.h <250:25 250:27>]
REFERENCE_TYPE_USAGE bool b2TestOverlap(const b2Shape *, int32, const b2Shape *, int32, const b2Transform &, const b2Transform &) -> b2Transform [b2Collision.h <250:12 250:22>]
LOCAL_SYMBOL: b2Collision.h<250:49> [b2Collision.h <250:49 250:51>]
REFERENCE_TYPE_USAGE bool b2TestOverlap(const b2Shape *, int32, const b2Shape *, int32, const b2Transform &, const b2Transform &) -> b2Transform [b2Collision.h <250:36 250:46>]
SYMBOL_METHOD public bool b2AABB::IsValid() const [b2Collision.h <254:1 <254:21 254:27> 260:1>]
SYMBOL_STRUCT b2AABB
QUALIFIER: b2AABB [b2Collision.h <254:13 254:18>]
REFERENCE_TYPE_USAGE bool b2AABB::IsValid() const -> bool [b2Collision.h <254:8 254:11>]
LOCAL_SYMBOL: b2Collision.h<256:9> [b2Collision.h <256:9 256:9>]
REFERENCE_TYPE_USAGE bool b2AABB::IsValid() const -> b2Vec2 [b2Collision.h <256:2 256:7>]
REFERENCE_CALL bool b2AABB::IsValid() const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Collision.h <256:24 256:24>]
REFERENCE_USAGE bool b2AABB::IsValid() const -> b2Vec2 b2AABB::upperBound [b2Collision.h <256:13 256:22>]
REFERENCE_USAGE bool b2AABB::IsValid() const -> b2Vec2 b2AABB::lowerBound [b2Collision.h <256:26 256:35>]
LOCAL_SYMBOL: b2Collision.h<257:7> [b2Collision.h <257:7 257:11>]
REFERENCE_TYPE_USAGE bool b2AABB::IsValid() const -> bool [b2Collision.h <257:2 257:5>]
REFERENCE_USAGE bool b2AABB::IsValid() const -> float32 b2Vec2::x [b2Collision.h <257:17 257:17>]
LOCAL_SYMBOL: b2Collision.h<256:9> [b2Collision.h <257:15 257:15>]
REFERENCE_USAGE bool b2AABB::IsValid() const -> float32 b2Vec2::y [b2Collision.h <257:32 257:32>]
LOCAL_SYMBOL: b2Collision.h<256:9> [b2Collision.h <257:30 257:30>]
LOCAL_SYMBOL: b2Collision.h<257:7> [b2Collision.h <258:2 258:6>]
LOCAL_SYMBOL: b2Collision.h<257:7> [b2Collision.h <258:10 258:14>]
SYMBOL_FUNCTION bool b2Vec2::IsValid() const
REFERENCE_CALL bool b2AABB::IsValid() const -> bool b2Vec2::IsValid() const [b2Collision.h <258:30 258:36>]
REFERENCE_USAGE bool b2AABB::IsValid() const -> b2Vec2 b2AABB::lowerBound [b2Collision.h <258:19 258:28>]
REFERENCE_CALL bool b2AABB::IsValid() const -> bool b2Vec2::IsValid() const [b2Collision.h <258:54 258:60>]
REFERENCE_USAGE bool b2AABB::IsValid() const -> b2Vec2 b2AABB::upperBound [b2Collision.h <258:43 258:52>]
LOCAL_SYMBOL: b2Collision.h<257:7> [b2Collision.h <259:9 259:13>]
SYMBOL_FUNCTION bool b2TestOverlap(const b2AABB &, const b2AABB &) [b2Collision.h <262:1 <262:13 262:25> 275:1>]
REFERENCE_TYPE_USAGE bool b2TestOverlap(const b2AABB &, const b2AABB &) -> bool [b2Collision.h <262:8 262:11>]
LOCAL_SYMBOL: b2Collision.h<262:41> [b2Collision.h <262:41 262:41>]
REFERENCE_TYPE_USAGE bool b2TestOverlap(const b2AABB &, const b2AABB &) -> b2AABB [b2Collision.h <262:33 262:38>]
LOCAL_SYMBOL: b2Collision.h<262:58> [b2Collision.h <262:58 262:58>]
REFERENCE_TYPE_USAGE bool b2TestOverlap(const b2AABB &, const b2AABB &) -> b2AABB [b2Collision.h <262:50 262:55>]
LOCAL_SYMBOL: b2Collision.h<264:9> [b2Collision.h <264:9 264:10>]
REFERENCE_TYPE_USAGE bool b2TestOverlap(const b2AABB &, const b2AABB &) -> b2Vec2 [b2Collision.h <264:2 264:7>]
REFERENCE_CALL bool b2TestOverlap(const b2AABB &, const b2AABB &) -> void b2Vec2::b2Vec2() [b2Collision.h <264:9 264:10>]
LOCAL_SYMBOL: b2Collision.h<264:13> [b2Collision.h <264:13 264:14>]
REFERENCE_CALL bool b2TestOverlap(const b2AABB &, const b2AABB &) -> void b2Vec2::b2Vec2() [b2Collision.h <264:13 264:14>]
REFERENCE_CALL bool b2TestOverlap(const b2AABB &, const b2AABB &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Collision.h <265:5 265:5>]
LOCAL_SYMBOL: b2Collision.h<264:9> [b2Collision.h <265:2 265:3>]
REFERENCE_CALL bool b2TestOverlap(const b2AABB &, const b2AABB &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Collision.h <265:20 265:20>]
REFERENCE_USAGE bool b2TestOverlap(const b2AABB &, const b2AABB &) -> b2Vec2 b2AABB::lowerBound [b2Collision.h <265:9 265:18>]
LOCAL_SYMBOL: b2Collision.h<262:58> [b2Collision.h <265:7 265:7>]
REFERENCE_USAGE bool b2TestOverlap(const b2AABB &, const b2AABB &) -> b2Vec2 b2AABB::upperBound [b2Collision.h <265:24 265:33>]
LOCAL_SYMBOL: b2Collision.h<262:41> [b2Collision.h <265:22 265:22>]
REFERENCE_CALL bool b2TestOverlap(const b2AABB &, const b2AABB &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Collision.h <266:5 266:5>]
LOCAL_SYMBOL: b2Collision.h<264:13> [b2Collision.h <266:2 266:3>]
REFERENCE_CALL bool b2TestOverlap(const b2AABB &, const b2AABB &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Collision.h <266:20 266:20>]
REFERENCE_USAGE bool b2TestOverlap(const b2AABB &, const b2AABB &) -> b2Vec2 b2AABB::lowerBound [b2Collision.h <266:9 266:18>]
LOCAL_SYMBOL: b2Collision.h<262:41> [b2Collision.h <266:7 266:7>]
REFERENCE_USAGE bool b2TestOverlap(const b2AABB &, const b2AABB &) -> b2Vec2 b2AABB::upperBound [b2Collision.h <266:24 266:33>]
LOCAL_SYMBOL: b2Collision.h<262:58> [b2Collision.h <266:22 266:22>]
REFERENCE_USAGE bool b2TestOverlap(const b2AABB &, const b2AABB &) -> float32 b2Vec2::x [b2Collision.h <268:9 268:9>]
LOCAL_SYMBOL: b2Collision.h<264:9> [b2Collision.h <268:6 268:7>]
REFERENCE_USAGE bool b2TestOverlap(const b2AABB &, const b2AABB &) -> float32 b2Vec2::y [b2Collision.h <268:24 268:24>]
LOCAL_SYMBOL: b2Collision.h<264:9> [b2Collision.h <268:21 268:22>]
REFERENCE_USAGE bool b2TestOverlap(const b2AABB &, const b2AABB &) -> float32 b2Vec2::x [b2Collision.h <271:9 271:9>]
LOCAL_SYMBOL: b2Collision.h<264:13> [b2Collision.h <271:6 271:7>]
REFERENCE_USAGE bool b2TestOverlap(const b2AABB &, const b2AABB &) -> float32 b2Vec2::y [b2Collision.h <271:24 271:24>]
LOCAL_SYMBOL: b2Collision.h<264:13> [b2Collision.h <271:21 271:22>]
SYMBOL_STRUCT b2MassData [b2Shape.h <27:1 <27:8 27:17> 37:1>]
SYMBOL_FIELD public float32 b2MassData::mass [b2Shape.h <30:10 30:13>]
REFERENCE_TYPE_USAGE float32 b2MassData::mass -> float32 [b2Shape.h <30:2 30:8>]
SYMBOL_FIELD public b2Vec2 b2MassData::center [b2Shape.h <33:9 33:14>]
REFERENCE_TYPE_USAGE b2Vec2 b2MassData::center -> b2Vec2 [b2Shape.h <33:2 33:7>]
SYMBOL_FIELD public float32 b2MassData::I [b2Shape.h <36:10 36:10>]
REFERENCE_TYPE_USAGE float32 b2MassData::I -> float32 [b2Shape.h <36:2 36:8>]
SYMBOL_CLASS b2Shape [b2Shape.h <42:1 <42:7 42:13> 97:1>]
SYMBOL_ENUM public b2Shape::Type [b2Shape.h <46:2 <46:7 46:10> 53:2>]
SYMBOL_ENUM_CONSTANT b2Shape::Type::e_circle [b2Shape.h <48:3 48:10>]
SYMBOL_ENUM_CONSTANT b2Shape::Type::e_edge [b2Shape.h <49:3 49:8>]
SYMBOL_ENUM_CONSTANT b2Shape::Type::e_polygon [b2Shape.h <50:3 50:11>]
SYMBOL_ENUM_CONSTANT b2Shape::Type::e_chain [b2Shape.h <51:3 51:9>]
SYMBOL_ENUM_CONSTANT b2Shape::Type::e_typeCount [b2Shape.h <52:3 52:13>]
SYMBOL_METHOD public void b2Shape::~b2Shape() [b2Shape.h <55:2 <55:10 55:17> 55:22>]
SYMBOL_METHOD public b2Shape * b2Shape::Clone(b2BlockAllocator *) const [b2Shape.h <58:19 58:23>]
REFERENCE_TYPE_USAGE b2Shape * b2Shape::Clone(b2BlockAllocator *) const -> b2Shape [b2Shape.h <58:10 58:16>]
LOCAL_SYMBOL: b2Shape.h<58:43> [b2Shape.h <58:43 58:51>]
REFERENCE_TYPE_USAGE b2Shape * b2Shape::Clone(b2BlockAllocator *) const -> b2BlockAllocator [b2Shape.h <58:25 58:40>]
SYMBOL_METHOD public b2Shape::Type b2Shape::GetType() const [b2Shape.h <62:7 62:13>]
REFERENCE_TYPE_USAGE b2Shape::Type b2Shape::GetType() const -> b2Shape::Type [b2Shape.h <62:2 62:5>]
SYMBOL_METHOD public int32 b2Shape::GetChildCount() const [b2Shape.h <65:16 65:28>]
REFERENCE_TYPE_USAGE int32 b2Shape::GetChildCount() const -> int32 [b2Shape.h <65:10 65:14>]
SYMBOL_METHOD public bool b2Shape::TestPoint(const b2Transform &, const b2Vec2 &) const [b2Shape.h <70:15 70:23>]
REFERENCE_TYPE_USAGE bool b2Shape::TestPoint(const b2Transform &, const b2Vec2 &) const -> bool [b2Shape.h <70:10 70:13>]
LOCAL_SYMBOL: b2Shape.h<70:44> [b2Shape.h <70:44 70:45>]
REFERENCE_TYPE_USAGE bool b2Shape::TestPoint(const b2Transform &, const b2Vec2 &) const -> b2Transform [b2Shape.h <70:31 70:41>]
LOCAL_SYMBOL: b2Shape.h<70:62> [b2Shape.h <70:62 70:62>]
REFERENCE_TYPE_USAGE bool b2Shape::TestPoint(const b2Transform &, const b2Vec2 &) const -> b2Vec2 [b2Shape.h <70:54 70:59>]
SYMBOL_METHOD public bool b2Shape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const [b2Shape.h <77:15 77:21>]
REFERENCE_TYPE_USAGE bool b2Shape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> bool [b2Shape.h <77:10 77:13>]
LOCAL_SYMBOL: b2Shape.h<77:40> [b2Shape.h <77:40 77:45>]
REFERENCE_TYPE_USAGE bool b2Shape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2RayCastOutput [b2Shape.h <77:23 77:37>]
LOCAL_SYMBOL: b2Shape.h<77:70> [b2Shape.h <77:70 77:74>]
REFERENCE_TYPE_USAGE bool b2Shape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2RayCastInput [b2Shape.h <77:54 77:67>]
LOCAL_SYMBOL: b2Shape.h<78:26> [b2Shape.h <78:26 78:34>]
REFERENCE_TYPE_USAGE bool b2Shape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Transform [b2Shape.h <78:13 78:23>]
LOCAL_SYMBOL: b2Shape.h<78:43> [b2Shape.h <78:43 78:52>]
REFERENCE_TYPE_USAGE bool b2Shape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> int32 [b2Shape.h <78:37 78:41>]
SYMBOL_METHOD public void b2Shape::ComputeAABB(b2AABB *, const b2Transform &, int32) const [b2Shape.h <84:15 84:25>]
REFERENCE_TYPE_USAGE void b2Shape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> void [b2Shape.h <84:10 84:13>]
LOCAL_SYMBOL: b2Shape.h<84:35> [b2Shape.h <84:35 84:38>]
REFERENCE_TYPE_USAGE void b2Shape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2AABB [b2Shape.h <84:27 84:32>]
LOCAL_SYMBOL: b2Shape.h<84:60> [b2Shape.h <84:60 84:61>]
REFERENCE_TYPE_USAGE void b2Shape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Transform [b2Shape.h <84:47 84:57>]
LOCAL_SYMBOL: b2Shape.h<84:70> [b2Shape.h <84:70 84:79>]
REFERENCE_TYPE_USAGE void b2Shape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> int32 [b2Shape.h <84:64 84:68>]
SYMBOL_METHOD public void b2Shape::ComputeMass(b2MassData *, float32) const [b2Shape.h <90:15 90:25>]
REFERENCE_TYPE_USAGE void b2Shape::ComputeMass(b2MassData *, float32) const -> void [b2Shape.h <90:10 90:13>]
LOCAL_SYMBOL: b2Shape.h<90:39> [b2Shape.h <90:39 90:46>]
REFERENCE_TYPE_USAGE void b2Shape::ComputeMass(b2MassData *, float32) const -> b2MassData [b2Shape.h <90:27 90:36>]
LOCAL_SYMBOL: b2Shape.h<90:57> [b2Shape.h <90:57 90:63>]
REFERENCE_TYPE_USAGE void b2Shape::ComputeMass(b2MassData *, float32) const -> float32 [b2Shape.h <90:49 90:55>]
SYMBOL_FIELD public b2Shape::Type b2Shape::m_type [b2Shape.h <92:7 92:12>]
REFERENCE_TYPE_USAGE b2Shape::Type b2Shape::m_type -> b2Shape::Type [b2Shape.h <92:2 92:5>]
SYMBOL_FIELD public float32 b2Shape::m_radius [b2Shape.h <96:10 96:17>]
REFERENCE_TYPE_USAGE float32 b2Shape::m_radius -> float32 [b2Shape.h <96:2 96:8>]
SYMBOL_METHOD public b2Shape & b2Shape::operator=(const b2Shape &) [b2Shape.h <42:7 <42:7 42:13> 42:13>]
REFERENCE_USAGE b2Shape & b2Shape::operator=(const b2Shape &) -> b2Shape::Type b2Shape::m_type [b2Shape.h <42:7 42:13>]
LOCAL_SYMBOL: b2Shape.h<42:7> [b2Shape.h <42:7 42:13>]
REFERENCE_USAGE b2Shape & b2Shape::operator=(const b2Shape &) -> float32 b2Shape::m_radius [b2Shape.h <42:7 42:13>]
SYMBOL_METHOD public void b2Shape::b2Shape(const b2Shape &) [b2Shape.h <42:7 42:13>]
SYMBOL_METHOD public void b2Shape::b2Shape() [b2Shape.h <42:7 <42:7 42:13> 42:13>]
SYMBOL_METHOD public b2Shape::Type b2Shape::GetType() const [b2Shape.h <99:1 <99:31 99:37> 102:1>]
SYMBOL_CLASS b2Shape
QUALIFIER: b2Shape [b2Shape.h <99:22 99:28>]
QUALIFIER: b2Shape [b2Shape.h <99:8 99:14>]
REFERENCE_TYPE_USAGE b2Shape::Type b2Shape::GetType() const -> b2Shape::Type [b2Shape.h <99:17 99:20>]
REFERENCE_USAGE b2Shape::Type b2Shape::GetType() const -> b2Shape::Type b2Shape::m_type [b2Shape.h <101:9 101:14>]
SYMBOL_CLASS b2PolygonShape [b2PolygonShape.h <28:1 <28:7 28:20> 79:1>]
REFERENCE_INHERITANCE b2PolygonShape -> b2Shape [b2PolygonShape.h <28:31 28:37>]
SYMBOL_METHOD public void b2PolygonShape::b2PolygonShape() [b2PolygonShape.h <31:2 31:15>]
SYMBOL_METHOD public b2Shape * b2PolygonShape::Clone(b2BlockAllocator *) const [b2PolygonShape.h <34:11 34:15>]
SYMBOL_FUNCTION b2Shape * b2Shape::Clone(b2BlockAllocator *) const
REFERENCE_OVERRIDE b2Shape * b2PolygonShape::Clone(b2BlockAllocator *) const -> b2Shape * b2Shape::Clone(b2BlockAllocator *) const [b2PolygonShape.h <34:11 34:15>]
REFERENCE_TYPE_USAGE b2Shape * b2PolygonShape::Clone(b2BlockAllocator *) const -> b2Shape [b2PolygonShape.h <34:2 34:8>]
LOCAL_SYMBOL: b2PolygonShape.h<34:35> [b2PolygonShape.h <34:35 34:43>]
REFERENCE_TYPE_USAGE b2Shape * b2PolygonShape::Clone(b2BlockAllocator *) const -> b2BlockAllocator [b2PolygonShape.h <34:17 34:32>]
SYMBOL_METHOD public int32 b2PolygonShape::GetChildCount() const [b2PolygonShape.h <37:8 37:20>]
SYMBOL_FUNCTION int32 b2Shape::GetChildCount() const
REFERENCE_OVERRIDE int32 b2PolygonShape::GetChildCount() const -> int32 b2Shape::GetChildCount() const [b2PolygonShape.h <37:8 37:20>]
REFERENCE_TYPE_USAGE int32 b2PolygonShape::GetChildCount() const -> int32 [b2PolygonShape.h <37:2 37:6>]
SYMBOL_METHOD public void b2PolygonShape::Set(const b2Vec2 *, int32) [b2PolygonShape.h <44:7 44:9>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> void [b2PolygonShape.h <44:2 44:5>]
LOCAL_SYMBOL: b2PolygonShape.h<44:25> [b2PolygonShape.h <44:25 44:30>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> b2Vec2 [b2PolygonShape.h <44:17 44:22>]
LOCAL_SYMBOL: b2PolygonShape.h<44:39> [b2PolygonShape.h <44:39 44:43>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> int32 [b2PolygonShape.h <44:33 44:37>]
SYMBOL_METHOD public void b2PolygonShape::SetAsBox(float32, float32) [b2PolygonShape.h <49:7 49:14>]
REFERENCE_TYPE_USAGE void b2PolygonShape::SetAsBox(float32, float32) -> void [b2PolygonShape.h <49:2 49:5>]
LOCAL_SYMBOL: b2PolygonShape.h<49:24> [b2PolygonShape.h <49:24 49:25>]
REFERENCE_TYPE_USAGE void b2PolygonShape::SetAsBox(float32, float32) -> float32 [b2PolygonShape.h <49:16 49:22>]
LOCAL_SYMBOL: b2PolygonShape.h<49:36> [b2PolygonShape.h <49:36 49:37>]
REFERENCE_TYPE_USAGE void b2PolygonShape::SetAsBox(float32, float32) -> float32 [b2PolygonShape.h <49:28 49:34>]
SYMBOL_METHOD public void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) [b2PolygonShape.h <56:7 56:14>]
REFERENCE_TYPE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> void [b2PolygonShape.h <56:2 56:5>]
LOCAL_SYMBOL: b2PolygonShape.h<56:24> [b2PolygonShape.h <56:24 56:25>]
REFERENCE_TYPE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> float32 [b2PolygonShape.h <56:16 56:22>]
LOCAL_SYMBOL: b2PolygonShape.h<56:36> [b2PolygonShape.h <56:36 56:37>]
REFERENCE_TYPE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> float32 [b2PolygonShape.h <56:28 56:34>]
LOCAL_SYMBOL: b2PolygonShape.h<56:54> [b2PolygonShape.h <56:54 56:59>]
REFERENCE_TYPE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Vec2 [b2PolygonShape.h <56:46 56:51>]
LOCAL_SYMBOL: b2PolygonShape.h<56:70> [b2PolygonShape.h <56:70 56:74>]
REFERENCE_TYPE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> float32 [b2PolygonShape.h <56:62 56:68>]
SYMBOL_METHOD public bool b2PolygonShape::TestPoint(const b2Transform &, const b2Vec2 &) const [b2PolygonShape.h <59:7 59:15>]
SYMBOL_FUNCTION bool b2Shape::TestPoint(const b2Transform &, const b2Vec2 &) const
REFERENCE_OVERRIDE bool b2PolygonShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> bool b2Shape::TestPoint(const b2Transform &, const b2Vec2 &) const [b2PolygonShape.h <59:7 59:15>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> bool [b2PolygonShape.h <59:2 59:5>]
LOCAL_SYMBOL: b2PolygonShape.h<59:36> [b2PolygonShape.h <59:36 59:44>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> b2Transform [b2PolygonShape.h <59:23 59:33>]
LOCAL_SYMBOL: b2PolygonShape.h<59:61> [b2PolygonShape.h <59:61 59:61>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> b2Vec2 [b2PolygonShape.h <59:53 59:58>]
SYMBOL_METHOD public bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const [b2PolygonShape.h <62:7 62:13>]
SYMBOL_FUNCTION bool b2Shape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const
REFERENCE_OVERRIDE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> bool b2Shape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const [b2PolygonShape.h <62:7 62:13>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> bool [b2PolygonShape.h <62:2 62:5>]
LOCAL_SYMBOL: b2PolygonShape.h<62:32> [b2PolygonShape.h <62:32 62:37>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2RayCastOutput [b2PolygonShape.h <62:15 62:29>]
LOCAL_SYMBOL: b2PolygonShape.h<62:62> [b2PolygonShape.h <62:62 62:66>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2RayCastInput [b2PolygonShape.h <62:46 62:59>]
LOCAL_SYMBOL: b2PolygonShape.h<63:25> [b2PolygonShape.h <63:25 63:33>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Transform [b2PolygonShape.h <63:12 63:22>]
LOCAL_SYMBOL: b2PolygonShape.h<63:42> [b2PolygonShape.h <63:42 63:51>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> int32 [b2PolygonShape.h <63:36 63:40>]
SYMBOL_METHOD public void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const [b2PolygonShape.h <66:7 66:17>]
SYMBOL_FUNCTION void b2Shape::ComputeAABB(b2AABB *, const b2Transform &, int32) const
REFERENCE_OVERRIDE void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> void b2Shape::ComputeAABB(b2AABB *, const b2Transform &, int32) const [b2PolygonShape.h <66:7 66:17>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> void [b2PolygonShape.h <66:2 66:5>]
LOCAL_SYMBOL: b2PolygonShape.h<66:27> [b2PolygonShape.h <66:27 66:30>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2AABB [b2PolygonShape.h <66:19 66:24>]
LOCAL_SYMBOL: b2PolygonShape.h<66:52> [b2PolygonShape.h <66:52 66:60>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Transform [b2PolygonShape.h <66:39 66:49>]
LOCAL_SYMBOL: b2PolygonShape.h<66:69> [b2PolygonShape.h <66:69 66:78>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> int32 [b2PolygonShape.h <66:63 66:67>]
SYMBOL_METHOD public void b2PolygonShape::ComputeMass(b2MassData *, float32) const [b2PolygonShape.h <69:7 69:17>]
SYMBOL_FUNCTION void b2Shape::ComputeMass(b2MassData *, float32) const
REFERENCE_OVERRIDE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> void b2Shape::ComputeMass(b2MassData *, float32) const [b2PolygonShape.h <69:7 69:17>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> void [b2PolygonShape.h <69:2 69:5>]
LOCAL_SYMBOL: b2PolygonShape.h<69:31> [b2PolygonShape.h <69:31 69:38>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> b2MassData [b2PolygonShape.h <69:19 69:28>]
LOCAL_SYMBOL: b2PolygonShape.h<69:49> [b2PolygonShape.h <69:49 69:55>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> float32 [b2PolygonShape.h <69:41 69:47>]
SYMBOL_METHOD public bool b2PolygonShape::Validate() const [b2PolygonShape.h <73:7 73:14>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::Validate() const -> bool [b2PolygonShape.h <73:2 73:5>]
SYMBOL_FIELD public b2Vec2 b2PolygonShape::m_centroid [b2PolygonShape.h <75:9 75:18>]
REFERENCE_TYPE_USAGE b2Vec2 b2PolygonShape::m_centroid -> b2Vec2 [b2PolygonShape.h <75:2 75:7>]
SYMBOL_FIELD public b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.h <76:9 76:18>]
REFERENCE_TYPE_USAGE b2Vec2 [] b2PolygonShape::m_vertices -> b2Vec2 [b2PolygonShape.h <76:2 76:7>]
SYMBOL_FIELD public b2Vec2 [] b2PolygonShape::m_normals [b2PolygonShape.h <77:9 77:17>]
REFERENCE_TYPE_USAGE b2Vec2 [] b2PolygonShape::m_normals -> b2Vec2 [b2PolygonShape.h <77:2 77:7>]
SYMBOL_FIELD public int32 b2PolygonShape::m_count [b2PolygonShape.h <78:8 78:14>]
REFERENCE_TYPE_USAGE int32 b2PolygonShape::m_count -> int32 [b2PolygonShape.h <78:2 78:6>]
SYMBOL_METHOD public void b2PolygonShape::b2PolygonShape(const b2PolygonShape &) [b2PolygonShape.h <28:7 28:20>]
SYMBOL_METHOD public void b2PolygonShape::b2PolygonShape(b2PolygonShape &&) [b2PolygonShape.h <28:7 28:20>]
SYMBOL_METHOD public b2PolygonShape & b2PolygonShape::operator=(const b2PolygonShape &) [b2PolygonShape.h <28:7 <28:7 28:20> 28:20>]
SYMBOL_FUNCTION b2Shape & b2Shape::operator=(const b2Shape &)
REFERENCE_CALL b2PolygonShape & b2PolygonShape::operator=(const b2PolygonShape &) -> b2Shape & b2Shape::operator=(const b2Shape &) [b2PolygonShape.h <28:7 28:20>]
QUALIFIER: b2Shape [b2PolygonShape.h <28:7 28:20>]
LOCAL_SYMBOL: b2PolygonShape.h<28:7> [b2PolygonShape.h <28:7 28:20>]
REFERENCE_CALL b2PolygonShape & b2PolygonShape::operator=(const b2PolygonShape &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PolygonShape.h <28:7 28:20>]
SYMBOL_STRUCT b2Vec2
QUALIFIER: b2Vec2 [b2PolygonShape.h <28:7 28:20>]
REFERENCE_USAGE b2PolygonShape & b2PolygonShape::operator=(const b2PolygonShape &) -> b2Vec2 b2PolygonShape::m_centroid [b2PolygonShape.h <28:7 28:20>]
SYMBOL_FUNCTION void * __builtin_memcpy(void *, const void *, unsigned long long)
REFERENCE_CALL b2PolygonShape & b2PolygonShape::operator=(const b2PolygonShape &) -> void * __builtin_memcpy(void *, const void *, unsigned long long) [b2PolygonShape.h <28:7 28:20>]
REFERENCE_USAGE b2PolygonShape & b2PolygonShape::operator=(const b2PolygonShape &) -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.h <28:7 28:20>]
REFERENCE_USAGE b2PolygonShape & b2PolygonShape::operator=(const b2PolygonShape &) -> b2Vec2 [] b2PolygonShape::m_normals [b2PolygonShape.h <28:7 28:20>]
REFERENCE_USAGE b2PolygonShape & b2PolygonShape::operator=(const b2PolygonShape &) -> int32 b2PolygonShape::m_count [b2PolygonShape.h <28:7 28:20>]
SYMBOL_METHOD public b2PolygonShape & b2PolygonShape::operator=(b2PolygonShape &&) [b2PolygonShape.h <28:7 28:20>]
SYMBOL_METHOD public void b2PolygonShape::~b2PolygonShape() [b2PolygonShape.h <28:7 <28:7 28:20> 28:20>]
SYMBOL_FUNCTION void b2Shape::~b2Shape()
REFERENCE_OVERRIDE void b2PolygonShape::~b2PolygonShape() -> void b2Shape::~b2Shape() [b2PolygonShape.h <28:7 28:20>]
SYMBOL_METHOD public void b2PolygonShape::b2PolygonShape() [b2PolygonShape.h <81:1 <81:24 81:37> 87:1>]
SYMBOL_CLASS b2PolygonShape
QUALIFIER: b2PolygonShape [b2PolygonShape.h <81:8 81:21>]
SYMBOL_FUNCTION void b2Shape::b2Shape()
REFERENCE_CALL void b2PolygonShape::b2PolygonShape() -> void b2Shape::b2Shape() [b2PolygonShape.h <81:24 81:37>]
REFERENCE_USAGE void b2PolygonShape::b2PolygonShape() -> b2Vec2 b2PolygonShape::m_centroid [b2PolygonShape.h <81:24 81:37>]
REFERENCE_CALL void b2PolygonShape::b2PolygonShape() -> void b2Vec2::b2Vec2() [b2PolygonShape.h <81:24 81:37>]
REFERENCE_USAGE void b2PolygonShape::b2PolygonShape() -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.h <81:24 81:37>]
REFERENCE_USAGE void b2PolygonShape::b2PolygonShape() -> b2Vec2 [] b2PolygonShape::m_normals [b2PolygonShape.h <81:24 81:37>]
REFERENCE_USAGE void b2PolygonShape::b2PolygonShape() -> b2Shape::Type b2Shape::m_type [b2PolygonShape.h <83:2 83:7>]
REFERENCE_USAGE void b2PolygonShape::b2PolygonShape() -> b2Shape::Type::e_polygon [b2PolygonShape.h <83:11 83:19>]
REFERENCE_USAGE void b2PolygonShape::b2PolygonShape() -> float32 b2Shape::m_radius [b2PolygonShape.h <84:2 84:9>]
REFERENCE_USAGE void b2PolygonShape::b2PolygonShape() -> int32 b2PolygonShape::m_count [b2PolygonShape.h <85:2 85:8>]
REFERENCE_CALL void b2PolygonShape::b2PolygonShape() -> void b2Vec2::SetZero() [b2PolygonShape.h <86:13 86:19>]
REFERENCE_USAGE void b2PolygonShape::b2PolygonShape() -> b2Vec2 b2PolygonShape::m_centroid [b2PolygonShape.h <86:2 86:11>]
SYMBOL_METHOD public b2Shape * b2PolygonShape::Clone(b2BlockAllocator *) const [b2PolygonShape.cpp <22:1 <22:26 22:30> 28:1>]
REFERENCE_OVERRIDE b2Shape * b2PolygonShape::Clone(b2BlockAllocator *) const -> b2Shape * b2Shape::Clone(b2BlockAllocator *) const [b2PolygonShape.cpp <22:26 22:30>]
QUALIFIER: b2PolygonShape [b2PolygonShape.cpp <22:10 22:23>]
REFERENCE_TYPE_USAGE b2Shape * b2PolygonShape::Clone(b2BlockAllocator *) const -> b2Shape [b2PolygonShape.cpp <22:1 22:7>]
LOCAL_SYMBOL: b2PolygonShape.cpp<22:50> [b2PolygonShape.cpp <22:50 22:58>]
REFERENCE_TYPE_USAGE b2Shape * b2PolygonShape::Clone(b2BlockAllocator *) const -> b2BlockAllocator [b2PolygonShape.cpp <22:32 22:47>]
LOCAL_SYMBOL: b2PolygonShape.cpp<24:8> [b2PolygonShape.cpp <24:8 24:10>]
REFERENCE_TYPE_USAGE b2Shape * b2PolygonShape::Clone(b2BlockAllocator *) const -> void [b2PolygonShape.cpp <24:2 24:5>]
SYMBOL_FUNCTION void * b2BlockAllocator::Allocate(int32)
REFERENCE_CALL b2Shape * b2PolygonShape::Clone(b2BlockAllocator *) const -> void * b2BlockAllocator::Allocate(int32) [b2PolygonShape.cpp <24:25 24:32>]
LOCAL_SYMBOL: b2PolygonShape.cpp<22:50> [b2PolygonShape.cpp <24:14 24:22>]
REFERENCE_TYPE_USAGE b2Shape * b2PolygonShape::Clone(b2BlockAllocator *) const -> b2PolygonShape [b2PolygonShape.cpp <24:41 24:54>]
LOCAL_SYMBOL: b2PolygonShape.cpp<25:18> [b2PolygonShape.cpp <25:18 25:22>]
REFERENCE_TYPE_USAGE b2Shape * b2PolygonShape::Clone(b2BlockAllocator *) const -> b2PolygonShape [b2PolygonShape.cpp <25:2 25:15>]
REFERENCE_TYPE_USAGE b2Shape * b2PolygonShape::Clone(b2BlockAllocator *) const -> b2PolygonShape [b2PolygonShape.cpp <25:36 25:49>]
SYMBOL_FUNCTION void b2PolygonShape::b2PolygonShape()
REFERENCE_CALL b2Shape * b2PolygonShape::Clone(b2BlockAllocator *) const -> void b2PolygonShape::b2PolygonShape() [b2PolygonShape.cpp <25:36 25:49>]
LOCAL_SYMBOL: b2PolygonShape.cpp<24:8> [b2PolygonShape.cpp <25:31 25:33>]
SYMBOL_FUNCTION b2PolygonShape & b2PolygonShape::operator=(const b2PolygonShape &)
REFERENCE_CALL b2Shape * b2PolygonShape::Clone(b2BlockAllocator *) const -> b2PolygonShape & b2PolygonShape::operator=(const b2PolygonShape &) [b2PolygonShape.cpp <26:9 26:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<25:18> [b2PolygonShape.cpp <26:3 26:7>]
LOCAL_SYMBOL: b2PolygonShape.cpp<25:18> [b2PolygonShape.cpp <27:9 27:13>]
SYMBOL_FUNCTION void * __builtin_memcpy(void *, const void *, unsigned long long) [b2PolygonShape.h <28:7 28:20>]
SYMBOL_METHOD public void b2PolygonShape::SetAsBox(float32, float32) [b2PolygonShape.cpp <30:1 <30:22 30:29> 42:1>]
QUALIFIER: b2PolygonShape [b2PolygonShape.cpp <30:6 30:19>]
REFERENCE_TYPE_USAGE void b2PolygonShape::SetAsBox(float32, float32) -> void [b2PolygonShape.cpp <30:1 30:4>]
LOCAL_SYMBOL: b2PolygonShape.cpp<30:39> [b2PolygonShape.cpp <30:39 30:40>]
REFERENCE_TYPE_USAGE void b2PolygonShape::SetAsBox(float32, float32) -> float32 [b2PolygonShape.cpp <30:31 30:37>]
LOCAL_SYMBOL: b2PolygonShape.cpp<30:51> [b2PolygonShape.cpp <30:51 30:52>]
REFERENCE_TYPE_USAGE void b2PolygonShape::SetAsBox(float32, float32) -> float32 [b2PolygonShape.cpp <30:43 30:49>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32) -> int32 b2PolygonShape::m_count [b2PolygonShape.cpp <32:2 32:8>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32) -> void b2Vec2::Set(float32, float32) [b2PolygonShape.cpp <33:16 33:18>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32) -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <33:2 33:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<30:39> [b2PolygonShape.cpp <33:21 33:22>]
LOCAL_SYMBOL: b2PolygonShape.cpp<30:51> [b2PolygonShape.cpp <33:26 33:27>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32) -> void b2Vec2::Set(float32, float32) [b2PolygonShape.cpp <34:16 34:18>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32) -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <34:2 34:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<30:39> [b2PolygonShape.cpp <34:21 34:22>]
LOCAL_SYMBOL: b2PolygonShape.cpp<30:51> [b2PolygonShape.cpp <34:26 34:27>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32) -> void b2Vec2::Set(float32, float32) [b2PolygonShape.cpp <35:16 35:18>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32) -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <35:2 35:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<30:39> [b2PolygonShape.cpp <35:21 35:22>]
LOCAL_SYMBOL: b2PolygonShape.cpp<30:51> [b2PolygonShape.cpp <35:26 35:27>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32) -> void b2Vec2::Set(float32, float32) [b2PolygonShape.cpp <36:16 36:18>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32) -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <36:2 36:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<30:39> [b2PolygonShape.cpp <36:21 36:22>]
LOCAL_SYMBOL: b2PolygonShape.cpp<30:51> [b2PolygonShape.cpp <36:26 36:27>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32) -> void b2Vec2::Set(float32, float32) [b2PolygonShape.cpp <37:15 37:17>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32) -> b2Vec2 [] b2PolygonShape::m_normals [b2PolygonShape.cpp <37:2 37:10>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32) -> void b2Vec2::Set(float32, float32) [b2PolygonShape.cpp <38:15 38:17>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32) -> b2Vec2 [] b2PolygonShape::m_normals [b2PolygonShape.cpp <38:2 38:10>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32) -> void b2Vec2::Set(float32, float32) [b2PolygonShape.cpp <39:15 39:17>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32) -> b2Vec2 [] b2PolygonShape::m_normals [b2PolygonShape.cpp <39:2 39:10>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32) -> void b2Vec2::Set(float32, float32) [b2PolygonShape.cpp <40:15 40:17>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32) -> b2Vec2 [] b2PolygonShape::m_normals [b2PolygonShape.cpp <40:2 40:10>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32) -> void b2Vec2::SetZero() [b2PolygonShape.cpp <41:13 41:19>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32) -> b2Vec2 b2PolygonShape::m_centroid [b2PolygonShape.cpp <41:2 41:11>]
SYMBOL_METHOD public void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) [b2PolygonShape.cpp <44:1 <44:22 44:29> 67:1>]
QUALIFIER: b2PolygonShape [b2PolygonShape.cpp <44:6 44:19>]
REFERENCE_TYPE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> void [b2PolygonShape.cpp <44:1 44:4>]
LOCAL_SYMBOL: b2PolygonShape.cpp<44:39> [b2PolygonShape.cpp <44:39 44:40>]
REFERENCE_TYPE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> float32 [b2PolygonShape.cpp <44:31 44:37>]
LOCAL_SYMBOL: b2PolygonShape.cpp<44:51> [b2PolygonShape.cpp <44:51 44:52>]
REFERENCE_TYPE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> float32 [b2PolygonShape.cpp <44:43 44:49>]
LOCAL_SYMBOL: b2PolygonShape.cpp<44:69> [b2PolygonShape.cpp <44:69 44:74>]
REFERENCE_TYPE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Vec2 [b2PolygonShape.cpp <44:61 44:66>]
LOCAL_SYMBOL: b2PolygonShape.cpp<44:85> [b2PolygonShape.cpp <44:85 44:89>]
REFERENCE_TYPE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> float32 [b2PolygonShape.cpp <44:77 44:83>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> int32 b2PolygonShape::m_count [b2PolygonShape.cpp <46:2 46:8>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> void b2Vec2::Set(float32, float32) [b2PolygonShape.cpp <47:16 47:18>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <47:2 47:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<44:39> [b2PolygonShape.cpp <47:21 47:22>]
LOCAL_SYMBOL: b2PolygonShape.cpp<44:51> [b2PolygonShape.cpp <47:26 47:27>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> void b2Vec2::Set(float32, float32) [b2PolygonShape.cpp <48:16 48:18>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <48:2 48:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<44:39> [b2PolygonShape.cpp <48:21 48:22>]
LOCAL_SYMBOL: b2PolygonShape.cpp<44:51> [b2PolygonShape.cpp <48:26 48:27>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> void b2Vec2::Set(float32, float32) [b2PolygonShape.cpp <49:16 49:18>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <49:2 49:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<44:39> [b2PolygonShape.cpp <49:21 49:22>]
LOCAL_SYMBOL: b2PolygonShape.cpp<44:51> [b2PolygonShape.cpp <49:26 49:27>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> void b2Vec2::Set(float32, float32) [b2PolygonShape.cpp <50:16 50:18>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <50:2 50:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<44:39> [b2PolygonShape.cpp <50:21 50:22>]
LOCAL_SYMBOL: b2PolygonShape.cpp<44:51> [b2PolygonShape.cpp <50:26 50:27>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> void b2Vec2::Set(float32, float32) [b2PolygonShape.cpp <51:15 51:17>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Vec2 [] b2PolygonShape::m_normals [b2PolygonShape.cpp <51:2 51:10>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> void b2Vec2::Set(float32, float32) [b2PolygonShape.cpp <52:15 52:17>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Vec2 [] b2PolygonShape::m_normals [b2PolygonShape.cpp <52:2 52:10>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> void b2Vec2::Set(float32, float32) [b2PolygonShape.cpp <53:15 53:17>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Vec2 [] b2PolygonShape::m_normals [b2PolygonShape.cpp <53:2 53:10>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> void b2Vec2::Set(float32, float32) [b2PolygonShape.cpp <54:15 54:17>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Vec2 [] b2PolygonShape::m_normals [b2PolygonShape.cpp <54:2 54:10>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PolygonShape.cpp <55:13 55:13>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Vec2 b2PolygonShape::m_centroid [b2PolygonShape.cpp <55:2 55:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<44:69> [b2PolygonShape.cpp <55:15 55:20>]
LOCAL_SYMBOL: b2PolygonShape.cpp<57:14> [b2PolygonShape.cpp <57:14 57:15>]
REFERENCE_TYPE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Transform [b2PolygonShape.cpp <57:2 57:12>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> void b2Transform::b2Transform() [b2PolygonShape.cpp <57:14 57:15>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PolygonShape.cpp <58:7 58:7>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Vec2 b2Transform::p [b2PolygonShape.cpp <58:5 58:5>]
LOCAL_SYMBOL: b2PolygonShape.cpp<57:14> [b2PolygonShape.cpp <58:2 58:3>]
LOCAL_SYMBOL: b2PolygonShape.cpp<44:69> [b2PolygonShape.cpp <58:9 58:14>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> void b2Rot::Set(float32) [b2PolygonShape.cpp <59:7 59:9>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Rot b2Transform::q [b2PolygonShape.cpp <59:5 59:5>]
LOCAL_SYMBOL: b2PolygonShape.cpp<57:14> [b2PolygonShape.cpp <59:2 59:3>]
LOCAL_SYMBOL: b2PolygonShape.cpp<44:85> [b2PolygonShape.cpp <59:11 59:15>]
LOCAL_SYMBOL: b2PolygonShape.cpp<62:13> [b2PolygonShape.cpp <62:13 62:13>]
REFERENCE_TYPE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> int32 [b2PolygonShape.cpp <62:7 62:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<62:13> [b2PolygonShape.cpp <62:20 62:20>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> int32 b2PolygonShape::m_count [b2PolygonShape.cpp <62:24 62:30>]
LOCAL_SYMBOL: b2PolygonShape.cpp<62:13> [b2PolygonShape.cpp <62:35 62:35>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2PolygonShape.cpp <64:17 64:17>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <64:3 64:12>]
LOCAL_SYMBOL: b2PolygonShape.cpp<62:13> [b2PolygonShape.cpp <64:14 64:14>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &)
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2PolygonShape.cpp <64:19 64:23>]
LOCAL_SYMBOL: b2PolygonShape.cpp<57:14> [b2PolygonShape.cpp <64:25 64:26>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <64:29 64:38>]
LOCAL_SYMBOL: b2PolygonShape.cpp<62:13> [b2PolygonShape.cpp <64:40 64:40>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2PolygonShape.cpp <65:16 65:16>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Vec2 [] b2PolygonShape::m_normals [b2PolygonShape.cpp <65:3 65:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<62:13> [b2PolygonShape.cpp <65:13 65:13>]
REFERENCE_CALL void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2PolygonShape.cpp <65:18 65:22>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Rot b2Transform::q [b2PolygonShape.cpp <65:27 65:27>]
LOCAL_SYMBOL: b2PolygonShape.cpp<57:14> [b2PolygonShape.cpp <65:24 65:25>]
REFERENCE_USAGE void b2PolygonShape::SetAsBox(float32, float32, const b2Vec2 &, float32) -> b2Vec2 [] b2PolygonShape::m_normals [b2PolygonShape.cpp <65:30 65:38>]
LOCAL_SYMBOL: b2PolygonShape.cpp<62:13> [b2PolygonShape.cpp <65:40 65:40>]
SYMBOL_METHOD public int32 b2PolygonShape::GetChildCount() const [b2PolygonShape.cpp <69:1 <69:23 69:35> 72:1>]
REFERENCE_OVERRIDE int32 b2PolygonShape::GetChildCount() const -> int32 b2Shape::GetChildCount() const [b2PolygonShape.cpp <69:23 69:35>]
QUALIFIER: b2PolygonShape [b2PolygonShape.cpp <69:7 69:20>]
REFERENCE_TYPE_USAGE int32 b2PolygonShape::GetChildCount() const -> int32 [b2PolygonShape.cpp <69:1 69:5>]
SYMBOL_FUNCTION static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) [b2PolygonShape.cpp <74:1 <74:15 74:29> 118:1>]
REFERENCE_TYPE_USAGE static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> b2Vec2 [b2PolygonShape.cpp <74:8 74:13>]
LOCAL_SYMBOL: b2PolygonShape.cpp<74:45> [b2PolygonShape.cpp <74:45 74:46>]
REFERENCE_TYPE_USAGE static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> b2Vec2 [b2PolygonShape.cpp <74:37 74:42>]
LOCAL_SYMBOL: b2PolygonShape.cpp<74:55> [b2PolygonShape.cpp <74:55 74:59>]
REFERENCE_TYPE_USAGE static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> int32 [b2PolygonShape.cpp <74:49 74:53>]
REFERENCE_TYPE_USAGE static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> void [b2PolygonShape.cpp <76:2 76:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<74:55> [b2PolygonShape.cpp <76:11 76:15>]
REFERENCE_CALL static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> void _wassert(const wchar_t *, const wchar_t *, unsigned int) [b2PolygonShape.cpp <76:2 76:9>]
REFERENCE_TYPE_USAGE static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> unsigned int [b2PolygonShape.cpp <76:2 76:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<78:9> [b2PolygonShape.cpp <78:9 78:9>]
REFERENCE_TYPE_USAGE static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> b2Vec2 [b2PolygonShape.cpp <78:2 78:7>]
REFERENCE_CALL static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> void b2Vec2::b2Vec2() [b2PolygonShape.cpp <78:9 78:9>]
REFERENCE_CALL static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> void b2Vec2::Set(float32, float32) [b2PolygonShape.cpp <78:14 78:16>]
LOCAL_SYMBOL: b2PolygonShape.cpp<78:9> [b2PolygonShape.cpp <78:12 78:12>]
LOCAL_SYMBOL: b2PolygonShape.cpp<79:10> [b2PolygonShape.cpp <79:10 79:13>]
REFERENCE_TYPE_USAGE static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> float32 [b2PolygonShape.cpp <79:2 79:8>]
LOCAL_SYMBOL: b2PolygonShape.cpp<83:9> [b2PolygonShape.cpp <83:9 83:12>]
REFERENCE_TYPE_USAGE static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> b2Vec2 [b2PolygonShape.cpp <83:2 83:7>]
REFERENCE_CALL static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> void b2Vec2::b2Vec2(float32, float32) [b2PolygonShape.cpp <83:9 83:12>]
LOCAL_SYMBOL: b2PolygonShape.cpp<93:16> [b2PolygonShape.cpp <93:16 93:19>]
REFERENCE_TYPE_USAGE static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> float32 [b2PolygonShape.cpp <93:8 93:14>]
LOCAL_SYMBOL: b2PolygonShape.cpp<95:13> [b2PolygonShape.cpp <95:13 95:13>]
REFERENCE_TYPE_USAGE static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> int32 [b2PolygonShape.cpp <95:7 95:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<95:13> [b2PolygonShape.cpp <95:20 95:20>]
LOCAL_SYMBOL: b2PolygonShape.cpp<74:55> [b2PolygonShape.cpp <95:24 95:28>]
LOCAL_SYMBOL: b2PolygonShape.cpp<95:13> [b2PolygonShape.cpp <95:33 95:33>]
LOCAL_SYMBOL: b2PolygonShape.cpp<98:10> [b2PolygonShape.cpp <98:10 98:11>]
REFERENCE_TYPE_USAGE static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> b2Vec2 [b2PolygonShape.cpp <98:3 98:8>]
REFERENCE_CALL static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PolygonShape.cpp <98:15 98:18>]
LOCAL_SYMBOL: b2PolygonShape.cpp<83:9> [b2PolygonShape.cpp <98:15 98:18>]
LOCAL_SYMBOL: b2PolygonShape.cpp<99:10> [b2PolygonShape.cpp <99:10 99:11>]
REFERENCE_TYPE_USAGE static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> b2Vec2 [b2PolygonShape.cpp <99:3 99:8>]
REFERENCE_CALL static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PolygonShape.cpp <99:19 99:19>]
LOCAL_SYMBOL: b2PolygonShape.cpp<74:45> [b2PolygonShape.cpp <99:15 99:16>]
LOCAL_SYMBOL: b2PolygonShape.cpp<95:13> [b2PolygonShape.cpp <99:18 99:18>]
LOCAL_SYMBOL: b2PolygonShape.cpp<100:10> [b2PolygonShape.cpp <100:10 100:11>]
REFERENCE_TYPE_USAGE static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> b2Vec2 [b2PolygonShape.cpp <100:3 100:8>]
REFERENCE_CALL static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PolygonShape.cpp <100:45 100:45>]
LOCAL_SYMBOL: b2PolygonShape.cpp<95:13> [b2PolygonShape.cpp <100:15 100:15>]
LOCAL_SYMBOL: b2PolygonShape.cpp<74:55> [b2PolygonShape.cpp <100:23 100:27>]
LOCAL_SYMBOL: b2PolygonShape.cpp<74:45> [b2PolygonShape.cpp <100:31 100:32>]
LOCAL_SYMBOL: b2PolygonShape.cpp<95:13> [b2PolygonShape.cpp <100:34 100:34>]
LOCAL_SYMBOL: b2PolygonShape.cpp<74:45> [b2PolygonShape.cpp <100:41 100:42>]
LOCAL_SYMBOL: b2PolygonShape.cpp<102:10> [b2PolygonShape.cpp <102:10 102:11>]
REFERENCE_TYPE_USAGE static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> b2Vec2 [b2PolygonShape.cpp <102:3 102:8>]
REFERENCE_CALL static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <102:18 102:18>]
LOCAL_SYMBOL: b2PolygonShape.cpp<99:10> [b2PolygonShape.cpp <102:15 102:16>]
LOCAL_SYMBOL: b2PolygonShape.cpp<98:10> [b2PolygonShape.cpp <102:20 102:21>]
LOCAL_SYMBOL: b2PolygonShape.cpp<103:10> [b2PolygonShape.cpp <103:10 103:11>]
REFERENCE_TYPE_USAGE static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> b2Vec2 [b2PolygonShape.cpp <103:3 103:8>]
REFERENCE_CALL static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <103:18 103:18>]
LOCAL_SYMBOL: b2PolygonShape.cpp<100:10> [b2PolygonShape.cpp <103:15 103:16>]
LOCAL_SYMBOL: b2PolygonShape.cpp<98:10> [b2PolygonShape.cpp <103:20 103:21>]
LOCAL_SYMBOL: b2PolygonShape.cpp<105:11> [b2PolygonShape.cpp <105:11 105:11>]
REFERENCE_TYPE_USAGE static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> float32 [b2PolygonShape.cpp <105:3 105:9>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <105:15 105:21>]
LOCAL_SYMBOL: b2PolygonShape.cpp<102:10> [b2PolygonShape.cpp <105:23 105:24>]
LOCAL_SYMBOL: b2PolygonShape.cpp<103:10> [b2PolygonShape.cpp <105:27 105:28>]
LOCAL_SYMBOL: b2PolygonShape.cpp<107:11> [b2PolygonShape.cpp <107:11 107:22>]
REFERENCE_TYPE_USAGE static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> float32 [b2PolygonShape.cpp <107:3 107:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<105:11> [b2PolygonShape.cpp <107:33 107:33>]
LOCAL_SYMBOL: b2PolygonShape.cpp<79:10> [b2PolygonShape.cpp <108:3 108:6>]
LOCAL_SYMBOL: b2PolygonShape.cpp<107:11> [b2PolygonShape.cpp <108:11 108:22>]
REFERENCE_CALL static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> void b2Vec2::operator+=(const b2Vec2 &) [b2PolygonShape.cpp <111:5 111:6>]
LOCAL_SYMBOL: b2PolygonShape.cpp<78:9> [b2PolygonShape.cpp <111:3 111:3>]
REFERENCE_CALL static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PolygonShape.cpp <111:28 111:28>]
LOCAL_SYMBOL: b2PolygonShape.cpp<107:11> [b2PolygonShape.cpp <111:8 111:19>]
LOCAL_SYMBOL: b2PolygonShape.cpp<93:16> [b2PolygonShape.cpp <111:23 111:26>]
REFERENCE_CALL static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <111:39 111:39>]
REFERENCE_CALL static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <111:34 111:34>]
LOCAL_SYMBOL: b2PolygonShape.cpp<98:10> [b2PolygonShape.cpp <111:31 111:32>]
LOCAL_SYMBOL: b2PolygonShape.cpp<99:10> [b2PolygonShape.cpp <111:36 111:37>]
LOCAL_SYMBOL: b2PolygonShape.cpp<100:10> [b2PolygonShape.cpp <111:41 111:42>]
REFERENCE_TYPE_USAGE static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> void [b2PolygonShape.cpp <115:2 115:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<79:10> [b2PolygonShape.cpp <115:11 115:14>]
REFERENCE_CALL static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> void _wassert(const wchar_t *, const wchar_t *, unsigned int) [b2PolygonShape.cpp <115:2 115:9>]
REFERENCE_TYPE_USAGE static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> unsigned int [b2PolygonShape.cpp <115:2 115:9>]
SYMBOL_FUNCTION void b2Vec2::operator*=(float32)
REFERENCE_CALL static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> void b2Vec2::operator*=(float32) [b2PolygonShape.cpp <116:4 116:5>]
LOCAL_SYMBOL: b2PolygonShape.cpp<78:9> [b2PolygonShape.cpp <116:2 116:2>]
LOCAL_SYMBOL: b2PolygonShape.cpp<79:10> [b2PolygonShape.cpp <116:14 116:17>]
REFERENCE_CALL static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) -> void b2Vec2::b2Vec2(b2Vec2 &&) [b2PolygonShape.cpp <117:9 117:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<78:9> [b2PolygonShape.cpp <117:9 117:9>]
SYMBOL_METHOD public void b2PolygonShape::Set(const b2Vec2 *, int32) [b2PolygonShape.cpp <120:1 <120:22 120:24> 250:1>]
QUALIFIER: b2PolygonShape [b2PolygonShape.cpp <120:6 120:19>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> void [b2PolygonShape.cpp <120:1 120:4>]
LOCAL_SYMBOL: b2PolygonShape.cpp<120:40> [b2PolygonShape.cpp <120:40 120:47>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> b2Vec2 [b2PolygonShape.cpp <120:32 120:37>]
LOCAL_SYMBOL: b2PolygonShape.cpp<120:56> [b2PolygonShape.cpp <120:56 120:60>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> int32 [b2PolygonShape.cpp <120:50 120:54>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> void [b2PolygonShape.cpp <122:2 122:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<120:56> [b2PolygonShape.cpp <122:16 122:20>]
LOCAL_SYMBOL: b2PolygonShape.cpp<120:56> [b2PolygonShape.cpp <122:25 122:29>]
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> void _wassert(const wchar_t *, const wchar_t *, unsigned int) [b2PolygonShape.cpp <122:2 122:9>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> unsigned int [b2PolygonShape.cpp <122:2 122:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<120:56> [b2PolygonShape.cpp <123:6 123:10>]
SYMBOL_FUNCTION void b2PolygonShape::SetAsBox(float32, float32)
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> void b2PolygonShape::SetAsBox(float32, float32) [b2PolygonShape.cpp <125:3 125:10>]
LOCAL_SYMBOL: b2PolygonShape.cpp<129:8> [b2PolygonShape.cpp <129:8 129:8>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> int32 [b2PolygonShape.cpp <129:2 129:6>]
SYMBOL_FUNCTION int b2Min<int>(int, int)
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> int b2Min<int>(int, int) [b2PolygonShape.cpp <129:12 129:16>]
LOCAL_SYMBOL: b2PolygonShape.cpp<120:56> [b2PolygonShape.cpp <129:18 129:22>]
LOCAL_SYMBOL: b2PolygonShape.cpp<132:9> [b2PolygonShape.cpp <132:9 132:10>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> b2Vec2 [b2PolygonShape.cpp <132:2 132:7>]
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> void b2Vec2::b2Vec2() [b2PolygonShape.cpp <132:9 132:10>]
LOCAL_SYMBOL: b2PolygonShape.cpp<133:8> [b2PolygonShape.cpp <133:8 133:16>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> int32 [b2PolygonShape.cpp <133:2 133:6>]
LOCAL_SYMBOL: b2PolygonShape.cpp<134:13> [b2PolygonShape.cpp <134:13 134:13>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> int32 [b2PolygonShape.cpp <134:7 134:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<134:13> [b2PolygonShape.cpp <134:20 134:20>]
LOCAL_SYMBOL: b2PolygonShape.cpp<129:8> [b2PolygonShape.cpp <134:24 134:24>]
LOCAL_SYMBOL: b2PolygonShape.cpp<134:13> [b2PolygonShape.cpp <134:29 134:29>]
LOCAL_SYMBOL: b2PolygonShape.cpp<136:10> [b2PolygonShape.cpp <136:10 136:10>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> b2Vec2 [b2PolygonShape.cpp <136:3 136:8>]
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PolygonShape.cpp <136:24 136:24>]
LOCAL_SYMBOL: b2PolygonShape.cpp<120:40> [b2PolygonShape.cpp <136:14 136:21>]
LOCAL_SYMBOL: b2PolygonShape.cpp<134:13> [b2PolygonShape.cpp <136:23 136:23>]
LOCAL_SYMBOL: b2PolygonShape.cpp<138:8> [b2PolygonShape.cpp <138:8 138:13>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> bool [b2PolygonShape.cpp <138:3 138:6>]
LOCAL_SYMBOL: b2PolygonShape.cpp<139:14> [b2PolygonShape.cpp <139:14 139:14>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> int32 [b2PolygonShape.cpp <139:8 139:12>]
LOCAL_SYMBOL: b2PolygonShape.cpp<139:14> [b2PolygonShape.cpp <139:21 139:21>]
LOCAL_SYMBOL: b2PolygonShape.cpp<133:8> [b2PolygonShape.cpp <139:25 139:33>]
LOCAL_SYMBOL: b2PolygonShape.cpp<139:14> [b2PolygonShape.cpp <139:38 139:38>]
SYMBOL_FUNCTION float32 b2DistanceSquared(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> float32 b2DistanceSquared(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <141:8 141:24>]
LOCAL_SYMBOL: b2PolygonShape.cpp<136:10> [b2PolygonShape.cpp <141:26 141:26>]
LOCAL_SYMBOL: b2PolygonShape.cpp<132:9> [b2PolygonShape.cpp <141:29 141:30>]
LOCAL_SYMBOL: b2PolygonShape.cpp<139:14> [b2PolygonShape.cpp <141:32 141:32>]
LOCAL_SYMBOL: b2PolygonShape.cpp<138:8> [b2PolygonShape.cpp <143:5 143:10>]
LOCAL_SYMBOL: b2PolygonShape.cpp<138:8> [b2PolygonShape.cpp <148:7 148:12>]
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PolygonShape.cpp <150:20 150:20>]
LOCAL_SYMBOL: b2PolygonShape.cpp<132:9> [b2PolygonShape.cpp <150:4 150:5>]
LOCAL_SYMBOL: b2PolygonShape.cpp<133:8> [b2PolygonShape.cpp <150:7 150:15>]
LOCAL_SYMBOL: b2PolygonShape.cpp<136:10> [b2PolygonShape.cpp <150:22 150:22>]
LOCAL_SYMBOL: b2PolygonShape.cpp<129:8> [b2PolygonShape.cpp <154:2 154:2>]
LOCAL_SYMBOL: b2PolygonShape.cpp<133:8> [b2PolygonShape.cpp <154:6 154:14>]
LOCAL_SYMBOL: b2PolygonShape.cpp<129:8> [b2PolygonShape.cpp <155:6 155:6>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> void [b2PolygonShape.cpp <158:3 158:10>]
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> void _wassert(const wchar_t *, const wchar_t *, unsigned int) [b2PolygonShape.cpp <158:3 158:10>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> unsigned int [b2PolygonShape.cpp <158:3 158:10>]
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> void b2PolygonShape::SetAsBox(float32, float32) [b2PolygonShape.cpp <159:3 159:10>]
LOCAL_SYMBOL: b2PolygonShape.cpp<167:8> [b2PolygonShape.cpp <167:8 167:9>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> int32 [b2PolygonShape.cpp <167:2 167:6>]
LOCAL_SYMBOL: b2PolygonShape.cpp<168:10> [b2PolygonShape.cpp <168:10 168:11>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> float32 [b2PolygonShape.cpp <168:2 168:8>]
REFERENCE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> float32 b2Vec2::x [b2PolygonShape.cpp <168:21 168:21>]
LOCAL_SYMBOL: b2PolygonShape.cpp<132:9> [b2PolygonShape.cpp <168:15 168:16>]
LOCAL_SYMBOL: b2PolygonShape.cpp<169:13> [b2PolygonShape.cpp <169:13 169:13>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> int32 [b2PolygonShape.cpp <169:7 169:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<169:13> [b2PolygonShape.cpp <169:20 169:20>]
LOCAL_SYMBOL: b2PolygonShape.cpp<129:8> [b2PolygonShape.cpp <169:24 169:24>]
LOCAL_SYMBOL: b2PolygonShape.cpp<169:13> [b2PolygonShape.cpp <169:29 169:29>]
LOCAL_SYMBOL: b2PolygonShape.cpp<171:11> [b2PolygonShape.cpp <171:11 171:11>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> float32 [b2PolygonShape.cpp <171:3 171:9>]
REFERENCE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> float32 b2Vec2::x [b2PolygonShape.cpp <171:21 171:21>]
LOCAL_SYMBOL: b2PolygonShape.cpp<132:9> [b2PolygonShape.cpp <171:15 171:16>]
LOCAL_SYMBOL: b2PolygonShape.cpp<169:13> [b2PolygonShape.cpp <171:18 171:18>]
LOCAL_SYMBOL: b2PolygonShape.cpp<171:11> [b2PolygonShape.cpp <172:7 172:7>]
LOCAL_SYMBOL: b2PolygonShape.cpp<168:10> [b2PolygonShape.cpp <172:11 172:12>]
LOCAL_SYMBOL: b2PolygonShape.cpp<171:11> [b2PolygonShape.cpp <172:18 172:18>]
LOCAL_SYMBOL: b2PolygonShape.cpp<168:10> [b2PolygonShape.cpp <172:23 172:24>]
REFERENCE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> float32 b2Vec2::y [b2PolygonShape.cpp <172:35 172:35>]
LOCAL_SYMBOL: b2PolygonShape.cpp<132:9> [b2PolygonShape.cpp <172:29 172:30>]
LOCAL_SYMBOL: b2PolygonShape.cpp<169:13> [b2PolygonShape.cpp <172:32 172:32>]
REFERENCE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> float32 b2Vec2::y [b2PolygonShape.cpp <172:46 172:46>]
LOCAL_SYMBOL: b2PolygonShape.cpp<132:9> [b2PolygonShape.cpp <172:39 172:40>]
LOCAL_SYMBOL: b2PolygonShape.cpp<167:8> [b2PolygonShape.cpp <172:42 172:43>]
LOCAL_SYMBOL: b2PolygonShape.cpp<167:8> [b2PolygonShape.cpp <174:4 174:5>]
LOCAL_SYMBOL: b2PolygonShape.cpp<169:13> [b2PolygonShape.cpp <174:9 174:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<168:10> [b2PolygonShape.cpp <175:4 175:5>]
LOCAL_SYMBOL: b2PolygonShape.cpp<171:11> [b2PolygonShape.cpp <175:9 175:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<179:8> [b2PolygonShape.cpp <179:8 179:11>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> int32 [b2PolygonShape.cpp <179:2 179:6>]
LOCAL_SYMBOL: b2PolygonShape.cpp<180:8> [b2PolygonShape.cpp <180:8 180:8>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> int32 [b2PolygonShape.cpp <180:2 180:6>]
LOCAL_SYMBOL: b2PolygonShape.cpp<181:8> [b2PolygonShape.cpp <181:8 181:9>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> int32 [b2PolygonShape.cpp <181:2 181:6>]
LOCAL_SYMBOL: b2PolygonShape.cpp<167:8> [b2PolygonShape.cpp <181:13 181:14>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> void [b2PolygonShape.cpp <185:3 185:10>]
LOCAL_SYMBOL: b2PolygonShape.cpp<180:8> [b2PolygonShape.cpp <185:12 185:12>]
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> void _wassert(const wchar_t *, const wchar_t *, unsigned int) [b2PolygonShape.cpp <185:3 185:10>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> unsigned int [b2PolygonShape.cpp <185:3 185:10>]
LOCAL_SYMBOL: b2PolygonShape.cpp<179:8> [b2PolygonShape.cpp <186:3 186:6>]
LOCAL_SYMBOL: b2PolygonShape.cpp<180:8> [b2PolygonShape.cpp <186:8 186:8>]
LOCAL_SYMBOL: b2PolygonShape.cpp<181:8> [b2PolygonShape.cpp <186:13 186:14>]
LOCAL_SYMBOL: b2PolygonShape.cpp<188:9> [b2PolygonShape.cpp <188:9 188:10>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> int32 [b2PolygonShape.cpp <188:3 188:7>]
LOCAL_SYMBOL: b2PolygonShape.cpp<189:14> [b2PolygonShape.cpp <189:14 189:14>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> int32 [b2PolygonShape.cpp <189:8 189:12>]
LOCAL_SYMBOL: b2PolygonShape.cpp<189:14> [b2PolygonShape.cpp <189:21 189:21>]
LOCAL_SYMBOL: b2PolygonShape.cpp<129:8> [b2PolygonShape.cpp <189:25 189:25>]
LOCAL_SYMBOL: b2PolygonShape.cpp<189:14> [b2PolygonShape.cpp <189:30 189:30>]
LOCAL_SYMBOL: b2PolygonShape.cpp<188:9> [b2PolygonShape.cpp <191:8 191:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<181:8> [b2PolygonShape.cpp <191:14 191:15>]
LOCAL_SYMBOL: b2PolygonShape.cpp<188:9> [b2PolygonShape.cpp <193:5 193:6>]
LOCAL_SYMBOL: b2PolygonShape.cpp<189:14> [b2PolygonShape.cpp <193:10 193:10>]
LOCAL_SYMBOL: b2PolygonShape.cpp<197:11> [b2PolygonShape.cpp <197:11 197:11>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> b2Vec2 [b2PolygonShape.cpp <197:4 197:9>]
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <197:22 197:22>]
LOCAL_SYMBOL: b2PolygonShape.cpp<132:9> [b2PolygonShape.cpp <197:15 197:16>]
LOCAL_SYMBOL: b2PolygonShape.cpp<188:9> [b2PolygonShape.cpp <197:18 197:19>]
LOCAL_SYMBOL: b2PolygonShape.cpp<132:9> [b2PolygonShape.cpp <197:24 197:25>]
LOCAL_SYMBOL: b2PolygonShape.cpp<179:8> [b2PolygonShape.cpp <197:27 197:30>]
LOCAL_SYMBOL: b2PolygonShape.cpp<180:8> [b2PolygonShape.cpp <197:32 197:32>]
LOCAL_SYMBOL: b2PolygonShape.cpp<198:11> [b2PolygonShape.cpp <198:11 198:11>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> b2Vec2 [b2PolygonShape.cpp <198:4 198:9>]
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <198:21 198:21>]
LOCAL_SYMBOL: b2PolygonShape.cpp<132:9> [b2PolygonShape.cpp <198:15 198:16>]
LOCAL_SYMBOL: b2PolygonShape.cpp<189:14> [b2PolygonShape.cpp <198:18 198:18>]
LOCAL_SYMBOL: b2PolygonShape.cpp<132:9> [b2PolygonShape.cpp <198:23 198:24>]
LOCAL_SYMBOL: b2PolygonShape.cpp<179:8> [b2PolygonShape.cpp <198:26 198:29>]
LOCAL_SYMBOL: b2PolygonShape.cpp<180:8> [b2PolygonShape.cpp <198:31 198:31>]
LOCAL_SYMBOL: b2PolygonShape.cpp<199:12> [b2PolygonShape.cpp <199:12 199:12>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> float32 [b2PolygonShape.cpp <199:4 199:10>]
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <199:16 199:22>]
LOCAL_SYMBOL: b2PolygonShape.cpp<197:11> [b2PolygonShape.cpp <199:24 199:24>]
LOCAL_SYMBOL: b2PolygonShape.cpp<198:11> [b2PolygonShape.cpp <199:27 199:27>]
LOCAL_SYMBOL: b2PolygonShape.cpp<199:12> [b2PolygonShape.cpp <200:8 200:8>]
LOCAL_SYMBOL: b2PolygonShape.cpp<188:9> [b2PolygonShape.cpp <202:5 202:6>]
LOCAL_SYMBOL: b2PolygonShape.cpp<189:14> [b2PolygonShape.cpp <202:10 202:10>]
LOCAL_SYMBOL: b2PolygonShape.cpp<199:12> [b2PolygonShape.cpp <206:8 206:8>]
SYMBOL_FUNCTION float32 b2Vec2::LengthSquared() const
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> float32 b2Vec2::LengthSquared() const [b2PolygonShape.cpp <206:23 206:35>]
LOCAL_SYMBOL: b2PolygonShape.cpp<198:11> [b2PolygonShape.cpp <206:21 206:21>]
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> float32 b2Vec2::LengthSquared() const [b2PolygonShape.cpp <206:43 206:55>]
LOCAL_SYMBOL: b2PolygonShape.cpp<197:11> [b2PolygonShape.cpp <206:41 206:41>]
LOCAL_SYMBOL: b2PolygonShape.cpp<188:9> [b2PolygonShape.cpp <208:5 208:6>]
LOCAL_SYMBOL: b2PolygonShape.cpp<189:14> [b2PolygonShape.cpp <208:10 208:10>]
LOCAL_SYMBOL: b2PolygonShape.cpp<180:8> [b2PolygonShape.cpp <212:5 212:5>]
LOCAL_SYMBOL: b2PolygonShape.cpp<181:8> [b2PolygonShape.cpp <213:3 213:4>]
LOCAL_SYMBOL: b2PolygonShape.cpp<188:9> [b2PolygonShape.cpp <213:8 213:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<188:9> [b2PolygonShape.cpp <215:7 215:8>]
LOCAL_SYMBOL: b2PolygonShape.cpp<167:8> [b2PolygonShape.cpp <215:13 215:14>]
LOCAL_SYMBOL: b2PolygonShape.cpp<180:8> [b2PolygonShape.cpp <221:6 221:6>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> void [b2PolygonShape.cpp <224:3 224:10>]
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> void _wassert(const wchar_t *, const wchar_t *, unsigned int) [b2PolygonShape.cpp <224:3 224:10>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> unsigned int [b2PolygonShape.cpp <224:3 224:10>]
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> void b2PolygonShape::SetAsBox(float32, float32) [b2PolygonShape.cpp <225:3 225:10>]
REFERENCE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> int32 b2PolygonShape::m_count [b2PolygonShape.cpp <229:2 229:8>]
LOCAL_SYMBOL: b2PolygonShape.cpp<180:8> [b2PolygonShape.cpp <229:12 229:12>]
LOCAL_SYMBOL: b2PolygonShape.cpp<232:13> [b2PolygonShape.cpp <232:13 232:13>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> int32 [b2PolygonShape.cpp <232:7 232:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<232:13> [b2PolygonShape.cpp <232:20 232:20>]
LOCAL_SYMBOL: b2PolygonShape.cpp<180:8> [b2PolygonShape.cpp <232:24 232:24>]
LOCAL_SYMBOL: b2PolygonShape.cpp<232:13> [b2PolygonShape.cpp <232:29 232:29>]
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PolygonShape.cpp <234:17 234:17>]
REFERENCE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <234:3 234:12>]
LOCAL_SYMBOL: b2PolygonShape.cpp<232:13> [b2PolygonShape.cpp <234:14 234:14>]
LOCAL_SYMBOL: b2PolygonShape.cpp<132:9> [b2PolygonShape.cpp <234:19 234:20>]
LOCAL_SYMBOL: b2PolygonShape.cpp<179:8> [b2PolygonShape.cpp <234:22 234:25>]
LOCAL_SYMBOL: b2PolygonShape.cpp<232:13> [b2PolygonShape.cpp <234:27 234:27>]
LOCAL_SYMBOL: b2PolygonShape.cpp<238:13> [b2PolygonShape.cpp <238:13 238:13>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> int32 [b2PolygonShape.cpp <238:7 238:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<238:13> [b2PolygonShape.cpp <238:20 238:20>]
LOCAL_SYMBOL: b2PolygonShape.cpp<180:8> [b2PolygonShape.cpp <238:24 238:24>]
LOCAL_SYMBOL: b2PolygonShape.cpp<238:13> [b2PolygonShape.cpp <238:29 238:29>]
LOCAL_SYMBOL: b2PolygonShape.cpp<240:9> [b2PolygonShape.cpp <240:9 240:10>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> int32 [b2PolygonShape.cpp <240:3 240:7>]
LOCAL_SYMBOL: b2PolygonShape.cpp<238:13> [b2PolygonShape.cpp <240:14 240:14>]
LOCAL_SYMBOL: b2PolygonShape.cpp<241:9> [b2PolygonShape.cpp <241:9 241:10>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> int32 [b2PolygonShape.cpp <241:3 241:7>]
LOCAL_SYMBOL: b2PolygonShape.cpp<238:13> [b2PolygonShape.cpp <241:14 241:14>]
LOCAL_SYMBOL: b2PolygonShape.cpp<180:8> [b2PolygonShape.cpp <241:22 241:22>]
LOCAL_SYMBOL: b2PolygonShape.cpp<238:13> [b2PolygonShape.cpp <241:26 241:26>]
LOCAL_SYMBOL: b2PolygonShape.cpp<242:10> [b2PolygonShape.cpp <242:10 242:13>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> b2Vec2 [b2PolygonShape.cpp <242:3 242:8>]
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <242:32 242:32>]
REFERENCE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <242:17 242:26>]
LOCAL_SYMBOL: b2PolygonShape.cpp<241:9> [b2PolygonShape.cpp <242:28 242:29>]
REFERENCE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <242:34 242:43>]
LOCAL_SYMBOL: b2PolygonShape.cpp<240:9> [b2PolygonShape.cpp <242:45 242:46>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> void [b2PolygonShape.cpp <243:3 243:10>]
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> float32 b2Vec2::LengthSquared() const [b2PolygonShape.cpp <243:17 243:29>]
LOCAL_SYMBOL: b2PolygonShape.cpp<242:10> [b2PolygonShape.cpp <243:12 243:15>]
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> void _wassert(const wchar_t *, const wchar_t *, unsigned int) [b2PolygonShape.cpp <243:3 243:10>]
REFERENCE_TYPE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> unsigned int [b2PolygonShape.cpp <243:3 243:10>]
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2PolygonShape.cpp <244:16 244:16>]
REFERENCE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> b2Vec2 [] b2PolygonShape::m_normals [b2PolygonShape.cpp <244:3 244:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<238:13> [b2PolygonShape.cpp <244:13 244:13>]
SYMBOL_FUNCTION b2Vec2 b2Cross(const b2Vec2 &, float32)
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> b2Vec2 b2Cross(const b2Vec2 &, float32) [b2PolygonShape.cpp <244:18 244:24>]
LOCAL_SYMBOL: b2PolygonShape.cpp<242:10> [b2PolygonShape.cpp <244:26 244:29>]
SYMBOL_FUNCTION float32 b2Vec2::Normalize()
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> float32 b2Vec2::Normalize() [b2PolygonShape.cpp <245:16 245:24>]
REFERENCE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> b2Vec2 [] b2PolygonShape::m_normals [b2PolygonShape.cpp <245:3 245:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<238:13> [b2PolygonShape.cpp <245:13 245:13>]
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2PolygonShape.cpp <249:13 249:13>]
REFERENCE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> b2Vec2 b2PolygonShape::m_centroid [b2PolygonShape.cpp <249:2 249:11>]
SYMBOL_FUNCTION static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp)
REFERENCE_CALL void b2PolygonShape::Set(const b2Vec2 *, int32) -> static b2Vec2 ComputeCentroid(const b2Vec2 *, int32) (b2PolygonShape.cpp) [b2PolygonShape.cpp <249:15 249:29>]
REFERENCE_USAGE void b2PolygonShape::Set(const b2Vec2 *, int32) -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <249:31 249:40>]
LOCAL_SYMBOL: b2PolygonShape.cpp<180:8> [b2PolygonShape.cpp <249:43 249:43>]
SYMBOL_METHOD public bool b2PolygonShape::TestPoint(const b2Transform &, const b2Vec2 &) const [b2PolygonShape.cpp <252:1 <252:22 252:30> 266:1>]
REFERENCE_OVERRIDE bool b2PolygonShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> bool b2Shape::TestPoint(const b2Transform &, const b2Vec2 &) const [b2PolygonShape.cpp <252:22 252:30>]
QUALIFIER: b2PolygonShape [b2PolygonShape.cpp <252:6 252:19>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> bool [b2PolygonShape.cpp <252:1 252:4>]
LOCAL_SYMBOL: b2PolygonShape.cpp<252:51> [b2PolygonShape.cpp <252:51 252:52>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> b2Transform [b2PolygonShape.cpp <252:38 252:48>]
LOCAL_SYMBOL: b2PolygonShape.cpp<252:69> [b2PolygonShape.cpp <252:69 252:69>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> b2Vec2 [b2PolygonShape.cpp <252:61 252:66>]
LOCAL_SYMBOL: b2PolygonShape.cpp<254:9> [b2PolygonShape.cpp <254:9 254:14>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> b2Vec2 [b2PolygonShape.cpp <254:2 254:7>]
REFERENCE_CALL bool b2PolygonShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) [b2PolygonShape.cpp <254:18 254:23>]
REFERENCE_USAGE bool b2PolygonShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> b2Rot b2Transform::q [b2PolygonShape.cpp <254:28 254:28>]
LOCAL_SYMBOL: b2PolygonShape.cpp<252:51> [b2PolygonShape.cpp <254:25 254:26>]
REFERENCE_CALL bool b2PolygonShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <254:33 254:33>]
LOCAL_SYMBOL: b2PolygonShape.cpp<252:69> [b2PolygonShape.cpp <254:31 254:31>]
REFERENCE_USAGE bool b2PolygonShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> b2Vec2 b2Transform::p [b2PolygonShape.cpp <254:38 254:38>]
LOCAL_SYMBOL: b2PolygonShape.cpp<252:51> [b2PolygonShape.cpp <254:35 254:36>]
LOCAL_SYMBOL: b2PolygonShape.cpp<256:13> [b2PolygonShape.cpp <256:13 256:13>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> int32 [b2PolygonShape.cpp <256:7 256:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<256:13> [b2PolygonShape.cpp <256:20 256:20>]
REFERENCE_USAGE bool b2PolygonShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> int32 b2PolygonShape::m_count [b2PolygonShape.cpp <256:24 256:30>]
LOCAL_SYMBOL: b2PolygonShape.cpp<256:13> [b2PolygonShape.cpp <256:35 256:35>]
LOCAL_SYMBOL: b2PolygonShape.cpp<258:11> [b2PolygonShape.cpp <258:11 258:13>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> float32 [b2PolygonShape.cpp <258:3 258:9>]
REFERENCE_CALL bool b2PolygonShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <258:17 258:21>]
REFERENCE_USAGE bool b2PolygonShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> b2Vec2 [] b2PolygonShape::m_normals [b2PolygonShape.cpp <258:23 258:31>]
LOCAL_SYMBOL: b2PolygonShape.cpp<256:13> [b2PolygonShape.cpp <258:33 258:33>]
REFERENCE_CALL bool b2PolygonShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <258:44 258:44>]
LOCAL_SYMBOL: b2PolygonShape.cpp<254:9> [b2PolygonShape.cpp <258:37 258:42>]
REFERENCE_USAGE bool b2PolygonShape::TestPoint(const b2Transform &, const b2Vec2 &) const -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <258:46 258:55>]
LOCAL_SYMBOL: b2PolygonShape.cpp<256:13> [b2PolygonShape.cpp <258:57 258:57>]
LOCAL_SYMBOL: b2PolygonShape.cpp<258:11> [b2PolygonShape.cpp <259:7 259:9>]
SYMBOL_METHOD public bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const [b2PolygonShape.cpp <268:1 <268:22 268:28> 338:1>]
REFERENCE_OVERRIDE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> bool b2Shape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const [b2PolygonShape.cpp <268:22 268:28>]
QUALIFIER: b2PolygonShape [b2PolygonShape.cpp <268:6 268:19>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> bool [b2PolygonShape.cpp <268:1 268:4>]
LOCAL_SYMBOL: b2PolygonShape.cpp<268:47> [b2PolygonShape.cpp <268:47 268:52>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2RayCastOutput [b2PolygonShape.cpp <268:30 268:44>]
LOCAL_SYMBOL: b2PolygonShape.cpp<268:77> [b2PolygonShape.cpp <268:77 268:81>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2RayCastInput [b2PolygonShape.cpp <268:61 268:74>]
LOCAL_SYMBOL: b2PolygonShape.cpp<269:28> [b2PolygonShape.cpp <269:28 269:29>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Transform [b2PolygonShape.cpp <269:15 269:25>]
LOCAL_SYMBOL: b2PolygonShape.cpp<269:38> [b2PolygonShape.cpp <269:38 269:47>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> int32 [b2PolygonShape.cpp <269:32 269:36>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> void [b2PolygonShape.cpp <271:2 271:12>]
LOCAL_SYMBOL: b2PolygonShape.cpp<269:38> [b2PolygonShape.cpp <271:14 271:23>]
LOCAL_SYMBOL: b2PolygonShape.cpp<274:9> [b2PolygonShape.cpp <274:9 274:10>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 [b2PolygonShape.cpp <274:2 274:7>]
REFERENCE_CALL bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) [b2PolygonShape.cpp <274:14 274:19>]
REFERENCE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Rot b2Transform::q [b2PolygonShape.cpp <274:24 274:24>]
LOCAL_SYMBOL: b2PolygonShape.cpp<269:28> [b2PolygonShape.cpp <274:21 274:22>]
REFERENCE_CALL bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <274:36 274:36>]
REFERENCE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 b2RayCastInput::p1 [b2PolygonShape.cpp <274:33 274:34>]
LOCAL_SYMBOL: b2PolygonShape.cpp<268:77> [b2PolygonShape.cpp <274:27 274:31>]
REFERENCE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 b2Transform::p [b2PolygonShape.cpp <274:41 274:41>]
LOCAL_SYMBOL: b2PolygonShape.cpp<269:28> [b2PolygonShape.cpp <274:38 274:39>]
LOCAL_SYMBOL: b2PolygonShape.cpp<275:9> [b2PolygonShape.cpp <275:9 275:10>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 [b2PolygonShape.cpp <275:2 275:7>]
REFERENCE_CALL bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) [b2PolygonShape.cpp <275:14 275:19>]
REFERENCE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Rot b2Transform::q [b2PolygonShape.cpp <275:24 275:24>]
LOCAL_SYMBOL: b2PolygonShape.cpp<269:28> [b2PolygonShape.cpp <275:21 275:22>]
REFERENCE_CALL bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <275:36 275:36>]
REFERENCE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 b2RayCastInput::p2 [b2PolygonShape.cpp <275:33 275:34>]
LOCAL_SYMBOL: b2PolygonShape.cpp<268:77> [b2PolygonShape.cpp <275:27 275:31>]
REFERENCE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 b2Transform::p [b2PolygonShape.cpp <275:41 275:41>]
LOCAL_SYMBOL: b2PolygonShape.cpp<269:28> [b2PolygonShape.cpp <275:38 275:39>]
LOCAL_SYMBOL: b2PolygonShape.cpp<276:9> [b2PolygonShape.cpp <276:9 276:9>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 [b2PolygonShape.cpp <276:2 276:7>]
REFERENCE_CALL bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <276:16 276:16>]
LOCAL_SYMBOL: b2PolygonShape.cpp<275:9> [b2PolygonShape.cpp <276:13 276:14>]
LOCAL_SYMBOL: b2PolygonShape.cpp<274:9> [b2PolygonShape.cpp <276:18 276:19>]
LOCAL_SYMBOL: b2PolygonShape.cpp<278:10> [b2PolygonShape.cpp <278:10 278:14>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> float32 [b2PolygonShape.cpp <278:2 278:8>]
LOCAL_SYMBOL: b2PolygonShape.cpp<278:24> [b2PolygonShape.cpp <278:24 278:28>]
REFERENCE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> float32 b2RayCastInput::maxFraction [b2PolygonShape.cpp <278:38 278:48>]
LOCAL_SYMBOL: b2PolygonShape.cpp<268:77> [b2PolygonShape.cpp <278:32 278:36>]
LOCAL_SYMBOL: b2PolygonShape.cpp<280:8> [b2PolygonShape.cpp <280:8 280:12>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> int32 [b2PolygonShape.cpp <280:2 280:6>]
LOCAL_SYMBOL: b2PolygonShape.cpp<282:13> [b2PolygonShape.cpp <282:13 282:13>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> int32 [b2PolygonShape.cpp <282:7 282:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<282:13> [b2PolygonShape.cpp <282:20 282:20>]
REFERENCE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> int32 b2PolygonShape::m_count [b2PolygonShape.cpp <282:24 282:30>]
LOCAL_SYMBOL: b2PolygonShape.cpp<282:13> [b2PolygonShape.cpp <282:35 282:35>]
LOCAL_SYMBOL: b2PolygonShape.cpp<287:11> [b2PolygonShape.cpp <287:11 287:19>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> float32 [b2PolygonShape.cpp <287:3 287:9>]
REFERENCE_CALL bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <287:23 287:27>]
REFERENCE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 [] b2PolygonShape::m_normals [b2PolygonShape.cpp <287:29 287:37>]
LOCAL_SYMBOL: b2PolygonShape.cpp<282:13> [b2PolygonShape.cpp <287:39 287:39>]
REFERENCE_CALL bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <287:57 287:57>]
REFERENCE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <287:43 287:52>]
LOCAL_SYMBOL: b2PolygonShape.cpp<282:13> [b2PolygonShape.cpp <287:54 287:54>]
LOCAL_SYMBOL: b2PolygonShape.cpp<274:9> [b2PolygonShape.cpp <287:59 287:60>]
LOCAL_SYMBOL: b2PolygonShape.cpp<288:11> [b2PolygonShape.cpp <288:11 288:21>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> float32 [b2PolygonShape.cpp <288:3 288:9>]
REFERENCE_CALL bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <288:25 288:29>]
REFERENCE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 [] b2PolygonShape::m_normals [b2PolygonShape.cpp <288:31 288:39>]
LOCAL_SYMBOL: b2PolygonShape.cpp<282:13> [b2PolygonShape.cpp <288:41 288:41>]
LOCAL_SYMBOL: b2PolygonShape.cpp<276:9> [b2PolygonShape.cpp <288:45 288:45>]
LOCAL_SYMBOL: b2PolygonShape.cpp<288:11> [b2PolygonShape.cpp <290:7 290:17>]
LOCAL_SYMBOL: b2PolygonShape.cpp<287:11> [b2PolygonShape.cpp <292:8 292:16>]
LOCAL_SYMBOL: b2PolygonShape.cpp<288:11> [b2PolygonShape.cpp <303:8 303:18>]
LOCAL_SYMBOL: b2PolygonShape.cpp<287:11> [b2PolygonShape.cpp <303:30 303:38>]
LOCAL_SYMBOL: b2PolygonShape.cpp<278:10> [b2PolygonShape.cpp <303:42 303:46>]
LOCAL_SYMBOL: b2PolygonShape.cpp<288:11> [b2PolygonShape.cpp <303:50 303:60>]
LOCAL_SYMBOL: b2PolygonShape.cpp<278:10> [b2PolygonShape.cpp <307:5 307:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<287:11> [b2PolygonShape.cpp <307:13 307:21>]
LOCAL_SYMBOL: b2PolygonShape.cpp<288:11> [b2PolygonShape.cpp <307:25 307:35>]
LOCAL_SYMBOL: b2PolygonShape.cpp<280:8> [b2PolygonShape.cpp <308:5 308:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<282:13> [b2PolygonShape.cpp <308:13 308:13>]
LOCAL_SYMBOL: b2PolygonShape.cpp<288:11> [b2PolygonShape.cpp <310:13 310:23>]
LOCAL_SYMBOL: b2PolygonShape.cpp<287:11> [b2PolygonShape.cpp <310:35 310:43>]
LOCAL_SYMBOL: b2PolygonShape.cpp<278:24> [b2PolygonShape.cpp <310:47 310:51>]
LOCAL_SYMBOL: b2PolygonShape.cpp<288:11> [b2PolygonShape.cpp <310:55 310:65>]
LOCAL_SYMBOL: b2PolygonShape.cpp<278:24> [b2PolygonShape.cpp <314:5 314:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<287:11> [b2PolygonShape.cpp <314:13 314:21>]
LOCAL_SYMBOL: b2PolygonShape.cpp<288:11> [b2PolygonShape.cpp <314:25 314:35>]
LOCAL_SYMBOL: b2PolygonShape.cpp<278:24> [b2PolygonShape.cpp <322:7 322:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<278:10> [b2PolygonShape.cpp <322:15 322:19>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> void [b2PolygonShape.cpp <328:2 328:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<278:10> [b2PolygonShape.cpp <328:19 328:23>]
LOCAL_SYMBOL: b2PolygonShape.cpp<278:10> [b2PolygonShape.cpp <328:28 328:32>]
REFERENCE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> float32 b2RayCastInput::maxFraction [b2PolygonShape.cpp <328:43 328:53>]
LOCAL_SYMBOL: b2PolygonShape.cpp<268:77> [b2PolygonShape.cpp <328:37 328:41>]
REFERENCE_CALL bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> void _wassert(const wchar_t *, const wchar_t *, unsigned int) [b2PolygonShape.cpp <328:2 328:9>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> unsigned int [b2PolygonShape.cpp <328:2 328:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<280:8> [b2PolygonShape.cpp <330:6 330:10>]
REFERENCE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> float32 b2RayCastOutput::fraction [b2PolygonShape.cpp <332:11 332:18>]
LOCAL_SYMBOL: b2PolygonShape.cpp<268:47> [b2PolygonShape.cpp <332:3 332:8>]
LOCAL_SYMBOL: b2PolygonShape.cpp<278:10> [b2PolygonShape.cpp <332:22 332:26>]
REFERENCE_CALL bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2PolygonShape.cpp <333:18 333:18>]
REFERENCE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 b2RayCastOutput::normal [b2PolygonShape.cpp <333:11 333:16>]
LOCAL_SYMBOL: b2PolygonShape.cpp<268:47> [b2PolygonShape.cpp <333:3 333:8>]
REFERENCE_CALL bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2PolygonShape.cpp <333:20 333:24>]
REFERENCE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Rot b2Transform::q [b2PolygonShape.cpp <333:29 333:29>]
LOCAL_SYMBOL: b2PolygonShape.cpp<269:28> [b2PolygonShape.cpp <333:26 333:27>]
REFERENCE_USAGE bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const -> b2Vec2 [] b2PolygonShape::m_normals [b2PolygonShape.cpp <333:32 333:40>]
LOCAL_SYMBOL: b2PolygonShape.cpp<280:8> [b2PolygonShape.cpp <333:42 333:46>]
SYMBOL_METHOD public void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const [b2PolygonShape.cpp <340:1 <340:22 340:32> 357:1>]
REFERENCE_OVERRIDE void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> void b2Shape::ComputeAABB(b2AABB *, const b2Transform &, int32) const [b2PolygonShape.cpp <340:22 340:32>]
QUALIFIER: b2PolygonShape [b2PolygonShape.cpp <340:6 340:19>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> void [b2PolygonShape.cpp <340:1 340:4>]
LOCAL_SYMBOL: b2PolygonShape.cpp<340:42> [b2PolygonShape.cpp <340:42 340:45>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2AABB [b2PolygonShape.cpp <340:34 340:39>]
LOCAL_SYMBOL: b2PolygonShape.cpp<340:67> [b2PolygonShape.cpp <340:67 340:68>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Transform [b2PolygonShape.cpp <340:54 340:64>]
LOCAL_SYMBOL: b2PolygonShape.cpp<340:77> [b2PolygonShape.cpp <340:77 340:86>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> int32 [b2PolygonShape.cpp <340:71 340:75>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> void [b2PolygonShape.cpp <342:2 342:12>]
LOCAL_SYMBOL: b2PolygonShape.cpp<340:77> [b2PolygonShape.cpp <342:14 342:23>]
LOCAL_SYMBOL: b2PolygonShape.cpp<344:9> [b2PolygonShape.cpp <344:9 344:13>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 [b2PolygonShape.cpp <344:2 344:7>]
REFERENCE_CALL void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2PolygonShape.cpp <344:17 344:21>]
LOCAL_SYMBOL: b2PolygonShape.cpp<340:67> [b2PolygonShape.cpp <344:23 344:24>]
REFERENCE_USAGE void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <344:27 344:36>]
LOCAL_SYMBOL: b2PolygonShape.cpp<345:9> [b2PolygonShape.cpp <345:9 345:13>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 [b2PolygonShape.cpp <345:2 345:7>]
REFERENCE_CALL void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PolygonShape.cpp <345:17 345:21>]
LOCAL_SYMBOL: b2PolygonShape.cpp<344:9> [b2PolygonShape.cpp <345:17 345:21>]
LOCAL_SYMBOL: b2PolygonShape.cpp<347:13> [b2PolygonShape.cpp <347:13 347:13>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> int32 [b2PolygonShape.cpp <347:7 347:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<347:13> [b2PolygonShape.cpp <347:20 347:20>]
REFERENCE_USAGE void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> int32 b2PolygonShape::m_count [b2PolygonShape.cpp <347:24 347:30>]
LOCAL_SYMBOL: b2PolygonShape.cpp<347:13> [b2PolygonShape.cpp <347:35 347:35>]
LOCAL_SYMBOL: b2PolygonShape.cpp<349:10> [b2PolygonShape.cpp <349:10 349:10>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 [b2PolygonShape.cpp <349:3 349:8>]
REFERENCE_CALL void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2PolygonShape.cpp <349:14 349:18>]
LOCAL_SYMBOL: b2PolygonShape.cpp<340:67> [b2PolygonShape.cpp <349:20 349:21>]
REFERENCE_USAGE void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <349:24 349:33>]
LOCAL_SYMBOL: b2PolygonShape.cpp<347:13> [b2PolygonShape.cpp <349:35 349:35>]
REFERENCE_CALL void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2PolygonShape.cpp <350:9 350:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<344:9> [b2PolygonShape.cpp <350:3 350:7>]
REFERENCE_CALL void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <350:11 350:15>]
LOCAL_SYMBOL: b2PolygonShape.cpp<344:9> [b2PolygonShape.cpp <350:17 350:21>]
LOCAL_SYMBOL: b2PolygonShape.cpp<349:10> [b2PolygonShape.cpp <350:24 350:24>]
REFERENCE_CALL void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2PolygonShape.cpp <351:9 351:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<345:9> [b2PolygonShape.cpp <351:3 351:7>]
REFERENCE_CALL void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <351:11 351:15>]
LOCAL_SYMBOL: b2PolygonShape.cpp<345:9> [b2PolygonShape.cpp <351:17 351:21>]
LOCAL_SYMBOL: b2PolygonShape.cpp<349:10> [b2PolygonShape.cpp <351:24 351:24>]
LOCAL_SYMBOL: b2PolygonShape.cpp<354:9> [b2PolygonShape.cpp <354:9 354:9>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 [b2PolygonShape.cpp <354:2 354:7>]
REFERENCE_CALL void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> void b2Vec2::b2Vec2(float32, float32) [b2PolygonShape.cpp <354:9 354:9>]
REFERENCE_USAGE void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> float32 b2Shape::m_radius [b2PolygonShape.cpp <354:11 354:18>]
REFERENCE_USAGE void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> float32 b2Shape::m_radius [b2PolygonShape.cpp <354:21 354:28>]
REFERENCE_CALL void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2PolygonShape.cpp <355:19 355:19>]
REFERENCE_USAGE void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 b2AABB::lowerBound [b2PolygonShape.cpp <355:8 355:17>]
LOCAL_SYMBOL: b2PolygonShape.cpp<340:42> [b2PolygonShape.cpp <355:2 355:5>]
REFERENCE_CALL void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <355:27 355:27>]
LOCAL_SYMBOL: b2PolygonShape.cpp<344:9> [b2PolygonShape.cpp <355:21 355:25>]
LOCAL_SYMBOL: b2PolygonShape.cpp<354:9> [b2PolygonShape.cpp <355:29 355:29>]
REFERENCE_CALL void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2PolygonShape.cpp <356:19 356:19>]
REFERENCE_USAGE void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 b2AABB::upperBound [b2PolygonShape.cpp <356:8 356:17>]
LOCAL_SYMBOL: b2PolygonShape.cpp<340:42> [b2PolygonShape.cpp <356:2 356:5>]
REFERENCE_CALL void b2PolygonShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <356:27 356:27>]
LOCAL_SYMBOL: b2PolygonShape.cpp<345:9> [b2PolygonShape.cpp <356:21 356:25>]
LOCAL_SYMBOL: b2PolygonShape.cpp<354:9> [b2PolygonShape.cpp <356:29 356:29>]
SYMBOL_METHOD public void b2PolygonShape::ComputeMass(b2MassData *, float32) const [b2PolygonShape.cpp <359:1 <359:22 359:32> 440:1>]
REFERENCE_OVERRIDE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> void b2Shape::ComputeMass(b2MassData *, float32) const [b2PolygonShape.cpp <359:22 359:32>]
QUALIFIER: b2PolygonShape [b2PolygonShape.cpp <359:6 359:19>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> void [b2PolygonShape.cpp <359:1 359:4>]
LOCAL_SYMBOL: b2PolygonShape.cpp<359:46> [b2PolygonShape.cpp <359:46 359:53>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> b2MassData [b2PolygonShape.cpp <359:34 359:43>]
LOCAL_SYMBOL: b2PolygonShape.cpp<359:64> [b2PolygonShape.cpp <359:64 359:70>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> float32 [b2PolygonShape.cpp <359:56 359:62>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> void [b2PolygonShape.cpp <385:2 385:9>]
REFERENCE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> int32 b2PolygonShape::m_count [b2PolygonShape.cpp <385:11 385:17>]
REFERENCE_CALL void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> void _wassert(const wchar_t *, const wchar_t *, unsigned int) [b2PolygonShape.cpp <385:2 385:9>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> unsigned int [b2PolygonShape.cpp <385:2 385:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<387:9> [b2PolygonShape.cpp <387:9 387:14>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> b2Vec2 [b2PolygonShape.cpp <387:2 387:7>]
REFERENCE_CALL void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> void b2Vec2::b2Vec2() [b2PolygonShape.cpp <387:9 387:14>]
REFERENCE_CALL void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> void b2Vec2::Set(float32, float32) [b2PolygonShape.cpp <387:24 387:26>]
LOCAL_SYMBOL: b2PolygonShape.cpp<387:9> [b2PolygonShape.cpp <387:17 387:22>]
LOCAL_SYMBOL: b2PolygonShape.cpp<388:10> [b2PolygonShape.cpp <388:10 388:13>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> float32 [b2PolygonShape.cpp <388:2 388:8>]
LOCAL_SYMBOL: b2PolygonShape.cpp<389:10> [b2PolygonShape.cpp <389:10 389:10>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> float32 [b2PolygonShape.cpp <389:2 389:8>]
LOCAL_SYMBOL: b2PolygonShape.cpp<393:9> [b2PolygonShape.cpp <393:9 393:9>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> b2Vec2 [b2PolygonShape.cpp <393:2 393:7>]
REFERENCE_CALL void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> void b2Vec2::b2Vec2(float32, float32) [b2PolygonShape.cpp <393:9 393:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<396:13> [b2PolygonShape.cpp <396:13 396:13>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> int32 [b2PolygonShape.cpp <396:7 396:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<396:13> [b2PolygonShape.cpp <396:20 396:20>]
REFERENCE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> int32 b2PolygonShape::m_count [b2PolygonShape.cpp <396:24 396:30>]
LOCAL_SYMBOL: b2PolygonShape.cpp<396:13> [b2PolygonShape.cpp <396:35 396:35>]
REFERENCE_CALL void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> void b2Vec2::operator+=(const b2Vec2 &) [b2PolygonShape.cpp <398:5 398:6>]
LOCAL_SYMBOL: b2PolygonShape.cpp<393:9> [b2PolygonShape.cpp <398:3 398:3>]
REFERENCE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <398:8 398:17>]
LOCAL_SYMBOL: b2PolygonShape.cpp<396:13> [b2PolygonShape.cpp <398:19 398:19>]
REFERENCE_CALL void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> void b2Vec2::operator*=(float32) [b2PolygonShape.cpp <400:4 400:5>]
LOCAL_SYMBOL: b2PolygonShape.cpp<393:9> [b2PolygonShape.cpp <400:2 400:2>]
REFERENCE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> int32 b2PolygonShape::m_count [b2PolygonShape.cpp <400:14 400:20>]
LOCAL_SYMBOL: b2PolygonShape.cpp<402:16> [b2PolygonShape.cpp <402:16 402:21>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> float32 [b2PolygonShape.cpp <402:8 402:14>]
LOCAL_SYMBOL: b2PolygonShape.cpp<404:13> [b2PolygonShape.cpp <404:13 404:13>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> int32 [b2PolygonShape.cpp <404:7 404:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<404:13> [b2PolygonShape.cpp <404:20 404:20>]
REFERENCE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> int32 b2PolygonShape::m_count [b2PolygonShape.cpp <404:24 404:30>]
LOCAL_SYMBOL: b2PolygonShape.cpp<404:13> [b2PolygonShape.cpp <404:35 404:35>]
LOCAL_SYMBOL: b2PolygonShape.cpp<407:10> [b2PolygonShape.cpp <407:10 407:11>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> b2Vec2 [b2PolygonShape.cpp <407:3 407:8>]
REFERENCE_CALL void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <407:29 407:29>]
REFERENCE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <407:15 407:24>]
LOCAL_SYMBOL: b2PolygonShape.cpp<404:13> [b2PolygonShape.cpp <407:26 407:26>]
LOCAL_SYMBOL: b2PolygonShape.cpp<393:9> [b2PolygonShape.cpp <407:31 407:31>]
LOCAL_SYMBOL: b2PolygonShape.cpp<408:10> [b2PolygonShape.cpp <408:10 408:11>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> b2Vec2 [b2PolygonShape.cpp <408:3 408:8>]
LOCAL_SYMBOL: b2PolygonShape.cpp<404:13> [b2PolygonShape.cpp <408:15 408:15>]
REFERENCE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> int32 b2PolygonShape::m_count [b2PolygonShape.cpp <408:23 408:29>]
REFERENCE_CALL void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <408:49 408:49>]
REFERENCE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <408:33 408:42>]
LOCAL_SYMBOL: b2PolygonShape.cpp<404:13> [b2PolygonShape.cpp <408:44 408:44>]
LOCAL_SYMBOL: b2PolygonShape.cpp<393:9> [b2PolygonShape.cpp <408:51 408:51>]
REFERENCE_CALL void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <408:69 408:69>]
REFERENCE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <408:55 408:64>]
LOCAL_SYMBOL: b2PolygonShape.cpp<393:9> [b2PolygonShape.cpp <408:71 408:71>]
LOCAL_SYMBOL: b2PolygonShape.cpp<410:11> [b2PolygonShape.cpp <410:11 410:11>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> float32 [b2PolygonShape.cpp <410:3 410:9>]
REFERENCE_CALL void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <410:15 410:21>]
LOCAL_SYMBOL: b2PolygonShape.cpp<407:10> [b2PolygonShape.cpp <410:23 410:24>]
LOCAL_SYMBOL: b2PolygonShape.cpp<408:10> [b2PolygonShape.cpp <410:27 410:28>]
LOCAL_SYMBOL: b2PolygonShape.cpp<412:11> [b2PolygonShape.cpp <412:11 412:22>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> float32 [b2PolygonShape.cpp <412:3 412:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<410:11> [b2PolygonShape.cpp <412:33 412:33>]
LOCAL_SYMBOL: b2PolygonShape.cpp<388:10> [b2PolygonShape.cpp <413:3 413:6>]
LOCAL_SYMBOL: b2PolygonShape.cpp<412:11> [b2PolygonShape.cpp <413:11 413:22>]
REFERENCE_CALL void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> void b2Vec2::operator+=(const b2Vec2 &) [b2PolygonShape.cpp <416:10 416:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<387:9> [b2PolygonShape.cpp <416:3 416:8>]
REFERENCE_CALL void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PolygonShape.cpp <416:35 416:35>]
LOCAL_SYMBOL: b2PolygonShape.cpp<412:11> [b2PolygonShape.cpp <416:13 416:24>]
LOCAL_SYMBOL: b2PolygonShape.cpp<402:16> [b2PolygonShape.cpp <416:28 416:33>]
REFERENCE_CALL void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <416:41 416:41>]
LOCAL_SYMBOL: b2PolygonShape.cpp<407:10> [b2PolygonShape.cpp <416:38 416:39>]
LOCAL_SYMBOL: b2PolygonShape.cpp<408:10> [b2PolygonShape.cpp <416:43 416:44>]
LOCAL_SYMBOL: b2PolygonShape.cpp<418:11> [b2PolygonShape.cpp <418:11 418:13>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> float32 [b2PolygonShape.cpp <418:3 418:9>]
REFERENCE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> float32 b2Vec2::x [b2PolygonShape.cpp <418:20 418:20>]
LOCAL_SYMBOL: b2PolygonShape.cpp<407:10> [b2PolygonShape.cpp <418:17 418:18>]
LOCAL_SYMBOL: b2PolygonShape.cpp<418:23> [b2PolygonShape.cpp <418:23 418:25>]
REFERENCE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> float32 b2Vec2::y [b2PolygonShape.cpp <418:32 418:32>]
LOCAL_SYMBOL: b2PolygonShape.cpp<407:10> [b2PolygonShape.cpp <418:29 418:30>]
LOCAL_SYMBOL: b2PolygonShape.cpp<419:11> [b2PolygonShape.cpp <419:11 419:13>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> float32 [b2PolygonShape.cpp <419:3 419:9>]
REFERENCE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> float32 b2Vec2::x [b2PolygonShape.cpp <419:20 419:20>]
LOCAL_SYMBOL: b2PolygonShape.cpp<408:10> [b2PolygonShape.cpp <419:17 419:18>]
LOCAL_SYMBOL: b2PolygonShape.cpp<419:23> [b2PolygonShape.cpp <419:23 419:25>]
REFERENCE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> float32 b2Vec2::y [b2PolygonShape.cpp <419:32 419:32>]
LOCAL_SYMBOL: b2PolygonShape.cpp<408:10> [b2PolygonShape.cpp <419:29 419:30>]
LOCAL_SYMBOL: b2PolygonShape.cpp<421:11> [b2PolygonShape.cpp <421:11 421:15>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> float32 [b2PolygonShape.cpp <421:3 421:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<418:11> [b2PolygonShape.cpp <421:19 421:21>]
LOCAL_SYMBOL: b2PolygonShape.cpp<418:11> [b2PolygonShape.cpp <421:23 421:25>]
LOCAL_SYMBOL: b2PolygonShape.cpp<419:11> [b2PolygonShape.cpp <421:29 421:31>]
LOCAL_SYMBOL: b2PolygonShape.cpp<418:11> [b2PolygonShape.cpp <421:33 421:35>]
LOCAL_SYMBOL: b2PolygonShape.cpp<419:11> [b2PolygonShape.cpp <421:39 421:41>]
LOCAL_SYMBOL: b2PolygonShape.cpp<419:11> [b2PolygonShape.cpp <421:43 421:45>]
LOCAL_SYMBOL: b2PolygonShape.cpp<422:11> [b2PolygonShape.cpp <422:11 422:15>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> float32 [b2PolygonShape.cpp <422:3 422:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<418:23> [b2PolygonShape.cpp <422:19 422:21>]
LOCAL_SYMBOL: b2PolygonShape.cpp<418:23> [b2PolygonShape.cpp <422:23 422:25>]
LOCAL_SYMBOL: b2PolygonShape.cpp<419:23> [b2PolygonShape.cpp <422:29 422:31>]
LOCAL_SYMBOL: b2PolygonShape.cpp<418:23> [b2PolygonShape.cpp <422:33 422:35>]
LOCAL_SYMBOL: b2PolygonShape.cpp<419:23> [b2PolygonShape.cpp <422:39 422:41>]
LOCAL_SYMBOL: b2PolygonShape.cpp<419:23> [b2PolygonShape.cpp <422:43 422:45>]
LOCAL_SYMBOL: b2PolygonShape.cpp<389:10> [b2PolygonShape.cpp <424:3 424:3>]
LOCAL_SYMBOL: b2PolygonShape.cpp<402:16> [b2PolygonShape.cpp <424:17 424:22>]
LOCAL_SYMBOL: b2PolygonShape.cpp<410:11> [b2PolygonShape.cpp <424:26 424:26>]
LOCAL_SYMBOL: b2PolygonShape.cpp<421:11> [b2PolygonShape.cpp <424:32 424:36>]
LOCAL_SYMBOL: b2PolygonShape.cpp<422:11> [b2PolygonShape.cpp <424:40 424:44>]
REFERENCE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> float32 b2MassData::mass [b2PolygonShape.cpp <428:12 428:15>]
LOCAL_SYMBOL: b2PolygonShape.cpp<359:46> [b2PolygonShape.cpp <428:2 428:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<359:64> [b2PolygonShape.cpp <428:19 428:25>]
LOCAL_SYMBOL: b2PolygonShape.cpp<388:10> [b2PolygonShape.cpp <428:29 428:32>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> void [b2PolygonShape.cpp <431:2 431:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<388:10> [b2PolygonShape.cpp <431:11 431:14>]
REFERENCE_CALL void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> void _wassert(const wchar_t *, const wchar_t *, unsigned int) [b2PolygonShape.cpp <431:2 431:9>]
REFERENCE_TYPE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> unsigned int [b2PolygonShape.cpp <431:2 431:9>]
REFERENCE_CALL void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> void b2Vec2::operator*=(float32) [b2PolygonShape.cpp <432:9 432:10>]
LOCAL_SYMBOL: b2PolygonShape.cpp<387:9> [b2PolygonShape.cpp <432:2 432:7>]
LOCAL_SYMBOL: b2PolygonShape.cpp<388:10> [b2PolygonShape.cpp <432:19 432:22>]
REFERENCE_CALL void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2PolygonShape.cpp <433:19 433:19>]
REFERENCE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> b2Vec2 b2MassData::center [b2PolygonShape.cpp <433:12 433:17>]
LOCAL_SYMBOL: b2PolygonShape.cpp<359:46> [b2PolygonShape.cpp <433:2 433:9>]
REFERENCE_CALL void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <433:28 433:28>]
LOCAL_SYMBOL: b2PolygonShape.cpp<387:9> [b2PolygonShape.cpp <433:21 433:26>]
LOCAL_SYMBOL: b2PolygonShape.cpp<393:9> [b2PolygonShape.cpp <433:30 433:30>]
REFERENCE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> float32 b2MassData::I [b2PolygonShape.cpp <436:12 436:12>]
LOCAL_SYMBOL: b2PolygonShape.cpp<359:46> [b2PolygonShape.cpp <436:2 436:9>]
LOCAL_SYMBOL: b2PolygonShape.cpp<359:64> [b2PolygonShape.cpp <436:16 436:22>]
LOCAL_SYMBOL: b2PolygonShape.cpp<389:10> [b2PolygonShape.cpp <436:26 436:26>]
REFERENCE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> float32 b2MassData::I [b2PolygonShape.cpp <439:12 439:12>]
LOCAL_SYMBOL: b2PolygonShape.cpp<359:46> [b2PolygonShape.cpp <439:2 439:9>]
REFERENCE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> float32 b2MassData::mass [b2PolygonShape.cpp <439:27 439:30>]
LOCAL_SYMBOL: b2PolygonShape.cpp<359:46> [b2PolygonShape.cpp <439:17 439:24>]
REFERENCE_CALL void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <439:35 439:39>]
REFERENCE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> b2Vec2 b2MassData::center [b2PolygonShape.cpp <439:51 439:56>]
LOCAL_SYMBOL: b2PolygonShape.cpp<359:46> [b2PolygonShape.cpp <439:41 439:48>]
REFERENCE_USAGE void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> b2Vec2 b2MassData::center [b2PolygonShape.cpp <439:69 439:74>]
LOCAL_SYMBOL: b2PolygonShape.cpp<359:46> [b2PolygonShape.cpp <439:59 439:66>]
REFERENCE_CALL void b2PolygonShape::ComputeMass(b2MassData *, float32) const -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <439:79 439:83>]
LOCAL_SYMBOL: b2PolygonShape.cpp<387:9> [b2PolygonShape.cpp <439:85 439:90>]
LOCAL_SYMBOL: b2PolygonShape.cpp<387:9> [b2PolygonShape.cpp <439:93 439:98>]
SYMBOL_METHOD public bool b2PolygonShape::Validate() const [b2PolygonShape.cpp <442:1 <442:22 442:29> 468:1>]
QUALIFIER: b2PolygonShape [b2PolygonShape.cpp <442:6 442:19>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::Validate() const -> bool [b2PolygonShape.cpp <442:1 442:4>]
LOCAL_SYMBOL: b2PolygonShape.cpp<444:13> [b2PolygonShape.cpp <444:13 444:13>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::Validate() const -> int32 [b2PolygonShape.cpp <444:7 444:11>]
LOCAL_SYMBOL: b2PolygonShape.cpp<444:13> [b2PolygonShape.cpp <444:20 444:20>]
REFERENCE_USAGE bool b2PolygonShape::Validate() const -> int32 b2PolygonShape::m_count [b2PolygonShape.cpp <444:24 444:30>]
LOCAL_SYMBOL: b2PolygonShape.cpp<444:13> [b2PolygonShape.cpp <444:35 444:35>]
LOCAL_SYMBOL: b2PolygonShape.cpp<446:9> [b2PolygonShape.cpp <446:9 446:10>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::Validate() const -> int32 [b2PolygonShape.cpp <446:3 446:7>]
LOCAL_SYMBOL: b2PolygonShape.cpp<444:13> [b2PolygonShape.cpp <446:14 446:14>]
LOCAL_SYMBOL: b2PolygonShape.cpp<447:9> [b2PolygonShape.cpp <447:9 447:10>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::Validate() const -> int32 [b2PolygonShape.cpp <447:3 447:7>]
LOCAL_SYMBOL: b2PolygonShape.cpp<444:13> [b2PolygonShape.cpp <447:14 447:14>]
REFERENCE_USAGE bool b2PolygonShape::Validate() const -> int32 b2PolygonShape::m_count [b2PolygonShape.cpp <447:18 447:24>]
LOCAL_SYMBOL: b2PolygonShape.cpp<446:9> [b2PolygonShape.cpp <447:32 447:33>]
LOCAL_SYMBOL: b2PolygonShape.cpp<448:10> [b2PolygonShape.cpp <448:10 448:10>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::Validate() const -> b2Vec2 [b2PolygonShape.cpp <448:3 448:8>]
REFERENCE_CALL bool b2PolygonShape::Validate() const -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PolygonShape.cpp <448:27 448:27>]
REFERENCE_USAGE bool b2PolygonShape::Validate() const -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <448:14 448:23>]
LOCAL_SYMBOL: b2PolygonShape.cpp<446:9> [b2PolygonShape.cpp <448:25 448:26>]
LOCAL_SYMBOL: b2PolygonShape.cpp<449:10> [b2PolygonShape.cpp <449:10 449:10>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::Validate() const -> b2Vec2 [b2PolygonShape.cpp <449:3 449:8>]
REFERENCE_CALL bool b2PolygonShape::Validate() const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <449:29 449:29>]
REFERENCE_USAGE bool b2PolygonShape::Validate() const -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <449:14 449:23>]
LOCAL_SYMBOL: b2PolygonShape.cpp<447:9> [b2PolygonShape.cpp <449:25 449:26>]
LOCAL_SYMBOL: b2PolygonShape.cpp<448:10> [b2PolygonShape.cpp <449:31 449:31>]
LOCAL_SYMBOL: b2PolygonShape.cpp<451:14> [b2PolygonShape.cpp <451:14 451:14>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::Validate() const -> int32 [b2PolygonShape.cpp <451:8 451:12>]
LOCAL_SYMBOL: b2PolygonShape.cpp<451:14> [b2PolygonShape.cpp <451:21 451:21>]
REFERENCE_USAGE bool b2PolygonShape::Validate() const -> int32 b2PolygonShape::m_count [b2PolygonShape.cpp <451:25 451:31>]
LOCAL_SYMBOL: b2PolygonShape.cpp<451:14> [b2PolygonShape.cpp <451:36 451:36>]
LOCAL_SYMBOL: b2PolygonShape.cpp<451:14> [b2PolygonShape.cpp <453:8 453:8>]
LOCAL_SYMBOL: b2PolygonShape.cpp<446:9> [b2PolygonShape.cpp <453:13 453:14>]
LOCAL_SYMBOL: b2PolygonShape.cpp<451:14> [b2PolygonShape.cpp <453:19 453:19>]
LOCAL_SYMBOL: b2PolygonShape.cpp<447:9> [b2PolygonShape.cpp <453:24 453:25>]
LOCAL_SYMBOL: b2PolygonShape.cpp<458:11> [b2PolygonShape.cpp <458:11 458:11>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::Validate() const -> b2Vec2 [b2PolygonShape.cpp <458:4 458:9>]
REFERENCE_CALL bool b2PolygonShape::Validate() const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <458:29 458:29>]
REFERENCE_USAGE bool b2PolygonShape::Validate() const -> b2Vec2 [] b2PolygonShape::m_vertices [b2PolygonShape.cpp <458:15 458:24>]
LOCAL_SYMBOL: b2PolygonShape.cpp<451:14> [b2PolygonShape.cpp <458:26 458:26>]
LOCAL_SYMBOL: b2PolygonShape.cpp<448:10> [b2PolygonShape.cpp <458:31 458:31>]
LOCAL_SYMBOL: b2PolygonShape.cpp<459:12> [b2PolygonShape.cpp <459:12 459:12>]
REFERENCE_TYPE_USAGE bool b2PolygonShape::Validate() const -> float32 [b2PolygonShape.cpp <459:4 459:10>]
REFERENCE_CALL bool b2PolygonShape::Validate() const -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2PolygonShape.cpp <459:16 459:22>]
LOCAL_SYMBOL: b2PolygonShape.cpp<449:10> [b2PolygonShape.cpp <459:24 459:24>]
LOCAL_SYMBOL: b2PolygonShape.cpp<458:11> [b2PolygonShape.cpp <459:27 459:27>]
LOCAL_SYMBOL: b2PolygonShape.cpp<459:12> [b2PolygonShape.cpp <460:8 460:8>]
