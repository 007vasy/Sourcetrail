FILE: b2Math.cpp
FILE: b2Math.h
FILE: b2Settings.h
FILE: stddef.h non-indexed
FILE: corecrt.h non-indexed
FILE: vcruntime.h non-indexed
FILE: sal.h non-indexed
FILE: concurrencysal.h non-indexed
FILE: vadefs.h non-indexed
FILE: assert.h non-indexed
FILE: float.h non-indexed
FILE: math.h non-indexed
SYMBOL_MACRO: B2_MATH_H [b2Math.h <20:9 20:17>]
SYMBOL_MACRO: B2_SETTINGS_H [b2Settings.h <20:9 20:21>]
SYMBOL_MACRO: b2DEBUG [b2Settings.h <27:10 27:16>]
SYMBOL_MACRO: B2_NOT_USED [b2Settings.h <30:9 <30:9 30:19> 30:33>]
SYMBOL_MACRO: b2Assert [b2Settings.h <31:9 <31:9 31:16> 31:28>]
SYMBOL_MACRO: b2_maxFloat [b2Settings.h <42:9 <42:9 42:19> 42:21>]
SYMBOL_MACRO: b2_epsilon [b2Settings.h <43:9 <43:9 43:18> 43:20>]
SYMBOL_MACRO: b2_pi [b2Settings.h <44:9 <44:9 44:13> 44:16>]
SYMBOL_MACRO: b2_maxManifoldPoints [b2Settings.h <54:9 <54:9 54:28> 54:29>]
SYMBOL_MACRO: b2_maxPolygonVertices [b2Settings.h <58:9 <58:9 58:29> 58:30>]
SYMBOL_MACRO: b2_aabbExtension [b2Settings.h <63:9 <63:9 63:24> 63:26>]
SYMBOL_MACRO: b2_aabbMultiplier [b2Settings.h <68:9 <68:9 68:25> 68:27>]
SYMBOL_MACRO: b2_linearSlop [b2Settings.h <72:9 <72:9 72:21> 72:24>]
SYMBOL_MACRO: b2_angularSlop [b2Settings.h <76:9 <76:9 76:22> 76:47>]
SYMBOL_MACRO: b2_polygonRadius [b2Settings.h <81:9 <81:9 81:24> 81:47>]
SYMBOL_MACRO: b2_maxSubSteps [b2Settings.h <84:9 <84:9 84:22> 84:25>]
SYMBOL_MACRO: b2_maxTOIContacts [b2Settings.h <90:9 <90:9 90:25> 90:28>]
SYMBOL_MACRO: b2_velocityThreshold [b2Settings.h <94:9 <94:9 94:28> 94:30>]
SYMBOL_MACRO: b2_maxLinearCorrection [b2Settings.h <98:9 <98:9 98:30> 98:32>]
SYMBOL_MACRO: b2_maxAngularCorrection [b2Settings.h <102:9 <102:9 102:31> 102:55>]
SYMBOL_MACRO: b2_maxTranslation [b2Settings.h <106:9 <106:9 106:25> 106:28>]
SYMBOL_MACRO: b2_maxTranslationSquared [b2Settings.h <107:9 <107:9 107:32> 107:71>]
SYMBOL_MACRO: b2_maxRotation [b2Settings.h <111:9 <111:9 111:22> 111:39>]
SYMBOL_MACRO: b2_maxRotationSquared [b2Settings.h <112:9 <112:9 112:29> 112:63>]
SYMBOL_MACRO: b2_baumgarte [b2Settings.h <117:9 <117:9 117:20> 117:24>]
SYMBOL_MACRO: b2_toiBaugarte [b2Settings.h <118:9 <118:9 118:22> 118:26>]
SYMBOL_MACRO: b2_timeToSleep [b2Settings.h <124:9 <124:9 124:22> 124:26>]
SYMBOL_MACRO: b2_linearSleepTolerance [b2Settings.h <127:9 <127:9 127:31> 127:33>]
SYMBOL_MACRO: b2_angularSleepTolerance [b2Settings.h <130:9 <130:9 130:32> 130:55>]
SYMBOL_MACRO: b2Sqrt [b2Math.h <49:9 <49:9 49:14> 49:25>]
SYMBOL_MACRO: b2Atan2 [b2Math.h <50:9 <50:9 50:15> 50:33>]
SYMBOL_TYPEDEF: int8 [b2Settings.h <33:21 33:24>]
SYMBOL_BUILTIN_TYPE: signed char
SYMBOL_TYPEDEF: int16 [b2Settings.h <34:22 34:26>]
SYMBOL_BUILTIN_TYPE: short
SYMBOL_TYPEDEF: int32 [b2Settings.h <35:20 35:24>]
SYMBOL_BUILTIN_TYPE: int
SYMBOL_TYPEDEF: uint8 [b2Settings.h <36:23 36:27>]
SYMBOL_BUILTIN_TYPE: unsigned char
SYMBOL_TYPEDEF: uint16 [b2Settings.h <37:24 37:29>]
SYMBOL_BUILTIN_TYPE: unsigned short
SYMBOL_TYPEDEF: uint32 [b2Settings.h <38:22 38:27>]
SYMBOL_BUILTIN_TYPE: unsigned int
SYMBOL_TYPEDEF: float32 [b2Settings.h <39:15 39:21>]
SYMBOL_BUILTIN_TYPE: float
SYMBOL_TYPEDEF: float64 [b2Settings.h <40:16 40:22>]
SYMBOL_BUILTIN_TYPE: double
SYMBOL_FUNCTION: void * b2Alloc(int32) [b2Settings.h <135:1 <135:7 135:13> 135:25>]
SYMBOL_BUILTIN_TYPE: void
SYMBOL_FUNCTION: void b2Free(void *) [b2Settings.h <138:1 <138:6 138:11> 138:22>]
SYMBOL_FUNCTION: void b2Log(const char *) [b2Settings.h <141:1 <141:6 141:10> 141:35>]
SYMBOL_BUILTIN_TYPE: char
SYMBOL_STRUCT: b2Version [b2Settings.h <145:1 <145:8 145:16> 150:1>]
SYMBOL_FIELD: public int32 b2Version::major [b2Settings.h <147:8 147:12>]
SYMBOL_FIELD: public int32 b2Version::minor [b2Settings.h <148:8 148:12>]
SYMBOL_FIELD: public int32 b2Version::revision [b2Settings.h <149:8 149:15>]
SYMBOL_GLOBAL_VARIABLE: b2Version b2_version [b2Settings.h <153:18 153:27>]
SYMBOL_FUNCTION: bool b2IsValid(float32) [b2Math.h <26:1 <26:1 <26:13 26:21> 26:32> 30:1>]
SYMBOL_BUILTIN_TYPE: bool
SYMBOL_FUNCTION: float32 b2InvSqrt(float32) [b2Math.h <33:1 <33:1 <33:16 33:24> 33:35> 47:1>]
SYMBOL_UNION: b2InvSqrt::anonymous union (b2Math.h<35:2>) [b2Math.h <35:2 <35:2 35:6> 39:2>]
SYMBOL_FIELD: public float32 b2InvSqrt::anonymous union (b2Math.h<35:2>)::x [b2Math.h <37:11 37:11>]
SYMBOL_FIELD: public int32 b2InvSqrt::anonymous union (b2Math.h<35:2>)::i [b2Math.h <38:9 38:9>]
SYMBOL_METHOD: public void b2InvSqrt::anonymous union (b2Math.h<35:2>)::() [b2Math.h <35:2 <35:2 35:6> 35:6>]
SYMBOL_METHOD: public void b2InvSqrt::anonymous union (b2Math.h<35:2>)::(const b2InvSqrt::anonymous union (b2Math.h<35:2>) &) [b2Math.h <35:2 <35:2 35:6> 35:6>]
SYMBOL_METHOD: public void b2InvSqrt::anonymous union (b2Math.h<35:2>)::(b2InvSqrt::anonymous union (b2Math.h<35:2>) &&) [b2Math.h <35:2 <35:2 35:6> 35:6>]
SYMBOL_STRUCT: b2Vec2 [b2Math.h <53:1 <53:8 53:13> 141:1>]
SYMBOL_METHOD: public void b2Vec2::b2Vec2() [b2Math.h <56:2 <56:2 <56:2 56:7> 56:9> 56:12>]
SYMBOL_METHOD: public void b2Vec2::b2Vec2(float32, float32) [b2Math.h <59:2 <59:2 <59:2 59:7> 59:33> 59:53>]
SYMBOL_FIELD: public float32 b2Vec2::x [b2Math.h <140:10 140:10>]
SYMBOL_FIELD: public float32 b2Vec2::y [b2Math.h <140:13 140:13>]
SYMBOL_METHOD: public void b2Vec2::SetZero() [b2Math.h <62:2 <62:2 <62:7 62:13> 62:15> 62:39>]
SYMBOL_METHOD: public void b2Vec2::Set(float32, float32) [b2Math.h <65:2 <65:2 <65:7 65:9> 65:33> 65:53>]
SYMBOL_METHOD: public b2Vec2 b2Vec2::operator-() const [b2Math.h <68:2 <68:2 <68:9 68:18> 68:26> 68:65>]
SYMBOL_METHOD: public void b2Vec2::b2Vec2(b2Vec2 &&) [b2Math.h <53:8 <53:8 53:13> 53:13>]
SYMBOL_METHOD: public float32 b2Vec2::operator()(int32) const [b2Math.h <71:2 <71:2 <71:10 71:20> 71:36> 74:2>]
SYMBOL_METHOD: public float32 & b2Vec2::operator()(int32) [b2Math.h <77:2 <77:2 <77:11 77:21> 77:31> 80:2>]
SYMBOL_METHOD: public void b2Vec2::operator+=(const b2Vec2 &) [b2Math.h <83:2 <83:2 <83:7 83:17> 83:35> 86:2>]
SYMBOL_METHOD: public void b2Vec2::operator-=(const b2Vec2 &) [b2Math.h <89:2 <89:2 <89:7 89:17> 89:35> 92:2>]
SYMBOL_METHOD: public void b2Vec2::operator*=(float32) [b2Math.h <95:2 <95:2 <95:7 95:17> 95:29> 98:2>]
SYMBOL_METHOD: public float32 b2Vec2::Length() const [b2Math.h <101:2 <101:2 <101:10 101:15> 101:23> 104:2>]
SYMBOL_FUNCTION: float sqrtf(float)
SYMBOL_METHOD: public float32 b2Vec2::LengthSquared() const [b2Math.h <108:2 <108:2 <108:10 108:22> 108:30> 111:2>]
SYMBOL_METHOD: public float32 b2Vec2::Normalize() [b2Math.h <114:2 <114:2 <114:10 114:18> 114:20> 126:2>]
SYMBOL_METHOD: public bool b2Vec2::IsValid() const [b2Math.h <129:2 <129:2 <129:7 129:13> 129:21> 132:2>]
SYMBOL_METHOD: public b2Vec2 b2Vec2::Skew() const [b2Math.h <135:2 <135:2 <135:9 135:12> 135:20> 138:2>]
SYMBOL_METHOD: public void b2Vec2::b2Vec2(const b2Vec2 &) [b2Math.h <53:8 <53:8 53:13> 53:13>]
SYMBOL_METHOD: public void b2Vec2::~b2Vec2() [b2Math.h <53:8 <53:8 53:13> 53:13>]
SYMBOL_METHOD: public b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Math.h <53:8 <53:8 53:13> 53:13>]
SYMBOL_METHOD: public b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Math.h <53:8 <53:8 53:13> 53:13>]
SYMBOL_STRUCT: b2Vec3 [b2Math.h <144:1 <144:8 144:13> 180:1>]
SYMBOL_METHOD: public void b2Vec3::b2Vec3() [b2Math.h <147:2 <147:2 <147:2 147:7> 147:9> 147:12>]
SYMBOL_METHOD: public void b2Vec3::b2Vec3(float32, float32, float32) [b2Math.h <150:2 <150:2 <150:2 150:7> 150:46> 150:74>]
SYMBOL_FIELD: public float32 b2Vec3::x [b2Math.h <179:10 179:10>]
SYMBOL_FIELD: public float32 b2Vec3::y [b2Math.h <179:13 179:13>]
SYMBOL_FIELD: public float32 b2Vec3::z [b2Math.h <179:16 179:16>]
SYMBOL_METHOD: public void b2Vec3::SetZero() [b2Math.h <153:2 <153:2 <153:7 153:13> 153:15> 153:49>]
SYMBOL_METHOD: public void b2Vec3::Set(float32, float32, float32) [b2Math.h <156:2 <156:2 <156:7 156:9> 156:45> 156:73>]
SYMBOL_METHOD: public b2Vec3 b2Vec3::operator-() const [b2Math.h <159:2 <159:2 <159:9 159:18> 159:26> 159:69>]
SYMBOL_METHOD: public void b2Vec3::b2Vec3(b2Vec3 &&) [b2Math.h <144:8 <144:8 144:13> 144:13>]
SYMBOL_METHOD: public void b2Vec3::operator+=(const b2Vec3 &) [b2Math.h <162:2 <162:2 <162:7 162:17> 162:35> 165:2>]
SYMBOL_METHOD: public void b2Vec3::operator-=(const b2Vec3 &) [b2Math.h <168:2 <168:2 <168:7 168:17> 168:35> 171:2>]
SYMBOL_METHOD: public void b2Vec3::operator*=(float32) [b2Math.h <174:2 <174:2 <174:7 174:17> 174:29> 177:2>]
SYMBOL_METHOD: public void b2Vec3::b2Vec3(const b2Vec3 &) [b2Math.h <144:8 <144:8 144:13> 144:13>]
SYMBOL_METHOD: public b2Vec3 & b2Vec3::operator=(const b2Vec3 &) [b2Math.h <144:8 <144:8 144:13> 144:13>]
SYMBOL_METHOD: public b2Vec3 & b2Vec3::operator=(b2Vec3 &&) [b2Math.h <144:8 <144:8 144:13> 144:13>]
SYMBOL_METHOD: public void b2Vec3::~b2Vec3() [b2Math.h <144:8 <144:8 144:13> 144:13>]
SYMBOL_STRUCT: b2Mat22 [b2Math.h <183:1 <183:8 183:14> 254:1>]
SYMBOL_METHOD: public void b2Mat22::b2Mat22() [b2Math.h <186:2 <186:2 <186:2 186:8> 186:10> 186:13>]
SYMBOL_FIELD: public b2Vec2 b2Mat22::ex [b2Math.h <253:9 253:10>]
SYMBOL_FIELD: public b2Vec2 b2Mat22::ey [b2Math.h <253:13 253:14>]
SYMBOL_METHOD: public void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) [b2Math.h <189:2 <189:2 <189:2 189:8> 189:44> 193:2>]
SYMBOL_METHOD: public void b2Mat22::b2Mat22(float32, float32, float32, float32) [b2Math.h <196:2 <196:2 <196:2 196:8> 196:60> 200:2>]
SYMBOL_METHOD: public void b2Mat22::Set(const b2Vec2 &, const b2Vec2 &) [b2Math.h <203:2 <203:2 <203:7 203:9> 203:45> 207:2>]
SYMBOL_METHOD: public void b2Mat22::SetIdentity() [b2Math.h <210:2 <210:2 <210:7 210:17> 210:19> 214:2>]
SYMBOL_METHOD: public void b2Mat22::SetZero() [b2Math.h <217:2 <217:2 <217:7 217:13> 217:15> 221:2>]
SYMBOL_METHOD: public b2Mat22 b2Mat22::GetInverse() const [b2Math.h <223:2 <223:2 <223:10 223:19> 223:27> 235:2>]
SYMBOL_METHOD: public void b2Mat22::b2Mat22(b2Mat22 &&) [b2Math.h <183:8 <183:8 183:14> 183:14>]
SYMBOL_METHOD: public b2Vec2 b2Mat22::Solve(const b2Vec2 &) const [b2Math.h <239:2 <239:2 <239:9 239:13> 239:36> 251:2>]
SYMBOL_METHOD: public void b2Mat22::b2Mat22(const b2Mat22 &) [b2Math.h <183:8 <183:8 183:14> 183:14>]
SYMBOL_METHOD: public void b2Mat22::~b2Mat22() [b2Math.h <183:8 <183:8 183:14> 183:14>]
QUALIFIER: b2Mat33 [b2Math.cpp <25:8 25:14>]
QUALIFIER: b2Mat33 [b2Math.cpp <41:8 41:14>]
QUALIFIER: b2Mat33 [b2Math.cpp <56:6 56:12>]
QUALIFIER: b2Mat33 [b2Math.cpp <71:6 71:12>]
SYMBOL_STRUCT: b2Mat33 [b2Math.h <257:1 <257:8 257:14> 296:1>]
SYMBOL_METHOD: public void b2Mat33::b2Mat33() [b2Math.h <260:2 <260:2 <260:2 260:8> 260:10> 260:13>]
SYMBOL_FIELD: public b2Vec3 b2Mat33::ex [b2Math.h <295:9 295:10>]
SYMBOL_FIELD: public b2Vec3 b2Mat33::ey [b2Math.h <295:13 295:14>]
SYMBOL_FIELD: public b2Vec3 b2Mat33::ez [b2Math.h <295:17 295:18>]
SYMBOL_METHOD: public void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) [b2Math.h <263:2 <263:2 <263:2 263:8> 263:62> 268:2>]
SYMBOL_METHOD: public void b2Mat33::SetZero() [b2Math.h <271:2 <271:2 <271:7 271:13> 271:15> 276:2>]
SYMBOL_METHOD: public b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const [b2Math.cpp <25:1 <25:17 25:23> 37:1>]
SYMBOL_METHOD: public b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const [b2Math.h <280:2 <280:9 280:15> 280:38>]
SYMBOL_METHOD: public b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const [b2Math.cpp <41:1 <41:17 41:23> 53:1>]
SYMBOL_METHOD: public b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const [b2Math.h <285:2 <285:9 285:15> 285:38>]
SYMBOL_METHOD: public void b2Mat33::GetInverse22(b2Mat33 *) const [b2Math.cpp <56:1 <56:15 56:26> 68:1>]
SYMBOL_METHOD: public void b2Mat33::GetInverse22(b2Mat33 *) const [b2Math.h <289:2 <289:7 289:18> 289:36>]
SYMBOL_METHOD: public void b2Mat33::GetSymInverse33(b2Mat33 *) const [b2Math.cpp <71:1 <71:15 71:29> 94:1>]
SYMBOL_METHOD: public void b2Mat33::GetSymInverse33(b2Mat33 *) const [b2Math.h <293:2 <293:7 293:21> 293:39>]
SYMBOL_METHOD: public void b2Mat33::b2Mat33(const b2Mat33 &) [b2Math.h <257:8 <257:8 257:14> 257:14>]
SYMBOL_METHOD: public void b2Mat33::b2Mat33(b2Mat33 &&) [b2Math.h <257:8 <257:8 257:14> 257:14>]
SYMBOL_STRUCT: b2Rot [b2Math.h <299:1 <299:8 299:12> 346:1>]
SYMBOL_METHOD: public void b2Rot::b2Rot() [b2Math.h <301:2 <301:2 <301:2 301:6> 301:8> 301:11>]
SYMBOL_METHOD: public void b2Rot::b2Rot(float32) [b2Math.h <304:2 <304:2 <304:11 304:15> 304:30> 309:2>]
SYMBOL_FIELD: public float32 b2Rot::s [b2Math.h <345:10 345:10>]
SYMBOL_FUNCTION: float sinf(float)
SYMBOL_FIELD: public float32 b2Rot::c [b2Math.h <345:13 345:13>]
SYMBOL_FUNCTION: float cosf(float)
SYMBOL_METHOD: public void b2Rot::Set(float32) [b2Math.h <312:2 <312:2 <312:7 312:9> 312:24> 317:2>]
SYMBOL_METHOD: public void b2Rot::SetIdentity() [b2Math.h <320:2 <320:2 <320:7 320:17> 320:19> 324:2>]
SYMBOL_METHOD: public float32 b2Rot::GetAngle() const [b2Math.h <327:2 <327:2 <327:10 327:17> 327:25> 330:2>]
SYMBOL_FUNCTION: float atan2f(float, float)
SYMBOL_METHOD: public b2Vec2 b2Rot::GetXAxis() const [b2Math.h <333:2 <333:2 <333:9 333:16> 333:24> 336:2>]
SYMBOL_METHOD: public b2Vec2 b2Rot::GetYAxis() const [b2Math.h <339:2 <339:2 <339:9 339:16> 339:24> 342:2>]
SYMBOL_METHOD: public void b2Rot::b2Rot(const b2Rot &) [b2Math.h <299:8 <299:8 299:12> 299:12>]
SYMBOL_METHOD: public void b2Rot::b2Rot(b2Rot &&) [b2Math.h <299:8 <299:8 299:12> 299:12>]
SYMBOL_METHOD: public void b2Rot::~b2Rot() [b2Math.h <299:8 <299:8 299:12> 299:12>]
SYMBOL_METHOD: public b2Rot & b2Rot::operator=(const b2Rot &) [b2Math.h <299:8 <299:8 299:12> 299:12>]
SYMBOL_METHOD: public b2Rot & b2Rot::operator=(b2Rot &&) [b2Math.h <299:8 <299:8 299:12> 299:12>]
SYMBOL_STRUCT: b2Transform [b2Math.h <350:1 <350:8 350:18> 374:1>]
SYMBOL_METHOD: public void b2Transform::b2Transform() [b2Math.h <353:2 <353:2 <353:2 353:12> 353:14> 353:17>]
SYMBOL_FIELD: public b2Vec2 b2Transform::p [b2Math.h <372:9 372:9>]
SYMBOL_FIELD: public b2Rot b2Transform::q [b2Math.h <373:8 373:8>]
SYMBOL_METHOD: public void b2Transform::b2Transform(const b2Vec2 &, const b2Rot &) [b2Math.h <356:2 <356:2 <356:2 356:12> 356:59> 356:89>]
SYMBOL_METHOD: public void b2Transform::SetIdentity() [b2Math.h <359:2 <359:2 <359:7 359:17> 359:19> 363:2>]
SYMBOL_METHOD: public void b2Transform::Set(const b2Vec2 &, float32) [b2Math.h <366:2 <366:2 <366:7 366:9> 366:48> 370:2>]
SYMBOL_METHOD: public void b2Transform::b2Transform(const b2Transform &) [b2Math.h <350:8 <350:8 350:18> 350:18>]
SYMBOL_METHOD: public void b2Transform::b2Transform(b2Transform &&) [b2Math.h <350:8 <350:8 350:18> 350:18>]
QUALIFIER: b2Sweep [b2Math.h <697:13 697:19>]
QUALIFIER: b2Sweep [b2Math.h <707:13 707:19>]
QUALIFIER: b2Sweep [b2Math.h <717:13 717:19>]
SYMBOL_STRUCT: b2Sweep [b2Math.h <380:1 <380:8 380:14> 400:1>]
SYMBOL_METHOD: public void b2Sweep::GetTransform(b2Transform *, float32) const [b2Math.h <384:2 <384:7 384:18> 384:56>]
SYMBOL_METHOD: public void b2Sweep::GetTransform(b2Transform *, float32) const [b2Math.h <697:1 <697:22 697:33> 705:1>]
SYMBOL_METHOD: public void b2Sweep::Advance(float32) [b2Math.h <388:2 <388:7 388:13> 388:28>]
SYMBOL_METHOD: public void b2Sweep::Advance(float32) [b2Math.h <707:1 <707:22 707:28> 714:1>]
SYMBOL_METHOD: public void b2Sweep::Normalize() [b2Math.h <391:2 <391:7 391:15> 391:17>]
SYMBOL_METHOD: public void b2Sweep::Normalize() [b2Math.h <717:1 <717:22 717:30> 723:1>]
SYMBOL_FIELD: public b2Vec2 b2Sweep::localCenter [b2Math.h <393:9 393:19>]
SYMBOL_FIELD: public b2Vec2 b2Sweep::c0 [b2Math.h <394:9 394:10>]
SYMBOL_FIELD: public b2Vec2 b2Sweep::c [b2Math.h <394:13 394:13>]
SYMBOL_FIELD: public float32 b2Sweep::a0 [b2Math.h <395:10 395:11>]
SYMBOL_FIELD: public float32 b2Sweep::a [b2Math.h <395:14 395:14>]
SYMBOL_FIELD: public float32 b2Sweep::alpha0 [b2Math.h <399:10 399:15>]
SYMBOL_GLOBAL_VARIABLE: const b2Vec2 b2Vec2_zero [b2Math.cpp <21:14 21:24>]
SYMBOL_GLOBAL_VARIABLE: const b2Vec2 b2Vec2_zero [b2Math.h <403:21 403:31>]
SYMBOL_FUNCTION: float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Math.h <406:1 <406:1 <406:16 406:20> 406:54> 409:1>]
SYMBOL_FUNCTION: float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2Math.h <412:1 <412:1 <412:16 412:22> 412:56> 415:1>]
SYMBOL_FUNCTION: b2Vec2 b2Cross(const b2Vec2 &, float32) [b2Math.h <419:1 <419:1 <419:15 419:21> 419:49> 422:1>]
SYMBOL_FUNCTION: b2Vec2 b2Cross(float32, const b2Vec2 &) [b2Math.h <426:1 <426:1 <426:15 426:21> 426:49> 429:1>]
SYMBOL_FUNCTION: b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) [b2Math.h <433:1 <433:1 <433:15 433:19> 433:54> 436:1>]
SYMBOL_FUNCTION: b2Vec2 b2MulT(const b2Mat22 &, const b2Vec2 &) [b2Math.h <440:1 <440:1 <440:15 440:20> 440:55> 443:1>]
SYMBOL_FUNCTION: b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2Math.h <446:1 <446:1 <446:15 446:24> 446:59> 449:1>]
SYMBOL_FUNCTION: b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Math.h <452:1 <452:1 <452:15 452:24> 452:59> 455:1>]
SYMBOL_FUNCTION: b2Vec2 operator*(float32, const b2Vec2 &) [b2Math.h <457:1 <457:1 <457:15 457:24> 457:53> 460:1>]
SYMBOL_FUNCTION: bool operator==(const b2Vec2 &, const b2Vec2 &) [b2Math.h <462:1 <462:1 <462:13 462:23> 462:58> 465:1>]
SYMBOL_FUNCTION: bool operator!=(const b2Vec2 &, const b2Vec2 &) [b2Math.h <467:1 <467:1 <467:13 467:23> 467:58> 470:1>]
SYMBOL_FUNCTION: float32 b2Distance(const b2Vec2 &, const b2Vec2 &) [b2Math.h <472:1 <472:1 <472:16 472:25> 472:59> 476:1>]
SYMBOL_FUNCTION: float32 b2DistanceSquared(const b2Vec2 &, const b2Vec2 &) [b2Math.h <478:1 <478:1 <478:16 478:32> 478:66> 482:1>]
SYMBOL_FUNCTION: b2Vec3 operator*(float32, const b2Vec3 &) [b2Math.h <484:1 <484:1 <484:15 484:24> 484:53> 487:1>]
SYMBOL_FUNCTION: b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) [b2Math.h <490:1 <490:1 <490:15 490:24> 490:59> 493:1>]
SYMBOL_FUNCTION: b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) [b2Math.h <496:1 <496:1 <496:15 496:24> 496:59> 499:1>]
SYMBOL_FUNCTION: float32 b2Dot(const b2Vec3 &, const b2Vec3 &) [b2Math.h <502:1 <502:1 <502:16 502:20> 502:54> 505:1>]
SYMBOL_FUNCTION: b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) [b2Math.h <508:1 <508:1 <508:15 508:21> 508:55> 511:1>]
SYMBOL_FUNCTION: b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) [b2Math.h <513:1 <513:1 <513:16 513:25> 513:62> 516:1>]
SYMBOL_FUNCTION: b2Mat22 b2Mul(const b2Mat22 &, const b2Mat22 &) [b2Math.h <519:1 <519:1 <519:16 519:20> 519:56> 522:1>]
SYMBOL_FUNCTION: b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) [b2Math.h <525:1 <525:1 <525:16 525:21> 525:57> 530:1>]
SYMBOL_FUNCTION: b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) [b2Math.h <533:1 <533:1 <533:15 533:19> 533:54> 536:1>]
SYMBOL_FUNCTION: b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) [b2Math.h <539:1 <539:1 <539:15 539:21> 539:56> 542:1>]
SYMBOL_FUNCTION: b2Rot b2Mul(const b2Rot &, const b2Rot &) [b2Math.h <545:1 <545:1 <545:14 545:18> 545:50> 555:1>]
SYMBOL_FUNCTION: b2Rot b2MulT(const b2Rot &, const b2Rot &) [b2Math.h <558:1 <558:1 <558:14 558:19> 558:51> 568:1>]
SYMBOL_FUNCTION: b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2Math.h <571:1 <571:1 <571:15 571:19> 571:52> 574:1>]
SYMBOL_FUNCTION: b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) [b2Math.h <577:1 <577:1 <577:15 577:20> 577:53> 580:1>]
SYMBOL_FUNCTION: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2Math.h <582:1 <582:1 <582:15 582:19> 582:58> 588:1>]
SYMBOL_FUNCTION: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) [b2Math.h <590:1 <590:1 <590:15 590:20> 590:59> 598:1>]
SYMBOL_FUNCTION: b2Transform b2Mul(const b2Transform &, const b2Transform &) [b2Math.h <602:1 <602:1 <602:20 602:24> 602:68> 608:1>]
SYMBOL_FUNCTION: b2Transform b2MulT(const b2Transform &, const b2Transform &) [b2Math.h <612:1 <612:1 <612:20 612:25> 612:69> 618:1>]
SYMBOL_TEMPLATE_PARAMETER: b2Abs<typename T>::T [b2Math.h <620:20 620:20>]
SYMBOL_FUNCTION: T b2Abs<typename T>(T) [b2Math.h <620:1 <621:1 <621:10 621:14> 621:19> 624:1>]
SYMBOL_FUNCTION: float b2Abs<float>(float) [b2Math.h <621:1 <621:1 <621:10 621:14> 621:19> 624:1>]
SYMBOL_FUNCTION: b2Vec2 b2Abs<b2Vec2>(b2Vec2) [b2Math.h <621:1 <621:10 621:14> 624:1>]
SYMBOL_FUNCTION: b2Vec2 b2Abs(const b2Vec2 &) [b2Math.h <626:1 <626:1 <626:15 626:19> 626:36> 629:1>]
SYMBOL_FUNCTION: b2Mat22 b2Abs(const b2Mat22 &) [b2Math.h <631:1 <631:1 <631:16 631:20> 631:38> 634:1>]
SYMBOL_TEMPLATE_PARAMETER: b2Min<typename T>::T [b2Math.h <636:20 636:20>]
SYMBOL_FUNCTION: T b2Min<typename T>(T, T) [b2Math.h <636:1 <637:1 <637:10 637:14> 637:24> 640:1>]
SYMBOL_FUNCTION: float b2Min<float>(float, float) [b2Math.h <637:1 <637:1 <637:10 637:14> 637:24> 640:1>]
SYMBOL_FUNCTION: b2Vec2 b2Min<b2Vec2>(b2Vec2, b2Vec2) [b2Math.h <637:1 <637:10 637:14> 640:1>]
SYMBOL_FUNCTION: b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) [b2Math.h <642:1 <642:1 <642:15 642:19> 642:53> 645:1>]
SYMBOL_TEMPLATE_PARAMETER: b2Max<typename T>::T [b2Math.h <647:20 647:20>]
SYMBOL_FUNCTION: T b2Max<typename T>(T, T) [b2Math.h <647:1 <648:1 <648:10 648:14> 648:24> 651:1>]
SYMBOL_FUNCTION: float b2Max<float>(float, float) [b2Math.h <648:1 <648:1 <648:10 648:14> 648:24> 651:1>]
SYMBOL_FUNCTION: b2Vec2 b2Max<b2Vec2>(b2Vec2, b2Vec2) [b2Math.h <648:1 <648:10 648:14> 651:1>]
SYMBOL_FUNCTION: b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) [b2Math.h <653:1 <653:1 <653:15 653:19> 653:53> 656:1>]
SYMBOL_TEMPLATE_PARAMETER: b2Clamp<typename T>::T [b2Math.h <658:20 658:20>]
SYMBOL_FUNCTION: T b2Clamp<typename T>(T, T, T) [b2Math.h <658:1 <659:1 <659:10 659:16> 659:36> 662:1>]
SYMBOL_FUNCTION: b2Vec2 b2Clamp(const b2Vec2 &, const b2Vec2 &, const b2Vec2 &) [b2Math.h <664:1 <664:1 <664:15 664:21> 664:77> 667:1>]
SYMBOL_TEMPLATE_PARAMETER: b2Swap<typename T>::T [b2Math.h <669:19 669:19>]
SYMBOL_FUNCTION: void b2Swap<typename T>(T &, T &) [b2Math.h <669:1 <669:22 <669:34 669:39> 669:51> 674:1>]
SYMBOL_FUNCTION: uint32 b2NextPowerOfTwo(uint32) [b2Math.h <681:1 <681:1 <681:15 681:30> 681:40> 689:1>]
SYMBOL_FUNCTION: bool b2IsPowerOfTwo(uint32) [b2Math.h <691:1 <691:1 <691:13 691:26> 691:36> 695:1>]
SYMBOL_FUNCTION: void _wassert(const wchar_t *, const wchar_t *, unsigned int)
SYMBOL_FUNCTION: float floorf(float)
REFERENCE_INCLUDE: b2Math.cpp -> b2Math.h [b2Math.cpp <19:10 19:32>]
REFERENCE_MACRO_USAGE: b2Math.h -> B2_MATH_H [b2Math.h <19:9 19:17>]
REFERENCE_INCLUDE: b2Math.h -> b2Settings.h [b2Math.h <22:10 22:36>]
REFERENCE_MACRO_USAGE: b2Settings.h -> B2_SETTINGS_H [b2Settings.h <19:9 19:21>]
REFERENCE_INCLUDE: b2Settings.h -> stddef.h [b2Settings.h <22:10 22:19>]
REFERENCE_INCLUDE: stddef.h -> corecrt.h [stddef.h <11:10 11:20>]
REFERENCE_INCLUDE: corecrt.h -> vcruntime.h [corecrt.h <10:10 10:22>]
REFERENCE_INCLUDE: vcruntime.h -> sal.h [vcruntime.h <45:10 45:16>]
REFERENCE_INCLUDE: sal.h -> concurrencysal.h [sal.h <2990:10 2990:27>]
REFERENCE_INCLUDE: vcruntime.h -> vadefs.h [vcruntime.h <46:10 46:19>]
REFERENCE_INCLUDE: b2Settings.h -> assert.h [b2Settings.h <23:10 23:19>]
REFERENCE_INCLUDE: assert.h -> corecrt.h [assert.h <12:10 12:20>]
REFERENCE_INCLUDE: b2Settings.h -> float.h [b2Settings.h <24:10 24:18>]
REFERENCE_INCLUDE: float.h -> corecrt.h [float.h <12:10 12:20>]
REFERENCE_MACRO_USAGE: b2Settings.h -> NDEBUG [b2Settings.h <26:14 26:19>]
REFERENCE_INCLUDE: b2Math.h -> math.h [b2Math.h <23:10 23:17>]
REFERENCE_INCLUDE: math.h -> corecrt.h [math.h <11:10 11:20>]
REFERENCE_MACRO_USAGE: b2Math.h -> b2Sqrt [b2Math.h <103:10 103:15>]
REFERENCE_MACRO_USAGE: b2Math.h -> b2_epsilon [b2Math.h <117:16 117:25>]
REFERENCE_MACRO_USAGE: b2Settings.h -> FLT_EPSILON [b2Settings.h <43:21 43:31>]
REFERENCE_MACRO_USAGE: b2Math.h -> b2Atan2 [b2Math.h <329:10 329:16>]
REFERENCE_MACRO_USAGE: b2Math.h -> b2Assert [b2Math.h <709:2 709:9>]
REFERENCE_MACRO_USAGE: b2Settings.h -> assert [b2Settings.h <31:21 31:26>]
REFERENCE_MACRO_USAGE: b2Math.h -> b2_pi [b2Math.h <719:25 719:29>]
REFERENCE_TYPE_USAGE: int8 -> signed char [b2Settings.h <33:9 33:14>]
REFERENCE_TYPE_USAGE: int16 -> short [b2Settings.h <34:9 34:14>]
REFERENCE_TYPE_USAGE: int32 -> int [b2Settings.h <35:9 35:14>]
REFERENCE_TYPE_USAGE: uint8 -> unsigned char [b2Settings.h <36:9 36:16>]
REFERENCE_TYPE_USAGE: uint16 -> unsigned short [b2Settings.h <37:9 37:16>]
REFERENCE_TYPE_USAGE: uint32 -> unsigned int [b2Settings.h <38:9 38:16>]
REFERENCE_TYPE_USAGE: float32 -> float [b2Settings.h <39:9 39:13>]
REFERENCE_TYPE_USAGE: float64 -> double [b2Settings.h <40:9 40:14>]
REFERENCE_TYPE_USAGE: void * b2Alloc(int32) -> void [b2Settings.h <135:1 135:4>]
REFERENCE_TYPE_USAGE: void * b2Alloc(int32) -> int32 [b2Settings.h <135:15 135:19>]
REFERENCE_TYPE_USAGE: void b2Free(void *) -> void [b2Settings.h <138:1 138:4>]
REFERENCE_TYPE_USAGE: void b2Free(void *) -> void [b2Settings.h <138:13 138:16>]
REFERENCE_TYPE_USAGE: void b2Log(const char *) -> void [b2Settings.h <141:1 141:4>]
REFERENCE_TYPE_USAGE: void b2Log(const char *) -> char [b2Settings.h <141:18 141:21>]
REFERENCE_TYPE_USAGE: int32 b2Version::major -> int32 [b2Settings.h <147:2 147:6>]
REFERENCE_TYPE_USAGE: int32 b2Version::minor -> int32 [b2Settings.h <148:2 148:6>]
REFERENCE_TYPE_USAGE: int32 b2Version::revision -> int32 [b2Settings.h <149:2 149:6>]
REFERENCE_TYPE_USAGE: b2Version b2_version -> b2Version [b2Settings.h <153:8 153:16>]
REFERENCE_TYPE_USAGE: bool b2IsValid(float32) -> bool [b2Math.h <26:8 26:11>]
REFERENCE_TYPE_USAGE: bool b2IsValid(float32) -> float32 [b2Math.h <26:23 26:29>]
REFERENCE_TYPE_USAGE: bool b2IsValid(float32) -> int32 [b2Math.h <28:2 28:6>]
REFERENCE_TYPE_USAGE: bool b2IsValid(float32) -> int32 [b2Math.h <28:31 28:35>]
REFERENCE_TYPE_USAGE: float32 b2InvSqrt(float32) -> float32 [b2Math.h <33:8 33:14>]
REFERENCE_TYPE_USAGE: float32 b2InvSqrt(float32) -> float32 [b2Math.h <33:26 33:32>]
REFERENCE_TYPE_USAGE: float32 b2InvSqrt(float32) -> float32 [b2Math.h <42:2 42:8>]
REFERENCE_TYPE_USAGE: float32 b2InvSqrt::anonymous union (b2Math.h<35:2>)::x -> float32 [b2Math.h <37:3 37:9>]
REFERENCE_TYPE_USAGE: int32 b2InvSqrt::anonymous union (b2Math.h<35:2>)::i -> int32 [b2Math.h <38:3 38:7>]
REFERENCE_TYPE_USAGE: float32 b2InvSqrt(float32) -> b2InvSqrt::anonymous union (b2Math.h<35:2>) [b2Math.h <35:2 35:6>]
REFERENCE_CALL: float32 b2InvSqrt(float32) -> void b2InvSqrt::anonymous union (b2Math.h<35:2>)::() [b2Math.h <39:4 39:10>]
REFERENCE_USAGE: float32 b2InvSqrt(float32) -> float32 b2InvSqrt::anonymous union (b2Math.h<35:2>)::x [b2Math.h <41:10 41:10>]
REFERENCE_USAGE: float32 b2InvSqrt(float32) -> float32 b2InvSqrt::anonymous union (b2Math.h<35:2>)::x [b2Math.h <44:14 44:14>]
REFERENCE_USAGE: float32 b2InvSqrt(float32) -> int32 b2InvSqrt::anonymous union (b2Math.h<35:2>)::i [b2Math.h <43:10 43:10>]
REFERENCE_USAGE: float32 b2InvSqrt(float32) -> int32 b2InvSqrt::anonymous union (b2Math.h<35:2>)::i [b2Math.h <43:36 43:36>]
REFERENCE_TYPE_USAGE: void b2Vec2::b2Vec2(float32, float32) -> float32 [b2Math.h <59:9 59:15>]
REFERENCE_TYPE_USAGE: void b2Vec2::b2Vec2(float32, float32) -> float32 [b2Math.h <59:22 59:28>]
REFERENCE_USAGE: void b2Vec2::b2Vec2(float32, float32) -> float32 b2Vec2::x [b2Math.h <59:37 59:37>]
REFERENCE_USAGE: void b2Vec2::b2Vec2(float32, float32) -> float32 b2Vec2::y [b2Math.h <59:45 59:45>]
REFERENCE_TYPE_USAGE: void b2Vec2::SetZero() -> void [b2Math.h <62:2 62:5>]
REFERENCE_USAGE: void b2Vec2::SetZero() -> float32 b2Vec2::x [b2Math.h <62:19 62:19>]
REFERENCE_USAGE: void b2Vec2::SetZero() -> float32 b2Vec2::y [b2Math.h <62:29 62:29>]
REFERENCE_TYPE_USAGE: void b2Vec2::Set(float32, float32) -> void [b2Math.h <65:2 65:5>]
REFERENCE_TYPE_USAGE: void b2Vec2::Set(float32, float32) -> float32 [b2Math.h <65:11 65:17>]
REFERENCE_TYPE_USAGE: void b2Vec2::Set(float32, float32) -> float32 [b2Math.h <65:23 65:29>]
REFERENCE_USAGE: void b2Vec2::Set(float32, float32) -> float32 b2Vec2::x [b2Math.h <65:37 65:37>]
REFERENCE_USAGE: void b2Vec2::Set(float32, float32) -> float32 b2Vec2::y [b2Math.h <65:45 65:45>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Vec2::operator-() const -> b2Vec2 [b2Math.h <68:2 68:7>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Vec2::operator-() const -> b2Vec2 [b2Math.h <68:30 68:35>]
REFERENCE_CALL: b2Vec2 b2Vec2::operator-() const -> void b2Vec2::b2Vec2() [b2Math.h <68:37 68:37>]
REFERENCE_CALL: b2Vec2 b2Vec2::operator-() const -> void b2Vec2::Set(float32, float32) [b2Math.h <68:42 68:44>]
REFERENCE_USAGE: b2Vec2 b2Vec2::operator-() const -> float32 b2Vec2::x [b2Math.h <68:47 68:47>]
REFERENCE_USAGE: b2Vec2 b2Vec2::operator-() const -> float32 b2Vec2::y [b2Math.h <68:51 68:51>]
REFERENCE_CALL: b2Vec2 b2Vec2::operator-() const -> void b2Vec2::b2Vec2(b2Vec2 &&) [b2Math.h <68:62 68:62>]
REFERENCE_TYPE_USAGE: float32 b2Vec2::operator()(int32) const -> float32 [b2Math.h <71:2 71:8>]
REFERENCE_TYPE_USAGE: float32 b2Vec2::operator()(int32) const -> int32 [b2Math.h <71:23 71:27>]
REFERENCE_USAGE: float32 b2Vec2::operator()(int32) const -> float32 b2Vec2::x [b2Math.h <73:12 73:12>]
REFERENCE_TYPE_USAGE: float32 & b2Vec2::operator()(int32) -> float32 [b2Math.h <77:2 77:8>]
REFERENCE_TYPE_USAGE: float32 & b2Vec2::operator()(int32) -> int32 [b2Math.h <77:24 77:28>]
REFERENCE_USAGE: float32 & b2Vec2::operator()(int32) -> float32 b2Vec2::x [b2Math.h <79:12 79:12>]
REFERENCE_TYPE_USAGE: void b2Vec2::operator+=(const b2Vec2 &) -> void [b2Math.h <83:2 83:5>]
REFERENCE_TYPE_USAGE: void b2Vec2::operator+=(const b2Vec2 &) -> b2Vec2 [b2Math.h <83:26 83:31>]
REFERENCE_USAGE: void b2Vec2::operator+=(const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <85:3 85:3>]
REFERENCE_USAGE: void b2Vec2::operator+=(const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <85:10 85:10>]
REFERENCE_USAGE: void b2Vec2::operator+=(const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <85:13 85:13>]
REFERENCE_USAGE: void b2Vec2::operator+=(const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <85:20 85:20>]
REFERENCE_TYPE_USAGE: void b2Vec2::operator-=(const b2Vec2 &) -> void [b2Math.h <89:2 89:5>]
REFERENCE_TYPE_USAGE: void b2Vec2::operator-=(const b2Vec2 &) -> b2Vec2 [b2Math.h <89:26 89:31>]
REFERENCE_USAGE: void b2Vec2::operator-=(const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <91:3 91:3>]
REFERENCE_USAGE: void b2Vec2::operator-=(const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <91:10 91:10>]
REFERENCE_USAGE: void b2Vec2::operator-=(const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <91:13 91:13>]
REFERENCE_USAGE: void b2Vec2::operator-=(const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <91:20 91:20>]
REFERENCE_TYPE_USAGE: void b2Vec2::operator*=(float32) -> void [b2Math.h <95:2 95:5>]
REFERENCE_TYPE_USAGE: void b2Vec2::operator*=(float32) -> float32 [b2Math.h <95:20 95:26>]
REFERENCE_USAGE: void b2Vec2::operator*=(float32) -> float32 b2Vec2::x [b2Math.h <97:3 97:3>]
REFERENCE_USAGE: void b2Vec2::operator*=(float32) -> float32 b2Vec2::y [b2Math.h <97:11 97:11>]
REFERENCE_TYPE_USAGE: float32 b2Vec2::Length() const -> float32 [b2Math.h <101:2 101:8>]
REFERENCE_CALL: float32 b2Vec2::Length() const -> float sqrtf(float) [b2Math.h <103:10 103:15>]
REFERENCE_USAGE: float32 b2Vec2::Length() const -> float32 b2Vec2::x [b2Math.h <103:17 103:17>]
REFERENCE_USAGE: float32 b2Vec2::Length() const -> float32 b2Vec2::x [b2Math.h <103:21 103:21>]
REFERENCE_USAGE: float32 b2Vec2::Length() const -> float32 b2Vec2::y [b2Math.h <103:25 103:25>]
REFERENCE_USAGE: float32 b2Vec2::Length() const -> float32 b2Vec2::y [b2Math.h <103:29 103:29>]
REFERENCE_TYPE_USAGE: float32 b2Vec2::LengthSquared() const -> float32 [b2Math.h <108:2 108:8>]
REFERENCE_USAGE: float32 b2Vec2::LengthSquared() const -> float32 b2Vec2::x [b2Math.h <110:10 110:10>]
REFERENCE_USAGE: float32 b2Vec2::LengthSquared() const -> float32 b2Vec2::x [b2Math.h <110:14 110:14>]
REFERENCE_USAGE: float32 b2Vec2::LengthSquared() const -> float32 b2Vec2::y [b2Math.h <110:18 110:18>]
REFERENCE_USAGE: float32 b2Vec2::LengthSquared() const -> float32 b2Vec2::y [b2Math.h <110:22 110:22>]
REFERENCE_TYPE_USAGE: float32 b2Vec2::Normalize() -> float32 [b2Math.h <114:2 114:8>]
REFERENCE_TYPE_USAGE: float32 b2Vec2::Normalize() -> float32 [b2Math.h <116:3 116:9>]
REFERENCE_TYPE_USAGE: float32 b2Vec2::Normalize() -> float32 [b2Math.h <121:3 121:9>]
REFERENCE_CALL: float32 b2Vec2::Normalize() -> float32 b2Vec2::Length() const [b2Math.h <116:20 116:25>]
REFERENCE_USAGE: float32 b2Vec2::Normalize() -> float32 b2Vec2::x [b2Math.h <122:3 122:3>]
REFERENCE_USAGE: float32 b2Vec2::Normalize() -> float32 b2Vec2::y [b2Math.h <123:3 123:3>]
REFERENCE_TYPE_USAGE: bool b2Vec2::IsValid() const -> bool [b2Math.h <129:2 129:5>]
REFERENCE_CALL: bool b2Vec2::IsValid() const -> bool b2IsValid(float32) [b2Math.h <131:10 131:18>]
REFERENCE_CALL: bool b2Vec2::IsValid() const -> bool b2IsValid(float32) [b2Math.h <131:26 131:34>]
REFERENCE_USAGE: bool b2Vec2::IsValid() const -> float32 b2Vec2::x [b2Math.h <131:20 131:20>]
REFERENCE_USAGE: bool b2Vec2::IsValid() const -> float32 b2Vec2::y [b2Math.h <131:36 131:36>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Vec2::Skew() const -> b2Vec2 [b2Math.h <135:2 135:7>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Vec2::Skew() const -> b2Vec2 [b2Math.h <137:10 137:15>]
REFERENCE_CALL: b2Vec2 b2Vec2::Skew() const -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <137:10 137:15>]
REFERENCE_USAGE: b2Vec2 b2Vec2::Skew() const -> float32 b2Vec2::y [b2Math.h <137:18 137:18>]
REFERENCE_USAGE: b2Vec2 b2Vec2::Skew() const -> float32 b2Vec2::x [b2Math.h <137:21 137:21>]
REFERENCE_TYPE_USAGE: float32 b2Vec2::x -> float32 [b2Math.h <140:2 140:8>]
REFERENCE_TYPE_USAGE: float32 b2Vec2::y -> float32 [b2Math.h <140:2 140:8>]
REFERENCE_USAGE: void b2Vec2::b2Vec2(const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <53:8 53:13>]
REFERENCE_USAGE: void b2Vec2::b2Vec2(const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <53:8 53:13>]
REFERENCE_USAGE: void b2Vec2::b2Vec2(b2Vec2 &&) -> float32 b2Vec2::x [b2Math.h <53:8 53:13>]
REFERENCE_TYPE_USAGE: void b2Vec2::b2Vec2(b2Vec2 &&) -> b2Vec2 [b2Math.h <53:8 53:13>]
REFERENCE_USAGE: void b2Vec2::b2Vec2(b2Vec2 &&) -> float32 b2Vec2::y [b2Math.h <53:8 53:13>]
REFERENCE_USAGE: b2Vec2 & b2Vec2::operator=(const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <53:8 53:13>]
REFERENCE_USAGE: b2Vec2 & b2Vec2::operator=(const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <53:8 53:13>]
REFERENCE_USAGE: b2Vec2 & b2Vec2::operator=(b2Vec2 &&) -> float32 b2Vec2::x [b2Math.h <53:8 53:13>]
REFERENCE_TYPE_USAGE: b2Vec2 & b2Vec2::operator=(b2Vec2 &&) -> b2Vec2 [b2Math.h <53:8 53:13>]
REFERENCE_USAGE: b2Vec2 & b2Vec2::operator=(b2Vec2 &&) -> float32 b2Vec2::y [b2Math.h <53:8 53:13>]
REFERENCE_TYPE_USAGE: void b2Vec3::b2Vec3(float32, float32, float32) -> float32 [b2Math.h <150:9 150:15>]
REFERENCE_TYPE_USAGE: void b2Vec3::b2Vec3(float32, float32, float32) -> float32 [b2Math.h <150:22 150:28>]
REFERENCE_TYPE_USAGE: void b2Vec3::b2Vec3(float32, float32, float32) -> float32 [b2Math.h <150:35 150:41>]
REFERENCE_USAGE: void b2Vec3::b2Vec3(float32, float32, float32) -> float32 b2Vec3::x [b2Math.h <150:50 150:50>]
REFERENCE_USAGE: void b2Vec3::b2Vec3(float32, float32, float32) -> float32 b2Vec3::y [b2Math.h <150:58 150:58>]
REFERENCE_USAGE: void b2Vec3::b2Vec3(float32, float32, float32) -> float32 b2Vec3::z [b2Math.h <150:66 150:66>]
REFERENCE_TYPE_USAGE: void b2Vec3::SetZero() -> void [b2Math.h <153:2 153:5>]
REFERENCE_USAGE: void b2Vec3::SetZero() -> float32 b2Vec3::x [b2Math.h <153:19 153:19>]
REFERENCE_USAGE: void b2Vec3::SetZero() -> float32 b2Vec3::y [b2Math.h <153:29 153:29>]
REFERENCE_USAGE: void b2Vec3::SetZero() -> float32 b2Vec3::z [b2Math.h <153:39 153:39>]
REFERENCE_TYPE_USAGE: void b2Vec3::Set(float32, float32, float32) -> void [b2Math.h <156:2 156:5>]
REFERENCE_TYPE_USAGE: void b2Vec3::Set(float32, float32, float32) -> float32 [b2Math.h <156:11 156:17>]
REFERENCE_TYPE_USAGE: void b2Vec3::Set(float32, float32, float32) -> float32 [b2Math.h <156:23 156:29>]
REFERENCE_TYPE_USAGE: void b2Vec3::Set(float32, float32, float32) -> float32 [b2Math.h <156:35 156:41>]
REFERENCE_USAGE: void b2Vec3::Set(float32, float32, float32) -> float32 b2Vec3::x [b2Math.h <156:49 156:49>]
REFERENCE_USAGE: void b2Vec3::Set(float32, float32, float32) -> float32 b2Vec3::y [b2Math.h <156:57 156:57>]
REFERENCE_USAGE: void b2Vec3::Set(float32, float32, float32) -> float32 b2Vec3::z [b2Math.h <156:65 156:65>]
REFERENCE_TYPE_USAGE: b2Vec3 b2Vec3::operator-() const -> b2Vec3 [b2Math.h <159:2 159:7>]
REFERENCE_TYPE_USAGE: b2Vec3 b2Vec3::operator-() const -> b2Vec3 [b2Math.h <159:30 159:35>]
REFERENCE_CALL: b2Vec3 b2Vec3::operator-() const -> void b2Vec3::b2Vec3() [b2Math.h <159:37 159:37>]
REFERENCE_CALL: b2Vec3 b2Vec3::operator-() const -> void b2Vec3::Set(float32, float32, float32) [b2Math.h <159:42 159:44>]
REFERENCE_USAGE: b2Vec3 b2Vec3::operator-() const -> float32 b2Vec3::x [b2Math.h <159:47 159:47>]
REFERENCE_USAGE: b2Vec3 b2Vec3::operator-() const -> float32 b2Vec3::y [b2Math.h <159:51 159:51>]
REFERENCE_USAGE: b2Vec3 b2Vec3::operator-() const -> float32 b2Vec3::z [b2Math.h <159:55 159:55>]
REFERENCE_CALL: b2Vec3 b2Vec3::operator-() const -> void b2Vec3::b2Vec3(b2Vec3 &&) [b2Math.h <159:66 159:66>]
REFERENCE_TYPE_USAGE: void b2Vec3::operator+=(const b2Vec3 &) -> void [b2Math.h <162:2 162:5>]
REFERENCE_TYPE_USAGE: void b2Vec3::operator+=(const b2Vec3 &) -> b2Vec3 [b2Math.h <162:26 162:31>]
REFERENCE_USAGE: void b2Vec3::operator+=(const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <164:3 164:3>]
REFERENCE_USAGE: void b2Vec3::operator+=(const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <164:10 164:10>]
REFERENCE_USAGE: void b2Vec3::operator+=(const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <164:13 164:13>]
REFERENCE_USAGE: void b2Vec3::operator+=(const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <164:20 164:20>]
REFERENCE_USAGE: void b2Vec3::operator+=(const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <164:23 164:23>]
REFERENCE_USAGE: void b2Vec3::operator+=(const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <164:30 164:30>]
REFERENCE_TYPE_USAGE: void b2Vec3::operator-=(const b2Vec3 &) -> void [b2Math.h <168:2 168:5>]
REFERENCE_TYPE_USAGE: void b2Vec3::operator-=(const b2Vec3 &) -> b2Vec3 [b2Math.h <168:26 168:31>]
REFERENCE_USAGE: void b2Vec3::operator-=(const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <170:3 170:3>]
REFERENCE_USAGE: void b2Vec3::operator-=(const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <170:10 170:10>]
REFERENCE_USAGE: void b2Vec3::operator-=(const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <170:13 170:13>]
REFERENCE_USAGE: void b2Vec3::operator-=(const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <170:20 170:20>]
REFERENCE_USAGE: void b2Vec3::operator-=(const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <170:23 170:23>]
REFERENCE_USAGE: void b2Vec3::operator-=(const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <170:30 170:30>]
REFERENCE_TYPE_USAGE: void b2Vec3::operator*=(float32) -> void [b2Math.h <174:2 174:5>]
REFERENCE_TYPE_USAGE: void b2Vec3::operator*=(float32) -> float32 [b2Math.h <174:20 174:26>]
REFERENCE_USAGE: void b2Vec3::operator*=(float32) -> float32 b2Vec3::x [b2Math.h <176:3 176:3>]
REFERENCE_USAGE: void b2Vec3::operator*=(float32) -> float32 b2Vec3::y [b2Math.h <176:11 176:11>]
REFERENCE_USAGE: void b2Vec3::operator*=(float32) -> float32 b2Vec3::z [b2Math.h <176:19 176:19>]
REFERENCE_TYPE_USAGE: float32 b2Vec3::x -> float32 [b2Math.h <179:2 179:8>]
REFERENCE_TYPE_USAGE: float32 b2Vec3::y -> float32 [b2Math.h <179:2 179:8>]
REFERENCE_TYPE_USAGE: float32 b2Vec3::z -> float32 [b2Math.h <179:2 179:8>]
REFERENCE_USAGE: void b2Vec3::b2Vec3(b2Vec3 &&) -> float32 b2Vec3::x [b2Math.h <144:8 144:13>]
REFERENCE_TYPE_USAGE: void b2Vec3::b2Vec3(b2Vec3 &&) -> b2Vec3 [b2Math.h <144:8 144:13>]
REFERENCE_USAGE: void b2Vec3::b2Vec3(b2Vec3 &&) -> float32 b2Vec3::y [b2Math.h <144:8 144:13>]
REFERENCE_USAGE: void b2Vec3::b2Vec3(b2Vec3 &&) -> float32 b2Vec3::z [b2Math.h <144:8 144:13>]
REFERENCE_USAGE: b2Vec3 & b2Vec3::operator=(const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <144:8 144:13>]
REFERENCE_USAGE: b2Vec3 & b2Vec3::operator=(const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <144:8 144:13>]
REFERENCE_USAGE: b2Vec3 & b2Vec3::operator=(const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <144:8 144:13>]
REFERENCE_USAGE: void b2Mat22::b2Mat22() -> b2Vec2 b2Mat22::ex [b2Math.h <186:2 186:8>]
REFERENCE_CALL: void b2Mat22::b2Mat22() -> void b2Vec2::b2Vec2() [b2Math.h <186:2 186:8>]
REFERENCE_USAGE: void b2Mat22::b2Mat22() -> b2Vec2 b2Mat22::ey [b2Math.h <186:2 186:8>]
REFERENCE_TYPE_USAGE: void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <189:16 189:21>]
REFERENCE_TYPE_USAGE: void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <189:34 189:39>]
REFERENCE_USAGE: void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ex [b2Math.h <189:2 189:8>]
REFERENCE_USAGE: void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ex [b2Math.h <191:3 191:4>]
REFERENCE_CALL: void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) -> void b2Vec2::b2Vec2() [b2Math.h <189:2 189:8>]
REFERENCE_USAGE: void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ey [b2Math.h <189:2 189:8>]
REFERENCE_USAGE: void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ey [b2Math.h <192:3 192:4>]
REFERENCE_CALL: void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Math.h <191:6 191:6>]
REFERENCE_CALL: void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Math.h <192:6 192:6>]
REFERENCE_TYPE_USAGE: void b2Mat22::b2Mat22(float32, float32, float32, float32) -> float32 [b2Math.h <196:10 196:16>]
REFERENCE_TYPE_USAGE: void b2Mat22::b2Mat22(float32, float32, float32, float32) -> float32 [b2Math.h <196:23 196:29>]
REFERENCE_TYPE_USAGE: void b2Mat22::b2Mat22(float32, float32, float32, float32) -> float32 [b2Math.h <196:36 196:42>]
REFERENCE_TYPE_USAGE: void b2Mat22::b2Mat22(float32, float32, float32, float32) -> float32 [b2Math.h <196:49 196:55>]
REFERENCE_USAGE: void b2Mat22::b2Mat22(float32, float32, float32, float32) -> b2Vec2 b2Mat22::ex [b2Math.h <196:2 196:8>]
REFERENCE_USAGE: void b2Mat22::b2Mat22(float32, float32, float32, float32) -> b2Vec2 b2Mat22::ex [b2Math.h <198:3 198:4>]
REFERENCE_USAGE: void b2Mat22::b2Mat22(float32, float32, float32, float32) -> b2Vec2 b2Mat22::ex [b2Math.h <198:15 198:16>]
REFERENCE_CALL: void b2Mat22::b2Mat22(float32, float32, float32, float32) -> void b2Vec2::b2Vec2() [b2Math.h <196:2 196:8>]
REFERENCE_USAGE: void b2Mat22::b2Mat22(float32, float32, float32, float32) -> b2Vec2 b2Mat22::ey [b2Math.h <196:2 196:8>]
REFERENCE_USAGE: void b2Mat22::b2Mat22(float32, float32, float32, float32) -> b2Vec2 b2Mat22::ey [b2Math.h <199:3 199:4>]
REFERENCE_USAGE: void b2Mat22::b2Mat22(float32, float32, float32, float32) -> b2Vec2 b2Mat22::ey [b2Math.h <199:15 199:16>]
REFERENCE_USAGE: void b2Mat22::b2Mat22(float32, float32, float32, float32) -> float32 b2Vec2::x [b2Math.h <198:6 198:6>]
REFERENCE_USAGE: void b2Mat22::b2Mat22(float32, float32, float32, float32) -> float32 b2Vec2::x [b2Math.h <199:6 199:6>]
REFERENCE_USAGE: void b2Mat22::b2Mat22(float32, float32, float32, float32) -> float32 b2Vec2::y [b2Math.h <198:18 198:18>]
REFERENCE_USAGE: void b2Mat22::b2Mat22(float32, float32, float32, float32) -> float32 b2Vec2::y [b2Math.h <199:18 199:18>]
REFERENCE_TYPE_USAGE: void b2Mat22::Set(const b2Vec2 &, const b2Vec2 &) -> void [b2Math.h <203:2 203:5>]
REFERENCE_TYPE_USAGE: void b2Mat22::Set(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <203:17 203:22>]
REFERENCE_TYPE_USAGE: void b2Mat22::Set(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <203:35 203:40>]
REFERENCE_CALL: void b2Mat22::Set(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Math.h <205:6 205:6>]
REFERENCE_CALL: void b2Mat22::Set(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Math.h <206:6 206:6>]
REFERENCE_USAGE: void b2Mat22::Set(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ex [b2Math.h <205:3 205:4>]
REFERENCE_USAGE: void b2Mat22::Set(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ey [b2Math.h <206:3 206:4>]
REFERENCE_TYPE_USAGE: void b2Mat22::SetIdentity() -> void [b2Math.h <210:2 210:5>]
REFERENCE_USAGE: void b2Mat22::SetIdentity() -> float32 b2Vec2::x [b2Math.h <212:6 212:6>]
REFERENCE_USAGE: void b2Mat22::SetIdentity() -> float32 b2Vec2::x [b2Math.h <212:19 212:19>]
REFERENCE_USAGE: void b2Mat22::SetIdentity() -> b2Vec2 b2Mat22::ex [b2Math.h <212:3 212:4>]
REFERENCE_USAGE: void b2Mat22::SetIdentity() -> b2Vec2 b2Mat22::ex [b2Math.h <213:3 213:4>]
REFERENCE_USAGE: void b2Mat22::SetIdentity() -> b2Vec2 b2Mat22::ey [b2Math.h <212:16 212:17>]
REFERENCE_USAGE: void b2Mat22::SetIdentity() -> b2Vec2 b2Mat22::ey [b2Math.h <213:16 213:17>]
REFERENCE_USAGE: void b2Mat22::SetIdentity() -> float32 b2Vec2::y [b2Math.h <213:6 213:6>]
REFERENCE_USAGE: void b2Mat22::SetIdentity() -> float32 b2Vec2::y [b2Math.h <213:19 213:19>]
REFERENCE_TYPE_USAGE: void b2Mat22::SetZero() -> void [b2Math.h <217:2 217:5>]
REFERENCE_USAGE: void b2Mat22::SetZero() -> float32 b2Vec2::x [b2Math.h <219:6 219:6>]
REFERENCE_USAGE: void b2Mat22::SetZero() -> float32 b2Vec2::x [b2Math.h <219:19 219:19>]
REFERENCE_USAGE: void b2Mat22::SetZero() -> b2Vec2 b2Mat22::ex [b2Math.h <219:3 219:4>]
REFERENCE_USAGE: void b2Mat22::SetZero() -> b2Vec2 b2Mat22::ex [b2Math.h <220:3 220:4>]
REFERENCE_USAGE: void b2Mat22::SetZero() -> b2Vec2 b2Mat22::ey [b2Math.h <219:16 219:17>]
REFERENCE_USAGE: void b2Mat22::SetZero() -> b2Vec2 b2Mat22::ey [b2Math.h <220:16 220:17>]
REFERENCE_USAGE: void b2Mat22::SetZero() -> float32 b2Vec2::y [b2Math.h <220:6 220:6>]
REFERENCE_USAGE: void b2Mat22::SetZero() -> float32 b2Vec2::y [b2Math.h <220:19 220:19>]
REFERENCE_TYPE_USAGE: b2Mat22 b2Mat22::GetInverse() const -> b2Mat22 [b2Math.h <223:2 223:8>]
REFERENCE_TYPE_USAGE: b2Mat22 b2Mat22::GetInverse() const -> b2Mat22 [b2Math.h <226:3 226:9>]
REFERENCE_TYPE_USAGE: b2Mat22 b2Mat22::GetInverse() const -> float32 [b2Math.h <225:3 225:9>]
REFERENCE_TYPE_USAGE: b2Mat22 b2Mat22::GetInverse() const -> float32 [b2Math.h <227:3 227:9>]
REFERENCE_USAGE: b2Mat22 b2Mat22::GetInverse() const -> float32 b2Vec2::x [b2Math.h <225:18 225:18>]
REFERENCE_USAGE: b2Mat22 b2Mat22::GetInverse() const -> float32 b2Vec2::x [b2Math.h <225:28 225:28>]
REFERENCE_USAGE: b2Mat22 b2Mat22::GetInverse() const -> float32 b2Vec2::x [b2Math.h <232:8 232:8>]
REFERENCE_USAGE: b2Mat22 b2Mat22::GetInverse() const -> float32 b2Vec2::x [b2Math.h <232:27 232:27>]
REFERENCE_USAGE: b2Mat22 b2Mat22::GetInverse() const -> b2Vec2 b2Mat22::ex [b2Math.h <225:15 225:16>]
REFERENCE_USAGE: b2Mat22 b2Mat22::GetInverse() const -> b2Vec2 b2Mat22::ex [b2Math.h <225:35 225:36>]
REFERENCE_USAGE: b2Mat22 b2Mat22::GetInverse() const -> b2Vec2 b2Mat22::ex [b2Math.h <232:5 232:6>]
REFERENCE_USAGE: b2Mat22 b2Mat22::GetInverse() const -> b2Vec2 b2Mat22::ex [b2Math.h <233:5 233:6>]
REFERENCE_USAGE: b2Mat22 b2Mat22::GetInverse() const -> b2Vec2 b2Mat22::ey [b2Math.h <225:25 225:26>]
REFERENCE_USAGE: b2Mat22 b2Mat22::GetInverse() const -> b2Vec2 b2Mat22::ey [b2Math.h <225:45 225:46>]
REFERENCE_USAGE: b2Mat22 b2Mat22::GetInverse() const -> b2Vec2 b2Mat22::ey [b2Math.h <232:24 232:25>]
REFERENCE_USAGE: b2Mat22 b2Mat22::GetInverse() const -> b2Vec2 b2Mat22::ey [b2Math.h <233:24 233:25>]
REFERENCE_USAGE: b2Mat22 b2Mat22::GetInverse() const -> float32 b2Vec2::y [b2Math.h <225:38 225:38>]
REFERENCE_USAGE: b2Mat22 b2Mat22::GetInverse() const -> float32 b2Vec2::y [b2Math.h <225:48 225:48>]
REFERENCE_USAGE: b2Mat22 b2Mat22::GetInverse() const -> float32 b2Vec2::y [b2Math.h <233:8 233:8>]
REFERENCE_USAGE: b2Mat22 b2Mat22::GetInverse() const -> float32 b2Vec2::y [b2Math.h <233:27 233:27>]
REFERENCE_CALL: b2Mat22 b2Mat22::GetInverse() const -> void b2Mat22::b2Mat22() [b2Math.h <226:11 226:11>]
REFERENCE_CALL: b2Mat22 b2Mat22::GetInverse() const -> void b2Mat22::b2Mat22(b2Mat22 &&) [b2Math.h <234:10 234:10>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> b2Vec2 [b2Math.h <239:2 239:7>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> b2Vec2 [b2Math.h <239:21 239:26>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> b2Vec2 [b2Math.h <247:3 247:8>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 [b2Math.h <241:3 241:9>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 [b2Math.h <242:3 242:9>]
REFERENCE_USAGE: b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 b2Vec2::x [b2Math.h <241:20 241:20>]
REFERENCE_USAGE: b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 b2Vec2::x [b2Math.h <241:32 241:32>]
REFERENCE_USAGE: b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 b2Vec2::x [b2Math.h <248:5 248:5>]
REFERENCE_USAGE: b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 b2Vec2::x [b2Math.h <248:24 248:24>]
REFERENCE_USAGE: b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 b2Vec2::x [b2Math.h <249:36 249:36>]
REFERENCE_USAGE: b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> b2Vec2 b2Mat22::ex [b2Math.h <241:17 241:18>]
REFERENCE_USAGE: b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> b2Vec2 b2Mat22::ex [b2Math.h <241:41 241:42>]
REFERENCE_USAGE: b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> b2Vec2 b2Mat22::ey [b2Math.h <241:29 241:30>]
REFERENCE_USAGE: b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> b2Vec2 b2Mat22::ey [b2Math.h <241:53 241:54>]
REFERENCE_USAGE: b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 b2Vec2::y [b2Math.h <241:44 241:44>]
REFERENCE_USAGE: b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 b2Vec2::y [b2Math.h <241:56 241:56>]
REFERENCE_USAGE: b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 b2Vec2::y [b2Math.h <248:36 248:36>]
REFERENCE_USAGE: b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 b2Vec2::y [b2Math.h <249:5 249:5>]
REFERENCE_USAGE: b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> float32 b2Vec2::y [b2Math.h <249:24 249:24>]
REFERENCE_CALL: b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> void b2Vec2::b2Vec2() [b2Math.h <247:10 247:10>]
REFERENCE_CALL: b2Vec2 b2Mat22::Solve(const b2Vec2 &) const -> void b2Vec2::b2Vec2(b2Vec2 &&) [b2Math.h <250:10 250:10>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mat22::ex -> b2Vec2 [b2Math.h <253:2 253:7>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mat22::ey -> b2Vec2 [b2Math.h <253:2 253:7>]
REFERENCE_USAGE: void b2Mat22::b2Mat22(b2Mat22 &&) -> b2Vec2 b2Mat22::ex [b2Math.h <183:8 183:14>]
REFERENCE_CALL: void b2Mat22::b2Mat22(b2Mat22 &&) -> void b2Vec2::b2Vec2(b2Vec2 &&) [b2Math.h <183:8 183:14>]
REFERENCE_TYPE_USAGE: void b2Mat22::b2Mat22(b2Mat22 &&) -> b2Mat22 [b2Math.h <183:8 183:14>]
REFERENCE_USAGE: void b2Mat22::b2Mat22(b2Mat22 &&) -> b2Vec2 b2Mat22::ey [b2Math.h <183:8 183:14>]
REFERENCE_USAGE: void b2Mat33::b2Mat33() -> b2Vec3 b2Mat33::ex [b2Math.h <260:2 260:8>]
REFERENCE_CALL: void b2Mat33::b2Mat33() -> void b2Vec3::b2Vec3() [b2Math.h <260:2 260:8>]
REFERENCE_USAGE: void b2Mat33::b2Mat33() -> b2Vec3 b2Mat33::ey [b2Math.h <260:2 260:8>]
REFERENCE_USAGE: void b2Mat33::b2Mat33() -> b2Vec3 b2Mat33::ez [b2Math.h <260:2 260:8>]
REFERENCE_TYPE_USAGE: void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <263:16 263:21>]
REFERENCE_TYPE_USAGE: void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <263:34 263:39>]
REFERENCE_TYPE_USAGE: void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <263:52 263:57>]
REFERENCE_USAGE: void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 b2Mat33::ex [b2Math.h <263:2 263:8>]
REFERENCE_USAGE: void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 b2Mat33::ex [b2Math.h <265:3 265:4>]
REFERENCE_CALL: void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> void b2Vec3::b2Vec3() [b2Math.h <263:2 263:8>]
REFERENCE_USAGE: void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 b2Mat33::ey [b2Math.h <263:2 263:8>]
REFERENCE_USAGE: void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 b2Mat33::ey [b2Math.h <266:3 266:4>]
REFERENCE_USAGE: void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 b2Mat33::ez [b2Math.h <263:2 263:8>]
REFERENCE_USAGE: void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 b2Mat33::ez [b2Math.h <267:3 267:4>]
REFERENCE_CALL: void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 & b2Vec3::operator=(const b2Vec3 &) [b2Math.h <265:6 265:6>]
REFERENCE_CALL: void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 & b2Vec3::operator=(const b2Vec3 &) [b2Math.h <266:6 266:6>]
REFERENCE_CALL: void b2Mat33::b2Mat33(const b2Vec3 &, const b2Vec3 &, const b2Vec3 &) -> b2Vec3 & b2Vec3::operator=(const b2Vec3 &) [b2Math.h <267:6 267:6>]
REFERENCE_TYPE_USAGE: void b2Mat33::SetZero() -> void [b2Math.h <271:2 271:5>]
REFERENCE_CALL: void b2Mat33::SetZero() -> void b2Vec3::SetZero() [b2Math.h <273:6 273:12>]
REFERENCE_CALL: void b2Mat33::SetZero() -> void b2Vec3::SetZero() [b2Math.h <274:6 274:12>]
REFERENCE_CALL: void b2Mat33::SetZero() -> void b2Vec3::SetZero() [b2Math.h <275:6 275:12>]
REFERENCE_USAGE: void b2Mat33::SetZero() -> b2Vec3 b2Mat33::ex [b2Math.h <273:3 273:4>]
REFERENCE_USAGE: void b2Mat33::SetZero() -> b2Vec3 b2Mat33::ey [b2Math.h <274:3 274:4>]
REFERENCE_USAGE: void b2Mat33::SetZero() -> b2Vec3 b2Mat33::ez [b2Math.h <275:3 275:4>]
REFERENCE_TYPE_USAGE: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> b2Vec3 [b2Math.cpp <25:1 25:6>]
REFERENCE_TYPE_USAGE: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> b2Vec3 [b2Math.cpp <25:31 25:36>]
REFERENCE_TYPE_USAGE: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> b2Vec3 [b2Math.cpp <32:2 32:7>]
REFERENCE_TYPE_USAGE: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> b2Vec3 [b2Math.h <280:2 280:7>]
REFERENCE_TYPE_USAGE: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> b2Vec3 [b2Math.h <280:23 280:28>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> b2Vec2 [b2Math.cpp <41:1 41:6>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> b2Vec2 [b2Math.cpp <41:31 41:36>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> b2Vec2 [b2Math.cpp <49:2 49:7>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> b2Vec2 [b2Math.h <285:2 285:7>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> b2Vec2 [b2Math.h <285:23 285:28>]
REFERENCE_TYPE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> void [b2Math.cpp <56:1 56:4>]
REFERENCE_TYPE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> void [b2Math.h <289:2 289:5>]
REFERENCE_TYPE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> b2Mat33 [b2Math.cpp <56:28 56:34>]
REFERENCE_TYPE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> b2Mat33 [b2Math.h <289:20 289:26>]
REFERENCE_TYPE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> void [b2Math.cpp <71:1 71:4>]
REFERENCE_TYPE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> void [b2Math.h <293:2 293:5>]
REFERENCE_TYPE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Mat33 [b2Math.cpp <71:31 71:37>]
REFERENCE_TYPE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Mat33 [b2Math.h <293:23 293:29>]
REFERENCE_TYPE_USAGE: b2Vec3 b2Mat33::ex -> b2Vec3 [b2Math.h <295:2 295:7>]
REFERENCE_TYPE_USAGE: b2Vec3 b2Mat33::ey -> b2Vec3 [b2Math.h <295:2 295:7>]
REFERENCE_TYPE_USAGE: b2Vec3 b2Mat33::ez -> b2Vec3 [b2Math.h <295:2 295:7>]
REFERENCE_TYPE_USAGE: void b2Rot::b2Rot(float32) -> float32 [b2Math.h <304:17 304:23>]
REFERENCE_USAGE: void b2Rot::b2Rot(float32) -> float32 b2Rot::s [b2Math.h <307:3 307:3>]
REFERENCE_CALL: void b2Rot::b2Rot(float32) -> float sinf(float) [b2Math.h <307:7 307:10>]
REFERENCE_USAGE: void b2Rot::b2Rot(float32) -> float32 b2Rot::c [b2Math.h <308:3 308:3>]
REFERENCE_CALL: void b2Rot::b2Rot(float32) -> float cosf(float) [b2Math.h <308:7 308:10>]
REFERENCE_TYPE_USAGE: void b2Rot::Set(float32) -> void [b2Math.h <312:2 312:5>]
REFERENCE_TYPE_USAGE: void b2Rot::Set(float32) -> float32 [b2Math.h <312:11 312:17>]
REFERENCE_USAGE: void b2Rot::Set(float32) -> float32 b2Rot::s [b2Math.h <315:3 315:3>]
REFERENCE_CALL: void b2Rot::Set(float32) -> float sinf(float) [b2Math.h <315:7 315:10>]
REFERENCE_USAGE: void b2Rot::Set(float32) -> float32 b2Rot::c [b2Math.h <316:3 316:3>]
REFERENCE_CALL: void b2Rot::Set(float32) -> float cosf(float) [b2Math.h <316:7 316:10>]
REFERENCE_TYPE_USAGE: void b2Rot::SetIdentity() -> void [b2Math.h <320:2 320:5>]
REFERENCE_USAGE: void b2Rot::SetIdentity() -> float32 b2Rot::s [b2Math.h <322:3 322:3>]
REFERENCE_USAGE: void b2Rot::SetIdentity() -> float32 b2Rot::c [b2Math.h <323:3 323:3>]
REFERENCE_TYPE_USAGE: float32 b2Rot::GetAngle() const -> float32 [b2Math.h <327:2 327:8>]
REFERENCE_CALL: float32 b2Rot::GetAngle() const -> float atan2f(float, float) [b2Math.h <329:10 329:16>]
REFERENCE_USAGE: float32 b2Rot::GetAngle() const -> float32 b2Rot::s [b2Math.h <329:18 329:18>]
REFERENCE_USAGE: float32 b2Rot::GetAngle() const -> float32 b2Rot::c [b2Math.h <329:21 329:21>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Rot::GetXAxis() const -> b2Vec2 [b2Math.h <333:2 333:7>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Rot::GetXAxis() const -> b2Vec2 [b2Math.h <335:10 335:15>]
REFERENCE_CALL: b2Vec2 b2Rot::GetXAxis() const -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <335:10 335:15>]
REFERENCE_USAGE: b2Vec2 b2Rot::GetXAxis() const -> float32 b2Rot::c [b2Math.h <335:17 335:17>]
REFERENCE_USAGE: b2Vec2 b2Rot::GetXAxis() const -> float32 b2Rot::s [b2Math.h <335:20 335:20>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Rot::GetYAxis() const -> b2Vec2 [b2Math.h <339:2 339:7>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Rot::GetYAxis() const -> b2Vec2 [b2Math.h <341:10 341:15>]
REFERENCE_CALL: b2Vec2 b2Rot::GetYAxis() const -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <341:10 341:15>]
REFERENCE_USAGE: b2Vec2 b2Rot::GetYAxis() const -> float32 b2Rot::s [b2Math.h <341:18 341:18>]
REFERENCE_USAGE: b2Vec2 b2Rot::GetYAxis() const -> float32 b2Rot::c [b2Math.h <341:21 341:21>]
REFERENCE_TYPE_USAGE: float32 b2Rot::s -> float32 [b2Math.h <345:2 345:8>]
REFERENCE_TYPE_USAGE: float32 b2Rot::c -> float32 [b2Math.h <345:2 345:8>]
REFERENCE_USAGE: void b2Rot::b2Rot(const b2Rot &) -> float32 b2Rot::s [b2Math.h <299:8 299:12>]
REFERENCE_USAGE: void b2Rot::b2Rot(const b2Rot &) -> float32 b2Rot::c [b2Math.h <299:8 299:12>]
REFERENCE_USAGE: void b2Rot::b2Rot(b2Rot &&) -> float32 b2Rot::s [b2Math.h <299:8 299:12>]
REFERENCE_TYPE_USAGE: void b2Rot::b2Rot(b2Rot &&) -> b2Rot [b2Math.h <299:8 299:12>]
REFERENCE_USAGE: void b2Rot::b2Rot(b2Rot &&) -> float32 b2Rot::c [b2Math.h <299:8 299:12>]
REFERENCE_USAGE: b2Rot & b2Rot::operator=(b2Rot &&) -> float32 b2Rot::s [b2Math.h <299:8 299:12>]
REFERENCE_TYPE_USAGE: b2Rot & b2Rot::operator=(b2Rot &&) -> b2Rot [b2Math.h <299:8 299:12>]
REFERENCE_USAGE: b2Rot & b2Rot::operator=(b2Rot &&) -> float32 b2Rot::c [b2Math.h <299:8 299:12>]
REFERENCE_USAGE: void b2Transform::b2Transform() -> b2Vec2 b2Transform::p [b2Math.h <353:2 353:12>]
REFERENCE_CALL: void b2Transform::b2Transform() -> void b2Vec2::b2Vec2() [b2Math.h <353:2 353:12>]
REFERENCE_USAGE: void b2Transform::b2Transform() -> b2Rot b2Transform::q [b2Math.h <353:2 353:12>]
REFERENCE_CALL: void b2Transform::b2Transform() -> void b2Rot::b2Rot() [b2Math.h <353:2 353:12>]
REFERENCE_TYPE_USAGE: void b2Transform::b2Transform(const b2Vec2 &, const b2Rot &) -> b2Vec2 [b2Math.h <356:20 356:25>]
REFERENCE_TYPE_USAGE: void b2Transform::b2Transform(const b2Vec2 &, const b2Rot &) -> b2Rot [b2Math.h <356:44 356:48>]
REFERENCE_USAGE: void b2Transform::b2Transform(const b2Vec2 &, const b2Rot &) -> b2Vec2 b2Transform::p [b2Math.h <356:63 356:63>]
REFERENCE_CALL: void b2Transform::b2Transform(const b2Vec2 &, const b2Rot &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2Math.h <356:63 356:63>]
REFERENCE_USAGE: void b2Transform::b2Transform(const b2Vec2 &, const b2Rot &) -> b2Rot b2Transform::q [b2Math.h <356:76 356:76>]
REFERENCE_CALL: void b2Transform::b2Transform(const b2Vec2 &, const b2Rot &) -> void b2Rot::b2Rot(const b2Rot &) [b2Math.h <356:76 356:76>]
REFERENCE_TYPE_USAGE: void b2Transform::SetIdentity() -> void [b2Math.h <359:2 359:5>]
REFERENCE_CALL: void b2Transform::SetIdentity() -> void b2Vec2::SetZero() [b2Math.h <361:5 361:11>]
REFERENCE_USAGE: void b2Transform::SetIdentity() -> b2Vec2 b2Transform::p [b2Math.h <361:3 361:3>]
REFERENCE_CALL: void b2Transform::SetIdentity() -> void b2Rot::SetIdentity() [b2Math.h <362:5 362:15>]
REFERENCE_USAGE: void b2Transform::SetIdentity() -> b2Rot b2Transform::q [b2Math.h <362:3 362:3>]
REFERENCE_TYPE_USAGE: void b2Transform::Set(const b2Vec2 &, float32) -> void [b2Math.h <366:2 366:5>]
REFERENCE_TYPE_USAGE: void b2Transform::Set(const b2Vec2 &, float32) -> b2Vec2 [b2Math.h <366:17 366:22>]
REFERENCE_TYPE_USAGE: void b2Transform::Set(const b2Vec2 &, float32) -> float32 [b2Math.h <366:35 366:41>]
REFERENCE_CALL: void b2Transform::Set(const b2Vec2 &, float32) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Math.h <368:5 368:5>]
REFERENCE_USAGE: void b2Transform::Set(const b2Vec2 &, float32) -> b2Vec2 b2Transform::p [b2Math.h <368:3 368:3>]
REFERENCE_CALL: void b2Transform::Set(const b2Vec2 &, float32) -> void b2Rot::Set(float32) [b2Math.h <369:5 369:7>]
REFERENCE_USAGE: void b2Transform::Set(const b2Vec2 &, float32) -> b2Rot b2Transform::q [b2Math.h <369:3 369:3>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Transform::p -> b2Vec2 [b2Math.h <372:2 372:7>]
REFERENCE_TYPE_USAGE: b2Rot b2Transform::q -> b2Rot [b2Math.h <373:2 373:6>]
REFERENCE_USAGE: void b2Transform::b2Transform(b2Transform &&) -> b2Vec2 b2Transform::p [b2Math.h <350:8 350:18>]
REFERENCE_CALL: void b2Transform::b2Transform(b2Transform &&) -> void b2Vec2::b2Vec2(b2Vec2 &&) [b2Math.h <350:8 350:18>]
REFERENCE_TYPE_USAGE: void b2Transform::b2Transform(b2Transform &&) -> b2Transform [b2Math.h <350:8 350:18>]
REFERENCE_USAGE: void b2Transform::b2Transform(b2Transform &&) -> b2Rot b2Transform::q [b2Math.h <350:8 350:18>]
REFERENCE_CALL: void b2Transform::b2Transform(b2Transform &&) -> void b2Rot::b2Rot(b2Rot &&) [b2Math.h <350:8 350:18>]
REFERENCE_TYPE_USAGE: void b2Sweep::GetTransform(b2Transform *, float32) const -> void [b2Math.h <384:2 384:5>]
REFERENCE_TYPE_USAGE: void b2Sweep::GetTransform(b2Transform *, float32) const -> void [b2Math.h <697:8 697:11>]
REFERENCE_TYPE_USAGE: void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Transform [b2Math.h <384:20 384:30>]
REFERENCE_TYPE_USAGE: void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Transform [b2Math.h <697:35 697:45>]
REFERENCE_TYPE_USAGE: void b2Sweep::GetTransform(b2Transform *, float32) const -> float32 [b2Math.h <384:38 384:44>]
REFERENCE_TYPE_USAGE: void b2Sweep::GetTransform(b2Transform *, float32) const -> float32 [b2Math.h <697:52 697:58>]
REFERENCE_TYPE_USAGE: void b2Sweep::GetTransform(b2Transform *, float32) const -> float32 [b2Math.h <700:2 700:8>]
REFERENCE_TYPE_USAGE: void b2Sweep::Advance(float32) -> void [b2Math.h <388:2 388:5>]
REFERENCE_TYPE_USAGE: void b2Sweep::Advance(float32) -> void [b2Math.h <707:8 707:11>]
REFERENCE_TYPE_USAGE: void b2Sweep::Advance(float32) -> void [b2Math.h <709:2 709:9>]
REFERENCE_TYPE_USAGE: void b2Sweep::Advance(float32) -> float32 [b2Math.h <388:15 388:21>]
REFERENCE_TYPE_USAGE: void b2Sweep::Advance(float32) -> float32 [b2Math.h <707:30 707:36>]
REFERENCE_TYPE_USAGE: void b2Sweep::Advance(float32) -> float32 [b2Math.h <710:2 710:8>]
REFERENCE_TYPE_USAGE: void b2Sweep::Normalize() -> void [b2Math.h <391:2 391:5>]
REFERENCE_TYPE_USAGE: void b2Sweep::Normalize() -> void [b2Math.h <717:8 717:11>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Sweep::localCenter -> b2Vec2 [b2Math.h <393:2 393:7>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Sweep::c0 -> b2Vec2 [b2Math.h <394:2 394:7>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Sweep::c -> b2Vec2 [b2Math.h <394:2 394:7>]
REFERENCE_TYPE_USAGE: float32 b2Sweep::a0 -> float32 [b2Math.h <395:2 395:8>]
REFERENCE_TYPE_USAGE: float32 b2Sweep::a -> float32 [b2Math.h <395:2 395:8>]
REFERENCE_TYPE_USAGE: float32 b2Sweep::alpha0 -> float32 [b2Math.h <399:2 399:8>]
REFERENCE_TYPE_USAGE: const b2Vec2 b2Vec2_zero -> b2Vec2 [b2Math.cpp <21:7 21:12>]
REFERENCE_TYPE_USAGE: const b2Vec2 b2Vec2_zero -> b2Vec2 [b2Math.h <403:14 403:19>]
REFERENCE_TYPE_USAGE: float32 b2Dot(const b2Vec2 &, const b2Vec2 &) -> float32 [b2Math.h <406:8 406:14>]
REFERENCE_TYPE_USAGE: float32 b2Dot(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <406:28 406:33>]
REFERENCE_TYPE_USAGE: float32 b2Dot(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <406:45 406:50>]
REFERENCE_USAGE: float32 b2Dot(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <408:11 408:11>]
REFERENCE_USAGE: float32 b2Dot(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <408:17 408:17>]
REFERENCE_USAGE: float32 b2Dot(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <408:23 408:23>]
REFERENCE_USAGE: float32 b2Dot(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <408:29 408:29>]
REFERENCE_TYPE_USAGE: float32 b2Cross(const b2Vec2 &, const b2Vec2 &) -> float32 [b2Math.h <412:8 412:14>]
REFERENCE_TYPE_USAGE: float32 b2Cross(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <412:30 412:35>]
REFERENCE_TYPE_USAGE: float32 b2Cross(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <412:47 412:52>]
REFERENCE_USAGE: float32 b2Cross(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <414:11 414:11>]
REFERENCE_USAGE: float32 b2Cross(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <414:29 414:29>]
REFERENCE_USAGE: float32 b2Cross(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <414:17 414:17>]
REFERENCE_USAGE: float32 b2Cross(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <414:23 414:23>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Cross(const b2Vec2 &, float32) -> b2Vec2 [b2Math.h <419:8 419:13>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Cross(const b2Vec2 &, float32) -> b2Vec2 [b2Math.h <419:29 419:34>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Cross(const b2Vec2 &, float32) -> b2Vec2 [b2Math.h <421:9 421:14>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Cross(const b2Vec2 &, float32) -> float32 [b2Math.h <419:40 419:46>]
REFERENCE_CALL: b2Vec2 b2Cross(const b2Vec2 &, float32) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <421:9 421:14>]
REFERENCE_USAGE: b2Vec2 b2Cross(const b2Vec2 &, float32) -> float32 b2Vec2::y [b2Math.h <421:22 421:22>]
REFERENCE_USAGE: b2Vec2 b2Cross(const b2Vec2 &, float32) -> float32 b2Vec2::x [b2Math.h <421:32 421:32>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Cross(float32, const b2Vec2 &) -> b2Vec2 [b2Math.h <426:8 426:13>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Cross(float32, const b2Vec2 &) -> b2Vec2 [b2Math.h <426:40 426:45>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Cross(float32, const b2Vec2 &) -> b2Vec2 [b2Math.h <428:9 428:14>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Cross(float32, const b2Vec2 &) -> float32 [b2Math.h <426:23 426:29>]
REFERENCE_CALL: b2Vec2 b2Cross(float32, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <428:9 428:14>]
REFERENCE_USAGE: b2Vec2 b2Cross(float32, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <428:23 428:23>]
REFERENCE_USAGE: b2Vec2 b2Cross(float32, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <428:32 428:32>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <433:8 433:13>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <433:45 433:50>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <435:9 435:14>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> b2Mat22 [b2Math.h <433:27 433:33>]
REFERENCE_CALL: b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <435:9 435:14>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <435:21 435:21>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <435:27 435:27>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <435:36 435:36>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <435:56 435:56>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ex [b2Math.h <435:18 435:19>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ex [b2Math.h <435:47 435:48>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ey [b2Math.h <435:33 435:34>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ey [b2Math.h <435:62 435:63>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <435:42 435:42>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <435:50 435:50>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <435:65 435:65>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <435:71 435:71>]
REFERENCE_TYPE_USAGE: b2Vec2 b2MulT(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <440:8 440:13>]
REFERENCE_TYPE_USAGE: b2Vec2 b2MulT(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <440:46 440:51>]
REFERENCE_TYPE_USAGE: b2Vec2 b2MulT(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <442:9 442:14>]
REFERENCE_TYPE_USAGE: b2Vec2 b2MulT(const b2Mat22 &, const b2Vec2 &) -> b2Mat22 [b2Math.h <440:28 440:34>]
REFERENCE_CALL: b2Vec2 b2MulT(const b2Mat22 &, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <442:9 442:14>]
REFERENCE_CALL: b2Vec2 b2MulT(const b2Mat22 &, const b2Vec2 &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Math.h <442:16 442:20>]
REFERENCE_CALL: b2Vec2 b2MulT(const b2Mat22 &, const b2Vec2 &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Math.h <442:32 442:36>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ex [b2Math.h <442:27 442:28>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Mat22 &, const b2Vec2 &) -> b2Vec2 b2Mat22::ey [b2Math.h <442:43 442:44>]
REFERENCE_TYPE_USAGE: b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <446:8 446:13>]
REFERENCE_TYPE_USAGE: b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <446:33 446:38>]
REFERENCE_TYPE_USAGE: b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <446:50 446:55>]
REFERENCE_TYPE_USAGE: b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <448:9 448:14>]
REFERENCE_CALL: b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <448:9 448:14>]
REFERENCE_USAGE: b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <448:18 448:18>]
REFERENCE_USAGE: b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <448:24 448:24>]
REFERENCE_USAGE: b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <448:29 448:29>]
REFERENCE_USAGE: b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <448:35 448:35>]
REFERENCE_TYPE_USAGE: b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <452:8 452:13>]
REFERENCE_TYPE_USAGE: b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <452:33 452:38>]
REFERENCE_TYPE_USAGE: b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <452:50 452:55>]
REFERENCE_TYPE_USAGE: b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <454:9 454:14>]
REFERENCE_CALL: b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <454:9 454:14>]
REFERENCE_USAGE: b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <454:18 454:18>]
REFERENCE_USAGE: b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <454:24 454:24>]
REFERENCE_USAGE: b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <454:29 454:29>]
REFERENCE_USAGE: b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <454:35 454:35>]
REFERENCE_TYPE_USAGE: b2Vec2 operator*(float32, const b2Vec2 &) -> b2Vec2 [b2Math.h <457:8 457:13>]
REFERENCE_TYPE_USAGE: b2Vec2 operator*(float32, const b2Vec2 &) -> b2Vec2 [b2Math.h <457:44 457:49>]
REFERENCE_TYPE_USAGE: b2Vec2 operator*(float32, const b2Vec2 &) -> b2Vec2 [b2Math.h <459:9 459:14>]
REFERENCE_TYPE_USAGE: b2Vec2 operator*(float32, const b2Vec2 &) -> float32 [b2Math.h <457:27 457:33>]
REFERENCE_CALL: b2Vec2 operator*(float32, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <459:9 459:14>]
REFERENCE_USAGE: b2Vec2 operator*(float32, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <459:22 459:22>]
REFERENCE_USAGE: b2Vec2 operator*(float32, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <459:31 459:31>]
REFERENCE_TYPE_USAGE: bool operator==(const b2Vec2 &, const b2Vec2 &) -> bool [b2Math.h <462:8 462:11>]
REFERENCE_TYPE_USAGE: bool operator==(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <462:32 462:37>]
REFERENCE_TYPE_USAGE: bool operator==(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <462:49 462:54>]
REFERENCE_USAGE: bool operator==(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <464:11 464:11>]
REFERENCE_USAGE: bool operator==(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <464:18 464:18>]
REFERENCE_USAGE: bool operator==(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <464:25 464:25>]
REFERENCE_USAGE: bool operator==(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <464:32 464:32>]
REFERENCE_TYPE_USAGE: bool operator!=(const b2Vec2 &, const b2Vec2 &) -> bool [b2Math.h <467:8 467:11>]
REFERENCE_TYPE_USAGE: bool operator!=(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <467:32 467:37>]
REFERENCE_TYPE_USAGE: bool operator!=(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <467:49 467:54>]
REFERENCE_USAGE: bool operator!=(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <469:11 469:11>]
REFERENCE_USAGE: bool operator!=(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <469:18 469:18>]
REFERENCE_USAGE: bool operator!=(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <469:25 469:25>]
REFERENCE_USAGE: bool operator!=(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <469:32 469:32>]
REFERENCE_TYPE_USAGE: float32 b2Distance(const b2Vec2 &, const b2Vec2 &) -> float32 [b2Math.h <472:8 472:14>]
REFERENCE_TYPE_USAGE: float32 b2Distance(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <472:33 472:38>]
REFERENCE_TYPE_USAGE: float32 b2Distance(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <472:50 472:55>]
REFERENCE_TYPE_USAGE: float32 b2Distance(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <474:2 474:7>]
REFERENCE_CALL: float32 b2Distance(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Math.h <474:15 474:15>]
REFERENCE_CALL: float32 b2Distance(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::Length() const [b2Math.h <475:11 475:16>]
REFERENCE_TYPE_USAGE: float32 b2DistanceSquared(const b2Vec2 &, const b2Vec2 &) -> float32 [b2Math.h <478:8 478:14>]
REFERENCE_TYPE_USAGE: float32 b2DistanceSquared(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <478:40 478:45>]
REFERENCE_TYPE_USAGE: float32 b2DistanceSquared(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <478:57 478:62>]
REFERENCE_TYPE_USAGE: float32 b2DistanceSquared(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <480:2 480:7>]
REFERENCE_CALL: float32 b2DistanceSquared(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Math.h <480:15 480:15>]
REFERENCE_CALL: float32 b2DistanceSquared(const b2Vec2 &, const b2Vec2 &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Math.h <481:9 481:13>]
REFERENCE_TYPE_USAGE: b2Vec3 operator*(float32, const b2Vec3 &) -> b2Vec3 [b2Math.h <484:8 484:13>]
REFERENCE_TYPE_USAGE: b2Vec3 operator*(float32, const b2Vec3 &) -> b2Vec3 [b2Math.h <484:44 484:49>]
REFERENCE_TYPE_USAGE: b2Vec3 operator*(float32, const b2Vec3 &) -> b2Vec3 [b2Math.h <486:9 486:14>]
REFERENCE_TYPE_USAGE: b2Vec3 operator*(float32, const b2Vec3 &) -> float32 [b2Math.h <484:27 484:33>]
REFERENCE_CALL: b2Vec3 operator*(float32, const b2Vec3 &) -> void b2Vec3::b2Vec3(float32, float32, float32) [b2Math.h <486:9 486:14>]
REFERENCE_USAGE: b2Vec3 operator*(float32, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <486:22 486:22>]
REFERENCE_USAGE: b2Vec3 operator*(float32, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <486:31 486:31>]
REFERENCE_USAGE: b2Vec3 operator*(float32, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <486:40 486:40>]
REFERENCE_TYPE_USAGE: b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <490:8 490:13>]
REFERENCE_TYPE_USAGE: b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <490:33 490:38>]
REFERENCE_TYPE_USAGE: b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <490:50 490:55>]
REFERENCE_TYPE_USAGE: b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <492:9 492:14>]
REFERENCE_CALL: b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) -> void b2Vec3::b2Vec3(float32, float32, float32) [b2Math.h <492:9 492:14>]
REFERENCE_USAGE: b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <492:18 492:18>]
REFERENCE_USAGE: b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <492:24 492:24>]
REFERENCE_USAGE: b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <492:29 492:29>]
REFERENCE_USAGE: b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <492:35 492:35>]
REFERENCE_USAGE: b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <492:40 492:40>]
REFERENCE_USAGE: b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <492:46 492:46>]
REFERENCE_TYPE_USAGE: b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <496:8 496:13>]
REFERENCE_TYPE_USAGE: b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <496:33 496:38>]
REFERENCE_TYPE_USAGE: b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <496:50 496:55>]
REFERENCE_TYPE_USAGE: b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <498:9 498:14>]
REFERENCE_CALL: b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) -> void b2Vec3::b2Vec3(float32, float32, float32) [b2Math.h <498:9 498:14>]
REFERENCE_USAGE: b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <498:18 498:18>]
REFERENCE_USAGE: b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <498:24 498:24>]
REFERENCE_USAGE: b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <498:29 498:29>]
REFERENCE_USAGE: b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <498:35 498:35>]
REFERENCE_USAGE: b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <498:40 498:40>]
REFERENCE_USAGE: b2Vec3 operator-(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <498:46 498:46>]
REFERENCE_TYPE_USAGE: float32 b2Dot(const b2Vec3 &, const b2Vec3 &) -> float32 [b2Math.h <502:8 502:14>]
REFERENCE_TYPE_USAGE: float32 b2Dot(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <502:28 502:33>]
REFERENCE_TYPE_USAGE: float32 b2Dot(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <502:45 502:50>]
REFERENCE_USAGE: float32 b2Dot(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <504:11 504:11>]
REFERENCE_USAGE: float32 b2Dot(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <504:17 504:17>]
REFERENCE_USAGE: float32 b2Dot(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <504:23 504:23>]
REFERENCE_USAGE: float32 b2Dot(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <504:29 504:29>]
REFERENCE_USAGE: float32 b2Dot(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <504:35 504:35>]
REFERENCE_USAGE: float32 b2Dot(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <504:41 504:41>]
REFERENCE_TYPE_USAGE: b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <508:8 508:13>]
REFERENCE_TYPE_USAGE: b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <508:29 508:34>]
REFERENCE_TYPE_USAGE: b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <508:46 508:51>]
REFERENCE_TYPE_USAGE: b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <510:9 510:14>]
REFERENCE_CALL: b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> void b2Vec3::b2Vec3(float32, float32, float32) [b2Math.h <510:9 510:14>]
REFERENCE_USAGE: b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <510:18 510:18>]
REFERENCE_USAGE: b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <510:36 510:36>]
REFERENCE_USAGE: b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <510:70 510:70>]
REFERENCE_USAGE: b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <510:76 510:76>]
REFERENCE_USAGE: b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <510:24 510:24>]
REFERENCE_USAGE: b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <510:30 510:30>]
REFERENCE_USAGE: b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <510:41 510:41>]
REFERENCE_USAGE: b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <510:59 510:59>]
REFERENCE_USAGE: b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <510:47 510:47>]
REFERENCE_USAGE: b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <510:53 510:53>]
REFERENCE_USAGE: b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <510:64 510:64>]
REFERENCE_USAGE: b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <510:82 510:82>]
REFERENCE_TYPE_USAGE: b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <513:8 513:14>]
REFERENCE_TYPE_USAGE: b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <513:34 513:40>]
REFERENCE_TYPE_USAGE: b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <513:52 513:58>]
REFERENCE_TYPE_USAGE: b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <515:9 515:15>]
REFERENCE_CALL: b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) -> void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) [b2Math.h <515:9 515:15>]
REFERENCE_CALL: b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2Math.h <515:22 515:22>]
REFERENCE_CALL: b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2Math.h <515:35 515:35>]
REFERENCE_USAGE: b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ex [b2Math.h <515:19 515:20>]
REFERENCE_USAGE: b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ex [b2Math.h <515:26 515:27>]
REFERENCE_USAGE: b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ey [b2Math.h <515:32 515:33>]
REFERENCE_USAGE: b2Mat22 operator+(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ey [b2Math.h <515:39 515:40>]
REFERENCE_TYPE_USAGE: b2Mat22 b2Mul(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <519:8 519:14>]
REFERENCE_TYPE_USAGE: b2Mat22 b2Mul(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <519:28 519:34>]
REFERENCE_TYPE_USAGE: b2Mat22 b2Mul(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <519:46 519:52>]
REFERENCE_TYPE_USAGE: b2Mat22 b2Mul(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <521:9 521:15>]
REFERENCE_CALL: b2Mat22 b2Mul(const b2Mat22 &, const b2Mat22 &) -> void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) [b2Math.h <521:9 521:15>]
REFERENCE_CALL: b2Mat22 b2Mul(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) [b2Math.h <521:17 521:21>]
REFERENCE_CALL: b2Mat22 b2Mul(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mul(const b2Mat22 &, const b2Vec2 &) [b2Math.h <521:33 521:37>]
REFERENCE_USAGE: b2Mat22 b2Mul(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ex [b2Math.h <521:28 521:29>]
REFERENCE_USAGE: b2Mat22 b2Mul(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ey [b2Math.h <521:44 521:45>]
REFERENCE_TYPE_USAGE: b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <525:8 525:14>]
REFERENCE_TYPE_USAGE: b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <525:29 525:35>]
REFERENCE_TYPE_USAGE: b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <525:47 525:53>]
REFERENCE_TYPE_USAGE: b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Mat22 [b2Math.h <529:9 529:15>]
REFERENCE_TYPE_USAGE: b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 [b2Math.h <527:2 527:7>]
REFERENCE_TYPE_USAGE: b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 [b2Math.h <528:2 528:7>]
REFERENCE_CALL: b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <527:9 527:10>]
REFERENCE_CALL: b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <528:9 528:10>]
REFERENCE_CALL: b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Math.h <527:12 527:16>]
REFERENCE_CALL: b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Math.h <527:31 527:35>]
REFERENCE_CALL: b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Math.h <528:12 528:16>]
REFERENCE_CALL: b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Math.h <528:31 528:35>]
REFERENCE_USAGE: b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ex [b2Math.h <527:20 527:21>]
REFERENCE_USAGE: b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ex [b2Math.h <527:26 527:27>]
REFERENCE_USAGE: b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ex [b2Math.h <527:45 527:46>]
REFERENCE_USAGE: b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ex [b2Math.h <528:20 528:21>]
REFERENCE_USAGE: b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ey [b2Math.h <527:39 527:40>]
REFERENCE_USAGE: b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ey [b2Math.h <528:26 528:27>]
REFERENCE_USAGE: b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ey [b2Math.h <528:39 528:40>]
REFERENCE_USAGE: b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> b2Vec2 b2Mat22::ey [b2Math.h <528:45 528:46>]
REFERENCE_CALL: b2Mat22 b2MulT(const b2Mat22 &, const b2Mat22 &) -> void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) [b2Math.h <529:9 529:15>]
REFERENCE_TYPE_USAGE: b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <533:8 533:13>]
REFERENCE_TYPE_USAGE: b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> b2Vec3 [b2Math.h <533:45 533:50>]
REFERENCE_TYPE_USAGE: b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> b2Mat33 [b2Math.h <533:27 533:33>]
REFERENCE_CALL: b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) [b2Math.h <535:20 535:20>]
REFERENCE_CALL: b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> b2Vec3 operator+(const b2Vec3 &, const b2Vec3 &) [b2Math.h <535:33 535:33>]
REFERENCE_CALL: b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> b2Vec3 operator*(float32, const b2Vec3 &) [b2Math.h <535:13 535:13>]
REFERENCE_CALL: b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> b2Vec3 operator*(float32, const b2Vec3 &) [b2Math.h <535:26 535:26>]
REFERENCE_CALL: b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> b2Vec3 operator*(float32, const b2Vec3 &) [b2Math.h <535:39 535:39>]
REFERENCE_USAGE: b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> float32 b2Vec3::x [b2Math.h <535:11 535:11>]
REFERENCE_USAGE: b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> b2Vec3 b2Mat33::ex [b2Math.h <535:17 535:18>]
REFERENCE_USAGE: b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> float32 b2Vec3::y [b2Math.h <535:24 535:24>]
REFERENCE_USAGE: b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> b2Vec3 b2Mat33::ey [b2Math.h <535:30 535:31>]
REFERENCE_USAGE: b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> float32 b2Vec3::z [b2Math.h <535:37 535:37>]
REFERENCE_USAGE: b2Vec3 b2Mul(const b2Mat33 &, const b2Vec3 &) -> b2Vec3 b2Mat33::ez [b2Math.h <535:43 535:44>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <539:8 539:13>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <539:47 539:52>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <541:9 541:14>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> b2Mat33 [b2Math.h <539:29 539:35>]
REFERENCE_CALL: b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <541:9 541:14>]
REFERENCE_USAGE: b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> float32 b2Vec3::x [b2Math.h <541:21 541:21>]
REFERENCE_USAGE: b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> float32 b2Vec3::x [b2Math.h <541:36 541:36>]
REFERENCE_USAGE: b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> b2Vec3 b2Mat33::ex [b2Math.h <541:18 541:19>]
REFERENCE_USAGE: b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> b2Vec3 b2Mat33::ex [b2Math.h <541:47 541:48>]
REFERENCE_USAGE: b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <541:27 541:27>]
REFERENCE_USAGE: b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <541:56 541:56>]
REFERENCE_USAGE: b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> b2Vec3 b2Mat33::ey [b2Math.h <541:33 541:34>]
REFERENCE_USAGE: b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> b2Vec3 b2Mat33::ey [b2Math.h <541:62 541:63>]
REFERENCE_USAGE: b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <541:42 541:42>]
REFERENCE_USAGE: b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <541:71 541:71>]
REFERENCE_USAGE: b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> float32 b2Vec3::y [b2Math.h <541:50 541:50>]
REFERENCE_USAGE: b2Vec2 b2Mul22(const b2Mat33 &, const b2Vec2 &) -> float32 b2Vec3::y [b2Math.h <541:65 541:65>]
REFERENCE_TYPE_USAGE: b2Rot b2Mul(const b2Rot &, const b2Rot &) -> b2Rot [b2Math.h <545:8 545:12>]
REFERENCE_TYPE_USAGE: b2Rot b2Mul(const b2Rot &, const b2Rot &) -> b2Rot [b2Math.h <545:26 545:30>]
REFERENCE_TYPE_USAGE: b2Rot b2Mul(const b2Rot &, const b2Rot &) -> b2Rot [b2Math.h <545:42 545:46>]
REFERENCE_TYPE_USAGE: b2Rot b2Mul(const b2Rot &, const b2Rot &) -> b2Rot [b2Math.h <551:2 551:6>]
REFERENCE_CALL: b2Rot b2Mul(const b2Rot &, const b2Rot &) -> void b2Rot::b2Rot() [b2Math.h <551:8 551:9>]
REFERENCE_USAGE: b2Rot b2Mul(const b2Rot &, const b2Rot &) -> float32 b2Rot::s [b2Math.h <552:5 552:5>]
REFERENCE_USAGE: b2Rot b2Mul(const b2Rot &, const b2Rot &) -> float32 b2Rot::s [b2Math.h <552:11 552:11>]
REFERENCE_USAGE: b2Rot b2Mul(const b2Rot &, const b2Rot &) -> float32 b2Rot::s [b2Math.h <552:29 552:29>]
REFERENCE_USAGE: b2Rot b2Mul(const b2Rot &, const b2Rot &) -> float32 b2Rot::s [b2Math.h <553:23 553:23>]
REFERENCE_USAGE: b2Rot b2Mul(const b2Rot &, const b2Rot &) -> float32 b2Rot::s [b2Math.h <553:29 553:29>]
REFERENCE_USAGE: b2Rot b2Mul(const b2Rot &, const b2Rot &) -> float32 b2Rot::c [b2Math.h <552:17 552:17>]
REFERENCE_USAGE: b2Rot b2Mul(const b2Rot &, const b2Rot &) -> float32 b2Rot::c [b2Math.h <552:23 552:23>]
REFERENCE_USAGE: b2Rot b2Mul(const b2Rot &, const b2Rot &) -> float32 b2Rot::c [b2Math.h <553:5 553:5>]
REFERENCE_USAGE: b2Rot b2Mul(const b2Rot &, const b2Rot &) -> float32 b2Rot::c [b2Math.h <553:11 553:11>]
REFERENCE_USAGE: b2Rot b2Mul(const b2Rot &, const b2Rot &) -> float32 b2Rot::c [b2Math.h <553:17 553:17>]
REFERENCE_CALL: b2Rot b2Mul(const b2Rot &, const b2Rot &) -> void b2Rot::b2Rot(b2Rot &&) [b2Math.h <554:9 554:10>]
REFERENCE_TYPE_USAGE: b2Rot b2MulT(const b2Rot &, const b2Rot &) -> b2Rot [b2Math.h <558:8 558:12>]
REFERENCE_TYPE_USAGE: b2Rot b2MulT(const b2Rot &, const b2Rot &) -> b2Rot [b2Math.h <558:27 558:31>]
REFERENCE_TYPE_USAGE: b2Rot b2MulT(const b2Rot &, const b2Rot &) -> b2Rot [b2Math.h <558:43 558:47>]
REFERENCE_TYPE_USAGE: b2Rot b2MulT(const b2Rot &, const b2Rot &) -> b2Rot [b2Math.h <564:2 564:6>]
REFERENCE_CALL: b2Rot b2MulT(const b2Rot &, const b2Rot &) -> void b2Rot::b2Rot() [b2Math.h <564:8 564:9>]
REFERENCE_USAGE: b2Rot b2MulT(const b2Rot &, const b2Rot &) -> float32 b2Rot::s [b2Math.h <565:5 565:5>]
REFERENCE_USAGE: b2Rot b2MulT(const b2Rot &, const b2Rot &) -> float32 b2Rot::s [b2Math.h <565:17 565:17>]
REFERENCE_USAGE: b2Rot b2MulT(const b2Rot &, const b2Rot &) -> float32 b2Rot::s [b2Math.h <565:23 565:23>]
REFERENCE_USAGE: b2Rot b2MulT(const b2Rot &, const b2Rot &) -> float32 b2Rot::s [b2Math.h <566:23 566:23>]
REFERENCE_USAGE: b2Rot b2MulT(const b2Rot &, const b2Rot &) -> float32 b2Rot::s [b2Math.h <566:29 566:29>]
REFERENCE_USAGE: b2Rot b2MulT(const b2Rot &, const b2Rot &) -> float32 b2Rot::c [b2Math.h <565:11 565:11>]
REFERENCE_USAGE: b2Rot b2MulT(const b2Rot &, const b2Rot &) -> float32 b2Rot::c [b2Math.h <565:29 565:29>]
REFERENCE_USAGE: b2Rot b2MulT(const b2Rot &, const b2Rot &) -> float32 b2Rot::c [b2Math.h <566:5 566:5>]
REFERENCE_USAGE: b2Rot b2MulT(const b2Rot &, const b2Rot &) -> float32 b2Rot::c [b2Math.h <566:11 566:11>]
REFERENCE_USAGE: b2Rot b2MulT(const b2Rot &, const b2Rot &) -> float32 b2Rot::c [b2Math.h <566:17 566:17>]
REFERENCE_CALL: b2Rot b2MulT(const b2Rot &, const b2Rot &) -> void b2Rot::b2Rot(b2Rot &&) [b2Math.h <567:9 567:10>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> b2Vec2 [b2Math.h <571:8 571:13>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> b2Vec2 [b2Math.h <571:43 571:48>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> b2Vec2 [b2Math.h <573:9 573:14>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> b2Rot [b2Math.h <571:27 571:31>]
REFERENCE_CALL: b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <573:9 573:14>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> float32 b2Rot::c [b2Math.h <573:18 573:18>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> float32 b2Rot::c [b2Math.h <573:53 573:53>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <573:24 573:24>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <573:47 573:47>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> float32 b2Rot::s [b2Math.h <573:30 573:30>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> float32 b2Rot::s [b2Math.h <573:41 573:41>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <573:36 573:36>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <573:59 573:59>]
REFERENCE_TYPE_USAGE: b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> b2Vec2 [b2Math.h <577:8 577:13>]
REFERENCE_TYPE_USAGE: b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> b2Vec2 [b2Math.h <577:44 577:49>]
REFERENCE_TYPE_USAGE: b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> b2Vec2 [b2Math.h <579:9 579:14>]
REFERENCE_TYPE_USAGE: b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> b2Rot [b2Math.h <577:28 577:32>]
REFERENCE_CALL: b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <579:9 579:14>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> float32 b2Rot::c [b2Math.h <579:18 579:18>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> float32 b2Rot::c [b2Math.h <579:54 579:54>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <579:24 579:24>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <579:48 579:48>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> float32 b2Rot::s [b2Math.h <579:30 579:30>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> float32 b2Rot::s [b2Math.h <579:42 579:42>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <579:36 579:36>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <579:60 579:60>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> b2Vec2 [b2Math.h <582:8 582:13>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> b2Vec2 [b2Math.h <582:49 582:54>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> b2Vec2 [b2Math.h <587:9 587:14>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> b2Transform [b2Math.h <582:27 582:37>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 [b2Math.h <584:2 584:8>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 [b2Math.h <585:2 585:8>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 b2Rot::c [b2Math.h <584:19 584:19>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 b2Rot::c [b2Math.h <585:33 585:33>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> b2Rot b2Transform::q [b2Math.h <584:17 584:17>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> b2Rot b2Transform::q [b2Math.h <584:31 584:31>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> b2Rot b2Transform::q [b2Math.h <585:17 585:17>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> b2Rot b2Transform::q [b2Math.h <585:31 585:31>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <584:25 584:25>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <584:48 584:48>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <585:25 585:25>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 b2Rot::s [b2Math.h <584:33 584:33>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 b2Rot::s [b2Math.h <585:19 585:19>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <584:39 584:39>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <585:39 585:39>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <585:48 585:48>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> b2Vec2 b2Transform::p [b2Math.h <584:46 584:46>]
REFERENCE_USAGE: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> b2Vec2 b2Transform::p [b2Math.h <585:46 585:46>]
REFERENCE_CALL: b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <587:9 587:14>]
REFERENCE_TYPE_USAGE: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> b2Vec2 [b2Math.h <590:8 590:13>]
REFERENCE_TYPE_USAGE: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> b2Vec2 [b2Math.h <590:50 590:55>]
REFERENCE_TYPE_USAGE: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> b2Vec2 [b2Math.h <597:9 597:14>]
REFERENCE_TYPE_USAGE: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> b2Transform [b2Math.h <590:28 590:38>]
REFERENCE_TYPE_USAGE: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 [b2Math.h <592:2 592:8>]
REFERENCE_TYPE_USAGE: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 [b2Math.h <593:2 593:8>]
REFERENCE_TYPE_USAGE: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 [b2Math.h <594:2 594:8>]
REFERENCE_TYPE_USAGE: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 [b2Math.h <595:2 595:8>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <592:17 592:17>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <592:25 592:25>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> b2Vec2 b2Transform::p [b2Math.h <592:23 592:23>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> b2Vec2 b2Transform::p [b2Math.h <593:23 593:23>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <593:17 593:17>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <593:25 593:25>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 b2Rot::c [b2Math.h <594:19 594:19>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 b2Rot::c [b2Math.h <595:33 595:33>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> b2Rot b2Transform::q [b2Math.h <594:17 594:17>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> b2Rot b2Transform::q [b2Math.h <594:30 594:30>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> b2Rot b2Transform::q [b2Math.h <595:18 595:18>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> b2Rot b2Transform::q [b2Math.h <595:31 595:31>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 b2Rot::s [b2Math.h <594:32 594:32>]
REFERENCE_USAGE: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> float32 b2Rot::s [b2Math.h <595:20 595:20>]
REFERENCE_CALL: b2Vec2 b2MulT(const b2Transform &, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <597:9 597:14>]
REFERENCE_TYPE_USAGE: b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Transform [b2Math.h <602:8 602:18>]
REFERENCE_TYPE_USAGE: b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Transform [b2Math.h <602:32 602:42>]
REFERENCE_TYPE_USAGE: b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Transform [b2Math.h <602:54 602:64>]
REFERENCE_TYPE_USAGE: b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Transform [b2Math.h <604:2 604:12>]
REFERENCE_CALL: b2Transform b2Mul(const b2Transform &, const b2Transform &) -> void b2Transform::b2Transform() [b2Math.h <604:14 604:14>]
REFERENCE_CALL: b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Rot & b2Rot::operator=(b2Rot &&) [b2Math.h <605:6 605:6>]
REFERENCE_USAGE: b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Rot b2Transform::q [b2Math.h <605:4 605:4>]
REFERENCE_USAGE: b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Rot b2Transform::q [b2Math.h <605:16 605:16>]
REFERENCE_USAGE: b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Rot b2Transform::q [b2Math.h <605:21 605:21>]
REFERENCE_USAGE: b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Rot b2Transform::q [b2Math.h <606:16 606:16>]
REFERENCE_CALL: b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Rot b2Mul(const b2Rot &, const b2Rot &) [b2Math.h <605:8 605:12>]
REFERENCE_CALL: b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Math.h <606:6 606:6>]
REFERENCE_USAGE: b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Vec2 b2Transform::p [b2Math.h <606:4 606:4>]
REFERENCE_USAGE: b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Vec2 b2Transform::p [b2Math.h <606:21 606:21>]
REFERENCE_USAGE: b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Vec2 b2Transform::p [b2Math.h <606:28 606:28>]
REFERENCE_CALL: b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2Math.h <606:24 606:24>]
REFERENCE_CALL: b2Transform b2Mul(const b2Transform &, const b2Transform &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2Math.h <606:8 606:12>]
REFERENCE_CALL: b2Transform b2Mul(const b2Transform &, const b2Transform &) -> void b2Transform::b2Transform(b2Transform &&) [b2Math.h <607:9 607:9>]
REFERENCE_TYPE_USAGE: b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Transform [b2Math.h <612:8 612:18>]
REFERENCE_TYPE_USAGE: b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Transform [b2Math.h <612:33 612:43>]
REFERENCE_TYPE_USAGE: b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Transform [b2Math.h <612:55 612:65>]
REFERENCE_TYPE_USAGE: b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Transform [b2Math.h <614:2 614:12>]
REFERENCE_CALL: b2Transform b2MulT(const b2Transform &, const b2Transform &) -> void b2Transform::b2Transform() [b2Math.h <614:14 614:14>]
REFERENCE_CALL: b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Rot & b2Rot::operator=(b2Rot &&) [b2Math.h <615:6 615:6>]
REFERENCE_USAGE: b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Rot b2Transform::q [b2Math.h <615:4 615:4>]
REFERENCE_USAGE: b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Rot b2Transform::q [b2Math.h <615:17 615:17>]
REFERENCE_USAGE: b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Rot b2Transform::q [b2Math.h <615:22 615:22>]
REFERENCE_USAGE: b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Rot b2Transform::q [b2Math.h <616:17 616:17>]
REFERENCE_CALL: b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Rot b2MulT(const b2Rot &, const b2Rot &) [b2Math.h <615:8 615:13>]
REFERENCE_CALL: b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Math.h <616:6 616:6>]
REFERENCE_USAGE: b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Vec2 b2Transform::p [b2Math.h <616:4 616:4>]
REFERENCE_USAGE: b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Vec2 b2Transform::p [b2Math.h <616:22 616:22>]
REFERENCE_USAGE: b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Vec2 b2Transform::p [b2Math.h <616:28 616:28>]
REFERENCE_CALL: b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Vec2 b2MulT(const b2Rot &, const b2Vec2 &) [b2Math.h <616:8 616:13>]
REFERENCE_CALL: b2Transform b2MulT(const b2Transform &, const b2Transform &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Math.h <616:24 616:24>]
REFERENCE_CALL: b2Transform b2MulT(const b2Transform &, const b2Transform &) -> void b2Transform::b2Transform(b2Transform &&) [b2Math.h <617:9 617:9>]
REFERENCE_TYPE_USAGE: T b2Abs<typename T>(T) -> b2Abs<typename T>::T [b2Math.h <621:8 621:8>]
REFERENCE_TYPE_USAGE: T b2Abs<typename T>(T) -> b2Abs<typename T>::T [b2Math.h <621:16 621:16>]
REFERENCE_TYPE_USAGE: T b2Abs<typename T>(T) -> b2Abs<typename T>::T [b2Math.h <623:13 623:13>]
REFERENCE_TEMPLATE_SPECIALIZATION: float b2Abs<float>(float) -> T b2Abs<typename T>(T) [b2Math.h <621:10 621:14>]
REFERENCE_TEMPLATE_SPECIALIZATION: b2Vec2 b2Abs<b2Vec2>(b2Vec2) -> T b2Abs<typename T>(T) [b2Math.h <621:10 621:14>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Abs(const b2Vec2 &) -> b2Vec2 [b2Math.h <626:8 626:13>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Abs(const b2Vec2 &) -> b2Vec2 [b2Math.h <626:27 626:32>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Abs(const b2Vec2 &) -> b2Vec2 [b2Math.h <628:9 628:14>]
REFERENCE_CALL: b2Vec2 b2Abs(const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <628:9 628:14>]
REFERENCE_CALL: b2Vec2 b2Abs(const b2Vec2 &) -> float b2Abs<float>(float) [b2Math.h <628:16 628:20>]
REFERENCE_CALL: b2Vec2 b2Abs(const b2Vec2 &) -> float b2Abs<float>(float) [b2Math.h <628:28 628:32>]
REFERENCE_USAGE: b2Vec2 b2Abs(const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <628:24 628:24>]
REFERENCE_USAGE: b2Vec2 b2Abs(const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <628:36 628:36>]
REFERENCE_TYPE_USAGE: b2Mat22 b2Abs(const b2Mat22 &) -> b2Mat22 [b2Math.h <631:8 631:14>]
REFERENCE_TYPE_USAGE: b2Mat22 b2Abs(const b2Mat22 &) -> b2Mat22 [b2Math.h <631:28 631:34>]
REFERENCE_TYPE_USAGE: b2Mat22 b2Abs(const b2Mat22 &) -> b2Mat22 [b2Math.h <633:9 633:15>]
REFERENCE_CALL: b2Mat22 b2Abs(const b2Mat22 &) -> void b2Mat22::b2Mat22(const b2Vec2 &, const b2Vec2 &) [b2Math.h <633:9 633:15>]
REFERENCE_CALL: b2Mat22 b2Abs(const b2Mat22 &) -> b2Vec2 b2Abs(const b2Vec2 &) [b2Math.h <633:17 633:21>]
REFERENCE_CALL: b2Mat22 b2Abs(const b2Mat22 &) -> b2Vec2 b2Abs(const b2Vec2 &) [b2Math.h <633:30 633:34>]
REFERENCE_USAGE: b2Mat22 b2Abs(const b2Mat22 &) -> b2Vec2 b2Mat22::ex [b2Math.h <633:25 633:26>]
REFERENCE_USAGE: b2Mat22 b2Abs(const b2Mat22 &) -> b2Vec2 b2Mat22::ey [b2Math.h <633:38 633:39>]
REFERENCE_TYPE_USAGE: T b2Min<typename T>(T, T) -> b2Min<typename T>::T [b2Math.h <637:8 637:8>]
REFERENCE_TYPE_USAGE: T b2Min<typename T>(T, T) -> b2Min<typename T>::T [b2Math.h <637:16 637:16>]
REFERENCE_TYPE_USAGE: T b2Min<typename T>(T, T) -> b2Min<typename T>::T [b2Math.h <637:21 637:21>]
REFERENCE_TEMPLATE_SPECIALIZATION: float b2Min<float>(float, float) -> T b2Min<typename T>(T, T) [b2Math.h <637:10 637:14>]
REFERENCE_TEMPLATE_SPECIALIZATION: b2Vec2 b2Min<b2Vec2>(b2Vec2, b2Vec2) -> T b2Min<typename T>(T, T) [b2Math.h <637:10 637:14>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <642:8 642:13>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <642:27 642:32>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <642:44 642:49>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <644:9 644:14>]
REFERENCE_CALL: b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <644:9 644:14>]
REFERENCE_CALL: b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) -> float b2Min<float>(float, float) [b2Math.h <644:16 644:20>]
REFERENCE_CALL: b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) -> float b2Min<float>(float, float) [b2Math.h <644:33 644:37>]
REFERENCE_USAGE: b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <644:24 644:24>]
REFERENCE_USAGE: b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <644:29 644:29>]
REFERENCE_USAGE: b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <644:41 644:41>]
REFERENCE_USAGE: b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <644:46 644:46>]
REFERENCE_TYPE_USAGE: T b2Max<typename T>(T, T) -> b2Max<typename T>::T [b2Math.h <648:8 648:8>]
REFERENCE_TYPE_USAGE: T b2Max<typename T>(T, T) -> b2Max<typename T>::T [b2Math.h <648:16 648:16>]
REFERENCE_TYPE_USAGE: T b2Max<typename T>(T, T) -> b2Max<typename T>::T [b2Math.h <648:21 648:21>]
REFERENCE_TEMPLATE_SPECIALIZATION: float b2Max<float>(float, float) -> T b2Max<typename T>(T, T) [b2Math.h <648:10 648:14>]
REFERENCE_TEMPLATE_SPECIALIZATION: b2Vec2 b2Max<b2Vec2>(b2Vec2, b2Vec2) -> T b2Max<typename T>(T, T) [b2Math.h <648:10 648:14>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <653:8 653:13>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <653:27 653:32>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <653:44 653:49>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <655:9 655:14>]
REFERENCE_CALL: b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) -> void b2Vec2::b2Vec2(float32, float32) [b2Math.h <655:9 655:14>]
REFERENCE_CALL: b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) -> float b2Max<float>(float, float) [b2Math.h <655:16 655:20>]
REFERENCE_CALL: b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) -> float b2Max<float>(float, float) [b2Math.h <655:33 655:37>]
REFERENCE_USAGE: b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <655:24 655:24>]
REFERENCE_USAGE: b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::x [b2Math.h <655:29 655:29>]
REFERENCE_USAGE: b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <655:41 655:41>]
REFERENCE_USAGE: b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) -> float32 b2Vec2::y [b2Math.h <655:46 655:46>]
REFERENCE_TYPE_USAGE: T b2Clamp<typename T>(T, T, T) -> b2Clamp<typename T>::T [b2Math.h <659:8 659:8>]
REFERENCE_TYPE_USAGE: T b2Clamp<typename T>(T, T, T) -> b2Clamp<typename T>::T [b2Math.h <659:18 659:18>]
REFERENCE_TYPE_USAGE: T b2Clamp<typename T>(T, T, T) -> b2Clamp<typename T>::T [b2Math.h <659:23 659:23>]
REFERENCE_TYPE_USAGE: T b2Clamp<typename T>(T, T, T) -> b2Clamp<typename T>::T [b2Math.h <659:30 659:30>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Clamp(const b2Vec2 &, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <664:8 664:13>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Clamp(const b2Vec2 &, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <664:29 664:34>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Clamp(const b2Vec2 &, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <664:46 664:51>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Clamp(const b2Vec2 &, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 [b2Math.h <664:65 664:70>]
REFERENCE_CALL: b2Vec2 b2Clamp(const b2Vec2 &, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Max(const b2Vec2 &, const b2Vec2 &) [b2Math.h <666:9 666:13>]
REFERENCE_CALL: b2Vec2 b2Clamp(const b2Vec2 &, const b2Vec2 &, const b2Vec2 &) -> b2Vec2 b2Min(const b2Vec2 &, const b2Vec2 &) [b2Math.h <666:20 666:24>]
REFERENCE_TYPE_USAGE: void b2Swap<typename T>(T &, T &) -> void [b2Math.h <669:29 669:32>]
REFERENCE_TYPE_USAGE: void b2Swap<typename T>(T &, T &) -> b2Swap<typename T>::T [b2Math.h <669:41 669:41>]
REFERENCE_TYPE_USAGE: void b2Swap<typename T>(T &, T &) -> b2Swap<typename T>::T [b2Math.h <669:47 669:47>]
REFERENCE_TYPE_USAGE: void b2Swap<typename T>(T &, T &) -> b2Swap<typename T>::T [b2Math.h <671:2 671:2>]
REFERENCE_TYPE_USAGE: uint32 b2NextPowerOfTwo(uint32) -> uint32 [b2Math.h <681:8 681:13>]
REFERENCE_TYPE_USAGE: uint32 b2NextPowerOfTwo(uint32) -> uint32 [b2Math.h <681:32 681:37>]
REFERENCE_TYPE_USAGE: bool b2IsPowerOfTwo(uint32) -> bool [b2Math.h <691:8 691:11>]
REFERENCE_TYPE_USAGE: bool b2IsPowerOfTwo(uint32) -> bool [b2Math.h <693:2 693:5>]
REFERENCE_TYPE_USAGE: bool b2IsPowerOfTwo(uint32) -> uint32 [b2Math.h <691:28 691:33>]
REFERENCE_CALL: void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Math.h <699:8 699:8>]
REFERENCE_USAGE: void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Vec2 b2Transform::p [b2Math.h <699:6 699:6>]
REFERENCE_USAGE: void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Vec2 b2Transform::p [b2Math.h <704:6 704:6>]
REFERENCE_CALL: void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2Math.h <699:29 699:29>]
REFERENCE_CALL: void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2Math.h <699:24 699:24>]
REFERENCE_CALL: void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2Math.h <699:36 699:36>]
REFERENCE_USAGE: void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Vec2 b2Sweep::c0 [b2Math.h <699:26 699:27>]
REFERENCE_USAGE: void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Vec2 b2Sweep::c [b2Math.h <699:38 699:38>]
REFERENCE_USAGE: void b2Sweep::GetTransform(b2Transform *, float32) const -> float32 b2Sweep::a0 [b2Math.h <700:34 700:35>]
REFERENCE_USAGE: void b2Sweep::GetTransform(b2Transform *, float32) const -> float32 b2Sweep::a [b2Math.h <700:46 700:46>]
REFERENCE_CALL: void b2Sweep::GetTransform(b2Transform *, float32) const -> void b2Rot::Set(float32) [b2Math.h <701:8 701:10>]
REFERENCE_USAGE: void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Rot b2Transform::q [b2Math.h <701:6 701:6>]
REFERENCE_USAGE: void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Rot b2Transform::q [b2Math.h <704:21 704:21>]
REFERENCE_CALL: void b2Sweep::GetTransform(b2Transform *, float32) const -> void b2Vec2::operator-=(const b2Vec2 &) [b2Math.h <704:8 704:9>]
REFERENCE_CALL: void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2Math.h <704:11 704:15>]
REFERENCE_USAGE: void b2Sweep::GetTransform(b2Transform *, float32) const -> b2Vec2 b2Sweep::localCenter [b2Math.h <704:24 704:34>]
REFERENCE_USAGE: void b2Sweep::Advance(float32) -> float32 b2Sweep::alpha0 [b2Math.h <709:11 709:16>]
REFERENCE_USAGE: void b2Sweep::Advance(float32) -> float32 b2Sweep::alpha0 [b2Math.h <710:26 710:31>]
REFERENCE_USAGE: void b2Sweep::Advance(float32) -> float32 b2Sweep::alpha0 [b2Math.h <710:44 710:49>]
REFERENCE_USAGE: void b2Sweep::Advance(float32) -> float32 b2Sweep::alpha0 [b2Math.h <713:2 713:7>]
REFERENCE_CALL: void b2Sweep::Advance(float32) -> void _wassert(const wchar_t *, const wchar_t *, unsigned int) [b2Math.h <709:2 709:9>]
REFERENCE_TYPE_USAGE: void b2Sweep::Advance(float32) -> unsigned int [b2Math.h <709:2 709:9>]
REFERENCE_CALL: void b2Sweep::Advance(float32) -> void b2Vec2::operator+=(const b2Vec2 &) [b2Math.h <711:5 711:6>]
REFERENCE_USAGE: void b2Sweep::Advance(float32) -> b2Vec2 b2Sweep::c0 [b2Math.h <711:2 711:3>]
REFERENCE_USAGE: void b2Sweep::Advance(float32) -> b2Vec2 b2Sweep::c0 [b2Math.h <711:20 711:21>]
REFERENCE_CALL: void b2Sweep::Advance(float32) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2Math.h <711:13 711:13>]
REFERENCE_CALL: void b2Sweep::Advance(float32) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Math.h <711:18 711:18>]
REFERENCE_USAGE: void b2Sweep::Advance(float32) -> b2Vec2 b2Sweep::c [b2Math.h <711:16 711:16>]
REFERENCE_USAGE: void b2Sweep::Advance(float32) -> float32 b2Sweep::a0 [b2Math.h <712:2 712:3>]
REFERENCE_USAGE: void b2Sweep::Advance(float32) -> float32 b2Sweep::a0 [b2Math.h <712:20 712:21>]
REFERENCE_USAGE: void b2Sweep::Advance(float32) -> float32 b2Sweep::a [b2Math.h <712:16 712:16>]
REFERENCE_TYPE_USAGE: void b2Sweep::Normalize() -> float32 [b2Math.h <719:2 719:8>]
REFERENCE_TYPE_USAGE: void b2Sweep::Normalize() -> float32 [b2Math.h <720:2 720:8>]
REFERENCE_CALL: void b2Sweep::Normalize() -> float floorf(float) [b2Math.h <720:23 720:28>]
REFERENCE_USAGE: void b2Sweep::Normalize() -> float32 b2Sweep::a0 [b2Math.h <720:30 720:31>]
REFERENCE_USAGE: void b2Sweep::Normalize() -> float32 b2Sweep::a0 [b2Math.h <721:2 721:3>]
REFERENCE_USAGE: void b2Sweep::Normalize() -> float32 b2Sweep::a [b2Math.h <722:2 722:2>]
REFERENCE_CALL: const b2Vec2 b2Vec2_zero -> void b2Vec2::b2Vec2(float32, float32) [b2Math.cpp <21:14 21:24>]
REFERENCE_TYPE_USAGE: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> float32 [b2Math.cpp <27:2 27:8>]
REFERENCE_CALL: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> float32 b2Dot(const b2Vec3 &, const b2Vec3 &) [b2Math.cpp <27:16 27:20>]
REFERENCE_CALL: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> float32 b2Dot(const b2Vec3 &, const b2Vec3 &) [b2Math.cpp <33:14 33:18>]
REFERENCE_CALL: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> float32 b2Dot(const b2Vec3 &, const b2Vec3 &) [b2Math.cpp <34:14 34:18>]
REFERENCE_CALL: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> float32 b2Dot(const b2Vec3 &, const b2Vec3 &) [b2Math.cpp <35:14 35:18>]
REFERENCE_USAGE: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> b2Vec3 b2Mat33::ex [b2Math.cpp <27:22 27:23>]
REFERENCE_USAGE: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> b2Vec3 b2Mat33::ex [b2Math.cpp <34:20 34:21>]
REFERENCE_USAGE: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> b2Vec3 b2Mat33::ex [b2Math.cpp <35:20 35:21>]
REFERENCE_CALL: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) [b2Math.cpp <27:26 27:32>]
REFERENCE_CALL: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) [b2Math.cpp <33:23 33:29>]
REFERENCE_CALL: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) [b2Math.cpp <34:24 34:30>]
REFERENCE_CALL: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) [b2Math.cpp <35:24 35:30>]
REFERENCE_USAGE: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> b2Vec3 b2Mat33::ey [b2Math.cpp <27:34 27:35>]
REFERENCE_USAGE: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> b2Vec3 b2Mat33::ey [b2Math.cpp <33:31 33:32>]
REFERENCE_USAGE: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> b2Vec3 b2Mat33::ey [b2Math.cpp <35:32 35:33>]
REFERENCE_USAGE: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> b2Vec3 b2Mat33::ez [b2Math.cpp <27:38 27:39>]
REFERENCE_USAGE: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> b2Vec3 b2Mat33::ez [b2Math.cpp <33:35 33:36>]
REFERENCE_USAGE: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> b2Vec3 b2Mat33::ez [b2Math.cpp <34:35 34:36>]
REFERENCE_CALL: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> void b2Vec3::b2Vec3() [b2Math.cpp <32:9 32:9>]
REFERENCE_USAGE: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> float32 b2Vec3::x [b2Math.cpp <33:4 33:4>]
REFERENCE_USAGE: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> float32 b2Vec3::y [b2Math.cpp <34:4 34:4>]
REFERENCE_USAGE: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> float32 b2Vec3::z [b2Math.cpp <35:4 35:4>]
REFERENCE_CALL: b2Vec3 b2Mat33::Solve33(const b2Vec3 &) const -> void b2Vec3::b2Vec3(b2Vec3 &&) [b2Math.cpp <36:9 36:9>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> float32 [b2Math.cpp <43:2 43:8>]
REFERENCE_TYPE_USAGE: b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> float32 [b2Math.cpp <44:2 44:8>]
REFERENCE_USAGE: b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> float32 b2Vec3::x [b2Math.cpp <43:19 43:19>]
REFERENCE_USAGE: b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> float32 b2Vec3::x [b2Math.cpp <43:31 43:31>]
REFERENCE_USAGE: b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> b2Vec3 b2Mat33::ex [b2Math.cpp <43:16 43:17>]
REFERENCE_USAGE: b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> b2Vec3 b2Mat33::ex [b2Math.cpp <43:40 43:41>]
REFERENCE_USAGE: b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> b2Vec3 b2Mat33::ey [b2Math.cpp <43:28 43:29>]
REFERENCE_USAGE: b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> b2Vec3 b2Mat33::ey [b2Math.cpp <43:52 43:53>]
REFERENCE_USAGE: b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> float32 b2Vec3::y [b2Math.cpp <43:43 43:43>]
REFERENCE_USAGE: b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> float32 b2Vec3::y [b2Math.cpp <43:55 43:55>]
REFERENCE_CALL: b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> void b2Vec2::b2Vec2() [b2Math.cpp <49:9 49:9>]
REFERENCE_USAGE: b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> float32 b2Vec2::x [b2Math.cpp <50:4 50:4>]
REFERENCE_USAGE: b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> float32 b2Vec2::x [b2Math.cpp <50:23 50:23>]
REFERENCE_USAGE: b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> float32 b2Vec2::x [b2Math.cpp <51:35 51:35>]
REFERENCE_USAGE: b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> float32 b2Vec2::y [b2Math.cpp <50:35 50:35>]
REFERENCE_USAGE: b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> float32 b2Vec2::y [b2Math.cpp <51:4 51:4>]
REFERENCE_USAGE: b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> float32 b2Vec2::y [b2Math.cpp <51:23 51:23>]
REFERENCE_CALL: b2Vec2 b2Mat33::Solve22(const b2Vec2 &) const -> void b2Vec2::b2Vec2(b2Vec2 &&) [b2Math.cpp <52:9 52:9>]
REFERENCE_TYPE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> float32 [b2Math.cpp <58:2 58:8>]
REFERENCE_TYPE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> float32 [b2Math.cpp <59:2 59:8>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> float32 b2Vec3::x [b2Math.cpp <58:17 58:17>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> float32 b2Vec3::x [b2Math.cpp <58:27 58:27>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> float32 b2Vec3::x [b2Math.cpp <65:8 65:8>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> float32 b2Vec3::x [b2Math.cpp <65:28 65:28>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> float32 b2Vec3::x [b2Math.cpp <67:8 67:8>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> b2Vec3 b2Mat33::ex [b2Math.cpp <58:14 58:15>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> b2Vec3 b2Mat33::ex [b2Math.cpp <58:34 58:35>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> b2Vec3 b2Mat33::ex [b2Math.cpp <65:5 65:6>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> b2Vec3 b2Mat33::ex [b2Math.cpp <65:45 65:46>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> b2Vec3 b2Mat33::ex [b2Math.cpp <66:5 66:6>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> b2Vec3 b2Mat33::ey [b2Math.cpp <58:24 58:25>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> b2Vec3 b2Mat33::ey [b2Math.cpp <58:44 58:45>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> b2Vec3 b2Mat33::ey [b2Math.cpp <65:25 65:26>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> b2Vec3 b2Mat33::ey [b2Math.cpp <66:25 66:26>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> b2Vec3 b2Mat33::ey [b2Math.cpp <66:45 66:46>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> float32 b2Vec3::y [b2Math.cpp <58:37 58:37>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> float32 b2Vec3::y [b2Math.cpp <58:47 58:47>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> float32 b2Vec3::y [b2Math.cpp <66:8 66:8>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> float32 b2Vec3::y [b2Math.cpp <66:28 66:28>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> float32 b2Vec3::y [b2Math.cpp <67:24 67:24>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> float32 b2Vec3::z [b2Math.cpp <65:48 65:48>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> float32 b2Vec3::z [b2Math.cpp <66:48 66:48>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> float32 b2Vec3::z [b2Math.cpp <67:40 67:40>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> b2Vec3 b2Mat33::ez [b2Math.cpp <67:5 67:6>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> b2Vec3 b2Mat33::ez [b2Math.cpp <67:21 67:22>]
REFERENCE_USAGE: void b2Mat33::GetInverse22(b2Mat33 *) const -> b2Vec3 b2Mat33::ez [b2Math.cpp <67:37 67:38>]
REFERENCE_TYPE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> float32 [b2Math.cpp <73:2 73:8>]
REFERENCE_TYPE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> float32 [b2Math.cpp <79:2 79:8>]
REFERENCE_TYPE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> float32 [b2Math.cpp <80:2 80:8>]
REFERENCE_TYPE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> float32 [b2Math.cpp <81:2 81:8>]
REFERENCE_CALL: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> float32 b2Dot(const b2Vec3 &, const b2Vec3 &) [b2Math.cpp <73:16 73:20>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Vec3 b2Mat33::ex [b2Math.cpp <73:22 73:23>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Vec3 b2Mat33::ex [b2Math.cpp <79:16 79:17>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Vec3 b2Mat33::ex [b2Math.cpp <83:5 83:6>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Vec3 b2Mat33::ex [b2Math.cpp <84:5 84:6>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Vec3 b2Mat33::ex [b2Math.cpp <85:5 85:6>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Vec3 b2Mat33::ex [b2Math.cpp <87:15 87:16>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Vec3 b2Mat33::ex [b2Math.cpp <91:15 91:16>]
REFERENCE_CALL: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Vec3 b2Cross(const b2Vec3 &, const b2Vec3 &) [b2Math.cpp <73:26 73:32>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Vec3 b2Mat33::ey [b2Math.cpp <73:34 73:35>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Vec3 b2Mat33::ey [b2Math.cpp <79:28 79:29>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Vec3 b2Mat33::ey [b2Math.cpp <80:16 80:17>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Vec3 b2Mat33::ey [b2Math.cpp <87:5 87:6>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Vec3 b2Mat33::ey [b2Math.cpp <88:5 88:6>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Vec3 b2Mat33::ey [b2Math.cpp <89:5 89:6>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Vec3 b2Mat33::ey [b2Math.cpp <92:15 92:16>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Vec3 b2Mat33::ez [b2Math.cpp <73:38 73:39>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Vec3 b2Mat33::ez [b2Math.cpp <79:40 79:41>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Vec3 b2Mat33::ez [b2Math.cpp <80:28 80:29>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Vec3 b2Mat33::ez [b2Math.cpp <81:16 81:17>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Vec3 b2Mat33::ez [b2Math.cpp <91:5 91:6>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Vec3 b2Mat33::ez [b2Math.cpp <92:5 92:6>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> b2Vec3 b2Mat33::ez [b2Math.cpp <93:5 93:6>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> float32 b2Vec3::x [b2Math.cpp <79:19 79:19>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> float32 b2Vec3::x [b2Math.cpp <79:31 79:31>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> float32 b2Vec3::x [b2Math.cpp <79:43 79:43>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> float32 b2Vec3::x [b2Math.cpp <83:8 83:8>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> float32 b2Vec3::x [b2Math.cpp <87:8 87:8>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> float32 b2Vec3::x [b2Math.cpp <91:8 91:8>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> float32 b2Vec3::y [b2Math.cpp <80:19 80:19>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> float32 b2Vec3::y [b2Math.cpp <80:31 80:31>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> float32 b2Vec3::y [b2Math.cpp <84:8 84:8>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> float32 b2Vec3::y [b2Math.cpp <87:18 87:18>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> float32 b2Vec3::y [b2Math.cpp <88:8 88:8>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> float32 b2Vec3::y [b2Math.cpp <92:8 92:8>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> float32 b2Vec3::z [b2Math.cpp <81:19 81:19>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> float32 b2Vec3::z [b2Math.cpp <85:8 85:8>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> float32 b2Vec3::z [b2Math.cpp <89:8 89:8>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> float32 b2Vec3::z [b2Math.cpp <91:18 91:18>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> float32 b2Vec3::z [b2Math.cpp <92:18 92:18>]
REFERENCE_USAGE: void b2Mat33::GetSymInverse33(b2Mat33 *) const -> float32 b2Vec3::z [b2Math.cpp <93:8 93:8>]
LOCAL_SYMBOL: b2Math.cpp<25:39> [b2Math.cpp <25:39 25:39>]
LOCAL_SYMBOL: b2Math.cpp<25:39> [b2Math.cpp <33:20 33:20>]
LOCAL_SYMBOL: b2Math.cpp<25:39> [b2Math.cpp <34:32 34:32>]
LOCAL_SYMBOL: b2Math.cpp<25:39> [b2Math.cpp <35:36 35:36>]
LOCAL_SYMBOL: b2Math.cpp<26:1> [b2Math.cpp <26:1 26:1>]
LOCAL_SYMBOL: b2Math.cpp<26:1> [b2Math.cpp <37:1 37:1>]
LOCAL_SYMBOL: b2Math.cpp<27:10> [b2Math.cpp <27:10 27:12>]
LOCAL_SYMBOL: b2Math.cpp<27:10> [b2Math.cpp <28:6 28:8>]
LOCAL_SYMBOL: b2Math.cpp<27:10> [b2Math.cpp <30:3 30:5>]
LOCAL_SYMBOL: b2Math.cpp<27:10> [b2Math.cpp <30:16 30:18>]
LOCAL_SYMBOL: b2Math.cpp<27:10> [b2Math.cpp <33:8 33:10>]
LOCAL_SYMBOL: b2Math.cpp<27:10> [b2Math.cpp <34:8 34:10>]
LOCAL_SYMBOL: b2Math.cpp<27:10> [b2Math.cpp <35:8 35:10>]
LOCAL_SYMBOL: b2Math.cpp<29:2> [b2Math.cpp <29:2 29:2>]
LOCAL_SYMBOL: b2Math.cpp<29:2> [b2Math.cpp <31:2 31:2>]
LOCAL_SYMBOL: b2Math.cpp<32:9> [b2Math.cpp <32:9 32:9>]
LOCAL_SYMBOL: b2Math.cpp<32:9> [b2Math.cpp <33:2 33:2>]
LOCAL_SYMBOL: b2Math.cpp<32:9> [b2Math.cpp <34:2 34:2>]
LOCAL_SYMBOL: b2Math.cpp<32:9> [b2Math.cpp <35:2 35:2>]
LOCAL_SYMBOL: b2Math.cpp<32:9> [b2Math.cpp <36:9 36:9>]
LOCAL_SYMBOL: b2Math.cpp<41:39> [b2Math.cpp <41:39 41:39>]
LOCAL_SYMBOL: b2Math.cpp<41:39> [b2Math.cpp <50:21 50:21>]
LOCAL_SYMBOL: b2Math.cpp<41:39> [b2Math.cpp <50:33 50:33>]
LOCAL_SYMBOL: b2Math.cpp<41:39> [b2Math.cpp <51:21 51:21>]
LOCAL_SYMBOL: b2Math.cpp<41:39> [b2Math.cpp <51:33 51:33>]
LOCAL_SYMBOL: b2Math.cpp<42:1> [b2Math.cpp <42:1 42:1>]
LOCAL_SYMBOL: b2Math.cpp<42:1> [b2Math.cpp <53:1 53:1>]
LOCAL_SYMBOL: b2Math.cpp<43:10> [b2Math.cpp <43:10 43:12>]
LOCAL_SYMBOL: b2Math.cpp<43:10> [b2Math.cpp <44:16 44:18>]
LOCAL_SYMBOL: b2Math.cpp<43:10> [b2Math.cpp <51:15 51:17>]
LOCAL_SYMBOL: b2Math.cpp<43:22> [b2Math.cpp <43:22 43:24>]
LOCAL_SYMBOL: b2Math.cpp<43:22> [b2Math.cpp <44:28 44:30>]
LOCAL_SYMBOL: b2Math.cpp<43:22> [b2Math.cpp <50:27 50:29>]
LOCAL_SYMBOL: b2Math.cpp<43:34> [b2Math.cpp <43:34 43:36>]
LOCAL_SYMBOL: b2Math.cpp<43:34> [b2Math.cpp <44:34 44:36>]
LOCAL_SYMBOL: b2Math.cpp<43:34> [b2Math.cpp <51:27 51:29>]
LOCAL_SYMBOL: b2Math.cpp<43:46> [b2Math.cpp <43:46 43:48>]
LOCAL_SYMBOL: b2Math.cpp<43:46> [b2Math.cpp <44:22 44:24>]
LOCAL_SYMBOL: b2Math.cpp<43:46> [b2Math.cpp <50:15 50:17>]
LOCAL_SYMBOL: b2Math.cpp<44:10> [b2Math.cpp <44:10 44:12>]
LOCAL_SYMBOL: b2Math.cpp<44:10> [b2Math.cpp <45:6 45:8>]
LOCAL_SYMBOL: b2Math.cpp<44:10> [b2Math.cpp <47:3 47:5>]
LOCAL_SYMBOL: b2Math.cpp<44:10> [b2Math.cpp <47:16 47:18>]
LOCAL_SYMBOL: b2Math.cpp<44:10> [b2Math.cpp <50:8 50:10>]
LOCAL_SYMBOL: b2Math.cpp<44:10> [b2Math.cpp <51:8 51:10>]
LOCAL_SYMBOL: b2Math.cpp<46:2> [b2Math.cpp <46:2 46:2>]
LOCAL_SYMBOL: b2Math.cpp<46:2> [b2Math.cpp <48:2 48:2>]
LOCAL_SYMBOL: b2Math.cpp<49:9> [b2Math.cpp <49:9 49:9>]
LOCAL_SYMBOL: b2Math.cpp<49:9> [b2Math.cpp <50:2 50:2>]
LOCAL_SYMBOL: b2Math.cpp<49:9> [b2Math.cpp <51:2 51:2>]
LOCAL_SYMBOL: b2Math.cpp<49:9> [b2Math.cpp <52:9 52:9>]
LOCAL_SYMBOL: b2Math.cpp<56:37> [b2Math.cpp <56:37 56:37>]
LOCAL_SYMBOL: b2Math.cpp<56:37> [b2Math.cpp <65:2 65:2>]
LOCAL_SYMBOL: b2Math.cpp<56:37> [b2Math.cpp <65:22 65:22>]
LOCAL_SYMBOL: b2Math.cpp<56:37> [b2Math.cpp <65:42 65:42>]
LOCAL_SYMBOL: b2Math.cpp<56:37> [b2Math.cpp <66:2 66:2>]
LOCAL_SYMBOL: b2Math.cpp<56:37> [b2Math.cpp <66:22 66:22>]
LOCAL_SYMBOL: b2Math.cpp<56:37> [b2Math.cpp <66:42 66:42>]
LOCAL_SYMBOL: b2Math.cpp<56:37> [b2Math.cpp <67:2 67:2>]
LOCAL_SYMBOL: b2Math.cpp<56:37> [b2Math.cpp <67:18 67:18>]
LOCAL_SYMBOL: b2Math.cpp<56:37> [b2Math.cpp <67:34 67:34>]
LOCAL_SYMBOL: b2Math.cpp<57:1> [b2Math.cpp <57:1 57:1>]
LOCAL_SYMBOL: b2Math.cpp<57:1> [b2Math.cpp <68:1 68:1>]
LOCAL_SYMBOL: b2Math.cpp<58:10> [b2Math.cpp <58:10 58:10>]
LOCAL_SYMBOL: b2Math.cpp<58:10> [b2Math.cpp <59:16 59:16>]
LOCAL_SYMBOL: b2Math.cpp<58:10> [b2Math.cpp <66:39 66:39>]
LOCAL_SYMBOL: b2Math.cpp<58:20> [b2Math.cpp <58:20 58:20>]
LOCAL_SYMBOL: b2Math.cpp<58:20> [b2Math.cpp <59:24 59:24>]
LOCAL_SYMBOL: b2Math.cpp<58:20> [b2Math.cpp <65:39 65:39>]
LOCAL_SYMBOL: b2Math.cpp<58:30> [b2Math.cpp <58:30 58:30>]
LOCAL_SYMBOL: b2Math.cpp<58:30> [b2Math.cpp <59:28 59:28>]
LOCAL_SYMBOL: b2Math.cpp<58:30> [b2Math.cpp <66:19 66:19>]
LOCAL_SYMBOL: b2Math.cpp<58:40> [b2Math.cpp <58:40 58:40>]
LOCAL_SYMBOL: b2Math.cpp<58:40> [b2Math.cpp <59:20 59:20>]
LOCAL_SYMBOL: b2Math.cpp<58:40> [b2Math.cpp <65:19 65:19>]
LOCAL_SYMBOL: b2Math.cpp<59:10> [b2Math.cpp <59:10 59:12>]
LOCAL_SYMBOL: b2Math.cpp<59:10> [b2Math.cpp <60:6 60:8>]
LOCAL_SYMBOL: b2Math.cpp<59:10> [b2Math.cpp <62:3 62:5>]
LOCAL_SYMBOL: b2Math.cpp<59:10> [b2Math.cpp <62:16 62:18>]
LOCAL_SYMBOL: b2Math.cpp<59:10> [b2Math.cpp <65:13 65:15>]
LOCAL_SYMBOL: b2Math.cpp<59:10> [b2Math.cpp <65:33 65:35>]
LOCAL_SYMBOL: b2Math.cpp<59:10> [b2Math.cpp <66:13 66:15>]
LOCAL_SYMBOL: b2Math.cpp<59:10> [b2Math.cpp <66:33 66:35>]
LOCAL_SYMBOL: b2Math.cpp<61:2> [b2Math.cpp <61:2 61:2>]
LOCAL_SYMBOL: b2Math.cpp<61:2> [b2Math.cpp <63:2 63:2>]
LOCAL_SYMBOL: b2Math.cpp<71:40> [b2Math.cpp <71:40 71:40>]
LOCAL_SYMBOL: b2Math.cpp<71:40> [b2Math.cpp <83:2 83:2>]
LOCAL_SYMBOL: b2Math.cpp<71:40> [b2Math.cpp <84:2 84:2>]
LOCAL_SYMBOL: b2Math.cpp<71:40> [b2Math.cpp <85:2 85:2>]
LOCAL_SYMBOL: b2Math.cpp<71:40> [b2Math.cpp <87:2 87:2>]
LOCAL_SYMBOL: b2Math.cpp<71:40> [b2Math.cpp <87:12 87:12>]
LOCAL_SYMBOL: b2Math.cpp<71:40> [b2Math.cpp <88:2 88:2>]
LOCAL_SYMBOL: b2Math.cpp<71:40> [b2Math.cpp <89:2 89:2>]
LOCAL_SYMBOL: b2Math.cpp<71:40> [b2Math.cpp <91:2 91:2>]
LOCAL_SYMBOL: b2Math.cpp<71:40> [b2Math.cpp <91:12 91:12>]
LOCAL_SYMBOL: b2Math.cpp<71:40> [b2Math.cpp <92:2 92:2>]
LOCAL_SYMBOL: b2Math.cpp<71:40> [b2Math.cpp <92:12 92:12>]
LOCAL_SYMBOL: b2Math.cpp<71:40> [b2Math.cpp <93:2 93:2>]
LOCAL_SYMBOL: b2Math.cpp<72:1> [b2Math.cpp <72:1 72:1>]
LOCAL_SYMBOL: b2Math.cpp<72:1> [b2Math.cpp <94:1 94:1>]
LOCAL_SYMBOL: b2Math.cpp<73:10> [b2Math.cpp <73:10 73:12>]
LOCAL_SYMBOL: b2Math.cpp<73:10> [b2Math.cpp <74:6 74:8>]
LOCAL_SYMBOL: b2Math.cpp<73:10> [b2Math.cpp <76:3 76:5>]
LOCAL_SYMBOL: b2Math.cpp<73:10> [b2Math.cpp <76:16 76:18>]
LOCAL_SYMBOL: b2Math.cpp<73:10> [b2Math.cpp <83:12 83:14>]
LOCAL_SYMBOL: b2Math.cpp<73:10> [b2Math.cpp <84:12 84:14>]
LOCAL_SYMBOL: b2Math.cpp<73:10> [b2Math.cpp <85:12 85:14>]
LOCAL_SYMBOL: b2Math.cpp<73:10> [b2Math.cpp <88:12 88:14>]
LOCAL_SYMBOL: b2Math.cpp<73:10> [b2Math.cpp <89:12 89:14>]
LOCAL_SYMBOL: b2Math.cpp<73:10> [b2Math.cpp <93:12 93:14>]
LOCAL_SYMBOL: b2Math.cpp<75:2> [b2Math.cpp <75:2 75:2>]
LOCAL_SYMBOL: b2Math.cpp<75:2> [b2Math.cpp <77:2 77:2>]
LOCAL_SYMBOL: b2Math.cpp<79:10> [b2Math.cpp <79:10 79:12>]
LOCAL_SYMBOL: b2Math.cpp<79:10> [b2Math.cpp <88:19 88:21>]
LOCAL_SYMBOL: b2Math.cpp<79:10> [b2Math.cpp <89:31 89:33>]
LOCAL_SYMBOL: b2Math.cpp<79:10> [b2Math.cpp <93:19 93:21>]
LOCAL_SYMBOL: b2Math.cpp<79:22> [b2Math.cpp <79:22 79:24>]
LOCAL_SYMBOL: b2Math.cpp<79:22> [b2Math.cpp <84:31 84:33>]
LOCAL_SYMBOL: b2Math.cpp<79:22> [b2Math.cpp <85:19 85:21>]
LOCAL_SYMBOL: b2Math.cpp<79:22> [b2Math.cpp <89:25 89:27>]
LOCAL_SYMBOL: b2Math.cpp<79:22> [b2Math.cpp <93:31 93:33>]
LOCAL_SYMBOL: b2Math.cpp<79:22> [b2Math.cpp <93:37 93:39>]
LOCAL_SYMBOL: b2Math.cpp<79:34> [b2Math.cpp <79:34 79:36>]
LOCAL_SYMBOL: b2Math.cpp<79:34> [b2Math.cpp <84:19 84:21>]
LOCAL_SYMBOL: b2Math.cpp<79:34> [b2Math.cpp <85:31 85:33>]
LOCAL_SYMBOL: b2Math.cpp<79:34> [b2Math.cpp <88:31 88:33>]
LOCAL_SYMBOL: b2Math.cpp<79:34> [b2Math.cpp <88:37 88:39>]
LOCAL_SYMBOL: b2Math.cpp<79:34> [b2Math.cpp <89:19 89:21>]
LOCAL_SYMBOL: b2Math.cpp<80:10> [b2Math.cpp <80:10 80:12>]
LOCAL_SYMBOL: b2Math.cpp<80:10> [b2Math.cpp <83:19 83:21>]
LOCAL_SYMBOL: b2Math.cpp<80:10> [b2Math.cpp <85:37 85:39>]
LOCAL_SYMBOL: b2Math.cpp<80:10> [b2Math.cpp <93:25 93:27>]
LOCAL_SYMBOL: b2Math.cpp<80:22> [b2Math.cpp <80:22 80:24>]
LOCAL_SYMBOL: b2Math.cpp<80:22> [b2Math.cpp <83:31 83:33>]
LOCAL_SYMBOL: b2Math.cpp<80:22> [b2Math.cpp <83:37 83:39>]
LOCAL_SYMBOL: b2Math.cpp<80:22> [b2Math.cpp <84:25 84:27>]
LOCAL_SYMBOL: b2Math.cpp<80:22> [b2Math.cpp <85:25 85:27>]
LOCAL_SYMBOL: b2Math.cpp<80:22> [b2Math.cpp <89:37 89:39>]
LOCAL_SYMBOL: b2Math.cpp<81:10> [b2Math.cpp <81:10 81:12>]
LOCAL_SYMBOL: b2Math.cpp<81:10> [b2Math.cpp <83:25 83:27>]
LOCAL_SYMBOL: b2Math.cpp<81:10> [b2Math.cpp <84:37 84:39>]
LOCAL_SYMBOL: b2Math.cpp<81:10> [b2Math.cpp <88:25 88:27>]
LOCAL_SYMBOL: b2Math.h<102:2> [b2Math.h <102:2 102:2>]
LOCAL_SYMBOL: b2Math.h<102:2> [b2Math.h <104:2 104:2>]
LOCAL_SYMBOL: b2Math.h<109:2> [b2Math.h <109:2 109:2>]
LOCAL_SYMBOL: b2Math.h<109:2> [b2Math.h <111:2 111:2>]
LOCAL_SYMBOL: b2Math.h<115:2> [b2Math.h <115:2 115:2>]
LOCAL_SYMBOL: b2Math.h<115:2> [b2Math.h <126:2 126:2>]
LOCAL_SYMBOL: b2Math.h<116:11> [b2Math.h <116:11 116:16>]
LOCAL_SYMBOL: b2Math.h<116:11> [b2Math.h <117:7 117:12>]
LOCAL_SYMBOL: b2Math.h<116:11> [b2Math.h <121:30 121:35>]
LOCAL_SYMBOL: b2Math.h<116:11> [b2Math.h <125:10 125:15>]
LOCAL_SYMBOL: b2Math.h<118:3> [b2Math.h <118:3 118:3>]
LOCAL_SYMBOL: b2Math.h<118:3> [b2Math.h <120:3 120:3>]
LOCAL_SYMBOL: b2Math.h<121:11> [b2Math.h <121:11 121:19>]
LOCAL_SYMBOL: b2Math.h<121:11> [b2Math.h <122:8 122:16>]
LOCAL_SYMBOL: b2Math.h<121:11> [b2Math.h <123:8 123:16>]
LOCAL_SYMBOL: b2Math.h<130:2> [b2Math.h <130:2 130:2>]
LOCAL_SYMBOL: b2Math.h<130:2> [b2Math.h <132:2 132:2>]
LOCAL_SYMBOL: b2Math.h<136:2> [b2Math.h <136:2 136:2>]
LOCAL_SYMBOL: b2Math.h<136:2> [b2Math.h <138:2 138:2>]
LOCAL_SYMBOL: b2Math.h<144:8> [b2Math.h <144:8 144:13>]
LOCAL_SYMBOL: b2Math.h<145:1> [b2Math.h <145:1 145:1>]
LOCAL_SYMBOL: b2Math.h<145:1> [b2Math.h <180:1 180:1>]
LOCAL_SYMBOL: b2Math.h<147:11> [b2Math.h <147:11 147:11>]
LOCAL_SYMBOL: b2Math.h<147:11> [b2Math.h <147:12 147:12>]
LOCAL_SYMBOL: b2Math.h<150:17> [b2Math.h <150:17 150:19>]
LOCAL_SYMBOL: b2Math.h<150:17> [b2Math.h <150:52 150:54>]
LOCAL_SYMBOL: b2Math.h<150:30> [b2Math.h <150:30 150:32>]
LOCAL_SYMBOL: b2Math.h<150:30> [b2Math.h <150:60 150:62>]
LOCAL_SYMBOL: b2Math.h<150:43> [b2Math.h <150:43 150:45>]
LOCAL_SYMBOL: b2Math.h<150:43> [b2Math.h <150:68 150:70>]
LOCAL_SYMBOL: b2Math.h<150:73> [b2Math.h <150:73 150:73>]
LOCAL_SYMBOL: b2Math.h<150:73> [b2Math.h <150:74 150:74>]
LOCAL_SYMBOL: b2Math.h<153:17> [b2Math.h <153:17 153:17>]
LOCAL_SYMBOL: b2Math.h<153:17> [b2Math.h <153:49 153:49>]
LOCAL_SYMBOL: b2Math.h<156:19> [b2Math.h <156:19 156:20>]
LOCAL_SYMBOL: b2Math.h<156:19> [b2Math.h <156:53 156:54>]
LOCAL_SYMBOL: b2Math.h<156:31> [b2Math.h <156:31 156:32>]
LOCAL_SYMBOL: b2Math.h<156:31> [b2Math.h <156:61 156:62>]
LOCAL_SYMBOL: b2Math.h<156:43> [b2Math.h <156:43 156:44>]
LOCAL_SYMBOL: b2Math.h<156:43> [b2Math.h <156:69 156:70>]
LOCAL_SYMBOL: b2Math.h<156:47> [b2Math.h <156:47 156:47>]
LOCAL_SYMBOL: b2Math.h<156:47> [b2Math.h <156:73 156:73>]
LOCAL_SYMBOL: b2Math.h<159:28> [b2Math.h <159:28 159:28>]
LOCAL_SYMBOL: b2Math.h<159:28> [b2Math.h <159:69 159:69>]
LOCAL_SYMBOL: b2Math.h<159:37> [b2Math.h <159:37 159:37>]
LOCAL_SYMBOL: b2Math.h<159:37> [b2Math.h <159:40 159:40>]
LOCAL_SYMBOL: b2Math.h<159:37> [b2Math.h <159:66 159:66>]
LOCAL_SYMBOL: b2Math.h<162:34> [b2Math.h <162:34 162:34>]
LOCAL_SYMBOL: b2Math.h<162:34> [b2Math.h <164:8 164:8>]
LOCAL_SYMBOL: b2Math.h<162:34> [b2Math.h <164:18 164:18>]
LOCAL_SYMBOL: b2Math.h<162:34> [b2Math.h <164:28 164:28>]
LOCAL_SYMBOL: b2Math.h<163:2> [b2Math.h <163:2 163:2>]
LOCAL_SYMBOL: b2Math.h<163:2> [b2Math.h <165:2 165:2>]
LOCAL_SYMBOL: b2Math.h<168:34> [b2Math.h <168:34 168:34>]
LOCAL_SYMBOL: b2Math.h<168:34> [b2Math.h <170:8 170:8>]
LOCAL_SYMBOL: b2Math.h<168:34> [b2Math.h <170:18 170:18>]
LOCAL_SYMBOL: b2Math.h<168:34> [b2Math.h <170:28 170:28>]
LOCAL_SYMBOL: b2Math.h<169:2> [b2Math.h <169:2 169:2>]
LOCAL_SYMBOL: b2Math.h<169:2> [b2Math.h <171:2 171:2>]
LOCAL_SYMBOL: b2Math.h<174:28> [b2Math.h <174:28 174:28>]
LOCAL_SYMBOL: b2Math.h<174:28> [b2Math.h <176:8 176:8>]
LOCAL_SYMBOL: b2Math.h<174:28> [b2Math.h <176:16 176:16>]
LOCAL_SYMBOL: b2Math.h<174:28> [b2Math.h <176:24 176:24>]
LOCAL_SYMBOL: b2Math.h<175:2> [b2Math.h <175:2 175:2>]
LOCAL_SYMBOL: b2Math.h<175:2> [b2Math.h <177:2 177:2>]
LOCAL_SYMBOL: b2Math.h<183:8> [b2Math.h <183:8 183:14>]
LOCAL_SYMBOL: b2Math.h<184:1> [b2Math.h <184:1 184:1>]
LOCAL_SYMBOL: b2Math.h<184:1> [b2Math.h <254:1 254:1>]
LOCAL_SYMBOL: b2Math.h<186:12> [b2Math.h <186:12 186:12>]
LOCAL_SYMBOL: b2Math.h<186:12> [b2Math.h <186:13 186:13>]
LOCAL_SYMBOL: b2Math.h<189:24> [b2Math.h <189:24 189:25>]
LOCAL_SYMBOL: b2Math.h<189:24> [b2Math.h <191:8 191:9>]
LOCAL_SYMBOL: b2Math.h<189:42> [b2Math.h <189:42 189:43>]
LOCAL_SYMBOL: b2Math.h<189:42> [b2Math.h <192:8 192:9>]
LOCAL_SYMBOL: b2Math.h<190:2> [b2Math.h <190:2 190:2>]
LOCAL_SYMBOL: b2Math.h<190:2> [b2Math.h <193:2 193:2>]
LOCAL_SYMBOL: b2Math.h<196:18> [b2Math.h <196:18 196:20>]
LOCAL_SYMBOL: b2Math.h<196:18> [b2Math.h <198:10 198:12>]
LOCAL_SYMBOL: b2Math.h<196:31> [b2Math.h <196:31 196:33>]
LOCAL_SYMBOL: b2Math.h<196:31> [b2Math.h <199:10 199:12>]
LOCAL_SYMBOL: b2Math.h<196:44> [b2Math.h <196:44 196:46>]
LOCAL_SYMBOL: b2Math.h<196:44> [b2Math.h <198:22 198:24>]
LOCAL_SYMBOL: b2Math.h<196:57> [b2Math.h <196:57 196:59>]
LOCAL_SYMBOL: b2Math.h<196:57> [b2Math.h <199:22 199:24>]
LOCAL_SYMBOL: b2Math.h<197:2> [b2Math.h <197:2 197:2>]
LOCAL_SYMBOL: b2Math.h<197:2> [b2Math.h <200:2 200:2>]
LOCAL_SYMBOL: b2Math.h<203:25> [b2Math.h <203:25 203:26>]
LOCAL_SYMBOL: b2Math.h<203:25> [b2Math.h <205:8 205:9>]
LOCAL_SYMBOL: b2Math.h<203:43> [b2Math.h <203:43 203:44>]
LOCAL_SYMBOL: b2Math.h<203:43> [b2Math.h <206:8 206:9>]
LOCAL_SYMBOL: b2Math.h<204:2> [b2Math.h <204:2 204:2>]
LOCAL_SYMBOL: b2Math.h<204:2> [b2Math.h <207:2 207:2>]
LOCAL_SYMBOL: b2Math.h<211:2> [b2Math.h <211:2 211:2>]
LOCAL_SYMBOL: b2Math.h<211:2> [b2Math.h <214:2 214:2>]
LOCAL_SYMBOL: b2Math.h<218:2> [b2Math.h <218:2 218:2>]
LOCAL_SYMBOL: b2Math.h<218:2> [b2Math.h <221:2 221:2>]
LOCAL_SYMBOL: b2Math.h<224:2> [b2Math.h <224:2 224:2>]
LOCAL_SYMBOL: b2Math.h<224:2> [b2Math.h <235:2 235:2>]
LOCAL_SYMBOL: b2Math.h<225:11> [b2Math.h <225:11 225:11>]
LOCAL_SYMBOL: b2Math.h<225:11> [b2Math.h <227:17 227:17>]
LOCAL_SYMBOL: b2Math.h<225:11> [b2Math.h <233:38 233:38>]
LOCAL_SYMBOL: b2Math.h<225:21> [b2Math.h <225:21 225:21>]
LOCAL_SYMBOL: b2Math.h<225:21> [b2Math.h <227:25 227:25>]
LOCAL_SYMBOL: b2Math.h<225:21> [b2Math.h <232:38 232:38>]
LOCAL_SYMBOL: b2Math.h<225:31> [b2Math.h <225:31 225:31>]
LOCAL_SYMBOL: b2Math.h<225:31> [b2Math.h <227:29 227:29>]
LOCAL_SYMBOL: b2Math.h<225:31> [b2Math.h <233:19 233:19>]
LOCAL_SYMBOL: b2Math.h<225:41> [b2Math.h <225:41 225:41>]
LOCAL_SYMBOL: b2Math.h<225:41> [b2Math.h <227:21 227:21>]
LOCAL_SYMBOL: b2Math.h<225:41> [b2Math.h <232:19 232:19>]
LOCAL_SYMBOL: b2Math.h<226:11> [b2Math.h <226:11 226:11>]
LOCAL_SYMBOL: b2Math.h<226:11> [b2Math.h <232:3 232:3>]
LOCAL_SYMBOL: b2Math.h<226:11> [b2Math.h <232:22 232:22>]
LOCAL_SYMBOL: b2Math.h<226:11> [b2Math.h <233:3 233:3>]
LOCAL_SYMBOL: b2Math.h<226:11> [b2Math.h <233:22 233:22>]
LOCAL_SYMBOL: b2Math.h<226:11> [b2Math.h <234:10 234:10>]
LOCAL_SYMBOL: b2Math.h<227:11> [b2Math.h <227:11 227:13>]
LOCAL_SYMBOL: b2Math.h<227:11> [b2Math.h <228:7 228:9>]
LOCAL_SYMBOL: b2Math.h<227:11> [b2Math.h <230:4 230:6>]
LOCAL_SYMBOL: b2Math.h<227:11> [b2Math.h <230:17 230:19>]
LOCAL_SYMBOL: b2Math.h<227:11> [b2Math.h <232:13 232:15>]
LOCAL_SYMBOL: b2Math.h<227:11> [b2Math.h <232:32 232:34>]
LOCAL_SYMBOL: b2Math.h<227:11> [b2Math.h <233:13 233:15>]
LOCAL_SYMBOL: b2Math.h<227:11> [b2Math.h <233:32 233:34>]
LOCAL_SYMBOL: b2Math.h<229:3> [b2Math.h <229:3 229:3>]
LOCAL_SYMBOL: b2Math.h<229:3> [b2Math.h <231:3 231:3>]
LOCAL_SYMBOL: b2Math.h<239:29> [b2Math.h <239:29 239:29>]
LOCAL_SYMBOL: b2Math.h<239:29> [b2Math.h <248:22 248:22>]
LOCAL_SYMBOL: b2Math.h<239:29> [b2Math.h <248:34 248:34>]
LOCAL_SYMBOL: b2Math.h<239:29> [b2Math.h <249:22 249:22>]
LOCAL_SYMBOL: b2Math.h<239:29> [b2Math.h <249:34 249:34>]
LOCAL_SYMBOL: b2Math.h<240:2> [b2Math.h <240:2 240:2>]
LOCAL_SYMBOL: b2Math.h<240:2> [b2Math.h <251:2 251:2>]
LOCAL_SYMBOL: b2Math.h<241:11> [b2Math.h <241:11 241:13>]
LOCAL_SYMBOL: b2Math.h<241:11> [b2Math.h <242:17 242:19>]
LOCAL_SYMBOL: b2Math.h<241:11> [b2Math.h <249:16 249:18>]
LOCAL_SYMBOL: b2Math.h<241:23> [b2Math.h <241:23 241:25>]
LOCAL_SYMBOL: b2Math.h<241:23> [b2Math.h <242:29 242:31>]
LOCAL_SYMBOL: b2Math.h<241:23> [b2Math.h <248:28 248:30>]
LOCAL_SYMBOL: b2Math.h<241:35> [b2Math.h <241:35 241:37>]
LOCAL_SYMBOL: b2Math.h<241:35> [b2Math.h <242:35 242:37>]
LOCAL_SYMBOL: b2Math.h<241:35> [b2Math.h <249:28 249:30>]
LOCAL_SYMBOL: b2Math.h<241:47> [b2Math.h <241:47 241:49>]
LOCAL_SYMBOL: b2Math.h<241:47> [b2Math.h <242:23 242:25>]
LOCAL_SYMBOL: b2Math.h<241:47> [b2Math.h <248:16 248:18>]
LOCAL_SYMBOL: b2Math.h<242:11> [b2Math.h <242:11 242:13>]
LOCAL_SYMBOL: b2Math.h<242:11> [b2Math.h <243:7 243:9>]
LOCAL_SYMBOL: b2Math.h<242:11> [b2Math.h <245:4 245:6>]
LOCAL_SYMBOL: b2Math.h<242:11> [b2Math.h <245:17 245:19>]
LOCAL_SYMBOL: b2Math.h<242:11> [b2Math.h <248:9 248:11>]
LOCAL_SYMBOL: b2Math.h<242:11> [b2Math.h <249:9 249:11>]
LOCAL_SYMBOL: b2Math.h<244:3> [b2Math.h <244:3 244:3>]
LOCAL_SYMBOL: b2Math.h<244:3> [b2Math.h <246:3 246:3>]
LOCAL_SYMBOL: b2Math.h<247:10> [b2Math.h <247:10 247:10>]
LOCAL_SYMBOL: b2Math.h<247:10> [b2Math.h <248:3 248:3>]
LOCAL_SYMBOL: b2Math.h<247:10> [b2Math.h <249:3 249:3>]
LOCAL_SYMBOL: b2Math.h<247:10> [b2Math.h <250:10 250:10>]
LOCAL_SYMBOL: b2Math.h<258:1> [b2Math.h <258:1 258:1>]
LOCAL_SYMBOL: b2Math.h<258:1> [b2Math.h <296:1 296:1>]
LOCAL_SYMBOL: b2Math.h<260:12> [b2Math.h <260:12 260:12>]
LOCAL_SYMBOL: b2Math.h<260:12> [b2Math.h <260:13 260:13>]
LOCAL_SYMBOL: b2Math.h<263:24> [b2Math.h <263:24 263:25>]
LOCAL_SYMBOL: b2Math.h<263:24> [b2Math.h <265:8 265:9>]
LOCAL_SYMBOL: b2Math.h<263:42> [b2Math.h <263:42 263:43>]
LOCAL_SYMBOL: b2Math.h<263:42> [b2Math.h <266:8 266:9>]
LOCAL_SYMBOL: b2Math.h<263:60> [b2Math.h <263:60 263:61>]
LOCAL_SYMBOL: b2Math.h<263:60> [b2Math.h <267:8 267:9>]
LOCAL_SYMBOL: b2Math.h<264:2> [b2Math.h <264:2 264:2>]
LOCAL_SYMBOL: b2Math.h<264:2> [b2Math.h <268:2 268:2>]
LOCAL_SYMBOL: b2Math.h<26:31> [b2Math.h <26:31 26:31>]
LOCAL_SYMBOL: b2Math.h<26:31> [b2Math.h <28:40 28:40>]
LOCAL_SYMBOL: b2Math.h<272:2> [b2Math.h <272:2 272:2>]
LOCAL_SYMBOL: b2Math.h<272:2> [b2Math.h <276:2 276:2>]
LOCAL_SYMBOL: b2Math.h<27:1> [b2Math.h <27:1 27:1>]
LOCAL_SYMBOL: b2Math.h<27:1> [b2Math.h <30:1 30:1>]
LOCAL_SYMBOL: b2Math.h<280:31> [b2Math.h <280:31 280:31>]
LOCAL_SYMBOL: b2Math.h<285:31> [b2Math.h <285:31 285:31>]
LOCAL_SYMBOL: b2Math.h<289:29> [b2Math.h <289:29 289:29>]
LOCAL_SYMBOL: b2Math.h<28:8> [b2Math.h <28:8 28:9>]
LOCAL_SYMBOL: b2Math.h<28:8> [b2Math.h <29:10 29:11>]
LOCAL_SYMBOL: b2Math.h<293:32> [b2Math.h <293:32 293:32>]
LOCAL_SYMBOL: b2Math.h<299:8> [b2Math.h <299:8 299:12>]
LOCAL_SYMBOL: b2Math.h<300:1> [b2Math.h <300:1 300:1>]
LOCAL_SYMBOL: b2Math.h<300:1> [b2Math.h <346:1 346:1>]
LOCAL_SYMBOL: b2Math.h<301:10> [b2Math.h <301:10 301:10>]
LOCAL_SYMBOL: b2Math.h<301:10> [b2Math.h <301:11 301:11>]
LOCAL_SYMBOL: b2Math.h<304:25> [b2Math.h <304:25 304:29>]
LOCAL_SYMBOL: b2Math.h<304:25> [b2Math.h <307:12 307:16>]
LOCAL_SYMBOL: b2Math.h<304:25> [b2Math.h <308:12 308:16>]
LOCAL_SYMBOL: b2Math.h<305:2> [b2Math.h <305:2 305:2>]
LOCAL_SYMBOL: b2Math.h<305:2> [b2Math.h <309:2 309:2>]
LOCAL_SYMBOL: b2Math.h<312:19> [b2Math.h <312:19 312:23>]
LOCAL_SYMBOL: b2Math.h<312:19> [b2Math.h <315:12 315:16>]
LOCAL_SYMBOL: b2Math.h<312:19> [b2Math.h <316:12 316:16>]
LOCAL_SYMBOL: b2Math.h<313:2> [b2Math.h <313:2 313:2>]
LOCAL_SYMBOL: b2Math.h<313:2> [b2Math.h <317:2 317:2>]
LOCAL_SYMBOL: b2Math.h<321:2> [b2Math.h <321:2 321:2>]
LOCAL_SYMBOL: b2Math.h<321:2> [b2Math.h <324:2 324:2>]
LOCAL_SYMBOL: b2Math.h<328:2> [b2Math.h <328:2 328:2>]
LOCAL_SYMBOL: b2Math.h<328:2> [b2Math.h <330:2 330:2>]
LOCAL_SYMBOL: b2Math.h<334:2> [b2Math.h <334:2 334:2>]
LOCAL_SYMBOL: b2Math.h<334:2> [b2Math.h <336:2 336:2>]
LOCAL_SYMBOL: b2Math.h<33:34> [b2Math.h <33:34 33:34>]
LOCAL_SYMBOL: b2Math.h<33:34> [b2Math.h <41:14 41:14>]
LOCAL_SYMBOL: b2Math.h<33:34> [b2Math.h <42:25 42:25>]
LOCAL_SYMBOL: b2Math.h<33:34> [b2Math.h <44:2 44:2>]
LOCAL_SYMBOL: b2Math.h<33:34> [b2Math.h <45:2 45:2>]
LOCAL_SYMBOL: b2Math.h<33:34> [b2Math.h <45:6 45:6>]
LOCAL_SYMBOL: b2Math.h<33:34> [b2Math.h <45:26 45:26>]
LOCAL_SYMBOL: b2Math.h<33:34> [b2Math.h <45:30 45:30>]
LOCAL_SYMBOL: b2Math.h<33:34> [b2Math.h <46:9 46:9>]
LOCAL_SYMBOL: b2Math.h<340:2> [b2Math.h <340:2 340:2>]
LOCAL_SYMBOL: b2Math.h<340:2> [b2Math.h <342:2 342:2>]
LOCAL_SYMBOL: b2Math.h<34:1> [b2Math.h <34:1 34:1>]
LOCAL_SYMBOL: b2Math.h<34:1> [b2Math.h <47:1 47:1>]
LOCAL_SYMBOL: b2Math.h<350:8> [b2Math.h <350:8 350:18>]
LOCAL_SYMBOL: b2Math.h<351:1> [b2Math.h <351:1 351:1>]
LOCAL_SYMBOL: b2Math.h<351:1> [b2Math.h <374:1 374:1>]
LOCAL_SYMBOL: b2Math.h<353:16> [b2Math.h <353:16 353:16>]
LOCAL_SYMBOL: b2Math.h<353:16> [b2Math.h <353:17 353:17>]
LOCAL_SYMBOL: b2Math.h<356:28> [b2Math.h <356:28 356:35>]
LOCAL_SYMBOL: b2Math.h<356:28> [b2Math.h <356:65 356:72>]
LOCAL_SYMBOL: b2Math.h<356:51> [b2Math.h <356:51 356:58>]
LOCAL_SYMBOL: b2Math.h<356:51> [b2Math.h <356:78 356:85>]
LOCAL_SYMBOL: b2Math.h<356:88> [b2Math.h <356:88 356:88>]
LOCAL_SYMBOL: b2Math.h<356:88> [b2Math.h <356:89 356:89>]
LOCAL_SYMBOL: b2Math.h<360:2> [b2Math.h <360:2 360:2>]
LOCAL_SYMBOL: b2Math.h<360:2> [b2Math.h <363:2 363:2>]
LOCAL_SYMBOL: b2Math.h<366:25> [b2Math.h <366:25 366:32>]
LOCAL_SYMBOL: b2Math.h<366:25> [b2Math.h <368:7 368:14>]
LOCAL_SYMBOL: b2Math.h<366:43> [b2Math.h <366:43 366:47>]
LOCAL_SYMBOL: b2Math.h<366:43> [b2Math.h <369:9 369:13>]
LOCAL_SYMBOL: b2Math.h<367:2> [b2Math.h <367:2 367:2>]
LOCAL_SYMBOL: b2Math.h<367:2> [b2Math.h <370:2 370:2>]
LOCAL_SYMBOL: b2Math.h<36:2> [b2Math.h <36:2 36:2>]
LOCAL_SYMBOL: b2Math.h<36:2> [b2Math.h <39:2 39:2>]
LOCAL_SYMBOL: b2Math.h<381:1> [b2Math.h <381:1 381:1>]
LOCAL_SYMBOL: b2Math.h<381:1> [b2Math.h <400:1 400:1>]
LOCAL_SYMBOL: b2Math.h<384:33> [b2Math.h <384:33 384:35>]
LOCAL_SYMBOL: b2Math.h<384:46> [b2Math.h <384:46 384:49>]
LOCAL_SYMBOL: b2Math.h<388:23> [b2Math.h <388:23 388:27>]
LOCAL_SYMBOL: b2Math.h<39:4> [b2Math.h <39:4 39:10>]
LOCAL_SYMBOL: b2Math.h<39:4> [b2Math.h <41:2 41:8>]
LOCAL_SYMBOL: b2Math.h<39:4> [b2Math.h <43:2 43:8>]
LOCAL_SYMBOL: b2Math.h<39:4> [b2Math.h <43:28 43:34>]
LOCAL_SYMBOL: b2Math.h<39:4> [b2Math.h <44:6 44:12>]
LOCAL_SYMBOL: b2Math.h<406:36> [b2Math.h <406:36 406:36>]
LOCAL_SYMBOL: b2Math.h<406:36> [b2Math.h <408:9 408:9>]
LOCAL_SYMBOL: b2Math.h<406:36> [b2Math.h <408:21 408:21>]
LOCAL_SYMBOL: b2Math.h<406:53> [b2Math.h <406:53 406:53>]
LOCAL_SYMBOL: b2Math.h<406:53> [b2Math.h <408:15 408:15>]
LOCAL_SYMBOL: b2Math.h<406:53> [b2Math.h <408:27 408:27>]
LOCAL_SYMBOL: b2Math.h<407:1> [b2Math.h <407:1 407:1>]
LOCAL_SYMBOL: b2Math.h<407:1> [b2Math.h <409:1 409:1>]
LOCAL_SYMBOL: b2Math.h<412:38> [b2Math.h <412:38 412:38>]
LOCAL_SYMBOL: b2Math.h<412:38> [b2Math.h <414:9 414:9>]
LOCAL_SYMBOL: b2Math.h<412:38> [b2Math.h <414:21 414:21>]
LOCAL_SYMBOL: b2Math.h<412:55> [b2Math.h <412:55 412:55>]
LOCAL_SYMBOL: b2Math.h<412:55> [b2Math.h <414:15 414:15>]
LOCAL_SYMBOL: b2Math.h<412:55> [b2Math.h <414:27 414:27>]
LOCAL_SYMBOL: b2Math.h<413:1> [b2Math.h <413:1 413:1>]
LOCAL_SYMBOL: b2Math.h<413:1> [b2Math.h <415:1 415:1>]
LOCAL_SYMBOL: b2Math.h<419:37> [b2Math.h <419:37 419:37>]
LOCAL_SYMBOL: b2Math.h<419:37> [b2Math.h <421:20 421:20>]
LOCAL_SYMBOL: b2Math.h<419:37> [b2Math.h <421:30 421:30>]
LOCAL_SYMBOL: b2Math.h<419:48> [b2Math.h <419:48 419:48>]
LOCAL_SYMBOL: b2Math.h<419:48> [b2Math.h <421:16 421:16>]
LOCAL_SYMBOL: b2Math.h<419:48> [b2Math.h <421:26 421:26>]
LOCAL_SYMBOL: b2Math.h<420:1> [b2Math.h <420:1 420:1>]
LOCAL_SYMBOL: b2Math.h<420:1> [b2Math.h <422:1 422:1>]
LOCAL_SYMBOL: b2Math.h<426:31> [b2Math.h <426:31 426:31>]
LOCAL_SYMBOL: b2Math.h<426:31> [b2Math.h <428:17 428:17>]
LOCAL_SYMBOL: b2Math.h<426:31> [b2Math.h <428:26 428:26>]
LOCAL_SYMBOL: b2Math.h<426:48> [b2Math.h <426:48 426:48>]
LOCAL_SYMBOL: b2Math.h<426:48> [b2Math.h <428:21 428:21>]
LOCAL_SYMBOL: b2Math.h<426:48> [b2Math.h <428:30 428:30>]
LOCAL_SYMBOL: b2Math.h<427:1> [b2Math.h <427:1 427:1>]
LOCAL_SYMBOL: b2Math.h<427:1> [b2Math.h <429:1 429:1>]
LOCAL_SYMBOL: b2Math.h<42:10> [b2Math.h <42:10 42:14>]
LOCAL_SYMBOL: b2Math.h<42:10> [b2Math.h <45:18 45:22>]
LOCAL_SYMBOL: b2Math.h<433:36> [b2Math.h <433:36 433:36>]
LOCAL_SYMBOL: b2Math.h<433:36> [b2Math.h <435:16 435:16>]
LOCAL_SYMBOL: b2Math.h<433:36> [b2Math.h <435:31 435:31>]
LOCAL_SYMBOL: b2Math.h<433:36> [b2Math.h <435:45 435:45>]
LOCAL_SYMBOL: b2Math.h<433:36> [b2Math.h <435:60 435:60>]
LOCAL_SYMBOL: b2Math.h<433:53> [b2Math.h <433:53 433:53>]
LOCAL_SYMBOL: b2Math.h<433:53> [b2Math.h <435:25 435:25>]
LOCAL_SYMBOL: b2Math.h<433:53> [b2Math.h <435:40 435:40>]
LOCAL_SYMBOL: b2Math.h<433:53> [b2Math.h <435:54 435:54>]
LOCAL_SYMBOL: b2Math.h<433:53> [b2Math.h <435:69 435:69>]
LOCAL_SYMBOL: b2Math.h<434:1> [b2Math.h <434:1 434:1>]
LOCAL_SYMBOL: b2Math.h<434:1> [b2Math.h <436:1 436:1>]
LOCAL_SYMBOL: b2Math.h<440:37> [b2Math.h <440:37 440:37>]
LOCAL_SYMBOL: b2Math.h<440:37> [b2Math.h <442:25 442:25>]
LOCAL_SYMBOL: b2Math.h<440:37> [b2Math.h <442:41 442:41>]
LOCAL_SYMBOL: b2Math.h<440:54> [b2Math.h <440:54 440:54>]
LOCAL_SYMBOL: b2Math.h<440:54> [b2Math.h <442:22 442:22>]
LOCAL_SYMBOL: b2Math.h<440:54> [b2Math.h <442:38 442:38>]
LOCAL_SYMBOL: b2Math.h<441:1> [b2Math.h <441:1 441:1>]
LOCAL_SYMBOL: b2Math.h<441:1> [b2Math.h <443:1 443:1>]
LOCAL_SYMBOL: b2Math.h<446:41> [b2Math.h <446:41 446:41>]
LOCAL_SYMBOL: b2Math.h<446:41> [b2Math.h <448:16 448:16>]
LOCAL_SYMBOL: b2Math.h<446:41> [b2Math.h <448:27 448:27>]
LOCAL_SYMBOL: b2Math.h<446:58> [b2Math.h <446:58 446:58>]
LOCAL_SYMBOL: b2Math.h<446:58> [b2Math.h <448:22 448:22>]
LOCAL_SYMBOL: b2Math.h<446:58> [b2Math.h <448:33 448:33>]
LOCAL_SYMBOL: b2Math.h<447:1> [b2Math.h <447:1 447:1>]
LOCAL_SYMBOL: b2Math.h<447:1> [b2Math.h <449:1 449:1>]
LOCAL_SYMBOL: b2Math.h<452:41> [b2Math.h <452:41 452:41>]
LOCAL_SYMBOL: b2Math.h<452:41> [b2Math.h <454:16 454:16>]
LOCAL_SYMBOL: b2Math.h<452:41> [b2Math.h <454:27 454:27>]
LOCAL_SYMBOL: b2Math.h<452:58> [b2Math.h <452:58 452:58>]
LOCAL_SYMBOL: b2Math.h<452:58> [b2Math.h <454:22 454:22>]
LOCAL_SYMBOL: b2Math.h<452:58> [b2Math.h <454:33 454:33>]
LOCAL_SYMBOL: b2Math.h<453:1> [b2Math.h <453:1 453:1>]
LOCAL_SYMBOL: b2Math.h<453:1> [b2Math.h <455:1 455:1>]
LOCAL_SYMBOL: b2Math.h<457:35> [b2Math.h <457:35 457:35>]
LOCAL_SYMBOL: b2Math.h<457:35> [b2Math.h <459:16 459:16>]
LOCAL_SYMBOL: b2Math.h<457:35> [b2Math.h <459:25 459:25>]
LOCAL_SYMBOL: b2Math.h<457:52> [b2Math.h <457:52 457:52>]
LOCAL_SYMBOL: b2Math.h<457:52> [b2Math.h <459:20 459:20>]
LOCAL_SYMBOL: b2Math.h<457:52> [b2Math.h <459:29 459:29>]
LOCAL_SYMBOL: b2Math.h<458:1> [b2Math.h <458:1 458:1>]
LOCAL_SYMBOL: b2Math.h<458:1> [b2Math.h <460:1 460:1>]
LOCAL_SYMBOL: b2Math.h<462:40> [b2Math.h <462:40 462:40>]
LOCAL_SYMBOL: b2Math.h<462:40> [b2Math.h <464:9 464:9>]
LOCAL_SYMBOL: b2Math.h<462:40> [b2Math.h <464:23 464:23>]
LOCAL_SYMBOL: b2Math.h<462:57> [b2Math.h <462:57 462:57>]
LOCAL_SYMBOL: b2Math.h<462:57> [b2Math.h <464:16 464:16>]
LOCAL_SYMBOL: b2Math.h<462:57> [b2Math.h <464:30 464:30>]
LOCAL_SYMBOL: b2Math.h<463:1> [b2Math.h <463:1 463:1>]
LOCAL_SYMBOL: b2Math.h<463:1> [b2Math.h <465:1 465:1>]
LOCAL_SYMBOL: b2Math.h<467:40> [b2Math.h <467:40 467:40>]
LOCAL_SYMBOL: b2Math.h<467:40> [b2Math.h <469:9 469:9>]
LOCAL_SYMBOL: b2Math.h<467:40> [b2Math.h <469:23 469:23>]
LOCAL_SYMBOL: b2Math.h<467:57> [b2Math.h <467:57 467:57>]
LOCAL_SYMBOL: b2Math.h<467:57> [b2Math.h <469:16 469:16>]
LOCAL_SYMBOL: b2Math.h<467:57> [b2Math.h <469:30 469:30>]
LOCAL_SYMBOL: b2Math.h<468:1> [b2Math.h <468:1 468:1>]
LOCAL_SYMBOL: b2Math.h<468:1> [b2Math.h <470:1 470:1>]
LOCAL_SYMBOL: b2Math.h<472:41> [b2Math.h <472:41 472:41>]
LOCAL_SYMBOL: b2Math.h<472:41> [b2Math.h <474:13 474:13>]
LOCAL_SYMBOL: b2Math.h<472:58> [b2Math.h <472:58 472:58>]
LOCAL_SYMBOL: b2Math.h<472:58> [b2Math.h <474:17 474:17>]
LOCAL_SYMBOL: b2Math.h<473:1> [b2Math.h <473:1 473:1>]
LOCAL_SYMBOL: b2Math.h<473:1> [b2Math.h <476:1 476:1>]
LOCAL_SYMBOL: b2Math.h<474:9> [b2Math.h <474:9 474:9>]
LOCAL_SYMBOL: b2Math.h<474:9> [b2Math.h <475:9 475:9>]
LOCAL_SYMBOL: b2Math.h<478:48> [b2Math.h <478:48 478:48>]
LOCAL_SYMBOL: b2Math.h<478:48> [b2Math.h <480:13 480:13>]
LOCAL_SYMBOL: b2Math.h<478:65> [b2Math.h <478:65 478:65>]
LOCAL_SYMBOL: b2Math.h<478:65> [b2Math.h <480:17 480:17>]
LOCAL_SYMBOL: b2Math.h<479:1> [b2Math.h <479:1 479:1>]
LOCAL_SYMBOL: b2Math.h<479:1> [b2Math.h <482:1 482:1>]
LOCAL_SYMBOL: b2Math.h<480:9> [b2Math.h <480:9 480:9>]
LOCAL_SYMBOL: b2Math.h<480:9> [b2Math.h <481:15 481:15>]
LOCAL_SYMBOL: b2Math.h<480:9> [b2Math.h <481:18 481:18>]
LOCAL_SYMBOL: b2Math.h<484:35> [b2Math.h <484:35 484:35>]
LOCAL_SYMBOL: b2Math.h<484:35> [b2Math.h <486:16 486:16>]
LOCAL_SYMBOL: b2Math.h<484:35> [b2Math.h <486:25 486:25>]
LOCAL_SYMBOL: b2Math.h<484:35> [b2Math.h <486:34 486:34>]
LOCAL_SYMBOL: b2Math.h<484:52> [b2Math.h <484:52 484:52>]
LOCAL_SYMBOL: b2Math.h<484:52> [b2Math.h <486:20 486:20>]
LOCAL_SYMBOL: b2Math.h<484:52> [b2Math.h <486:29 486:29>]
LOCAL_SYMBOL: b2Math.h<484:52> [b2Math.h <486:38 486:38>]
LOCAL_SYMBOL: b2Math.h<485:1> [b2Math.h <485:1 485:1>]
LOCAL_SYMBOL: b2Math.h<485:1> [b2Math.h <487:1 487:1>]
LOCAL_SYMBOL: b2Math.h<490:41> [b2Math.h <490:41 490:41>]
LOCAL_SYMBOL: b2Math.h<490:41> [b2Math.h <492:16 492:16>]
LOCAL_SYMBOL: b2Math.h<490:41> [b2Math.h <492:27 492:27>]
LOCAL_SYMBOL: b2Math.h<490:41> [b2Math.h <492:38 492:38>]
LOCAL_SYMBOL: b2Math.h<490:58> [b2Math.h <490:58 490:58>]
LOCAL_SYMBOL: b2Math.h<490:58> [b2Math.h <492:22 492:22>]
LOCAL_SYMBOL: b2Math.h<490:58> [b2Math.h <492:33 492:33>]
LOCAL_SYMBOL: b2Math.h<490:58> [b2Math.h <492:44 492:44>]
LOCAL_SYMBOL: b2Math.h<491:1> [b2Math.h <491:1 491:1>]
LOCAL_SYMBOL: b2Math.h<491:1> [b2Math.h <493:1 493:1>]
LOCAL_SYMBOL: b2Math.h<496:41> [b2Math.h <496:41 496:41>]
LOCAL_SYMBOL: b2Math.h<496:41> [b2Math.h <498:16 498:16>]
LOCAL_SYMBOL: b2Math.h<496:41> [b2Math.h <498:27 498:27>]
LOCAL_SYMBOL: b2Math.h<496:41> [b2Math.h <498:38 498:38>]
LOCAL_SYMBOL: b2Math.h<496:58> [b2Math.h <496:58 496:58>]
LOCAL_SYMBOL: b2Math.h<496:58> [b2Math.h <498:22 498:22>]
LOCAL_SYMBOL: b2Math.h<496:58> [b2Math.h <498:33 498:33>]
LOCAL_SYMBOL: b2Math.h<496:58> [b2Math.h <498:44 498:44>]
LOCAL_SYMBOL: b2Math.h<497:1> [b2Math.h <497:1 497:1>]
LOCAL_SYMBOL: b2Math.h<497:1> [b2Math.h <499:1 499:1>]
LOCAL_SYMBOL: b2Math.h<502:36> [b2Math.h <502:36 502:36>]
LOCAL_SYMBOL: b2Math.h<502:36> [b2Math.h <504:9 504:9>]
LOCAL_SYMBOL: b2Math.h<502:36> [b2Math.h <504:21 504:21>]
LOCAL_SYMBOL: b2Math.h<502:36> [b2Math.h <504:33 504:33>]
LOCAL_SYMBOL: b2Math.h<502:53> [b2Math.h <502:53 502:53>]
LOCAL_SYMBOL: b2Math.h<502:53> [b2Math.h <504:15 504:15>]
LOCAL_SYMBOL: b2Math.h<502:53> [b2Math.h <504:27 504:27>]
LOCAL_SYMBOL: b2Math.h<502:53> [b2Math.h <504:39 504:39>]
LOCAL_SYMBOL: b2Math.h<503:1> [b2Math.h <503:1 503:1>]
LOCAL_SYMBOL: b2Math.h<503:1> [b2Math.h <505:1 505:1>]
LOCAL_SYMBOL: b2Math.h<508:37> [b2Math.h <508:37 508:37>]
LOCAL_SYMBOL: b2Math.h<508:37> [b2Math.h <510:16 510:16>]
LOCAL_SYMBOL: b2Math.h<508:37> [b2Math.h <510:28 510:28>]
LOCAL_SYMBOL: b2Math.h<508:37> [b2Math.h <510:39 510:39>]
LOCAL_SYMBOL: b2Math.h<508:37> [b2Math.h <510:51 510:51>]
LOCAL_SYMBOL: b2Math.h<508:37> [b2Math.h <510:62 510:62>]
LOCAL_SYMBOL: b2Math.h<508:37> [b2Math.h <510:74 510:74>]
LOCAL_SYMBOL: b2Math.h<508:54> [b2Math.h <508:54 508:54>]
LOCAL_SYMBOL: b2Math.h<508:54> [b2Math.h <510:22 510:22>]
LOCAL_SYMBOL: b2Math.h<508:54> [b2Math.h <510:34 510:34>]
LOCAL_SYMBOL: b2Math.h<508:54> [b2Math.h <510:45 510:45>]
LOCAL_SYMBOL: b2Math.h<508:54> [b2Math.h <510:57 510:57>]
LOCAL_SYMBOL: b2Math.h<508:54> [b2Math.h <510:68 510:68>]
LOCAL_SYMBOL: b2Math.h<508:54> [b2Math.h <510:80 510:80>]
LOCAL_SYMBOL: b2Math.h<509:1> [b2Math.h <509:1 509:1>]
LOCAL_SYMBOL: b2Math.h<509:1> [b2Math.h <511:1 511:1>]
LOCAL_SYMBOL: b2Math.h<513:43> [b2Math.h <513:43 513:43>]
LOCAL_SYMBOL: b2Math.h<513:43> [b2Math.h <515:17 515:17>]
LOCAL_SYMBOL: b2Math.h<513:43> [b2Math.h <515:30 515:30>]
LOCAL_SYMBOL: b2Math.h<513:61> [b2Math.h <513:61 513:61>]
LOCAL_SYMBOL: b2Math.h<513:61> [b2Math.h <515:24 515:24>]
LOCAL_SYMBOL: b2Math.h<513:61> [b2Math.h <515:37 515:37>]
LOCAL_SYMBOL: b2Math.h<514:1> [b2Math.h <514:1 514:1>]
LOCAL_SYMBOL: b2Math.h<514:1> [b2Math.h <516:1 516:1>]
LOCAL_SYMBOL: b2Math.h<519:37> [b2Math.h <519:37 519:37>]
LOCAL_SYMBOL: b2Math.h<519:37> [b2Math.h <521:23 521:23>]
LOCAL_SYMBOL: b2Math.h<519:37> [b2Math.h <521:39 521:39>]
LOCAL_SYMBOL: b2Math.h<519:55> [b2Math.h <519:55 519:55>]
LOCAL_SYMBOL: b2Math.h<519:55> [b2Math.h <521:26 521:26>]
LOCAL_SYMBOL: b2Math.h<519:55> [b2Math.h <521:42 521:42>]
LOCAL_SYMBOL: b2Math.h<520:1> [b2Math.h <520:1 520:1>]
LOCAL_SYMBOL: b2Math.h<520:1> [b2Math.h <522:1 522:1>]
LOCAL_SYMBOL: b2Math.h<525:38> [b2Math.h <525:38 525:38>]
LOCAL_SYMBOL: b2Math.h<525:38> [b2Math.h <527:18 527:18>]
LOCAL_SYMBOL: b2Math.h<525:38> [b2Math.h <527:37 527:37>]
LOCAL_SYMBOL: b2Math.h<525:38> [b2Math.h <528:18 528:18>]
LOCAL_SYMBOL: b2Math.h<525:38> [b2Math.h <528:37 528:37>]
LOCAL_SYMBOL: b2Math.h<525:56> [b2Math.h <525:56 525:56>]
LOCAL_SYMBOL: b2Math.h<525:56> [b2Math.h <527:24 527:24>]
LOCAL_SYMBOL: b2Math.h<525:56> [b2Math.h <527:43 527:43>]
LOCAL_SYMBOL: b2Math.h<525:56> [b2Math.h <528:24 528:24>]
LOCAL_SYMBOL: b2Math.h<525:56> [b2Math.h <528:43 528:43>]
LOCAL_SYMBOL: b2Math.h<526:1> [b2Math.h <526:1 526:1>]
LOCAL_SYMBOL: b2Math.h<526:1> [b2Math.h <530:1 530:1>]
LOCAL_SYMBOL: b2Math.h<527:9> [b2Math.h <527:9 527:10>]
LOCAL_SYMBOL: b2Math.h<527:9> [b2Math.h <529:17 529:18>]
LOCAL_SYMBOL: b2Math.h<528:9> [b2Math.h <528:9 528:10>]
LOCAL_SYMBOL: b2Math.h<528:9> [b2Math.h <529:21 529:22>]
LOCAL_SYMBOL: b2Math.h<533:36> [b2Math.h <533:36 533:36>]
LOCAL_SYMBOL: b2Math.h<533:36> [b2Math.h <535:15 535:15>]
LOCAL_SYMBOL: b2Math.h<533:36> [b2Math.h <535:28 535:28>]
LOCAL_SYMBOL: b2Math.h<533:36> [b2Math.h <535:41 535:41>]
LOCAL_SYMBOL: b2Math.h<533:53> [b2Math.h <533:53 533:53>]
LOCAL_SYMBOL: b2Math.h<533:53> [b2Math.h <535:9 535:9>]
LOCAL_SYMBOL: b2Math.h<533:53> [b2Math.h <535:22 535:22>]
LOCAL_SYMBOL: b2Math.h<533:53> [b2Math.h <535:35 535:35>]
LOCAL_SYMBOL: b2Math.h<534:1> [b2Math.h <534:1 534:1>]
LOCAL_SYMBOL: b2Math.h<534:1> [b2Math.h <536:1 536:1>]
LOCAL_SYMBOL: b2Math.h<539:38> [b2Math.h <539:38 539:38>]
LOCAL_SYMBOL: b2Math.h<539:38> [b2Math.h <541:16 541:16>]
LOCAL_SYMBOL: b2Math.h<539:38> [b2Math.h <541:31 541:31>]
LOCAL_SYMBOL: b2Math.h<539:38> [b2Math.h <541:45 541:45>]
LOCAL_SYMBOL: b2Math.h<539:38> [b2Math.h <541:60 541:60>]
LOCAL_SYMBOL: b2Math.h<539:55> [b2Math.h <539:55 539:55>]
LOCAL_SYMBOL: b2Math.h<539:55> [b2Math.h <541:25 541:25>]
LOCAL_SYMBOL: b2Math.h<539:55> [b2Math.h <541:40 541:40>]
LOCAL_SYMBOL: b2Math.h<539:55> [b2Math.h <541:54 541:54>]
LOCAL_SYMBOL: b2Math.h<539:55> [b2Math.h <541:69 541:69>]
LOCAL_SYMBOL: b2Math.h<53:8> [b2Math.h <53:8 53:13>]
LOCAL_SYMBOL: b2Math.h<540:1> [b2Math.h <540:1 540:1>]
LOCAL_SYMBOL: b2Math.h<540:1> [b2Math.h <542:1 542:1>]
LOCAL_SYMBOL: b2Math.h<545:33> [b2Math.h <545:33 545:33>]
LOCAL_SYMBOL: b2Math.h<545:33> [b2Math.h <552:9 552:9>]
LOCAL_SYMBOL: b2Math.h<545:33> [b2Math.h <552:21 552:21>]
LOCAL_SYMBOL: b2Math.h<545:33> [b2Math.h <553:9 553:9>]
LOCAL_SYMBOL: b2Math.h<545:33> [b2Math.h <553:21 553:21>]
LOCAL_SYMBOL: b2Math.h<545:49> [b2Math.h <545:49 545:49>]
LOCAL_SYMBOL: b2Math.h<545:49> [b2Math.h <552:15 552:15>]
LOCAL_SYMBOL: b2Math.h<545:49> [b2Math.h <552:27 552:27>]
LOCAL_SYMBOL: b2Math.h<545:49> [b2Math.h <553:15 553:15>]
LOCAL_SYMBOL: b2Math.h<545:49> [b2Math.h <553:27 553:27>]
LOCAL_SYMBOL: b2Math.h<546:1> [b2Math.h <546:1 546:1>]
LOCAL_SYMBOL: b2Math.h<546:1> [b2Math.h <555:1 555:1>]
LOCAL_SYMBOL: b2Math.h<54:1> [b2Math.h <54:1 54:1>]
LOCAL_SYMBOL: b2Math.h<54:1> [b2Math.h <141:1 141:1>]
LOCAL_SYMBOL: b2Math.h<551:8> [b2Math.h <551:8 551:9>]
LOCAL_SYMBOL: b2Math.h<551:8> [b2Math.h <552:2 552:3>]
LOCAL_SYMBOL: b2Math.h<551:8> [b2Math.h <553:2 553:3>]
LOCAL_SYMBOL: b2Math.h<551:8> [b2Math.h <554:9 554:10>]
LOCAL_SYMBOL: b2Math.h<558:34> [b2Math.h <558:34 558:34>]
LOCAL_SYMBOL: b2Math.h<558:34> [b2Math.h <565:9 565:9>]
LOCAL_SYMBOL: b2Math.h<558:34> [b2Math.h <565:21 565:21>]
LOCAL_SYMBOL: b2Math.h<558:34> [b2Math.h <566:9 566:9>]
LOCAL_SYMBOL: b2Math.h<558:34> [b2Math.h <566:21 566:21>]
LOCAL_SYMBOL: b2Math.h<558:50> [b2Math.h <558:50 558:50>]
LOCAL_SYMBOL: b2Math.h<558:50> [b2Math.h <565:15 565:15>]
LOCAL_SYMBOL: b2Math.h<558:50> [b2Math.h <565:27 565:27>]
LOCAL_SYMBOL: b2Math.h<558:50> [b2Math.h <566:15 566:15>]
LOCAL_SYMBOL: b2Math.h<558:50> [b2Math.h <566:27 566:27>]
LOCAL_SYMBOL: b2Math.h<559:1> [b2Math.h <559:1 559:1>]
LOCAL_SYMBOL: b2Math.h<559:1> [b2Math.h <568:1 568:1>]
LOCAL_SYMBOL: b2Math.h<564:8> [b2Math.h <564:8 564:9>]
LOCAL_SYMBOL: b2Math.h<564:8> [b2Math.h <565:2 565:3>]
LOCAL_SYMBOL: b2Math.h<564:8> [b2Math.h <566:2 566:3>]
LOCAL_SYMBOL: b2Math.h<564:8> [b2Math.h <567:9 567:10>]
LOCAL_SYMBOL: b2Math.h<56:11> [b2Math.h <56:11 56:11>]
LOCAL_SYMBOL: b2Math.h<56:11> [b2Math.h <56:12 56:12>]
LOCAL_SYMBOL: b2Math.h<571:34> [b2Math.h <571:34 571:34>]
LOCAL_SYMBOL: b2Math.h<571:34> [b2Math.h <573:16 573:16>]
LOCAL_SYMBOL: b2Math.h<571:34> [b2Math.h <573:28 573:28>]
LOCAL_SYMBOL: b2Math.h<571:34> [b2Math.h <573:39 573:39>]
LOCAL_SYMBOL: b2Math.h<571:34> [b2Math.h <573:51 573:51>]
LOCAL_SYMBOL: b2Math.h<571:51> [b2Math.h <571:51 571:51>]
LOCAL_SYMBOL: b2Math.h<571:51> [b2Math.h <573:22 573:22>]
LOCAL_SYMBOL: b2Math.h<571:51> [b2Math.h <573:34 573:34>]
LOCAL_SYMBOL: b2Math.h<571:51> [b2Math.h <573:45 573:45>]
LOCAL_SYMBOL: b2Math.h<571:51> [b2Math.h <573:57 573:57>]
LOCAL_SYMBOL: b2Math.h<572:1> [b2Math.h <572:1 572:1>]
LOCAL_SYMBOL: b2Math.h<572:1> [b2Math.h <574:1 574:1>]
LOCAL_SYMBOL: b2Math.h<577:35> [b2Math.h <577:35 577:35>]
LOCAL_SYMBOL: b2Math.h<577:35> [b2Math.h <579:16 579:16>]
LOCAL_SYMBOL: b2Math.h<577:35> [b2Math.h <579:28 579:28>]
LOCAL_SYMBOL: b2Math.h<577:35> [b2Math.h <579:40 579:40>]
LOCAL_SYMBOL: b2Math.h<577:35> [b2Math.h <579:52 579:52>]
LOCAL_SYMBOL: b2Math.h<577:52> [b2Math.h <577:52 577:52>]
LOCAL_SYMBOL: b2Math.h<577:52> [b2Math.h <579:22 579:22>]
LOCAL_SYMBOL: b2Math.h<577:52> [b2Math.h <579:34 579:34>]
LOCAL_SYMBOL: b2Math.h<577:52> [b2Math.h <579:46 579:46>]
LOCAL_SYMBOL: b2Math.h<577:52> [b2Math.h <579:58 579:58>]
LOCAL_SYMBOL: b2Math.h<578:1> [b2Math.h <578:1 578:1>]
LOCAL_SYMBOL: b2Math.h<578:1> [b2Math.h <580:1 580:1>]
LOCAL_SYMBOL: b2Math.h<582:40> [b2Math.h <582:40 582:40>]
LOCAL_SYMBOL: b2Math.h<582:40> [b2Math.h <584:15 584:15>]
LOCAL_SYMBOL: b2Math.h<582:40> [b2Math.h <584:29 584:29>]
LOCAL_SYMBOL: b2Math.h<582:40> [b2Math.h <584:44 584:44>]
LOCAL_SYMBOL: b2Math.h<582:40> [b2Math.h <585:15 585:15>]
LOCAL_SYMBOL: b2Math.h<582:40> [b2Math.h <585:29 585:29>]
LOCAL_SYMBOL: b2Math.h<582:40> [b2Math.h <585:44 585:44>]
LOCAL_SYMBOL: b2Math.h<582:57> [b2Math.h <582:57 582:57>]
LOCAL_SYMBOL: b2Math.h<582:57> [b2Math.h <584:23 584:23>]
LOCAL_SYMBOL: b2Math.h<582:57> [b2Math.h <584:37 584:37>]
LOCAL_SYMBOL: b2Math.h<582:57> [b2Math.h <585:23 585:23>]
LOCAL_SYMBOL: b2Math.h<582:57> [b2Math.h <585:37 585:37>]
LOCAL_SYMBOL: b2Math.h<583:1> [b2Math.h <583:1 583:1>]
LOCAL_SYMBOL: b2Math.h<583:1> [b2Math.h <588:1 588:1>]
LOCAL_SYMBOL: b2Math.h<584:10> [b2Math.h <584:10 584:10>]
LOCAL_SYMBOL: b2Math.h<584:10> [b2Math.h <587:16 587:16>]
LOCAL_SYMBOL: b2Math.h<585:10> [b2Math.h <585:10 585:10>]
LOCAL_SYMBOL: b2Math.h<585:10> [b2Math.h <587:19 587:19>]
LOCAL_SYMBOL: b2Math.h<590:41> [b2Math.h <590:41 590:41>]
LOCAL_SYMBOL: b2Math.h<590:41> [b2Math.h <592:21 592:21>]
LOCAL_SYMBOL: b2Math.h<590:41> [b2Math.h <593:21 593:21>]
LOCAL_SYMBOL: b2Math.h<590:41> [b2Math.h <594:15 594:15>]
LOCAL_SYMBOL: b2Math.h<590:41> [b2Math.h <594:28 594:28>]
LOCAL_SYMBOL: b2Math.h<590:41> [b2Math.h <595:16 595:16>]
LOCAL_SYMBOL: b2Math.h<590:41> [b2Math.h <595:29 595:29>]
LOCAL_SYMBOL: b2Math.h<590:58> [b2Math.h <590:58 590:58>]
LOCAL_SYMBOL: b2Math.h<590:58> [b2Math.h <592:15 592:15>]
LOCAL_SYMBOL: b2Math.h<590:58> [b2Math.h <593:15 593:15>]
LOCAL_SYMBOL: b2Math.h<591:1> [b2Math.h <591:1 591:1>]
LOCAL_SYMBOL: b2Math.h<591:1> [b2Math.h <598:1 598:1>]
LOCAL_SYMBOL: b2Math.h<592:10> [b2Math.h <592:10 592:11>]
LOCAL_SYMBOL: b2Math.h<592:10> [b2Math.h <594:23 594:24>]
LOCAL_SYMBOL: b2Math.h<592:10> [b2Math.h <595:24 595:25>]
LOCAL_SYMBOL: b2Math.h<593:10> [b2Math.h <593:10 593:11>]
LOCAL_SYMBOL: b2Math.h<593:10> [b2Math.h <594:36 594:37>]
LOCAL_SYMBOL: b2Math.h<593:10> [b2Math.h <595:37 595:38>]
LOCAL_SYMBOL: b2Math.h<594:10> [b2Math.h <594:10 594:10>]
LOCAL_SYMBOL: b2Math.h<594:10> [b2Math.h <597:16 597:16>]
LOCAL_SYMBOL: b2Math.h<595:10> [b2Math.h <595:10 595:10>]
LOCAL_SYMBOL: b2Math.h<595:10> [b2Math.h <597:19 597:19>]
LOCAL_SYMBOL: b2Math.h<59:17> [b2Math.h <59:17 59:19>]
LOCAL_SYMBOL: b2Math.h<59:17> [b2Math.h <59:39 59:41>]
LOCAL_SYMBOL: b2Math.h<59:30> [b2Math.h <59:30 59:32>]
LOCAL_SYMBOL: b2Math.h<59:30> [b2Math.h <59:47 59:49>]
LOCAL_SYMBOL: b2Math.h<59:52> [b2Math.h <59:52 59:52>]
LOCAL_SYMBOL: b2Math.h<59:52> [b2Math.h <59:53 59:53>]
LOCAL_SYMBOL: b2Math.h<602:45> [b2Math.h <602:45 602:45>]
LOCAL_SYMBOL: b2Math.h<602:45> [b2Math.h <605:14 605:14>]
LOCAL_SYMBOL: b2Math.h<602:45> [b2Math.h <606:14 606:14>]
LOCAL_SYMBOL: b2Math.h<602:45> [b2Math.h <606:26 606:26>]
LOCAL_SYMBOL: b2Math.h<602:67> [b2Math.h <602:67 602:67>]
LOCAL_SYMBOL: b2Math.h<602:67> [b2Math.h <605:19 605:19>]
LOCAL_SYMBOL: b2Math.h<602:67> [b2Math.h <606:19 606:19>]
LOCAL_SYMBOL: b2Math.h<603:1> [b2Math.h <603:1 603:1>]
LOCAL_SYMBOL: b2Math.h<603:1> [b2Math.h <608:1 608:1>]
LOCAL_SYMBOL: b2Math.h<604:14> [b2Math.h <604:14 604:14>]
LOCAL_SYMBOL: b2Math.h<604:14> [b2Math.h <605:2 605:2>]
LOCAL_SYMBOL: b2Math.h<604:14> [b2Math.h <606:2 606:2>]
LOCAL_SYMBOL: b2Math.h<604:14> [b2Math.h <607:9 607:9>]
LOCAL_SYMBOL: b2Math.h<612:46> [b2Math.h <612:46 612:46>]
LOCAL_SYMBOL: b2Math.h<612:46> [b2Math.h <615:15 615:15>]
LOCAL_SYMBOL: b2Math.h<612:46> [b2Math.h <616:15 616:15>]
LOCAL_SYMBOL: b2Math.h<612:46> [b2Math.h <616:26 616:26>]
LOCAL_SYMBOL: b2Math.h<612:68> [b2Math.h <612:68 612:68>]
LOCAL_SYMBOL: b2Math.h<612:68> [b2Math.h <615:20 615:20>]
LOCAL_SYMBOL: b2Math.h<612:68> [b2Math.h <616:20 616:20>]
LOCAL_SYMBOL: b2Math.h<613:1> [b2Math.h <613:1 613:1>]
LOCAL_SYMBOL: b2Math.h<613:1> [b2Math.h <618:1 618:1>]
LOCAL_SYMBOL: b2Math.h<614:14> [b2Math.h <614:14 614:14>]
LOCAL_SYMBOL: b2Math.h<614:14> [b2Math.h <615:2 615:2>]
LOCAL_SYMBOL: b2Math.h<614:14> [b2Math.h <616:2 616:2>]
LOCAL_SYMBOL: b2Math.h<614:14> [b2Math.h <617:9 617:9>]
LOCAL_SYMBOL: b2Math.h<621:18> [b2Math.h <621:18 621:18>]
LOCAL_SYMBOL: b2Math.h<621:18> [b2Math.h <623:9 623:9>]
LOCAL_SYMBOL: b2Math.h<621:18> [b2Math.h <623:20 623:20>]
LOCAL_SYMBOL: b2Math.h<621:18> [b2Math.h <623:25 623:25>]
LOCAL_SYMBOL: b2Math.h<622:1> [b2Math.h <622:1 622:1>]
LOCAL_SYMBOL: b2Math.h<622:1> [b2Math.h <624:1 624:1>]
LOCAL_SYMBOL: b2Math.h<626:35> [b2Math.h <626:35 626:35>]
LOCAL_SYMBOL: b2Math.h<626:35> [b2Math.h <628:22 628:22>]
LOCAL_SYMBOL: b2Math.h<626:35> [b2Math.h <628:34 628:34>]
LOCAL_SYMBOL: b2Math.h<627:1> [b2Math.h <627:1 627:1>]
LOCAL_SYMBOL: b2Math.h<627:1> [b2Math.h <629:1 629:1>]
LOCAL_SYMBOL: b2Math.h<62:17> [b2Math.h <62:17 62:17>]
LOCAL_SYMBOL: b2Math.h<62:17> [b2Math.h <62:39 62:39>]
LOCAL_SYMBOL: b2Math.h<631:37> [b2Math.h <631:37 631:37>]
LOCAL_SYMBOL: b2Math.h<631:37> [b2Math.h <633:23 633:23>]
LOCAL_SYMBOL: b2Math.h<631:37> [b2Math.h <633:36 633:36>]
LOCAL_SYMBOL: b2Math.h<632:1> [b2Math.h <632:1 632:1>]
LOCAL_SYMBOL: b2Math.h<632:1> [b2Math.h <634:1 634:1>]
LOCAL_SYMBOL: b2Math.h<637:18> [b2Math.h <637:18 637:18>]
LOCAL_SYMBOL: b2Math.h<637:18> [b2Math.h <639:9 639:9>]
LOCAL_SYMBOL: b2Math.h<637:18> [b2Math.h <639:17 639:17>]
LOCAL_SYMBOL: b2Math.h<637:23> [b2Math.h <637:23 637:23>]
LOCAL_SYMBOL: b2Math.h<637:23> [b2Math.h <639:13 639:13>]
LOCAL_SYMBOL: b2Math.h<637:23> [b2Math.h <639:21 639:21>]
LOCAL_SYMBOL: b2Math.h<638:1> [b2Math.h <638:1 638:1>]
LOCAL_SYMBOL: b2Math.h<638:1> [b2Math.h <640:1 640:1>]
LOCAL_SYMBOL: b2Math.h<642:35> [b2Math.h <642:35 642:35>]
LOCAL_SYMBOL: b2Math.h<642:35> [b2Math.h <644:22 644:22>]
LOCAL_SYMBOL: b2Math.h<642:35> [b2Math.h <644:39 644:39>]
LOCAL_SYMBOL: b2Math.h<642:52> [b2Math.h <642:52 642:52>]
LOCAL_SYMBOL: b2Math.h<642:52> [b2Math.h <644:27 644:27>]
LOCAL_SYMBOL: b2Math.h<642:52> [b2Math.h <644:44 644:44>]
LOCAL_SYMBOL: b2Math.h<643:1> [b2Math.h <643:1 643:1>]
LOCAL_SYMBOL: b2Math.h<643:1> [b2Math.h <645:1 645:1>]
LOCAL_SYMBOL: b2Math.h<648:18> [b2Math.h <648:18 648:18>]
LOCAL_SYMBOL: b2Math.h<648:18> [b2Math.h <650:9 650:9>]
LOCAL_SYMBOL: b2Math.h<648:18> [b2Math.h <650:17 650:17>]
LOCAL_SYMBOL: b2Math.h<648:23> [b2Math.h <648:23 648:23>]
LOCAL_SYMBOL: b2Math.h<648:23> [b2Math.h <650:13 650:13>]
LOCAL_SYMBOL: b2Math.h<648:23> [b2Math.h <650:21 650:21>]
LOCAL_SYMBOL: b2Math.h<649:1> [b2Math.h <649:1 649:1>]
LOCAL_SYMBOL: b2Math.h<649:1> [b2Math.h <651:1 651:1>]
LOCAL_SYMBOL: b2Math.h<653:35> [b2Math.h <653:35 653:35>]
LOCAL_SYMBOL: b2Math.h<653:35> [b2Math.h <655:22 655:22>]
LOCAL_SYMBOL: b2Math.h<653:35> [b2Math.h <655:39 655:39>]
LOCAL_SYMBOL: b2Math.h<653:52> [b2Math.h <653:52 653:52>]
LOCAL_SYMBOL: b2Math.h<653:52> [b2Math.h <655:27 655:27>]
LOCAL_SYMBOL: b2Math.h<653:52> [b2Math.h <655:44 655:44>]
LOCAL_SYMBOL: b2Math.h<654:1> [b2Math.h <654:1 654:1>]
LOCAL_SYMBOL: b2Math.h<654:1> [b2Math.h <656:1 656:1>]
LOCAL_SYMBOL: b2Math.h<659:20> [b2Math.h <659:20 659:20>]
LOCAL_SYMBOL: b2Math.h<659:20> [b2Math.h <661:26 661:26>]
LOCAL_SYMBOL: b2Math.h<659:25> [b2Math.h <659:25 659:27>]
LOCAL_SYMBOL: b2Math.h<659:25> [b2Math.h <661:15 661:17>]
LOCAL_SYMBOL: b2Math.h<659:32> [b2Math.h <659:32 659:35>]
LOCAL_SYMBOL: b2Math.h<659:32> [b2Math.h <661:29 661:32>]
LOCAL_SYMBOL: b2Math.h<65:19> [b2Math.h <65:19 65:20>]
LOCAL_SYMBOL: b2Math.h<65:19> [b2Math.h <65:41 65:42>]
LOCAL_SYMBOL: b2Math.h<65:31> [b2Math.h <65:31 65:32>]
LOCAL_SYMBOL: b2Math.h<65:31> [b2Math.h <65:49 65:50>]
LOCAL_SYMBOL: b2Math.h<65:35> [b2Math.h <65:35 65:35>]
LOCAL_SYMBOL: b2Math.h<65:35> [b2Math.h <65:53 65:53>]
LOCAL_SYMBOL: b2Math.h<660:1> [b2Math.h <660:1 660:1>]
LOCAL_SYMBOL: b2Math.h<660:1> [b2Math.h <662:1 662:1>]
LOCAL_SYMBOL: b2Math.h<664:37> [b2Math.h <664:37 664:37>]
LOCAL_SYMBOL: b2Math.h<664:37> [b2Math.h <666:26 666:26>]
LOCAL_SYMBOL: b2Math.h<664:54> [b2Math.h <664:54 664:56>]
LOCAL_SYMBOL: b2Math.h<664:54> [b2Math.h <666:15 666:17>]
LOCAL_SYMBOL: b2Math.h<664:73> [b2Math.h <664:73 664:76>]
LOCAL_SYMBOL: b2Math.h<664:73> [b2Math.h <666:29 666:32>]
LOCAL_SYMBOL: b2Math.h<665:1> [b2Math.h <665:1 665:1>]
LOCAL_SYMBOL: b2Math.h<665:1> [b2Math.h <667:1 667:1>]
LOCAL_SYMBOL: b2Math.h<669:44> [b2Math.h <669:44 669:44>]
LOCAL_SYMBOL: b2Math.h<669:44> [b2Math.h <671:10 671:10>]
LOCAL_SYMBOL: b2Math.h<669:44> [b2Math.h <672:2 672:2>]
LOCAL_SYMBOL: b2Math.h<669:50> [b2Math.h <669:50 669:50>]
LOCAL_SYMBOL: b2Math.h<669:50> [b2Math.h <672:6 672:6>]
LOCAL_SYMBOL: b2Math.h<669:50> [b2Math.h <673:2 673:2>]
LOCAL_SYMBOL: b2Math.h<670:1> [b2Math.h <670:1 670:1>]
LOCAL_SYMBOL: b2Math.h<670:1> [b2Math.h <674:1 674:1>]
LOCAL_SYMBOL: b2Math.h<671:4> [b2Math.h <671:4 671:6>]
LOCAL_SYMBOL: b2Math.h<671:4> [b2Math.h <673:6 673:8>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <681:39 681:39>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <683:2 683:2>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <683:8 683:8>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <684:2 684:2>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <684:8 684:8>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <685:2 685:2>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <685:8 685:8>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <686:2 686:2>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <686:8 686:8>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <687:2 687:2>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <687:8 687:8>]
LOCAL_SYMBOL: b2Math.h<681:39> [b2Math.h <688:9 688:9>]
LOCAL_SYMBOL: b2Math.h<682:1> [b2Math.h <682:1 682:1>]
LOCAL_SYMBOL: b2Math.h<682:1> [b2Math.h <689:1 689:1>]
LOCAL_SYMBOL: b2Math.h<68:28> [b2Math.h <68:28 68:28>]
LOCAL_SYMBOL: b2Math.h<68:28> [b2Math.h <68:65 68:65>]
LOCAL_SYMBOL: b2Math.h<68:37> [b2Math.h <68:37 68:37>]
LOCAL_SYMBOL: b2Math.h<68:37> [b2Math.h <68:40 68:40>]
LOCAL_SYMBOL: b2Math.h<68:37> [b2Math.h <68:62 68:62>]
LOCAL_SYMBOL: b2Math.h<691:35> [b2Math.h <691:35 691:35>]
LOCAL_SYMBOL: b2Math.h<691:35> [b2Math.h <693:16 693:16>]
LOCAL_SYMBOL: b2Math.h<691:35> [b2Math.h <693:26 693:26>]
LOCAL_SYMBOL: b2Math.h<691:35> [b2Math.h <693:31 693:31>]
LOCAL_SYMBOL: b2Math.h<692:1> [b2Math.h <692:1 692:1>]
LOCAL_SYMBOL: b2Math.h<692:1> [b2Math.h <695:1 695:1>]
LOCAL_SYMBOL: b2Math.h<693:7> [b2Math.h <693:7 693:12>]
LOCAL_SYMBOL: b2Math.h<693:7> [b2Math.h <694:9 694:14>]
LOCAL_SYMBOL: b2Math.h<697:48> [b2Math.h <697:48 697:49>]
LOCAL_SYMBOL: b2Math.h<697:48> [b2Math.h <699:2 699:3>]
LOCAL_SYMBOL: b2Math.h<697:48> [b2Math.h <701:2 701:3>]
LOCAL_SYMBOL: b2Math.h<697:48> [b2Math.h <704:2 704:3>]
LOCAL_SYMBOL: b2Math.h<697:48> [b2Math.h <704:17 704:18>]
LOCAL_SYMBOL: b2Math.h<697:60> [b2Math.h <697:60 697:63>]
LOCAL_SYMBOL: b2Math.h<697:60> [b2Math.h <699:18 699:21>]
LOCAL_SYMBOL: b2Math.h<697:60> [b2Math.h <699:31 699:34>]
LOCAL_SYMBOL: b2Math.h<697:60> [b2Math.h <700:26 700:29>]
LOCAL_SYMBOL: b2Math.h<697:60> [b2Math.h <700:39 700:42>]
LOCAL_SYMBOL: b2Math.h<698:1> [b2Math.h <698:1 698:1>]
LOCAL_SYMBOL: b2Math.h<698:1> [b2Math.h <705:1 705:1>]
LOCAL_SYMBOL: b2Math.h<700:10> [b2Math.h <700:10 700:14>]
LOCAL_SYMBOL: b2Math.h<700:10> [b2Math.h <701:12 701:16>]
LOCAL_SYMBOL: b2Math.h<707:38> [b2Math.h <707:38 707:42>]
LOCAL_SYMBOL: b2Math.h<707:38> [b2Math.h <710:18 710:22>]
LOCAL_SYMBOL: b2Math.h<707:38> [b2Math.h <713:11 713:15>]
LOCAL_SYMBOL: b2Math.h<708:1> [b2Math.h <708:1 708:1>]
LOCAL_SYMBOL: b2Math.h<708:1> [b2Math.h <714:1 714:1>]
LOCAL_SYMBOL: b2Math.h<710:10> [b2Math.h <710:10 710:13>]
LOCAL_SYMBOL: b2Math.h<710:10> [b2Math.h <711:8 711:11>]
LOCAL_SYMBOL: b2Math.h<710:10> [b2Math.h <712:8 712:11>]
LOCAL_SYMBOL: b2Math.h<718:1> [b2Math.h <718:1 718:1>]
LOCAL_SYMBOL: b2Math.h<718:1> [b2Math.h <723:1 723:1>]
LOCAL_SYMBOL: b2Math.h<719:10> [b2Math.h <719:10 719:14>]
LOCAL_SYMBOL: b2Math.h<719:10> [b2Math.h <720:15 720:19>]
LOCAL_SYMBOL: b2Math.h<719:10> [b2Math.h <720:35 720:39>]
LOCAL_SYMBOL: b2Math.h<71:29> [b2Math.h <71:29 71:29>]
LOCAL_SYMBOL: b2Math.h<71:29> [b2Math.h <73:15 73:15>]
LOCAL_SYMBOL: b2Math.h<720:10> [b2Math.h <720:10 720:10>]
LOCAL_SYMBOL: b2Math.h<720:10> [b2Math.h <721:8 721:8>]
LOCAL_SYMBOL: b2Math.h<720:10> [b2Math.h <722:7 722:7>]
LOCAL_SYMBOL: b2Math.h<72:2> [b2Math.h <72:2 72:2>]
LOCAL_SYMBOL: b2Math.h<72:2> [b2Math.h <74:2 74:2>]
LOCAL_SYMBOL: b2Math.h<77:30> [b2Math.h <77:30 77:30>]
LOCAL_SYMBOL: b2Math.h<77:30> [b2Math.h <79:15 79:15>]
LOCAL_SYMBOL: b2Math.h<78:2> [b2Math.h <78:2 78:2>]
LOCAL_SYMBOL: b2Math.h<78:2> [b2Math.h <80:2 80:2>]
LOCAL_SYMBOL: b2Math.h<83:34> [b2Math.h <83:34 83:34>]
LOCAL_SYMBOL: b2Math.h<83:34> [b2Math.h <85:8 85:8>]
LOCAL_SYMBOL: b2Math.h<83:34> [b2Math.h <85:18 85:18>]
LOCAL_SYMBOL: b2Math.h<84:2> [b2Math.h <84:2 84:2>]
LOCAL_SYMBOL: b2Math.h<84:2> [b2Math.h <86:2 86:2>]
LOCAL_SYMBOL: b2Math.h<89:34> [b2Math.h <89:34 89:34>]
LOCAL_SYMBOL: b2Math.h<89:34> [b2Math.h <91:8 91:8>]
LOCAL_SYMBOL: b2Math.h<89:34> [b2Math.h <91:18 91:18>]
LOCAL_SYMBOL: b2Math.h<90:2> [b2Math.h <90:2 90:2>]
LOCAL_SYMBOL: b2Math.h<90:2> [b2Math.h <92:2 92:2>]
LOCAL_SYMBOL: b2Math.h<95:28> [b2Math.h <95:28 95:28>]
LOCAL_SYMBOL: b2Math.h<95:28> [b2Math.h <97:8 97:8>]
LOCAL_SYMBOL: b2Math.h<95:28> [b2Math.h <97:16 97:16>]
LOCAL_SYMBOL: b2Math.h<96:2> [b2Math.h <96:2 96:2>]
LOCAL_SYMBOL: b2Math.h<96:2> [b2Math.h <98:2 98:2>]
LOCAL_SYMBOL: b2Settings.h<135:21> [b2Settings.h <135:21 135:24>]
LOCAL_SYMBOL: b2Settings.h<138:19> [b2Settings.h <138:19 138:21>]
LOCAL_SYMBOL: b2Settings.h<141:24> [b2Settings.h <141:24 141:29>]
LOCAL_SYMBOL: b2Settings.h<146:1> [b2Settings.h <146:1 146:1>]
LOCAL_SYMBOL: b2Settings.h<146:1> [b2Settings.h <150:1 150:1>]
COMMENT: comment [b2Math.cpp <1:1 17:3>]
COMMENT: comment [b2Math.cpp <23:1 23:72>]
COMMENT: comment [b2Math.cpp <24:1 24:50>]
COMMENT: comment [b2Math.cpp <39:1 39:72>]
COMMENT: comment [b2Math.cpp <40:1 40:50>]
COMMENT: comment [b2Math.cpp <55:1 55:4>]
COMMENT: comment [b2Math.cpp <70:1 70:41>]
COMMENT: comment [b2Math.h <1:1 17:3>]
COMMENT: comment [b2Math.h <25:1 25:91>]
COMMENT: comment [b2Math.h <32:1 32:56>]
COMMENT: comment [b2Math.h <52:1 52:24>]
COMMENT: comment [b2Math.h <55:2 55:57>]
COMMENT: comment [b2Math.h <58:2 58:34>]
COMMENT: comment [b2Math.h <61:2 61:35>]
COMMENT: comment [b2Math.h <64:2 64:52>]
COMMENT: comment [b2Math.h <67:2 67:25>]
COMMENT: comment [b2Math.h <70:2 70:36>]
COMMENT: comment [b2Math.h <76:2 76:34>]
COMMENT: comment [b2Math.h <82:2 82:34>]
COMMENT: comment [b2Math.h <88:2 88:41>]
COMMENT: comment [b2Math.h <94:2 94:39>]
COMMENT: comment [b2Math.h <100:2 100:47>]
COMMENT: comment [b2Math.h <106:2 106:66>]
COMMENT: comment [b2Math.h <107:2 107:35>]
COMMENT: comment [b2Math.h <113:2 113:65>]
COMMENT: comment [b2Math.h <128:2 128:50>]
COMMENT: comment [b2Math.h <134:2 134:77>]
COMMENT: comment [b2Math.h <143:1 143:40>]
COMMENT: comment [b2Math.h <146:2 146:57>]
COMMENT: comment [b2Math.h <149:2 149:34>]
COMMENT: comment [b2Math.h <152:2 152:35>]
COMMENT: comment [b2Math.h <155:2 155:52>]
COMMENT: comment [b2Math.h <158:2 158:25>]
COMMENT: comment [b2Math.h <161:2 161:34>]
COMMENT: comment [b2Math.h <167:2 167:41>]
COMMENT: comment [b2Math.h <173:2 173:39>]
COMMENT: comment [b2Math.h <182:1 182:51>]
COMMENT: comment [b2Math.h <185:2 185:61>]
COMMENT: comment [b2Math.h <188:2 188:42>]
COMMENT: comment [b2Math.h <195:2 195:42>]
COMMENT: comment [b2Math.h <202:2 202:43>]
COMMENT: comment [b2Math.h <209:2 209:38>]
COMMENT: comment [b2Math.h <216:2 216:35>]
COMMENT: comment [b2Math.h <237:2 237:73>]
COMMENT: comment [b2Math.h <238:2 238:51>]
COMMENT: comment [b2Math.h <256:1 256:51>]
COMMENT: comment [b2Math.h <259:2 259:61>]
COMMENT: comment [b2Math.h <262:2 262:42>]
COMMENT: comment [b2Math.h <270:2 270:35>]
COMMENT: comment [b2Math.h <278:2 278:73>]
COMMENT: comment [b2Math.h <279:2 279:51>]
COMMENT: comment [b2Math.h <282:2 282:73>]
COMMENT: comment [b2Math.h <283:2 283:72>]
COMMENT: comment [b2Math.h <284:2 284:29>]
COMMENT: comment [b2Math.h <287:2 287:49>]
COMMENT: comment [b2Math.h <288:2 288:42>]
COMMENT: comment [b2Math.h <291:2 291:59>]
COMMENT: comment [b2Math.h <292:2 292:42>]
COMMENT: comment [b2Math.h <298:1 298:13>]
COMMENT: comment [b2Math.h <303:2 303:41>]
COMMENT: comment [b2Math.h <306:3 306:25>]
COMMENT: comment [b2Math.h <311:2 311:36>]
COMMENT: comment [b2Math.h <314:3 314:25>]
COMMENT: comment [b2Math.h <319:2 319:34>]
COMMENT: comment [b2Math.h <326:2 326:30>]
COMMENT: comment [b2Math.h <332:2 332:20>]
COMMENT: comment [b2Math.h <338:2 338:20>]
COMMENT: comment [b2Math.h <344:2 344:21>]
COMMENT: comment [b2Math.h <348:1 348:75>]
COMMENT: comment [b2Math.h <349:1 349:50>]
COMMENT: comment [b2Math.h <352:2 352:43>]
COMMENT: comment [b2Math.h <355:2 355:56>]
COMMENT: comment [b2Math.h <358:2 358:41>]
COMMENT: comment [b2Math.h <365:2 365:47>]
COMMENT: comment [b2Math.h <376:1 376:67>]
COMMENT: comment [b2Math.h <377:1 377:66>]
COMMENT: comment [b2Math.h <378:1 378:70>]
COMMENT: comment [b2Math.h <379:1 379:53>]
COMMENT: comment [b2Math.h <382:2 382:56>]
COMMENT: comment [b2Math.h <383:2 383:65>]
COMMENT: comment [b2Math.h <386:2 386:62>]
COMMENT: comment [b2Math.h <387:2 387:40>]
COMMENT: comment [b2Math.h <390:2 390:27>]
COMMENT: comment [b2Math.h <393:22 393:56>]
COMMENT: comment [b2Math.h <394:17 394:44>]
COMMENT: comment [b2Math.h <395:18 395:35>]
COMMENT: comment [b2Math.h <397:2 397:58>]
COMMENT: comment [b2Math.h <398:2 398:44>]
COMMENT: comment [b2Math.h <402:1 402:20>]
COMMENT: comment [b2Math.h <405:1 405:44>]
COMMENT: comment [b2Math.h <411:1 411:76>]
COMMENT: comment [b2Math.h <417:1 417:76>]
COMMENT: comment [b2Math.h <418:1 418:14>]
COMMENT: comment [b2Math.h <424:1 424:76>]
COMMENT: comment [b2Math.h <425:1 425:14>]
COMMENT: comment [b2Math.h <431:1 431:72>]
COMMENT: comment [b2Math.h <432:1 432:63>]
COMMENT: comment [b2Math.h <438:1 438:82>]
COMMENT: comment [b2Math.h <439:1 439:83>]
COMMENT: comment [b2Math.h <445:1 445:36>]
COMMENT: comment [b2Math.h <451:1 451:41>]
COMMENT: comment [b2Math.h <489:1 489:36>]
COMMENT: comment [b2Math.h <495:1 495:41>]
COMMENT: comment [b2Math.h <501:1 501:44>]
COMMENT: comment [b2Math.h <507:1 507:46>]
COMMENT: comment [b2Math.h <518:1 518:9>]
COMMENT: comment [b2Math.h <524:1 524:11>]
COMMENT: comment [b2Math.h <532:1 532:38>]
COMMENT: comment [b2Math.h <538:1 538:38>]
COMMENT: comment [b2Math.h <544:1 544:34>]
COMMENT: comment [b2Math.h <547:2 547:53>]
COMMENT: comment [b2Math.h <548:2 548:53>]
COMMENT: comment [b2Math.h <549:2 549:26>]
COMMENT: comment [b2Math.h <550:2 550:26>]
COMMENT: comment [b2Math.h <557:1 557:45>]
COMMENT: comment [b2Math.h <560:2 560:53>]
COMMENT: comment [b2Math.h <561:2 561:53>]
COMMENT: comment [b2Math.h <562:2 562:26>]
COMMENT: comment [b2Math.h <563:2 563:26>]
COMMENT: comment [b2Math.h <570:1 570:20>]
COMMENT: comment [b2Math.h <576:1 576:28>]
COMMENT: comment [b2Math.h <600:1 600:41>]
COMMENT: comment [b2Math.h <601:1 601:49>]
COMMENT: comment [b2Math.h <610:1 610:38>]
COMMENT: comment [b2Math.h <611:1 611:45>]
COMMENT: comment [b2Math.h <676:1 676:29>]
COMMENT: comment [b2Math.h <677:1 677:100>]
COMMENT: comment [b2Math.h <678:1 678:103>]
COMMENT: comment [b2Math.h <679:1 679:99>]
COMMENT: comment [b2Math.h <680:1 680:45>]
COMMENT: comment [b2Math.h <703:2 703:20>]
COMMENT: comment [b2Math.h <716:1 716:59>]
COMMENT: comment [b2Settings.h <1:1 17:3>]
COMMENT: comment [b2Settings.h <46:1 46:10>]
COMMENT: comment [b2Settings.h <47:1 47:75>]
COMMENT: comment [b2Settings.h <48:1 48:4>]
COMMENT: comment [b2Settings.h <50:1 50:13>]
COMMENT: comment [b2Settings.h <52:1 52:71>]
COMMENT: comment [b2Settings.h <53:1 53:27>]
COMMENT: comment [b2Settings.h <56:1 56:76>]
COMMENT: comment [b2Settings.h <57:1 57:70>]
COMMENT: comment [b2Settings.h <60:1 60:74>]
COMMENT: comment [b2Settings.h <61:1 61:68>]
COMMENT: comment [b2Settings.h <62:1 62:23>]
COMMENT: comment [b2Settings.h <65:1 65:78>]
COMMENT: comment [b2Settings.h <66:1 66:59>]
COMMENT: comment [b2Settings.h <67:1 67:40>]
COMMENT: comment [b2Settings.h <70:1 70:79>]
COMMENT: comment [b2Settings.h <71:1 71:70>]
COMMENT: comment [b2Settings.h <74:1 74:78>]
COMMENT: comment [b2Settings.h <75:1 75:70>]
COMMENT: comment [b2Settings.h <78:1 78:83>]
COMMENT: comment [b2Settings.h <79:1 79:91>]
COMMENT: comment [b2Settings.h <80:1 80:64>]
COMMENT: comment [b2Settings.h <83:1 83:78>]
COMMENT: comment [b2Settings.h <87:1 87:12>]
COMMENT: comment [b2Settings.h <89:1 89:68>]
COMMENT: comment [b2Settings.h <92:1 92:86>]
COMMENT: comment [b2Settings.h <93:1 93:64>]
COMMENT: comment [b2Settings.h <96:1 96:88>]
COMMENT: comment [b2Settings.h <97:1 97:23>]
COMMENT: comment [b2Settings.h <100:1 100:89>]
COMMENT: comment [b2Settings.h <101:1 101:23>]
COMMENT: comment [b2Settings.h <104:1 104:80>]
COMMENT: comment [b2Settings.h <105:1 105:70>]
COMMENT: comment [b2Settings.h <109:1 109:81>]
COMMENT: comment [b2Settings.h <110:1 110:70>]
COMMENT: comment [b2Settings.h <114:1 114:88>]
COMMENT: comment [b2Settings.h <115:1 115:89>]
COMMENT: comment [b2Settings.h <116:1 116:18>]
COMMENT: comment [b2Settings.h <121:1 121:9>]
COMMENT: comment [b2Settings.h <123:1 123:67>]
COMMENT: comment [b2Settings.h <126:1 126:72>]
COMMENT: comment [b2Settings.h <129:1 129:73>]
COMMENT: comment [b2Settings.h <132:1 132:21>]
COMMENT: comment [b2Settings.h <134:1 134:62>]
COMMENT: comment [b2Settings.h <137:1 137:71>]
COMMENT: comment [b2Settings.h <140:1 140:22>]
COMMENT: comment [b2Settings.h <143:1 143:30>]
COMMENT: comment [b2Settings.h <144:1 144:57>]
COMMENT: comment [b2Settings.h <147:16 147:40>]
COMMENT: comment [b2Settings.h <148:16 148:40>]
COMMENT: comment [b2Settings.h <149:19 149:33>]
COMMENT: comment [b2Settings.h <152:1 152:21>]
