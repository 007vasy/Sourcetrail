FILE: b2ChainAndPolygonContact.cpp
COMMENT: comment [b2ChainAndPolygonContact.cpp <1:1 17:3>]
REFERENCE_MACRO_USAGE b2ChainAndPolygonContact.cpp -> b2Assert [b2ChainAndPolygonContact.cpp <42:2 42:9>]
REFERENCE_MACRO_USAGE b2Settings.h -> assert [b2Settings.h <31:21 31:26>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:23 34:31>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:47 34:55>]
REFERENCE_MACRO_USAGE assert.h -> __FILE__ [assert.h <34:57 34:64>]
REFERENCE_MACRO_USAGE assert.h -> __LINE__ [assert.h <34:79 34:86>]
REFERENCE_MACRO_USAGE b2ChainAndPolygonContact.cpp -> b2Assert [b2ChainAndPolygonContact.cpp <43:2 43:9>]
SYMBOL_METHOD public static b2Contact * b2ChainAndPolygonContact::Create(b2Fixture *, int32, b2Fixture *, int32, b2BlockAllocator *) [b2ChainAndPolygonContact.cpp <27:1 <27:38 27:43> 31:1>]
SYMBOL_CLASS b2ChainAndPolygonContact
QUALIFIER: b2ChainAndPolygonContact [b2ChainAndPolygonContact.cpp <27:12 27:35>]
REFERENCE_TYPE_USAGE static b2Contact * b2ChainAndPolygonContact::Create(b2Fixture *, int32, b2Fixture *, int32, b2BlockAllocator *) -> b2Contact [b2ChainAndPolygonContact.cpp <27:1 27:9>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<27:56> [b2ChainAndPolygonContact.cpp <27:56 27:63>]
REFERENCE_TYPE_USAGE static b2Contact * b2ChainAndPolygonContact::Create(b2Fixture *, int32, b2Fixture *, int32, b2BlockAllocator *) -> b2Fixture [b2ChainAndPolygonContact.cpp <27:45 27:53>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<27:72> [b2ChainAndPolygonContact.cpp <27:72 27:77>]
REFERENCE_TYPE_USAGE static b2Contact * b2ChainAndPolygonContact::Create(b2Fixture *, int32, b2Fixture *, int32, b2BlockAllocator *) -> int32 [b2ChainAndPolygonContact.cpp <27:66 27:70>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<27:91> [b2ChainAndPolygonContact.cpp <27:91 27:98>]
REFERENCE_TYPE_USAGE static b2Contact * b2ChainAndPolygonContact::Create(b2Fixture *, int32, b2Fixture *, int32, b2BlockAllocator *) -> b2Fixture [b2ChainAndPolygonContact.cpp <27:80 27:88>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<27:107> [b2ChainAndPolygonContact.cpp <27:107 27:112>]
REFERENCE_TYPE_USAGE static b2Contact * b2ChainAndPolygonContact::Create(b2Fixture *, int32, b2Fixture *, int32, b2BlockAllocator *) -> int32 [b2ChainAndPolygonContact.cpp <27:101 27:105>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<27:133> [b2ChainAndPolygonContact.cpp <27:133 27:141>]
REFERENCE_TYPE_USAGE static b2Contact * b2ChainAndPolygonContact::Create(b2Fixture *, int32, b2Fixture *, int32, b2BlockAllocator *) -> b2BlockAllocator [b2ChainAndPolygonContact.cpp <27:115 27:130>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<29:8> [b2ChainAndPolygonContact.cpp <29:8 29:10>]
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE static b2Contact * b2ChainAndPolygonContact::Create(b2Fixture *, int32, b2Fixture *, int32, b2BlockAllocator *) -> void [b2ChainAndPolygonContact.cpp <29:2 29:5>]
SYMBOL_FUNCTION void * b2BlockAllocator::Allocate(int32)
REFERENCE_CALL static b2Contact * b2ChainAndPolygonContact::Create(b2Fixture *, int32, b2Fixture *, int32, b2BlockAllocator *) -> void * b2BlockAllocator::Allocate(int32) [b2ChainAndPolygonContact.cpp <29:25 29:32>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<27:133> [b2ChainAndPolygonContact.cpp <29:14 29:22>]
REFERENCE_TYPE_USAGE static b2Contact * b2ChainAndPolygonContact::Create(b2Fixture *, int32, b2Fixture *, int32, b2BlockAllocator *) -> b2ChainAndPolygonContact [b2ChainAndPolygonContact.cpp <29:41 29:64>]
REFERENCE_TYPE_USAGE static b2Contact * b2ChainAndPolygonContact::Create(b2Fixture *, int32, b2Fixture *, int32, b2BlockAllocator *) -> b2ChainAndPolygonContact [b2ChainAndPolygonContact.cpp <30:19 30:42>]
SYMBOL_FUNCTION void b2ChainAndPolygonContact::b2ChainAndPolygonContact(b2Fixture *, int32, b2Fixture *, int32)
REFERENCE_CALL static b2Contact * b2ChainAndPolygonContact::Create(b2Fixture *, int32, b2Fixture *, int32, b2BlockAllocator *) -> void b2ChainAndPolygonContact::b2ChainAndPolygonContact(b2Fixture *, int32, b2Fixture *, int32) [b2ChainAndPolygonContact.cpp <30:19 30:42>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<27:56> [b2ChainAndPolygonContact.cpp <30:44 30:51>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<27:72> [b2ChainAndPolygonContact.cpp <30:54 30:59>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<27:91> [b2ChainAndPolygonContact.cpp <30:62 30:69>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<27:107> [b2ChainAndPolygonContact.cpp <30:72 30:77>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<29:8> [b2ChainAndPolygonContact.cpp <30:14 30:16>]
SYMBOL_METHOD public static void b2ChainAndPolygonContact::Destroy(b2Contact *, b2BlockAllocator *) [b2ChainAndPolygonContact.cpp <33:1 <33:32 33:38> 37:1>]
QUALIFIER: b2ChainAndPolygonContact [b2ChainAndPolygonContact.cpp <33:6 33:29>]
REFERENCE_TYPE_USAGE static void b2ChainAndPolygonContact::Destroy(b2Contact *, b2BlockAllocator *) -> void [b2ChainAndPolygonContact.cpp <33:1 33:4>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<33:51> [b2ChainAndPolygonContact.cpp <33:51 33:57>]
REFERENCE_TYPE_USAGE static void b2ChainAndPolygonContact::Destroy(b2Contact *, b2BlockAllocator *) -> b2Contact [b2ChainAndPolygonContact.cpp <33:40 33:48>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<33:78> [b2ChainAndPolygonContact.cpp <33:78 33:86>]
REFERENCE_TYPE_USAGE static void b2ChainAndPolygonContact::Destroy(b2Contact *, b2BlockAllocator *) -> b2BlockAllocator [b2ChainAndPolygonContact.cpp <33:60 33:75>]
SYMBOL_FUNCTION void b2ChainAndPolygonContact::~b2ChainAndPolygonContact()
REFERENCE_CALL static void b2ChainAndPolygonContact::Destroy(b2Contact *, b2BlockAllocator *) -> void b2ChainAndPolygonContact::~b2ChainAndPolygonContact() [b2ChainAndPolygonContact.cpp <35:40 35:40>]
REFERENCE_TYPE_USAGE static void b2ChainAndPolygonContact::Destroy(b2Contact *, b2BlockAllocator *) -> b2ChainAndPolygonContact [b2ChainAndPolygonContact.cpp <35:4 35:27>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<33:51> [b2ChainAndPolygonContact.cpp <35:30 35:36>]
SYMBOL_FUNCTION void b2BlockAllocator::Free(void *, int32)
REFERENCE_CALL static void b2ChainAndPolygonContact::Destroy(b2Contact *, b2BlockAllocator *) -> void b2BlockAllocator::Free(void *, int32) [b2ChainAndPolygonContact.cpp <36:13 36:16>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<33:78> [b2ChainAndPolygonContact.cpp <36:2 36:10>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<33:51> [b2ChainAndPolygonContact.cpp <36:18 36:24>]
REFERENCE_TYPE_USAGE static void b2ChainAndPolygonContact::Destroy(b2Contact *, b2BlockAllocator *) -> b2ChainAndPolygonContact [b2ChainAndPolygonContact.cpp <36:34 36:57>]
SYMBOL_METHOD public void b2ChainAndPolygonContact::b2ChainAndPolygonContact(b2Fixture *, int32, b2Fixture *, int32) [b2ChainAndPolygonContact.cpp <39:1 <39:27 39:50> 44:1>]
QUALIFIER: b2ChainAndPolygonContact [b2ChainAndPolygonContact.cpp <39:1 39:24>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<39:63> [b2ChainAndPolygonContact.cpp <39:63 39:70>]
REFERENCE_TYPE_USAGE void b2ChainAndPolygonContact::b2ChainAndPolygonContact(b2Fixture *, int32, b2Fixture *, int32) -> b2Fixture [b2ChainAndPolygonContact.cpp <39:52 39:60>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<39:79> [b2ChainAndPolygonContact.cpp <39:79 39:84>]
REFERENCE_TYPE_USAGE void b2ChainAndPolygonContact::b2ChainAndPolygonContact(b2Fixture *, int32, b2Fixture *, int32) -> int32 [b2ChainAndPolygonContact.cpp <39:73 39:77>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<39:98> [b2ChainAndPolygonContact.cpp <39:98 39:105>]
REFERENCE_TYPE_USAGE void b2ChainAndPolygonContact::b2ChainAndPolygonContact(b2Fixture *, int32, b2Fixture *, int32) -> b2Fixture [b2ChainAndPolygonContact.cpp <39:87 39:95>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<39:114> [b2ChainAndPolygonContact.cpp <39:114 39:119>]
REFERENCE_TYPE_USAGE void b2ChainAndPolygonContact::b2ChainAndPolygonContact(b2Fixture *, int32, b2Fixture *, int32) -> int32 [b2ChainAndPolygonContact.cpp <39:108 39:112>]
REFERENCE_TYPE_USAGE void b2ChainAndPolygonContact::b2ChainAndPolygonContact(b2Fixture *, int32, b2Fixture *, int32) -> b2Contact [b2ChainAndPolygonContact.cpp <40:3 40:11>]
SYMBOL_FUNCTION void b2Contact::b2Contact(b2Fixture *, int32, b2Fixture *, int32)
REFERENCE_CALL void b2ChainAndPolygonContact::b2ChainAndPolygonContact(b2Fixture *, int32, b2Fixture *, int32) -> void b2Contact::b2Contact(b2Fixture *, int32, b2Fixture *, int32) [b2ChainAndPolygonContact.cpp <40:3 40:11>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<39:63> [b2ChainAndPolygonContact.cpp <40:13 40:20>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<39:79> [b2ChainAndPolygonContact.cpp <40:23 40:28>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<39:98> [b2ChainAndPolygonContact.cpp <40:31 40:38>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<39:114> [b2ChainAndPolygonContact.cpp <40:41 40:46>]
SYMBOL_FUNCTION b2Shape::Type b2Fixture::GetType() const
REFERENCE_CALL void b2ChainAndPolygonContact::b2ChainAndPolygonContact(b2Fixture *, int32, b2Fixture *, int32) -> b2Shape::Type b2Fixture::GetType() const [b2ChainAndPolygonContact.cpp <42:23 42:29>]
REFERENCE_USAGE void b2ChainAndPolygonContact::b2ChainAndPolygonContact(b2Fixture *, int32, b2Fixture *, int32) -> b2Fixture * b2Contact::m_fixtureA [b2ChainAndPolygonContact.cpp <42:11 42:20>]
REFERENCE_USAGE void b2ChainAndPolygonContact::b2ChainAndPolygonContact(b2Fixture *, int32, b2Fixture *, int32) -> b2Shape::Type::e_chain [b2ChainAndPolygonContact.cpp <42:45 42:51>]
SYMBOL_CLASS b2Shape
QUALIFIER: b2Shape [b2ChainAndPolygonContact.cpp <42:36 42:42>]
REFERENCE_CALL void b2ChainAndPolygonContact::b2ChainAndPolygonContact(b2Fixture *, int32, b2Fixture *, int32) -> b2Shape::Type b2Fixture::GetType() const [b2ChainAndPolygonContact.cpp <43:23 43:29>]
REFERENCE_USAGE void b2ChainAndPolygonContact::b2ChainAndPolygonContact(b2Fixture *, int32, b2Fixture *, int32) -> b2Fixture * b2Contact::m_fixtureB [b2ChainAndPolygonContact.cpp <43:11 43:20>]
REFERENCE_USAGE void b2ChainAndPolygonContact::b2ChainAndPolygonContact(b2Fixture *, int32, b2Fixture *, int32) -> b2Shape::Type::e_polygon [b2ChainAndPolygonContact.cpp <43:45 43:53>]
QUALIFIER: b2Shape [b2ChainAndPolygonContact.cpp <43:36 43:42>]
SYMBOL_METHOD public void b2ChainAndPolygonContact::Evaluate(b2Manifold *, const b2Transform &, const b2Transform &) [b2ChainAndPolygonContact.cpp <46:1 <46:32 46:39> 53:1>]
SYMBOL_FUNCTION void b2Contact::Evaluate(b2Manifold *, const b2Transform &, const b2Transform &)
REFERENCE_OVERRIDE void b2ChainAndPolygonContact::Evaluate(b2Manifold *, const b2Transform &, const b2Transform &) -> void b2Contact::Evaluate(b2Manifold *, const b2Transform &, const b2Transform &) [b2ChainAndPolygonContact.cpp <46:32 46:39>]
QUALIFIER: b2ChainAndPolygonContact [b2ChainAndPolygonContact.cpp <46:6 46:29>]
REFERENCE_TYPE_USAGE void b2ChainAndPolygonContact::Evaluate(b2Manifold *, const b2Transform &, const b2Transform &) -> void [b2ChainAndPolygonContact.cpp <46:1 46:4>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<46:53> [b2ChainAndPolygonContact.cpp <46:53 46:60>]
REFERENCE_TYPE_USAGE void b2ChainAndPolygonContact::Evaluate(b2Manifold *, const b2Transform &, const b2Transform &) -> b2Manifold [b2ChainAndPolygonContact.cpp <46:41 46:50>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<46:82> [b2ChainAndPolygonContact.cpp <46:82 46:84>]
REFERENCE_TYPE_USAGE void b2ChainAndPolygonContact::Evaluate(b2Manifold *, const b2Transform &, const b2Transform &) -> b2Transform [b2ChainAndPolygonContact.cpp <46:69 46:79>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<46:106> [b2ChainAndPolygonContact.cpp <46:106 46:108>]
REFERENCE_TYPE_USAGE void b2ChainAndPolygonContact::Evaluate(b2Manifold *, const b2Transform &, const b2Transform &) -> b2Transform [b2ChainAndPolygonContact.cpp <46:93 46:103>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<48:16> [b2ChainAndPolygonContact.cpp <48:16 48:20>]
REFERENCE_TYPE_USAGE void b2ChainAndPolygonContact::Evaluate(b2Manifold *, const b2Transform &, const b2Transform &) -> b2ChainShape [b2ChainAndPolygonContact.cpp <48:2 48:13>]
REFERENCE_TYPE_USAGE void b2ChainAndPolygonContact::Evaluate(b2Manifold *, const b2Transform &, const b2Transform &) -> b2ChainShape [b2ChainAndPolygonContact.cpp <48:25 48:36>]
SYMBOL_FUNCTION b2Shape * b2Fixture::GetShape()
REFERENCE_CALL void b2ChainAndPolygonContact::Evaluate(b2Manifold *, const b2Transform &, const b2Transform &) -> b2Shape * b2Fixture::GetShape() [b2ChainAndPolygonContact.cpp <48:51 48:58>]
REFERENCE_USAGE void b2ChainAndPolygonContact::Evaluate(b2Manifold *, const b2Transform &, const b2Transform &) -> b2Fixture * b2Contact::m_fixtureA [b2ChainAndPolygonContact.cpp <48:39 48:48>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<49:14> [b2ChainAndPolygonContact.cpp <49:14 49:17>]
REFERENCE_TYPE_USAGE void b2ChainAndPolygonContact::Evaluate(b2Manifold *, const b2Transform &, const b2Transform &) -> b2EdgeShape [b2ChainAndPolygonContact.cpp <49:2 49:12>]
SYMBOL_FUNCTION void b2EdgeShape::b2EdgeShape()
REFERENCE_CALL void b2ChainAndPolygonContact::Evaluate(b2Manifold *, const b2Transform &, const b2Transform &) -> void b2EdgeShape::b2EdgeShape() [b2ChainAndPolygonContact.cpp <49:14 49:17>]
SYMBOL_FUNCTION void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const
REFERENCE_CALL void b2ChainAndPolygonContact::Evaluate(b2Manifold *, const b2Transform &, const b2Transform &) -> void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const [b2ChainAndPolygonContact.cpp <50:9 50:20>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<48:16> [b2ChainAndPolygonContact.cpp <50:2 50:6>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<49:14> [b2ChainAndPolygonContact.cpp <50:23 50:26>]
REFERENCE_USAGE void b2ChainAndPolygonContact::Evaluate(b2Manifold *, const b2Transform &, const b2Transform &) -> int32 b2Contact::m_indexA [b2ChainAndPolygonContact.cpp <50:29 50:36>]
SYMBOL_FUNCTION void b2CollideEdgeAndPolygon(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &)
REFERENCE_CALL void b2ChainAndPolygonContact::Evaluate(b2Manifold *, const b2Transform &, const b2Transform &) -> void b2CollideEdgeAndPolygon(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2PolygonShape *, const b2Transform &) [b2ChainAndPolygonContact.cpp <51:2 51:24>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<46:53> [b2ChainAndPolygonContact.cpp <51:27 51:34>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<49:14> [b2ChainAndPolygonContact.cpp <51:38 51:41>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<46:82> [b2ChainAndPolygonContact.cpp <51:44 51:46>]
REFERENCE_TYPE_USAGE void b2ChainAndPolygonContact::Evaluate(b2Manifold *, const b2Transform &, const b2Transform &) -> b2PolygonShape [b2ChainAndPolygonContact.cpp <52:10 52:23>]
REFERENCE_CALL void b2ChainAndPolygonContact::Evaluate(b2Manifold *, const b2Transform &, const b2Transform &) -> b2Shape * b2Fixture::GetShape() [b2ChainAndPolygonContact.cpp <52:38 52:45>]
REFERENCE_USAGE void b2ChainAndPolygonContact::Evaluate(b2Manifold *, const b2Transform &, const b2Transform &) -> b2Fixture * b2Contact::m_fixtureB [b2ChainAndPolygonContact.cpp <52:26 52:35>]
LOCAL_SYMBOL: b2ChainAndPolygonContact.cpp<46:106> [b2ChainAndPolygonContact.cpp <52:50 52:52>]
