FILE: b2Body.cpp
COMMENT: comment [b2Body.cpp <1:1 17:3>]
REFERENCE_MACRO_USAGE b2Body.cpp -> b2Assert [b2Body.cpp <27:2 27:9>]
REFERENCE_MACRO_USAGE b2Settings.h -> assert [b2Settings.h <31:21 31:26>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:23 34:31>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:47 34:55>]
REFERENCE_MACRO_USAGE assert.h -> __FILE__ [assert.h <34:57 34:64>]
REFERENCE_MACRO_USAGE assert.h -> __LINE__ [assert.h <34:79 34:86>]
REFERENCE_MACRO_USAGE b2Body.cpp -> b2Assert [b2Body.cpp <28:2 28:9>]
REFERENCE_MACRO_USAGE b2Body.cpp -> b2Assert [b2Body.cpp <29:2 29:9>]
REFERENCE_MACRO_USAGE b2Body.cpp -> b2Assert [b2Body.cpp <30:2 30:9>]
REFERENCE_MACRO_USAGE b2Body.cpp -> b2Assert [b2Body.cpp <31:2 31:9>]
REFERENCE_MACRO_USAGE b2Body.cpp -> b2Assert [b2Body.cpp <32:2 32:9>]
COMMENT: comment [b2Body.cpp <110:2 110:56>]
REFERENCE_MACRO_USAGE b2Body.cpp -> b2Assert [b2Body.cpp <115:2 115:9>]
COMMENT: comment [b2Body.cpp <144:2 144:34>]
COMMENT: comment [b2Body.cpp <154:2 154:78>]
REFERENCE_MACRO_USAGE b2Body.cpp -> b2Assert [b2Body.cpp <168:2 168:9>]
COMMENT: comment [b2Body.cpp <192:2 192:38>]
COMMENT: comment [b2Body.cpp <198:2 198:75>]
COMMENT: comment [b2Body.cpp <199:2 199:58>]
REFERENCE_MACRO_USAGE b2Body.cpp -> NULL [b2Body.cpp <216:17 216:20>]
REFERENCE_MACRO_USAGE b2Body.cpp -> b2Assert [b2Body.cpp <221:2 221:9>]
REFERENCE_MACRO_USAGE b2Body.cpp -> b2Assert [b2Body.cpp <227:2 227:9>]
COMMENT: comment [b2Body.cpp <229:2 229:60>]
REFERENCE_MACRO_USAGE b2Body.cpp -> b2Assert [b2Body.cpp <230:2 230:9>]
COMMENT: comment [b2Body.cpp <245:2 245:67>]
REFERENCE_MACRO_USAGE b2Body.cpp -> b2Assert [b2Body.cpp <246:2 246:9>]
COMMENT: comment [b2Body.cpp <248:2 248:54>]
COMMENT: comment [b2Body.cpp <260:4 260:52>]
COMMENT: comment [b2Body.cpp <261:4 261:32>]
COMMENT: comment [b2Body.cpp <282:2 282:25>]
COMMENT: comment [b2Body.cpp <288:2 288:67>]
COMMENT: comment [b2Body.cpp <295:2 295:48>]
REFERENCE_MACRO_USAGE b2Body.cpp -> b2Assert [b2Body.cpp <304:2 304:9>]
COMMENT: comment [b2Body.cpp <306:2 306:39>]
COMMENT: comment [b2Body.cpp <322:2 322:28>]
COMMENT: comment [b2Body.cpp <330:3 330:55>]
COMMENT: comment [b2Body.cpp <337:3 337:50>]
REFERENCE_MACRO_USAGE b2Body.cpp -> b2Assert [b2Body.cpp <339:3 339:10>]
COMMENT: comment [b2Body.cpp <349:2 349:25>]
COMMENT: comment [b2Body.cpp <354:2 354:36>]
REFERENCE_MACRO_USAGE b2Body.cpp -> b2Assert [b2Body.cpp <360:2 360:9>]
REFERENCE_MACRO_USAGE b2Body.cpp -> b2Assert [b2Body.cpp <386:3 386:10>]
COMMENT: comment [b2Body.cpp <390:2 390:25>]
COMMENT: comment [b2Body.cpp <395:2 395:36>]
COMMENT: comment [b2Body.cpp <401:2 401:41>]
COMMENT: comment [b2Body.cpp <407:2 407:36>]
REFERENCE_MACRO_USAGE b2Body.cpp -> b2Assert [b2Body.cpp <424:2 424:9>]
REFERENCE_MACRO_USAGE b2Body.cpp -> b2Assert [b2Body.cpp <461:2 461:9>]
COMMENT: comment [b2Body.cpp <472:3 472:25>]
COMMENT: comment [b2Body.cpp <479:3 479:46>]
COMMENT: comment [b2Body.cpp <485:3 485:26>]
COMMENT: comment [b2Body.cpp <492:3 492:36>]
SYMBOL_METHOD private void b2Body::b2Body(const b2BodyDef *, b2World *) [b2Body.cpp <25:1 <25:9 25:14> 106:1>]
SYMBOL_CLASS b2Body
QUALIFIER: b2Body [b2Body.cpp <25:1 25:6>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <25:33 25:34>]
REFERENCE_TYPE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2BodyDef [b2Body.cpp <25:22 25:30>]
LOCAL_SYMBOL: b2Body.cpp<25:46> [b2Body.cpp <25:46 25:50>]
REFERENCE_TYPE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2World [b2Body.cpp <25:37 25:43>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Transform b2Body::m_xf [b2Body.cpp <25:9 25:14>]
SYMBOL_FUNCTION void b2Transform::b2Transform()
REFERENCE_CALL void b2Body::b2Body(const b2BodyDef *, b2World *) -> void b2Transform::b2Transform() [b2Body.cpp <25:9 25:14>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Sweep b2Body::m_sweep [b2Body.cpp <25:9 25:14>]
SYMBOL_FUNCTION void b2Sweep::b2Sweep()
REFERENCE_CALL void b2Body::b2Body(const b2BodyDef *, b2World *) -> void b2Sweep::b2Sweep() [b2Body.cpp <25:9 25:14>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Vec2 b2Body::m_linearVelocity [b2Body.cpp <25:9 25:14>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2Body::b2Body(const b2BodyDef *, b2World *) -> void b2Vec2::b2Vec2() [b2Body.cpp <25:9 25:14>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Vec2 b2Body::m_force [b2Body.cpp <25:9 25:14>]
SYMBOL_FUNCTION bool b2Vec2::IsValid() const
REFERENCE_CALL void b2Body::b2Body(const b2BodyDef *, b2World *) -> bool b2Vec2::IsValid() const [b2Body.cpp <27:24 27:30>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Vec2 b2BodyDef::position [b2Body.cpp <27:15 27:22>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <27:11 27:12>]
REFERENCE_CALL void b2Body::b2Body(const b2BodyDef *, b2World *) -> bool b2Vec2::IsValid() const [b2Body.cpp <28:30 28:36>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Vec2 b2BodyDef::linearVelocity [b2Body.cpp <28:15 28:28>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <28:11 28:12>]
SYMBOL_FUNCTION bool b2IsValid(float32)
REFERENCE_CALL void b2Body::b2Body(const b2BodyDef *, b2World *) -> bool b2IsValid(float32) [b2Body.cpp <29:11 29:19>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2BodyDef::angle [b2Body.cpp <29:25 29:29>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <29:21 29:22>]
REFERENCE_CALL void b2Body::b2Body(const b2BodyDef *, b2World *) -> bool b2IsValid(float32) [b2Body.cpp <30:11 30:19>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2BodyDef::angularVelocity [b2Body.cpp <30:25 30:39>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <30:21 30:22>]
REFERENCE_CALL void b2Body::b2Body(const b2BodyDef *, b2World *) -> bool b2IsValid(float32) [b2Body.cpp <31:11 31:19>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2BodyDef::angularDamping [b2Body.cpp <31:25 31:38>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <31:21 31:22>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2BodyDef::angularDamping [b2Body.cpp <31:48 31:61>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <31:44 31:45>]
REFERENCE_CALL void b2Body::b2Body(const b2BodyDef *, b2World *) -> bool b2IsValid(float32) [b2Body.cpp <32:11 32:19>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2BodyDef::linearDamping [b2Body.cpp <32:25 32:37>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <32:21 32:22>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2BodyDef::linearDamping [b2Body.cpp <32:47 32:59>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <32:43 32:44>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> uint16 b2Body::m_flags [b2Body.cpp <34:2 34:8>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> bool b2BodyDef::bullet [b2Body.cpp <36:10 36:15>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <36:6 36:7>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> uint16 b2Body::m_flags [b2Body.cpp <38:3 38:9>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_bulletFlag [b2Body.cpp <38:14 38:25>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> bool b2BodyDef::fixedRotation [b2Body.cpp <40:10 40:22>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <40:6 40:7>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> uint16 b2Body::m_flags [b2Body.cpp <42:3 42:9>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_fixedRotationFlag [b2Body.cpp <42:14 42:32>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> bool b2BodyDef::allowSleep [b2Body.cpp <44:10 44:19>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <44:6 44:7>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> uint16 b2Body::m_flags [b2Body.cpp <46:3 46:9>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_autoSleepFlag [b2Body.cpp <46:14 46:28>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> bool b2BodyDef::awake [b2Body.cpp <48:10 48:14>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <48:6 48:7>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> uint16 b2Body::m_flags [b2Body.cpp <50:3 50:9>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_awakeFlag [b2Body.cpp <50:14 50:24>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> bool b2BodyDef::active [b2Body.cpp <52:10 52:15>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <52:6 52:7>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> uint16 b2Body::m_flags [b2Body.cpp <54:3 54:9>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_activeFlag [b2Body.cpp <54:14 54:25>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2World * b2Body::m_world [b2Body.cpp <57:2 57:8>]
LOCAL_SYMBOL: b2Body.cpp<25:46> [b2Body.cpp <57:12 57:16>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Body.cpp <59:9 59:9>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Vec2 b2Transform::p [b2Body.cpp <59:7 59:7>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Transform b2Body::m_xf [b2Body.cpp <59:2 59:5>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Vec2 b2BodyDef::position [b2Body.cpp <59:15 59:22>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <59:11 59:12>]
SYMBOL_FUNCTION void b2Rot::Set(float32)
REFERENCE_CALL void b2Body::b2Body(const b2BodyDef *, b2World *) -> void b2Rot::Set(float32) [b2Body.cpp <60:9 60:11>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Rot b2Transform::q [b2Body.cpp <60:7 60:7>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Transform b2Body::m_xf [b2Body.cpp <60:2 60:5>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2BodyDef::angle [b2Body.cpp <60:17 60:21>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <60:13 60:14>]
SYMBOL_FUNCTION void b2Vec2::SetZero()
REFERENCE_CALL void b2Body::b2Body(const b2BodyDef *, b2World *) -> void b2Vec2::SetZero() [b2Body.cpp <62:22 62:28>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Vec2 b2Sweep::localCenter [b2Body.cpp <62:10 62:20>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Sweep b2Body::m_sweep [b2Body.cpp <62:2 62:8>]
REFERENCE_CALL void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Body.cpp <63:13 63:13>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Vec2 b2Sweep::c0 [b2Body.cpp <63:10 63:11>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Sweep b2Body::m_sweep [b2Body.cpp <63:2 63:8>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Vec2 b2Transform::p [b2Body.cpp <63:20 63:20>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Transform b2Body::m_xf [b2Body.cpp <63:15 63:18>]
REFERENCE_CALL void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Body.cpp <64:12 64:12>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Vec2 b2Sweep::c [b2Body.cpp <64:10 64:10>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Sweep b2Body::m_sweep [b2Body.cpp <64:2 64:8>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Vec2 b2Transform::p [b2Body.cpp <64:19 64:19>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Transform b2Body::m_xf [b2Body.cpp <64:14 64:17>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2Sweep::a0 [b2Body.cpp <65:10 65:11>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Sweep b2Body::m_sweep [b2Body.cpp <65:2 65:8>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2BodyDef::angle [b2Body.cpp <65:19 65:23>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <65:15 65:16>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2Sweep::a [b2Body.cpp <66:10 66:10>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Sweep b2Body::m_sweep [b2Body.cpp <66:2 66:8>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2BodyDef::angle [b2Body.cpp <66:18 66:22>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <66:14 66:15>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2Sweep::alpha0 [b2Body.cpp <67:10 67:15>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Sweep b2Body::m_sweep [b2Body.cpp <67:2 67:8>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2JointEdge * b2Body::m_jointList [b2Body.cpp <69:2 69:12>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2ContactEdge * b2Body::m_contactList [b2Body.cpp <70:2 70:14>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Body * b2Body::m_prev [b2Body.cpp <71:2 71:7>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Body * b2Body::m_next [b2Body.cpp <72:2 72:7>]
REFERENCE_CALL void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Body.cpp <74:19 74:19>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Vec2 b2Body::m_linearVelocity [b2Body.cpp <74:2 74:17>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Vec2 b2BodyDef::linearVelocity [b2Body.cpp <74:25 74:38>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <74:21 74:22>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2Body::m_angularVelocity [b2Body.cpp <75:2 75:18>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2BodyDef::angularVelocity [b2Body.cpp <75:26 75:40>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <75:22 75:23>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2Body::m_linearDamping [b2Body.cpp <77:2 77:16>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2BodyDef::linearDamping [b2Body.cpp <77:24 77:36>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <77:20 77:21>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2Body::m_angularDamping [b2Body.cpp <78:2 78:17>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2BodyDef::angularDamping [b2Body.cpp <78:25 78:38>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <78:21 78:22>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2Body::m_gravityScale [b2Body.cpp <79:2 79:15>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2BodyDef::gravityScale [b2Body.cpp <79:23 79:34>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <79:19 79:20>]
REFERENCE_CALL void b2Body::b2Body(const b2BodyDef *, b2World *) -> void b2Vec2::SetZero() [b2Body.cpp <81:10 81:16>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Vec2 b2Body::m_force [b2Body.cpp <81:2 81:8>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2Body::m_torque [b2Body.cpp <82:2 82:9>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2Body::m_sleepTime [b2Body.cpp <84:2 84:12>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2BodyType b2Body::m_type [b2Body.cpp <86:2 86:7>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2BodyType b2BodyDef::type [b2Body.cpp <86:15 86:18>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <86:11 86:12>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2BodyType b2Body::m_type [b2Body.cpp <88:6 88:11>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2BodyType::b2_dynamicBody [b2Body.cpp <88:16 88:29>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2Body::m_mass [b2Body.cpp <90:3 90:8>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2Body::m_invMass [b2Body.cpp <91:3 91:11>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2Body::m_mass [b2Body.cpp <95:3 95:8>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2Body::m_invMass [b2Body.cpp <96:3 96:11>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2Body::m_I [b2Body.cpp <99:2 99:4>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> float32 b2Body::m_invI [b2Body.cpp <100:2 100:7>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> void * b2Body::m_userData [b2Body.cpp <102:2 102:11>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> void * b2BodyDef::userData [b2Body.cpp <102:19 102:26>]
LOCAL_SYMBOL: b2Body.cpp<25:33> [b2Body.cpp <102:15 102:16>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> b2Fixture * b2Body::m_fixtureList [b2Body.cpp <104:2 104:14>]
REFERENCE_USAGE void b2Body::b2Body(const b2BodyDef *, b2World *) -> int32 b2Body::m_fixtureCount [b2Body.cpp <105:2 105:15>]
SYMBOL_METHOD private void b2Body::~b2Body() [b2Body.cpp <108:1 <108:9 108:15> 111:1>]
QUALIFIER: b2Body [b2Body.cpp <108:1 108:6>]
SYMBOL_METHOD public void b2Body::SetType(b2BodyType) [b2Body.cpp <113:1 <113:14 113:20> 164:1>]
QUALIFIER: b2Body [b2Body.cpp <113:6 113:11>]
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2Body::SetType(b2BodyType) -> void [b2Body.cpp <113:1 113:4>]
LOCAL_SYMBOL: b2Body.cpp<113:33> [b2Body.cpp <113:33 113:36>]
REFERENCE_TYPE_USAGE void b2Body::SetType(b2BodyType) -> b2BodyType [b2Body.cpp <113:22 113:31>]
SYMBOL_FUNCTION bool b2World::IsLocked() const
REFERENCE_CALL void b2Body::SetType(b2BodyType) -> bool b2World::IsLocked() const [b2Body.cpp <115:20 115:27>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2World * b2Body::m_world [b2Body.cpp <115:11 115:17>]
REFERENCE_CALL void b2Body::SetType(b2BodyType) -> bool b2World::IsLocked() const [b2Body.cpp <116:15 116:22>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2World * b2Body::m_world [b2Body.cpp <116:6 116:12>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2BodyType b2Body::m_type [b2Body.cpp <121:6 121:11>]
LOCAL_SYMBOL: b2Body.cpp<113:33> [b2Body.cpp <121:16 121:19>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2BodyType b2Body::m_type [b2Body.cpp <126:2 126:7>]
LOCAL_SYMBOL: b2Body.cpp<113:33> [b2Body.cpp <126:11 126:14>]
SYMBOL_FUNCTION void b2Body::ResetMassData()
REFERENCE_CALL void b2Body::SetType(b2BodyType) -> void b2Body::ResetMassData() [b2Body.cpp <128:2 128:14>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2BodyType b2Body::m_type [b2Body.cpp <130:6 130:11>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2BodyType::b2_staticBody [b2Body.cpp <130:16 130:28>]
REFERENCE_CALL void b2Body::SetType(b2BodyType) -> void b2Vec2::SetZero() [b2Body.cpp <132:20 132:26>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2Vec2 b2Body::m_linearVelocity [b2Body.cpp <132:3 132:18>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> float32 b2Body::m_angularVelocity [b2Body.cpp <133:3 133:19>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> float32 b2Sweep::a0 [b2Body.cpp <134:11 134:12>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2Sweep b2Body::m_sweep [b2Body.cpp <134:3 134:9>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> float32 b2Sweep::a [b2Body.cpp <134:24 134:24>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2Sweep b2Body::m_sweep [b2Body.cpp <134:16 134:22>]
REFERENCE_CALL void b2Body::SetType(b2BodyType) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Body.cpp <135:14 135:14>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2Vec2 b2Sweep::c0 [b2Body.cpp <135:11 135:12>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2Sweep b2Body::m_sweep [b2Body.cpp <135:3 135:9>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2Vec2 b2Sweep::c [b2Body.cpp <135:24 135:24>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2Sweep b2Body::m_sweep [b2Body.cpp <135:16 135:22>]
SYMBOL_FUNCTION void b2Body::SynchronizeFixtures()
REFERENCE_CALL void b2Body::SetType(b2BodyType) -> void b2Body::SynchronizeFixtures() [b2Body.cpp <136:3 136:21>]
SYMBOL_FUNCTION void b2Body::SetAwake(bool)
REFERENCE_CALL void b2Body::SetType(b2BodyType) -> void b2Body::SetAwake(bool) [b2Body.cpp <139:2 139:9>]
REFERENCE_CALL void b2Body::SetType(b2BodyType) -> void b2Vec2::SetZero() [b2Body.cpp <141:10 141:16>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2Vec2 b2Body::m_force [b2Body.cpp <141:2 141:8>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> float32 b2Body::m_torque [b2Body.cpp <142:2 142:9>]
LOCAL_SYMBOL: b2Body.cpp<145:17> [b2Body.cpp <145:17 145:18>]
REFERENCE_TYPE_USAGE void b2Body::SetType(b2BodyType) -> b2ContactEdge [b2Body.cpp <145:2 145:14>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2ContactEdge * b2Body::m_contactList [b2Body.cpp <145:22 145:34>]
LOCAL_SYMBOL: b2Body.cpp<145:17> [b2Body.cpp <146:9 146:10>]
LOCAL_SYMBOL: b2Body.cpp<148:18> [b2Body.cpp <148:18 148:20>]
REFERENCE_TYPE_USAGE void b2Body::SetType(b2BodyType) -> b2ContactEdge [b2Body.cpp <148:3 148:15>]
LOCAL_SYMBOL: b2Body.cpp<145:17> [b2Body.cpp <148:24 148:25>]
LOCAL_SYMBOL: b2Body.cpp<145:17> [b2Body.cpp <149:3 149:4>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2ContactEdge * b2ContactEdge::next [b2Body.cpp <149:12 149:15>]
LOCAL_SYMBOL: b2Body.cpp<145:17> [b2Body.cpp <149:8 149:9>]
SYMBOL_FUNCTION void b2ContactManager::Destroy(b2Contact *)
REFERENCE_CALL void b2Body::SetType(b2BodyType) -> void b2ContactManager::Destroy(b2Contact *) [b2Body.cpp <150:29 150:35>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2ContactManager b2World::m_contactManager [b2Body.cpp <150:12 150:27>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2World * b2Body::m_world [b2Body.cpp <150:3 150:9>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2Contact * b2ContactEdge::contact [b2Body.cpp <150:42 150:48>]
LOCAL_SYMBOL: b2Body.cpp<148:18> [b2Body.cpp <150:37 150:39>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2ContactEdge * b2Body::m_contactList [b2Body.cpp <152:2 152:14>]
LOCAL_SYMBOL: b2Body.cpp<155:16> [b2Body.cpp <155:16 155:25>]
REFERENCE_TYPE_USAGE void b2Body::SetType(b2BodyType) -> b2BroadPhase [b2Body.cpp <155:2 155:13>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2BroadPhase b2ContactManager::m_broadPhase [b2Body.cpp <155:56 155:67>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2ContactManager b2World::m_contactManager [b2Body.cpp <155:39 155:54>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2World * b2Body::m_world [b2Body.cpp <155:30 155:36>]
LOCAL_SYMBOL: b2Body.cpp<156:18> [b2Body.cpp <156:18 156:18>]
REFERENCE_TYPE_USAGE void b2Body::SetType(b2BodyType) -> b2Fixture [b2Body.cpp <156:7 156:15>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2Fixture * b2Body::m_fixtureList [b2Body.cpp <156:22 156:34>]
LOCAL_SYMBOL: b2Body.cpp<156:18> [b2Body.cpp <156:37 156:37>]
LOCAL_SYMBOL: b2Body.cpp<156:18> [b2Body.cpp <156:40 156:40>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2Fixture * b2Fixture::m_next [b2Body.cpp <156:47 156:52>]
LOCAL_SYMBOL: b2Body.cpp<156:18> [b2Body.cpp <156:44 156:44>]
LOCAL_SYMBOL: b2Body.cpp<158:9> [b2Body.cpp <158:9 158:18>]
REFERENCE_TYPE_USAGE void b2Body::SetType(b2BodyType) -> int32 [b2Body.cpp <158:3 158:7>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> int32 b2Fixture::m_proxyCount [b2Body.cpp <158:25 158:36>]
LOCAL_SYMBOL: b2Body.cpp<156:18> [b2Body.cpp <158:22 158:22>]
LOCAL_SYMBOL: b2Body.cpp<159:14> [b2Body.cpp <159:14 159:14>]
REFERENCE_TYPE_USAGE void b2Body::SetType(b2BodyType) -> int32 [b2Body.cpp <159:8 159:12>]
LOCAL_SYMBOL: b2Body.cpp<159:14> [b2Body.cpp <159:21 159:21>]
LOCAL_SYMBOL: b2Body.cpp<158:9> [b2Body.cpp <159:25 159:34>]
LOCAL_SYMBOL: b2Body.cpp<159:14> [b2Body.cpp <159:39 159:39>]
SYMBOL_FUNCTION void b2BroadPhase::TouchProxy(int32)
REFERENCE_CALL void b2Body::SetType(b2BodyType) -> void b2BroadPhase::TouchProxy(int32) [b2Body.cpp <161:16 161:25>]
LOCAL_SYMBOL: b2Body.cpp<155:16> [b2Body.cpp <161:4 161:13>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> int32 b2FixtureProxy::proxyId [b2Body.cpp <161:43 161:49>]
REFERENCE_USAGE void b2Body::SetType(b2BodyType) -> b2FixtureProxy * b2Fixture::m_proxies [b2Body.cpp <161:30 161:38>]
LOCAL_SYMBOL: b2Body.cpp<156:18> [b2Body.cpp <161:27 161:27>]
LOCAL_SYMBOL: b2Body.cpp<159:14> [b2Body.cpp <161:40 161:40>]
SYMBOL_METHOD public b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) [b2Body.cpp <166:1 <166:20 166:32> 203:1>]
QUALIFIER: b2Body [b2Body.cpp <166:12 166:17>]
REFERENCE_TYPE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> b2Fixture [b2Body.cpp <166:1 166:9>]
LOCAL_SYMBOL: b2Body.cpp<166:54> [b2Body.cpp <166:54 166:56>]
REFERENCE_TYPE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> b2FixtureDef [b2Body.cpp <166:40 166:51>]
REFERENCE_CALL b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> bool b2World::IsLocked() const [b2Body.cpp <168:20 168:27>]
REFERENCE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> b2World * b2Body::m_world [b2Body.cpp <168:11 168:17>]
REFERENCE_CALL b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> bool b2World::IsLocked() const [b2Body.cpp <169:15 169:22>]
REFERENCE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> b2World * b2Body::m_world [b2Body.cpp <169:6 169:12>]
LOCAL_SYMBOL: b2Body.cpp<174:20> [b2Body.cpp <174:20 174:28>]
REFERENCE_TYPE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> b2BlockAllocator [b2Body.cpp <174:2 174:17>]
REFERENCE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> b2BlockAllocator b2World::m_blockAllocator [b2Body.cpp <174:42 174:57>]
REFERENCE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> b2World * b2Body::m_world [b2Body.cpp <174:33 174:39>]
LOCAL_SYMBOL: b2Body.cpp<176:8> [b2Body.cpp <176:8 176:13>]
REFERENCE_TYPE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> void [b2Body.cpp <176:2 176:5>]
SYMBOL_FUNCTION void * b2BlockAllocator::Allocate(int32)
REFERENCE_CALL b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> void * b2BlockAllocator::Allocate(int32) [b2Body.cpp <176:28 176:35>]
LOCAL_SYMBOL: b2Body.cpp<174:20> [b2Body.cpp <176:17 176:25>]
REFERENCE_TYPE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> b2Fixture [b2Body.cpp <176:44 176:52>]
LOCAL_SYMBOL: b2Body.cpp<177:13> [b2Body.cpp <177:13 177:19>]
REFERENCE_TYPE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> b2Fixture [b2Body.cpp <177:2 177:10>]
REFERENCE_TYPE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> b2Fixture [b2Body.cpp <177:36 177:44>]
SYMBOL_FUNCTION void b2Fixture::b2Fixture()
REFERENCE_CALL b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> void b2Fixture::b2Fixture() [b2Body.cpp <177:36 177:44>]
LOCAL_SYMBOL: b2Body.cpp<176:8> [b2Body.cpp <177:28 177:33>]
SYMBOL_FUNCTION void b2Fixture::Create(b2BlockAllocator *, b2Body *, const b2FixtureDef *)
REFERENCE_CALL b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> void b2Fixture::Create(b2BlockAllocator *, b2Body *, const b2FixtureDef *) [b2Body.cpp <178:11 178:16>]
LOCAL_SYMBOL: b2Body.cpp<177:13> [b2Body.cpp <178:2 178:8>]
LOCAL_SYMBOL: b2Body.cpp<174:20> [b2Body.cpp <178:18 178:26>]
LOCAL_SYMBOL: b2Body.cpp<166:54> [b2Body.cpp <178:35 178:37>]
REFERENCE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> uint16 b2Body::m_flags [b2Body.cpp <180:6 180:12>]
REFERENCE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_activeFlag [b2Body.cpp <180:16 180:27>]
LOCAL_SYMBOL: b2Body.cpp<182:17> [b2Body.cpp <182:17 182:26>]
REFERENCE_TYPE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> b2BroadPhase [b2Body.cpp <182:3 182:14>]
REFERENCE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> b2BroadPhase b2ContactManager::m_broadPhase [b2Body.cpp <182:57 182:68>]
REFERENCE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> b2ContactManager b2World::m_contactManager [b2Body.cpp <182:40 182:55>]
REFERENCE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> b2World * b2Body::m_world [b2Body.cpp <182:31 182:37>]
SYMBOL_FUNCTION void b2Fixture::CreateProxies(b2BroadPhase *, const b2Transform &)
REFERENCE_CALL b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> void b2Fixture::CreateProxies(b2BroadPhase *, const b2Transform &) [b2Body.cpp <183:12 183:24>]
LOCAL_SYMBOL: b2Body.cpp<177:13> [b2Body.cpp <183:3 183:9>]
LOCAL_SYMBOL: b2Body.cpp<182:17> [b2Body.cpp <183:26 183:35>]
REFERENCE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> b2Transform b2Body::m_xf [b2Body.cpp <183:38 183:41>]
REFERENCE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> b2Fixture * b2Fixture::m_next [b2Body.cpp <186:11 186:16>]
LOCAL_SYMBOL: b2Body.cpp<177:13> [b2Body.cpp <186:2 186:8>]
REFERENCE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> b2Fixture * b2Body::m_fixtureList [b2Body.cpp <186:20 186:32>]
REFERENCE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> b2Fixture * b2Body::m_fixtureList [b2Body.cpp <187:2 187:14>]
LOCAL_SYMBOL: b2Body.cpp<177:13> [b2Body.cpp <187:18 187:24>]
REFERENCE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> int32 b2Body::m_fixtureCount [b2Body.cpp <188:4 188:17>]
REFERENCE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> b2Body * b2Fixture::m_body [b2Body.cpp <190:11 190:16>]
LOCAL_SYMBOL: b2Body.cpp<177:13> [b2Body.cpp <190:2 190:8>]
REFERENCE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> float32 b2Fixture::m_density [b2Body.cpp <193:15 193:23>]
LOCAL_SYMBOL: b2Body.cpp<177:13> [b2Body.cpp <193:6 193:12>]
REFERENCE_CALL b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> void b2Body::ResetMassData() [b2Body.cpp <195:3 195:15>]
REFERENCE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> int32 b2World::m_flags [b2Body.cpp <200:11 200:17>]
REFERENCE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> b2World * b2Body::m_world [b2Body.cpp <200:2 200:8>]
REFERENCE_USAGE b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) -> b2World::anonymous enum (b2World.h<215:2>)::e_newFixture [b2Body.cpp <200:31 200:42>]
SYMBOL_CLASS b2World
QUALIFIER: b2World [b2Body.cpp <200:22 200:28>]
LOCAL_SYMBOL: b2Body.cpp<177:13> [b2Body.cpp <202:9 202:15>]
SYMBOL_METHOD public b2Fixture * b2Body::CreateFixture(const b2Shape *, float32) [b2Body.cpp <205:1 <205:20 205:32> 212:1>]
QUALIFIER: b2Body [b2Body.cpp <205:12 205:17>]
REFERENCE_TYPE_USAGE b2Fixture * b2Body::CreateFixture(const b2Shape *, float32) -> b2Fixture [b2Body.cpp <205:1 205:9>]
LOCAL_SYMBOL: b2Body.cpp<205:49> [b2Body.cpp <205:49 205:53>]
REFERENCE_TYPE_USAGE b2Fixture * b2Body::CreateFixture(const b2Shape *, float32) -> b2Shape [b2Body.cpp <205:40 205:46>]
LOCAL_SYMBOL: b2Body.cpp<205:64> [b2Body.cpp <205:64 205:70>]
REFERENCE_TYPE_USAGE b2Fixture * b2Body::CreateFixture(const b2Shape *, float32) -> float32 [b2Body.cpp <205:56 205:62>]
LOCAL_SYMBOL: b2Body.cpp<207:15> [b2Body.cpp <207:15 207:17>]
REFERENCE_TYPE_USAGE b2Fixture * b2Body::CreateFixture(const b2Shape *, float32) -> b2FixtureDef [b2Body.cpp <207:2 207:13>]
SYMBOL_FUNCTION void b2FixtureDef::b2FixtureDef()
REFERENCE_CALL b2Fixture * b2Body::CreateFixture(const b2Shape *, float32) -> void b2FixtureDef::b2FixtureDef() [b2Body.cpp <207:15 207:17>]
REFERENCE_USAGE b2Fixture * b2Body::CreateFixture(const b2Shape *, float32) -> const b2Shape * b2FixtureDef::shape [b2Body.cpp <208:6 208:10>]
LOCAL_SYMBOL: b2Body.cpp<207:15> [b2Body.cpp <208:2 208:4>]
LOCAL_SYMBOL: b2Body.cpp<205:49> [b2Body.cpp <208:14 208:18>]
REFERENCE_USAGE b2Fixture * b2Body::CreateFixture(const b2Shape *, float32) -> float32 b2FixtureDef::density [b2Body.cpp <209:6 209:12>]
LOCAL_SYMBOL: b2Body.cpp<207:15> [b2Body.cpp <209:2 209:4>]
LOCAL_SYMBOL: b2Body.cpp<205:64> [b2Body.cpp <209:16 209:22>]
SYMBOL_FUNCTION b2Fixture * b2Body::CreateFixture(const b2FixtureDef *)
REFERENCE_CALL b2Fixture * b2Body::CreateFixture(const b2Shape *, float32) -> b2Fixture * b2Body::CreateFixture(const b2FixtureDef *) [b2Body.cpp <211:9 211:21>]
LOCAL_SYMBOL: b2Body.cpp<207:15> [b2Body.cpp <211:24 211:26>]
SYMBOL_METHOD public void b2Body::DestroyFixture(b2Fixture *) [b2Body.cpp <214:1 <214:14 214:27> 284:1>]
QUALIFIER: b2Body [b2Body.cpp <214:6 214:11>]
REFERENCE_TYPE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> void [b2Body.cpp <214:1 214:4>]
LOCAL_SYMBOL: b2Body.cpp<214:40> [b2Body.cpp <214:40 214:46>]
REFERENCE_TYPE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2Fixture [b2Body.cpp <214:29 214:37>]
LOCAL_SYMBOL: b2Body.cpp<214:40> [b2Body.cpp <216:6 216:12>]
REFERENCE_CALL void b2Body::DestroyFixture(b2Fixture *) -> bool b2World::IsLocked() const [b2Body.cpp <221:20 221:27>]
REFERENCE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2World * b2Body::m_world [b2Body.cpp <221:11 221:17>]
REFERENCE_CALL void b2Body::DestroyFixture(b2Fixture *) -> bool b2World::IsLocked() const [b2Body.cpp <222:15 222:22>]
REFERENCE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2World * b2Body::m_world [b2Body.cpp <222:6 222:12>]
REFERENCE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2Body * b2Fixture::m_body [b2Body.cpp <227:20 227:25>]
LOCAL_SYMBOL: b2Body.cpp<214:40> [b2Body.cpp <227:11 227:17>]
REFERENCE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> int32 b2Body::m_fixtureCount [b2Body.cpp <230:11 230:24>]
LOCAL_SYMBOL: b2Body.cpp<231:14> [b2Body.cpp <231:14 231:17>]
REFERENCE_TYPE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2Fixture [b2Body.cpp <231:2 231:10>]
REFERENCE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2Fixture * b2Body::m_fixtureList [b2Body.cpp <231:22 231:34>]
LOCAL_SYMBOL: b2Body.cpp<232:7> [b2Body.cpp <232:7 232:11>]
SYMBOL_BUILTIN_TYPE bool
REFERENCE_TYPE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> bool [b2Body.cpp <232:2 232:5>]
LOCAL_SYMBOL: b2Body.cpp<231:14> [b2Body.cpp <233:10 233:13>]
LOCAL_SYMBOL: b2Body.cpp<231:14> [b2Body.cpp <235:8 235:11>]
LOCAL_SYMBOL: b2Body.cpp<214:40> [b2Body.cpp <235:16 235:22>]
LOCAL_SYMBOL: b2Body.cpp<231:14> [b2Body.cpp <237:5 237:8>]
REFERENCE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2Fixture * b2Fixture::m_next [b2Body.cpp <237:21 237:26>]
LOCAL_SYMBOL: b2Body.cpp<214:40> [b2Body.cpp <237:12 237:18>]
LOCAL_SYMBOL: b2Body.cpp<232:7> [b2Body.cpp <238:4 238:8>]
LOCAL_SYMBOL: b2Body.cpp<231:14> [b2Body.cpp <242:3 242:6>]
REFERENCE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2Fixture * b2Fixture::m_next [b2Body.cpp <242:20 242:25>]
LOCAL_SYMBOL: b2Body.cpp<231:14> [b2Body.cpp <242:13 242:16>]
LOCAL_SYMBOL: b2Body.cpp<232:7> [b2Body.cpp <246:11 246:15>]
LOCAL_SYMBOL: b2Body.cpp<249:17> [b2Body.cpp <249:17 249:20>]
REFERENCE_TYPE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2ContactEdge [b2Body.cpp <249:2 249:14>]
REFERENCE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2ContactEdge * b2Body::m_contactList [b2Body.cpp <249:24 249:36>]
LOCAL_SYMBOL: b2Body.cpp<249:17> [b2Body.cpp <250:9 250:12>]
LOCAL_SYMBOL: b2Body.cpp<252:14> [b2Body.cpp <252:14 252:14>]
REFERENCE_TYPE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2Contact [b2Body.cpp <252:3 252:11>]
REFERENCE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2Contact * b2ContactEdge::contact [b2Body.cpp <252:24 252:30>]
LOCAL_SYMBOL: b2Body.cpp<249:17> [b2Body.cpp <252:18 252:21>]
LOCAL_SYMBOL: b2Body.cpp<249:17> [b2Body.cpp <253:3 253:6>]
REFERENCE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2ContactEdge * b2ContactEdge::next [b2Body.cpp <253:16 253:19>]
LOCAL_SYMBOL: b2Body.cpp<249:17> [b2Body.cpp <253:10 253:13>]
LOCAL_SYMBOL: b2Body.cpp<255:14> [b2Body.cpp <255:14 255:21>]
REFERENCE_TYPE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2Fixture [b2Body.cpp <255:3 255:11>]
SYMBOL_FUNCTION b2Fixture * b2Contact::GetFixtureA()
REFERENCE_CALL void b2Body::DestroyFixture(b2Fixture *) -> b2Fixture * b2Contact::GetFixtureA() [b2Body.cpp <255:28 255:38>]
LOCAL_SYMBOL: b2Body.cpp<252:14> [b2Body.cpp <255:25 255:25>]
LOCAL_SYMBOL: b2Body.cpp<256:14> [b2Body.cpp <256:14 256:21>]
REFERENCE_TYPE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2Fixture [b2Body.cpp <256:3 256:11>]
SYMBOL_FUNCTION b2Fixture * b2Contact::GetFixtureB()
REFERENCE_CALL void b2Body::DestroyFixture(b2Fixture *) -> b2Fixture * b2Contact::GetFixtureB() [b2Body.cpp <256:28 256:38>]
LOCAL_SYMBOL: b2Body.cpp<252:14> [b2Body.cpp <256:25 256:25>]
LOCAL_SYMBOL: b2Body.cpp<214:40> [b2Body.cpp <258:7 258:13>]
LOCAL_SYMBOL: b2Body.cpp<255:14> [b2Body.cpp <258:18 258:25>]
LOCAL_SYMBOL: b2Body.cpp<214:40> [b2Body.cpp <258:30 258:36>]
LOCAL_SYMBOL: b2Body.cpp<256:14> [b2Body.cpp <258:41 258:48>]
REFERENCE_CALL void b2Body::DestroyFixture(b2Fixture *) -> void b2ContactManager::Destroy(b2Contact *) [b2Body.cpp <262:30 262:36>]
REFERENCE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2ContactManager b2World::m_contactManager [b2Body.cpp <262:13 262:28>]
REFERENCE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2World * b2Body::m_world [b2Body.cpp <262:4 262:10>]
LOCAL_SYMBOL: b2Body.cpp<252:14> [b2Body.cpp <262:38 262:38>]
LOCAL_SYMBOL: b2Body.cpp<266:20> [b2Body.cpp <266:20 266:28>]
REFERENCE_TYPE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2BlockAllocator [b2Body.cpp <266:2 266:17>]
REFERENCE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2BlockAllocator b2World::m_blockAllocator [b2Body.cpp <266:42 266:57>]
REFERENCE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2World * b2Body::m_world [b2Body.cpp <266:33 266:39>]
REFERENCE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> uint16 b2Body::m_flags [b2Body.cpp <268:6 268:12>]
REFERENCE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_activeFlag [b2Body.cpp <268:16 268:27>]
LOCAL_SYMBOL: b2Body.cpp<270:17> [b2Body.cpp <270:17 270:26>]
REFERENCE_TYPE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2BroadPhase [b2Body.cpp <270:3 270:14>]
REFERENCE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2BroadPhase b2ContactManager::m_broadPhase [b2Body.cpp <270:57 270:68>]
REFERENCE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2ContactManager b2World::m_contactManager [b2Body.cpp <270:40 270:55>]
REFERENCE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2World * b2Body::m_world [b2Body.cpp <270:31 270:37>]
SYMBOL_FUNCTION void b2Fixture::DestroyProxies(b2BroadPhase *)
REFERENCE_CALL void b2Body::DestroyFixture(b2Fixture *) -> void b2Fixture::DestroyProxies(b2BroadPhase *) [b2Body.cpp <271:12 271:25>]
LOCAL_SYMBOL: b2Body.cpp<214:40> [b2Body.cpp <271:3 271:9>]
LOCAL_SYMBOL: b2Body.cpp<270:17> [b2Body.cpp <271:27 271:36>]
REFERENCE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2Body * b2Fixture::m_body [b2Body.cpp <274:11 274:16>]
LOCAL_SYMBOL: b2Body.cpp<214:40> [b2Body.cpp <274:2 274:8>]
REFERENCE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2Fixture * b2Fixture::m_next [b2Body.cpp <275:11 275:16>]
LOCAL_SYMBOL: b2Body.cpp<214:40> [b2Body.cpp <275:2 275:8>]
SYMBOL_FUNCTION void b2Fixture::Destroy(b2BlockAllocator *)
REFERENCE_CALL void b2Body::DestroyFixture(b2Fixture *) -> void b2Fixture::Destroy(b2BlockAllocator *) [b2Body.cpp <276:11 276:17>]
LOCAL_SYMBOL: b2Body.cpp<214:40> [b2Body.cpp <276:2 276:8>]
LOCAL_SYMBOL: b2Body.cpp<266:20> [b2Body.cpp <276:19 276:27>]
SYMBOL_FUNCTION void b2Fixture::~b2Fixture()
REFERENCE_CALL void b2Body::DestroyFixture(b2Fixture *) -> void b2Fixture::~b2Fixture() [b2Body.cpp <277:11 277:11>]
LOCAL_SYMBOL: b2Body.cpp<214:40> [b2Body.cpp <277:2 277:8>]
SYMBOL_FUNCTION void b2BlockAllocator::Free(void *, int32)
REFERENCE_CALL void b2Body::DestroyFixture(b2Fixture *) -> void b2BlockAllocator::Free(void *, int32) [b2Body.cpp <278:13 278:16>]
LOCAL_SYMBOL: b2Body.cpp<266:20> [b2Body.cpp <278:2 278:10>]
LOCAL_SYMBOL: b2Body.cpp<214:40> [b2Body.cpp <278:18 278:24>]
REFERENCE_TYPE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> b2Fixture [b2Body.cpp <278:34 278:42>]
REFERENCE_USAGE void b2Body::DestroyFixture(b2Fixture *) -> int32 b2Body::m_fixtureCount [b2Body.cpp <280:4 280:17>]
REFERENCE_CALL void b2Body::DestroyFixture(b2Fixture *) -> void b2Body::ResetMassData() [b2Body.cpp <283:2 283:14>]
SYMBOL_METHOD public void b2Body::ResetMassData() [b2Body.cpp <286:1 <286:14 286:26> 356:1>]
QUALIFIER: b2Body [b2Body.cpp <286:6 286:11>]
REFERENCE_TYPE_USAGE void b2Body::ResetMassData() -> void [b2Body.cpp <286:1 286:4>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Body::m_mass [b2Body.cpp <289:2 289:7>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Body::m_invMass [b2Body.cpp <290:2 290:10>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Body::m_I [b2Body.cpp <291:2 291:4>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Body::m_invI [b2Body.cpp <292:2 292:7>]
REFERENCE_CALL void b2Body::ResetMassData() -> void b2Vec2::SetZero() [b2Body.cpp <293:22 293:28>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Vec2 b2Sweep::localCenter [b2Body.cpp <293:10 293:20>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Sweep b2Body::m_sweep [b2Body.cpp <293:2 293:8>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2BodyType b2Body::m_type [b2Body.cpp <296:6 296:11>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2BodyType::b2_staticBody [b2Body.cpp <296:16 296:28>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2BodyType b2Body::m_type [b2Body.cpp <296:33 296:38>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2BodyType::b2_kinematicBody [b2Body.cpp <296:43 296:58>]
REFERENCE_CALL void b2Body::ResetMassData() -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Body.cpp <298:14 298:14>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Vec2 b2Sweep::c0 [b2Body.cpp <298:11 298:12>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Sweep b2Body::m_sweep [b2Body.cpp <298:3 298:9>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Vec2 b2Transform::p [b2Body.cpp <298:21 298:21>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Transform b2Body::m_xf [b2Body.cpp <298:16 298:19>]
REFERENCE_CALL void b2Body::ResetMassData() -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Body.cpp <299:13 299:13>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Vec2 b2Sweep::c [b2Body.cpp <299:11 299:11>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Sweep b2Body::m_sweep [b2Body.cpp <299:3 299:9>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Vec2 b2Transform::p [b2Body.cpp <299:20 299:20>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Transform b2Body::m_xf [b2Body.cpp <299:15 299:18>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Sweep::a0 [b2Body.cpp <300:11 300:12>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Sweep b2Body::m_sweep [b2Body.cpp <300:3 300:9>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Sweep::a [b2Body.cpp <300:24 300:24>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Sweep b2Body::m_sweep [b2Body.cpp <300:16 300:22>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2BodyType b2Body::m_type [b2Body.cpp <304:11 304:16>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2BodyType::b2_dynamicBody [b2Body.cpp <304:21 304:34>]
LOCAL_SYMBOL: b2Body.cpp<307:9> [b2Body.cpp <307:9 307:19>]
REFERENCE_TYPE_USAGE void b2Body::ResetMassData() -> b2Vec2 [b2Body.cpp <307:2 307:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2Body::ResetMassData() -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2Body.cpp <307:23 307:33>]
REFERENCE_USAGE void b2Body::ResetMassData() -> const b2Vec2 b2Vec2_zero [b2Body.cpp <307:23 307:33>]
LOCAL_SYMBOL: b2Body.cpp<308:18> [b2Body.cpp <308:18 308:18>]
REFERENCE_TYPE_USAGE void b2Body::ResetMassData() -> b2Fixture [b2Body.cpp <308:7 308:15>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Fixture * b2Body::m_fixtureList [b2Body.cpp <308:22 308:34>]
LOCAL_SYMBOL: b2Body.cpp<308:18> [b2Body.cpp <308:37 308:37>]
LOCAL_SYMBOL: b2Body.cpp<308:18> [b2Body.cpp <308:40 308:40>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Fixture * b2Fixture::m_next [b2Body.cpp <308:47 308:52>]
LOCAL_SYMBOL: b2Body.cpp<308:18> [b2Body.cpp <308:44 308:44>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Fixture::m_density [b2Body.cpp <310:10 310:18>]
LOCAL_SYMBOL: b2Body.cpp<308:18> [b2Body.cpp <310:7 310:7>]
LOCAL_SYMBOL: b2Body.cpp<315:14> [b2Body.cpp <315:14 315:21>]
REFERENCE_TYPE_USAGE void b2Body::ResetMassData() -> b2MassData [b2Body.cpp <315:3 315:12>]
SYMBOL_FUNCTION void b2MassData::b2MassData()
REFERENCE_CALL void b2Body::ResetMassData() -> void b2MassData::b2MassData() [b2Body.cpp <315:14 315:21>]
SYMBOL_FUNCTION void b2Fixture::GetMassData(b2MassData *) const
REFERENCE_CALL void b2Body::ResetMassData() -> void b2Fixture::GetMassData(b2MassData *) const [b2Body.cpp <316:6 316:16>]
LOCAL_SYMBOL: b2Body.cpp<308:18> [b2Body.cpp <316:3 316:3>]
LOCAL_SYMBOL: b2Body.cpp<315:14> [b2Body.cpp <316:19 316:26>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Body::m_mass [b2Body.cpp <317:3 317:8>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2MassData::mass [b2Body.cpp <317:22 317:25>]
LOCAL_SYMBOL: b2Body.cpp<315:14> [b2Body.cpp <317:13 317:20>]
SYMBOL_FUNCTION void b2Vec2::operator+=(const b2Vec2 &)
REFERENCE_CALL void b2Body::ResetMassData() -> void b2Vec2::operator+=(const b2Vec2 &) [b2Body.cpp <318:15 318:16>]
LOCAL_SYMBOL: b2Body.cpp<307:9> [b2Body.cpp <318:3 318:13>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2Body::ResetMassData() -> b2Vec2 operator*(float32, const b2Vec2 &) [b2Body.cpp <318:32 318:32>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2MassData::mass [b2Body.cpp <318:27 318:30>]
LOCAL_SYMBOL: b2Body.cpp<315:14> [b2Body.cpp <318:18 318:25>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Vec2 b2MassData::center [b2Body.cpp <318:43 318:48>]
LOCAL_SYMBOL: b2Body.cpp<315:14> [b2Body.cpp <318:34 318:41>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Body::m_I [b2Body.cpp <319:3 319:5>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2MassData::I [b2Body.cpp <319:19 319:19>]
LOCAL_SYMBOL: b2Body.cpp<315:14> [b2Body.cpp <319:10 319:17>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Body::m_mass [b2Body.cpp <323:6 323:11>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Body::m_invMass [b2Body.cpp <325:3 325:11>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Body::m_mass [b2Body.cpp <325:22 325:27>]
SYMBOL_FUNCTION void b2Vec2::operator*=(float32)
REFERENCE_CALL void b2Body::ResetMassData() -> void b2Vec2::operator*=(float32) [b2Body.cpp <326:15 326:16>]
LOCAL_SYMBOL: b2Body.cpp<307:9> [b2Body.cpp <326:3 326:13>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Body::m_invMass [b2Body.cpp <326:18 326:26>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Body::m_mass [b2Body.cpp <331:3 331:8>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Body::m_invMass [b2Body.cpp <332:3 332:11>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Body::m_I [b2Body.cpp <335:6 335:8>]
REFERENCE_USAGE void b2Body::ResetMassData() -> uint16 b2Body::m_flags [b2Body.cpp <335:21 335:27>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Body::anonymous enum (b2Body.h<413:2>)::e_fixedRotationFlag [b2Body.cpp <335:31 335:49>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Body::m_I [b2Body.cpp <338:3 338:5>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Body::m_mass [b2Body.cpp <338:10 338:15>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2Body::ResetMassData() -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Body.cpp <338:19 338:23>]
LOCAL_SYMBOL: b2Body.cpp<307:9> [b2Body.cpp <338:25 338:35>]
LOCAL_SYMBOL: b2Body.cpp<307:9> [b2Body.cpp <338:38 338:48>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Body::m_I [b2Body.cpp <339:12 339:14>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Body::m_invI [b2Body.cpp <340:3 340:8>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Body::m_I [b2Body.cpp <340:19 340:21>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Body::m_I [b2Body.cpp <345:3 345:5>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Body::m_invI [b2Body.cpp <346:3 346:8>]
LOCAL_SYMBOL: b2Body.cpp<350:9> [b2Body.cpp <350:9 350:17>]
REFERENCE_TYPE_USAGE void b2Body::ResetMassData() -> b2Vec2 [b2Body.cpp <350:2 350:7>]
REFERENCE_CALL void b2Body::ResetMassData() -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2Body.cpp <350:29 350:29>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Vec2 b2Sweep::c [b2Body.cpp <350:29 350:29>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Sweep b2Body::m_sweep [b2Body.cpp <350:21 350:27>]
REFERENCE_CALL void b2Body::ResetMassData() -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Body.cpp <351:22 351:22>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Vec2 b2Sweep::localCenter [b2Body.cpp <351:10 351:20>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Sweep b2Body::m_sweep [b2Body.cpp <351:2 351:8>]
LOCAL_SYMBOL: b2Body.cpp<307:9> [b2Body.cpp <351:24 351:34>]
REFERENCE_CALL void b2Body::ResetMassData() -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Body.cpp <352:13 352:13>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Vec2 b2Sweep::c0 [b2Body.cpp <352:10 352:11>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Sweep b2Body::m_sweep [b2Body.cpp <352:2 352:8>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &&)
REFERENCE_CALL void b2Body::ResetMassData() -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Body.cpp <352:25 352:25>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Vec2 b2Sweep::c [b2Body.cpp <352:23 352:23>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Sweep b2Body::m_sweep [b2Body.cpp <352:15 352:21>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &)
REFERENCE_CALL void b2Body::ResetMassData() -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2Body.cpp <352:27 352:31>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Transform b2Body::m_xf [b2Body.cpp <352:33 352:36>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Vec2 b2Sweep::localCenter [b2Body.cpp <352:47 352:57>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Sweep b2Body::m_sweep [b2Body.cpp <352:39 352:45>]
REFERENCE_CALL void b2Body::ResetMassData() -> void b2Vec2::operator+=(const b2Vec2 &) [b2Body.cpp <355:19 355:20>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Vec2 b2Body::m_linearVelocity [b2Body.cpp <355:2 355:17>]
SYMBOL_FUNCTION b2Vec2 b2Cross(float32, const b2Vec2 &)
REFERENCE_CALL void b2Body::ResetMassData() -> b2Vec2 b2Cross(float32, const b2Vec2 &) [b2Body.cpp <355:22 355:28>]
REFERENCE_USAGE void b2Body::ResetMassData() -> float32 b2Body::m_angularVelocity [b2Body.cpp <355:30 355:46>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2Body::ResetMassData() -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Body.cpp <355:59 355:59>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Vec2 b2Sweep::c [b2Body.cpp <355:57 355:57>]
REFERENCE_USAGE void b2Body::ResetMassData() -> b2Sweep b2Body::m_sweep [b2Body.cpp <355:49 355:55>]
LOCAL_SYMBOL: b2Body.cpp<350:9> [b2Body.cpp <355:61 355:69>]
SYMBOL_METHOD public void b2Body::SetMassData(const b2MassData *) [b2Body.cpp <358:1 <358:14 358:24> 397:1>]
QUALIFIER: b2Body [b2Body.cpp <358:6 358:11>]
REFERENCE_TYPE_USAGE void b2Body::SetMassData(const b2MassData *) -> void [b2Body.cpp <358:1 358:4>]
LOCAL_SYMBOL: b2Body.cpp<358:44> [b2Body.cpp <358:44 358:51>]
REFERENCE_TYPE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2MassData [b2Body.cpp <358:32 358:41>]
REFERENCE_CALL void b2Body::SetMassData(const b2MassData *) -> bool b2World::IsLocked() const [b2Body.cpp <360:20 360:27>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2World * b2Body::m_world [b2Body.cpp <360:11 360:17>]
REFERENCE_CALL void b2Body::SetMassData(const b2MassData *) -> bool b2World::IsLocked() const [b2Body.cpp <361:15 361:22>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2World * b2Body::m_world [b2Body.cpp <361:6 361:12>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2BodyType b2Body::m_type [b2Body.cpp <366:6 366:11>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2BodyType::b2_dynamicBody [b2Body.cpp <366:16 366:29>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> float32 b2Body::m_invMass [b2Body.cpp <371:2 371:10>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> float32 b2Body::m_I [b2Body.cpp <372:2 372:4>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> float32 b2Body::m_invI [b2Body.cpp <373:2 373:7>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> float32 b2Body::m_mass [b2Body.cpp <375:2 375:7>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> float32 b2MassData::mass [b2Body.cpp <375:21 375:24>]
LOCAL_SYMBOL: b2Body.cpp<358:44> [b2Body.cpp <375:11 375:18>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> float32 b2Body::m_mass [b2Body.cpp <376:6 376:11>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> float32 b2Body::m_mass [b2Body.cpp <378:3 378:8>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> float32 b2Body::m_invMass [b2Body.cpp <381:2 381:10>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> float32 b2Body::m_mass [b2Body.cpp <381:21 381:26>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> float32 b2MassData::I [b2Body.cpp <383:16 383:16>]
LOCAL_SYMBOL: b2Body.cpp<358:44> [b2Body.cpp <383:6 383:13>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> uint16 b2Body::m_flags [b2Body.cpp <383:29 383:35>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_fixedRotationFlag [b2Body.cpp <383:47 383:65>]
QUALIFIER: b2Body [b2Body.cpp <383:39 383:44>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> float32 b2Body::m_I [b2Body.cpp <385:3 385:5>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> float32 b2MassData::I [b2Body.cpp <385:19 385:19>]
LOCAL_SYMBOL: b2Body.cpp<358:44> [b2Body.cpp <385:9 385:16>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> float32 b2Body::m_mass [b2Body.cpp <385:23 385:28>]
REFERENCE_CALL void b2Body::SetMassData(const b2MassData *) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2Body.cpp <385:32 385:36>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2Vec2 b2MassData::center [b2Body.cpp <385:48 385:53>]
LOCAL_SYMBOL: b2Body.cpp<358:44> [b2Body.cpp <385:38 385:45>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2Vec2 b2MassData::center [b2Body.cpp <385:66 385:71>]
LOCAL_SYMBOL: b2Body.cpp<358:44> [b2Body.cpp <385:56 385:63>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> float32 b2Body::m_I [b2Body.cpp <386:12 386:14>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> float32 b2Body::m_invI [b2Body.cpp <387:3 387:8>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> float32 b2Body::m_I [b2Body.cpp <387:19 387:21>]
LOCAL_SYMBOL: b2Body.cpp<391:9> [b2Body.cpp <391:9 391:17>]
REFERENCE_TYPE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2Vec2 [b2Body.cpp <391:2 391:7>]
REFERENCE_CALL void b2Body::SetMassData(const b2MassData *) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2Body.cpp <391:29 391:29>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2Vec2 b2Sweep::c [b2Body.cpp <391:29 391:29>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2Sweep b2Body::m_sweep [b2Body.cpp <391:21 391:27>]
REFERENCE_CALL void b2Body::SetMassData(const b2MassData *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Body.cpp <392:22 392:22>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2Vec2 b2Sweep::localCenter [b2Body.cpp <392:10 392:20>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2Sweep b2Body::m_sweep [b2Body.cpp <392:2 392:8>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2Vec2 b2MassData::center [b2Body.cpp <392:35 392:40>]
LOCAL_SYMBOL: b2Body.cpp<358:44> [b2Body.cpp <392:25 392:32>]
REFERENCE_CALL void b2Body::SetMassData(const b2MassData *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Body.cpp <393:13 393:13>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2Vec2 b2Sweep::c0 [b2Body.cpp <393:10 393:11>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2Sweep b2Body::m_sweep [b2Body.cpp <393:2 393:8>]
REFERENCE_CALL void b2Body::SetMassData(const b2MassData *) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Body.cpp <393:25 393:25>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2Vec2 b2Sweep::c [b2Body.cpp <393:23 393:23>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2Sweep b2Body::m_sweep [b2Body.cpp <393:15 393:21>]
REFERENCE_CALL void b2Body::SetMassData(const b2MassData *) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2Body.cpp <393:27 393:31>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2Transform b2Body::m_xf [b2Body.cpp <393:33 393:36>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2Vec2 b2Sweep::localCenter [b2Body.cpp <393:47 393:57>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2Sweep b2Body::m_sweep [b2Body.cpp <393:39 393:45>]
REFERENCE_CALL void b2Body::SetMassData(const b2MassData *) -> void b2Vec2::operator+=(const b2Vec2 &) [b2Body.cpp <396:19 396:20>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2Vec2 b2Body::m_linearVelocity [b2Body.cpp <396:2 396:17>]
REFERENCE_CALL void b2Body::SetMassData(const b2MassData *) -> b2Vec2 b2Cross(float32, const b2Vec2 &) [b2Body.cpp <396:22 396:28>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> float32 b2Body::m_angularVelocity [b2Body.cpp <396:30 396:46>]
REFERENCE_CALL void b2Body::SetMassData(const b2MassData *) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Body.cpp <396:59 396:59>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2Vec2 b2Sweep::c [b2Body.cpp <396:57 396:57>]
REFERENCE_USAGE void b2Body::SetMassData(const b2MassData *) -> b2Sweep b2Body::m_sweep [b2Body.cpp <396:49 396:55>]
LOCAL_SYMBOL: b2Body.cpp<391:9> [b2Body.cpp <396:61 396:69>]
SYMBOL_METHOD private bool b2Body::ShouldCollide(const b2Body *) const [b2Body.cpp <399:1 <399:14 399:26> 420:1>]
QUALIFIER: b2Body [b2Body.cpp <399:6 399:11>]
REFERENCE_TYPE_USAGE bool b2Body::ShouldCollide(const b2Body *) const -> bool [b2Body.cpp <399:1 399:4>]
LOCAL_SYMBOL: b2Body.cpp<399:42> [b2Body.cpp <399:42 399:46>]
REFERENCE_TYPE_USAGE bool b2Body::ShouldCollide(const b2Body *) const -> b2Body [b2Body.cpp <399:34 399:39>]
REFERENCE_USAGE bool b2Body::ShouldCollide(const b2Body *) const -> b2BodyType b2Body::m_type [b2Body.cpp <402:6 402:11>]
REFERENCE_USAGE bool b2Body::ShouldCollide(const b2Body *) const -> b2BodyType::b2_dynamicBody [b2Body.cpp <402:16 402:29>]
REFERENCE_USAGE bool b2Body::ShouldCollide(const b2Body *) const -> b2BodyType b2Body::m_type [b2Body.cpp <402:41 402:46>]
LOCAL_SYMBOL: b2Body.cpp<399:42> [b2Body.cpp <402:34 402:38>]
REFERENCE_USAGE bool b2Body::ShouldCollide(const b2Body *) const -> b2BodyType::b2_dynamicBody [b2Body.cpp <402:51 402:64>]
LOCAL_SYMBOL: b2Body.cpp<408:20> [b2Body.cpp <408:20 408:21>]
REFERENCE_TYPE_USAGE bool b2Body::ShouldCollide(const b2Body *) const -> b2JointEdge [b2Body.cpp <408:7 408:17>]
REFERENCE_USAGE bool b2Body::ShouldCollide(const b2Body *) const -> b2JointEdge * b2Body::m_jointList [b2Body.cpp <408:25 408:35>]
LOCAL_SYMBOL: b2Body.cpp<408:20> [b2Body.cpp <408:38 408:39>]
LOCAL_SYMBOL: b2Body.cpp<408:20> [b2Body.cpp <408:42 408:43>]
REFERENCE_USAGE bool b2Body::ShouldCollide(const b2Body *) const -> b2JointEdge * b2JointEdge::next [b2Body.cpp <408:51 408:54>]
LOCAL_SYMBOL: b2Body.cpp<408:20> [b2Body.cpp <408:47 408:48>]
REFERENCE_USAGE bool b2Body::ShouldCollide(const b2Body *) const -> b2Body * b2JointEdge::other [b2Body.cpp <410:11 410:15>]
LOCAL_SYMBOL: b2Body.cpp<408:20> [b2Body.cpp <410:7 410:8>]
LOCAL_SYMBOL: b2Body.cpp<399:42> [b2Body.cpp <410:20 410:24>]
REFERENCE_USAGE bool b2Body::ShouldCollide(const b2Body *) const -> bool b2Joint::m_collideConnected [b2Body.cpp <412:19 412:36>]
REFERENCE_USAGE bool b2Body::ShouldCollide(const b2Body *) const -> b2Joint * b2JointEdge::joint [b2Body.cpp <412:12 412:16>]
LOCAL_SYMBOL: b2Body.cpp<408:20> [b2Body.cpp <412:8 412:9>]
SYMBOL_METHOD public void b2Body::SetTransform(const b2Vec2 &, float32) [b2Body.cpp <422:1 <422:14 422:25> 444:1>]
QUALIFIER: b2Body [b2Body.cpp <422:6 422:11>]
REFERENCE_TYPE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> void [b2Body.cpp <422:1 422:4>]
LOCAL_SYMBOL: b2Body.cpp<422:41> [b2Body.cpp <422:41 422:48>]
REFERENCE_TYPE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Vec2 [b2Body.cpp <422:33 422:38>]
LOCAL_SYMBOL: b2Body.cpp<422:59> [b2Body.cpp <422:59 422:63>]
REFERENCE_TYPE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> float32 [b2Body.cpp <422:51 422:57>]
REFERENCE_CALL void b2Body::SetTransform(const b2Vec2 &, float32) -> bool b2World::IsLocked() const [b2Body.cpp <424:20 424:27>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2World * b2Body::m_world [b2Body.cpp <424:11 424:17>]
REFERENCE_CALL void b2Body::SetTransform(const b2Vec2 &, float32) -> bool b2World::IsLocked() const [b2Body.cpp <425:15 425:22>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2World * b2Body::m_world [b2Body.cpp <425:6 425:12>]
REFERENCE_CALL void b2Body::SetTransform(const b2Vec2 &, float32) -> void b2Rot::Set(float32) [b2Body.cpp <430:9 430:11>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Rot b2Transform::q [b2Body.cpp <430:7 430:7>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Transform b2Body::m_xf [b2Body.cpp <430:2 430:5>]
LOCAL_SYMBOL: b2Body.cpp<422:59> [b2Body.cpp <430:13 430:17>]
REFERENCE_CALL void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Body.cpp <431:9 431:9>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Vec2 b2Transform::p [b2Body.cpp <431:7 431:7>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Transform b2Body::m_xf [b2Body.cpp <431:2 431:5>]
LOCAL_SYMBOL: b2Body.cpp<422:41> [b2Body.cpp <431:11 431:18>]
REFERENCE_CALL void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Body.cpp <433:12 433:12>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Vec2 b2Sweep::c [b2Body.cpp <433:10 433:10>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Sweep b2Body::m_sweep [b2Body.cpp <433:2 433:8>]
REFERENCE_CALL void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Vec2 b2Mul(const b2Transform &, const b2Vec2 &) [b2Body.cpp <433:14 433:18>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Transform b2Body::m_xf [b2Body.cpp <433:20 433:23>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Vec2 b2Sweep::localCenter [b2Body.cpp <433:34 433:44>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Sweep b2Body::m_sweep [b2Body.cpp <433:26 433:32>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> float32 b2Sweep::a [b2Body.cpp <434:10 434:10>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Sweep b2Body::m_sweep [b2Body.cpp <434:2 434:8>]
LOCAL_SYMBOL: b2Body.cpp<422:59> [b2Body.cpp <434:14 434:18>]
REFERENCE_CALL void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2Body.cpp <436:13 436:13>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Vec2 b2Sweep::c0 [b2Body.cpp <436:10 436:11>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Sweep b2Body::m_sweep [b2Body.cpp <436:2 436:8>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Vec2 b2Sweep::c [b2Body.cpp <436:23 436:23>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Sweep b2Body::m_sweep [b2Body.cpp <436:15 436:21>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> float32 b2Sweep::a0 [b2Body.cpp <437:10 437:11>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Sweep b2Body::m_sweep [b2Body.cpp <437:2 437:8>]
LOCAL_SYMBOL: b2Body.cpp<422:59> [b2Body.cpp <437:15 437:19>]
LOCAL_SYMBOL: b2Body.cpp<439:16> [b2Body.cpp <439:16 439:25>]
REFERENCE_TYPE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2BroadPhase [b2Body.cpp <439:2 439:13>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2BroadPhase b2ContactManager::m_broadPhase [b2Body.cpp <439:56 439:67>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2ContactManager b2World::m_contactManager [b2Body.cpp <439:39 439:54>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2World * b2Body::m_world [b2Body.cpp <439:30 439:36>]
LOCAL_SYMBOL: b2Body.cpp<440:18> [b2Body.cpp <440:18 440:18>]
REFERENCE_TYPE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Fixture [b2Body.cpp <440:7 440:15>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Fixture * b2Body::m_fixtureList [b2Body.cpp <440:22 440:34>]
LOCAL_SYMBOL: b2Body.cpp<440:18> [b2Body.cpp <440:37 440:37>]
LOCAL_SYMBOL: b2Body.cpp<440:18> [b2Body.cpp <440:40 440:40>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Fixture * b2Fixture::m_next [b2Body.cpp <440:47 440:52>]
LOCAL_SYMBOL: b2Body.cpp<440:18> [b2Body.cpp <440:44 440:44>]
SYMBOL_FUNCTION void b2Fixture::Synchronize(b2BroadPhase *, const b2Transform &, const b2Transform &)
REFERENCE_CALL void b2Body::SetTransform(const b2Vec2 &, float32) -> void b2Fixture::Synchronize(b2BroadPhase *, const b2Transform &, const b2Transform &) [b2Body.cpp <442:6 442:16>]
LOCAL_SYMBOL: b2Body.cpp<440:18> [b2Body.cpp <442:3 442:3>]
LOCAL_SYMBOL: b2Body.cpp<439:16> [b2Body.cpp <442:18 442:27>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Transform b2Body::m_xf [b2Body.cpp <442:30 442:33>]
REFERENCE_USAGE void b2Body::SetTransform(const b2Vec2 &, float32) -> b2Transform b2Body::m_xf [b2Body.cpp <442:36 442:39>]
SYMBOL_METHOD private void b2Body::SynchronizeFixtures() [b2Body.cpp <446:1 <446:14 446:32> 457:1>]
QUALIFIER: b2Body [b2Body.cpp <446:6 446:11>]
REFERENCE_TYPE_USAGE void b2Body::SynchronizeFixtures() -> void [b2Body.cpp <446:1 446:4>]
LOCAL_SYMBOL: b2Body.cpp<448:14> [b2Body.cpp <448:14 448:16>]
REFERENCE_TYPE_USAGE void b2Body::SynchronizeFixtures() -> b2Transform [b2Body.cpp <448:2 448:12>]
REFERENCE_CALL void b2Body::SynchronizeFixtures() -> void b2Transform::b2Transform() [b2Body.cpp <448:14 448:16>]
REFERENCE_CALL void b2Body::SynchronizeFixtures() -> void b2Rot::Set(float32) [b2Body.cpp <449:8 449:10>]
REFERENCE_USAGE void b2Body::SynchronizeFixtures() -> b2Rot b2Transform::q [b2Body.cpp <449:6 449:6>]
LOCAL_SYMBOL: b2Body.cpp<448:14> [b2Body.cpp <449:2 449:4>]
REFERENCE_USAGE void b2Body::SynchronizeFixtures() -> float32 b2Sweep::a0 [b2Body.cpp <449:20 449:21>]
REFERENCE_USAGE void b2Body::SynchronizeFixtures() -> b2Sweep b2Body::m_sweep [b2Body.cpp <449:12 449:18>]
REFERENCE_CALL void b2Body::SynchronizeFixtures() -> b2Vec2 & b2Vec2::operator=(b2Vec2 &&) [b2Body.cpp <450:8 450:8>]
REFERENCE_USAGE void b2Body::SynchronizeFixtures() -> b2Vec2 b2Transform::p [b2Body.cpp <450:6 450:6>]
LOCAL_SYMBOL: b2Body.cpp<448:14> [b2Body.cpp <450:2 450:4>]
REFERENCE_CALL void b2Body::SynchronizeFixtures() -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2Body.cpp <450:21 450:21>]
REFERENCE_USAGE void b2Body::SynchronizeFixtures() -> b2Vec2 b2Sweep::c0 [b2Body.cpp <450:18 450:19>]
REFERENCE_USAGE void b2Body::SynchronizeFixtures() -> b2Sweep b2Body::m_sweep [b2Body.cpp <450:10 450:16>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL void b2Body::SynchronizeFixtures() -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2Body.cpp <450:23 450:27>]
REFERENCE_USAGE void b2Body::SynchronizeFixtures() -> b2Rot b2Transform::q [b2Body.cpp <450:33 450:33>]
LOCAL_SYMBOL: b2Body.cpp<448:14> [b2Body.cpp <450:29 450:31>]
REFERENCE_USAGE void b2Body::SynchronizeFixtures() -> b2Vec2 b2Sweep::localCenter [b2Body.cpp <450:44 450:54>]
REFERENCE_USAGE void b2Body::SynchronizeFixtures() -> b2Sweep b2Body::m_sweep [b2Body.cpp <450:36 450:42>]
LOCAL_SYMBOL: b2Body.cpp<452:16> [b2Body.cpp <452:16 452:25>]
REFERENCE_TYPE_USAGE void b2Body::SynchronizeFixtures() -> b2BroadPhase [b2Body.cpp <452:2 452:13>]
REFERENCE_USAGE void b2Body::SynchronizeFixtures() -> b2BroadPhase b2ContactManager::m_broadPhase [b2Body.cpp <452:56 452:67>]
REFERENCE_USAGE void b2Body::SynchronizeFixtures() -> b2ContactManager b2World::m_contactManager [b2Body.cpp <452:39 452:54>]
REFERENCE_USAGE void b2Body::SynchronizeFixtures() -> b2World * b2Body::m_world [b2Body.cpp <452:30 452:36>]
LOCAL_SYMBOL: b2Body.cpp<453:18> [b2Body.cpp <453:18 453:18>]
REFERENCE_TYPE_USAGE void b2Body::SynchronizeFixtures() -> b2Fixture [b2Body.cpp <453:7 453:15>]
REFERENCE_USAGE void b2Body::SynchronizeFixtures() -> b2Fixture * b2Body::m_fixtureList [b2Body.cpp <453:22 453:34>]
LOCAL_SYMBOL: b2Body.cpp<453:18> [b2Body.cpp <453:37 453:37>]
LOCAL_SYMBOL: b2Body.cpp<453:18> [b2Body.cpp <453:40 453:40>]
REFERENCE_USAGE void b2Body::SynchronizeFixtures() -> b2Fixture * b2Fixture::m_next [b2Body.cpp <453:47 453:52>]
LOCAL_SYMBOL: b2Body.cpp<453:18> [b2Body.cpp <453:44 453:44>]
REFERENCE_CALL void b2Body::SynchronizeFixtures() -> void b2Fixture::Synchronize(b2BroadPhase *, const b2Transform &, const b2Transform &) [b2Body.cpp <455:6 455:16>]
LOCAL_SYMBOL: b2Body.cpp<453:18> [b2Body.cpp <455:3 455:3>]
LOCAL_SYMBOL: b2Body.cpp<452:16> [b2Body.cpp <455:18 455:27>]
LOCAL_SYMBOL: b2Body.cpp<448:14> [b2Body.cpp <455:30 455:32>]
REFERENCE_USAGE void b2Body::SynchronizeFixtures() -> b2Transform b2Body::m_xf [b2Body.cpp <455:35 455:38>]
SYMBOL_METHOD public void b2Body::SetActive(bool) [b2Body.cpp <459:1 <459:14 459:22> 502:1>]
QUALIFIER: b2Body [b2Body.cpp <459:6 459:11>]
REFERENCE_TYPE_USAGE void b2Body::SetActive(bool) -> void [b2Body.cpp <459:1 459:4>]
LOCAL_SYMBOL: b2Body.cpp<459:29> [b2Body.cpp <459:29 459:32>]
REFERENCE_TYPE_USAGE void b2Body::SetActive(bool) -> bool [b2Body.cpp <459:24 459:27>]
REFERENCE_CALL void b2Body::SetActive(bool) -> bool b2World::IsLocked() const [b2Body.cpp <461:20 461:27>]
REFERENCE_USAGE void b2Body::SetActive(bool) -> b2World * b2Body::m_world [b2Body.cpp <461:11 461:17>]
LOCAL_SYMBOL: b2Body.cpp<459:29> [b2Body.cpp <463:6 463:9>]
SYMBOL_FUNCTION bool b2Body::IsActive() const
REFERENCE_CALL void b2Body::SetActive(bool) -> bool b2Body::IsActive() const [b2Body.cpp <463:14 463:21>]
LOCAL_SYMBOL: b2Body.cpp<459:29> [b2Body.cpp <468:6 468:9>]
REFERENCE_USAGE void b2Body::SetActive(bool) -> uint16 b2Body::m_flags [b2Body.cpp <470:3 470:9>]
REFERENCE_USAGE void b2Body::SetActive(bool) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_activeFlag [b2Body.cpp <470:14 470:25>]
LOCAL_SYMBOL: b2Body.cpp<473:17> [b2Body.cpp <473:17 473:26>]
REFERENCE_TYPE_USAGE void b2Body::SetActive(bool) -> b2BroadPhase [b2Body.cpp <473:3 473:14>]
REFERENCE_USAGE void b2Body::SetActive(bool) -> b2BroadPhase b2ContactManager::m_broadPhase [b2Body.cpp <473:57 473:68>]
REFERENCE_USAGE void b2Body::SetActive(bool) -> b2ContactManager b2World::m_contactManager [b2Body.cpp <473:40 473:55>]
REFERENCE_USAGE void b2Body::SetActive(bool) -> b2World * b2Body::m_world [b2Body.cpp <473:31 473:37>]
LOCAL_SYMBOL: b2Body.cpp<474:19> [b2Body.cpp <474:19 474:19>]
REFERENCE_TYPE_USAGE void b2Body::SetActive(bool) -> b2Fixture [b2Body.cpp <474:8 474:16>]
REFERENCE_USAGE void b2Body::SetActive(bool) -> b2Fixture * b2Body::m_fixtureList [b2Body.cpp <474:23 474:35>]
LOCAL_SYMBOL: b2Body.cpp<474:19> [b2Body.cpp <474:38 474:38>]
LOCAL_SYMBOL: b2Body.cpp<474:19> [b2Body.cpp <474:41 474:41>]
REFERENCE_USAGE void b2Body::SetActive(bool) -> b2Fixture * b2Fixture::m_next [b2Body.cpp <474:48 474:53>]
LOCAL_SYMBOL: b2Body.cpp<474:19> [b2Body.cpp <474:45 474:45>]
REFERENCE_CALL void b2Body::SetActive(bool) -> void b2Fixture::CreateProxies(b2BroadPhase *, const b2Transform &) [b2Body.cpp <476:7 476:19>]
LOCAL_SYMBOL: b2Body.cpp<474:19> [b2Body.cpp <476:4 476:4>]
LOCAL_SYMBOL: b2Body.cpp<473:17> [b2Body.cpp <476:21 476:30>]
REFERENCE_USAGE void b2Body::SetActive(bool) -> b2Transform b2Body::m_xf [b2Body.cpp <476:33 476:36>]
REFERENCE_USAGE void b2Body::SetActive(bool) -> uint16 b2Body::m_flags [b2Body.cpp <483:3 483:9>]
REFERENCE_USAGE void b2Body::SetActive(bool) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_activeFlag [b2Body.cpp <483:15 483:26>]
LOCAL_SYMBOL: b2Body.cpp<486:17> [b2Body.cpp <486:17 486:26>]
REFERENCE_TYPE_USAGE void b2Body::SetActive(bool) -> b2BroadPhase [b2Body.cpp <486:3 486:14>]
REFERENCE_USAGE void b2Body::SetActive(bool) -> b2BroadPhase b2ContactManager::m_broadPhase [b2Body.cpp <486:57 486:68>]
REFERENCE_USAGE void b2Body::SetActive(bool) -> b2ContactManager b2World::m_contactManager [b2Body.cpp <486:40 486:55>]
REFERENCE_USAGE void b2Body::SetActive(bool) -> b2World * b2Body::m_world [b2Body.cpp <486:31 486:37>]
LOCAL_SYMBOL: b2Body.cpp<487:19> [b2Body.cpp <487:19 487:19>]
REFERENCE_TYPE_USAGE void b2Body::SetActive(bool) -> b2Fixture [b2Body.cpp <487:8 487:16>]
REFERENCE_USAGE void b2Body::SetActive(bool) -> b2Fixture * b2Body::m_fixtureList [b2Body.cpp <487:23 487:35>]
LOCAL_SYMBOL: b2Body.cpp<487:19> [b2Body.cpp <487:38 487:38>]
LOCAL_SYMBOL: b2Body.cpp<487:19> [b2Body.cpp <487:41 487:41>]
REFERENCE_USAGE void b2Body::SetActive(bool) -> b2Fixture * b2Fixture::m_next [b2Body.cpp <487:48 487:53>]
LOCAL_SYMBOL: b2Body.cpp<487:19> [b2Body.cpp <487:45 487:45>]
REFERENCE_CALL void b2Body::SetActive(bool) -> void b2Fixture::DestroyProxies(b2BroadPhase *) [b2Body.cpp <489:7 489:20>]
LOCAL_SYMBOL: b2Body.cpp<487:19> [b2Body.cpp <489:4 489:4>]
LOCAL_SYMBOL: b2Body.cpp<486:17> [b2Body.cpp <489:22 489:31>]
LOCAL_SYMBOL: b2Body.cpp<493:18> [b2Body.cpp <493:18 493:19>]
REFERENCE_TYPE_USAGE void b2Body::SetActive(bool) -> b2ContactEdge [b2Body.cpp <493:3 493:15>]
REFERENCE_USAGE void b2Body::SetActive(bool) -> b2ContactEdge * b2Body::m_contactList [b2Body.cpp <493:23 493:35>]
LOCAL_SYMBOL: b2Body.cpp<493:18> [b2Body.cpp <494:10 494:11>]
LOCAL_SYMBOL: b2Body.cpp<496:19> [b2Body.cpp <496:19 496:21>]
REFERENCE_TYPE_USAGE void b2Body::SetActive(bool) -> b2ContactEdge [b2Body.cpp <496:4 496:16>]
LOCAL_SYMBOL: b2Body.cpp<493:18> [b2Body.cpp <496:25 496:26>]
LOCAL_SYMBOL: b2Body.cpp<493:18> [b2Body.cpp <497:4 497:5>]
REFERENCE_USAGE void b2Body::SetActive(bool) -> b2ContactEdge * b2ContactEdge::next [b2Body.cpp <497:13 497:16>]
LOCAL_SYMBOL: b2Body.cpp<493:18> [b2Body.cpp <497:9 497:10>]
REFERENCE_CALL void b2Body::SetActive(bool) -> void b2ContactManager::Destroy(b2Contact *) [b2Body.cpp <498:30 498:36>]
REFERENCE_USAGE void b2Body::SetActive(bool) -> b2ContactManager b2World::m_contactManager [b2Body.cpp <498:13 498:28>]
REFERENCE_USAGE void b2Body::SetActive(bool) -> b2World * b2Body::m_world [b2Body.cpp <498:4 498:10>]
REFERENCE_USAGE void b2Body::SetActive(bool) -> b2Contact * b2ContactEdge::contact [b2Body.cpp <498:43 498:49>]
LOCAL_SYMBOL: b2Body.cpp<496:19> [b2Body.cpp <498:38 498:40>]
REFERENCE_USAGE void b2Body::SetActive(bool) -> b2ContactEdge * b2Body::m_contactList [b2Body.cpp <500:3 500:15>]
SYMBOL_METHOD public void b2Body::SetFixedRotation(bool) [b2Body.cpp <504:1 <504:14 504:29> 524:1>]
QUALIFIER: b2Body [b2Body.cpp <504:6 504:11>]
REFERENCE_TYPE_USAGE void b2Body::SetFixedRotation(bool) -> void [b2Body.cpp <504:1 504:4>]
LOCAL_SYMBOL: b2Body.cpp<504:36> [b2Body.cpp <504:36 504:39>]
REFERENCE_TYPE_USAGE void b2Body::SetFixedRotation(bool) -> bool [b2Body.cpp <504:31 504:34>]
LOCAL_SYMBOL: b2Body.cpp<506:7> [b2Body.cpp <506:7 506:12>]
REFERENCE_TYPE_USAGE void b2Body::SetFixedRotation(bool) -> bool [b2Body.cpp <506:2 506:5>]
REFERENCE_USAGE void b2Body::SetFixedRotation(bool) -> uint16 b2Body::m_flags [b2Body.cpp <506:17 506:23>]
REFERENCE_USAGE void b2Body::SetFixedRotation(bool) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_fixedRotationFlag [b2Body.cpp <506:27 506:45>]
REFERENCE_USAGE void b2Body::SetFixedRotation(bool) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_fixedRotationFlag [b2Body.cpp <506:51 506:69>]
LOCAL_SYMBOL: b2Body.cpp<506:7> [b2Body.cpp <507:6 507:11>]
LOCAL_SYMBOL: b2Body.cpp<504:36> [b2Body.cpp <507:16 507:19>]
LOCAL_SYMBOL: b2Body.cpp<504:36> [b2Body.cpp <512:6 512:9>]
REFERENCE_USAGE void b2Body::SetFixedRotation(bool) -> uint16 b2Body::m_flags [b2Body.cpp <514:3 514:9>]
REFERENCE_USAGE void b2Body::SetFixedRotation(bool) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_fixedRotationFlag [b2Body.cpp <514:14 514:32>]
REFERENCE_USAGE void b2Body::SetFixedRotation(bool) -> uint16 b2Body::m_flags [b2Body.cpp <518:3 518:9>]
REFERENCE_USAGE void b2Body::SetFixedRotation(bool) -> b2Body::anonymous enum (b2Body.h<413:2>)::e_fixedRotationFlag [b2Body.cpp <518:15 518:33>]
REFERENCE_USAGE void b2Body::SetFixedRotation(bool) -> float32 b2Body::m_angularVelocity [b2Body.cpp <521:2 521:18>]
REFERENCE_CALL void b2Body::SetFixedRotation(bool) -> void b2Body::ResetMassData() [b2Body.cpp <523:2 523:14>]
SYMBOL_METHOD public void b2Body::Dump() [b2Body.cpp <526:1 <526:14 526:17> 554:1>]
QUALIFIER: b2Body [b2Body.cpp <526:6 526:11>]
REFERENCE_TYPE_USAGE void b2Body::Dump() -> void [b2Body.cpp <526:1 526:4>]
LOCAL_SYMBOL: b2Body.cpp<528:8> [b2Body.cpp <528:8 528:16>]
REFERENCE_TYPE_USAGE void b2Body::Dump() -> int32 [b2Body.cpp <528:2 528:6>]
REFERENCE_USAGE void b2Body::Dump() -> int32 b2Body::m_islandIndex [b2Body.cpp <528:20 528:32>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2Body::Dump() -> void b2Log(const char *) [b2Body.cpp <530:2 530:6>]
REFERENCE_CALL void b2Body::Dump() -> void b2Log(const char *) [b2Body.cpp <531:2 531:6>]
REFERENCE_CALL void b2Body::Dump() -> void b2Log(const char *) [b2Body.cpp <532:2 532:6>]
REFERENCE_USAGE void b2Body::Dump() -> b2BodyType b2Body::m_type [b2Body.cpp <532:41 532:46>]
REFERENCE_CALL void b2Body::Dump() -> void b2Log(const char *) [b2Body.cpp <533:2 533:6>]
REFERENCE_USAGE void b2Body::Dump() -> float32 b2Vec2::x [b2Body.cpp <533:57 533:57>]
REFERENCE_USAGE void b2Body::Dump() -> b2Vec2 b2Transform::p [b2Body.cpp <533:55 533:55>]
REFERENCE_USAGE void b2Body::Dump() -> b2Transform b2Body::m_xf [b2Body.cpp <533:50 533:53>]
REFERENCE_USAGE void b2Body::Dump() -> float32 b2Vec2::y [b2Body.cpp <533:67 533:67>]
REFERENCE_USAGE void b2Body::Dump() -> b2Vec2 b2Transform::p [b2Body.cpp <533:65 533:65>]
REFERENCE_USAGE void b2Body::Dump() -> b2Transform b2Body::m_xf [b2Body.cpp <533:60 533:63>]
REFERENCE_CALL void b2Body::Dump() -> void b2Log(const char *) [b2Body.cpp <534:2 534:6>]
REFERENCE_USAGE void b2Body::Dump() -> float32 b2Sweep::a [b2Body.cpp <534:43 534:43>]
REFERENCE_USAGE void b2Body::Dump() -> b2Sweep b2Body::m_sweep [b2Body.cpp <534:35 534:41>]
REFERENCE_CALL void b2Body::Dump() -> void b2Log(const char *) [b2Body.cpp <535:2 535:6>]
REFERENCE_USAGE void b2Body::Dump() -> float32 b2Vec2::x [b2Body.cpp <535:73 535:73>]
REFERENCE_USAGE void b2Body::Dump() -> b2Vec2 b2Body::m_linearVelocity [b2Body.cpp <535:56 535:71>]
REFERENCE_USAGE void b2Body::Dump() -> float32 b2Vec2::y [b2Body.cpp <535:93 535:93>]
REFERENCE_USAGE void b2Body::Dump() -> b2Vec2 b2Body::m_linearVelocity [b2Body.cpp <535:76 535:91>]
REFERENCE_CALL void b2Body::Dump() -> void b2Log(const char *) [b2Body.cpp <536:2 536:6>]
REFERENCE_USAGE void b2Body::Dump() -> float32 b2Body::m_angularVelocity [b2Body.cpp <536:45 536:61>]
REFERENCE_CALL void b2Body::Dump() -> void b2Log(const char *) [b2Body.cpp <537:2 537:6>]
REFERENCE_USAGE void b2Body::Dump() -> float32 b2Body::m_linearDamping [b2Body.cpp <537:43 537:57>]
REFERENCE_CALL void b2Body::Dump() -> void b2Log(const char *) [b2Body.cpp <538:2 538:6>]
REFERENCE_USAGE void b2Body::Dump() -> float32 b2Body::m_angularDamping [b2Body.cpp <538:44 538:59>]
REFERENCE_CALL void b2Body::Dump() -> void b2Log(const char *) [b2Body.cpp <539:2 539:6>]
REFERENCE_USAGE void b2Body::Dump() -> uint16 b2Body::m_flags [b2Body.cpp <539:41 539:47>]
REFERENCE_USAGE void b2Body::Dump() -> b2Body::anonymous enum (b2Body.h<413:2>)::e_autoSleepFlag [b2Body.cpp <539:51 539:65>]
REFERENCE_CALL void b2Body::Dump() -> void b2Log(const char *) [b2Body.cpp <540:2 540:6>]
REFERENCE_USAGE void b2Body::Dump() -> uint16 b2Body::m_flags [b2Body.cpp <540:36 540:42>]
REFERENCE_USAGE void b2Body::Dump() -> b2Body::anonymous enum (b2Body.h<413:2>)::e_awakeFlag [b2Body.cpp <540:46 540:56>]
REFERENCE_CALL void b2Body::Dump() -> void b2Log(const char *) [b2Body.cpp <541:2 541:6>]
REFERENCE_USAGE void b2Body::Dump() -> uint16 b2Body::m_flags [b2Body.cpp <541:44 541:50>]
REFERENCE_USAGE void b2Body::Dump() -> b2Body::anonymous enum (b2Body.h<413:2>)::e_fixedRotationFlag [b2Body.cpp <541:54 541:72>]
REFERENCE_CALL void b2Body::Dump() -> void b2Log(const char *) [b2Body.cpp <542:2 542:6>]
REFERENCE_USAGE void b2Body::Dump() -> uint16 b2Body::m_flags [b2Body.cpp <542:37 542:43>]
REFERENCE_USAGE void b2Body::Dump() -> b2Body::anonymous enum (b2Body.h<413:2>)::e_bulletFlag [b2Body.cpp <542:47 542:58>]
REFERENCE_CALL void b2Body::Dump() -> void b2Log(const char *) [b2Body.cpp <543:2 543:6>]
REFERENCE_USAGE void b2Body::Dump() -> uint16 b2Body::m_flags [b2Body.cpp <543:37 543:43>]
REFERENCE_USAGE void b2Body::Dump() -> b2Body::anonymous enum (b2Body.h<413:2>)::e_activeFlag [b2Body.cpp <543:47 543:58>]
REFERENCE_CALL void b2Body::Dump() -> void b2Log(const char *) [b2Body.cpp <544:2 544:6>]
REFERENCE_USAGE void b2Body::Dump() -> float32 b2Body::m_gravityScale [b2Body.cpp <544:42 544:55>]
REFERENCE_CALL void b2Body::Dump() -> void b2Log(const char *) [b2Body.cpp <545:2 545:6>]
REFERENCE_USAGE void b2Body::Dump() -> int32 b2Body::m_islandIndex [b2Body.cpp <545:54 545:66>]
REFERENCE_CALL void b2Body::Dump() -> void b2Log(const char *) [b2Body.cpp <546:2 546:6>]
LOCAL_SYMBOL: b2Body.cpp<547:18> [b2Body.cpp <547:18 547:18>]
REFERENCE_TYPE_USAGE void b2Body::Dump() -> b2Fixture [b2Body.cpp <547:7 547:15>]
REFERENCE_USAGE void b2Body::Dump() -> b2Fixture * b2Body::m_fixtureList [b2Body.cpp <547:22 547:34>]
LOCAL_SYMBOL: b2Body.cpp<547:18> [b2Body.cpp <547:37 547:37>]
LOCAL_SYMBOL: b2Body.cpp<547:18> [b2Body.cpp <547:40 547:40>]
REFERENCE_USAGE void b2Body::Dump() -> b2Fixture * b2Fixture::m_next [b2Body.cpp <547:47 547:52>]
LOCAL_SYMBOL: b2Body.cpp<547:18> [b2Body.cpp <547:44 547:44>]
REFERENCE_CALL void b2Body::Dump() -> void b2Log(const char *) [b2Body.cpp <549:3 549:7>]
SYMBOL_FUNCTION void b2Fixture::Dump(int32)
REFERENCE_CALL void b2Body::Dump() -> void b2Fixture::Dump(int32) [b2Body.cpp <550:6 550:9>]
LOCAL_SYMBOL: b2Body.cpp<547:18> [b2Body.cpp <550:3 550:3>]
LOCAL_SYMBOL: b2Body.cpp<528:8> [b2Body.cpp <550:11 550:19>]
REFERENCE_CALL void b2Body::Dump() -> void b2Log(const char *) [b2Body.cpp <551:3 551:7>]
REFERENCE_CALL void b2Body::Dump() -> void b2Log(const char *) [b2Body.cpp <553:2 553:6>]
