FILE: b2PulleyJoint.cpp
COMMENT: comment [b2PulleyJoint.cpp <1:1 17:3>]
COMMENT: comment [b2PulleyJoint.cpp <23:1 23:11>]
COMMENT: comment [b2PulleyJoint.cpp <24:1 24:27>]
COMMENT: comment [b2PulleyJoint.cpp <25:1 25:27>]
COMMENT: comment [b2PulleyJoint.cpp <26:1 26:44>]
COMMENT: comment [b2PulleyJoint.cpp <27:1 27:40>]
COMMENT: comment [b2PulleyJoint.cpp <28:1 28:34>]
COMMENT: comment [b2PulleyJoint.cpp <29:1 29:34>]
COMMENT: comment [b2PulleyJoint.cpp <30:1 30:77>]
COMMENT: comment [b2PulleyJoint.cpp <31:1 31:61>]
COMMENT: comment [b2PulleyJoint.cpp <32:1 32:21>]
COMMENT: comment [b2PulleyJoint.cpp <33:1 33:91>]
REFERENCE_MACRO_USAGE b2PulleyJoint.cpp -> b2Assert [b2PulleyJoint.cpp <51:2 51:9>]
REFERENCE_MACRO_USAGE b2PulleyJoint.cpp -> b2_epsilon [b2PulleyJoint.cpp <51:19 51:28>]
REFERENCE_MACRO_USAGE b2Settings.h -> FLT_EPSILON [b2Settings.h <43:21 43:31>]
REFERENCE_MACRO_USAGE b2Settings.h -> assert [b2Settings.h <31:21 31:26>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:23 34:31>]
REFERENCE_MACRO_USAGE vcruntime.h -> _CRT_WIDE_ [vcruntime.h <95:22 95:31>]
REFERENCE_MACRO_USAGE assert.h -> _CRT_WIDE [assert.h <34:47 34:55>]
REFERENCE_MACRO_USAGE assert.h -> __FILE__ [assert.h <34:57 34:64>]
REFERENCE_MACRO_USAGE assert.h -> __LINE__ [assert.h <34:79 34:86>]
REFERENCE_MACRO_USAGE b2PulleyJoint.cpp -> b2Assert [b2PulleyJoint.cpp <65:2 65:9>]
COMMENT: comment [b2PulleyJoint.cpp <99:2 99:25>]
REFERENCE_MACRO_USAGE b2PulleyJoint.cpp -> b2_linearSlop [b2PulleyJoint.cpp <106:24 106:36>]
REFERENCE_MACRO_USAGE b2PulleyJoint.cpp -> b2_linearSlop [b2PulleyJoint.cpp <115:24 115:36>]
COMMENT: comment [b2PulleyJoint.cpp <124:2 124:28>]
COMMENT: comment [b2PulleyJoint.cpp <140:3 140:52>]
COMMENT: comment [b2PulleyJoint.cpp <143:3 143:20>]
COMMENT: comment [b2PulleyJoint.cpp <202:2 202:25>]
REFERENCE_MACRO_USAGE b2PulleyJoint.cpp -> b2_linearSlop [b2PulleyJoint.cpp <209:24 209:36>]
REFERENCE_MACRO_USAGE b2PulleyJoint.cpp -> b2_linearSlop [b2PulleyJoint.cpp <218:24 218:36>]
COMMENT: comment [b2PulleyJoint.cpp <227:2 227:28>]
REFERENCE_MACRO_USAGE b2PulleyJoint.cpp -> b2_linearSlop [b2PulleyJoint.cpp <259:23 259:35>]
REFERENCE_MACRO_USAGE b2PulleyJoint.cpp -> B2_NOT_USED [b2PulleyJoint.cpp <280:2 280:12>]
SYMBOL_METHOD public void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) [b2PulleyJoint.cpp <35:1 <35:24 35:33> 52:1>]
SYMBOL_STRUCT b2PulleyJointDef
QUALIFIER: b2PulleyJointDef [b2PulleyJoint.cpp <35:6 35:21>]
SYMBOL_BUILTIN_TYPE void
REFERENCE_TYPE_USAGE void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> void [b2PulleyJoint.cpp <35:1 35:4>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<35:43> [b2PulleyJoint.cpp <35:43 35:44>]
REFERENCE_TYPE_USAGE void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Body [b2PulleyJoint.cpp <35:35 35:40>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<35:55> [b2PulleyJoint.cpp <35:55 35:56>]
REFERENCE_TYPE_USAGE void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Body [b2PulleyJoint.cpp <35:47 35:52>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<36:19> [b2PulleyJoint.cpp <36:19 36:25>]
REFERENCE_TYPE_USAGE void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Vec2 [b2PulleyJoint.cpp <36:11 36:16>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<36:42> [b2PulleyJoint.cpp <36:42 36:48>]
REFERENCE_TYPE_USAGE void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Vec2 [b2PulleyJoint.cpp <36:34 36:39>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<37:19> [b2PulleyJoint.cpp <37:19 37:25>]
REFERENCE_TYPE_USAGE void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Vec2 [b2PulleyJoint.cpp <37:11 37:16>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<37:42> [b2PulleyJoint.cpp <37:42 37:48>]
REFERENCE_TYPE_USAGE void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Vec2 [b2PulleyJoint.cpp <37:34 37:39>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<38:13> [b2PulleyJoint.cpp <38:13 38:13>]
REFERENCE_TYPE_USAGE void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> float32 [b2PulleyJoint.cpp <38:5 38:11>]
REFERENCE_USAGE void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Body * b2JointDef::bodyA [b2PulleyJoint.cpp <40:2 40:6>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<35:43> [b2PulleyJoint.cpp <40:10 40:11>]
REFERENCE_USAGE void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Body * b2JointDef::bodyB [b2PulleyJoint.cpp <41:2 41:6>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<35:55> [b2PulleyJoint.cpp <41:10 41:11>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(const b2Vec2 &)
REFERENCE_CALL void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PulleyJoint.cpp <42:16 42:16>]
REFERENCE_USAGE void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Vec2 b2PulleyJointDef::groundAnchorA [b2PulleyJoint.cpp <42:2 42:14>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<36:19> [b2PulleyJoint.cpp <42:18 42:24>]
REFERENCE_CALL void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PulleyJoint.cpp <43:16 43:16>]
REFERENCE_USAGE void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Vec2 b2PulleyJointDef::groundAnchorB [b2PulleyJoint.cpp <43:2 43:14>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<36:42> [b2PulleyJoint.cpp <43:18 43:24>]
SYMBOL_FUNCTION b2Vec2 & b2Vec2::operator=(b2Vec2 &)
REFERENCE_CALL void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2PulleyJoint.cpp <44:15 44:15>]
REFERENCE_USAGE void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Vec2 b2PulleyJointDef::localAnchorA [b2PulleyJoint.cpp <44:2 44:13>]
SYMBOL_FUNCTION b2Vec2 b2Body::GetLocalPoint(const b2Vec2 &) const
REFERENCE_CALL void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Vec2 b2Body::GetLocalPoint(const b2Vec2 &) const [b2PulleyJoint.cpp <44:24 44:36>]
REFERENCE_USAGE void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Body * b2JointDef::bodyA [b2PulleyJoint.cpp <44:17 44:21>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<37:19> [b2PulleyJoint.cpp <44:38 44:44>]
REFERENCE_CALL void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2PulleyJoint.cpp <45:15 45:15>]
REFERENCE_USAGE void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Vec2 b2PulleyJointDef::localAnchorB [b2PulleyJoint.cpp <45:2 45:13>]
REFERENCE_CALL void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Vec2 b2Body::GetLocalPoint(const b2Vec2 &) const [b2PulleyJoint.cpp <45:24 45:36>]
REFERENCE_USAGE void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Body * b2JointDef::bodyB [b2PulleyJoint.cpp <45:17 45:21>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<37:42> [b2PulleyJoint.cpp <45:38 45:44>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<46:9> [b2PulleyJoint.cpp <46:9 46:10>]
REFERENCE_TYPE_USAGE void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Vec2 [b2PulleyJoint.cpp <46:2 46:7>]
SYMBOL_FUNCTION b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <46:22 46:22>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<37:19> [b2PulleyJoint.cpp <46:14 46:20>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<36:19> [b2PulleyJoint.cpp <46:24 46:30>]
REFERENCE_USAGE void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> float32 b2PulleyJointDef::lengthA [b2PulleyJoint.cpp <47:2 47:8>]
SYMBOL_FUNCTION float32 b2Vec2::Length() const
REFERENCE_CALL void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> float32 b2Vec2::Length() const [b2PulleyJoint.cpp <47:15 47:20>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<46:9> [b2PulleyJoint.cpp <47:12 47:13>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<48:9> [b2PulleyJoint.cpp <48:9 48:10>]
REFERENCE_TYPE_USAGE void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Vec2 [b2PulleyJoint.cpp <48:2 48:7>]
REFERENCE_CALL void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <48:22 48:22>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<37:42> [b2PulleyJoint.cpp <48:14 48:20>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<36:42> [b2PulleyJoint.cpp <48:24 48:30>]
REFERENCE_USAGE void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> float32 b2PulleyJointDef::lengthB [b2PulleyJoint.cpp <49:2 49:8>]
REFERENCE_CALL void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> float32 b2Vec2::Length() const [b2PulleyJoint.cpp <49:15 49:20>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<48:9> [b2PulleyJoint.cpp <49:12 49:13>]
REFERENCE_USAGE void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> float32 b2PulleyJointDef::ratio [b2PulleyJoint.cpp <50:2 50:6>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<38:13> [b2PulleyJoint.cpp <50:10 50:10>]
REFERENCE_USAGE void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32) -> float32 b2PulleyJointDef::ratio [b2PulleyJoint.cpp <51:11 51:15>]
SYMBOL_METHOD protected void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) [b2PulleyJoint.cpp <54:1 <54:16 54:28> 71:1>]
SYMBOL_CLASS b2PulleyJoint
QUALIFIER: b2PulleyJoint [b2PulleyJoint.cpp <54:1 54:13>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<54:54> [b2PulleyJoint.cpp <54:54 54:56>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2PulleyJointDef [b2PulleyJoint.cpp <54:36 54:51>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2Joint [b2PulleyJoint.cpp <55:3 55:9>]
SYMBOL_FUNCTION void b2Joint::b2Joint(const b2JointDef *)
REFERENCE_CALL void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> void b2Joint::b2Joint(const b2JointDef *) [b2PulleyJoint.cpp <55:3 55:9>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<54:54> [b2PulleyJoint.cpp <55:11 55:13>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2Vec2 b2PulleyJoint::m_groundAnchorA [b2PulleyJoint.cpp <54:16 54:28>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2()
REFERENCE_CALL void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> void b2Vec2::b2Vec2() [b2PulleyJoint.cpp <54:16 54:28>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2Vec2 b2PulleyJoint::m_groundAnchorB [b2PulleyJoint.cpp <54:16 54:28>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2Vec2 b2PulleyJoint::m_localAnchorA [b2PulleyJoint.cpp <54:16 54:28>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2Vec2 b2PulleyJoint::m_localAnchorB [b2PulleyJoint.cpp <54:16 54:28>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2Vec2 b2PulleyJoint::m_uA [b2PulleyJoint.cpp <54:16 54:28>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2Vec2 b2PulleyJoint::m_uB [b2PulleyJoint.cpp <54:16 54:28>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2Vec2 b2PulleyJoint::m_rA [b2PulleyJoint.cpp <54:16 54:28>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2Vec2 b2PulleyJoint::m_rB [b2PulleyJoint.cpp <54:16 54:28>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2Vec2 b2PulleyJoint::m_localCenterA [b2PulleyJoint.cpp <54:16 54:28>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2Vec2 b2PulleyJoint::m_localCenterB [b2PulleyJoint.cpp <54:16 54:28>]
REFERENCE_CALL void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PulleyJoint.cpp <57:18 57:18>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2Vec2 b2PulleyJoint::m_groundAnchorA [b2PulleyJoint.cpp <57:2 57:16>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2Vec2 b2PulleyJointDef::groundAnchorA [b2PulleyJoint.cpp <57:25 57:37>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<54:54> [b2PulleyJoint.cpp <57:20 57:22>]
REFERENCE_CALL void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PulleyJoint.cpp <58:18 58:18>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2Vec2 b2PulleyJoint::m_groundAnchorB [b2PulleyJoint.cpp <58:2 58:16>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2Vec2 b2PulleyJointDef::groundAnchorB [b2PulleyJoint.cpp <58:25 58:37>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<54:54> [b2PulleyJoint.cpp <58:20 58:22>]
REFERENCE_CALL void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PulleyJoint.cpp <59:17 59:17>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2Vec2 b2PulleyJoint::m_localAnchorA [b2PulleyJoint.cpp <59:2 59:15>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2Vec2 b2PulleyJointDef::localAnchorA [b2PulleyJoint.cpp <59:24 59:35>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<54:54> [b2PulleyJoint.cpp <59:19 59:21>]
REFERENCE_CALL void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PulleyJoint.cpp <60:17 60:17>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2Vec2 b2PulleyJoint::m_localAnchorB [b2PulleyJoint.cpp <60:2 60:15>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> b2Vec2 b2PulleyJointDef::localAnchorB [b2PulleyJoint.cpp <60:24 60:35>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<54:54> [b2PulleyJoint.cpp <60:19 60:21>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> float32 b2PulleyJoint::m_lengthA [b2PulleyJoint.cpp <62:2 62:10>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> float32 b2PulleyJointDef::lengthA [b2PulleyJoint.cpp <62:19 62:25>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<54:54> [b2PulleyJoint.cpp <62:14 62:16>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> float32 b2PulleyJoint::m_lengthB [b2PulleyJoint.cpp <63:2 63:10>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> float32 b2PulleyJointDef::lengthB [b2PulleyJoint.cpp <63:19 63:25>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<54:54> [b2PulleyJoint.cpp <63:14 63:16>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> float32 b2PulleyJointDef::ratio [b2PulleyJoint.cpp <65:16 65:20>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<54:54> [b2PulleyJoint.cpp <65:11 65:13>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> float32 b2PulleyJoint::m_ratio [b2PulleyJoint.cpp <66:2 66:8>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> float32 b2PulleyJointDef::ratio [b2PulleyJoint.cpp <66:17 66:21>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<54:54> [b2PulleyJoint.cpp <66:12 66:14>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> float32 b2PulleyJoint::m_constant [b2PulleyJoint.cpp <68:2 68:11>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> float32 b2PulleyJointDef::lengthA [b2PulleyJoint.cpp <68:20 68:26>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<54:54> [b2PulleyJoint.cpp <68:15 68:17>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> float32 b2PulleyJoint::m_ratio [b2PulleyJoint.cpp <68:30 68:36>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> float32 b2PulleyJointDef::lengthB [b2PulleyJoint.cpp <68:45 68:51>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<54:54> [b2PulleyJoint.cpp <68:40 68:42>]
REFERENCE_USAGE void b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *) -> float32 b2PulleyJoint::m_impulse [b2PulleyJoint.cpp <70:2 70:10>]
SYMBOL_METHOD protected void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) [b2PulleyJoint.cpp <73:1 <73:21 73:43> 161:1>]
SYMBOL_FUNCTION void b2Joint::InitVelocityConstraints(const b2SolverData &)
REFERENCE_OVERRIDE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Joint::InitVelocityConstraints(const b2SolverData &) [b2PulleyJoint.cpp <73:21 73:43>]
QUALIFIER: b2PulleyJoint [b2PulleyJoint.cpp <73:6 73:18>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> void [b2PulleyJoint.cpp <73:1 73:4>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<73:65> [b2PulleyJoint.cpp <73:65 73:68>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2SolverData [b2PulleyJoint.cpp <73:51 73:62>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexA [b2PulleyJoint.cpp <75:2 75:9>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2Body::m_islandIndex [b2PulleyJoint.cpp <75:22 75:34>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2PulleyJoint.cpp <75:13 75:19>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexB [b2PulleyJoint.cpp <76:2 76:9>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2Body::m_islandIndex [b2PulleyJoint.cpp <76:22 76:34>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2PulleyJoint.cpp <76:13 76:19>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PulleyJoint.cpp <77:17 77:17>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_localCenterA [b2PulleyJoint.cpp <77:2 77:15>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Sweep::localCenter [b2PulleyJoint.cpp <77:36 77:46>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Sweep b2Body::m_sweep [b2PulleyJoint.cpp <77:28 77:34>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2PulleyJoint.cpp <77:19 77:25>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PulleyJoint.cpp <78:17 78:17>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_localCenterB [b2PulleyJoint.cpp <78:2 78:15>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Sweep::localCenter [b2PulleyJoint.cpp <78:36 78:46>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Sweep b2Body::m_sweep [b2PulleyJoint.cpp <78:28 78:34>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2PulleyJoint.cpp <78:19 78:25>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invMassA [b2PulleyJoint.cpp <79:2 79:11>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invMass [b2PulleyJoint.cpp <79:24 79:32>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2PulleyJoint.cpp <79:15 79:21>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invMassB [b2PulleyJoint.cpp <80:2 80:11>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invMass [b2PulleyJoint.cpp <80:24 80:32>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2PulleyJoint.cpp <80:15 80:21>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invIA [b2PulleyJoint.cpp <81:2 81:8>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invI [b2PulleyJoint.cpp <81:21 81:26>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyA [b2PulleyJoint.cpp <81:12 81:18>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invIB [b2PulleyJoint.cpp <82:2 82:8>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Body::m_invI [b2PulleyJoint.cpp <82:21 82:26>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Body * b2Joint::m_bodyB [b2PulleyJoint.cpp <82:12 82:18>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<84:9> [b2PulleyJoint.cpp <84:9 84:10>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PulleyJoint.cpp <84:2 84:7>]
SYMBOL_FUNCTION void b2Vec2::b2Vec2(const b2Vec2 &)
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PulleyJoint.cpp <84:39 84:39>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2PulleyJoint.cpp <84:39 84:39>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PulleyJoint.cpp <84:19 84:27>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<73:65> [b2PulleyJoint.cpp <84:14 84:17>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexA [b2PulleyJoint.cpp <84:29 84:36>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<85:10> [b2PulleyJoint.cpp <85:10 85:11>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <85:2 85:8>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Position::a [b2PulleyJoint.cpp <85:40 85:40>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PulleyJoint.cpp <85:20 85:28>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<73:65> [b2PulleyJoint.cpp <85:15 85:18>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexA [b2PulleyJoint.cpp <85:30 85:37>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<86:9> [b2PulleyJoint.cpp <86:9 86:10>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PulleyJoint.cpp <86:2 86:7>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PulleyJoint.cpp <86:40 86:40>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2PulleyJoint.cpp <86:40 86:40>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PulleyJoint.cpp <86:19 86:28>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<73:65> [b2PulleyJoint.cpp <86:14 86:17>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexA [b2PulleyJoint.cpp <86:30 86:37>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<87:10> [b2PulleyJoint.cpp <87:10 87:11>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <87:2 87:8>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2PulleyJoint.cpp <87:41 87:41>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PulleyJoint.cpp <87:20 87:29>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<73:65> [b2PulleyJoint.cpp <87:15 87:18>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexA [b2PulleyJoint.cpp <87:31 87:38>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<89:9> [b2PulleyJoint.cpp <89:9 89:10>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PulleyJoint.cpp <89:2 89:7>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PulleyJoint.cpp <89:39 89:39>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2PulleyJoint.cpp <89:39 89:39>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PulleyJoint.cpp <89:19 89:27>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<73:65> [b2PulleyJoint.cpp <89:14 89:17>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexB [b2PulleyJoint.cpp <89:29 89:36>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<90:10> [b2PulleyJoint.cpp <90:10 90:11>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <90:2 90:8>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Position::a [b2PulleyJoint.cpp <90:40 90:40>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PulleyJoint.cpp <90:20 90:28>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<73:65> [b2PulleyJoint.cpp <90:15 90:18>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexB [b2PulleyJoint.cpp <90:30 90:37>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<91:9> [b2PulleyJoint.cpp <91:9 91:10>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PulleyJoint.cpp <91:2 91:7>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PulleyJoint.cpp <91:40 91:40>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2PulleyJoint.cpp <91:40 91:40>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PulleyJoint.cpp <91:19 91:28>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<73:65> [b2PulleyJoint.cpp <91:14 91:17>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexB [b2PulleyJoint.cpp <91:30 91:37>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<92:10> [b2PulleyJoint.cpp <92:10 92:11>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <92:2 92:8>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2PulleyJoint.cpp <92:41 92:41>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PulleyJoint.cpp <92:20 92:29>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<73:65> [b2PulleyJoint.cpp <92:15 92:18>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexB [b2PulleyJoint.cpp <92:31 92:38>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<94:8> [b2PulleyJoint.cpp <94:8 94:9>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Rot [b2PulleyJoint.cpp <94:2 94:6>]
SYMBOL_FUNCTION void b2Rot::b2Rot(float32)
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2PulleyJoint.cpp <94:8 94:9>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<85:10> [b2PulleyJoint.cpp <94:11 94:12>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<94:16> [b2PulleyJoint.cpp <94:16 94:17>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2PulleyJoint.cpp <94:16 94:17>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<90:10> [b2PulleyJoint.cpp <94:19 94:20>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2PulleyJoint.cpp <96:7 96:7>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_rA [b2PulleyJoint.cpp <96:2 96:5>]
SYMBOL_FUNCTION b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &)
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2PulleyJoint.cpp <96:9 96:13>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<94:8> [b2PulleyJoint.cpp <96:15 96:16>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <96:34 96:34>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_localAnchorA [b2PulleyJoint.cpp <96:19 96:32>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_localCenterA [b2PulleyJoint.cpp <96:36 96:49>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2PulleyJoint.cpp <97:7 97:7>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_rB [b2PulleyJoint.cpp <97:2 97:5>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2PulleyJoint.cpp <97:9 97:13>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<94:16> [b2PulleyJoint.cpp <97:15 97:16>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <97:34 97:34>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_localAnchorB [b2PulleyJoint.cpp <97:19 97:32>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_localCenterB [b2PulleyJoint.cpp <97:36 97:49>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2PulleyJoint.cpp <100:7 100:7>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_uA [b2PulleyJoint.cpp <100:2 100:5>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <100:19 100:19>]
SYMBOL_FUNCTION b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <100:12 100:12>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<84:9> [b2PulleyJoint.cpp <100:9 100:10>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_rA [b2PulleyJoint.cpp <100:14 100:17>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_groundAnchorA [b2PulleyJoint.cpp <100:21 100:35>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(b2Vec2 &) [b2PulleyJoint.cpp <101:7 101:7>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_uB [b2PulleyJoint.cpp <101:2 101:5>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <101:19 101:19>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <101:12 101:12>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<89:9> [b2PulleyJoint.cpp <101:9 101:10>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_rB [b2PulleyJoint.cpp <101:14 101:17>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_groundAnchorB [b2PulleyJoint.cpp <101:21 101:35>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<103:10> [b2PulleyJoint.cpp <103:10 103:16>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <103:2 103:8>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::Length() const [b2PulleyJoint.cpp <103:25 103:30>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_uA [b2PulleyJoint.cpp <103:20 103:23>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<104:10> [b2PulleyJoint.cpp <104:10 104:16>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <104:2 104:8>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Vec2::Length() const [b2PulleyJoint.cpp <104:25 104:30>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_uB [b2PulleyJoint.cpp <104:20 104:23>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<103:10> [b2PulleyJoint.cpp <106:6 106:12>]
SYMBOL_FUNCTION void b2Vec2::operator*=(float32)
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator*=(float32) [b2PulleyJoint.cpp <108:8 108:9>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_uA [b2PulleyJoint.cpp <108:3 108:6>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<103:10> [b2PulleyJoint.cpp <108:18 108:24>]
SYMBOL_FUNCTION void b2Vec2::SetZero()
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::SetZero() [b2PulleyJoint.cpp <112:8 112:14>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_uA [b2PulleyJoint.cpp <112:3 112:6>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<104:10> [b2PulleyJoint.cpp <115:6 115:12>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator*=(float32) [b2PulleyJoint.cpp <117:8 117:9>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_uB [b2PulleyJoint.cpp <117:3 117:6>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<104:10> [b2PulleyJoint.cpp <117:18 117:24>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::SetZero() [b2PulleyJoint.cpp <121:8 121:14>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_uB [b2PulleyJoint.cpp <121:3 121:6>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<125:10> [b2PulleyJoint.cpp <125:10 125:12>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <125:2 125:8>]
SYMBOL_FUNCTION float32 b2Cross(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <125:16 125:22>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_rA [b2PulleyJoint.cpp <125:24 125:27>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_uA [b2PulleyJoint.cpp <125:30 125:33>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<126:10> [b2PulleyJoint.cpp <126:10 126:12>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <126:2 126:8>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <126:16 126:22>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_rB [b2PulleyJoint.cpp <126:24 126:27>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_uB [b2PulleyJoint.cpp <126:30 126:33>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<128:10> [b2PulleyJoint.cpp <128:10 128:11>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <128:2 128:8>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invMassA [b2PulleyJoint.cpp <128:15 128:24>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invIA [b2PulleyJoint.cpp <128:28 128:34>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<125:10> [b2PulleyJoint.cpp <128:38 128:40>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<125:10> [b2PulleyJoint.cpp <128:44 128:46>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<129:10> [b2PulleyJoint.cpp <129:10 129:11>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <129:2 129:8>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invMassB [b2PulleyJoint.cpp <129:15 129:24>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invIB [b2PulleyJoint.cpp <129:28 129:34>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<126:10> [b2PulleyJoint.cpp <129:38 129:40>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<126:10> [b2PulleyJoint.cpp <129:44 129:46>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_mass [b2PulleyJoint.cpp <131:2 131:7>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<128:10> [b2PulleyJoint.cpp <131:11 131:12>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_ratio [b2PulleyJoint.cpp <131:16 131:22>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_ratio [b2PulleyJoint.cpp <131:26 131:32>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<129:10> [b2PulleyJoint.cpp <131:36 131:37>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_mass [b2PulleyJoint.cpp <133:6 133:11>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_mass [b2PulleyJoint.cpp <135:3 135:8>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_mass [b2PulleyJoint.cpp <135:19 135:24>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> bool b2TimeStep::warmStarting [b2PulleyJoint.cpp <138:16 138:27>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2TimeStep b2SolverData::step [b2PulleyJoint.cpp <138:11 138:14>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<73:65> [b2PulleyJoint.cpp <138:6 138:9>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_impulse [b2PulleyJoint.cpp <141:3 141:11>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2TimeStep::dtRatio [b2PulleyJoint.cpp <141:26 141:32>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2TimeStep b2SolverData::step [b2PulleyJoint.cpp <141:21 141:24>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<73:65> [b2PulleyJoint.cpp <141:16 141:19>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<144:10> [b2PulleyJoint.cpp <144:10 144:11>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PulleyJoint.cpp <144:3 144:8>]
SYMBOL_FUNCTION b2Vec2 operator*(float32, const b2Vec2 &)
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PulleyJoint.cpp <144:28 144:28>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_impulse [b2PulleyJoint.cpp <144:17 144:25>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_uA [b2PulleyJoint.cpp <144:30 144:33>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<145:10> [b2PulleyJoint.cpp <145:10 145:11>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PulleyJoint.cpp <145:3 145:8>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PulleyJoint.cpp <145:38 145:38>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_ratio [b2PulleyJoint.cpp <145:17 145:23>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_impulse [b2PulleyJoint.cpp <145:27 145:35>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_uB [b2PulleyJoint.cpp <145:40 145:43>]
SYMBOL_FUNCTION void b2Vec2::operator+=(const b2Vec2 &)
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2PulleyJoint.cpp <147:6 147:7>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<86:9> [b2PulleyJoint.cpp <147:3 147:4>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PulleyJoint.cpp <147:20 147:20>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invMassA [b2PulleyJoint.cpp <147:9 147:18>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<144:10> [b2PulleyJoint.cpp <147:22 147:23>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<87:10> [b2PulleyJoint.cpp <148:3 148:4>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invIA [b2PulleyJoint.cpp <148:9 148:15>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <148:19 148:25>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_rA [b2PulleyJoint.cpp <148:27 148:30>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<144:10> [b2PulleyJoint.cpp <148:33 148:34>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2PulleyJoint.cpp <149:6 149:7>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<91:9> [b2PulleyJoint.cpp <149:3 149:4>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PulleyJoint.cpp <149:20 149:20>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invMassB [b2PulleyJoint.cpp <149:9 149:18>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<145:10> [b2PulleyJoint.cpp <149:22 149:23>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<92:10> [b2PulleyJoint.cpp <150:3 150:4>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invIB [b2PulleyJoint.cpp <150:9 150:15>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <150:19 150:25>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_rB [b2PulleyJoint.cpp <150:27 150:30>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<145:10> [b2PulleyJoint.cpp <150:33 150:34>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_impulse [b2PulleyJoint.cpp <154:3 154:11>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PulleyJoint.cpp <157:30 157:30>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2PulleyJoint.cpp <157:28 157:28>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PulleyJoint.cpp <157:7 157:16>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<73:65> [b2PulleyJoint.cpp <157:2 157:5>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexA [b2PulleyJoint.cpp <157:18 157:25>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<86:9> [b2PulleyJoint.cpp <157:32 157:33>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2PulleyJoint.cpp <158:28 158:28>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PulleyJoint.cpp <158:7 158:16>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<73:65> [b2PulleyJoint.cpp <158:2 158:5>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexA [b2PulleyJoint.cpp <158:18 158:25>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<87:10> [b2PulleyJoint.cpp <158:32 158:33>]
REFERENCE_CALL void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PulleyJoint.cpp <159:30 159:30>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2PulleyJoint.cpp <159:28 159:28>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PulleyJoint.cpp <159:7 159:16>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<73:65> [b2PulleyJoint.cpp <159:2 159:5>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexB [b2PulleyJoint.cpp <159:18 159:25>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<91:9> [b2PulleyJoint.cpp <159:32 159:33>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2PulleyJoint.cpp <160:28 160:28>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PulleyJoint.cpp <160:7 160:16>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<73:65> [b2PulleyJoint.cpp <160:2 160:5>]
REFERENCE_USAGE void b2PulleyJoint::InitVelocityConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexB [b2PulleyJoint.cpp <160:18 160:25>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<92:10> [b2PulleyJoint.cpp <160:32 160:33>]
SYMBOL_METHOD protected void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) [b2PulleyJoint.cpp <163:1 <163:21 163:44> 188:1>]
SYMBOL_FUNCTION void b2Joint::SolveVelocityConstraints(const b2SolverData &)
REFERENCE_OVERRIDE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Joint::SolveVelocityConstraints(const b2SolverData &) [b2PulleyJoint.cpp <163:21 163:44>]
QUALIFIER: b2PulleyJoint [b2PulleyJoint.cpp <163:6 163:18>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> void [b2PulleyJoint.cpp <163:1 163:4>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<163:66> [b2PulleyJoint.cpp <163:66 163:69>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2SolverData [b2PulleyJoint.cpp <163:52 163:63>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<165:9> [b2PulleyJoint.cpp <165:9 165:10>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PulleyJoint.cpp <165:2 165:7>]
REFERENCE_CALL void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PulleyJoint.cpp <165:40 165:40>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2PulleyJoint.cpp <165:40 165:40>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PulleyJoint.cpp <165:19 165:28>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<163:66> [b2PulleyJoint.cpp <165:14 165:17>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexA [b2PulleyJoint.cpp <165:30 165:37>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<166:10> [b2PulleyJoint.cpp <166:10 166:11>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <166:2 166:8>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2PulleyJoint.cpp <166:41 166:41>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PulleyJoint.cpp <166:20 166:29>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<163:66> [b2PulleyJoint.cpp <166:15 166:18>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexA [b2PulleyJoint.cpp <166:31 166:38>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<167:9> [b2PulleyJoint.cpp <167:9 167:10>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PulleyJoint.cpp <167:2 167:7>]
REFERENCE_CALL void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PulleyJoint.cpp <167:40 167:40>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2PulleyJoint.cpp <167:40 167:40>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PulleyJoint.cpp <167:19 167:28>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<163:66> [b2PulleyJoint.cpp <167:14 167:17>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexB [b2PulleyJoint.cpp <167:30 167:37>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<168:10> [b2PulleyJoint.cpp <168:10 168:11>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <168:2 168:8>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2PulleyJoint.cpp <168:41 168:41>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PulleyJoint.cpp <168:20 168:29>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<163:66> [b2PulleyJoint.cpp <168:15 168:18>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexB [b2PulleyJoint.cpp <168:31 168:38>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<170:9> [b2PulleyJoint.cpp <170:9 170:11>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PulleyJoint.cpp <170:2 170:7>]
REFERENCE_CALL void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <170:18 170:18>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<165:9> [b2PulleyJoint.cpp <170:15 170:16>]
SYMBOL_FUNCTION b2Vec2 b2Cross(float32, const b2Vec2 &)
REFERENCE_CALL void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Cross(float32, const b2Vec2 &) [b2PulleyJoint.cpp <170:20 170:26>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<166:10> [b2PulleyJoint.cpp <170:28 170:29>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_rA [b2PulleyJoint.cpp <170:32 170:35>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<171:9> [b2PulleyJoint.cpp <171:9 171:11>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PulleyJoint.cpp <171:2 171:7>]
REFERENCE_CALL void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <171:18 171:18>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<167:9> [b2PulleyJoint.cpp <171:15 171:16>]
REFERENCE_CALL void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Cross(float32, const b2Vec2 &) [b2PulleyJoint.cpp <171:20 171:26>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<168:10> [b2PulleyJoint.cpp <171:28 171:29>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_rB [b2PulleyJoint.cpp <171:32 171:35>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<173:10> [b2PulleyJoint.cpp <173:10 173:13>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <173:2 173:8>]
SYMBOL_FUNCTION float32 b2Dot(const b2Vec2 &, const b2Vec2 &)
REFERENCE_CALL void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <173:18 173:22>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_uA [b2PulleyJoint.cpp <173:24 173:27>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<170:9> [b2PulleyJoint.cpp <173:30 173:32>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_ratio [b2PulleyJoint.cpp <173:37 173:43>]
REFERENCE_CALL void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Dot(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <173:47 173:51>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_uB [b2PulleyJoint.cpp <173:53 173:56>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<171:9> [b2PulleyJoint.cpp <173:59 173:61>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<174:10> [b2PulleyJoint.cpp <174:10 174:16>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <174:2 174:8>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_mass [b2PulleyJoint.cpp <174:21 174:26>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<173:10> [b2PulleyJoint.cpp <174:30 174:33>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_impulse [b2PulleyJoint.cpp <175:2 175:10>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<174:10> [b2PulleyJoint.cpp <175:15 175:21>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<177:9> [b2PulleyJoint.cpp <177:9 177:10>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PulleyJoint.cpp <177:2 177:7>]
REFERENCE_CALL void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PulleyJoint.cpp <177:23 177:23>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<174:10> [b2PulleyJoint.cpp <177:15 177:21>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_uA [b2PulleyJoint.cpp <177:25 177:28>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<178:9> [b2PulleyJoint.cpp <178:9 178:10>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 [b2PulleyJoint.cpp <178:2 178:7>]
REFERENCE_CALL void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PulleyJoint.cpp <178:33 178:33>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_ratio [b2PulleyJoint.cpp <178:15 178:21>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<174:10> [b2PulleyJoint.cpp <178:25 178:31>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_uB [b2PulleyJoint.cpp <178:35 178:38>]
REFERENCE_CALL void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2PulleyJoint.cpp <179:5 179:6>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<165:9> [b2PulleyJoint.cpp <179:2 179:3>]
REFERENCE_CALL void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PulleyJoint.cpp <179:19 179:19>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invMassA [b2PulleyJoint.cpp <179:8 179:17>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<177:9> [b2PulleyJoint.cpp <179:21 179:22>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<166:10> [b2PulleyJoint.cpp <180:2 180:3>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invIA [b2PulleyJoint.cpp <180:8 180:14>]
REFERENCE_CALL void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <180:18 180:24>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_rA [b2PulleyJoint.cpp <180:26 180:29>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<177:9> [b2PulleyJoint.cpp <180:32 180:33>]
REFERENCE_CALL void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2PulleyJoint.cpp <181:5 181:6>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<167:9> [b2PulleyJoint.cpp <181:2 181:3>]
REFERENCE_CALL void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PulleyJoint.cpp <181:19 181:19>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invMassB [b2PulleyJoint.cpp <181:8 181:17>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<178:9> [b2PulleyJoint.cpp <181:21 181:22>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<168:10> [b2PulleyJoint.cpp <182:2 182:3>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invIB [b2PulleyJoint.cpp <182:8 182:14>]
REFERENCE_CALL void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <182:18 182:24>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_rB [b2PulleyJoint.cpp <182:26 182:29>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<178:9> [b2PulleyJoint.cpp <182:32 182:33>]
REFERENCE_CALL void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PulleyJoint.cpp <184:30 184:30>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2PulleyJoint.cpp <184:28 184:28>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PulleyJoint.cpp <184:7 184:16>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<163:66> [b2PulleyJoint.cpp <184:2 184:5>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexA [b2PulleyJoint.cpp <184:18 184:25>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<165:9> [b2PulleyJoint.cpp <184:32 184:33>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2PulleyJoint.cpp <185:28 185:28>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PulleyJoint.cpp <185:7 185:16>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<163:66> [b2PulleyJoint.cpp <185:2 185:5>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexA [b2PulleyJoint.cpp <185:18 185:25>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<166:10> [b2PulleyJoint.cpp <185:32 185:33>]
REFERENCE_CALL void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PulleyJoint.cpp <186:30 186:30>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Vec2 b2Velocity::v [b2PulleyJoint.cpp <186:28 186:28>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PulleyJoint.cpp <186:7 186:16>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<163:66> [b2PulleyJoint.cpp <186:2 186:5>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexB [b2PulleyJoint.cpp <186:18 186:25>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<167:9> [b2PulleyJoint.cpp <186:32 186:33>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> float32 b2Velocity::w [b2PulleyJoint.cpp <187:28 187:28>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> b2Velocity * b2SolverData::velocities [b2PulleyJoint.cpp <187:7 187:16>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<163:66> [b2PulleyJoint.cpp <187:2 187:5>]
REFERENCE_USAGE void b2PulleyJoint::SolveVelocityConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexB [b2PulleyJoint.cpp <187:18 187:25>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<168:10> [b2PulleyJoint.cpp <187:32 187:33>]
SYMBOL_METHOD protected bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) [b2PulleyJoint.cpp <190:1 <190:21 190:44> 260:1>]
SYMBOL_FUNCTION bool b2Joint::SolvePositionConstraints(const b2SolverData &)
REFERENCE_OVERRIDE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> bool b2Joint::SolvePositionConstraints(const b2SolverData &) [b2PulleyJoint.cpp <190:21 190:44>]
QUALIFIER: b2PulleyJoint [b2PulleyJoint.cpp <190:6 190:18>]
SYMBOL_BUILTIN_TYPE bool
REFERENCE_TYPE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> bool [b2PulleyJoint.cpp <190:1 190:4>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<190:66> [b2PulleyJoint.cpp <190:66 190:69>]
REFERENCE_TYPE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2SolverData [b2PulleyJoint.cpp <190:52 190:63>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<192:9> [b2PulleyJoint.cpp <192:9 192:10>]
REFERENCE_TYPE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2PulleyJoint.cpp <192:2 192:7>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PulleyJoint.cpp <192:39 192:39>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2PulleyJoint.cpp <192:39 192:39>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PulleyJoint.cpp <192:19 192:27>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<190:66> [b2PulleyJoint.cpp <192:14 192:17>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexA [b2PulleyJoint.cpp <192:29 192:36>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<193:10> [b2PulleyJoint.cpp <193:10 193:11>]
REFERENCE_TYPE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <193:2 193:8>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2PulleyJoint.cpp <193:40 193:40>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PulleyJoint.cpp <193:20 193:28>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<190:66> [b2PulleyJoint.cpp <193:15 193:18>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexA [b2PulleyJoint.cpp <193:30 193:37>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<194:9> [b2PulleyJoint.cpp <194:9 194:10>]
REFERENCE_TYPE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2PulleyJoint.cpp <194:2 194:7>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PulleyJoint.cpp <194:39 194:39>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2PulleyJoint.cpp <194:39 194:39>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PulleyJoint.cpp <194:19 194:27>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<190:66> [b2PulleyJoint.cpp <194:14 194:17>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexB [b2PulleyJoint.cpp <194:29 194:36>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<195:10> [b2PulleyJoint.cpp <195:10 195:11>]
REFERENCE_TYPE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <195:2 195:8>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2PulleyJoint.cpp <195:40 195:40>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PulleyJoint.cpp <195:20 195:28>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<190:66> [b2PulleyJoint.cpp <195:15 195:18>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexB [b2PulleyJoint.cpp <195:30 195:37>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<197:8> [b2PulleyJoint.cpp <197:8 197:9>]
REFERENCE_TYPE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Rot [b2PulleyJoint.cpp <197:2 197:6>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2PulleyJoint.cpp <197:8 197:9>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<193:10> [b2PulleyJoint.cpp <197:11 197:12>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<197:16> [b2PulleyJoint.cpp <197:16 197:17>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Rot::b2Rot(float32) [b2PulleyJoint.cpp <197:16 197:17>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<195:10> [b2PulleyJoint.cpp <197:19 197:20>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<199:9> [b2PulleyJoint.cpp <199:9 199:10>]
REFERENCE_TYPE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2PulleyJoint.cpp <199:2 199:7>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2PulleyJoint.cpp <199:14 199:18>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<197:8> [b2PulleyJoint.cpp <199:20 199:21>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <199:39 199:39>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_localAnchorA [b2PulleyJoint.cpp <199:24 199:37>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_localCenterA [b2PulleyJoint.cpp <199:41 199:54>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<200:9> [b2PulleyJoint.cpp <200:9 200:10>]
REFERENCE_TYPE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2PulleyJoint.cpp <200:2 200:7>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Mul(const b2Rot &, const b2Vec2 &) [b2PulleyJoint.cpp <200:14 200:18>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<197:16> [b2PulleyJoint.cpp <200:20 200:21>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <200:39 200:39>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_localAnchorB [b2PulleyJoint.cpp <200:24 200:37>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_localCenterB [b2PulleyJoint.cpp <200:41 200:54>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<203:9> [b2PulleyJoint.cpp <203:9 203:10>]
REFERENCE_TYPE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2PulleyJoint.cpp <203:2 203:7>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <203:22 203:22>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <203:17 203:17>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<192:9> [b2PulleyJoint.cpp <203:14 203:15>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<199:9> [b2PulleyJoint.cpp <203:19 203:20>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_groundAnchorA [b2PulleyJoint.cpp <203:24 203:38>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<204:9> [b2PulleyJoint.cpp <204:9 204:10>]
REFERENCE_TYPE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2PulleyJoint.cpp <204:2 204:7>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <204:22 204:22>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator+(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <204:17 204:17>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<194:9> [b2PulleyJoint.cpp <204:14 204:15>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<200:9> [b2PulleyJoint.cpp <204:19 204:20>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2PulleyJoint::m_groundAnchorB [b2PulleyJoint.cpp <204:24 204:38>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<206:10> [b2PulleyJoint.cpp <206:10 206:16>]
REFERENCE_TYPE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <206:2 206:8>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::Length() const [b2PulleyJoint.cpp <206:23 206:28>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<203:9> [b2PulleyJoint.cpp <206:20 206:21>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<207:10> [b2PulleyJoint.cpp <207:10 207:16>]
REFERENCE_TYPE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <207:2 207:8>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Vec2::Length() const [b2PulleyJoint.cpp <207:23 207:28>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<204:9> [b2PulleyJoint.cpp <207:20 207:21>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<206:10> [b2PulleyJoint.cpp <209:6 209:12>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::operator*=(float32) [b2PulleyJoint.cpp <211:6 211:7>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<203:9> [b2PulleyJoint.cpp <211:3 211:4>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<206:10> [b2PulleyJoint.cpp <211:16 211:22>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::SetZero() [b2PulleyJoint.cpp <215:6 215:12>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<203:9> [b2PulleyJoint.cpp <215:3 215:4>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<207:10> [b2PulleyJoint.cpp <218:6 218:12>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::operator*=(float32) [b2PulleyJoint.cpp <220:6 220:7>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<204:9> [b2PulleyJoint.cpp <220:3 220:4>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<207:10> [b2PulleyJoint.cpp <220:16 220:22>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::SetZero() [b2PulleyJoint.cpp <224:6 224:12>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<204:9> [b2PulleyJoint.cpp <224:3 224:4>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<228:10> [b2PulleyJoint.cpp <228:10 228:12>]
REFERENCE_TYPE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <228:2 228:8>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <228:16 228:22>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<199:9> [b2PulleyJoint.cpp <228:24 228:25>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<203:9> [b2PulleyJoint.cpp <228:28 228:29>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<229:10> [b2PulleyJoint.cpp <229:10 229:12>]
REFERENCE_TYPE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <229:2 229:8>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <229:16 229:22>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<200:9> [b2PulleyJoint.cpp <229:24 229:25>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<204:9> [b2PulleyJoint.cpp <229:28 229:29>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<231:10> [b2PulleyJoint.cpp <231:10 231:11>]
REFERENCE_TYPE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <231:2 231:8>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invMassA [b2PulleyJoint.cpp <231:15 231:24>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invIA [b2PulleyJoint.cpp <231:28 231:34>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<228:10> [b2PulleyJoint.cpp <231:38 231:40>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<228:10> [b2PulleyJoint.cpp <231:44 231:46>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<232:10> [b2PulleyJoint.cpp <232:10 232:11>]
REFERENCE_TYPE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <232:2 232:8>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invMassB [b2PulleyJoint.cpp <232:15 232:24>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invIB [b2PulleyJoint.cpp <232:28 232:34>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<229:10> [b2PulleyJoint.cpp <232:38 232:40>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<229:10> [b2PulleyJoint.cpp <232:44 232:46>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<234:10> [b2PulleyJoint.cpp <234:10 234:13>]
REFERENCE_TYPE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <234:2 234:8>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<231:10> [b2PulleyJoint.cpp <234:17 234:18>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_ratio [b2PulleyJoint.cpp <234:22 234:28>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_ratio [b2PulleyJoint.cpp <234:32 234:38>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<232:10> [b2PulleyJoint.cpp <234:42 234:43>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<234:10> [b2PulleyJoint.cpp <236:6 236:9>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<234:10> [b2PulleyJoint.cpp <238:3 238:6>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<234:10> [b2PulleyJoint.cpp <238:17 238:20>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<241:10> [b2PulleyJoint.cpp <241:10 241:10>]
REFERENCE_TYPE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <241:2 241:8>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_constant [b2PulleyJoint.cpp <241:14 241:23>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<206:10> [b2PulleyJoint.cpp <241:27 241:33>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_ratio [b2PulleyJoint.cpp <241:37 241:43>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<207:10> [b2PulleyJoint.cpp <241:47 241:53>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<242:10> [b2PulleyJoint.cpp <242:10 242:20>]
REFERENCE_TYPE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <242:2 242:8>]
SYMBOL_FUNCTION float b2Abs<float>(float)
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float b2Abs<float>(float) [b2PulleyJoint.cpp <242:24 242:28>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<241:10> [b2PulleyJoint.cpp <242:30 242:30>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<244:10> [b2PulleyJoint.cpp <244:10 244:16>]
REFERENCE_TYPE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 [b2PulleyJoint.cpp <244:2 244:8>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<234:10> [b2PulleyJoint.cpp <244:21 244:24>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<241:10> [b2PulleyJoint.cpp <244:28 244:28>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<246:9> [b2PulleyJoint.cpp <246:9 246:10>]
REFERENCE_TYPE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2PulleyJoint.cpp <246:2 246:7>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PulleyJoint.cpp <246:23 246:23>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<244:10> [b2PulleyJoint.cpp <246:15 246:21>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<203:9> [b2PulleyJoint.cpp <246:25 246:26>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<247:9> [b2PulleyJoint.cpp <247:9 247:10>]
REFERENCE_TYPE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 [b2PulleyJoint.cpp <247:2 247:7>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PulleyJoint.cpp <247:33 247:33>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_ratio [b2PulleyJoint.cpp <247:15 247:21>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<244:10> [b2PulleyJoint.cpp <247:25 247:31>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<204:9> [b2PulleyJoint.cpp <247:35 247:36>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2PulleyJoint.cpp <249:5 249:6>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<192:9> [b2PulleyJoint.cpp <249:2 249:3>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PulleyJoint.cpp <249:19 249:19>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invMassA [b2PulleyJoint.cpp <249:8 249:17>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<246:9> [b2PulleyJoint.cpp <249:21 249:22>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<193:10> [b2PulleyJoint.cpp <250:2 250:3>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invIA [b2PulleyJoint.cpp <250:8 250:14>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <250:18 250:24>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<199:9> [b2PulleyJoint.cpp <250:26 250:27>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<246:9> [b2PulleyJoint.cpp <250:30 250:31>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> void b2Vec2::operator+=(const b2Vec2 &) [b2PulleyJoint.cpp <251:5 251:6>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<194:9> [b2PulleyJoint.cpp <251:2 251:3>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PulleyJoint.cpp <251:19 251:19>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invMassB [b2PulleyJoint.cpp <251:8 251:17>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<247:9> [b2PulleyJoint.cpp <251:21 251:22>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<195:10> [b2PulleyJoint.cpp <252:2 252:3>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2PulleyJoint::m_invIB [b2PulleyJoint.cpp <252:8 252:14>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Cross(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <252:18 252:24>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<200:9> [b2PulleyJoint.cpp <252:26 252:27>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<247:9> [b2PulleyJoint.cpp <252:30 252:31>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PulleyJoint.cpp <254:29 254:29>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2PulleyJoint.cpp <254:27 254:27>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PulleyJoint.cpp <254:7 254:15>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<190:66> [b2PulleyJoint.cpp <254:2 254:5>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexA [b2PulleyJoint.cpp <254:17 254:24>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<192:9> [b2PulleyJoint.cpp <254:31 254:32>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2PulleyJoint.cpp <255:27 255:27>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PulleyJoint.cpp <255:7 255:15>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<190:66> [b2PulleyJoint.cpp <255:2 255:5>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexA [b2PulleyJoint.cpp <255:17 255:24>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<193:10> [b2PulleyJoint.cpp <255:31 255:32>]
REFERENCE_CALL bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 & b2Vec2::operator=(const b2Vec2 &) [b2PulleyJoint.cpp <256:29 256:29>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Vec2 b2Position::c [b2PulleyJoint.cpp <256:27 256:27>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PulleyJoint.cpp <256:7 256:15>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<190:66> [b2PulleyJoint.cpp <256:2 256:5>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexB [b2PulleyJoint.cpp <256:17 256:24>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<194:9> [b2PulleyJoint.cpp <256:31 256:32>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> float32 b2Position::a [b2PulleyJoint.cpp <257:27 257:27>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> b2Position * b2SolverData::positions [b2PulleyJoint.cpp <257:7 257:15>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<190:66> [b2PulleyJoint.cpp <257:2 257:5>]
REFERENCE_USAGE bool b2PulleyJoint::SolvePositionConstraints(const b2SolverData &) -> int32 b2PulleyJoint::m_indexB [b2PulleyJoint.cpp <257:17 257:24>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<195:10> [b2PulleyJoint.cpp <257:31 257:32>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<242:10> [b2PulleyJoint.cpp <259:9 259:19>]
SYMBOL_METHOD public b2Vec2 b2PulleyJoint::GetAnchorA() const [b2PulleyJoint.cpp <262:1 <262:23 262:32> 265:1>]
SYMBOL_FUNCTION b2Vec2 b2Joint::GetAnchorA() const
REFERENCE_OVERRIDE b2Vec2 b2PulleyJoint::GetAnchorA() const -> b2Vec2 b2Joint::GetAnchorA() const [b2PulleyJoint.cpp <262:23 262:32>]
QUALIFIER: b2PulleyJoint [b2PulleyJoint.cpp <262:8 262:20>]
REFERENCE_TYPE_USAGE b2Vec2 b2PulleyJoint::GetAnchorA() const -> b2Vec2 [b2PulleyJoint.cpp <262:1 262:6>]
SYMBOL_FUNCTION b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const
REFERENCE_CALL b2Vec2 b2PulleyJoint::GetAnchorA() const -> b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const [b2PulleyJoint.cpp <264:18 264:30>]
REFERENCE_USAGE b2Vec2 b2PulleyJoint::GetAnchorA() const -> b2Body * b2Joint::m_bodyA [b2PulleyJoint.cpp <264:9 264:15>]
REFERENCE_USAGE b2Vec2 b2PulleyJoint::GetAnchorA() const -> b2Vec2 b2PulleyJoint::m_localAnchorA [b2PulleyJoint.cpp <264:32 264:45>]
SYMBOL_METHOD public b2Vec2 b2PulleyJoint::GetAnchorB() const [b2PulleyJoint.cpp <267:1 <267:23 267:32> 270:1>]
SYMBOL_FUNCTION b2Vec2 b2Joint::GetAnchorB() const
REFERENCE_OVERRIDE b2Vec2 b2PulleyJoint::GetAnchorB() const -> b2Vec2 b2Joint::GetAnchorB() const [b2PulleyJoint.cpp <267:23 267:32>]
QUALIFIER: b2PulleyJoint [b2PulleyJoint.cpp <267:8 267:20>]
REFERENCE_TYPE_USAGE b2Vec2 b2PulleyJoint::GetAnchorB() const -> b2Vec2 [b2PulleyJoint.cpp <267:1 267:6>]
REFERENCE_CALL b2Vec2 b2PulleyJoint::GetAnchorB() const -> b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const [b2PulleyJoint.cpp <269:18 269:30>]
REFERENCE_USAGE b2Vec2 b2PulleyJoint::GetAnchorB() const -> b2Body * b2Joint::m_bodyB [b2PulleyJoint.cpp <269:9 269:15>]
REFERENCE_USAGE b2Vec2 b2PulleyJoint::GetAnchorB() const -> b2Vec2 b2PulleyJoint::m_localAnchorB [b2PulleyJoint.cpp <269:32 269:45>]
SYMBOL_METHOD public b2Vec2 b2PulleyJoint::GetReactionForce(float32) const [b2PulleyJoint.cpp <272:1 <272:23 272:38> 276:1>]
SYMBOL_FUNCTION b2Vec2 b2Joint::GetReactionForce(float32) const
REFERENCE_OVERRIDE b2Vec2 b2PulleyJoint::GetReactionForce(float32) const -> b2Vec2 b2Joint::GetReactionForce(float32) const [b2PulleyJoint.cpp <272:23 272:38>]
QUALIFIER: b2PulleyJoint [b2PulleyJoint.cpp <272:8 272:20>]
REFERENCE_TYPE_USAGE b2Vec2 b2PulleyJoint::GetReactionForce(float32) const -> b2Vec2 [b2PulleyJoint.cpp <272:1 272:6>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<272:48> [b2PulleyJoint.cpp <272:48 272:53>]
REFERENCE_TYPE_USAGE b2Vec2 b2PulleyJoint::GetReactionForce(float32) const -> float32 [b2PulleyJoint.cpp <272:40 272:46>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<274:9> [b2PulleyJoint.cpp <274:9 274:9>]
REFERENCE_TYPE_USAGE b2Vec2 b2PulleyJoint::GetReactionForce(float32) const -> b2Vec2 [b2PulleyJoint.cpp <274:2 274:7>]
REFERENCE_CALL b2Vec2 b2PulleyJoint::GetReactionForce(float32) const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PulleyJoint.cpp <274:23 274:23>]
REFERENCE_USAGE b2Vec2 b2PulleyJoint::GetReactionForce(float32) const -> float32 b2PulleyJoint::m_impulse [b2PulleyJoint.cpp <274:13 274:21>]
REFERENCE_USAGE b2Vec2 b2PulleyJoint::GetReactionForce(float32) const -> b2Vec2 b2PulleyJoint::m_uB [b2PulleyJoint.cpp <274:25 274:28>]
REFERENCE_CALL b2Vec2 b2PulleyJoint::GetReactionForce(float32) const -> b2Vec2 operator*(float32, const b2Vec2 &) [b2PulleyJoint.cpp <275:16 275:16>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<272:48> [b2PulleyJoint.cpp <275:9 275:14>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<274:9> [b2PulleyJoint.cpp <275:18 275:18>]
SYMBOL_METHOD public float32 b2PulleyJoint::GetReactionTorque(float32) const [b2PulleyJoint.cpp <278:1 <278:24 278:40> 282:1>]
SYMBOL_FUNCTION float32 b2Joint::GetReactionTorque(float32) const
REFERENCE_OVERRIDE float32 b2PulleyJoint::GetReactionTorque(float32) const -> float32 b2Joint::GetReactionTorque(float32) const [b2PulleyJoint.cpp <278:24 278:40>]
QUALIFIER: b2PulleyJoint [b2PulleyJoint.cpp <278:9 278:21>]
REFERENCE_TYPE_USAGE float32 b2PulleyJoint::GetReactionTorque(float32) const -> float32 [b2PulleyJoint.cpp <278:1 278:7>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<278:50> [b2PulleyJoint.cpp <278:50 278:55>]
REFERENCE_TYPE_USAGE float32 b2PulleyJoint::GetReactionTorque(float32) const -> float32 [b2PulleyJoint.cpp <278:42 278:48>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<278:50> [b2PulleyJoint.cpp <280:14 280:19>]
SYMBOL_METHOD public b2Vec2 b2PulleyJoint::GetGroundAnchorA() const [b2PulleyJoint.cpp <284:1 <284:23 284:38> 287:1>]
QUALIFIER: b2PulleyJoint [b2PulleyJoint.cpp <284:8 284:20>]
REFERENCE_TYPE_USAGE b2Vec2 b2PulleyJoint::GetGroundAnchorA() const -> b2Vec2 [b2PulleyJoint.cpp <284:1 284:6>]
REFERENCE_CALL b2Vec2 b2PulleyJoint::GetGroundAnchorA() const -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PulleyJoint.cpp <286:9 286:23>]
REFERENCE_USAGE b2Vec2 b2PulleyJoint::GetGroundAnchorA() const -> b2Vec2 b2PulleyJoint::m_groundAnchorA [b2PulleyJoint.cpp <286:9 286:23>]
SYMBOL_METHOD public b2Vec2 b2PulleyJoint::GetGroundAnchorB() const [b2PulleyJoint.cpp <289:1 <289:23 289:38> 292:1>]
QUALIFIER: b2PulleyJoint [b2PulleyJoint.cpp <289:8 289:20>]
REFERENCE_TYPE_USAGE b2Vec2 b2PulleyJoint::GetGroundAnchorB() const -> b2Vec2 [b2PulleyJoint.cpp <289:1 289:6>]
REFERENCE_CALL b2Vec2 b2PulleyJoint::GetGroundAnchorB() const -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PulleyJoint.cpp <291:9 291:23>]
REFERENCE_USAGE b2Vec2 b2PulleyJoint::GetGroundAnchorB() const -> b2Vec2 b2PulleyJoint::m_groundAnchorB [b2PulleyJoint.cpp <291:9 291:23>]
SYMBOL_METHOD public float32 b2PulleyJoint::GetLengthA() const [b2PulleyJoint.cpp <294:1 <294:24 294:33> 297:1>]
QUALIFIER: b2PulleyJoint [b2PulleyJoint.cpp <294:9 294:21>]
REFERENCE_TYPE_USAGE float32 b2PulleyJoint::GetLengthA() const -> float32 [b2PulleyJoint.cpp <294:1 294:7>]
REFERENCE_USAGE float32 b2PulleyJoint::GetLengthA() const -> float32 b2PulleyJoint::m_lengthA [b2PulleyJoint.cpp <296:9 296:17>]
SYMBOL_METHOD public float32 b2PulleyJoint::GetLengthB() const [b2PulleyJoint.cpp <299:1 <299:24 299:33> 302:1>]
QUALIFIER: b2PulleyJoint [b2PulleyJoint.cpp <299:9 299:21>]
REFERENCE_TYPE_USAGE float32 b2PulleyJoint::GetLengthB() const -> float32 [b2PulleyJoint.cpp <299:1 299:7>]
REFERENCE_USAGE float32 b2PulleyJoint::GetLengthB() const -> float32 b2PulleyJoint::m_lengthB [b2PulleyJoint.cpp <301:9 301:17>]
SYMBOL_METHOD public float32 b2PulleyJoint::GetRatio() const [b2PulleyJoint.cpp <304:1 <304:24 304:31> 307:1>]
QUALIFIER: b2PulleyJoint [b2PulleyJoint.cpp <304:9 304:21>]
REFERENCE_TYPE_USAGE float32 b2PulleyJoint::GetRatio() const -> float32 [b2PulleyJoint.cpp <304:1 304:7>]
REFERENCE_USAGE float32 b2PulleyJoint::GetRatio() const -> float32 b2PulleyJoint::m_ratio [b2PulleyJoint.cpp <306:9 306:15>]
SYMBOL_METHOD public float32 b2PulleyJoint::GetCurrentLengthA() const [b2PulleyJoint.cpp <309:1 <309:24 309:40> 315:1>]
QUALIFIER: b2PulleyJoint [b2PulleyJoint.cpp <309:9 309:21>]
REFERENCE_TYPE_USAGE float32 b2PulleyJoint::GetCurrentLengthA() const -> float32 [b2PulleyJoint.cpp <309:1 309:7>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<311:9> [b2PulleyJoint.cpp <311:9 311:9>]
REFERENCE_TYPE_USAGE float32 b2PulleyJoint::GetCurrentLengthA() const -> b2Vec2 [b2PulleyJoint.cpp <311:2 311:7>]
REFERENCE_CALL float32 b2PulleyJoint::GetCurrentLengthA() const -> b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const [b2PulleyJoint.cpp <311:22 311:34>]
REFERENCE_USAGE float32 b2PulleyJoint::GetCurrentLengthA() const -> b2Body * b2Joint::m_bodyA [b2PulleyJoint.cpp <311:13 311:19>]
REFERENCE_USAGE float32 b2PulleyJoint::GetCurrentLengthA() const -> b2Vec2 b2PulleyJoint::m_localAnchorA [b2PulleyJoint.cpp <311:36 311:49>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<312:9> [b2PulleyJoint.cpp <312:9 312:9>]
REFERENCE_TYPE_USAGE float32 b2PulleyJoint::GetCurrentLengthA() const -> b2Vec2 [b2PulleyJoint.cpp <312:2 312:7>]
REFERENCE_CALL float32 b2PulleyJoint::GetCurrentLengthA() const -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PulleyJoint.cpp <312:13 312:27>]
REFERENCE_USAGE float32 b2PulleyJoint::GetCurrentLengthA() const -> b2Vec2 b2PulleyJoint::m_groundAnchorA [b2PulleyJoint.cpp <312:13 312:27>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<313:9> [b2PulleyJoint.cpp <313:9 313:9>]
REFERENCE_TYPE_USAGE float32 b2PulleyJoint::GetCurrentLengthA() const -> b2Vec2 [b2PulleyJoint.cpp <313:2 313:7>]
REFERENCE_CALL float32 b2PulleyJoint::GetCurrentLengthA() const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <313:15 313:15>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<311:9> [b2PulleyJoint.cpp <313:13 313:13>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<312:9> [b2PulleyJoint.cpp <313:17 313:17>]
REFERENCE_CALL float32 b2PulleyJoint::GetCurrentLengthA() const -> float32 b2Vec2::Length() const [b2PulleyJoint.cpp <314:11 314:16>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<313:9> [b2PulleyJoint.cpp <314:9 314:9>]
SYMBOL_METHOD public float32 b2PulleyJoint::GetCurrentLengthB() const [b2PulleyJoint.cpp <317:1 <317:24 317:40> 323:1>]
QUALIFIER: b2PulleyJoint [b2PulleyJoint.cpp <317:9 317:21>]
REFERENCE_TYPE_USAGE float32 b2PulleyJoint::GetCurrentLengthB() const -> float32 [b2PulleyJoint.cpp <317:1 317:7>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<319:9> [b2PulleyJoint.cpp <319:9 319:9>]
REFERENCE_TYPE_USAGE float32 b2PulleyJoint::GetCurrentLengthB() const -> b2Vec2 [b2PulleyJoint.cpp <319:2 319:7>]
REFERENCE_CALL float32 b2PulleyJoint::GetCurrentLengthB() const -> b2Vec2 b2Body::GetWorldPoint(const b2Vec2 &) const [b2PulleyJoint.cpp <319:22 319:34>]
REFERENCE_USAGE float32 b2PulleyJoint::GetCurrentLengthB() const -> b2Body * b2Joint::m_bodyB [b2PulleyJoint.cpp <319:13 319:19>]
REFERENCE_USAGE float32 b2PulleyJoint::GetCurrentLengthB() const -> b2Vec2 b2PulleyJoint::m_localAnchorB [b2PulleyJoint.cpp <319:36 319:49>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<320:9> [b2PulleyJoint.cpp <320:9 320:9>]
REFERENCE_TYPE_USAGE float32 b2PulleyJoint::GetCurrentLengthB() const -> b2Vec2 [b2PulleyJoint.cpp <320:2 320:7>]
REFERENCE_CALL float32 b2PulleyJoint::GetCurrentLengthB() const -> void b2Vec2::b2Vec2(const b2Vec2 &) [b2PulleyJoint.cpp <320:13 320:27>]
REFERENCE_USAGE float32 b2PulleyJoint::GetCurrentLengthB() const -> b2Vec2 b2PulleyJoint::m_groundAnchorB [b2PulleyJoint.cpp <320:13 320:27>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<321:9> [b2PulleyJoint.cpp <321:9 321:9>]
REFERENCE_TYPE_USAGE float32 b2PulleyJoint::GetCurrentLengthB() const -> b2Vec2 [b2PulleyJoint.cpp <321:2 321:7>]
REFERENCE_CALL float32 b2PulleyJoint::GetCurrentLengthB() const -> b2Vec2 operator-(const b2Vec2 &, const b2Vec2 &) [b2PulleyJoint.cpp <321:15 321:15>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<319:9> [b2PulleyJoint.cpp <321:13 321:13>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<320:9> [b2PulleyJoint.cpp <321:17 321:17>]
REFERENCE_CALL float32 b2PulleyJoint::GetCurrentLengthB() const -> float32 b2Vec2::Length() const [b2PulleyJoint.cpp <322:11 322:16>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<321:9> [b2PulleyJoint.cpp <322:9 322:9>]
SYMBOL_METHOD public void b2PulleyJoint::Dump() [b2PulleyJoint.cpp <325:1 <325:21 325:24> 342:1>]
SYMBOL_FUNCTION void b2Joint::Dump()
REFERENCE_OVERRIDE void b2PulleyJoint::Dump() -> void b2Joint::Dump() [b2PulleyJoint.cpp <325:21 325:24>]
QUALIFIER: b2PulleyJoint [b2PulleyJoint.cpp <325:6 325:18>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::Dump() -> void [b2PulleyJoint.cpp <325:1 325:4>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<327:8> [b2PulleyJoint.cpp <327:8 327:13>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::Dump() -> int32 [b2PulleyJoint.cpp <327:2 327:6>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> int32 b2Body::m_islandIndex [b2PulleyJoint.cpp <327:26 327:38>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> b2Body * b2Joint::m_bodyA [b2PulleyJoint.cpp <327:17 327:23>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<328:8> [b2PulleyJoint.cpp <328:8 328:13>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::Dump() -> int32 [b2PulleyJoint.cpp <328:2 328:6>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> int32 b2Body::m_islandIndex [b2PulleyJoint.cpp <328:26 328:38>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> b2Body * b2Joint::m_bodyB [b2PulleyJoint.cpp <328:17 328:23>]
SYMBOL_FUNCTION void b2Log(const char *)
REFERENCE_CALL void b2PulleyJoint::Dump() -> void b2Log(const char *) [b2PulleyJoint.cpp <330:2 330:6>]
REFERENCE_CALL void b2PulleyJoint::Dump() -> void b2Log(const char *) [b2PulleyJoint.cpp <331:2 331:6>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<327:8> [b2PulleyJoint.cpp <331:38 331:43>]
REFERENCE_CALL void b2PulleyJoint::Dump() -> void b2Log(const char *) [b2PulleyJoint.cpp <332:2 332:6>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<328:8> [b2PulleyJoint.cpp <332:38 332:43>]
REFERENCE_CALL void b2PulleyJoint::Dump() -> void b2Log(const char *) [b2PulleyJoint.cpp <333:2 333:6>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> bool b2Joint::m_collideConnected [b2PulleyJoint.cpp <333:47 333:64>]
REFERENCE_CALL void b2PulleyJoint::Dump() -> void b2Log(const char *) [b2PulleyJoint.cpp <334:2 334:6>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> float32 b2Vec2::x [b2PulleyJoint.cpp <334:71 334:71>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> b2Vec2 b2PulleyJoint::m_groundAnchorA [b2PulleyJoint.cpp <334:55 334:69>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> float32 b2Vec2::y [b2PulleyJoint.cpp <334:90 334:90>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> b2Vec2 b2PulleyJoint::m_groundAnchorA [b2PulleyJoint.cpp <334:74 334:88>]
REFERENCE_CALL void b2PulleyJoint::Dump() -> void b2Log(const char *) [b2PulleyJoint.cpp <335:2 335:6>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> float32 b2Vec2::x [b2PulleyJoint.cpp <335:71 335:71>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> b2Vec2 b2PulleyJoint::m_groundAnchorB [b2PulleyJoint.cpp <335:55 335:69>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> float32 b2Vec2::y [b2PulleyJoint.cpp <335:90 335:90>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> b2Vec2 b2PulleyJoint::m_groundAnchorB [b2PulleyJoint.cpp <335:74 335:88>]
REFERENCE_CALL void b2PulleyJoint::Dump() -> void b2Log(const char *) [b2PulleyJoint.cpp <336:2 336:6>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> float32 b2Vec2::x [b2PulleyJoint.cpp <336:69 336:69>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> b2Vec2 b2PulleyJoint::m_localAnchorA [b2PulleyJoint.cpp <336:54 336:67>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> float32 b2Vec2::y [b2PulleyJoint.cpp <336:87 336:87>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> b2Vec2 b2PulleyJoint::m_localAnchorA [b2PulleyJoint.cpp <336:72 336:85>]
REFERENCE_CALL void b2PulleyJoint::Dump() -> void b2Log(const char *) [b2PulleyJoint.cpp <337:2 337:6>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> float32 b2Vec2::x [b2PulleyJoint.cpp <337:69 337:69>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> b2Vec2 b2PulleyJoint::m_localAnchorB [b2PulleyJoint.cpp <337:54 337:67>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> float32 b2Vec2::y [b2PulleyJoint.cpp <337:87 337:87>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> b2Vec2 b2PulleyJoint::m_localAnchorB [b2PulleyJoint.cpp <337:72 337:85>]
REFERENCE_CALL void b2PulleyJoint::Dump() -> void b2Log(const char *) [b2PulleyJoint.cpp <338:2 338:6>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> float32 b2PulleyJoint::m_lengthA [b2PulleyJoint.cpp <338:37 338:45>]
REFERENCE_CALL void b2PulleyJoint::Dump() -> void b2Log(const char *) [b2PulleyJoint.cpp <339:2 339:6>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> float32 b2PulleyJoint::m_lengthB [b2PulleyJoint.cpp <339:37 339:45>]
REFERENCE_CALL void b2PulleyJoint::Dump() -> void b2Log(const char *) [b2PulleyJoint.cpp <340:2 340:6>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> float32 b2PulleyJoint::m_ratio [b2PulleyJoint.cpp <340:35 340:41>]
REFERENCE_CALL void b2PulleyJoint::Dump() -> void b2Log(const char *) [b2PulleyJoint.cpp <341:2 341:6>]
REFERENCE_USAGE void b2PulleyJoint::Dump() -> int32 b2Joint::m_index [b2PulleyJoint.cpp <341:55 341:61>]
SYMBOL_METHOD public void b2PulleyJoint::ShiftOrigin(const b2Vec2 &) [b2PulleyJoint.cpp <344:1 <344:21 344:31> 348:1>]
SYMBOL_FUNCTION void b2Joint::ShiftOrigin(const b2Vec2 &)
REFERENCE_OVERRIDE void b2PulleyJoint::ShiftOrigin(const b2Vec2 &) -> void b2Joint::ShiftOrigin(const b2Vec2 &) [b2PulleyJoint.cpp <344:21 344:31>]
QUALIFIER: b2PulleyJoint [b2PulleyJoint.cpp <344:6 344:18>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::ShiftOrigin(const b2Vec2 &) -> void [b2PulleyJoint.cpp <344:1 344:4>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<344:47> [b2PulleyJoint.cpp <344:47 344:55>]
REFERENCE_TYPE_USAGE void b2PulleyJoint::ShiftOrigin(const b2Vec2 &) -> b2Vec2 [b2PulleyJoint.cpp <344:39 344:44>]
SYMBOL_FUNCTION void b2Vec2::operator-=(const b2Vec2 &)
REFERENCE_CALL void b2PulleyJoint::ShiftOrigin(const b2Vec2 &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2PulleyJoint.cpp <346:18 346:19>]
REFERENCE_USAGE void b2PulleyJoint::ShiftOrigin(const b2Vec2 &) -> b2Vec2 b2PulleyJoint::m_groundAnchorA [b2PulleyJoint.cpp <346:2 346:16>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<344:47> [b2PulleyJoint.cpp <346:21 346:29>]
REFERENCE_CALL void b2PulleyJoint::ShiftOrigin(const b2Vec2 &) -> void b2Vec2::operator-=(const b2Vec2 &) [b2PulleyJoint.cpp <347:18 347:19>]
REFERENCE_USAGE void b2PulleyJoint::ShiftOrigin(const b2Vec2 &) -> b2Vec2 b2PulleyJoint::m_groundAnchorB [b2PulleyJoint.cpp <347:2 347:16>]
LOCAL_SYMBOL: b2PulleyJoint.cpp<344:47> [b2PulleyJoint.cpp <347:21 347:29>]
