FILE: JavaParserMethodDeclaration.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations [ <17:60 17:71>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <17:44 17:58>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <23:43 23:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <24:43 24:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel
QUALIFIER: com.github.javaparser.symbolsolver [ <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ <21:30 21:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <22:30 22:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <23:30 23:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <24:30 24:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <25:30 25:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <26:30 26:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <27:30 27:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <28:30 28:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <33:37 33:48>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ <17:20 17:29>]
QUALIFIER: com.github.javaparser [ <19:19 19:28>]
QUALIFIER: com.github.javaparser [ <20:19 20:28>]
QUALIFIER: com.github.javaparser [ <21:19 21:28>]
QUALIFIER: com.github.javaparser [ <22:19 22:28>]
QUALIFIER: com.github.javaparser [ <23:19 23:28>]
QUALIFIER: com.github.javaparser [ <24:19 24:28>]
QUALIFIER: com.github.javaparser [ <25:19 25:28>]
QUALIFIER: com.github.javaparser [ <26:19 26:28>]
QUALIFIER: com.github.javaparser [ <27:19 27:28>]
QUALIFIER: com.github.javaparser [ <28:19 28:28>]
QUALIFIER: com.github.javaparser [ <33:26 33:35>]
QUALIFIER: com.github.javaparser [ <40:24 40:33>]
QUALIFIER: com.github.javaparser [ <43:51 43:60>]
QUALIFIER: com.github.javaparser [ <141:23 141:32>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ <17:13 17:18>]
QUALIFIER: com.github [ <19:12 19:17>]
QUALIFIER: com.github [ <20:12 20:17>]
QUALIFIER: com.github [ <21:12 21:17>]
QUALIFIER: com.github [ <22:12 22:17>]
QUALIFIER: com.github [ <23:12 23:17>]
QUALIFIER: com.github [ <24:12 24:17>]
QUALIFIER: com.github [ <25:12 25:17>]
QUALIFIER: com.github [ <26:12 26:17>]
QUALIFIER: com.github [ <27:12 27:17>]
QUALIFIER: com.github [ <28:12 28:17>]
QUALIFIER: com.github [ <33:19 33:24>]
QUALIFIER: com.github [ <40:17 40:22>]
QUALIFIER: com.github [ <43:44 43:49>]
QUALIFIER: com.github [ <141:16 141:21>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ <17:9 17:11>]
QUALIFIER: com [ <19:8 19:10>]
QUALIFIER: com [ <20:8 20:10>]
QUALIFIER: com [ <21:8 21:10>]
QUALIFIER: com [ <22:8 22:10>]
QUALIFIER: com [ <23:8 23:10>]
QUALIFIER: com [ <24:8 24:10>]
QUALIFIER: com [ <25:8 25:10>]
QUALIFIER: com [ <26:8 26:10>]
QUALIFIER: com [ <27:8 27:10>]
QUALIFIER: com [ <28:8 28:10>]
QUALIFIER: com [ <33:15 33:17>]
QUALIFIER: com [ <40:13 40:15>]
QUALIFIER: com [ <43:40 43:42>]
QUALIFIER: com [ <141:12 141:14>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.ast [ <19:30 19:32>]
QUALIFIER: com.github.javaparser.ast [ <20:30 20:32>]
QUALIFIER: com.github.javaparser.ast [ <40:35 40:37>]
QUALIFIER: com.github.javaparser.ast [ <43:62 43:64>]
QUALIFIER: com.github.javaparser.ast [ <141:34 141:36>]
SYMBOL_PACKAGE: com.github.javaparser.ast
QUALIFIER: com.github.javaparser.ast.expr [ <20:34 20:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.expr
QUALIFIER: com.github.javaparser.symbolsolver.core.resolution [ <21:48 21:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.core.resolution
QUALIFIER: com.github.javaparser.symbolsolver.core [ <21:43 21:46>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.core
QUALIFIER: com.github.javaparser.symbolsolver.declarations.common [ <22:56 22:61>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.declarations.common
QUALIFIER: com.github.javaparser.symbolsolver.declarations [ <22:43 22:54>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.declarations
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ <68:16 68:31>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [ <62:20 62:36>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [ <93:16 93:32>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [ <25:43 25:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <26:43 26:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <27:43 27:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <28:43 28:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.methods [ <26:49 26:55>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.methods
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <27:49 27:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <28:49 28:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem
QUALIFIER: java.util [ <30:13 30:16>]
QUALIFIER: java.util [ <31:13 31:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [ <30:8 30:11>]
QUALIFIER: java [ <31:8 31:11>]
SYMBOL_PACKAGE: java
QUALIFIER: java.util.stream.Collectors [ <123:133 123:142>]
QUALIFIER: java.util.stream [ <31:18 31:23>]
SYMBOL_PACKAGE: java.util.stream
SYMBOL_METHOD: static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node)
QUALIFIER: com.github.javaparser.symbolsolver.javaparser.Navigator [ <33:61 33:69>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparser [ <33:50 33:59>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparser
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration [ <44:9 44:12>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration [ <45:9 45:12>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration [ <123:16 123:19>]
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration [ <38:1 <38:14 38:40> 149:1>]
SYMBOL_FIELD: private com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.wrappedNode [ <40:62 40:72>]
QUALIFIER: com.github.javaparser.ast.body [ <40:39 40:42>]
QUALIFIER: com.github.javaparser.ast.body [ <43:66 43:69>]
QUALIFIER: com.github.javaparser.ast.body [ <141:38 141:41>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.typeSolver [ <41:24 41:33>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.JavaParserMethodDeclaration(com.github.javaparser.ast.body.MethodDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <43:5 <43:5 <43:12 43:38> 43:123> 46:5>]
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.toString() [ <48:5 <48:5 <49:19 49:26> 49:28> 54:5>]
SYMBOL_METHOD: java.lang.String java.lang.Object.toString()
SYMBOL_PACKAGE: java.lang
QUALIFIER: java.lang.String [ <79:48 79:53>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.declaringType() [ <56:5 <56:5 <57:37 57:49> 57:51> 64:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.declaringType()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getReturnType() [ <66:5 <66:5 <67:17 67:29> 67:31> 69:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration.getReturnType()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.ast.type.Type com.github.javaparser.ast.body.MethodDeclaration.getType()
SYMBOL_METHOD: private com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getContext() [ <92:5 <92:5 <92:21 92:30> 92:32> 94:5>]
SYMBOL_METHOD: public int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getNumberOfParams() [ <71:5 <71:5 <72:16 72:32> 72:34> 74:5>]
SYMBOL_METHOD: int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams()
SYMBOL_BUILTIN_TYPE: int
SYMBOL_METHOD: int com.github.javaparser.ast.NodeList<N>.size()
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.Parameter> com.github.javaparser.ast.body.CallableDeclaration<T>.getParameters()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getParam(int) [ <76:5 <76:5 <77:33 77:40> 77:47> 82:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int)
SYMBOL_METHOD: java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)
SYMBOL_METHOD: static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserParameterDeclaration.JavaParserParameterDeclaration(com.github.javaparser.ast.body.Parameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<N>.N com.github.javaparser.ast.NodeList<N>.get(int)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getUsage(com.github.javaparser.ast.Node) [ <84:5 <84:5 <84:24 84:31> 84:42> 86:5>]
SYMBOL_METHOD: java.lang.UnsupportedOperationException.UnsupportedOperationException()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.resolveTypeVariables(com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <88:5 <88:5 <88:24 88:43> 88:87> 90:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.declarations.common.MethodDeclarationCommonLogic.resolveTypeVariables(com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.declarations.common.MethodDeclarationCommonLogic.MethodDeclarationCommonLogic(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isAbstract() [ <96:5 <96:5 <97:20 97:29> 97:31> 99:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration.isAbstract()
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: boolean java.util.Optional<T>.isPresent()
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.ast.stmt.BlockStmt> com.github.javaparser.ast.body.MethodDeclaration.getBody()
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getName() [ <101:5 <101:5 <102:19 102:25> 102:27> 104:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName()
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId()
SYMBOL_METHOD: com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.CallableDeclaration<T>.getName()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isField() [ <106:5 <106:5 <107:20 107:26> 107:28> 109:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.isField()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isParameter() [ <111:5 <111:5 <112:20 112:30> 112:32> 114:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.isParameter()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isType() [ <116:5 <116:5 <117:20 117:25> 117:27> 119:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.isType()
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getTypeParameters() [ <121:5 <121:5 <122:43 122:59> 122:61> 124:5>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters()
SYMBOL_METHOD: R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>)
SYMBOL_METHOD: java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>)
SYMBOL_METHOD: java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream()
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.TypeParameter> com.github.javaparser.ast.body.CallableDeclaration<T>.getTypeParameters()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isDefaultMethod() [ <126:5 <126:5 <127:20 127:34> 127:36> 129:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration.isDefaultMethod()
SYMBOL_METHOD: boolean com.github.javaparser.ast.body.MethodDeclaration.isDefault()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isStatic() [ <131:5 <131:5 <132:20 132:27> 132:29> 134:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration.isStatic()
SYMBOL_METHOD: boolean com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStaticModifier<N>.isStatic()
SYMBOL_METHOD: public com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getWrappedNode() [ <141:1 <141:1 <141:61 141:74> 141:76> 143:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.accessLevel() [ <145:5 <145:5 <146:24 146:34> 146:36> 148:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.model.declarations.HasAccessLevel.accessLevel()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper.toAccessLevel(java.util.EnumSet<com.github.javaparser.ast.Modifier>)
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper [ <147:16 147:21>]
SYMBOL_METHOD: java.util.EnumSet<com.github.javaparser.ast.Modifier> com.github.javaparser.ast.body.CallableDeclaration<T>.getModifiers()
REFERENCE_IMPORT: JavaParserMethodDeclaration.java -> com.github.javaparser.ast.Node [ <19:34 19:37>]
REFERENCE_IMPORT: JavaParserMethodDeclaration.java -> com.github.javaparser.ast.expr.ObjectCreationExpr [ <20:39 20:56>]
REFERENCE_IMPORT: JavaParserMethodDeclaration.java -> com.github.javaparser.symbolsolver.core.resolution.Context [ <21:59 21:65>]
REFERENCE_IMPORT: JavaParserMethodDeclaration.java -> com.github.javaparser.symbolsolver.declarations.common.MethodDeclarationCommonLogic [ <22:63 22:90>]
REFERENCE_IMPORT: JavaParserMethodDeclaration.java -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ <23:59 23:74>]
REFERENCE_IMPORT: JavaParserMethodDeclaration.java -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [ <24:59 24:75>]
REFERENCE_IMPORT: JavaParserMethodDeclaration.java -> com.github.javaparser.symbolsolver.model.declarations [ <25:49 25:60>]
REFERENCE_IMPORT: JavaParserMethodDeclaration.java -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <26:57 26:67>]
REFERENCE_IMPORT: JavaParserMethodDeclaration.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <27:60 27:69>]
REFERENCE_IMPORT: JavaParserMethodDeclaration.java -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <28:60 28:63>]
REFERENCE_IMPORT: JavaParserMethodDeclaration.java -> java.util.List<E> [ <30:18 30:21>]
REFERENCE_IMPORT: JavaParserMethodDeclaration.java -> java.util.stream.Collectors [ <31:25 31:34>]
REFERENCE_IMPORT: JavaParserMethodDeclaration.java -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <33:71 33:83>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <38:53 38:69>]
REFERENCE_TYPE_USAGE: com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.wrappedNode -> com.github.javaparser.ast.body.MethodDeclaration [ <40:44 40:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.typeSolver -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <41:13 41:22>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.JavaParserMethodDeclaration(com.github.javaparser.ast.body.MethodDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.MethodDeclaration [ <43:71 43:87>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.JavaParserMethodDeclaration(com.github.javaparser.ast.body.MethodDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <43:102 43:111>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.JavaParserMethodDeclaration(com.github.javaparser.ast.body.MethodDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.wrappedNode [ <44:14 44:24>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.JavaParserMethodDeclaration(com.github.javaparser.ast.body.MethodDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.typeSolver [ <45:14 45:23>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.toString() -> java.lang.String java.lang.Object.toString() [ <49:19 49:26>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.toString() -> java.lang.Override [ <48:6 48:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.toString() -> java.lang.String [ <49:12 49:17>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.toString() -> com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.wrappedNode [ <51:34 51:44>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.toString() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.typeSolver [ <52:35 52:44>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.declaringType() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.declaringType() [ <57:37 57:49>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.declaringType() -> java.lang.Override [ <56:6 56:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.declaringType() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <57:12 57:35>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.declaringType() -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <58:13 58:25>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.declaringType() -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <59:66 59:78>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.declaringType() -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <62:56 62:68>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.declaringType() -> com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.wrappedNode [ <58:27 58:37>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.declaringType() -> com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.wrappedNode [ <59:80 59:90>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.declaringType() -> com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.wrappedNode [ <62:70 62:80>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.declaringType() -> com.github.javaparser.ast.expr.ObjectCreationExpr [ <58:51 58:68>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.declaringType() -> com.github.javaparser.ast.expr.ObjectCreationExpr [ <59:13 59:30>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.declaringType() -> com.github.javaparser.ast.expr.ObjectCreationExpr [ <59:46 59:63>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.declaringType() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <60:24 60:58>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.declaringType() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration [ <60:24 60:58>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.declaringType() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.typeSolver [ <60:72 60:81>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.declaringType() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.typeSolver [ <62:84 62:93>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.declaringType() -> static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <62:38 62:54>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getReturnType() -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration.getReturnType() [ <67:17 67:29>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getReturnType() -> java.lang.Override [ <66:6 66:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getReturnType() -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <67:12 67:15>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getReturnType() -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) [ <68:49 68:55>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getReturnType() -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <68:33 68:35>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getReturnType() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.typeSolver [ <68:37 68:46>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getReturnType() -> com.github.javaparser.ast.type.Type com.github.javaparser.ast.body.MethodDeclaration.getType() [ <68:69 68:75>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getReturnType() -> com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.wrappedNode [ <68:57 68:67>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getReturnType() -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getContext() [ <68:80 68:89>]
REFERENCE_OVERRIDE: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getNumberOfParams() -> int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams() [ <72:16 72:32>]
REFERENCE_ANNOTATION_USAGE: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getNumberOfParams() -> java.lang.Override [ <71:6 71:13>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getNumberOfParams() -> int [ <72:12 72:14>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getNumberOfParams() -> int com.github.javaparser.ast.NodeList<N>.size() [ <73:44 73:47>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getNumberOfParams() -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.Parameter> com.github.javaparser.ast.body.CallableDeclaration<T>.getParameters() [ <73:28 73:40>]
REFERENCE_USAGE: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getNumberOfParams() -> com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.wrappedNode [ <73:16 73:26>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getParam(int) -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int) [ <77:33 77:40>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getParam(int) -> java.lang.Override [ <76:6 76:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getParam(int) -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration [ <77:12 77:31>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getParam(int) -> int [ <77:42 77:44>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getParam(int) -> int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getNumberOfParams() [ <78:27 78:43>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getParam(int) -> int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getNumberOfParams() [ <79:113 79:129>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getParam(int) -> java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String) [ <79:23 79:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getParam(int) -> java.lang.IllegalArgumentException [ <79:23 79:46>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getParam(int) -> static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object) [ <79:55 79:60>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getParam(int) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserParameterDeclaration.JavaParserParameterDeclaration(com.github.javaparser.ast.body.Parameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <81:20 81:49>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getParam(int) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserParameterDeclaration [ <81:20 81:49>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getParam(int) -> com.github.javaparser.ast.NodeList<N>.N com.github.javaparser.ast.NodeList<N>.get(int) [ <81:79 81:81>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getParam(int) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.Parameter> com.github.javaparser.ast.body.CallableDeclaration<T>.getParameters() [ <81:63 81:75>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getParam(int) -> com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.wrappedNode [ <81:51 81:61>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getParam(int) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.typeSolver [ <81:87 81:96>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getUsage(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <84:12 84:22>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getUsage(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [ <84:33 84:36>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getUsage(com.github.javaparser.ast.Node) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <85:19 85:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getUsage(com.github.javaparser.ast.Node) -> java.lang.UnsupportedOperationException [ <85:19 85:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.resolveTypeVariables(com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <88:12 88:22>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.resolveTypeVariables(com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.core.resolution.Context [ <88:45 88:51>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <88:67 88:70>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.resolveTypeVariables(com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E> [ <88:62 88:65>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.resolveTypeVariables(com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <88:67 88:70>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.resolveTypeVariables(com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.declarations.common.MethodDeclarationCommonLogic.resolveTypeVariables(com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <89:67 89:86>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.resolveTypeVariables(com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.declarations.common.MethodDeclarationCommonLogic.MethodDeclarationCommonLogic(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <89:20 89:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.resolveTypeVariables(com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.declarations.common.MethodDeclarationCommonLogic [ <89:20 89:47>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.resolveTypeVariables(com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.typeSolver [ <89:55 89:64>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getContext() -> com.github.javaparser.symbolsolver.core.resolution.Context [ <92:13 92:19>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getContext() -> static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <93:34 93:43>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getContext() -> com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.wrappedNode [ <93:45 93:55>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getContext() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.typeSolver [ <93:58 93:67>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isAbstract() -> boolean com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration.isAbstract() [ <97:20 97:29>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isAbstract() -> java.lang.Override [ <96:6 96:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isAbstract() -> boolean [ <97:12 97:18>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isAbstract() -> boolean java.util.Optional<T>.isPresent() [ <98:39 98:47>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isAbstract() -> java.util.Optional<com.github.javaparser.ast.stmt.BlockStmt> com.github.javaparser.ast.body.MethodDeclaration.getBody() [ <98:29 98:35>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isAbstract() -> com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.wrappedNode [ <98:17 98:27>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName() [ <102:19 102:25>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getName() -> java.lang.Override [ <101:6 101:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getName() -> java.lang.String [ <102:12 102:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getName() -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [ <103:38 103:42>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getName() -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.CallableDeclaration<T>.getName() [ <103:28 103:34>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getName() -> com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.wrappedNode [ <103:16 103:26>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isField() -> boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.isField() [ <107:20 107:26>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isField() -> java.lang.Override [ <106:6 106:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isField() -> boolean [ <107:12 107:18>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isField() -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <108:19 108:47>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isField() -> java.lang.UnsupportedOperationException [ <108:19 108:47>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isParameter() -> boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.isParameter() [ <112:20 112:30>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isParameter() -> java.lang.Override [ <111:6 111:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isParameter() -> boolean [ <112:12 112:18>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isParameter() -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <113:19 113:47>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isParameter() -> java.lang.UnsupportedOperationException [ <113:19 113:47>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isType() -> boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.isType() [ <117:20 117:25>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isType() -> java.lang.Override [ <116:6 116:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isType() -> boolean [ <117:12 117:18>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isType() -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <118:19 118:47>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isType() -> java.lang.UnsupportedOperationException [ <118:19 118:47>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getTypeParameters() -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [ <122:43 122:59>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getTypeParameters() -> java.lang.Override [ <121:6 121:13>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <122:17 122:40>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getTypeParameters() -> java.util.List<E> [ <122:12 122:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getTypeParameters() -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <122:17 122:40>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getTypeParameters() -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [ <123:125 123:131>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getTypeParameters() -> java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>) [ <123:62 123:64>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getTypeParameters() -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [ <123:53 123:58>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getTypeParameters() -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.TypeParameter> com.github.javaparser.ast.body.CallableDeclaration<T>.getTypeParameters() [ <123:33 123:49>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getTypeParameters() -> com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.wrappedNode [ <123:21 123:31>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getTypeParameters() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <123:81 123:103>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getTypeParameters() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter [ <123:81 123:103>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getTypeParameters() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.typeSolver [ <123:112 123:121>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getTypeParameters() -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [ <123:144 123:149>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isDefaultMethod() -> boolean com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration.isDefaultMethod() [ <127:20 127:34>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isDefaultMethod() -> java.lang.Override [ <126:6 126:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isDefaultMethod() -> boolean [ <127:12 127:18>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isDefaultMethod() -> boolean com.github.javaparser.ast.body.MethodDeclaration.isDefault() [ <128:28 128:36>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isDefaultMethod() -> com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.wrappedNode [ <128:16 128:26>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isStatic() -> boolean com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration.isStatic() [ <132:20 132:27>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isStatic() -> java.lang.Override [ <131:6 131:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isStatic() -> boolean [ <132:12 132:18>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isStatic() -> boolean com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStaticModifier<N>.isStatic() [ <133:28 133:35>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.isStatic() -> com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.wrappedNode [ <133:16 133:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getWrappedNode() -> com.github.javaparser.ast.body.MethodDeclaration [ <141:43 141:59>]
REFERENCE_USAGE: com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getWrappedNode() -> com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.wrappedNode [ <142:16 142:26>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.accessLevel() -> com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.model.declarations.HasAccessLevel.accessLevel() [ <146:24 146:34>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.accessLevel() -> java.lang.Override [ <145:6 145:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.accessLevel() -> com.github.javaparser.symbolsolver.model.declarations.AccessLevel [ <146:12 146:22>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.accessLevel() -> static com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper.toAccessLevel(java.util.EnumSet<com.github.javaparser.ast.Modifier>) [ <147:23 147:35>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.accessLevel() -> java.util.EnumSet<com.github.javaparser.ast.Modifier> com.github.javaparser.ast.body.CallableDeclaration<T>.getModifiers() [ <147:49 147:60>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.accessLevel() -> com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.wrappedNode [ <147:37 147:47>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<102:29> [ <102:29 102:29>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<102:29> [ <104:5 104:5>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<107:30> [ <107:30 107:30>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<107:30> [ <109:5 109:5>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<112:34> [ <112:34 112:34>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<112:34> [ <114:5 114:5>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<117:29> [ <117:29 117:29>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<117:29> [ <119:5 119:5>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<122:63> [ <122:63 122:63>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<122:63> [ <124:5 124:5>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<127:38> [ <127:38 127:38>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<127:38> [ <129:5 129:5>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<132:31> [ <132:31 132:31>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<132:31> [ <134:5 134:5>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<141:78> [ <141:78 141:78>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<141:78> [ <143:5 143:5>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<146:38> [ <146:38 146:38>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<146:38> [ <148:5 148:5>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<38:71> [ <38:71 38:71>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<38:71> [ <149:1 149:1>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<43:125> [ <43:125 43:125>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<43:125> [ <46:5 46:5>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<49:30> [ <49:30 49:30>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<49:30> [ <54:5 54:5>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<57:53> [ <57:53 57:53>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<57:53> [ <64:5 64:5>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<58:71> [ <58:71 58:71>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<58:71> [ <61:9 61:9>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<61:16> [ <61:16 61:16>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<61:16> [ <63:9 63:9>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<67:33> [ <67:33 67:33>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<67:33> [ <69:5 69:5>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<72:36> [ <72:36 72:36>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<72:36> [ <74:5 74:5>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<77:49> [ <77:49 77:49>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<77:49> [ <82:5 82:5>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<78:48> [ <78:48 78:48>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<78:48> [ <80:9 80:9>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<84:44> [ <84:44 84:44>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<84:44> [ <86:5 86:5>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<88:89> [ <88:89 88:89>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<88:89> [ <90:5 90:5>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<92:34> [ <92:34 92:34>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<92:34> [ <94:5 94:5>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<97:33> [ <97:33 97:33>]
LOCAL_SYMBOL: JavaParserMethodDeclaration.java<97:33> [ <99:5 99:5>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.JavaParserMethodDeclaration<0> [ <43:89 43:99>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.JavaParserMethodDeclaration<0> [ <44:28 44:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.JavaParserMethodDeclaration<1> [ <43:113 43:122>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.JavaParserMethodDeclaration<1> [ <45:27 45:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.declaringType<0> [ <59:32 59:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.declaringType<0> [ <60:60 60:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getParam<0> [ <77:46 77:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getParam<0> [ <78:13 78:13>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getParam<0> [ <78:22 78:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getParam<0> [ <79:110 79:110>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getParam<0> [ <81:83 81:83>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getUsage<0> [ <84:38 84:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.resolveTypeVariables<0> [ <88:53 88:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.resolveTypeVariables<0> [ <89:88 89:94>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.resolveTypeVariables<1> [ <88:73 88:86>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.resolveTypeVariables<1> [ <89:97 89:110>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<1> [ <123:67 123:71>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<1> [ <123:105 123:109>]
COMMENT: comment [ <1:1 15:3>]
COMMENT: comment [ <35:1 37:3>]
COMMENT: comment [ <136:5 140:7>]
