FILE: JavaParserTypeParameter.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations [ <17:60 17:71>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <17:44 17:58>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <23:43 23:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel
QUALIFIER: com.github.javaparser.symbolsolver [ <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ <22:30 22:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <23:30 23:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <24:30 24:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <25:30 25:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <26:30 26:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <27:30 27:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <28:30 28:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <29:30 29:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <30:30 30:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <39:37 39:48>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ <17:20 17:29>]
QUALIFIER: com.github.javaparser [ <19:19 19:28>]
QUALIFIER: com.github.javaparser [ <20:19 20:28>]
QUALIFIER: com.github.javaparser [ <21:19 21:28>]
QUALIFIER: com.github.javaparser [ <22:19 22:28>]
QUALIFIER: com.github.javaparser [ <23:19 23:28>]
QUALIFIER: com.github.javaparser [ <24:19 24:28>]
QUALIFIER: com.github.javaparser [ <25:19 25:28>]
QUALIFIER: com.github.javaparser [ <26:19 26:28>]
QUALIFIER: com.github.javaparser [ <27:19 27:28>]
QUALIFIER: com.github.javaparser [ <28:19 28:28>]
QUALIFIER: com.github.javaparser [ <29:19 29:28>]
QUALIFIER: com.github.javaparser [ <30:19 30:28>]
QUALIFIER: com.github.javaparser [ <39:26 39:35>]
QUALIFIER: com.github.javaparser [ <46:24 46:33>]
QUALIFIER: com.github.javaparser [ <49:47 49:56>]
QUALIFIER: com.github.javaparser [ <119:46 119:55>]
QUALIFIER: com.github.javaparser [ <120:24 120:33>]
QUALIFIER: com.github.javaparser [ <120:104 120:113>]
QUALIFIER: com.github.javaparser [ <122:53 122:62>]
QUALIFIER: com.github.javaparser [ <123:24 123:33>]
QUALIFIER: com.github.javaparser [ <123:106 123:115>]
QUALIFIER: com.github.javaparser [ <124:125 124:134>]
QUALIFIER: com.github.javaparser [ <132:24 132:33>]
QUALIFIER: com.github.javaparser [ <132:96 132:105>]
QUALIFIER: com.github.javaparser [ <207:23 207:32>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ <17:13 17:18>]
QUALIFIER: com.github [ <19:12 19:17>]
QUALIFIER: com.github [ <20:12 20:17>]
QUALIFIER: com.github [ <21:12 21:17>]
QUALIFIER: com.github [ <22:12 22:17>]
QUALIFIER: com.github [ <23:12 23:17>]
QUALIFIER: com.github [ <24:12 24:17>]
QUALIFIER: com.github [ <25:12 25:17>]
QUALIFIER: com.github [ <26:12 26:17>]
QUALIFIER: com.github [ <27:12 27:17>]
QUALIFIER: com.github [ <28:12 28:17>]
QUALIFIER: com.github [ <29:12 29:17>]
QUALIFIER: com.github [ <30:12 30:17>]
QUALIFIER: com.github [ <39:19 39:24>]
QUALIFIER: com.github [ <46:17 46:22>]
QUALIFIER: com.github [ <49:40 49:45>]
QUALIFIER: com.github [ <119:39 119:44>]
QUALIFIER: com.github [ <120:17 120:22>]
QUALIFIER: com.github [ <120:97 120:102>]
QUALIFIER: com.github [ <122:46 122:51>]
QUALIFIER: com.github [ <123:17 123:22>]
QUALIFIER: com.github [ <123:99 123:104>]
QUALIFIER: com.github [ <124:118 124:123>]
QUALIFIER: com.github [ <132:17 132:22>]
QUALIFIER: com.github [ <132:89 132:94>]
QUALIFIER: com.github [ <207:16 207:21>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ <17:9 17:11>]
QUALIFIER: com [ <19:8 19:10>]
QUALIFIER: com [ <20:8 20:10>]
QUALIFIER: com [ <21:8 21:10>]
QUALIFIER: com [ <22:8 22:10>]
QUALIFIER: com [ <23:8 23:10>]
QUALIFIER: com [ <24:8 24:10>]
QUALIFIER: com [ <25:8 25:10>]
QUALIFIER: com [ <26:8 26:10>]
QUALIFIER: com [ <27:8 27:10>]
QUALIFIER: com [ <28:8 28:10>]
QUALIFIER: com [ <29:8 29:10>]
QUALIFIER: com [ <30:8 30:10>]
QUALIFIER: com [ <39:15 39:17>]
QUALIFIER: com [ <46:13 46:15>]
QUALIFIER: com [ <49:36 49:38>]
QUALIFIER: com [ <119:35 119:37>]
QUALIFIER: com [ <120:13 120:15>]
QUALIFIER: com [ <120:93 120:95>]
QUALIFIER: com [ <122:42 122:44>]
QUALIFIER: com [ <123:13 123:15>]
QUALIFIER: com [ <123:95 123:97>]
QUALIFIER: com [ <124:114 124:116>]
QUALIFIER: com [ <132:13 132:15>]
QUALIFIER: com [ <132:85 132:87>]
QUALIFIER: com [ <207:12 207:14>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.ast [ <19:30 19:32>]
QUALIFIER: com.github.javaparser.ast [ <20:30 20:32>]
QUALIFIER: com.github.javaparser.ast [ <21:30 21:32>]
QUALIFIER: com.github.javaparser.ast [ <46:35 46:37>]
QUALIFIER: com.github.javaparser.ast [ <49:58 49:60>]
QUALIFIER: com.github.javaparser.ast [ <119:57 119:59>]
QUALIFIER: com.github.javaparser.ast [ <120:35 120:37>]
QUALIFIER: com.github.javaparser.ast [ <120:115 120:117>]
QUALIFIER: com.github.javaparser.ast [ <122:64 122:66>]
QUALIFIER: com.github.javaparser.ast [ <123:35 123:37>]
QUALIFIER: com.github.javaparser.ast [ <123:117 123:119>]
QUALIFIER: com.github.javaparser.ast [ <124:136 124:138>]
QUALIFIER: com.github.javaparser.ast [ <132:35 132:37>]
QUALIFIER: com.github.javaparser.ast [ <132:107 132:109>]
QUALIFIER: com.github.javaparser.ast [ <207:34 207:36>]
SYMBOL_PACKAGE: com.github.javaparser.ast
QUALIFIER: com.github.javaparser.ast.body [ <20:34 20:37>]
QUALIFIER: com.github.javaparser.ast.body [ <119:61 119:64>]
QUALIFIER: com.github.javaparser.ast.body [ <120:39 120:42>]
QUALIFIER: com.github.javaparser.ast.body [ <120:119 120:122>]
QUALIFIER: com.github.javaparser.ast.body [ <122:68 122:71>]
QUALIFIER: com.github.javaparser.ast.body [ <123:39 123:42>]
QUALIFIER: com.github.javaparser.ast.body [ <123:121 123:124>]
QUALIFIER: com.github.javaparser.ast.body [ <124:140 124:143>]
QUALIFIER: com.github.javaparser.ast.body [ <132:39 132:42>]
QUALIFIER: com.github.javaparser.ast.body [ <132:111 132:114>]
SYMBOL_PACKAGE: com.github.javaparser.ast.body
QUALIFIER: com.github.javaparser.ast.type [ <21:34 21:37>]
QUALIFIER: com.github.javaparser.ast.type [ <46:39 46:42>]
QUALIFIER: com.github.javaparser.ast.type [ <49:62 49:65>]
QUALIFIER: com.github.javaparser.ast.type [ <207:38 207:41>]
SYMBOL_PACKAGE: com.github.javaparser.ast.type
QUALIFIER: com.github.javaparser.symbolsolver.core.resolution [ <22:48 22:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.core.resolution
QUALIFIER: com.github.javaparser.symbolsolver.core [ <22:43 22:46>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.core
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ <121:20 121:35>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ <126:60 126:75>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ <149:21 149:36>]
QUALIFIER: com.github.javaparser.symbolsolver.logic [ <24:43 24:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.logic
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [ <25:43 25:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <26:43 26:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <27:43 27:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <28:43 28:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <29:43 29:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <30:43 30:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <26:49 26:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <27:49 27:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <28:49 28:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <29:49 29:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <30:49 30:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem
QUALIFIER: java.util [ <32:13 32:16>]
QUALIFIER: java.util [ <33:13 33:16>]
QUALIFIER: java.util [ <34:13 34:16>]
QUALIFIER: java.util [ <35:13 35:16>]
QUALIFIER: java.util [ <36:13 36:16>]
QUALIFIER: java.util [ <37:13 37:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [ <32:8 32:11>]
QUALIFIER: java [ <33:8 33:11>]
QUALIFIER: java [ <34:8 34:11>]
QUALIFIER: java [ <35:8 35:11>]
QUALIFIER: java [ <36:8 36:11>]
QUALIFIER: java [ <37:8 37:11>]
SYMBOL_PACKAGE: java
QUALIFIER: java.util.Collections [ <56:16 56:26>]
QUALIFIER: java.util.Collections [ <199:16 199:26>]
QUALIFIER: java.util.stream.Collectors [ <145:101 145:110>]
QUALIFIER: java.util.stream [ <37:18 37:23>]
SYMBOL_PACKAGE: java.util.stream
SYMBOL_METHOD: static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node)
QUALIFIER: com.github.javaparser.symbolsolver.javaparser.Navigator [ <39:61 39:69>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparser [ <39:50 39:59>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparser
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter [ <50:9 50:12>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter [ <51:9 51:12>]
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter [ <44:1 <44:14 44:36> 224:1>]
SYMBOL_FIELD: private com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.wrappedNode [ <46:58 46:68>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.typeSolver [ <47:24 47:33>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <49:5 <49:5 <49:12 49:34> 49:115> 52:5>]
SYMBOL_METHOD: public java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getDeclaredMethods() [ <54:5 <54:5 <55:35 55:52> 55:54> 57:5>]
SYMBOL_METHOD: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getDeclaredMethods()
SYMBOL_PACKAGE: java.lang
SYMBOL_METHOD: static java.util.Set<T> java.util.Collections.emptySet<T>()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <59:5 <59:5 <59:47 59:57> 59:97> 61:5>]
QUALIFIER: java.lang.String [ <140:16 140:21>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContext() [ <154:5 <154:5 <154:20 154:29> 154:31> 156:5>]
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.equals(java.lang.Object) [ <63:5 <63:5 <64:20 64:25> 64:35> 73:5>]
SYMBOL_METHOD: boolean java.lang.Object.equals(java.lang.Object)
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: boolean com.github.javaparser.ast.Node.equals(java.lang.Object)
SYMBOL_METHOD: public int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hashCode() [ <75:5 <75:5 <76:16 76:23> 76:25> 80:5>]
SYMBOL_METHOD: int java.lang.Object.hashCode()
SYMBOL_BUILTIN_TYPE: int
SYMBOL_METHOD: int com.github.javaparser.ast.Node.hashCode()
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getName() [ <82:5 <82:5 <83:19 83:25> 83:27> 85:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getName()
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId()
SYMBOL_METHOD: com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.TypeParameter.getName()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [ <87:5 <87:5 <88:20 88:33> 88:65> 90:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration)
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ <162:5 <162:5 <163:20 163:33> 163:44> 165:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerQualifiedName() [ <92:5 <92:5 <93:19 93:43> 93:45> 102:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getContainerQualifiedName()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() [ <116:5 <116:5 <117:31 117:42> 117:44> 136:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName()
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getQualifiedSignature()
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerId() [ <104:5 <104:5 <105:19 105:32> 105:34> 114:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getContainerId()
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getId()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getContainer()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.util.Optional<N> com.github.javaparser.HasParentNode<T>.getAncestorOfType<N>(java.lang.Class<N>)
SYMBOL_METHOD: boolean java.util.Optional<T>.isPresent()
SYMBOL_METHOD: java.util.Optional<T>.T java.util.Optional<T>.get()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isClass()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.JavaParserConstructorDeclaration(com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration, com.github.javaparser.ast.body.ConstructorDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.asClass()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.JavaParserMethodDeclaration(com.github.javaparser.ast.body.MethodDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.lang.UnsupportedOperationException.UnsupportedOperationException()
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getQualifiedName() [ <138:5 <138:5 <139:19 139:34> 139:36> 141:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getQualifiedName()
SYMBOL_METHOD: static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object)
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <143:5 <143:5 <144:24 144:32> 144:55> 146:5>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound [ <150:23 150:27>]
SYMBOL_METHOD: R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>)
SYMBOL_METHOD: java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>)
SYMBOL_METHOD: java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream()
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.type.TypeParameter.getTypeBound()
SYMBOL_METHOD: private com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toBound(com.github.javaparser.ast.type.ClassOrInterfaceType, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <148:5 <148:5 <148:19 148:25> 148:91> 152:5>]
SYMBOL_METHOD: static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound.extendsBound(com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getUsage(com.github.javaparser.ast.Node) [ <158:5 <158:5 <158:17 158:24> 158:35> 160:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getField(java.lang.String) [ <167:5 <167:5 <168:29 168:36> 168:49> 170:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getField(java.lang.String)
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hasField(java.lang.String) [ <172:5 <172:5 <173:20 173:27> 173:40> 175:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasField(java.lang.String)
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getAllFields() [ <177:5 <177:5 <178:35 178:46> 178:48> 180:5>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAllFields()
SYMBOL_METHOD: java.util.ArrayList<E>.ArrayList()
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getAncestors() [ <182:5 <182:5 <183:32 183:43> 183:45> 185:5>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAncestors()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isTypeParameter() [ <187:5 <187:5 <188:20 188:34> 188:36> 190:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isTypeParameter()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hasDirectlyAnnotation(java.lang.String) [ <192:5 <192:5 <193:20 193:40> 193:62> 195:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasDirectlyAnnotation(java.lang.String)
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getTypeParameters() [ <197:5 <197:5 <198:43 198:59> 198:61> 200:5>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters()
SYMBOL_METHOD: static java.util.List<T> java.util.Collections.emptyList<T>()
SYMBOL_METHOD: public com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getWrappedNode() [ <207:1 <207:1 <207:57 207:70> 207:72> 209:5>]
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toString() [ <211:5 <211:5 <212:19 212:26> 212:28> 214:5>]
SYMBOL_METHOD: java.lang.String java.lang.Object.toString()
SYMBOL_METHOD: public java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.containerType() [ <216:5 <216:5 <217:47 217:59> 217:61> 223:5>]
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.containerType()
SYMBOL_METHOD: static java.util.Optional<T> java.util.Optional<T>.of<T>(T)
QUALIFIER: java.util.Optional [ <220:20 220:27>]
QUALIFIER: java.util.Optional [ <222:16 222:23>]
SYMBOL_METHOD: static java.util.Optional<T> java.util.Optional<T>.empty<T>()
REFERENCE_IMPORT: JavaParserTypeParameter.java -> com.github.javaparser.ast.Node [ <19:34 19:37>]
REFERENCE_IMPORT: JavaParserTypeParameter.java -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ <20:39 20:65>]
REFERENCE_IMPORT: JavaParserTypeParameter.java -> com.github.javaparser.ast.type.ClassOrInterfaceType [ <21:39 21:58>]
REFERENCE_IMPORT: JavaParserTypeParameter.java -> com.github.javaparser.symbolsolver.core.resolution.Context [ <22:59 22:65>]
REFERENCE_IMPORT: JavaParserTypeParameter.java -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ <23:59 23:74>]
REFERENCE_IMPORT: JavaParserTypeParameter.java -> com.github.javaparser.symbolsolver.logic.AbstractTypeDeclaration [ <24:49 24:71>]
REFERENCE_IMPORT: JavaParserTypeParameter.java -> com.github.javaparser.symbolsolver.model.declarations [ <25:49 25:60>]
REFERENCE_IMPORT: JavaParserTypeParameter.java -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <26:60 26:74>]
REFERENCE_IMPORT: JavaParserTypeParameter.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <27:60 27:69>]
REFERENCE_IMPORT: JavaParserTypeParameter.java -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <28:60 28:72>]
REFERENCE_IMPORT: JavaParserTypeParameter.java -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <29:60 29:76>]
REFERENCE_IMPORT: JavaParserTypeParameter.java -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <30:60 30:63>]
REFERENCE_IMPORT: JavaParserTypeParameter.java -> java.util.ArrayList<E> [ <32:18 32:26>]
REFERENCE_IMPORT: JavaParserTypeParameter.java -> java.util.Collections [ <33:18 33:28>]
REFERENCE_IMPORT: JavaParserTypeParameter.java -> java.util.List<E> [ <34:18 34:21>]
REFERENCE_IMPORT: JavaParserTypeParameter.java -> java.util.Optional<T> [ <35:18 35:25>]
REFERENCE_IMPORT: JavaParserTypeParameter.java -> java.util.Set<E> [ <36:18 36:20>]
REFERENCE_IMPORT: JavaParserTypeParameter.java -> java.util.stream.Collectors [ <37:25 37:34>]
REFERENCE_IMPORT: JavaParserTypeParameter.java -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <39:71 39:83>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter -> com.github.javaparser.symbolsolver.logic.AbstractTypeDeclaration [ <44:46 44:68>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <44:81 44:104>]
REFERENCE_TYPE_USAGE: com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.wrappedNode -> com.github.javaparser.ast.type.TypeParameter [ <46:44 46:56>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.typeSolver -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <47:13 47:22>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.type.TypeParameter [ <49:67 49:79>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <49:94 49:103>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.wrappedNode [ <50:14 50:24>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.typeSolver [ <51:14 51:23>]
REFERENCE_OVERRIDE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getDeclaredMethods() -> java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getDeclaredMethods() [ <55:35 55:52>]
REFERENCE_ANNOTATION_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getDeclaredMethods() -> java.lang.Override [ <54:6 54:13>]
REFERENCE_TYPE_ARGUMENT: java.util.Set<E> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <55:16 55:32>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getDeclaredMethods() -> java.util.Set<E> [ <55:12 55:14>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getDeclaredMethods() -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <55:16 55:32>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getDeclaredMethods() -> static java.util.Set<T> java.util.Collections.emptySet<T>() [ <56:28 56:35>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <59:28 59:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <59:12 59:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <59:28 59:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String [ <59:59 59:64>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <59:77 59:80>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E> [ <59:72 59:75>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <59:77 59:80>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <60:29 60:39>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContext() [ <60:16 60:25>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.typeSolver [ <60:70 60:79>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.equals(java.lang.Object) -> boolean java.lang.Object.equals(java.lang.Object) [ <64:20 64:25>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.equals(java.lang.Object) -> java.lang.Override [ <63:6 63:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.equals(java.lang.Object) -> boolean [ <64:12 64:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.equals(java.lang.Object) -> java.lang.Object [ <64:27 64:32>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.equals(java.lang.Object) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter [ <66:28 66:50>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.equals(java.lang.Object) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter [ <68:9 68:31>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.equals(java.lang.Object) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter [ <68:41 68:63>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.equals(java.lang.Object) -> com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.wrappedNode [ <70:13 70:23>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.equals(java.lang.Object) -> com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.wrappedNode [ <70:36 70:46>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.equals(java.lang.Object) -> com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.wrappedNode [ <70:60 70:70>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.equals(java.lang.Object) -> com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.wrappedNode [ <70:80 70:90>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.equals(java.lang.Object) -> boolean com.github.javaparser.ast.Node.equals(java.lang.Object) [ <70:48 70:53>]
REFERENCE_OVERRIDE: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hashCode() -> int java.lang.Object.hashCode() [ <76:16 76:23>]
REFERENCE_ANNOTATION_USAGE: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hashCode() -> java.lang.Override [ <75:6 75:13>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hashCode() -> int [ <76:12 76:14>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hashCode() -> int [ <77:9 77:11>]
REFERENCE_USAGE: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hashCode() -> com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.wrappedNode [ <77:22 77:32>]
REFERENCE_USAGE: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hashCode() -> com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.wrappedNode [ <77:44 77:54>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hashCode() -> int com.github.javaparser.ast.Node.hashCode() [ <77:56 77:63>]
REFERENCE_USAGE: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hashCode() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.typeSolver [ <78:33 78:42>]
REFERENCE_USAGE: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hashCode() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.typeSolver [ <78:54 78:63>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hashCode() -> int java.lang.Object.hashCode() [ <78:65 78:72>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getName() [ <83:19 83:25>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getName() -> java.lang.Override [ <82:6 82:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getName() -> java.lang.String [ <83:12 83:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getName() -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [ <84:38 84:42>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getName() -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.TypeParameter.getName() [ <84:28 84:34>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getName() -> com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.wrappedNode [ <84:16 84:26>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [ <88:20 88:33>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> java.lang.Override [ <87:6 87:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean [ <88:12 88:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <88:35 88:58>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ <89:16 89:29>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <89:35 89:51>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <89:35 89:51>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.typeSolver [ <89:60 89:69>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerQualifiedName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getContainerQualifiedName() [ <93:19 93:43>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerQualifiedName() -> java.lang.Override [ <92:6 92:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerQualifiedName() -> java.lang.String [ <93:12 93:17>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerQualifiedName() -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable [ <94:9 94:26>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerQualifiedName() -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() [ <94:40 94:51>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerQualifiedName() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <95:34 95:57>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerQualifiedName() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <96:22 96:45>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerQualifiedName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName() [ <96:59 96:74>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerQualifiedName() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration [ <97:41 97:72>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerQualifiedName() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration [ <98:22 98:53>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerQualifiedName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getQualifiedSignature() [ <98:67 98:87>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerQualifiedName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getQualifiedSignature() [ <100:62 100:82>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerQualifiedName() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration [ <100:22 100:48>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerId() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getContainerId() [ <105:19 105:32>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerId() -> java.lang.Override [ <104:6 104:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerId() -> java.lang.String [ <105:12 105:17>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerId() -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable [ <106:9 106:26>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerId() -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() [ <106:40 106:51>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerId() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <107:34 107:57>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerId() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <108:22 108:45>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerId() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getId() [ <108:59 108:63>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerId() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration [ <109:41 109:72>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerId() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration [ <110:22 110:53>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerId() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getQualifiedSignature() [ <110:67 110:87>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerId() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getQualifiedSignature() [ <112:62 112:82>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerId() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration [ <112:22 112:48>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getContainer() [ <117:31 117:42>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> java.lang.Override [ <116:6 116:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable [ <117:12 117:29>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.ast.Node [ <118:9 118:12>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <118:27 118:39>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.wrappedNode [ <118:41 118:51>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ <119:66 119:92>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ <120:44 120:70>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ <120:124 120:150>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ <124:22 124:48>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ <124:145 124:171>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) [ <121:53 121:70>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) [ <126:93 126:110>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <121:37 121:39>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <126:77 126:79>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.typeSolver [ <121:41 121:50>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.typeSolver [ <126:81 126:90>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.typeSolver [ <128:118 128:127>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.typeSolver [ <133:73 133:82>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.ast.body.ConstructorDeclaration [ <122:73 122:94>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.ast.body.ConstructorDeclaration [ <123:44 123:65>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.ast.body.ConstructorDeclaration [ <123:126 123:147>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ <124:22 124:48>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> java.util.Optional<T> [ <124:13 124:20>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> java.util.Optional<N> com.github.javaparser.HasParentNode<T>.getAncestorOfType<N>(java.lang.Class<N>) [ <124:96 124:112>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> boolean java.util.Optional<T>.isPresent() [ <125:35 125:43>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <126:17 126:40>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> java.util.Optional<T>.T java.util.Optional<T>.get() [ <126:130 126:132>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isClass() [ <127:37 127:43>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.JavaParserConstructorDeclaration(com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration, com.github.javaparser.ast.body.ConstructorDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <128:32 128:63>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration [ <128:32 128:63>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.asClass() [ <128:81 128:87>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.ast.body.MethodDeclaration [ <132:44 132:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.ast.body.MethodDeclaration [ <132:116 132:132>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.JavaParserMethodDeclaration(com.github.javaparser.ast.body.MethodDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <133:24 133:50>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration [ <133:24 133:50>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <135:19 135:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() -> java.lang.UnsupportedOperationException [ <135:19 135:47>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getQualifiedName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getQualifiedName() [ <139:19 139:34>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getQualifiedName() -> java.lang.Override [ <138:6 138:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getQualifiedName() -> java.lang.String [ <139:12 139:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getQualifiedName() -> static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object) [ <140:23 140:28>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getQualifiedName() -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerQualifiedName() [ <140:39 140:63>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getQualifiedName() -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getName() [ <140:68 140:74>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <144:24 144:32>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <143:6 143:13>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound [ <144:17 144:21>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [ <144:12 144:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound [ <144:17 144:21>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <144:34 144:43>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [ <145:93 145:99>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>) [ <145:52 145:54>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [ <145:43 145:48>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.type.TypeParameter.getTypeBound() [ <145:28 145:39>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.wrappedNode [ <145:16 145:26>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toBound(com.github.javaparser.ast.type.ClassOrInterfaceType, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <145:66 145:72>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [ <145:112 145:117>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toBound(com.github.javaparser.ast.type.ClassOrInterfaceType, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound [ <148:13 148:17>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toBound(com.github.javaparser.ast.type.ClassOrInterfaceType, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound [ <150:9 150:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toBound(com.github.javaparser.ast.type.ClassOrInterfaceType, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.type.ClassOrInterfaceType [ <148:27 148:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toBound(com.github.javaparser.ast.type.ClassOrInterfaceType, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <148:70 148:79>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toBound(com.github.javaparser.ast.type.ClassOrInterfaceType, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <149:9 149:12>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toBound(com.github.javaparser.ast.type.ClassOrInterfaceType, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node) [ <149:54 149:67>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toBound(com.github.javaparser.ast.type.ClassOrInterfaceType, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <149:38 149:40>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toBound(com.github.javaparser.ast.type.ClassOrInterfaceType, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound.extendsBound(com.github.javaparser.symbolsolver.model.typesystem.Type) [ <150:29 150:40>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContext() -> com.github.javaparser.symbolsolver.core.resolution.Context [ <154:12 154:18>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContext() -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <155:19 155:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContext() -> java.lang.UnsupportedOperationException [ <155:19 155:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getUsage(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <158:12 158:15>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getUsage(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [ <158:26 158:29>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getUsage(com.github.javaparser.ast.Node) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <159:19 159:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getUsage(com.github.javaparser.ast.Node) -> java.lang.UnsupportedOperationException [ <159:19 159:47>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ <163:20 163:33>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.Override [ <162:6 162:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean [ <163:12 163:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <163:35 163:38>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <164:19 164:47>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.UnsupportedOperationException [ <164:19 164:47>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getField(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getField(java.lang.String) [ <168:29 168:36>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getField(java.lang.String) -> java.lang.Override [ <167:6 167:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getField(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [ <168:12 168:27>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getField(java.lang.String) -> java.lang.String [ <168:38 168:43>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getField(java.lang.String) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <169:19 169:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getField(java.lang.String) -> java.lang.UnsupportedOperationException [ <169:19 169:47>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hasField(java.lang.String) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasField(java.lang.String) [ <173:20 173:27>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hasField(java.lang.String) -> java.lang.Override [ <172:6 172:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hasField(java.lang.String) -> boolean [ <173:12 173:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hasField(java.lang.String) -> java.lang.String [ <173:29 173:34>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getAllFields() -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAllFields() [ <178:35 178:46>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getAllFields() -> java.lang.Override [ <177:6 177:13>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [ <178:17 178:32>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getAllFields() -> java.util.List<E> [ <178:12 178:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getAllFields() -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [ <178:17 178:32>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getAllFields() -> java.util.ArrayList<E>.ArrayList() [ <179:20 179:30>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getAllFields() -> java.util.ArrayList<E> [ <179:20 179:28>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getAncestors() -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAncestors() [ <183:32 183:43>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getAncestors() -> java.lang.Override [ <182:6 182:13>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <183:17 183:29>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getAncestors() -> java.util.List<E> [ <183:12 183:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getAncestors() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <183:17 183:29>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getAncestors() -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <184:19 184:47>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getAncestors() -> java.lang.UnsupportedOperationException [ <184:19 184:47>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isTypeParameter() -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isTypeParameter() [ <188:20 188:34>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isTypeParameter() -> java.lang.Override [ <187:6 187:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isTypeParameter() -> boolean [ <188:12 188:18>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hasDirectlyAnnotation(java.lang.String) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasDirectlyAnnotation(java.lang.String) [ <193:20 193:40>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hasDirectlyAnnotation(java.lang.String) -> java.lang.Override [ <192:6 192:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hasDirectlyAnnotation(java.lang.String) -> boolean [ <193:12 193:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hasDirectlyAnnotation(java.lang.String) -> java.lang.String [ <193:42 193:47>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hasDirectlyAnnotation(java.lang.String) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <194:19 194:47>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hasDirectlyAnnotation(java.lang.String) -> java.lang.UnsupportedOperationException [ <194:19 194:47>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getTypeParameters() -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [ <198:43 198:59>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getTypeParameters() -> java.lang.Override [ <197:6 197:13>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <198:17 198:40>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getTypeParameters() -> java.util.List<E> [ <198:12 198:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getTypeParameters() -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <198:17 198:40>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getTypeParameters() -> static java.util.List<T> java.util.Collections.emptyList<T>() [ <199:28 199:36>]
REFERENCE_TYPE_USAGE: com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getWrappedNode() -> com.github.javaparser.ast.type.TypeParameter [ <207:43 207:55>]
REFERENCE_USAGE: com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getWrappedNode() -> com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.wrappedNode [ <208:16 208:26>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toString() -> java.lang.String java.lang.Object.toString() [ <212:19 212:26>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toString() -> java.lang.Override [ <211:6 211:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toString() -> java.lang.String [ <212:12 212:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toString() -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.TypeParameter.getName() [ <213:49 213:55>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toString() -> com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.wrappedNode [ <213:37 213:47>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toString() -> com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.wrappedNode [ <213:75 213:85>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toString() -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.type.TypeParameter.getTypeBound() [ <213:87 213:98>]
REFERENCE_OVERRIDE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.containerType() -> java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.containerType() [ <217:47 217:59>]
REFERENCE_ANNOTATION_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.containerType() -> java.lang.Override [ <216:6 216:13>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <217:21 217:44>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.containerType() -> java.util.Optional<T> [ <217:12 217:19>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.containerType() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <217:21 217:44>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.containerType() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <219:34 219:57>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.containerType() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <220:33 220:56>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.containerType() -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable [ <218:9 218:26>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.containerType() -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer() [ <218:40 218:51>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.containerType() -> static java.util.Optional<T> java.util.Optional<T>.of<T>(T) [ <220:29 220:30>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.containerType() -> static java.util.Optional<T> java.util.Optional<T>.empty<T>() [ <222:25 222:29>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<105:36> [ <105:36 105:36>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<105:36> [ <114:5 114:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<107:60> [ <107:60 107:60>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<107:60> [ <109:9 109:9>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<109:75> [ <109:75 109:75>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<109:75> [ <111:9 111:9>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<111:16> [ <111:16 111:16>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<111:16> [ <113:9 113:9>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<117:46> [ <117:46 117:46>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<117:46> [ <136:5 136:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<119:95> [ <119:95 119:95>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<119:95> [ <122:9 122:9>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<122:96> [ <122:96 122:96>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<122:96> [ <131:9 131:9>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<125:48> [ <125:48 125:48>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<125:48> [ <130:13 130:13>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<127:48> [ <127:48 127:48>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<127:48> [ <129:17 129:17>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<131:16> [ <131:16 131:16>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<131:16> [ <134:9 134:9>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<139:38> [ <139:38 139:38>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<139:38> [ <141:5 141:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<144:57> [ <144:57 144:57>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<144:57> [ <146:5 146:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<148:93> [ <148:93 148:93>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<148:93> [ <152:5 152:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<154:33> [ <154:33 154:33>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<154:33> [ <156:5 156:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<158:37> [ <158:37 158:37>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<158:37> [ <160:5 160:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<163:46> [ <163:46 163:46>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<163:46> [ <165:5 165:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<168:51> [ <168:51 168:51>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<168:51> [ <170:5 170:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<173:42> [ <173:42 173:42>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<173:42> [ <175:5 175:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<178:50> [ <178:50 178:50>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<178:50> [ <180:5 180:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<183:47> [ <183:47 183:47>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<183:47> [ <185:5 185:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<188:38> [ <188:38 188:38>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<188:38> [ <190:5 190:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<193:64> [ <193:64 193:64>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<193:64> [ <195:5 195:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<198:63> [ <198:63 198:63>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<198:63> [ <200:5 200:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<207:74> [ <207:74 207:74>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<207:74> [ <209:5 209:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<212:30> [ <212:30 212:30>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<212:30> [ <214:5 214:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<217:63> [ <217:63 217:63>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<217:63> [ <223:5 223:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<219:60> [ <219:60 219:60>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<219:60> [ <221:9 221:9>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<44:106> [ <44:106 44:106>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<44:106> [ <224:1 224:1>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<49:117> [ <49:117 49:117>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<49:117> [ <52:5 52:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<55:56> [ <55:56 55:56>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<55:56> [ <57:5 57:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<59:99> [ <59:99 59:99>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<59:99> [ <61:5 61:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<64:37> [ <64:37 64:37>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<64:37> [ <73:5 73:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<76:27> [ <76:27 76:27>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<76:27> [ <80:5 80:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<83:29> [ <83:29 83:29>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<83:29> [ <85:5 85:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<88:67> [ <88:67 88:67>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<88:67> [ <90:5 90:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<93:47> [ <93:47 93:47>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<93:47> [ <102:5 102:5>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<95:60> [ <95:60 95:60>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<95:60> [ <97:9 97:9>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<97:75> [ <97:75 97:75>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<97:75> [ <99:9 99:9>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<99:16> [ <99:16 99:16>]
LOCAL_SYMBOL: JavaParserTypeParameter.java<99:16> [ <101:9 101:9>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter<0> [ <49:81 49:91>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter<0> [ <50:28 50:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter<1> [ <49:105 49:114>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter<1> [ <51:27 51:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.containerType<0> [ <218:28 218:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.containerType<0> [ <219:13 219:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.containerType<0> [ <220:59 220:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.equals<0> [ <64:34 64:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.equals<0> [ <65:21 65:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.equals<0> [ <66:15 66:15>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.equals<0> [ <68:66 68:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.equals<1> [ <68:33 68:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.equals<1> [ <70:55 70:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.equals<1> [ <70:75 70:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getBounds<0> [ <144:45 144:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getBounds<0> [ <145:80 145:89>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer<0> [ <118:14 118:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer<0> [ <119:13 119:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer<0> [ <120:153 120:162>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer<0> [ <122:20 122:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer<0> [ <123:150 123:159>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer<0> [ <132:135 132:144>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer<1> [ <120:72 120:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer<1> [ <121:72 121:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer<2> [ <123:67 123:90>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer<2> [ <124:71 124:94>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer<2> [ <128:92 128:115>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer<3> [ <124:51 124:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer<3> [ <125:17 125:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer<3> [ <126:112 126:128>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer<4> [ <126:42 126:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer<4> [ <127:21 127:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer<4> [ <128:65 128:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer<5> [ <132:62 132:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainer<5> [ <133:52 133:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerId<0> [ <106:28 106:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerId<0> [ <107:13 107:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerId<0> [ <108:48 108:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerId<0> [ <109:20 109:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerId<0> [ <110:56 110:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerId<0> [ <112:51 112:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerQualifiedName<0> [ <94:28 94:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerQualifiedName<0> [ <95:13 95:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerQualifiedName<0> [ <96:48 96:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerQualifiedName<0> [ <97:20 97:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerQualifiedName<0> [ <98:56 98:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getContainerQualifiedName<0> [ <100:51 100:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getField<0> [ <168:45 168:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.getUsage<0> [ <158:31 158:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hasDirectlyAnnotation<0> [ <193:49 193:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hasField<0> [ <173:36 173:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hashCode<0> [ <77:13 77:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hashCode<0> [ <78:9 78:14>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hashCode<0> [ <78:23 78:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.hashCode<0> [ <79:16 79:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isAssignableBy<0> [ <88:60 88:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isAssignableBy<0> [ <89:53 89:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.isAssignableBy<0> [ <163:40 163:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.solveMethod<0> [ <59:66 59:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.solveMethod<0> [ <60:41 60:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.solveMethod<1> [ <59:83 59:96>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.solveMethod<1> [ <60:47 60:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toBound<0> [ <148:48 148:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toBound<0> [ <149:69 149:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toBound<0> [ <149:91 149:110>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toBound<1> [ <148:81 148:90>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toBound<1> [ <149:42 149:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toBound<2> [ <149:14 149:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toBound<2> [ <150:42 150:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toBound<3> [ <150:15 150:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.toBound<3> [ <151:16 151:20>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<2> [ <145:57 145:60>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<2> [ <145:74 145:77>]
COMMENT: comment [ <1:1 15:3>]
COMMENT: comment [ <41:1 43:3>]
COMMENT: comment [ <202:5 206:7>]
