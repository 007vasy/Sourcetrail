FILE: TypeVariable.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem [ <17:50 17:59>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <17:44 17:48>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <19:43 19:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver [ <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ <19:30 19:41>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ <17:20 17:29>]
QUALIFIER: com.github.javaparser [ <19:19 19:28>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ <17:13 17:18>]
QUALIFIER: com.github [ <19:12 19:17>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ <17:9 17:11>]
QUALIFIER: com [ <19:8 19:10>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <19:49 19:60>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: java.util [ <21:13 21:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [ <21:8 21:11>]
SYMBOL_PACKAGE: java
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [ <34:9 34:12>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [ <43:16 43:19>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [ <77:44 77:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [ <78:31 78:34>]
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [ <29:1 <29:14 29:25> 119:1>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.typeParameter [ <31:38 31:50>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.TypeVariable(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration) [ <33:5 <33:5 <33:12 33:23> 33:63> 35:5>]
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.toString() [ <37:5 <37:5 <38:19 38:26> 38:28> 40:5>]
SYMBOL_METHOD: java.lang.String java.lang.Object.toString()
SYMBOL_PACKAGE: java.lang
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getQualifiedName()
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.qualifiedName() [ <42:5 <42:5 <42:19 42:31> 42:33> 44:5>]
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals(java.lang.Object) [ <46:5 <46:5 <47:20 47:25> 47:35> 58:5>]
SYMBOL_METHOD: boolean java.lang.Object.equals(java.lang.Object)
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: java.lang.Class<?> java.lang.Object.getClass()
SYMBOL_METHOD: boolean java.lang.String.equals(java.lang.Object)
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getName()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.declaredOnType()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.declaredOnMethod()
SYMBOL_METHOD: public int com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.hashCode() [ <60:5 <60:5 <61:16 61:23> 61:25> 63:5>]
SYMBOL_METHOD: int java.lang.Object.hashCode()
SYMBOL_BUILTIN_TYPE: int
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isArray() [ <65:5 <65:5 <66:20 66:26> 66:28> 68:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isPrimitive() [ <70:5 <70:5 <71:20 71:30> 71:32> 73:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <75:5 <75:5 <76:17 76:36> 76:143> 83:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>)
SYMBOL_METHOD: java.util.Map<K, V>.V java.util.Map<K, V>.put(java.util.Map<K, V>.K, java.util.Map<K, V>.V)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.asTypeParameter() [ <95:5 <95:5 <96:37 96:51> 96:53> 98:5>]
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isReferenceType() [ <85:5 <85:5 <86:20 86:34> 86:36> 88:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType()
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.describe() [ <90:5 <90:5 <91:19 91:26> 91:28> 93:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.TypeVariable com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.asTypeVariable() [ <100:5 <100:5 <101:25 101:38> 101:40> 103:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeVariable()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isTypeVariable() [ <105:5 <105:5 <106:20 106:33> 106:35> 108:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ <110:5 <110:5 <111:20 111:33> 111:45> 117:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type)
REFERENCE_IMPORT: TypeVariable.java -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <19:62 19:85>]
REFERENCE_IMPORT: TypeVariable.java -> java.util.Map<K, V> [ <21:18 21:20>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <29:38 29:41>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.typeParameter -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <31:13 31:36>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.TypeVariable(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <33:25 33:48>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.TypeVariable(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.typeParameter [ <34:14 34:26>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.toString() -> java.lang.String java.lang.Object.toString() [ <38:19 38:26>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.toString() -> java.lang.Override [ <37:6 37:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.toString() -> java.lang.String [ <38:12 38:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.toString() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getQualifiedName() [ <39:49 39:64>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.toString() -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.typeParameter [ <39:35 39:47>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.qualifiedName() -> java.lang.String [ <42:12 42:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.qualifiedName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getQualifiedName() [ <43:35 43:50>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.qualifiedName() -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.typeParameter [ <43:21 43:33>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals(java.lang.Object) -> boolean java.lang.Object.equals(java.lang.Object) [ <47:20 47:25>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals(java.lang.Object) -> java.lang.Override [ <46:6 46:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals(java.lang.Object) -> boolean [ <47:12 47:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals(java.lang.Object) -> java.lang.Object [ <47:27 47:32>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals(java.lang.Object) -> java.lang.Class<?> java.lang.Object.getClass() [ <49:26 49:33>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals(java.lang.Object) -> java.lang.Class<?> java.lang.Object.getClass() [ <49:42 49:49>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals(java.lang.Object) -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [ <51:9 51:20>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals(java.lang.Object) -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [ <51:30 51:41>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals(java.lang.Object) -> boolean java.lang.String.equals(java.lang.Object) [ <53:38 53:43>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals(java.lang.Object) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getName() [ <53:28 53:34>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals(java.lang.Object) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getName() [ <53:64 53:70>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals(java.lang.Object) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.typeParameter [ <53:14 53:26>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals(java.lang.Object) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.typeParameter [ <53:50 53:62>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals(java.lang.Object) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.typeParameter [ <54:13 54:25>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals(java.lang.Object) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.typeParameter [ <54:52 54:64>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals(java.lang.Object) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.typeParameter [ <55:13 55:25>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals(java.lang.Object) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.typeParameter [ <55:54 55:66>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals(java.lang.Object) -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.declaredOnType() [ <54:27 54:40>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals(java.lang.Object) -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.declaredOnType() [ <54:66 54:79>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals(java.lang.Object) -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.declaredOnMethod() [ <55:27 55:42>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals(java.lang.Object) -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.declaredOnMethod() [ <55:68 55:83>]
REFERENCE_OVERRIDE: int com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.hashCode() -> int java.lang.Object.hashCode() [ <61:16 61:23>]
REFERENCE_ANNOTATION_USAGE: int com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.hashCode() -> java.lang.Override [ <60:6 60:13>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.hashCode() -> int [ <61:12 61:14>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.hashCode() -> int java.lang.Object.hashCode() [ <62:30 62:37>]
REFERENCE_USAGE: int com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.hashCode() -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.typeParameter [ <62:16 62:28>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isArray() -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray() [ <66:20 66:26>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isArray() -> java.lang.Override [ <65:6 65:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isArray() -> boolean [ <66:12 66:18>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isPrimitive() -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive() [ <71:20 71:30>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isPrimitive() -> java.lang.Override [ <70:6 70:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isPrimitive() -> boolean [ <71:12 71:18>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <76:17 76:36>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.Override [ <75:6 75:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <76:12 76:15>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <76:79 76:82>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <76:124 76:127>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <76:38 76:61>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <76:98 76:121>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <76:98 76:121>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <76:124 76:127>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V> [ <76:94 76:96>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean java.lang.String.equals(java.lang.Object) [ <77:37 77:42>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getName() [ <77:27 77:33>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getName() [ <77:63 77:69>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.typeParameter [ <77:49 77:61>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V>.V java.util.Map<K, V>.put(java.util.Map<K, V>.K, java.util.Map<K, V>.V) [ <78:27 78:29>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.asTypeParameter() [ <78:36 78:50>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isReferenceType() -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [ <86:20 86:34>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isReferenceType() -> java.lang.Override [ <85:6 85:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isReferenceType() -> boolean [ <86:12 86:18>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.describe() -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe() [ <91:19 91:26>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.describe() -> java.lang.Override [ <90:6 90:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.describe() -> java.lang.String [ <91:12 91:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.describe() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getName() [ <92:30 92:36>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.describe() -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.typeParameter [ <92:16 92:28>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.asTypeParameter() -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter() [ <96:37 96:51>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.asTypeParameter() -> java.lang.Override [ <95:6 95:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.asTypeParameter() -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <96:12 96:35>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.asTypeParameter() -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.typeParameter [ <97:16 97:28>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.asTypeVariable() -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeVariable() [ <101:25 101:38>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.asTypeVariable() -> java.lang.Override [ <100:6 100:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.asTypeVariable() -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [ <101:12 101:23>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isTypeVariable() -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [ <106:20 106:33>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isTypeVariable() -> java.lang.Override [ <105:6 105:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isTypeVariable() -> boolean [ <106:12 106:18>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ <111:20 111:33>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.Override [ <110:6 110:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean [ <111:12 111:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <111:35 111:38>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [ <112:19 112:32>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean java.lang.String.equals(java.lang.Object) [ <113:31 113:36>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.describe() [ <113:20 113:27>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe() [ <113:44 113:51>]
LOCAL_SYMBOL: TypeVariable.java<101:42> [ <101:42 101:42>]
LOCAL_SYMBOL: TypeVariable.java<101:42> [ <103:5 103:5>]
LOCAL_SYMBOL: TypeVariable.java<106:37> [ <106:37 106:37>]
LOCAL_SYMBOL: TypeVariable.java<106:37> [ <108:5 108:5>]
LOCAL_SYMBOL: TypeVariable.java<111:47> [ <111:47 111:47>]
LOCAL_SYMBOL: TypeVariable.java<111:47> [ <117:5 117:5>]
LOCAL_SYMBOL: TypeVariable.java<112:37> [ <112:37 112:37>]
LOCAL_SYMBOL: TypeVariable.java<112:37> [ <114:9 114:9>]
LOCAL_SYMBOL: TypeVariable.java<114:16> [ <114:16 114:16>]
LOCAL_SYMBOL: TypeVariable.java<114:16> [ <116:9 116:9>]
LOCAL_SYMBOL: TypeVariable.java<29:43> [ <29:43 29:43>]
LOCAL_SYMBOL: TypeVariable.java<29:43> [ <119:1 119:1>]
LOCAL_SYMBOL: TypeVariable.java<33:65> [ <33:65 33:65>]
LOCAL_SYMBOL: TypeVariable.java<33:65> [ <35:5 35:5>]
LOCAL_SYMBOL: TypeVariable.java<38:30> [ <38:30 38:30>]
LOCAL_SYMBOL: TypeVariable.java<38:30> [ <40:5 40:5>]
LOCAL_SYMBOL: TypeVariable.java<42:35> [ <42:35 42:35>]
LOCAL_SYMBOL: TypeVariable.java<42:35> [ <44:5 44:5>]
LOCAL_SYMBOL: TypeVariable.java<47:37> [ <47:37 47:37>]
LOCAL_SYMBOL: TypeVariable.java<47:37> [ <58:5 58:5>]
LOCAL_SYMBOL: TypeVariable.java<61:27> [ <61:27 61:27>]
LOCAL_SYMBOL: TypeVariable.java<61:27> [ <63:5 63:5>]
LOCAL_SYMBOL: TypeVariable.java<66:30> [ <66:30 66:30>]
LOCAL_SYMBOL: TypeVariable.java<66:30> [ <68:5 68:5>]
LOCAL_SYMBOL: TypeVariable.java<71:34> [ <71:34 71:34>]
LOCAL_SYMBOL: TypeVariable.java<71:34> [ <73:5 73:5>]
LOCAL_SYMBOL: TypeVariable.java<76:145> [ <76:145 76:145>]
LOCAL_SYMBOL: TypeVariable.java<76:145> [ <83:5 83:5>]
LOCAL_SYMBOL: TypeVariable.java<77:74> [ <77:74 77:74>]
LOCAL_SYMBOL: TypeVariable.java<77:74> [ <80:9 80:9>]
LOCAL_SYMBOL: TypeVariable.java<80:16> [ <80:16 80:16>]
LOCAL_SYMBOL: TypeVariable.java<80:16> [ <82:9 82:9>]
LOCAL_SYMBOL: TypeVariable.java<86:38> [ <86:38 86:38>]
LOCAL_SYMBOL: TypeVariable.java<86:38> [ <88:5 88:5>]
LOCAL_SYMBOL: TypeVariable.java<91:30> [ <91:30 91:30>]
LOCAL_SYMBOL: TypeVariable.java<91:30> [ <93:5 93:5>]
LOCAL_SYMBOL: TypeVariable.java<96:55> [ <96:55 96:55>]
LOCAL_SYMBOL: TypeVariable.java<96:55> [ <98:5 98:5>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.TypeVariable<0> [ <33:50 33:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.TypeVariable<0> [ <34:30 34:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals<0> [ <47:34 47:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals<0> [ <48:21 48:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals<0> [ <49:13 49:13>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals<0> [ <49:40 49:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals<0> [ <51:44 51:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals<1> [ <51:22 51:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals<1> [ <53:45 53:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals<1> [ <54:47 54:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.equals<1> [ <55:49 55:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isAssignableBy<0> [ <111:40 111:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isAssignableBy<0> [ <112:13 112:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.isAssignableBy<0> [ <113:38 113:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.replaceTypeVariables<0> [ <76:63 76:76>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.replaceTypeVariables<0> [ <77:12 77:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.replaceTypeVariables<1> [ <76:84 76:91>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.replaceTypeVariables<1> [ <78:55 78:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.replaceTypeVariables<1> [ <79:20 79:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.replaceTypeVariables<2> [ <76:130 76:142>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.replaceTypeVariables<2> [ <78:13 78:25>]
COMMENT: comment [ <1:1 15:3>]
COMMENT: comment [ <23:1 28:3>]
