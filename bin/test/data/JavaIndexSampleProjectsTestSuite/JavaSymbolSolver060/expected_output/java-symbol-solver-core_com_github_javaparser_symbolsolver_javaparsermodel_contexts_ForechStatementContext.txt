FILE: ForechStatementContext.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts [ <17:60 17:67>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <17:44 17:58>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <22:43 22:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel
QUALIFIER: com.github.javaparser.symbolsolver [ <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ <22:30 22:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <23:30 23:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <24:30 24:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <25:30 25:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <26:30 26:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <27:30 27:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <31:37 31:48>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ <17:20 17:29>]
QUALIFIER: com.github.javaparser [ <19:19 19:28>]
QUALIFIER: com.github.javaparser [ <20:19 20:28>]
QUALIFIER: com.github.javaparser [ <21:19 21:28>]
QUALIFIER: com.github.javaparser [ <22:19 22:28>]
QUALIFIER: com.github.javaparser [ <23:19 23:28>]
QUALIFIER: com.github.javaparser [ <24:19 24:28>]
QUALIFIER: com.github.javaparser [ <25:19 25:28>]
QUALIFIER: com.github.javaparser [ <26:19 26:28>]
QUALIFIER: com.github.javaparser [ <27:19 27:28>]
QUALIFIER: com.github.javaparser [ <31:26 31:35>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ <17:13 17:18>]
QUALIFIER: com.github [ <19:12 19:17>]
QUALIFIER: com.github [ <20:12 20:17>]
QUALIFIER: com.github [ <21:12 21:17>]
QUALIFIER: com.github [ <22:12 22:17>]
QUALIFIER: com.github [ <23:12 23:17>]
QUALIFIER: com.github [ <24:12 24:17>]
QUALIFIER: com.github [ <25:12 25:17>]
QUALIFIER: com.github [ <26:12 26:17>]
QUALIFIER: com.github [ <27:12 27:17>]
QUALIFIER: com.github [ <31:19 31:24>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ <17:9 17:11>]
QUALIFIER: com [ <19:8 19:10>]
QUALIFIER: com [ <20:8 20:10>]
QUALIFIER: com [ <21:8 21:10>]
QUALIFIER: com [ <22:8 22:10>]
QUALIFIER: com [ <23:8 23:10>]
QUALIFIER: com [ <24:8 24:10>]
QUALIFIER: com [ <25:8 25:10>]
QUALIFIER: com [ <26:8 26:10>]
QUALIFIER: com [ <27:8 27:10>]
QUALIFIER: com [ <31:15 31:17>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.ast.body [ <19:34 19:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.body
QUALIFIER: com.github.javaparser.ast [ <19:30 19:32>]
QUALIFIER: com.github.javaparser.ast [ <20:30 20:32>]
QUALIFIER: com.github.javaparser.ast [ <21:30 21:32>]
SYMBOL_PACKAGE: com.github.javaparser.ast
QUALIFIER: com.github.javaparser.ast.stmt [ <20:34 20:37>]
QUALIFIER: com.github.javaparser.ast.stmt [ <21:34 21:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.stmt
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserSymbolDeclaration [ <46:43 46:69>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations [ <22:59 22:70>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <23:49 23:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <24:49 24:60>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [ <23:43 23:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <24:43 24:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <25:43 25:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <26:43 26:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <27:43 27:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <25:49 25:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <26:49 26:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <27:49 27:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem
QUALIFIER: java.util [ <29:13 29:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [ <29:8 29:11>]
SYMBOL_PACKAGE: java
SYMBOL_METHOD: static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node)
QUALIFIER: com.github.javaparser.symbolsolver.javaparser.Navigator [ <31:61 31:69>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparser [ <31:50 31:59>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparser
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext [ <33:1 <33:14 33:35> 60:1>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.ForechStatementContext(com.github.javaparser.ast.stmt.ForeachStmt, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <35:5 <35:5 <35:12 35:33> 35:81> 37:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <39:5 <39:5 <40:56 40:66> 40:102> 54:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_PACKAGE: java.lang
SYMBOL_METHOD: int com.github.javaparser.ast.NodeList<N>.size()
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.VariableDeclarator> com.github.javaparser.ast.expr.VariableDeclarationExpr.getVariables()
SYMBOL_METHOD: com.github.javaparser.ast.expr.VariableDeclarationExpr com.github.javaparser.ast.stmt.ForeachStmt.getVariable()
SYMBOL_FIELD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
SYMBOL_METHOD: java.lang.IllegalStateException.IllegalStateException()
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<N>.N com.github.javaparser.ast.NodeList<N>.get(int)
SYMBOL_METHOD: boolean java.lang.String.equals(java.lang.Object)
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId()
SYMBOL_METHOD: com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.VariableDeclarator.getName()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2)
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <46:20 46:34>]
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserSymbolDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserSymbolDeclaration.localVar(com.github.javaparser.ast.body.VariableDeclarator, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement)
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext [ <49:24 49:39>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <56:5 <56:5 <57:47 57:57> 57:140> 59:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_BUILTIN_TYPE: boolean
REFERENCE_IMPORT: ForechStatementContext.java -> com.github.javaparser.ast.body.VariableDeclarator [ <19:39 19:56>]
REFERENCE_IMPORT: ForechStatementContext.java -> com.github.javaparser.ast.stmt.BlockStmt [ <20:39 20:47>]
REFERENCE_IMPORT: ForechStatementContext.java -> com.github.javaparser.ast.stmt.ForeachStmt [ <21:39 21:49>]
REFERENCE_IMPORT: ForechStatementContext.java -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserSymbolDeclaration [ <22:72 22:98>]
REFERENCE_IMPORT: ForechStatementContext.java -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <23:62 23:78>]
REFERENCE_IMPORT: ForechStatementContext.java -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [ <24:62 24:77>]
REFERENCE_IMPORT: ForechStatementContext.java -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <25:60 25:74>]
REFERENCE_IMPORT: ForechStatementContext.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <26:60 26:69>]
REFERENCE_IMPORT: ForechStatementContext.java -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <27:60 27:63>]
REFERENCE_IMPORT: ForechStatementContext.java -> java.util.List<E> [ <29:18 29:21>]
REFERENCE_IMPORT: ForechStatementContext.java -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <31:71 31:83>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N> -> com.github.javaparser.ast.stmt.ForeachStmt [ <33:71 33:81>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N> [ <33:45 33:69>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext -> com.github.javaparser.ast.stmt.ForeachStmt [ <33:71 33:81>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.ForechStatementContext(com.github.javaparser.ast.stmt.ForeachStmt, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <35:12 35:33>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.ForechStatementContext(com.github.javaparser.ast.stmt.ForeachStmt, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.ForeachStmt [ <35:35 35:45>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.ForechStatementContext(com.github.javaparser.ast.stmt.ForeachStmt, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <35:60 35:69>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.ForechStatementContext(com.github.javaparser.ast.stmt.ForeachStmt, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <36:9 36:13>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <40:56 40:66>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <39:6 39:13>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> ? extends ValueDeclaration [ <40:28 40:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <40:12 40:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [ <40:38 40:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <40:68 40:73>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <40:81 40:90>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int com.github.javaparser.ast.NodeList<N>.size() [ <41:54 41:57>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.VariableDeclarator> com.github.javaparser.ast.expr.VariableDeclarationExpr.getVariables() [ <41:39 41:50>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.VariableDeclarator> com.github.javaparser.ast.expr.VariableDeclarationExpr.getVariables() [ <44:75 44:86>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.VariableDeclarationExpr com.github.javaparser.ast.stmt.ForeachStmt.getVariable() [ <41:25 41:35>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.VariableDeclarationExpr com.github.javaparser.ast.stmt.ForeachStmt.getVariable() [ <44:61 44:71>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <41:13 41:23>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <44:49 44:59>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <48:31 48:41>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <49:72 49:82>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.IllegalStateException.IllegalStateException() [ <42:23 42:43>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.IllegalStateException [ <42:23 42:43>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.VariableDeclarator [ <44:9 44:26>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<N>.N com.github.javaparser.ast.NodeList<N>.get(int) [ <44:90 44:92>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [ <45:50 45:55>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [ <45:42 45:46>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.VariableDeclarator.getName() [ <45:32 45:38>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [ <46:36 46:41>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserSymbolDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserSymbolDeclaration.localVar(com.github.javaparser.ast.body.VariableDeclarator, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <46:71 46:78>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <48:17 48:29>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.BlockStmt [ <48:55 48:63>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) [ <49:41 49:52>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <51:36 51:46>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ <51:24 51:32>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <57:47 57:57>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <56:6 56:13>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <57:28 57:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <57:12 57:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <57:28 57:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <57:59 57:64>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <57:77 57:80>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [ <57:72 57:75>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <57:77 57:80>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [ <57:99 57:105>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <57:119 57:128>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <58:28 58:38>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ <58:16 58:24>]
LOCAL_SYMBOL: ForechStatementContext.java<33:84> [ <33:84 33:84>]
LOCAL_SYMBOL: ForechStatementContext.java<33:84> [ <60:1 60:1>]
LOCAL_SYMBOL: ForechStatementContext.java<35:83> [ <35:83 35:83>]
LOCAL_SYMBOL: ForechStatementContext.java<35:83> [ <37:5 37:5>]
LOCAL_SYMBOL: ForechStatementContext.java<40:104> [ <40:104 40:104>]
LOCAL_SYMBOL: ForechStatementContext.java<40:104> [ <54:5 54:5>]
LOCAL_SYMBOL: ForechStatementContext.java<41:67> [ <41:67 41:67>]
LOCAL_SYMBOL: ForechStatementContext.java<41:67> [ <43:9 43:9>]
LOCAL_SYMBOL: ForechStatementContext.java<45:64> [ <45:64 45:64>]
LOCAL_SYMBOL: ForechStatementContext.java<45:64> [ <47:9 47:9>]
LOCAL_SYMBOL: ForechStatementContext.java<47:16> [ <47:16 47:16>]
LOCAL_SYMBOL: ForechStatementContext.java<47:16> [ <53:9 53:9>]
LOCAL_SYMBOL: ForechStatementContext.java<48:66> [ <48:66 48:66>]
LOCAL_SYMBOL: ForechStatementContext.java<48:66> [ <50:13 50:13>]
LOCAL_SYMBOL: ForechStatementContext.java<50:20> [ <50:20 50:20>]
LOCAL_SYMBOL: ForechStatementContext.java<50:20> [ <52:13 52:13>]
LOCAL_SYMBOL: ForechStatementContext.java<57:142> [ <57:142 57:142>]
LOCAL_SYMBOL: ForechStatementContext.java<57:142> [ <59:5 59:5>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.ForechStatementContext<0> [ <35:47 35:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.ForechStatementContext<0> [ <36:15 36:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.ForechStatementContext<1> [ <35:71 35:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.ForechStatementContext<1> [ <36:28 36:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveMethod<0> [ <57:66 57:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveMethod<0> [ <58:40 58:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveMethod<1> [ <57:83 57:96>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveMethod<1> [ <58:46 58:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveMethod<2> [ <57:107 57:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveMethod<3> [ <57:130 57:139>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveMethod<3> [ <58:69 58:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol<0> [ <40:75 40:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol<0> [ <45:57 45:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol<0> [ <49:54 49:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol<0> [ <51:48 51:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol<1> [ <40:92 40:101>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol<1> [ <46:100 46:109>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol<1> [ <49:60 49:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol<1> [ <51:54 51:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol<2> [ <44:28 44:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol<2> [ <45:13 45:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.solveSymbol<2> [ <46:80 46:97>]
COMMENT: comment [ <1:1 15:3>]
