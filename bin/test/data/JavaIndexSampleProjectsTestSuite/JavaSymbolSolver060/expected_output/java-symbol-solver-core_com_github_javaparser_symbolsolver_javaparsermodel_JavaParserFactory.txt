FILE: JavaParserFactory.java
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <26:43 26:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <27:43 27:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <28:43 28:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <29:43 29:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <30:43 30:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <31:43 31:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <32:43 32:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <33:43 33:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <34:43 34:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <35:43 35:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel [ <17:44 17:58>]
QUALIFIER: com.github.javaparser.symbolsolver [ <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ <25:30 25:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <26:30 26:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <27:30 27:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <28:30 28:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <29:30 29:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <30:30 30:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <31:30 31:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <32:30 32:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <33:30 33:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <34:30 34:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <35:30 35:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <36:30 36:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <37:30 37:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <38:30 38:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <40:37 40:48>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ <17:20 17:29>]
QUALIFIER: com.github.javaparser [ <19:19 19:28>]
QUALIFIER: com.github.javaparser [ <20:19 20:28>]
QUALIFIER: com.github.javaparser [ <21:19 21:28>]
QUALIFIER: com.github.javaparser [ <22:19 22:28>]
QUALIFIER: com.github.javaparser [ <23:19 23:28>]
QUALIFIER: com.github.javaparser [ <24:19 24:28>]
QUALIFIER: com.github.javaparser [ <25:19 25:28>]
QUALIFIER: com.github.javaparser [ <26:19 26:28>]
QUALIFIER: com.github.javaparser [ <27:19 27:28>]
QUALIFIER: com.github.javaparser [ <28:19 28:28>]
QUALIFIER: com.github.javaparser [ <29:19 29:28>]
QUALIFIER: com.github.javaparser [ <30:19 30:28>]
QUALIFIER: com.github.javaparser [ <31:19 31:28>]
QUALIFIER: com.github.javaparser [ <32:19 32:28>]
QUALIFIER: com.github.javaparser [ <33:19 33:28>]
QUALIFIER: com.github.javaparser [ <34:19 34:28>]
QUALIFIER: com.github.javaparser [ <35:19 35:28>]
QUALIFIER: com.github.javaparser [ <36:19 36:28>]
QUALIFIER: com.github.javaparser [ <37:19 37:28>]
QUALIFIER: com.github.javaparser [ <38:19 38:28>]
QUALIFIER: com.github.javaparser [ <40:26 40:35>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ <17:13 17:18>]
QUALIFIER: com.github [ <19:12 19:17>]
QUALIFIER: com.github [ <20:12 20:17>]
QUALIFIER: com.github [ <21:12 21:17>]
QUALIFIER: com.github [ <22:12 22:17>]
QUALIFIER: com.github [ <23:12 23:17>]
QUALIFIER: com.github [ <24:12 24:17>]
QUALIFIER: com.github [ <25:12 25:17>]
QUALIFIER: com.github [ <26:12 26:17>]
QUALIFIER: com.github [ <27:12 27:17>]
QUALIFIER: com.github [ <28:12 28:17>]
QUALIFIER: com.github [ <29:12 29:17>]
QUALIFIER: com.github [ <30:12 30:17>]
QUALIFIER: com.github [ <31:12 31:17>]
QUALIFIER: com.github [ <32:12 32:17>]
QUALIFIER: com.github [ <33:12 33:17>]
QUALIFIER: com.github [ <34:12 34:17>]
QUALIFIER: com.github [ <35:12 35:17>]
QUALIFIER: com.github [ <36:12 36:17>]
QUALIFIER: com.github [ <37:12 37:17>]
QUALIFIER: com.github [ <38:12 38:17>]
QUALIFIER: com.github [ <40:19 40:24>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ <17:9 17:11>]
QUALIFIER: com [ <19:8 19:10>]
QUALIFIER: com [ <20:8 20:10>]
QUALIFIER: com [ <21:8 21:10>]
QUALIFIER: com [ <22:8 22:10>]
QUALIFIER: com [ <23:8 23:10>]
QUALIFIER: com [ <24:8 24:10>]
QUALIFIER: com [ <25:8 25:10>]
QUALIFIER: com [ <26:8 26:10>]
QUALIFIER: com [ <27:8 27:10>]
QUALIFIER: com [ <28:8 28:10>]
QUALIFIER: com [ <29:8 29:10>]
QUALIFIER: com [ <30:8 30:10>]
QUALIFIER: com [ <31:8 31:10>]
QUALIFIER: com [ <32:8 32:10>]
QUALIFIER: com [ <33:8 33:10>]
QUALIFIER: com [ <34:8 34:10>]
QUALIFIER: com [ <35:8 35:10>]
QUALIFIER: com [ <36:8 36:10>]
QUALIFIER: com [ <37:8 37:10>]
QUALIFIER: com [ <38:8 38:10>]
QUALIFIER: com [ <40:15 40:17>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.ast [ <19:30 19:32>]
QUALIFIER: com.github.javaparser.ast [ <20:30 20:32>]
QUALIFIER: com.github.javaparser.ast [ <21:30 21:32>]
QUALIFIER: com.github.javaparser.ast [ <22:30 22:32>]
QUALIFIER: com.github.javaparser.ast [ <23:30 23:32>]
QUALIFIER: com.github.javaparser.ast [ <24:30 24:32>]
SYMBOL_PACKAGE: com.github.javaparser.ast
SYMBOL_PACKAGE: com.github.javaparser.ast.body
SYMBOL_PACKAGE: com.github.javaparser.ast.expr
SYMBOL_PACKAGE: com.github.javaparser.ast.stmt
QUALIFIER: com.github.javaparser.ast.type [ <24:34 24:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.type
QUALIFIER: com.github.javaparser.symbolsolver.core.resolution [ <25:48 25:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.core.resolution
QUALIFIER: com.github.javaparser.symbolsolver.core [ <25:43 25:46>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.core
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations [ <27:59 27:70>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations [ <28:59 28:70>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations [ <29:59 29:70>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations [ <30:59 30:70>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations [ <31:59 31:70>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarators [ <32:59 32:69>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarators [ <33:59 33:69>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarators [ <34:59 34:69>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarators [ <35:59 35:69>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarators
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <36:49 36:60>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [ <36:43 36:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <37:43 37:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <37:49 37:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: com.github.javaparser.symbolsolver.resolution [ <38:43 38:52>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.resolution
SYMBOL_METHOD: static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node)
QUALIFIER: com.github.javaparser.symbolsolver.javaparser.Navigator [ <40:61 40:69>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparser [ <40:50 40:59>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparser
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [ <45:1 <45:14 45:30> 135:1>]
SYMBOL_METHOD: public static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <47:5 <47:5 <47:27 47:36> 47:70> 94:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.CompilationUnitContext(com.github.javaparser.ast.CompilationUnit, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.ForechStatementContext(com.github.javaparser.ast.stmt.ForeachStmt, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForStatementContext.ForStatementContext(com.github.javaparser.ast.stmt.ForStmt, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext.LambdaExprContext(com.github.javaparser.ast.expr.LambdaExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodContext.MethodContext(com.github.javaparser.ast.body.MethodDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ConstructorContext.ConstructorContext(com.github.javaparser.ast.body.ConstructorDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.ClassOrInterfaceDeclarationContext(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.MethodCallExprContext(com.github.javaparser.ast.expr.MethodCallExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.EnumDeclarationContext.EnumDeclarationContext(com.github.javaparser.ast.body.EnumDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.FieldAccessContext(com.github.javaparser.ast.expr.FieldAccessExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.SwitchEntryContext.SwitchEntryContext(com.github.javaparser.ast.stmt.SwitchEntryStmt, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.TryWithResourceContext.TryWithResourceContext(com.github.javaparser.ast.stmt.TryStmt, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.StatementContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CatchClauseContext.CatchClauseContext(com.github.javaparser.ast.stmt.CatchClause, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: boolean java.util.Optional<T>.isPresent()
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.BodyDeclaration<?>>> com.github.javaparser.ast.expr.ObjectCreationExpr.getAnonymousClassBody()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.AnonymousClassDeclarationContext(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getParentNode()
SYMBOL_METHOD: java.util.Optional<T>.T java.util.Optional<T>.get()
SYMBOL_METHOD: com.github.javaparser.ast.type.ClassOrInterfaceType com.github.javaparser.ast.expr.ObjectCreationExpr.getType()
SYMBOL_METHOD: public static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <96:5 <96:5 <96:36 96:54> 96:88> 116:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarators.FieldSymbolDeclarator.FieldSymbolDeclarator(com.github.javaparser.ast.body.FieldDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarators.ParameterSymbolDeclarator.ParameterSymbolDeclarator(com.github.javaparser.ast.body.Parameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.ast.expr.Expression com.github.javaparser.ast.stmt.ExpressionStmt.getExpression()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarators.VariableSymbolDeclarator.VariableSymbolDeclarator(com.github.javaparser.ast.expr.VariableDeclarationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarators.NoSymbolDeclarator<N>.NoSymbolDeclarator(com.github.javaparser.symbolsolver.javaparsermodel.declarators.NoSymbolDeclarator<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.ast.expr.VariableDeclarationExpr com.github.javaparser.ast.stmt.ForeachStmt.getVariable()
SYMBOL_METHOD: public static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <118:5 <118:5 <118:44 118:60> 118:94> 134:5>]
SYMBOL_METHOD: boolean com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.isInterface()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.JavaParserInterfaceDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserClassDeclaration.JavaParserClassDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration.JavaParserEnumDeclaration(com.github.javaparser.ast.body.EnumDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnnotationDeclaration.JavaParserAnnotationDeclaration(com.github.javaparser.ast.body.AnnotationDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)
SYMBOL_PACKAGE: java.lang
SYMBOL_METHOD: java.lang.String java.lang.Class<T>.getCanonicalName()
SYMBOL_METHOD: java.lang.Class<?> java.lang.Object.getClass()
REFERENCE_IMPORT: JavaParserFactory.java -> com.github.javaparser.ast.CompilationUnit [ <19:34 19:48>]
REFERENCE_IMPORT: JavaParserFactory.java -> com.github.javaparser.ast.Node [ <20:34 20:37>]
REFERENCE_IMPORT: JavaParserFactory.java -> com.github.javaparser.ast.body [ <21:34 21:37>]
REFERENCE_IMPORT: JavaParserFactory.java -> com.github.javaparser.ast.expr [ <22:34 22:37>]
REFERENCE_IMPORT: JavaParserFactory.java -> com.github.javaparser.ast.stmt [ <23:34 23:37>]
REFERENCE_IMPORT: JavaParserFactory.java -> com.github.javaparser.ast.type.TypeParameter [ <24:39 24:51>]
REFERENCE_IMPORT: JavaParserFactory.java -> com.github.javaparser.symbolsolver.core.resolution.Context [ <25:59 25:65>]
REFERENCE_IMPORT: JavaParserFactory.java -> com.github.javaparser.symbolsolver.javaparsermodel.contexts [ <26:59 26:66>]
REFERENCE_IMPORT: JavaParserFactory.java -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnnotationDeclaration [ <27:72 27:102>]
REFERENCE_IMPORT: JavaParserFactory.java -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserClassDeclaration [ <28:72 28:97>]
REFERENCE_IMPORT: JavaParserFactory.java -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration [ <29:72 29:96>]
REFERENCE_IMPORT: JavaParserFactory.java -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration [ <30:72 30:101>]
REFERENCE_IMPORT: JavaParserFactory.java -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter [ <31:72 31:94>]
REFERENCE_IMPORT: JavaParserFactory.java -> com.github.javaparser.symbolsolver.javaparsermodel.declarators.FieldSymbolDeclarator [ <32:71 32:91>]
REFERENCE_IMPORT: JavaParserFactory.java -> com.github.javaparser.symbolsolver.javaparsermodel.declarators.NoSymbolDeclarator<N> [ <33:71 33:88>]
REFERENCE_IMPORT: JavaParserFactory.java -> com.github.javaparser.symbolsolver.javaparsermodel.declarators.ParameterSymbolDeclarator [ <34:71 34:95>]
REFERENCE_IMPORT: JavaParserFactory.java -> com.github.javaparser.symbolsolver.javaparsermodel.declarators.VariableSymbolDeclarator [ <35:71 35:94>]
REFERENCE_IMPORT: JavaParserFactory.java -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <36:62 36:85>]
REFERENCE_IMPORT: JavaParserFactory.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <37:60 37:69>]
REFERENCE_IMPORT: JavaParserFactory.java -> com.github.javaparser.symbolsolver.resolution.SymbolDeclarator [ <38:54 38:69>]
REFERENCE_IMPORT: JavaParserFactory.java -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <40:71 40:83>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context [ <47:19 47:25>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.Node [ <47:38 47:41>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.Node [ <88:19 88:22>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <47:49 47:58>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.CompilationUnit [ <50:36 50:50>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.CompilationUnit [ <51:48 51:62>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.CompilationUnitContext(com.github.javaparser.ast.CompilationUnit, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <51:24 51:45>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext [ <51:24 51:45>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.ForeachStmt [ <52:36 52:46>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.ForeachStmt [ <53:48 53:58>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext.ForechStatementContext(com.github.javaparser.ast.stmt.ForeachStmt, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <53:24 53:45>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForechStatementContext [ <53:24 53:45>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.ForStmt [ <54:36 54:42>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.ForStmt [ <55:45 55:51>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForStatementContext.ForStatementContext(com.github.javaparser.ast.stmt.ForStmt, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <55:24 55:42>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ForStatementContext [ <55:24 55:42>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.LambdaExpr [ <56:36 56:45>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.LambdaExpr [ <57:43 57:52>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext.LambdaExprContext(com.github.javaparser.ast.expr.LambdaExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <57:24 57:40>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.LambdaExprContext [ <57:24 57:40>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.MethodDeclaration [ <58:36 58:52>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.MethodDeclaration [ <59:39 59:55>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodContext.MethodContext(com.github.javaparser.ast.body.MethodDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <59:24 59:36>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodContext [ <59:24 59:36>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.ConstructorDeclaration [ <60:36 60:57>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.ConstructorDeclaration [ <61:44 61:65>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ConstructorContext.ConstructorContext(com.github.javaparser.ast.body.ConstructorDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <61:24 61:41>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ConstructorContext [ <61:24 61:41>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ <62:36 62:62>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ <63:60 63:86>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.ClassOrInterfaceDeclarationContext(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <63:24 63:57>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext [ <63:24 63:57>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.MethodCallExpr [ <64:36 64:49>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.MethodCallExpr [ <65:47 65:60>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.MethodCallExprContext(com.github.javaparser.ast.expr.MethodCallExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <65:24 65:44>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext [ <65:24 65:44>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.EnumDeclaration [ <66:36 66:50>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.EnumDeclaration [ <67:48 67:62>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.EnumDeclarationContext.EnumDeclarationContext(com.github.javaparser.ast.body.EnumDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <67:24 67:45>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.EnumDeclarationContext [ <67:24 67:45>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.FieldAccessExpr [ <68:36 68:50>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.FieldAccessExpr [ <69:44 69:58>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.FieldAccessExpr [ <84:95 84:109>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.FieldAccessContext(com.github.javaparser.ast.expr.FieldAccessExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <69:24 69:41>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext [ <69:24 69:41>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.SwitchEntryStmt [ <70:36 70:50>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.SwitchEntryStmt [ <71:44 71:58>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.SwitchEntryContext.SwitchEntryContext(com.github.javaparser.ast.stmt.SwitchEntryStmt, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <71:24 71:41>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.SwitchEntryContext [ <71:24 71:41>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.TryStmt [ <72:36 72:42>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.TryStmt [ <73:48 73:54>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.TryWithResourceContext.TryWithResourceContext(com.github.javaparser.ast.stmt.TryStmt, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <73:24 73:45>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.TryWithResourceContext [ <73:24 73:45>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.Statement [ <74:36 74:44>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.Statement [ <75:41 75:49>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.Statement [ <75:53 75:61>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.StatementContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <75:24 75:50>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N> -> com.github.javaparser.ast.stmt.Statement [ <75:41 75:49>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N> [ <75:24 75:39>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.CatchClause [ <76:36 76:46>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.CatchClause [ <77:44 77:54>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CatchClauseContext.CatchClauseContext(com.github.javaparser.ast.stmt.CatchClause, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <77:24 77:41>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CatchClauseContext [ <77:24 77:41>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.ObjectCreationExpr [ <78:36 78:53>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.ObjectCreationExpr [ <79:15 79:32>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.ObjectCreationExpr [ <80:58 80:75>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.ObjectCreationExpr [ <89:38 89:55>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.ObjectCreationExpr [ <89:70 89:87>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.Optional<T>.isPresent() [ <79:65 79:73>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.Optional<T>.isPresent() [ <84:42 84:50>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.Optional<T>.isPresent() [ <84:157 84:165>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.BodyDeclaration<?>>> com.github.javaparser.ast.expr.ObjectCreationExpr.getAnonymousClassBody() [ <79:41 79:61>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.AnonymousClassDeclarationContext(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <80:24 80:55>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext [ <80:24 80:55>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.NameExpr [ <82:33 82:40>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getParentNode() [ <84:26 84:38>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getParentNode() [ <84:62 84:74>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getParentNode() [ <84:119 84:131>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getParentNode() [ <84:141 84:153>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getParentNode() [ <85:44 85:56>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getParentNode() [ <85:66 85:78>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T>.T java.util.Optional<T>.get() [ <84:78 84:80>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T>.T java.util.Optional<T>.get() [ <84:135 84:137>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T>.T java.util.Optional<T>.get() [ <85:60 85:62>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T>.T java.util.Optional<T>.get() [ <85:82 85:84>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <85:28 85:37>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <90:24 90:33>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <92:20 92:29>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <88:37 88:49>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <90:35 90:47>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.type.ClassOrInterfaceType com.github.javaparser.ast.expr.ObjectCreationExpr.getType() [ <89:102 89:108>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolDeclarator [ <96:19 96:34>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.Node [ <96:56 96:59>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.Node [ <114:43 114:46>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <96:67 96:76>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.FieldDeclaration [ <97:29 97:44>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.FieldDeclaration [ <98:47 98:62>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarators.FieldSymbolDeclarator.FieldSymbolDeclarator(com.github.javaparser.ast.body.FieldDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <98:24 98:44>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarators.FieldSymbolDeclarator [ <98:24 98:44>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.Parameter [ <99:36 99:44>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.Parameter [ <100:51 100:59>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarators.ParameterSymbolDeclarator.ParameterSymbolDeclarator(com.github.javaparser.ast.body.Parameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <100:24 100:48>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarators.ParameterSymbolDeclarator [ <100:24 100:48>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.ExpressionStmt [ <101:36 101:49>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.ExpressionStmt [ <102:13 102:26>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.ExpressionStmt [ <102:46 102:59>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.ExpressionStmt [ <106:47 106:60>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.Expression com.github.javaparser.ast.stmt.ExpressionStmt.getExpression() [ <103:32 103:44>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.Expression com.github.javaparser.ast.stmt.ExpressionStmt.getExpression() [ <104:95 104:107>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.VariableDeclarationExpr [ <103:59 103:81>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.VariableDeclarationExpr [ <104:54 104:76>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.VariableDeclarationExpr [ <112:50 112:72>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarators.VariableSymbolDeclarator.VariableSymbolDeclarator(com.github.javaparser.ast.expr.VariableDeclarationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <104:28 104:51>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarators.VariableSymbolDeclarator.VariableSymbolDeclarator(com.github.javaparser.ast.expr.VariableDeclarationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <112:24 112:47>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarators.VariableSymbolDeclarator [ <104:28 104:51>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarators.VariableSymbolDeclarator [ <112:24 112:47>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarators.NoSymbolDeclarator<N>.NoSymbolDeclarator(com.github.javaparser.symbolsolver.javaparsermodel.declarators.NoSymbolDeclarator<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <106:28 106:61>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarators.NoSymbolDeclarator<N>.NoSymbolDeclarator(com.github.javaparser.symbolsolver.javaparsermodel.declarators.NoSymbolDeclarator<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <109:24 109:49>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarators.NoSymbolDeclarator<N>.NoSymbolDeclarator(com.github.javaparser.symbolsolver.javaparsermodel.declarators.NoSymbolDeclarator<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <114:24 114:47>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.javaparsermodel.declarators.NoSymbolDeclarator<N> -> com.github.javaparser.ast.stmt.ExpressionStmt [ <106:47 106:60>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarators.NoSymbolDeclarator<N> [ <106:28 106:45>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarators.NoSymbolDeclarator<N> [ <109:24 109:41>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarators.NoSymbolDeclarator<N> [ <114:24 114:41>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.IfStmt [ <108:36 108:41>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.IfStmt [ <109:43 109:48>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.IfStmt [ <109:52 109:57>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.javaparsermodel.declarators.NoSymbolDeclarator<N> -> com.github.javaparser.ast.stmt.IfStmt [ <109:43 109:48>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.ForeachStmt [ <110:36 110:46>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.ForeachStmt [ <111:13 111:23>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.ForeachStmt [ <111:40 111:50>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.VariableDeclarationExpr com.github.javaparser.ast.stmt.ForeachStmt.getVariable() [ <112:88 112:98>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.javaparsermodel.declarators.NoSymbolDeclarator<N> -> com.github.javaparser.ast.Node [ <114:43 114:46>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <118:19 118:42>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.Node [ <118:62 118:65>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <118:73 118:82>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ <119:29 119:55>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ <120:19 120:45>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ <121:60 121:86>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ <123:56 123:82>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.isInterface() [ <120:54 120:64>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.JavaParserInterfaceDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <121:28 121:57>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration [ <121:28 121:57>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserClassDeclaration.JavaParserClassDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <123:28 123:53>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserClassDeclaration [ <123:28 123:53>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.type.TypeParameter [ <125:36 125:48>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.type.TypeParameter [ <126:49 126:61>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <126:24 126:46>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter [ <126:24 126:46>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.EnumDeclaration [ <127:36 127:50>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.EnumDeclaration [ <128:51 128:65>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration.JavaParserEnumDeclaration(com.github.javaparser.ast.body.EnumDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <128:24 128:48>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration [ <128:24 128:48>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.AnnotationDeclaration [ <129:36 129:56>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.AnnotationDeclaration [ <130:57 130:77>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnnotationDeclaration.JavaParserAnnotationDeclaration(com.github.javaparser.ast.body.AnnotationDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <130:24 130:54>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnnotationDeclaration [ <130:24 130:54>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String) [ <132:23 132:46>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.IllegalArgumentException [ <132:23 132:46>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String java.lang.Class<T>.getCanonicalName() [ <132:64 132:79>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Class<?> java.lang.Object.getClass() [ <132:53 132:60>]
LOCAL_SYMBOL: JavaParserFactory.java<101:52> [ <101:52 101:52>]
LOCAL_SYMBOL: JavaParserFactory.java<101:52> [ <108:9 108:9>]
LOCAL_SYMBOL: JavaParserFactory.java<103:84> [ <103:84 103:84>]
LOCAL_SYMBOL: JavaParserFactory.java<103:84> [ <105:13 105:13>]
LOCAL_SYMBOL: JavaParserFactory.java<105:20> [ <105:20 105:20>]
LOCAL_SYMBOL: JavaParserFactory.java<105:20> [ <107:13 107:13>]
LOCAL_SYMBOL: JavaParserFactory.java<108:44> [ <108:44 108:44>]
LOCAL_SYMBOL: JavaParserFactory.java<108:44> [ <110:9 110:9>]
LOCAL_SYMBOL: JavaParserFactory.java<110:49> [ <110:49 110:49>]
LOCAL_SYMBOL: JavaParserFactory.java<110:49> [ <113:9 113:9>]
LOCAL_SYMBOL: JavaParserFactory.java<113:16> [ <113:16 113:16>]
LOCAL_SYMBOL: JavaParserFactory.java<113:16> [ <115:9 115:9>]
LOCAL_SYMBOL: JavaParserFactory.java<118:96> [ <118:96 118:96>]
LOCAL_SYMBOL: JavaParserFactory.java<118:96> [ <134:5 134:5>]
LOCAL_SYMBOL: JavaParserFactory.java<119:58> [ <119:58 119:58>]
LOCAL_SYMBOL: JavaParserFactory.java<119:58> [ <125:9 125:9>]
LOCAL_SYMBOL: JavaParserFactory.java<120:69> [ <120:69 120:69>]
LOCAL_SYMBOL: JavaParserFactory.java<120:69> [ <122:13 122:13>]
LOCAL_SYMBOL: JavaParserFactory.java<122:20> [ <122:20 122:20>]
LOCAL_SYMBOL: JavaParserFactory.java<122:20> [ <124:13 124:13>]
LOCAL_SYMBOL: JavaParserFactory.java<125:51> [ <125:51 125:51>]
LOCAL_SYMBOL: JavaParserFactory.java<125:51> [ <127:9 127:9>]
LOCAL_SYMBOL: JavaParserFactory.java<127:53> [ <127:53 127:53>]
LOCAL_SYMBOL: JavaParserFactory.java<127:53> [ <129:9 129:9>]
LOCAL_SYMBOL: JavaParserFactory.java<129:59> [ <129:59 129:59>]
LOCAL_SYMBOL: JavaParserFactory.java<129:59> [ <131:9 131:9>]
LOCAL_SYMBOL: JavaParserFactory.java<131:16> [ <131:16 131:16>]
LOCAL_SYMBOL: JavaParserFactory.java<131:16> [ <133:9 133:9>]
LOCAL_SYMBOL: JavaParserFactory.java<45:32> [ <45:32 45:32>]
LOCAL_SYMBOL: JavaParserFactory.java<45:32> [ <135:1 135:1>]
LOCAL_SYMBOL: JavaParserFactory.java<47:72> [ <47:72 47:72>]
LOCAL_SYMBOL: JavaParserFactory.java<47:72> [ <94:5 94:5>]
LOCAL_SYMBOL: JavaParserFactory.java<48:27> [ <48:27 48:27>]
LOCAL_SYMBOL: JavaParserFactory.java<48:27> [ <50:9 50:9>]
LOCAL_SYMBOL: JavaParserFactory.java<50:53> [ <50:53 50:53>]
LOCAL_SYMBOL: JavaParserFactory.java<50:53> [ <52:9 52:9>]
LOCAL_SYMBOL: JavaParserFactory.java<52:49> [ <52:49 52:49>]
LOCAL_SYMBOL: JavaParserFactory.java<52:49> [ <54:9 54:9>]
LOCAL_SYMBOL: JavaParserFactory.java<54:45> [ <54:45 54:45>]
LOCAL_SYMBOL: JavaParserFactory.java<54:45> [ <56:9 56:9>]
LOCAL_SYMBOL: JavaParserFactory.java<56:48> [ <56:48 56:48>]
LOCAL_SYMBOL: JavaParserFactory.java<56:48> [ <58:9 58:9>]
LOCAL_SYMBOL: JavaParserFactory.java<58:55> [ <58:55 58:55>]
LOCAL_SYMBOL: JavaParserFactory.java<58:55> [ <60:9 60:9>]
LOCAL_SYMBOL: JavaParserFactory.java<60:60> [ <60:60 60:60>]
LOCAL_SYMBOL: JavaParserFactory.java<60:60> [ <62:9 62:9>]
LOCAL_SYMBOL: JavaParserFactory.java<62:65> [ <62:65 62:65>]
LOCAL_SYMBOL: JavaParserFactory.java<62:65> [ <64:9 64:9>]
LOCAL_SYMBOL: JavaParserFactory.java<64:52> [ <64:52 64:52>]
LOCAL_SYMBOL: JavaParserFactory.java<64:52> [ <66:9 66:9>]
LOCAL_SYMBOL: JavaParserFactory.java<66:53> [ <66:53 66:53>]
LOCAL_SYMBOL: JavaParserFactory.java<66:53> [ <68:9 68:9>]
LOCAL_SYMBOL: JavaParserFactory.java<68:53> [ <68:53 68:53>]
LOCAL_SYMBOL: JavaParserFactory.java<68:53> [ <70:9 70:9>]
LOCAL_SYMBOL: JavaParserFactory.java<70:53> [ <70:53 70:53>]
LOCAL_SYMBOL: JavaParserFactory.java<70:53> [ <72:9 72:9>]
LOCAL_SYMBOL: JavaParserFactory.java<72:45> [ <72:45 72:45>]
LOCAL_SYMBOL: JavaParserFactory.java<72:45> [ <74:9 74:9>]
LOCAL_SYMBOL: JavaParserFactory.java<74:47> [ <74:47 74:47>]
LOCAL_SYMBOL: JavaParserFactory.java<74:47> [ <76:9 76:9>]
LOCAL_SYMBOL: JavaParserFactory.java<76:49> [ <76:49 76:49>]
LOCAL_SYMBOL: JavaParserFactory.java<76:49> [ <78:9 78:9>]
LOCAL_SYMBOL: JavaParserFactory.java<79:78> [ <79:78 79:78>]
LOCAL_SYMBOL: JavaParserFactory.java<79:78> [ <81:9 81:9>]
LOCAL_SYMBOL: JavaParserFactory.java<81:16> [ <81:16 81:16>]
LOCAL_SYMBOL: JavaParserFactory.java<81:16> [ <93:9 93:9>]
LOCAL_SYMBOL: JavaParserFactory.java<82:43> [ <82:43 82:43>]
LOCAL_SYMBOL: JavaParserFactory.java<82:43> [ <87:13 87:13>]
LOCAL_SYMBOL: JavaParserFactory.java<84:170> [ <84:170 84:170>]
LOCAL_SYMBOL: JavaParserFactory.java<84:170> [ <86:17 86:17>]
LOCAL_SYMBOL: JavaParserFactory.java<89:113> [ <89:113 89:113>]
LOCAL_SYMBOL: JavaParserFactory.java<89:113> [ <91:13 91:13>]
LOCAL_SYMBOL: JavaParserFactory.java<96:90> [ <96:90 96:90>]
LOCAL_SYMBOL: JavaParserFactory.java<96:90> [ <116:5 116:5>]
LOCAL_SYMBOL: JavaParserFactory.java<97:47> [ <97:47 97:47>]
LOCAL_SYMBOL: JavaParserFactory.java<97:47> [ <99:9 99:9>]
LOCAL_SYMBOL: JavaParserFactory.java<99:47> [ <99:47 99:47>]
LOCAL_SYMBOL: JavaParserFactory.java<99:47> [ <101:9 101:9>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <47:43 47:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <48:13 48:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <50:20 50:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <51:65 51:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <52:20 52:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <53:61 53:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <54:20 54:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <55:54 55:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <56:20 56:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <57:55 57:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <58:20 58:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <59:58 59:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <60:20 60:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <61:68 61:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <62:20 62:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <63:89 63:92>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <64:20 64:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <65:63 65:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <66:20 66:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <67:65 67:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <68:20 68:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <69:61 69:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <70:20 70:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <71:61 71:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <72:20 72:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <73:57 73:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <74:20 74:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <75:64 75:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <76:20 76:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <77:57 77:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <78:20 78:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <79:35 79:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <80:78 80:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <82:17 82:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <84:21 84:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <84:57 84:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <84:114 84:117>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <85:39 85:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <88:51 88:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<0> [ <89:60 89:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<1> [ <47:60 47:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<1> [ <51:71 51:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<1> [ <53:67 53:76>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<1> [ <55:60 55:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<1> [ <57:61 57:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<1> [ <59:64 59:73>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<1> [ <61:74 61:83>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<1> [ <63:95 63:104>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<1> [ <65:69 65:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<1> [ <67:71 67:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<1> [ <69:67 69:76>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<1> [ <71:67 71:76>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<1> [ <73:63 73:72>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<1> [ <75:70 75:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<1> [ <77:63 77:72>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<1> [ <80:84 80:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<1> [ <85:89 85:98>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<1> [ <90:62 90:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<1> [ <92:43 92:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<2> [ <88:24 88:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<2> [ <89:16 89:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<2> [ <89:90 89:99>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<2> [ <90:49 90:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext<2> [ <92:31 92:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<0> [ <96:61 96:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<0> [ <97:13 97:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<0> [ <98:65 98:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<0> [ <99:20 99:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<0> [ <100:62 100:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<0> [ <101:20 101:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<0> [ <102:62 102:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<0> [ <108:20 108:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<0> [ <109:60 109:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<0> [ <110:20 110:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<0> [ <111:53 111:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<0> [ <114:49 114:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<1> [ <96:78 96:87>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<1> [ <98:71 98:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<1> [ <100:68 100:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<1> [ <104:113 104:122>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<1> [ <106:79 106:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<1> [ <109:66 109:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<1> [ <112:104 112:113>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<1> [ <114:55 114:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<2> [ <102:28 102:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<2> [ <103:17 103:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<2> [ <104:80 104:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<2> [ <106:63 106:76>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<3> [ <111:25 111:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator<3> [ <112:76 112:86>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration<0> [ <118:67 118:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration<0> [ <119:13 119:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration<0> [ <120:48 120:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration<0> [ <121:89 121:92>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration<0> [ <123:85 123:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration<0> [ <125:20 125:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration<0> [ <126:64 126:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration<0> [ <127:20 127:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration<0> [ <128:68 128:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration<0> [ <129:20 129:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration<0> [ <130:80 130:83>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration<0> [ <132:48 132:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration<1> [ <118:84 118:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration<1> [ <121:95 121:104>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration<1> [ <123:91 123:100>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration<1> [ <126:70 126:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration<1> [ <128:74 128:83>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration<1> [ <130:86 130:95>]
COMMENT: comment [ <1:1 15:3>]
COMMENT: comment [ <42:1 44:3>]
COMMENT: comment [ <83:17 83:171>]
