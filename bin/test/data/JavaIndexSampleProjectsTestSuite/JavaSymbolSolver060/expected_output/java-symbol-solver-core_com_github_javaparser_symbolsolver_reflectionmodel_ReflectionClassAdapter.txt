FILE: ReflectionClassAdapter.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.reflectionmodel [ <1:44 1:58>]
QUALIFIER: com.github.javaparser.symbolsolver [ <1:31 1:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ <3:30 3:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <4:30 4:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <5:30 5:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <6:30 6:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <7:30 7:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <8:30 8:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <9:30 9:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <10:30 10:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <11:30 11:41>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ <1:20 1:29>]
QUALIFIER: com.github.javaparser [ <3:19 3:28>]
QUALIFIER: com.github.javaparser [ <4:19 4:28>]
QUALIFIER: com.github.javaparser [ <5:19 5:28>]
QUALIFIER: com.github.javaparser [ <6:19 6:28>]
QUALIFIER: com.github.javaparser [ <7:19 7:28>]
QUALIFIER: com.github.javaparser [ <8:19 8:28>]
QUALIFIER: com.github.javaparser [ <9:19 9:28>]
QUALIFIER: com.github.javaparser [ <10:19 10:28>]
QUALIFIER: com.github.javaparser [ <11:19 11:28>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ <1:13 1:18>]
QUALIFIER: com.github [ <3:12 3:17>]
QUALIFIER: com.github [ <4:12 4:17>]
QUALIFIER: com.github [ <5:12 5:17>]
QUALIFIER: com.github [ <6:12 6:17>]
QUALIFIER: com.github [ <7:12 7:17>]
QUALIFIER: com.github [ <8:12 8:17>]
QUALIFIER: com.github [ <9:12 9:17>]
QUALIFIER: com.github [ <10:12 10:17>]
QUALIFIER: com.github [ <11:12 11:17>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ <1:9 1:11>]
QUALIFIER: com [ <3:8 3:10>]
QUALIFIER: com [ <4:8 4:10>]
QUALIFIER: com [ <5:8 5:10>]
QUALIFIER: com [ <6:8 6:10>]
QUALIFIER: com [ <7:8 7:10>]
QUALIFIER: com [ <8:8 8:10>]
QUALIFIER: com [ <9:8 9:10>]
QUALIFIER: com [ <10:8 10:10>]
QUALIFIER: com [ <11:8 11:10>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <3:43 3:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel
QUALIFIER: com.github.javaparser.symbolsolver.logic.FunctionalInterfaceLogic [ <175:16 175:39>]
QUALIFIER: com.github.javaparser.symbolsolver.logic [ <4:43 4:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.logic
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [ <5:43 5:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <6:43 6:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <7:43 7:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <8:43 8:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <9:43 9:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <10:43 10:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <11:43 11:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <6:49 6:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <7:49 7:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <8:49 8:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <9:49 9:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <10:49 10:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <11:49 11:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem
QUALIFIER: java.lang [ <13:13 13:16>]
QUALIFIER: java.lang [ <14:13 14:16>]
QUALIFIER: java.lang [ <15:13 15:16>]
QUALIFIER: java.lang [ <16:13 16:16>]
QUALIFIER: java.lang [ <39:14 39:17>]
QUALIFIER: java.lang [ <52:19 52:22>]
SYMBOL_PACKAGE: java.lang
QUALIFIER: java [ <13:8 13:11>]
QUALIFIER: java [ <14:8 14:11>]
QUALIFIER: java [ <15:8 15:11>]
QUALIFIER: java [ <16:8 16:11>]
QUALIFIER: java [ <17:8 17:11>]
QUALIFIER: java [ <18:8 18:11>]
QUALIFIER: java [ <39:9 39:12>]
QUALIFIER: java [ <52:14 52:17>]
SYMBOL_PACKAGE: java
QUALIFIER: java.lang.annotation [ <13:18 13:27>]
SYMBOL_PACKAGE: java.lang.annotation
QUALIFIER: java.lang.reflect [ <14:18 14:24>]
QUALIFIER: java.lang.reflect [ <15:18 15:24>]
QUALIFIER: java.lang.reflect [ <16:18 16:24>]
QUALIFIER: java.lang.reflect [ <39:19 39:25>]
QUALIFIER: java.lang.reflect [ <52:24 52:30>]
SYMBOL_PACKAGE: java.lang.reflect
QUALIFIER: java.util [ <18:13 18:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java.util.stream.Collectors [ <44:30 44:39>]
QUALIFIER: java.util.stream.Collectors [ <57:34 57:43>]
QUALIFIER: java.util.stream.Collectors [ <130:26 130:35>]
QUALIFIER: java.util.stream.Collectors [ <181:26 181:35>]
QUALIFIER: java.util.stream [ <18:18 18:23>]
SYMBOL_PACKAGE: java.util.stream
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter [ <30:9 30:12>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter [ <31:9 31:12>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter [ <32:9 32:12>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter [ <135:35 135:38>]
SYMBOL_CLASS: default com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter [ <23:1 <23:7 23:28> 190:1>]
SYMBOL_FIELD: private java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.clazz [ <25:22 25:26>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeSolver [ <26:24 26:33>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeDeclaration [ <27:38 27:52>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.ReflectionClassAdapter(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [ <29:5 <29:5 <29:12 29:33> 29:114> 33:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() [ <35:5 <35:5 <35:30 35:42> 35:44> 48:5>]
SYMBOL_METHOD: java.lang.reflect.Type java.lang.Class<T>.getGenericSuperclass()
SYMBOL_METHOD: R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>)
SYMBOL_METHOD: java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>)
SYMBOL_METHOD: static java.util.stream.Stream<T> java.util.Arrays.stream<T>(T)
QUALIFIER: java.util.Arrays [ <42:41 42:46>]
QUALIFIER: java.util.Arrays [ <55:45 55:50>]
QUALIFIER: java.util.Arrays [ <127:16 127:21>]
QUALIFIER: java.util.Arrays [ <179:16 179:21>]
SYMBOL_METHOD: java.lang.reflect.Type java.lang.reflect.ParameterizedType.getActualTypeArguments()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.typeUsageFor(java.lang.reflect.Type, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory [ <43:33 43:49>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory [ <56:37 56:53>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory [ <188:29 188:45>]
SYMBOL_METHOD: static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.lang.Class<? super T> java.lang.Class<T>.getSuperclass()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() [ <50:5 <50:5 <50:32 50:44> 50:46> 64:5>]
SYMBOL_METHOD: java.util.ArrayList<E>.ArrayList()
SYMBOL_METHOD: java.lang.reflect.Type java.lang.Class<T>.getGenericInterfaces()
SYMBOL_METHOD: boolean java.util.List<E>.add(java.util.List<E>.E)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionInterfaceDeclaration.ReflectionInterfaceDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.lang.reflect.Type java.lang.reflect.ParameterizedType.getRawType()
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() [ <66:5 <66:5 <66:32 66:43> 66:45> 84:5>]
SYMBOL_METHOD: java.util.LinkedList<E>.LinkedList()
SYMBOL_METHOD: boolean java.util.List<E>.addAll(java.util.Collection<? extends E>)
SYMBOL_BUILTIN_TYPE: int
SYMBOL_METHOD: int java.util.List<E>.size()
SYMBOL_METHOD: java.util.List<E>.E java.util.List<E>.get(int)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.hasName()
SYMBOL_METHOD: boolean java.lang.String.equals(java.lang.Object)
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName()
SYMBOL_METHOD: java.lang.String java.lang.Class<T>.getCanonicalName()
SYMBOL_METHOD: java.util.List<E>.E java.util.List<E>.remove(int)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) [ <86:5 <86:5 <86:29 86:36> 86:49> 99:5>]
SYMBOL_METHOD: java.lang.reflect.Field java.lang.Class<T>.getDeclaredFields()
SYMBOL_METHOD: java.lang.String java.lang.reflect.Field.getName()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration(java.lang.reflect.Field, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAllAncestors()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasField(java.lang.String)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getField(java.lang.String)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.replaceType(com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: java.util.Optional<T>.T java.util.Optional<T>.get()
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getFieldType(java.lang.String)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.UnsolvedSymbolException.UnsolvedSymbolException(java.lang.String, java.lang.String)
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasField(java.lang.String) [ <101:5 <101:5 <101:20 101:27> 101:40> 113:5>]
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields() [ <115:5 <115:5 <115:35 115:46> 115:48> 124:5>]
SYMBOL_METHOD: boolean java.util.ArrayList<E>.add(java.util.ArrayList<E>.E)
SYMBOL_METHOD: boolean java.util.ArrayList<E>.addAll(java.util.Collection<? extends E>)
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAllFields()
SYMBOL_METHOD: public java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getDeclaredMethods() [ <126:5 <126:5 <126:35 126:52> 126:54> 131:5>]
SYMBOL_METHOD: java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.filter(java.util.function.Predicate<? super T>)
SYMBOL_METHOD: java.lang.reflect.Method java.lang.Class<T>.getDeclaredMethods()
SYMBOL_METHOD: boolean java.lang.reflect.Method.isSynthetic()
SYMBOL_METHOD: boolean java.lang.reflect.Method.isBridge()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodDeclaration.ReflectionMethodDeclaration(java.lang.reflect.Method, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: static java.util.stream.Collector<T, ?, java.util.Set<T>> java.util.stream.Collectors.toSet<T>()
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getTypeParameters() [ <133:5 <133:5 <133:43 133:59> 133:61> 139:5>]
SYMBOL_METHOD: java.lang.reflect.TypeVariable<java.lang.Class<java.lang.Class<T>.T>> java.lang.Class<T>.getTypeParameters()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ <141:5 <141:5 <141:20 141:33> 141:44> 163:5>]
SYMBOL_METHOD: private boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isFunctionalInterface() [ <174:5 <174:5 <174:27 174:47> 174:49> 176:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive()
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe()
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration)
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasDirectlyAnnotation(java.lang.String) [ <165:5 <165:5 <165:20 165:40> 165:62> 172:5>]
SYMBOL_METHOD: java.lang.annotation.Annotation java.lang.Class<T>.getDeclaredAnnotations()
SYMBOL_METHOD: java.lang.Class<? extends Annotation> java.lang.annotation.Annotation.annotationType()
SYMBOL_METHOD: boolean java.util.Optional<T>.isPresent()
SYMBOL_METHOD: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.logic.FunctionalInterfaceLogic.getFunctionalMethod(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration)
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getConstructors() [ <178:5 <178:5 <178:41 178:55> 178:57> 182:5>]
SYMBOL_METHOD: java.lang.reflect.Constructor<?> java.lang.Class<T>.getConstructors()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionConstructorDeclaration.ReflectionConstructorDeclaration(java.lang.reflect.Constructor<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.containerType() [ <184:5 <184:5 <184:47 184:59> 184:61> 189:5>]
SYMBOL_METHOD: java.lang.Class<?> java.lang.Class<T>.getDeclaringClass()
SYMBOL_METHOD: static java.util.Optional<T> java.util.Optional<T>.empty<T>()
QUALIFIER: java.util.Optional [ <187:17 187:24>]
QUALIFIER: java.util.Optional [ <188:17 188:24>]
SYMBOL_METHOD: static java.util.Optional<T> java.util.Optional<T>.of<T>(T)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.typeDeclarationFor(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_IMPORT: ReflectionClassAdapter.java -> com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder [ <3:59 3:87>]
REFERENCE_IMPORT: ReflectionClassAdapter.java -> com.github.javaparser.symbolsolver.logic.FunctionalInterfaceLogic [ <4:49 4:72>]
REFERENCE_IMPORT: ReflectionClassAdapter.java -> com.github.javaparser.symbolsolver.model.declarations [ <5:49 5:60>]
REFERENCE_IMPORT: ReflectionClassAdapter.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <6:60 6:69>]
REFERENCE_IMPORT: ReflectionClassAdapter.java -> com.github.javaparser.symbolsolver.model.resolution.UnsolvedSymbolException [ <7:60 7:82>]
REFERENCE_IMPORT: ReflectionClassAdapter.java -> com.github.javaparser.symbolsolver.model.typesystem.NullType [ <8:60 8:67>]
REFERENCE_IMPORT: ReflectionClassAdapter.java -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <9:60 9:72>]
REFERENCE_IMPORT: ReflectionClassAdapter.java -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <10:60 10:76>]
REFERENCE_IMPORT: ReflectionClassAdapter.java -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <11:60 11:63>]
REFERENCE_IMPORT: ReflectionClassAdapter.java -> java.lang.annotation.Annotation [ <13:29 13:38>]
REFERENCE_IMPORT: ReflectionClassAdapter.java -> java.lang.reflect.Field [ <14:26 14:30>]
REFERENCE_IMPORT: ReflectionClassAdapter.java -> java.lang.reflect.ParameterizedType [ <15:26 15:42>]
REFERENCE_IMPORT: ReflectionClassAdapter.java -> java.lang.reflect.TypeVariable<D> [ <16:26 16:37>]
REFERENCE_IMPORT: ReflectionClassAdapter.java -> java.util [ <17:13 17:16>]
REFERENCE_IMPORT: ReflectionClassAdapter.java -> java.util.stream.Collectors [ <18:25 18:34>]
REFERENCE_TYPE_ARGUMENT: java.lang.Class<T> -> ? [ <25:19 25:19>]
REFERENCE_TYPE_ARGUMENT: java.lang.Class<T> -> ? [ <29:41 29:41>]
REFERENCE_TYPE_ARGUMENT: java.lang.Class<T> -> ? [ <58:96 58:96>]
REFERENCE_TYPE_ARGUMENT: java.lang.Class<T> -> ? [ <60:96 60:96>]
REFERENCE_TYPE_ARGUMENT: java.lang.Class<T> -> ? [ <185:15 185:15>]
REFERENCE_TYPE_USAGE: java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.clazz -> java.lang.Class<T> [ <25:13 25:17>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeSolver -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <26:13 26:22>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeDeclaration -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <27:13 27:36>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.ReflectionClassAdapter(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> java.lang.Class<T> [ <29:35 29:39>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.ReflectionClassAdapter(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <29:51 29:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.ReflectionClassAdapter(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <29:74 29:97>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.ReflectionClassAdapter(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.clazz [ <30:14 30:18>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.ReflectionClassAdapter(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeSolver [ <31:14 31:23>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.ReflectionClassAdapter(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeDeclaration [ <32:14 32:28>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <35:12 35:28>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <45:24 45:40>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <47:20 47:36>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> java.lang.reflect.Type java.lang.Class<T>.getGenericSuperclass() [ <36:19 36:38>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> java.lang.reflect.Type java.lang.Class<T>.getGenericSuperclass() [ <39:50 39:69>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.clazz [ <36:13 36:17>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.clazz [ <39:44 39:48>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.clazz [ <45:73 45:77>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.clazz [ <47:69 47:73>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> java.lang.reflect.Type [ <39:27 39:30>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> java.lang.reflect.ParameterizedType [ <40:34 40:50>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> java.lang.reflect.ParameterizedType [ <41:13 41:29>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> java.lang.reflect.ParameterizedType [ <41:52 41:68>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <42:18 42:21>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <55:22 55:25>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> java.util.List<E> [ <42:13 42:16>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <42:18 42:21>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [ <44:22 44:28>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>) [ <43:22 43:24>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> static java.util.stream.Stream<T> java.util.Arrays.stream<T>(T) [ <42:48 42:53>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> java.lang.reflect.Type java.lang.reflect.ParameterizedType.getActualTypeArguments() [ <42:73 42:94>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.typeUsageFor(java.lang.reflect.Type, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <43:51 43:62>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeSolver [ <43:67 43:76>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeSolver [ <45:96 45:105>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeSolver [ <45:125 45:134>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeSolver [ <47:92 47:101>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeSolver [ <47:105 47:114>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [ <44:41 44:46>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <45:24 45:40>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <45:46 45:71>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <47:42 47:67>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [ <45:46 45:71>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [ <47:42 47:67>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> java.lang.Class<? super T> java.lang.Class<T>.getSuperclass() [ <45:79 45:91>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> java.lang.Class<? super T> java.lang.Class<T>.getSuperclass() [ <47:75 47:87>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <47:20 47:36>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <50:17 50:29>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <51:14 51:26>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <66:17 66:29>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <67:14 67:26>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> java.util.List<E> [ <50:12 50:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> java.util.List<E> [ <51:9 51:12>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> java.util.List<E> [ <55:17 55:20>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <50:17 50:29>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <51:14 51:26>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> java.util.ArrayList<E>.ArrayList() [ <51:46 51:56>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> java.util.ArrayList<E> [ <51:46 51:54>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> java.lang.reflect.Type [ <52:32 52:35>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> java.lang.reflect.Type java.lang.Class<T>.getGenericInterfaces() [ <52:60 52:79>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.clazz [ <52:54 52:58>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> java.lang.reflect.ParameterizedType [ <53:43 53:59>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> java.lang.reflect.ParameterizedType [ <54:17 54:33>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> java.lang.reflect.ParameterizedType [ <54:56 54:72>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> java.lang.reflect.ParameterizedType [ <58:102 58:118>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <55:22 55:25>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [ <57:26 57:32>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>) [ <56:26 56:28>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> static java.util.stream.Stream<T> java.util.Arrays.stream<T>(T) [ <55:52 55:57>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> java.lang.reflect.Type java.lang.reflect.ParameterizedType.getActualTypeArguments() [ <55:77 55:98>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.typeUsageFor(java.lang.reflect.Type, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <56:55 56:66>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeSolver [ <56:71 56:80>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeSolver [ <58:151 58:160>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeSolver [ <58:180 58:189>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeSolver [ <60:116 60:125>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeSolver [ <60:129 60:138>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [ <57:45 57:50>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> boolean java.util.List<E>.add(java.util.List<E>.E) [ <58:28 58:30>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> boolean java.util.List<E>.add(java.util.List<E>.E) [ <60:28 60:30>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <58:36 58:52>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <58:36 58:52>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <60:36 60:52>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionInterfaceDeclaration.ReflectionInterfaceDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <58:58 58:87>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionInterfaceDeclaration.ReflectionInterfaceDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <60:58 60:87>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionInterfaceDeclaration [ <58:58 58:87>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionInterfaceDeclaration [ <60:58 60:87>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> java.lang.Class<T> [ <58:90 58:94>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> java.lang.Class<T> [ <60:90 60:94>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> java.lang.reflect.Type java.lang.reflect.ParameterizedType.getRawType() [ <58:137 58:146>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <60:36 60:52>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> java.util.List<E> [ <66:12 66:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> java.util.List<E> [ <67:9 67:12>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <66:17 66:29>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <67:14 67:26>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <77:13 77:25>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> java.util.LinkedList<E>.LinkedList() [ <67:45 67:56>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> java.util.LinkedList<E> [ <67:45 67:54>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() [ <68:13 68:25>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() [ <69:44 69:56>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <69:13 69:29>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <72:13 72:29>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <72:44 72:60>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> boolean java.util.List<E>.add(java.util.List<E>.E) [ <70:23 70:25>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> boolean java.util.List<E>.add(java.util.List<E>.E) [ <73:23 73:25>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <72:44 72:60>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <72:66 72:91>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [ <72:66 72:91>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> java.lang.Object [ <72:93 72:98>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> java.lang.Object [ <78:74 78:79>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeSolver [ <72:107 72:116>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeSolver [ <72:120 72:129>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> boolean java.util.List<E>.addAll(java.util.Collection<? extends E>) [ <75:19 75:24>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() [ <75:26 75:38>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> int [ <76:14 76:16>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> int java.util.List<E>.size() [ <76:39 76:42>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> java.util.List<E>.E java.util.List<E>.get(int) [ <77:48 77:50>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.hasName() [ <78:26 78:32>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> boolean java.lang.String.equals(java.lang.Object) [ <78:67 78:72>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName() [ <78:48 78:63>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> java.lang.String java.lang.Class<T>.getCanonicalName() [ <78:87 78:102>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() -> java.util.List<E>.E java.util.List<E>.remove(int) [ <79:27 79:32>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [ <86:12 86:27>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> java.lang.String [ <86:38 86:43>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> java.lang.reflect.Field [ <87:14 87:18>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> java.lang.reflect.Field java.lang.Class<T>.getDeclaredFields() [ <87:34 87:50>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.clazz [ <87:28 87:32>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> boolean java.lang.String.equals(java.lang.Object) [ <88:33 88:38>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> java.lang.String java.lang.reflect.Field.getName() [ <88:23 88:29>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration(java.lang.reflect.Field, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <89:28 89:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration [ <89:28 89:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration [ <94:17 94:42>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration [ <94:74 94:99>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeSolver [ <89:62 89:71>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <92:14 92:26>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAllAncestors() [ <92:55 92:69>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeDeclaration [ <92:39 92:53>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasField(java.lang.String) [ <93:47 93:54>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ <93:26 93:43>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ <94:111 94:128>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getField(java.lang.String) [ <94:132 94:139>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.replaceType(com.github.javaparser.symbolsolver.model.typesystem.Type) [ <95:51 95:61>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> java.util.Optional<T>.T java.util.Optional<T>.get() [ <95:91 95:93>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getFieldType(java.lang.String) [ <95:72 95:83>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.UnsolvedSymbolException.UnsolvedSymbolException(java.lang.String, java.lang.String) [ <98:19 98:41>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.UnsolvedSymbolException [ <98:19 98:41>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasField(java.lang.String) -> boolean [ <101:12 101:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasField(java.lang.String) -> java.lang.String [ <101:29 101:34>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasField(java.lang.String) -> java.lang.reflect.Field [ <102:14 102:18>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasField(java.lang.String) -> java.lang.reflect.Field java.lang.Class<T>.getDeclaredFields() [ <102:34 102:50>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasField(java.lang.String) -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.clazz [ <102:28 102:32>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasField(java.lang.String) -> boolean java.lang.String.equals(java.lang.Object) [ <103:33 103:38>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasField(java.lang.String) -> java.lang.String java.lang.reflect.Field.getName() [ <103:23 103:29>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasField(java.lang.String) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <107:9 107:25>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasField(java.lang.String) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() [ <107:40 107:52>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasField(java.lang.String) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasField(java.lang.String) [ <111:52 111:59>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasField(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ <111:31 111:48>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [ <115:17 115:32>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields() -> java.util.List<E> [ <115:12 115:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields() -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [ <115:17 115:32>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields() -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [ <116:19 116:34>]
REFERENCE_TYPE_ARGUMENT: java.util.ArrayList<E> -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [ <116:19 116:34>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields() -> java.util.ArrayList<E> [ <116:9 116:17>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields() -> java.util.ArrayList<E> [ <116:50 116:58>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields() -> java.util.ArrayList<E>.ArrayList() [ <116:50 116:60>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields() -> java.lang.reflect.Field [ <117:14 117:18>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields() -> java.lang.reflect.Field java.lang.Class<T>.getDeclaredFields() [ <117:34 117:50>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields() -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.clazz [ <117:28 117:32>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields() -> boolean java.util.ArrayList<E>.add(java.util.ArrayList<E>.E) [ <118:20 118:22>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration(java.lang.reflect.Field, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <118:28 118:53>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration [ <118:28 118:53>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeSolver [ <118:62 118:71>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <120:14 120:26>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields() -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAllAncestors() [ <120:55 120:69>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeDeclaration [ <120:39 120:53>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields() -> boolean java.util.ArrayList<E>.addAll(java.util.Collection<? extends E>) [ <121:20 121:25>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields() -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAllFields() [ <121:57 121:68>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ <121:36 121:53>]
REFERENCE_TYPE_ARGUMENT: java.util.Set<E> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <126:16 126:32>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getDeclaredMethods() -> java.util.Set<E> [ <126:12 126:14>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getDeclaredMethods() -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <126:16 126:32>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getDeclaredMethods() -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [ <130:18 130:24>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getDeclaredMethods() -> java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>) [ <129:18 129:20>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getDeclaredMethods() -> java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.filter(java.util.function.Predicate<? super T>) [ <128:18 128:23>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getDeclaredMethods() -> static java.util.stream.Stream<T> java.util.Arrays.stream<T>(T) [ <127:23 127:28>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getDeclaredMethods() -> java.lang.reflect.Method java.lang.Class<T>.getDeclaredMethods() [ <127:36 127:53>]
REFERENCE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getDeclaredMethods() -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.clazz [ <127:30 127:34>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getDeclaredMethods() -> boolean java.lang.reflect.Method.isSynthetic() [ <128:33 128:43>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getDeclaredMethods() -> boolean java.lang.reflect.Method.isBridge() [ <128:53 128:60>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getDeclaredMethods() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodDeclaration.ReflectionMethodDeclaration(java.lang.reflect.Method, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <129:31 129:57>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getDeclaredMethods() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodDeclaration [ <129:31 129:57>]
REFERENCE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getDeclaredMethods() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeSolver [ <129:62 129:71>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getDeclaredMethods() -> static java.util.stream.Collector<T, ?, java.util.Set<T>> java.util.stream.Collectors.toSet<T>() [ <130:37 130:41>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <133:17 133:40>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <134:14 134:37>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getTypeParameters() -> java.util.List<E> [ <133:12 133:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getTypeParameters() -> java.util.List<E> [ <134:9 134:12>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getTypeParameters() -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <133:17 133:40>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getTypeParameters() -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <134:14 134:37>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getTypeParameters() -> java.util.ArrayList<E>.ArrayList() [ <134:53 134:63>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getTypeParameters() -> java.util.ArrayList<E> [ <134:53 134:61>]
REFERENCE_TYPE_ARGUMENT: java.lang.reflect.TypeVariable<D> -> ? [ <135:27 135:27>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getTypeParameters() -> java.lang.reflect.TypeVariable<D> [ <135:14 135:25>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getTypeParameters() -> java.lang.reflect.TypeVariable<java.lang.Class<java.lang.Class<T>.T>> java.lang.Class<T>.getTypeParameters() [ <135:46 135:62>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getTypeParameters() -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.clazz [ <135:40 135:44>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getTypeParameters() -> boolean java.util.List<E>.add(java.util.List<E>.E) [ <136:20 136:22>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getTypeParameters() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <136:28 136:50>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getTypeParameters() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter [ <136:28 136:50>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getTypeParameters() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeSolver [ <136:62 136:71>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean [ <141:12 141:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <141:35 141:38>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.NullType [ <142:29 142:36>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder [ <145:29 145:57>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isFunctionalInterface() [ <146:20 146:40>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray() [ <148:18 148:24>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive() [ <151:18 151:28>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean java.lang.String.equals(java.lang.Object) [ <154:29 154:34>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe() [ <154:18 154:25>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName() [ <154:52 154:67>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeDeclaration [ <154:36 154:50>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeDeclaration [ <159:78 159:92>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <157:29 157:45>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <158:13 158:29>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <158:55 158:71>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [ <159:62 159:76>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ <159:41 159:58>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasDirectlyAnnotation(java.lang.String) -> boolean [ <165:12 165:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasDirectlyAnnotation(java.lang.String) -> java.lang.String [ <165:42 165:47>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasDirectlyAnnotation(java.lang.String) -> java.lang.annotation.Annotation [ <166:14 166:23>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasDirectlyAnnotation(java.lang.String) -> java.lang.annotation.Annotation java.lang.Class<T>.getDeclaredAnnotations() [ <166:35 166:56>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasDirectlyAnnotation(java.lang.String) -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.clazz [ <166:29 166:33>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasDirectlyAnnotation(java.lang.String) -> boolean java.lang.String.equals(java.lang.Object) [ <167:55 167:60>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasDirectlyAnnotation(java.lang.String) -> java.lang.String java.lang.Class<T>.getCanonicalName() [ <167:36 167:51>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasDirectlyAnnotation(java.lang.String) -> java.lang.Class<? extends Annotation> java.lang.annotation.Annotation.annotationType() [ <167:19 167:32>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isFunctionalInterface() -> boolean [ <174:19 174:25>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isFunctionalInterface() -> boolean java.util.Optional<T>.isPresent() [ <175:78 175:86>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isFunctionalInterface() -> static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.logic.FunctionalInterfaceLogic.getFunctionalMethod(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [ <175:41 175:59>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isFunctionalInterface() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeDeclaration [ <175:61 175:75>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [ <178:17 178:38>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getConstructors() -> java.util.List<E> [ <178:12 178:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getConstructors() -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [ <178:17 178:38>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getConstructors() -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [ <181:18 181:24>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getConstructors() -> java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>) [ <180:18 180:20>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getConstructors() -> static java.util.stream.Stream<T> java.util.Arrays.stream<T>(T) [ <179:23 179:28>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getConstructors() -> java.lang.reflect.Constructor<?> java.lang.Class<T>.getConstructors() [ <179:36 179:50>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getConstructors() -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.clazz [ <179:30 179:34>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getConstructors() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionConstructorDeclaration.ReflectionConstructorDeclaration(java.lang.reflect.Constructor<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <180:31 180:62>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getConstructors() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionConstructorDeclaration [ <180:31 180:62>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getConstructors() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeSolver [ <180:67 180:76>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getConstructors() -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [ <181:37 181:42>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <184:21 184:44>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.containerType() -> java.util.Optional<T> [ <184:12 184:19>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.containerType() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <184:21 184:44>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.containerType() -> java.lang.Class<T> [ <185:9 185:13>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.containerType() -> java.lang.Class<?> java.lang.Class<T>.getDeclaringClass() [ <185:41 185:57>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.containerType() -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.clazz [ <185:35 185:39>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.containerType() -> static java.util.Optional<T> java.util.Optional<T>.empty<T>() [ <187:26 187:30>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.containerType() -> static java.util.Optional<T> java.util.Optional<T>.of<T>(T) [ <188:26 188:27>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.containerType() -> static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.typeDeclarationFor(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <188:47 188:64>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.containerType() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.typeSolver [ <188:82 188:91>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<101:42> [ <101:42 101:42>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<101:42> [ <113:5 113:5>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<102:55> [ <102:55 102:55>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<102:55> [ <106:9 106:9>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<103:47> [ <103:47 103:47>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<103:47> [ <105:13 105:13>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<108:33> [ <108:33 108:33>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<108:33> [ <110:9 110:9>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<110:16> [ <110:16 110:16>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<110:16> [ <112:9 112:9>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<115:50> [ <115:50 115:50>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<115:50> [ <124:5 124:5>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<117:55> [ <117:55 117:55>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<117:55> [ <119:9 119:9>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<120:74> [ <120:74 120:74>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<120:74> [ <122:9 122:9>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<126:56> [ <126:56 126:56>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<126:56> [ <131:5 131:5>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<133:63> [ <133:63 133:63>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<133:63> [ <139:5 139:5>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<135:67> [ <135:67 135:67>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<135:67> [ <137:9 137:9>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<141:46> [ <141:46 141:46>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<141:46> [ <163:5 163:5>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<142:39> [ <142:39 142:39>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<142:39> [ <144:9 144:9>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<145:60> [ <145:60 145:60>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<145:60> [ <147:9 147:9>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<148:29> [ <148:29 148:29>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<148:29> [ <150:9 150:9>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<151:33> [ <151:33 151:33>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<151:33> [ <153:9 153:9>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<154:73> [ <154:73 154:73>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<154:73> [ <156:9 156:9>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<157:48> [ <157:48 157:48>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<157:48> [ <160:9 160:9>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<165:64> [ <165:64 165:64>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<165:64> [ <172:5 172:5>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<166:61> [ <166:61 166:61>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<166:61> [ <170:9 170:9>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<167:78> [ <167:78 167:78>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<167:78> [ <169:13 169:13>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<174:51> [ <174:51 174:51>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<174:51> [ <176:5 176:5>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<178:59> [ <178:59 178:59>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<178:59> [ <182:5 182:5>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<184:63> [ <184:63 184:63>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<184:63> [ <189:5 189:5>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<23:30> [ <23:30 23:30>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<23:30> [ <190:1 190:1>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<29:116> [ <29:116 29:116>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<29:116> [ <33:5 33:5>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<35:46> [ <35:46 35:46>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<35:46> [ <48:5 48:5>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<36:51> [ <36:51 36:51>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<36:51> [ <38:9 38:9>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<40:53> [ <40:53 40:53>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<40:53> [ <46:9 46:9>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<50:48> [ <50:48 50:48>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<50:48> [ <64:5 64:5>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<52:84> [ <52:84 52:84>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<52:84> [ <62:9 62:9>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<53:62> [ <53:62 53:62>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<53:62> [ <59:13 59:13>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<59:20> [ <59:20 59:20>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<59:20> [ <61:13 61:13>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<66:47> [ <66:47 66:47>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<66:47> [ <84:5 84:5>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<68:38> [ <68:38 68:38>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<68:38> [ <71:9 71:9>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<71:16> [ <71:16 71:16>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<71:16> [ <74:9 74:9>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<76:52> [ <76:52 76:52>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<76:52> [ <82:9 82:9>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<78:108> [ <78:108 78:108>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<78:108> [ <81:13 81:13>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<86:51> [ <86:51 86:51>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<86:51> [ <99:5 99:5>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<87:55> [ <87:55 87:55>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<87:55> [ <91:9 91:9>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<88:47> [ <88:47 88:47>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<88:47> [ <90:13 90:13>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<92:74> [ <92:74 92:74>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<92:74> [ <97:9 97:9>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<93:63> [ <93:63 93:63>]
LOCAL_SYMBOL: ReflectionClassAdapter.java<93:63> [ <96:13 96:13>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.ReflectionClassAdapter<0> [ <29:44 29:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.ReflectionClassAdapter<0> [ <30:22 30:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.ReflectionClassAdapter<1> [ <29:62 29:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.ReflectionClassAdapter<1> [ <31:27 31:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.ReflectionClassAdapter<2> [ <29:99 29:113>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.ReflectionClassAdapter<2> [ <32:32 32:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.containerType<0> [ <185:18 185:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.containerType<0> [ <186:16 186:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.containerType<0> [ <188:66 188:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields<0> [ <116:37 116:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields<0> [ <118:13 118:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields<0> [ <121:13 121:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields<0> [ <123:16 123:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields<1> [ <117:20 117:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields<1> [ <118:55 118:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields<5> [ <120:28 120:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields<5> [ <121:27 121:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors<0> [ <67:29 67:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors<0> [ <70:13 70:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors<0> [ <73:13 73:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors<0> [ <75:9 75:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors<0> [ <76:29 76:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors<0> [ <77:38 77:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors<0> [ <79:17 79:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors<0> [ <83:16 83:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors<1> [ <69:31 69:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors<1> [ <70:27 70:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors<2> [ <72:31 72:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors<2> [ <73:27 73:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors<3> [ <76:18 76:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors<3> [ <76:25 76:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors<3> [ <76:47 76:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors<3> [ <77:52 77:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors<3> [ <79:34 79:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors<3> [ <80:17 80:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors<4> [ <77:27 77:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors<4> [ <78:17 78:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors<4> [ <78:39 78:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField<0> [ <86:45 86:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField<0> [ <88:40 88:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField<0> [ <93:56 93:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField<0> [ <94:141 94:144>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField<0> [ <95:85 95:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField<0> [ <98:43 98:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField<1> [ <87:20 87:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField<1> [ <88:17 88:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField<1> [ <89:55 89:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField<5> [ <92:28 92:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField<5> [ <93:17 93:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField<5> [ <94:102 94:109>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField<5> [ <95:63 95:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField<7> [ <94:44 94:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField<7> [ <95:24 95:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces<0> [ <51:29 51:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces<0> [ <58:17 58:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces<0> [ <60:17 60:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces<0> [ <63:16 63:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces<1> [ <52:37 52:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces<1> [ <53:17 53:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces<1> [ <54:75 54:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces<1> [ <58:121 58:134>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces<1> [ <60:100 60:113>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces<5> [ <54:35 54:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces<5> [ <55:59 55:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces<6> [ <55:28 55:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces<6> [ <58:164 58:177>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass<0> [ <39:32 39:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass<0> [ <40:13 40:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass<0> [ <41:71 41:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass<1> [ <41:31 41:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass<1> [ <42:55 42:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass<2> [ <42:24 42:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass<2> [ <45:109 45:122>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getTypeParameters<0> [ <134:40 134:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getTypeParameters<0> [ <136:13 136:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getTypeParameters<0> [ <138:16 138:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getTypeParameters<1> [ <135:30 135:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getTypeParameters<1> [ <136:52 136:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasDirectlyAnnotation<0> [ <165:49 165:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasDirectlyAnnotation<0> [ <167:62 167:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasDirectlyAnnotation<1> [ <166:25 166:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasDirectlyAnnotation<1> [ <167:17 167:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasField<0> [ <101:36 101:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasField<0> [ <103:40 103:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasField<0> [ <111:61 111:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasField<1> [ <102:20 102:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasField<1> [ <103:17 103:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasField<5> [ <107:27 107:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasField<5> [ <108:13 108:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasField<5> [ <111:20 111:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy<0> [ <141:40 141:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy<0> [ <142:13 142:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy<0> [ <145:13 145:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy<0> [ <148:13 148:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy<0> [ <151:13 151:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy<0> [ <154:13 154:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy<0> [ <157:13 157:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy<0> [ <158:74 158:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy<1> [ <158:31 158:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy<1> [ <159:20 159:39>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<1> [ <180:22 180:22>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<1> [ <180:64 180:64>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<3> [ <129:22 129:22>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<3> [ <129:59 129:59>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<4> [ <43:27 43:27>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<4> [ <43:64 43:64>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<8> [ <56:31 56:31>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<8> [ <56:68 56:68>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<1> [ <128:25 128:25>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<1> [ <128:31 128:31>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<1> [ <128:51 128:51>]
COMMENT: comment [ <20:1 22:3>]
