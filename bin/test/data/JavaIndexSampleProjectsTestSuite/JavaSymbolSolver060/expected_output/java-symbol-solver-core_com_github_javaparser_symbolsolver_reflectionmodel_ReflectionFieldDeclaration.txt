FILE: ReflectionFieldDeclaration.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.reflectionmodel [ <17:44 17:58>]
QUALIFIER: com.github.javaparser.symbolsolver [ <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ <19:30 19:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <20:30 20:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <21:30 21:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <22:30 22:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <23:30 23:41>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ <17:20 17:29>]
QUALIFIER: com.github.javaparser [ <19:19 19:28>]
QUALIFIER: com.github.javaparser [ <20:19 20:28>]
QUALIFIER: com.github.javaparser [ <21:19 21:28>]
QUALIFIER: com.github.javaparser [ <22:19 22:28>]
QUALIFIER: com.github.javaparser [ <23:19 23:28>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ <17:13 17:18>]
QUALIFIER: com.github [ <19:12 19:17>]
QUALIFIER: com.github [ <20:12 20:17>]
QUALIFIER: com.github [ <21:12 21:17>]
QUALIFIER: com.github [ <22:12 22:17>]
QUALIFIER: com.github [ <23:12 23:17>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ <17:9 17:11>]
QUALIFIER: com [ <19:8 19:10>]
QUALIFIER: com [ <20:8 20:10>]
QUALIFIER: com [ <21:8 21:10>]
QUALIFIER: com [ <22:8 22:10>]
QUALIFIER: com [ <23:8 23:10>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <19:49 19:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <20:49 20:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <21:49 21:60>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [ <19:43 19:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <20:43 20:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <21:43 21:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <22:43 22:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <23:43 23:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <22:49 22:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <23:49 23:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem
QUALIFIER: java.lang [ <25:13 25:16>]
QUALIFIER: java.lang [ <26:13 26:16>]
SYMBOL_PACKAGE: java.lang
QUALIFIER: java [ <25:8 25:11>]
QUALIFIER: java [ <26:8 26:11>]
SYMBOL_PACKAGE: java
QUALIFIER: java.lang.reflect [ <25:18 25:24>]
QUALIFIER: java.lang.reflect [ <26:18 26:24>]
SYMBOL_PACKAGE: java.lang.reflect
QUALIFIER: java.lang.reflect.Modifier [ <66:16 66:23>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration [ <38:9 38:12>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration [ <39:9 39:12>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration [ <40:9 40:12>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration [ <44:9 44:12>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration [ <45:9 45:12>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration [ <46:9 46:12>]
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration [ <31:1 <31:14 31:39> 97:1>]
SYMBOL_FIELD: private java.lang.reflect.Field com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.field [ <33:19 33:23>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.typeSolver [ <34:24 34:33>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.type [ <35:18 35:21>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration(java.lang.reflect.Field, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <37:5 <37:5 <37:12 37:37> 37:73> 41:5>]
SYMBOL_METHOD: private com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.calcType() [ <54:5 <54:5 <54:18 54:25> 54:27> 57:5>]
SYMBOL_METHOD: private com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration(java.lang.reflect.Field, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.typesystem.Type) [ <43:5 <43:5 <43:13 43:38> 43:85> 47:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.getType() [ <49:5 <49:5 <50:17 50:23> 50:25> 52:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration.getType()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.typeUsageFor(java.lang.reflect.Type, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory [ <56:16 56:32>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory [ <76:16 76:32>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory [ <95:16 95:32>]
SYMBOL_METHOD: java.lang.reflect.Type java.lang.reflect.Field.getGenericType()
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.getName() [ <59:5 <59:5 <60:19 60:25> 60:27> 62:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName()
SYMBOL_METHOD: java.lang.String java.lang.reflect.Field.getName()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.isStatic() [ <64:5 <64:5 <65:20 65:27> 65:29> 67:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration.isStatic()
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: static boolean java.lang.reflect.Modifier.isStatic(int)
SYMBOL_METHOD: int java.lang.reflect.Field.getModifiers()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.isField() [ <69:5 <69:5 <70:20 70:26> 70:28> 72:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration.isField()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.declaringType() [ <74:5 <74:5 <75:28 75:40> 75:42> 77:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration.declaringType()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.typeDeclarationFor(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.lang.Class<?> java.lang.reflect.Field.getDeclaringClass()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.replaceType(com.github.javaparser.symbolsolver.model.typesystem.Type) [ <79:5 <79:5 <79:29 79:39> 79:55> 81:5>]
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.isParameter() [ <83:5 <83:5 <84:20 84:30> 84:32> 86:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.isParameter()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.isType() [ <88:5 <88:5 <89:20 89:25> 89:27> 91:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.isType()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.accessLevel() [ <93:5 <93:5 <94:24 94:34> 94:36> 96:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.model.declarations.HasAccessLevel.accessLevel()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.modifiersToAccessLevel(int)
REFERENCE_IMPORT: ReflectionFieldDeclaration.java -> com.github.javaparser.symbolsolver.model.declarations.AccessLevel [ <19:62 19:72>]
REFERENCE_IMPORT: ReflectionFieldDeclaration.java -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [ <20:62 20:77>]
REFERENCE_IMPORT: ReflectionFieldDeclaration.java -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <21:62 21:76>]
REFERENCE_IMPORT: ReflectionFieldDeclaration.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <22:60 22:69>]
REFERENCE_IMPORT: ReflectionFieldDeclaration.java -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <23:60 23:63>]
REFERENCE_IMPORT: ReflectionFieldDeclaration.java -> java.lang.reflect.Field [ <25:26 25:30>]
REFERENCE_IMPORT: ReflectionFieldDeclaration.java -> java.lang.reflect.Modifier [ <26:26 26:33>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [ <31:52 31:67>]
REFERENCE_TYPE_USAGE: java.lang.reflect.Field com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.field -> java.lang.reflect.Field [ <33:13 33:17>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.typeSolver -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <34:13 34:22>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.type -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <35:13 35:16>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration(java.lang.reflect.Field, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.reflect.Field [ <37:39 37:43>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration(java.lang.reflect.Field, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <37:52 37:61>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration(java.lang.reflect.Field, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.reflect.Field com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.field [ <38:14 38:18>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration(java.lang.reflect.Field, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.typeSolver [ <39:14 39:23>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration(java.lang.reflect.Field, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.type [ <40:14 40:17>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration(java.lang.reflect.Field, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.calcType() [ <40:21 40:28>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration(java.lang.reflect.Field, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.reflect.Field [ <43:40 43:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration(java.lang.reflect.Field, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <43:53 43:62>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration(java.lang.reflect.Field, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <43:76 43:79>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration(java.lang.reflect.Field, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.reflect.Field com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.field [ <44:14 44:18>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration(java.lang.reflect.Field, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.typeSolver [ <45:14 45:23>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration(java.lang.reflect.Field, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.type [ <46:14 46:17>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.getType() -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration.getType() [ <50:17 50:23>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.getType() -> java.lang.Override [ <49:6 49:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.getType() -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <50:12 50:15>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.getType() -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.type [ <51:16 51:19>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.calcType() -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <54:13 54:16>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.calcType() -> static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.typeUsageFor(java.lang.reflect.Type, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <56:34 56:45>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.calcType() -> java.lang.reflect.Type java.lang.reflect.Field.getGenericType() [ <56:53 56:66>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.calcType() -> java.lang.reflect.Field com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.field [ <56:47 56:51>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.calcType() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.typeSolver [ <56:71 56:80>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.getName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName() [ <60:19 60:25>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.getName() -> java.lang.Override [ <59:6 59:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.getName() -> java.lang.String [ <60:12 60:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.getName() -> java.lang.String java.lang.reflect.Field.getName() [ <61:22 61:28>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.getName() -> java.lang.reflect.Field com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.field [ <61:16 61:20>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.isStatic() -> boolean com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration.isStatic() [ <65:20 65:27>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.isStatic() -> java.lang.Override [ <64:6 64:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.isStatic() -> boolean [ <65:12 65:18>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.isStatic() -> static boolean java.lang.reflect.Modifier.isStatic(int) [ <66:25 66:32>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.isStatic() -> int java.lang.reflect.Field.getModifiers() [ <66:40 66:51>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.isStatic() -> java.lang.reflect.Field com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.field [ <66:34 66:38>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.isField() -> boolean com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration.isField() [ <70:20 70:26>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.isField() -> java.lang.Override [ <69:6 69:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.isField() -> boolean [ <70:12 70:18>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.declaringType() -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration.declaringType() [ <75:28 75:40>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.declaringType() -> java.lang.Override [ <74:6 74:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.declaringType() -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <75:12 75:26>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.declaringType() -> static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.typeDeclarationFor(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <76:34 76:51>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.declaringType() -> java.lang.Class<?> java.lang.reflect.Field.getDeclaringClass() [ <76:59 76:75>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.declaringType() -> java.lang.reflect.Field com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.field [ <76:53 76:57>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.declaringType() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.typeSolver [ <76:80 76:89>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.replaceType(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [ <79:12 79:27>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.replaceType(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <79:41 79:44>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.replaceType(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration(java.lang.reflect.Field, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.typesystem.Type) [ <80:20 80:45>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.replaceType(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration [ <80:20 80:45>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.replaceType(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.reflect.Field com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.field [ <80:47 80:51>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.replaceType(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.typeSolver [ <80:54 80:63>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.isParameter() -> boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.isParameter() [ <84:20 84:30>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.isParameter() -> java.lang.Override [ <83:6 83:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.isParameter() -> boolean [ <84:12 84:18>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.isType() -> boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.isType() [ <89:20 89:25>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.isType() -> java.lang.Override [ <88:6 88:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.isType() -> boolean [ <89:12 89:18>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.accessLevel() -> com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.model.declarations.HasAccessLevel.accessLevel() [ <94:24 94:34>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.accessLevel() -> java.lang.Override [ <93:6 93:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.accessLevel() -> com.github.javaparser.symbolsolver.model.declarations.AccessLevel [ <94:12 94:22>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.accessLevel() -> static com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.modifiersToAccessLevel(int) [ <95:34 95:55>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.accessLevel() -> int java.lang.reflect.Field.getModifiers() [ <95:63 95:74>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.accessLevel() -> java.lang.reflect.Field com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.field [ <95:57 95:61>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<31:69> [ <31:69 31:69>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<31:69> [ <97:1 97:1>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<37:75> [ <37:75 37:75>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<37:75> [ <41:5 41:5>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<43:87> [ <43:87 43:87>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<43:87> [ <47:5 47:5>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<50:27> [ <50:27 50:27>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<50:27> [ <52:5 52:5>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<54:29> [ <54:29 54:29>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<54:29> [ <57:5 57:5>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<60:29> [ <60:29 60:29>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<60:29> [ <62:5 62:5>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<65:31> [ <65:31 65:31>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<65:31> [ <67:5 67:5>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<70:30> [ <70:30 70:30>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<70:30> [ <72:5 72:5>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<75:44> [ <75:44 75:44>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<75:44> [ <77:5 77:5>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<79:57> [ <79:57 79:57>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<79:57> [ <81:5 81:5>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<84:34> [ <84:34 84:34>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<84:34> [ <86:5 86:5>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<89:29> [ <89:29 89:29>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<89:29> [ <91:5 91:5>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<94:38> [ <94:38 94:38>]
LOCAL_SYMBOL: ReflectionFieldDeclaration.java<94:38> [ <96:5 96:5>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration<0> [ <37:45 37:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration<0> [ <38:22 38:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration<0> [ <43:46 43:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration<0> [ <44:22 44:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration<1> [ <37:63 37:72>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration<1> [ <39:27 39:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration<1> [ <43:64 43:73>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration<1> [ <45:27 45:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration<2> [ <43:81 43:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration<2> [ <46:21 46:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.replaceType<0> [ <79:46 79:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.replaceType<0> [ <80:66 80:74>]
COMMENT: comment [ <1:1 15:3>]
COMMENT: comment [ <28:1 30:3>]
COMMENT: comment [ <55:9 55:67>]
