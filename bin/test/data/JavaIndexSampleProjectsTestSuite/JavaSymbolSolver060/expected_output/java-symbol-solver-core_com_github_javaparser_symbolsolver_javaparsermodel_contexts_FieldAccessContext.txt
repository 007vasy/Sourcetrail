FILE: FieldAccessContext.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts [ <17:60 17:67>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <17:44 17:58>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <22:43 22:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <23:43 23:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel
QUALIFIER: com.github.javaparser.symbolsolver [ <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ <22:30 22:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <23:30 23:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <24:30 24:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <25:30 25:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <26:30 26:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <27:30 27:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <28:30 28:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <29:30 29:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <30:30 30:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <31:30 31:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <32:30 32:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <37:37 37:48>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ <17:20 17:29>]
QUALIFIER: com.github.javaparser [ <19:19 19:28>]
QUALIFIER: com.github.javaparser [ <20:19 20:28>]
QUALIFIER: com.github.javaparser [ <21:19 21:28>]
QUALIFIER: com.github.javaparser [ <22:19 22:28>]
QUALIFIER: com.github.javaparser [ <23:19 23:28>]
QUALIFIER: com.github.javaparser [ <24:19 24:28>]
QUALIFIER: com.github.javaparser [ <25:19 25:28>]
QUALIFIER: com.github.javaparser [ <26:19 26:28>]
QUALIFIER: com.github.javaparser [ <27:19 27:28>]
QUALIFIER: com.github.javaparser [ <28:19 28:28>]
QUALIFIER: com.github.javaparser [ <29:19 29:28>]
QUALIFIER: com.github.javaparser [ <30:19 30:28>]
QUALIFIER: com.github.javaparser [ <31:19 31:28>]
QUALIFIER: com.github.javaparser [ <32:19 32:28>]
QUALIFIER: com.github.javaparser [ <37:26 37:35>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ <17:13 17:18>]
QUALIFIER: com.github [ <19:12 19:17>]
QUALIFIER: com.github [ <20:12 20:17>]
QUALIFIER: com.github [ <21:12 21:17>]
QUALIFIER: com.github [ <22:12 22:17>]
QUALIFIER: com.github [ <23:12 23:17>]
QUALIFIER: com.github [ <24:12 24:17>]
QUALIFIER: com.github [ <25:12 25:17>]
QUALIFIER: com.github [ <26:12 26:17>]
QUALIFIER: com.github [ <27:12 27:17>]
QUALIFIER: com.github [ <28:12 28:17>]
QUALIFIER: com.github [ <29:12 29:17>]
QUALIFIER: com.github [ <30:12 30:17>]
QUALIFIER: com.github [ <31:12 31:17>]
QUALIFIER: com.github [ <32:12 32:17>]
QUALIFIER: com.github [ <37:19 37:24>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ <17:9 17:11>]
QUALIFIER: com [ <19:8 19:10>]
QUALIFIER: com [ <20:8 20:10>]
QUALIFIER: com [ <21:8 21:10>]
QUALIFIER: com [ <22:8 22:10>]
QUALIFIER: com [ <23:8 23:10>]
QUALIFIER: com [ <24:8 24:10>]
QUALIFIER: com [ <25:8 25:10>]
QUALIFIER: com [ <26:8 26:10>]
QUALIFIER: com [ <27:8 27:10>]
QUALIFIER: com [ <28:8 28:10>]
QUALIFIER: com [ <29:8 29:10>]
QUALIFIER: com [ <30:8 30:10>]
QUALIFIER: com [ <31:8 31:10>]
QUALIFIER: com [ <32:8 32:10>]
QUALIFIER: com [ <37:15 37:17>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.ast.expr [ <19:34 19:37>]
QUALIFIER: com.github.javaparser.ast.expr [ <20:34 20:37>]
QUALIFIER: com.github.javaparser.ast.expr [ <21:34 21:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.expr
QUALIFIER: com.github.javaparser.ast [ <19:30 19:32>]
QUALIFIER: com.github.javaparser.ast [ <20:30 20:32>]
QUALIFIER: com.github.javaparser.ast [ <21:30 21:32>]
SYMBOL_PACKAGE: com.github.javaparser.ast
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ <54:35 54:50>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ <75:32 75:47>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [ <58:16 58:32>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [ <63:16 63:32>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [ <68:16 68:32>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <24:49 24:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <25:49 25:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <26:49 26:60>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [ <24:43 24:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <25:43 25:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <26:43 26:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <27:43 27:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <28:43 28:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <29:43 29:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <30:43 30:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <31:43 31:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <27:49 27:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <28:49 28:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <29:49 29:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [ <77:46 77:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <30:49 30:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <31:49 31:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem
QUALIFIER: com.github.javaparser.symbolsolver.resolution [ <32:43 32:52>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.resolution
QUALIFIER: java.util [ <34:13 34:16>]
QUALIFIER: java.util [ <35:13 35:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [ <34:8 34:11>]
QUALIFIER: java [ <35:8 35:11>]
SYMBOL_PACKAGE: java
SYMBOL_METHOD: static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node)
QUALIFIER: com.github.javaparser.symbolsolver.javaparser.Navigator [ <37:61 37:69>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparser [ <37:50 37:59>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparser
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext [ <42:1 <42:14 42:31> 93:1>]
SYMBOL_FIELD: private static java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.ARRAY_LENGTH_FIELD_NAME [ <44:33 44:55>]
SYMBOL_PACKAGE: java.lang
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.FieldAccessContext(com.github.javaparser.ast.expr.FieldAccessExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <46:5 <46:5 <46:12 46:29> 46:81> 48:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <50:5 <50:5 <51:56 51:66> 51:102> 59:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: boolean java.lang.String.equals(java.lang.Object)
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.Node.toString()
SYMBOL_METHOD: com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.expr.FieldAccessExpr.getField()
SYMBOL_FIELD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
SYMBOL_METHOD: com.github.javaparser.ast.expr.Expression com.github.javaparser.ast.expr.FieldAccessExpr.getScope()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.resolution.SymbolSolver.SymbolSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <61:5 <61:5 <62:45 62:53> 62:89> 64:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <66:5 <66:5 <67:47 67:57> 67:140> 69:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: public java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <71:5 <71:5 <72:28 72:45> 72:81> 92:5>]
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray()
SYMBOL_METHOD: static java.util.Optional<T> java.util.Optional<T>.of<T>(T)
QUALIFIER: java.util.Optional [ <77:24 77:31>]
QUALIFIER: java.util.Optional [ <82:28 82:35>]
QUALIFIER: java.util.Optional [ <84:28 84:35>]
QUALIFIER: java.util.Optional [ <87:24 87:31>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.Value.Value(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String)
SYMBOL_FIELD: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.INT
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType()
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getFieldType(java.lang.String)
SYMBOL_METHOD: boolean java.util.Optional<T>.isPresent()
SYMBOL_METHOD: java.util.Optional<T>.T java.util.Optional<T>.get()
SYMBOL_METHOD: static java.util.Optional<T> java.util.Optional<T>.empty<T>()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent()
REFERENCE_IMPORT: FieldAccessContext.java -> com.github.javaparser.ast.expr.Expression [ <19:39 19:48>]
REFERENCE_IMPORT: FieldAccessContext.java -> com.github.javaparser.ast.expr.FieldAccessExpr [ <20:39 20:53>]
REFERENCE_IMPORT: FieldAccessContext.java -> com.github.javaparser.ast.expr.ThisExpr [ <21:39 21:46>]
REFERENCE_IMPORT: FieldAccessContext.java -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ <22:59 22:74>]
REFERENCE_IMPORT: FieldAccessContext.java -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [ <23:59 23:75>]
REFERENCE_IMPORT: FieldAccessContext.java -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <24:62 24:78>]
REFERENCE_IMPORT: FieldAccessContext.java -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <25:62 25:76>]
REFERENCE_IMPORT: FieldAccessContext.java -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [ <26:62 26:77>]
REFERENCE_IMPORT: FieldAccessContext.java -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <27:60 27:74>]
REFERENCE_IMPORT: FieldAccessContext.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <28:60 28:69>]
REFERENCE_IMPORT: FieldAccessContext.java -> com.github.javaparser.symbolsolver.model.resolution.Value [ <29:60 29:64>]
REFERENCE_IMPORT: FieldAccessContext.java -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [ <30:60 30:72>]
REFERENCE_IMPORT: FieldAccessContext.java -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <31:60 31:63>]
REFERENCE_IMPORT: FieldAccessContext.java -> com.github.javaparser.symbolsolver.resolution.SymbolSolver [ <32:54 32:65>]
REFERENCE_IMPORT: FieldAccessContext.java -> java.util.List<E> [ <34:18 34:21>]
REFERENCE_IMPORT: FieldAccessContext.java -> java.util.Optional<T> [ <35:18 35:25>]
REFERENCE_IMPORT: FieldAccessContext.java -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <37:71 37:83>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N> -> com.github.javaparser.ast.expr.FieldAccessExpr [ <42:67 42:81>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N> [ <42:41 42:65>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext -> com.github.javaparser.ast.expr.FieldAccessExpr [ <42:67 42:81>]
REFERENCE_TYPE_USAGE: static java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.ARRAY_LENGTH_FIELD_NAME -> java.lang.String [ <44:26 44:31>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.FieldAccessContext(com.github.javaparser.ast.expr.FieldAccessExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <46:12 46:29>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.FieldAccessContext(com.github.javaparser.ast.expr.FieldAccessExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.FieldAccessExpr [ <46:31 46:45>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.FieldAccessContext(com.github.javaparser.ast.expr.FieldAccessExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <46:60 46:69>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.FieldAccessContext(com.github.javaparser.ast.expr.FieldAccessExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <47:9 47:13>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <51:56 51:66>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <50:6 50:13>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> ? extends ValueDeclaration [ <51:28 51:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <51:12 51:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [ <51:38 51:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <51:68 51:73>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <51:81 51:90>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [ <52:47 52:52>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.Node.toString() [ <52:36 52:43>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.expr.FieldAccessExpr.getField() [ <52:25 52:32>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <52:13 52:23>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <53:17 53:27>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <54:84 54:94>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <58:59 58:69>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.Expression com.github.javaparser.ast.expr.FieldAccessExpr.getScope() [ <53:29 53:36>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.ThisExpr [ <53:51 53:58>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <54:17 54:20>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node) [ <54:68 54:82>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <54:52 54:54>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String) [ <55:53 55:69>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolSolver.SymbolSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <55:28 55:39>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolSolver [ <55:28 55:39>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ <55:100 55:117>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [ <55:82 55:96>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <58:85 58:95>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <58:34 58:43>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <58:45 58:57>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <62:45 62:53>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <61:6 61:13>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <62:28 62:42>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <62:12 62:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <62:28 62:42>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <62:55 62:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <62:68 62:77>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <63:85 63:93>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <63:34 63:43>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <63:45 63:57>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <63:59 63:69>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <67:47 67:57>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <66:6 66:13>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <67:28 67:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <67:12 67:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <67:28 67:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <67:59 67:64>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <67:77 67:80>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [ <67:72 67:75>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <67:77 67:80>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [ <67:99 67:105>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <67:119 67:128>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <68:85 68:95>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <68:34 68:43>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <68:45 68:57>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <68:59 68:69>]
REFERENCE_OVERRIDE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <72:28 72:45>]
REFERENCE_ANNOTATION_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <71:6 71:13>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.resolution.Value [ <72:21 72:25>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T> [ <72:12 72:19>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T> [ <80:17 80:24>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.Value [ <72:21 72:25>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.Value [ <77:40 77:44>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.Value [ <82:44 82:48>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <72:47 72:52>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <72:60 72:69>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.Expression [ <73:9 73:18>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.Expression com.github.javaparser.ast.expr.FieldAccessExpr.getScope() [ <73:40 73:47>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <73:28 73:38>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <74:13 74:23>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [ <74:47 74:52>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [ <76:47 76:52>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.Node.toString() [ <74:36 74:43>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.expr.FieldAccessExpr.getField() [ <74:25 74:32>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <75:13 75:16>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <80:26 80:29>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node) [ <75:65 75:71>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <75:49 75:51>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray() [ <76:29 76:35>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.ARRAY_LENGTH_FIELD_NAME [ <76:54 76:76>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.ARRAY_LENGTH_FIELD_NAME [ <77:65 77:87>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.util.Optional<T> java.util.Optional<T>.of<T>(T) [ <77:33 77:34>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.util.Optional<T> java.util.Optional<T>.of<T>(T) [ <82:37 82:38>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.Value.Value(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String) [ <77:40 77:44>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.Value.Value(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String) [ <82:44 82:48>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.INT [ <77:60 77:62>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [ <79:29 79:43>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <80:26 80:29>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getFieldType(java.lang.String) [ <80:74 80:85>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [ <80:56 80:70>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.Optional<T>.isPresent() [ <81:31 81:39>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T>.T java.util.Optional<T>.get() [ <82:60 82:62>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.util.Optional<T> java.util.Optional<T>.empty<T>() [ <84:37 84:41>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.util.Optional<T> java.util.Optional<T>.empty<T>() [ <87:33 87:37>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <90:32 90:49>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ <90:20 90:28>]
LOCAL_SYMBOL: FieldAccessContext.java<42:84> [ <42:84 42:84>]
LOCAL_SYMBOL: FieldAccessContext.java<42:84> [ <93:1 93:1>]
LOCAL_SYMBOL: FieldAccessContext.java<46:83> [ <46:83 46:83>]
LOCAL_SYMBOL: FieldAccessContext.java<46:83> [ <48:5 48:5>]
LOCAL_SYMBOL: FieldAccessContext.java<51:104> [ <51:104 51:104>]
LOCAL_SYMBOL: FieldAccessContext.java<51:104> [ <59:5 59:5>]
LOCAL_SYMBOL: FieldAccessContext.java<52:61> [ <52:61 52:61>]
LOCAL_SYMBOL: FieldAccessContext.java<52:61> [ <57:9 57:9>]
LOCAL_SYMBOL: FieldAccessContext.java<53:61> [ <53:61 53:61>]
LOCAL_SYMBOL: FieldAccessContext.java<53:61> [ <56:13 56:13>]
LOCAL_SYMBOL: FieldAccessContext.java<62:91> [ <62:91 62:91>]
LOCAL_SYMBOL: FieldAccessContext.java<62:91> [ <64:5 64:5>]
LOCAL_SYMBOL: FieldAccessContext.java<67:142> [ <67:142 67:142>]
LOCAL_SYMBOL: FieldAccessContext.java<67:142> [ <69:5 69:5>]
LOCAL_SYMBOL: FieldAccessContext.java<72:83> [ <72:83 72:83>]
LOCAL_SYMBOL: FieldAccessContext.java<72:83> [ <92:5 92:5>]
LOCAL_SYMBOL: FieldAccessContext.java<74:61> [ <74:61 74:61>]
LOCAL_SYMBOL: FieldAccessContext.java<74:61> [ <89:9 89:9>]
LOCAL_SYMBOL: FieldAccessContext.java<76:80> [ <76:80 76:80>]
LOCAL_SYMBOL: FieldAccessContext.java<76:80> [ <78:13 78:13>]
LOCAL_SYMBOL: FieldAccessContext.java<79:48> [ <79:48 79:48>]
LOCAL_SYMBOL: FieldAccessContext.java<79:48> [ <86:13 86:13>]
LOCAL_SYMBOL: FieldAccessContext.java<81:44> [ <81:44 81:44>]
LOCAL_SYMBOL: FieldAccessContext.java<81:44> [ <83:17 83:17>]
LOCAL_SYMBOL: FieldAccessContext.java<83:24> [ <83:24 83:24>]
LOCAL_SYMBOL: FieldAccessContext.java<83:24> [ <85:17 85:17>]
LOCAL_SYMBOL: FieldAccessContext.java<86:20> [ <86:20 86:20>]
LOCAL_SYMBOL: FieldAccessContext.java<86:20> [ <88:13 88:13>]
LOCAL_SYMBOL: FieldAccessContext.java<89:16> [ <89:16 89:16>]
LOCAL_SYMBOL: FieldAccessContext.java<89:16> [ <91:9 91:9>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.FieldAccessContext<0> [ <46:47 46:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.FieldAccessContext<0> [ <47:15 47:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.FieldAccessContext<1> [ <46:71 46:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.FieldAccessContext<1> [ <47:28 47:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveMethod<0> [ <67:66 67:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveMethod<0> [ <68:97 68:100>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveMethod<1> [ <67:83 67:96>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveMethod<1> [ <68:103 68:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveMethod<2> [ <67:107 67:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveMethod<3> [ <67:130 67:139>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveMethod<3> [ <68:73 68:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveMethod<3> [ <68:126 68:135>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol<0> [ <51:75 51:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol<0> [ <52:54 52:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol<0> [ <55:122 55:125>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol<0> [ <58:97 58:100>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol<1> [ <51:92 51:101>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol<1> [ <54:56 54:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol<1> [ <55:41 55:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol<1> [ <58:73 58:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol<1> [ <58:103 58:112>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol<2> [ <54:22 54:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbol<2> [ <55:71 55:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue<0> [ <72:54 72:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue<0> [ <74:54 74:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue<0> [ <76:42 76:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue<0> [ <80:87 80:90>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue<0> [ <82:67 82:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue<0> [ <90:51 90:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue<1> [ <72:71 72:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue<1> [ <75:53 75:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue<1> [ <90:57 90:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue<2> [ <73:20 73:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue<2> [ <75:73 75:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue<3> [ <75:18 75:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue<3> [ <76:17 76:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue<3> [ <79:17 79:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue<3> [ <80:44 80:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue<4> [ <80:32 80:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue<4> [ <81:21 81:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveSymbolAsValue<4> [ <82:50 82:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveType<0> [ <62:62 62:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveType<0> [ <63:95 63:98>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveType<1> [ <62:79 62:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveType<1> [ <63:73 63:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.FieldAccessContext.solveType<1> [ <63:101 63:110>]
COMMENT: comment [ <1:1 15:3>]
COMMENT: comment [ <39:1 41:3>]
