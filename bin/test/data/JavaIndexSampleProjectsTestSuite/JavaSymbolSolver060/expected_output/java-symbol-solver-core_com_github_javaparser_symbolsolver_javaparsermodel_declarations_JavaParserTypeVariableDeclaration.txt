FILE: JavaParserTypeVariableDeclaration.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations [ <17:60 17:71>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <17:44 17:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel
QUALIFIER: com.github.javaparser.symbolsolver [ <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ <21:30 21:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <22:30 22:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <23:30 23:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <24:30 24:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <25:30 25:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <26:30 26:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <27:30 27:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <28:30 28:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <29:30 29:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <30:30 30:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <31:30 31:41>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ <17:20 17:29>]
QUALIFIER: com.github.javaparser [ <19:19 19:28>]
QUALIFIER: com.github.javaparser [ <20:19 20:28>]
QUALIFIER: com.github.javaparser [ <21:19 21:28>]
QUALIFIER: com.github.javaparser [ <22:19 22:28>]
QUALIFIER: com.github.javaparser [ <23:19 23:28>]
QUALIFIER: com.github.javaparser [ <24:19 24:28>]
QUALIFIER: com.github.javaparser [ <25:19 25:28>]
QUALIFIER: com.github.javaparser [ <26:19 26:28>]
QUALIFIER: com.github.javaparser [ <27:19 27:28>]
QUALIFIER: com.github.javaparser [ <28:19 28:28>]
QUALIFIER: com.github.javaparser [ <29:19 29:28>]
QUALIFIER: com.github.javaparser [ <30:19 30:28>]
QUALIFIER: com.github.javaparser [ <31:19 31:28>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ <17:13 17:18>]
QUALIFIER: com.github [ <19:12 19:17>]
QUALIFIER: com.github [ <20:12 20:17>]
QUALIFIER: com.github [ <21:12 21:17>]
QUALIFIER: com.github [ <22:12 22:17>]
QUALIFIER: com.github [ <23:12 23:17>]
QUALIFIER: com.github [ <24:12 24:17>]
QUALIFIER: com.github [ <25:12 25:17>]
QUALIFIER: com.github [ <26:12 26:17>]
QUALIFIER: com.github [ <27:12 27:17>]
QUALIFIER: com.github [ <28:12 28:17>]
QUALIFIER: com.github [ <29:12 29:17>]
QUALIFIER: com.github [ <30:12 30:17>]
QUALIFIER: com.github [ <31:12 31:17>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ <17:9 17:11>]
QUALIFIER: com [ <19:8 19:10>]
QUALIFIER: com [ <20:8 20:10>]
QUALIFIER: com [ <21:8 21:10>]
QUALIFIER: com [ <22:8 22:10>]
QUALIFIER: com [ <23:8 23:10>]
QUALIFIER: com [ <24:8 24:10>]
QUALIFIER: com [ <25:8 25:10>]
QUALIFIER: com [ <26:8 26:10>]
QUALIFIER: com [ <27:8 27:10>]
QUALIFIER: com [ <28:8 28:10>]
QUALIFIER: com [ <29:8 29:10>]
QUALIFIER: com [ <30:8 30:10>]
QUALIFIER: com [ <31:8 31:10>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.ast [ <19:30 19:32>]
QUALIFIER: com.github.javaparser.ast [ <20:30 20:32>]
SYMBOL_PACKAGE: com.github.javaparser.ast
QUALIFIER: com.github.javaparser.ast.type [ <20:34 20:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.type
QUALIFIER: com.github.javaparser.symbolsolver.core.resolution [ <21:48 21:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.core.resolution
QUALIFIER: com.github.javaparser.symbolsolver.core [ <21:43 21:46>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.core
QUALIFIER: com.github.javaparser.symbolsolver.logic [ <22:43 22:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.logic
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <23:49 23:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <24:49 24:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <25:49 25:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <26:49 26:60>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [ <23:43 23:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <24:43 24:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <25:43 25:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <26:43 26:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <27:43 27:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <28:43 28:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <29:43 29:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <30:43 30:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <31:43 31:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <27:49 27:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <28:49 28:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <29:49 29:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <30:49 30:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <31:49 31:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem
QUALIFIER: java.util [ <33:13 33:16>]
QUALIFIER: java.util [ <34:13 34:16>]
QUALIFIER: java.util [ <35:13 35:16>]
QUALIFIER: java.util [ <36:13 36:16>]
QUALIFIER: java.util [ <37:13 37:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [ <33:8 33:11>]
QUALIFIER: java [ <34:8 34:11>]
QUALIFIER: java [ <35:8 35:11>]
QUALIFIER: java [ <36:8 36:11>]
QUALIFIER: java [ <37:8 37:11>]
SYMBOL_PACKAGE: java
QUALIFIER: java.util.Collections [ <127:16 127:26>]
QUALIFIER: java.util.Collections [ <167:16 167:26>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration [ <48:9 48:12>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration [ <49:9 49:12>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration [ <171:44 171:47>]
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration [ <42:1 <42:14 42:46> 187:1>]
SYMBOL_FIELD: private com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.wrappedNode [ <44:27 44:37>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.typeSolver [ <45:24 45:33>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.JavaParserTypeVariableDeclaration(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <47:5 <47:5 <47:12 47:44> 47:94> 50:5>]
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [ <52:5 <52:5 <53:20 53:33> 53:65> 55:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration)
SYMBOL_PACKAGE: java.lang
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ <91:5 <91:5 <92:20 92:33> 92:44> 98:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getPackageName() [ <57:5 <57:5 <58:19 58:32> 58:34> 60:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getPackageName()
SYMBOL_METHOD: static java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper.getPackageName(com.github.javaparser.ast.Node)
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper [ <59:16 59:21>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper [ <64:16 64:21>]
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getClassName() [ <62:5 <62:5 <63:19 63:30> 63:32> 65:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getClassName()
SYMBOL_METHOD: static java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper.getClassName(java.lang.String, com.github.javaparser.ast.Node)
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getQualifiedName() [ <67:5 <67:5 <68:19 68:34> 68:36> 70:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName()
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getName() [ <130:5 <130:5 <131:19 131:25> 131:27> 133:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getContext() [ <72:5 <72:5 <72:20 72:29> 72:31> 74:5>]
SYMBOL_METHOD: java.lang.UnsupportedOperationException.UnsupportedOperationException()
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.toString() [ <76:5 <76:5 <77:19 77:26> 77:28> 81:5>]
SYMBOL_METHOD: java.lang.String java.lang.Object.toString()
SYMBOL_METHOD: com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.TypeParameter.getName()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <83:5 <83:5 <83:47 83:57> 83:97> 85:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getUsage(com.github.javaparser.ast.Node) [ <87:5 <87:5 <87:17 87:24> 87:35> 89:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable()
SYMBOL_METHOD: java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isTypeParameter() [ <100:5 <100:5 <101:20 101:34> 101:36> 103:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isTypeParameter()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getField(java.lang.String) [ <105:5 <105:5 <106:29 106:36> 106:49> 108:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getField(java.lang.String)
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.hasField(java.lang.String) [ <110:5 <110:5 <111:20 111:27> 111:40> 113:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasField(java.lang.String)
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getAllFields() [ <115:5 <115:5 <116:35 116:46> 116:48> 118:5>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAllFields()
SYMBOL_METHOD: java.util.ArrayList<E>.ArrayList()
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getAncestors() [ <120:5 <120:5 <121:32 121:43> 121:45> 123:5>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAncestors()
SYMBOL_METHOD: public java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getDeclaredMethods() [ <125:5 <125:5 <126:35 126:52> 126:54> 128:5>]
SYMBOL_METHOD: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getDeclaredMethods()
SYMBOL_METHOD: static java.util.Set<T> java.util.Collections.emptySet<T>()
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName()
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isField() [ <135:5 <135:5 <136:20 136:26> 136:28> 138:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.isField()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isParameter() [ <140:5 <140:5 <141:20 141:30> 141:32> 143:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.isParameter()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isType() [ <145:5 <145:5 <146:20 146:25> 146:27> 148:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isType()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.hasDirectlyAnnotation(java.lang.String) [ <150:5 <150:5 <151:20 151:40> 151:62> 153:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasDirectlyAnnotation(java.lang.String)
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isClass() [ <155:5 <155:5 <156:20 156:26> 156:28> 158:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isClass()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isInterface() [ <160:5 <160:5 <161:20 161:30> 161:32> 163:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isInterface()
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getTypeParameters() [ <165:5 <165:5 <166:43 166:59> 166:61> 168:5>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters()
SYMBOL_METHOD: static java.util.List<T> java.util.Collections.emptyList<T>()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.asTypeParameter() [ <170:5 <170:5 <170:37 170:51> 170:53> 172:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.asTypeParameter()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getWrappedNode() [ <179:1 <179:1 <179:26 179:39> 179:41> 181:5>]
SYMBOL_METHOD: public java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.containerType() [ <183:5 <183:5 <184:47 184:59> 184:61> 186:5>]
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.containerType()
REFERENCE_IMPORT: JavaParserTypeVariableDeclaration.java -> com.github.javaparser.ast.Node [ <19:34 19:37>]
REFERENCE_IMPORT: JavaParserTypeVariableDeclaration.java -> com.github.javaparser.ast.type.TypeParameter [ <20:39 20:51>]
REFERENCE_IMPORT: JavaParserTypeVariableDeclaration.java -> com.github.javaparser.symbolsolver.core.resolution.Context [ <21:59 21:65>]
REFERENCE_IMPORT: JavaParserTypeVariableDeclaration.java -> com.github.javaparser.symbolsolver.logic.AbstractTypeDeclaration [ <22:49 22:71>]
REFERENCE_IMPORT: JavaParserTypeVariableDeclaration.java -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [ <23:62 23:77>]
REFERENCE_IMPORT: JavaParserTypeVariableDeclaration.java -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <24:62 24:78>]
REFERENCE_IMPORT: JavaParserTypeVariableDeclaration.java -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <25:62 25:85>]
REFERENCE_IMPORT: JavaParserTypeVariableDeclaration.java -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <26:62 26:85>]
REFERENCE_IMPORT: JavaParserTypeVariableDeclaration.java -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <27:60 27:74>]
REFERENCE_IMPORT: JavaParserTypeVariableDeclaration.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <28:60 28:69>]
REFERENCE_IMPORT: JavaParserTypeVariableDeclaration.java -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <29:60 29:72>]
REFERENCE_IMPORT: JavaParserTypeVariableDeclaration.java -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <30:60 30:76>]
REFERENCE_IMPORT: JavaParserTypeVariableDeclaration.java -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <31:60 31:63>]
REFERENCE_IMPORT: JavaParserTypeVariableDeclaration.java -> java.util.ArrayList<E> [ <33:18 33:26>]
REFERENCE_IMPORT: JavaParserTypeVariableDeclaration.java -> java.util.Collections [ <34:18 34:28>]
REFERENCE_IMPORT: JavaParserTypeVariableDeclaration.java -> java.util.List<E> [ <35:18 35:21>]
REFERENCE_IMPORT: JavaParserTypeVariableDeclaration.java -> java.util.Optional<T> [ <36:18 36:25>]
REFERENCE_IMPORT: JavaParserTypeVariableDeclaration.java -> java.util.Set<E> [ <37:18 37:20>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration -> com.github.javaparser.symbolsolver.logic.AbstractTypeDeclaration [ <42:56 42:78>]
REFERENCE_TYPE_USAGE: com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.wrappedNode -> com.github.javaparser.ast.type.TypeParameter [ <44:13 44:25>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.typeSolver -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <45:13 45:22>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.JavaParserTypeVariableDeclaration(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.type.TypeParameter [ <47:46 47:58>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.JavaParserTypeVariableDeclaration(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <47:73 47:82>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.JavaParserTypeVariableDeclaration(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.wrappedNode [ <48:14 48:24>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.JavaParserTypeVariableDeclaration(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.typeSolver [ <49:14 49:23>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [ <53:20 53:33>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> java.lang.Override [ <52:6 52:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean [ <53:12 53:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <53:35 53:58>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ <54:16 54:29>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <54:35 54:51>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <54:35 54:51>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.typeSolver [ <54:60 54:69>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getPackageName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getPackageName() [ <58:19 58:32>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getPackageName() -> java.lang.Override [ <57:6 57:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getPackageName() -> java.lang.String [ <58:12 58:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getPackageName() -> static java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper.getPackageName(com.github.javaparser.ast.Node) [ <59:23 59:36>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getPackageName() -> com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.wrappedNode [ <59:38 59:48>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getClassName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getClassName() [ <63:19 63:30>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getClassName() -> java.lang.Override [ <62:6 62:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getClassName() -> java.lang.String [ <63:12 63:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getClassName() -> static java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper.getClassName(java.lang.String, com.github.javaparser.ast.Node) [ <64:23 64:34>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getClassName() -> com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.wrappedNode [ <64:40 64:50>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getQualifiedName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName() [ <68:19 68:34>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getQualifiedName() -> java.lang.Override [ <67:6 67:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getQualifiedName() -> java.lang.String [ <68:12 68:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getQualifiedName() -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getName() [ <69:16 69:22>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getContext() -> com.github.javaparser.symbolsolver.core.resolution.Context [ <72:12 72:18>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getContext() -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <73:19 73:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getContext() -> java.lang.UnsupportedOperationException [ <73:19 73:47>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.toString() -> java.lang.String java.lang.Object.toString() [ <77:19 77:26>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.toString() -> java.lang.Override [ <76:6 76:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.toString() -> java.lang.String [ <77:12 77:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.toString() -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.TypeParameter.getName() [ <79:29 79:35>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.toString() -> com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.wrappedNode [ <79:17 79:27>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <83:28 83:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <83:12 83:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <83:28 83:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String [ <83:59 83:64>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <83:77 83:80>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E> [ <83:72 83:75>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <83:77 83:80>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <84:19 84:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.UnsupportedOperationException [ <84:19 84:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getUsage(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <87:12 87:15>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getUsage(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [ <87:26 87:29>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getUsage(com.github.javaparser.ast.Node) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <88:19 88:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getUsage(com.github.javaparser.ast.Node) -> java.lang.UnsupportedOperationException [ <88:19 88:47>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ <92:20 92:33>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.Override [ <91:6 91:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean [ <92:12 92:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <92:35 92:38>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [ <93:18 93:31>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [ <94:23 94:51>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [ <96:23 96:51>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.UnsupportedOperationException [ <94:23 94:51>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.UnsupportedOperationException [ <96:23 96:51>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe() [ <94:111 94:118>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isTypeParameter() -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isTypeParameter() [ <101:20 101:34>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isTypeParameter() -> java.lang.Override [ <100:6 100:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isTypeParameter() -> boolean [ <101:12 101:18>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getField(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getField(java.lang.String) [ <106:29 106:36>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getField(java.lang.String) -> java.lang.Override [ <105:6 105:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getField(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [ <106:12 106:27>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getField(java.lang.String) -> java.lang.String [ <106:38 106:43>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getField(java.lang.String) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <107:19 107:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getField(java.lang.String) -> java.lang.UnsupportedOperationException [ <107:19 107:47>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.hasField(java.lang.String) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasField(java.lang.String) [ <111:20 111:27>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.hasField(java.lang.String) -> java.lang.Override [ <110:6 110:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.hasField(java.lang.String) -> boolean [ <111:12 111:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.hasField(java.lang.String) -> java.lang.String [ <111:29 111:34>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getAllFields() -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAllFields() [ <116:35 116:46>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getAllFields() -> java.lang.Override [ <115:6 115:13>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [ <116:17 116:32>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getAllFields() -> java.util.List<E> [ <116:12 116:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getAllFields() -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [ <116:17 116:32>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getAllFields() -> java.util.ArrayList<E>.ArrayList() [ <117:20 117:30>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getAllFields() -> java.util.ArrayList<E> [ <117:20 117:28>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getAncestors() -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAncestors() [ <121:32 121:43>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getAncestors() -> java.lang.Override [ <120:6 120:13>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <121:17 121:29>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getAncestors() -> java.util.List<E> [ <121:12 121:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getAncestors() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <121:17 121:29>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getAncestors() -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <122:19 122:47>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getAncestors() -> java.lang.UnsupportedOperationException [ <122:19 122:47>]
REFERENCE_OVERRIDE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getDeclaredMethods() -> java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getDeclaredMethods() [ <126:35 126:52>]
REFERENCE_ANNOTATION_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getDeclaredMethods() -> java.lang.Override [ <125:6 125:13>]
REFERENCE_TYPE_ARGUMENT: java.util.Set<E> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <126:16 126:32>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getDeclaredMethods() -> java.util.Set<E> [ <126:12 126:14>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getDeclaredMethods() -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <126:16 126:32>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getDeclaredMethods() -> static java.util.Set<T> java.util.Collections.emptySet<T>() [ <127:28 127:35>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName() [ <131:19 131:25>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getName() -> java.lang.Override [ <130:6 130:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getName() -> java.lang.String [ <131:12 131:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getName() -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [ <132:38 132:42>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getName() -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.TypeParameter.getName() [ <132:28 132:34>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getName() -> com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.wrappedNode [ <132:16 132:26>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isField() -> boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.isField() [ <136:20 136:26>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isField() -> java.lang.Override [ <135:6 135:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isField() -> boolean [ <136:12 136:18>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isField() -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <137:19 137:47>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isField() -> java.lang.UnsupportedOperationException [ <137:19 137:47>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isParameter() -> boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.isParameter() [ <141:20 141:30>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isParameter() -> java.lang.Override [ <140:6 140:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isParameter() -> boolean [ <141:12 141:18>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isParameter() -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <142:19 142:47>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isParameter() -> java.lang.UnsupportedOperationException [ <142:19 142:47>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isType() -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isType() [ <146:20 146:25>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isType() -> java.lang.Override [ <145:6 145:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isType() -> boolean [ <146:12 146:18>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.hasDirectlyAnnotation(java.lang.String) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasDirectlyAnnotation(java.lang.String) [ <151:20 151:40>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.hasDirectlyAnnotation(java.lang.String) -> java.lang.Override [ <150:6 150:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.hasDirectlyAnnotation(java.lang.String) -> boolean [ <151:12 151:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.hasDirectlyAnnotation(java.lang.String) -> java.lang.String [ <151:42 151:47>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.hasDirectlyAnnotation(java.lang.String) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <152:19 152:47>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.hasDirectlyAnnotation(java.lang.String) -> java.lang.UnsupportedOperationException [ <152:19 152:47>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isClass() -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isClass() [ <156:20 156:26>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isClass() -> java.lang.Override [ <155:6 155:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isClass() -> boolean [ <156:12 156:18>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isInterface() -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isInterface() [ <161:20 161:30>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isInterface() -> java.lang.Override [ <160:6 160:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isInterface() -> boolean [ <161:12 161:18>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getTypeParameters() -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [ <166:43 166:59>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getTypeParameters() -> java.lang.Override [ <165:6 165:13>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <166:17 166:40>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getTypeParameters() -> java.util.List<E> [ <166:12 166:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getTypeParameters() -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <166:17 166:40>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getTypeParameters() -> static java.util.List<T> java.util.Collections.emptyList<T>() [ <167:28 167:36>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.asTypeParameter() -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.asTypeParameter() [ <170:37 170:51>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.asTypeParameter() -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <170:12 170:35>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.asTypeParameter() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <171:20 171:42>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.asTypeParameter() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter [ <171:20 171:42>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.asTypeParameter() -> com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.wrappedNode [ <171:49 171:59>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.asTypeParameter() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.typeSolver [ <171:62 171:71>]
REFERENCE_TYPE_USAGE: com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getWrappedNode() -> com.github.javaparser.ast.type.TypeParameter [ <179:12 179:24>]
REFERENCE_USAGE: com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getWrappedNode() -> com.github.javaparser.ast.type.TypeParameter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.wrappedNode [ <180:16 180:26>]
REFERENCE_OVERRIDE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.containerType() -> java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.containerType() [ <184:47 184:59>]
REFERENCE_ANNOTATION_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.containerType() -> java.lang.Override [ <183:6 183:13>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <184:21 184:44>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.containerType() -> java.util.Optional<T> [ <184:12 184:19>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.containerType() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <184:21 184:44>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.containerType() -> java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.containerType() [ <185:34 185:46>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.containerType() -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.asTypeParameter() [ <185:16 185:30>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<101:38> [ <101:38 101:38>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<101:38> [ <103:5 103:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<106:51> [ <106:51 106:51>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<106:51> [ <108:5 108:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<111:42> [ <111:42 111:42>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<111:42> [ <113:5 113:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<116:50> [ <116:50 116:50>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<116:50> [ <118:5 118:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<121:47> [ <121:47 121:47>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<121:47> [ <123:5 123:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<126:56> [ <126:56 126:56>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<126:56> [ <128:5 128:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<131:29> [ <131:29 131:29>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<131:29> [ <133:5 133:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<136:30> [ <136:30 136:30>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<136:30> [ <138:5 138:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<141:34> [ <141:34 141:34>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<141:34> [ <143:5 143:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<146:29> [ <146:29 146:29>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<146:29> [ <148:5 148:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<151:64> [ <151:64 151:64>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<151:64> [ <153:5 153:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<156:30> [ <156:30 156:30>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<156:30> [ <158:5 158:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<161:34> [ <161:34 161:34>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<161:34> [ <163:5 163:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<166:63> [ <166:63 166:63>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<166:63> [ <168:5 168:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<170:55> [ <170:55 170:55>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<170:55> [ <172:5 172:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<179:43> [ <179:43 179:43>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<179:43> [ <181:5 181:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<184:63> [ <184:63 184:63>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<184:63> [ <186:5 186:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<42:80> [ <42:80 42:80>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<42:80> [ <187:1 187:1>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<47:96> [ <47:96 47:96>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<47:96> [ <50:5 50:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<53:67> [ <53:67 53:67>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<53:67> [ <55:5 55:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<58:36> [ <58:36 58:36>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<58:36> [ <60:5 60:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<63:34> [ <63:34 63:34>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<63:34> [ <65:5 65:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<68:38> [ <68:38 68:38>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<68:38> [ <70:5 70:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<72:33> [ <72:33 72:33>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<72:33> [ <74:5 74:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<77:30> [ <77:30 77:30>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<77:30> [ <81:5 81:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<83:99> [ <83:99 83:99>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<83:99> [ <85:5 85:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<87:37> [ <87:37 87:37>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<87:37> [ <89:5 89:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<92:46> [ <92:46 92:46>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<92:46> [ <98:5 98:5>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<93:36> [ <93:36 93:36>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<93:36> [ <95:9 95:9>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<95:16> [ <95:16 95:16>]
LOCAL_SYMBOL: JavaParserTypeVariableDeclaration.java<95:16> [ <97:9 97:9>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.JavaParserTypeVariableDeclaration<0> [ <47:60 47:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.JavaParserTypeVariableDeclaration<0> [ <48:28 48:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.JavaParserTypeVariableDeclaration<1> [ <47:84 47:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.JavaParserTypeVariableDeclaration<1> [ <49:27 49:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getField<0> [ <106:45 106:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.getUsage<0> [ <87:31 87:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.hasDirectlyAnnotation<0> [ <151:49 151:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.hasField<0> [ <111:36 111:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy<0> [ <53:60 53:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy<0> [ <54:53 54:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy<0> [ <92:40 92:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy<0> [ <93:13 93:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy<0> [ <94:106 94:109>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.isAssignableBy<0> [ <96:106 96:109>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.solveMethod<0> [ <83:66 83:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.solveMethod<1> [ <83:83 83:96>]
COMMENT: comment [ <1:1 15:3>]
COMMENT: comment [ <39:1 41:3>]
COMMENT: comment [ <174:5 178:7>]
