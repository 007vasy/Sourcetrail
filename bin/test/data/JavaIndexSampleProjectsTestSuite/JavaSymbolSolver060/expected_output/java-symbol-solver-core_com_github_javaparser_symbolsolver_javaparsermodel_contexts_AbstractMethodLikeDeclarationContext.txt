FILE: AbstractMethodLikeDeclarationContext.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts [ <1:60 1:67>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <1:44 1:58>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <7:43 7:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <8:43 8:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <9:43 9:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel
QUALIFIER: com.github.javaparser.symbolsolver [ <1:31 1:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ <7:30 7:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <8:30 8:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <9:30 9:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <10:30 10:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <11:30 11:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <12:30 12:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <13:30 13:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <14:30 14:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <15:30 15:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <16:30 16:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <17:30 17:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <18:30 18:41>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ <1:20 1:29>]
QUALIFIER: com.github.javaparser [ <3:19 3:28>]
QUALIFIER: com.github.javaparser [ <4:19 4:28>]
QUALIFIER: com.github.javaparser [ <5:19 5:28>]
QUALIFIER: com.github.javaparser [ <6:19 6:28>]
QUALIFIER: com.github.javaparser [ <7:19 7:28>]
QUALIFIER: com.github.javaparser [ <8:19 8:28>]
QUALIFIER: com.github.javaparser [ <9:19 9:28>]
QUALIFIER: com.github.javaparser [ <10:19 10:28>]
QUALIFIER: com.github.javaparser [ <11:19 11:28>]
QUALIFIER: com.github.javaparser [ <12:19 12:28>]
QUALIFIER: com.github.javaparser [ <13:19 13:28>]
QUALIFIER: com.github.javaparser [ <14:19 14:28>]
QUALIFIER: com.github.javaparser [ <15:19 15:28>]
QUALIFIER: com.github.javaparser [ <16:19 16:28>]
QUALIFIER: com.github.javaparser [ <17:19 17:28>]
QUALIFIER: com.github.javaparser [ <18:19 18:28>]
QUALIFIER: com.github.javaparser [ <48:25 48:34>]
QUALIFIER: com.github.javaparser [ <74:29 74:38>]
QUALIFIER: com.github.javaparser [ <82:25 82:34>]
QUALIFIER: com.github.javaparser [ <83:28 83:37>]
QUALIFIER: com.github.javaparser [ <84:25 84:34>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ <1:13 1:18>]
QUALIFIER: com.github [ <3:12 3:17>]
QUALIFIER: com.github [ <4:12 4:17>]
QUALIFIER: com.github [ <5:12 5:17>]
QUALIFIER: com.github [ <6:12 6:17>]
QUALIFIER: com.github [ <7:12 7:17>]
QUALIFIER: com.github [ <8:12 8:17>]
QUALIFIER: com.github [ <9:12 9:17>]
QUALIFIER: com.github [ <10:12 10:17>]
QUALIFIER: com.github [ <11:12 11:17>]
QUALIFIER: com.github [ <12:12 12:17>]
QUALIFIER: com.github [ <13:12 13:17>]
QUALIFIER: com.github [ <14:12 14:17>]
QUALIFIER: com.github [ <15:12 15:17>]
QUALIFIER: com.github [ <16:12 16:17>]
QUALIFIER: com.github [ <17:12 17:17>]
QUALIFIER: com.github [ <18:12 18:17>]
QUALIFIER: com.github [ <48:18 48:23>]
QUALIFIER: com.github [ <74:22 74:27>]
QUALIFIER: com.github [ <82:18 82:23>]
QUALIFIER: com.github [ <83:21 83:26>]
QUALIFIER: com.github [ <84:18 84:23>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ <1:9 1:11>]
QUALIFIER: com [ <3:8 3:10>]
QUALIFIER: com [ <4:8 4:10>]
QUALIFIER: com [ <5:8 5:10>]
QUALIFIER: com [ <6:8 6:10>]
QUALIFIER: com [ <7:8 7:10>]
QUALIFIER: com [ <8:8 8:10>]
QUALIFIER: com [ <9:8 9:10>]
QUALIFIER: com [ <10:8 10:10>]
QUALIFIER: com [ <11:8 11:10>]
QUALIFIER: com [ <12:8 12:10>]
QUALIFIER: com [ <13:8 13:10>]
QUALIFIER: com [ <14:8 14:10>]
QUALIFIER: com [ <15:8 15:10>]
QUALIFIER: com [ <16:8 16:10>]
QUALIFIER: com [ <17:8 17:10>]
QUALIFIER: com [ <18:8 18:10>]
QUALIFIER: com [ <48:14 48:16>]
QUALIFIER: com [ <74:18 74:20>]
QUALIFIER: com [ <82:14 82:16>]
QUALIFIER: com [ <83:17 83:19>]
QUALIFIER: com [ <84:14 84:16>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.ast [ <3:30 3:32>]
QUALIFIER: com.github.javaparser.ast [ <4:30 4:32>]
QUALIFIER: com.github.javaparser.ast [ <5:30 5:32>]
QUALIFIER: com.github.javaparser.ast [ <6:30 6:32>]
QUALIFIER: com.github.javaparser.ast [ <48:36 48:38>]
QUALIFIER: com.github.javaparser.ast [ <74:40 74:42>]
QUALIFIER: com.github.javaparser.ast [ <82:36 82:38>]
QUALIFIER: com.github.javaparser.ast [ <83:39 83:41>]
QUALIFIER: com.github.javaparser.ast [ <84:36 84:38>]
SYMBOL_PACKAGE: com.github.javaparser.ast
QUALIFIER: com.github.javaparser.ast.body [ <4:34 4:37>]
QUALIFIER: com.github.javaparser.ast.body [ <82:40 82:43>]
QUALIFIER: com.github.javaparser.ast.body [ <83:43 83:46>]
QUALIFIER: com.github.javaparser.ast.body [ <84:40 84:43>]
SYMBOL_PACKAGE: com.github.javaparser.ast.body
QUALIFIER: com.github.javaparser.ast.nodeTypes [ <5:34 5:42>]
QUALIFIER: com.github.javaparser.ast.nodeTypes [ <6:34 6:42>]
SYMBOL_PACKAGE: com.github.javaparser.ast.nodeTypes
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ <86:47 86:62>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [ <35:35 35:51>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [ <59:35 59:51>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [ <88:24 88:40>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations [ <9:59 9:70>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <10:49 10:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <11:49 11:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <12:49 12:60>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [ <10:43 10:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <11:43 11:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <12:43 12:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <13:43 13:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <14:43 14:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <15:43 15:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <16:43 16:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <17:43 17:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <13:49 13:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <14:49 14:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <15:49 15:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <16:49 16:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <17:49 17:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem
QUALIFIER: com.github.javaparser.symbolsolver.resolution [ <18:43 18:52>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.resolution
QUALIFIER: java.util [ <20:13 20:16>]
QUALIFIER: java.util [ <21:13 21:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [ <20:8 20:11>]
QUALIFIER: java [ <21:8 21:11>]
SYMBOL_PACKAGE: java
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T> [ <26:1 <26:23 26:58> 101:1>]
SYMBOL_TYPE_PARAMETER: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T [ <27:10 27:10>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N> [ <53:16 53:20>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.AbstractMethodLikeDeclarationContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <29:5 <29:5 <29:12 29:47> 29:85> 31:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <33:5 <33:5 <33:62 33:72> 33:108> 44:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_PACKAGE: java.lang
QUALIFIER: java.lang.String [ <87:40 87:45>]
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.Parameter> com.github.javaparser.ast.nodeTypes.NodeWithParameters<N>.getParameters()
SYMBOL_FIELD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveWith(com.github.javaparser.symbolsolver.resolution.SymbolDeclarator, java.lang.String)
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext [ <36:75 36:99>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent()
SYMBOL_METHOD: public java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <46:5 <46:5 <47:33 47:48> 47:84> 54:5>]
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
QUALIFIER: com.github.javaparser.ast.type [ <48:40 48:43>]
QUALIFIER: com.github.javaparser.ast.type [ <74:44 74:47>]
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.TypeParameter> com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters<N>.getTypeParameters()
SYMBOL_METHOD: boolean java.lang.String.equals(java.lang.Object)
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId()
SYMBOL_METHOD: com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.TypeParameter.getName()
SYMBOL_METHOD: static java.util.Optional<T> java.util.Optional<T>.of<T>(T)
QUALIFIER: java.util.Optional [ <50:24 50:31>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.TypeVariable(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <56:5 <56:5 <57:34 57:51> 57:87> 69:5>]
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveWithAsValue(com.github.javaparser.symbolsolver.resolution.SymbolDeclarator, java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: boolean java.util.Optional<T>.isPresent()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <71:5 <71:5 <72:51 72:59> 72:95> 94:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2)
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <76:28 76:42>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <86:24 86:38>]
SYMBOL_METHOD: java.util.List<N> com.github.javaparser.ast.Node.getChildNodesByType<N>(java.lang.Class<N>)
SYMBOL_METHOD: com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.TypeDeclaration<?>)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: boolean java.lang.String.startsWith(java.lang.String)
SYMBOL_METHOD: static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.lang.String java.lang.String.substring(int)
SYMBOL_METHOD: int java.lang.String.length()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <96:5 <96:5 <97:53 97:63> 98:94> 100:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_BUILTIN_TYPE: boolean
REFERENCE_IMPORT: AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.ast.Node [ <3:34 3:37>]
REFERENCE_IMPORT: AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.ast.body.Parameter [ <4:39 4:47>]
REFERENCE_IMPORT: AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.ast.nodeTypes.NodeWithParameters<N> [ <5:44 5:61>]
REFERENCE_IMPORT: AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters<N> [ <6:44 6:65>]
REFERENCE_IMPORT: AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ <7:59 7:74>]
REFERENCE_IMPORT: AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [ <8:59 8:75>]
REFERENCE_IMPORT: AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter [ <9:72 9:94>]
REFERENCE_IMPORT: AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <10:62 10:78>]
REFERENCE_IMPORT: AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <11:62 11:76>]
REFERENCE_IMPORT: AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [ <12:62 12:77>]
REFERENCE_IMPORT: AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <13:60 13:74>]
REFERENCE_IMPORT: AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <14:60 14:69>]
REFERENCE_IMPORT: AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.model.resolution.Value [ <15:60 15:64>]
REFERENCE_IMPORT: AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <16:60 16:63>]
REFERENCE_IMPORT: AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [ <17:60 17:71>]
REFERENCE_IMPORT: AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.resolution.SymbolDeclarator [ <18:54 18:69>]
REFERENCE_IMPORT: AbstractMethodLikeDeclarationContext.java -> java.util.List<E> [ <20:18 20:21>]
REFERENCE_IMPORT: AbstractMethodLikeDeclarationContext.java -> java.util.Optional<T> [ <21:18 21:25>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T -> com.github.javaparser.ast.Node [ <27:20 27:23>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.nodeTypes.NodeWithParameters<N> -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T [ <27:46 27:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T -> com.github.javaparser.ast.nodeTypes.NodeWithParameters<N> [ <27:27 27:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T [ <27:46 27:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T [ <27:74 27:74>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters<N> -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T [ <27:74 27:74>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T -> com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters<N> [ <27:51 27:72>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N> -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T [ <27:112 27:112>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T> -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N> [ <27:86 27:110>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T> -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T [ <27:112 27:112>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.AbstractMethodLikeDeclarationContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <29:12 29:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.AbstractMethodLikeDeclarationContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T [ <29:49 29:49>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.AbstractMethodLikeDeclarationContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <29:64 29:73>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.AbstractMethodLikeDeclarationContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <30:9 30:13>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <33:62 33:72>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> ? extends ValueDeclaration [ <33:34 33:59>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> ? extends ValueDeclaration [ <36:29 36:54>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <33:18 33:32>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <36:13 36:27>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [ <33:44 33:59>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [ <36:39 36:54>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <33:74 33:79>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <33:87 33:96>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.Parameter [ <34:14 34:22>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.Parameter> com.github.javaparser.ast.nodeTypes.NodeWithParameters<N>.getParameters() [ <34:48 34:60>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <34:36 34:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolDeclarator [ <35:13 35:28>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <35:53 35:71>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveWith(com.github.javaparser.symbolsolver.resolution.SymbolDeclarator, java.lang.String) [ <36:101 36:109>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <37:33 37:40>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <43:28 43:38>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ <43:16 43:24>]
REFERENCE_OVERRIDE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <47:33 47:48>]
REFERENCE_ANNOTATION_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <46:6 46:13>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <47:27 47:30>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T> [ <47:18 47:25>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <47:27 47:30>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <47:50 47:55>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <47:63 47:72>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.type.TypeParameter [ <48:45 48:57>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.TypeParameter> com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters<N>.getTypeParameters() [ <48:76 48:92>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <48:64 48:74>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [ <49:38 49:43>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [ <49:30 49:34>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.TypeParameter.getName() [ <49:20 49:26>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.util.Optional<T> java.util.Optional<T>.of<T>(T) [ <50:33 50:34>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.TypeVariable(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration) [ <50:40 50:51>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [ <50:40 50:51>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <50:57 50:79>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter [ <50:57 50:79>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <53:22 53:37>]
REFERENCE_OVERRIDE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <57:34 57:51>]
REFERENCE_ANNOTATION_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <56:6 56:13>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.resolution.Value [ <57:27 57:31>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.resolution.Value [ <60:22 60:26>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T> [ <57:18 57:25>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T> [ <60:13 60:20>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.Value [ <57:27 57:31>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.Value [ <60:22 60:26>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <57:53 57:58>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <57:66 57:75>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.Parameter [ <58:14 58:22>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.Parameter> com.github.javaparser.ast.nodeTypes.NodeWithParameters<N>.getParameters() [ <58:48 58:60>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <58:36 58:46>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolDeclarator [ <59:13 59:28>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <59:53 59:71>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveWithAsValue(com.github.javaparser.symbolsolver.resolution.SymbolDeclarator, java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <60:47 60:62>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.Optional<T>.isPresent() [ <61:33 61:41>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <68:28 68:45>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ <68:16 68:24>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <72:51 72:59>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <71:6 71:13>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <72:34 72:48>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <72:18 72:32>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <72:34 72:48>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <72:61 72:66>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <72:74 72:83>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.TypeParameter> com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters<N>.getTypeParameters() [ <73:25 73:41>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.TypeParameter> com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters<N>.getTypeParameters() [ <74:80 74:96>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <73:13 73:23>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <74:68 74:78>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <82:75 82:85>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.type.TypeParameter [ <74:49 74:61>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [ <75:42 75:47>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [ <85:45 85:50>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [ <75:34 75:38>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [ <85:37 85:41>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [ <89:60 89:64>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.TypeParameter.getName() [ <75:24 75:30>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [ <76:44 76:49>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [ <86:40 86:45>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <76:55 76:77>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter [ <76:55 76:77>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.ast.body.TypeDeclaration [ <82:14 82:59>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [ <82:9 82:12>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.TypeDeclaration<T> [ <82:45 82:59>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.TypeDeclaration<T> [ <83:48 83:62>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.TypeDeclaration<T> [ <84:45 84:59>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<N> com.github.javaparser.ast.Node.getChildNodesByType<N>(java.lang.Class<N>) [ <82:87 82:105>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.body.TypeDeclaration<T> -> ? [ <84:61 84:61>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName() [ <85:27 85:33>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName() [ <87:71 87:77>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName() [ <89:50 89:56>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.TypeDeclaration<?>) [ <86:80 86:97>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <86:64 86:66>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.startsWith(java.lang.String) [ <87:29 87:38>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object) [ <87:47 87:52>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <88:76 88:84>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <93:28 93:36>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <88:42 88:51>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String java.lang.String.substring(int) [ <89:30 89:38>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int java.lang.String.length() [ <89:68 89:73>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ <93:16 93:24>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <97:53 97:63>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <96:6 96:13>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <97:34 97:50>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <97:18 97:32>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <97:34 97:50>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <98:13 98:18>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <98:31 98:34>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [ <98:26 98:29>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <98:31 98:34>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [ <98:53 98:59>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <98:73 98:82>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <99:28 99:38>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ <99:16 99:24>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<27:115> [ <27:115 27:115>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<27:115> [ <101:1 101:1>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<29:87> [ <29:87 29:87>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<29:87> [ <31:5 31:5>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<33:110> [ <33:110 33:110>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<33:110> [ <44:5 44:5>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<34:65> [ <34:65 34:65>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<34:65> [ <40:9 40:9>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<37:45> [ <37:45 37:45>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<37:45> [ <39:13 39:13>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<47:86> [ <47:86 47:86>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<47:86> [ <54:5 54:5>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<48:97> [ <48:97 48:97>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<48:97> [ <52:9 52:9>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<49:52> [ <49:52 49:52>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<49:52> [ <51:13 51:13>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<57:89> [ <57:89 57:89>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<57:89> [ <69:5 69:5>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<58:65> [ <58:65 58:65>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<58:65> [ <65:9 65:9>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<61:46> [ <61:46 61:46>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<61:46> [ <64:13 64:13>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<72:97> [ <72:97 72:97>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<72:97> [ <94:5 94:5>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<73:54> [ <73:54 73:54>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<73:54> [ <79:9 79:9>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<74:101> [ <74:101 74:101>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<74:101> [ <78:13 78:13>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<75:56> [ <75:56 75:56>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<75:56> [ <77:17 77:17>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<84:88> [ <84:88 84:88>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<84:88> [ <91:9 91:9>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<85:59> [ <85:59 85:59>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<85:59> [ <87:13 87:13>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<87:84> [ <87:84 87:84>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<87:84> [ <90:13 90:13>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<98:96> [ <98:96 98:96>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<98:96> [ <100:5 100:5>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.AbstractMethodLikeDeclarationContext<0> [ <29:51 29:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.AbstractMethodLikeDeclarationContext<0> [ <30:15 30:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.AbstractMethodLikeDeclarationContext<1> [ <29:75 29:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.AbstractMethodLikeDeclarationContext<1> [ <30:28 30:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType<0> [ <47:57 47:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType<0> [ <49:45 49:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType<0> [ <53:39 53:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType<1> [ <47:74 47:83>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType<1> [ <50:85 50:94>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType<1> [ <53:45 53:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType<2> [ <48:59 48:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType<2> [ <49:17 49:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType<2> [ <50:81 50:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod<0> [ <98:20 98:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod<0> [ <99:40 99:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod<1> [ <98:37 98:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod<1> [ <99:46 99:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod<2> [ <98:61 98:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod<3> [ <98:84 98:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod<3> [ <99:69 99:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<0> [ <33:81 33:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<0> [ <36:115 36:118>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<0> [ <43:40 43:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<1> [ <33:98 33:107>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<1> [ <35:84 35:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<1> [ <43:46 43:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<2> [ <34:24 34:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<2> [ <35:73 35:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<4> [ <35:30 35:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<4> [ <36:111 36:112>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<5> [ <36:57 36:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<5> [ <37:17 37:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<5> [ <38:24 38:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<0> [ <57:60 57:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<0> [ <60:68 60:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<0> [ <68:47 68:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<1> [ <57:77 57:86>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<1> [ <59:84 59:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<1> [ <60:74 60:83>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<1> [ <68:53 68:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<2> [ <58:24 58:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<2> [ <59:73 59:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<4> [ <59:30 59:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<4> [ <60:64 60:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<5> [ <60:29 60:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<5> [ <61:17 61:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<5> [ <63:24 63:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<0> [ <72:68 72:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<0> [ <75:49 75:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<0> [ <85:52 85:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<0> [ <87:24 87:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<0> [ <89:25 89:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<0> [ <93:38 93:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<1> [ <72:85 72:94>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<1> [ <76:83 76:92>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<1> [ <86:68 86:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<1> [ <88:64 88:73>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<1> [ <89:83 89:92>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<1> [ <93:44 93:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<2> [ <74:63 74:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<2> [ <75:21 75:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<2> [ <76:79 76:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<4> [ <82:62 82:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<4> [ <84:76 84:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<5> [ <84:64 84:72>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<5> [ <85:17 85:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<5> [ <86:99 86:107>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<5> [ <87:61 87:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<5> [ <88:53 88:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<5> [ <89:40 89:48>]
COMMENT: comment [ <23:1 25:3>]
COMMENT: comment [ <42:9 42:63>]
COMMENT: comment [ <62:17 62:64>]
COMMENT: comment [ <67:9 67:63>]
COMMENT: comment [ <81:9 81:22>]
