FILE: AbstractMethodLikeDeclarationContext.java
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.javaparsermodel.contexts [AbstractMethodLikeDeclarationContext.java <1:9 1:67>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.javaparsermodel
SYMBOL_PACKAGE com.github.javaparser.symbolsolver
SYMBOL_PACKAGE com.github.javaparser
SYMBOL_PACKAGE com.github
SYMBOL_PACKAGE com
REFERENCE_IMPORT AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.ast.Node [AbstractMethodLikeDeclarationContext.java <3:8 3:37>]
SYMBOL_PACKAGE com.github.javaparser.ast
REFERENCE_IMPORT AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.ast.body.Parameter [AbstractMethodLikeDeclarationContext.java <4:8 4:47>]
SYMBOL_PACKAGE com.github.javaparser.ast.body
REFERENCE_IMPORT AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.ast.nodeTypes.NodeWithParameters<N> [AbstractMethodLikeDeclarationContext.java <5:8 5:61>]
SYMBOL_PACKAGE com.github.javaparser.ast.nodeTypes
REFERENCE_IMPORT AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters<N> [AbstractMethodLikeDeclarationContext.java <6:8 6:65>]
SYMBOL_PACKAGE com.github.javaparser.ast.nodeTypes
REFERENCE_IMPORT AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [AbstractMethodLikeDeclarationContext.java <7:8 7:74>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.javaparsermodel
REFERENCE_IMPORT AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [AbstractMethodLikeDeclarationContext.java <8:8 8:75>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.javaparsermodel
REFERENCE_IMPORT AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter [AbstractMethodLikeDeclarationContext.java <9:8 9:94>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.javaparsermodel.declarations
REFERENCE_IMPORT AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [AbstractMethodLikeDeclarationContext.java <10:8 10:78>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.model.declarations
REFERENCE_IMPORT AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [AbstractMethodLikeDeclarationContext.java <11:8 11:76>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.model.declarations
REFERENCE_IMPORT AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [AbstractMethodLikeDeclarationContext.java <12:8 12:77>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.model.declarations
REFERENCE_IMPORT AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [AbstractMethodLikeDeclarationContext.java <13:8 13:74>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.model.resolution
REFERENCE_IMPORT AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [AbstractMethodLikeDeclarationContext.java <14:8 14:69>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.model.resolution
REFERENCE_IMPORT AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.model.resolution.Value [AbstractMethodLikeDeclarationContext.java <15:8 15:64>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.model.resolution
REFERENCE_IMPORT AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.model.typesystem.Type [AbstractMethodLikeDeclarationContext.java <16:8 16:63>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.model.typesystem
REFERENCE_IMPORT AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [AbstractMethodLikeDeclarationContext.java <17:8 17:71>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.model.typesystem
REFERENCE_IMPORT AbstractMethodLikeDeclarationContext.java -> com.github.javaparser.symbolsolver.resolution.SymbolDeclarator [AbstractMethodLikeDeclarationContext.java <18:8 18:69>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.resolution
REFERENCE_IMPORT AbstractMethodLikeDeclarationContext.java -> java.util.List<E> [AbstractMethodLikeDeclarationContext.java <20:8 20:21>]
SYMBOL_PACKAGE java.util
REFERENCE_IMPORT AbstractMethodLikeDeclarationContext.java -> java.util.Optional<T> [AbstractMethodLikeDeclarationContext.java <21:8 21:25>]
SYMBOL_PACKAGE java.util
SYMBOL_CLASS public com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T> [AbstractMethodLikeDeclarationContext.java <26:1 <26:23 26:58> 101:1>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<27:115> [AbstractMethodLikeDeclarationContext.java <27:115 27:115>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<27:115> [AbstractMethodLikeDeclarationContext.java <101:1 101:1>]
COMMENT: comment [AbstractMethodLikeDeclarationContext.java <23:1 25:3>]
SYMBOL_TYPE_PARAMETER com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T [AbstractMethodLikeDeclarationContext.java <27:10 27:10>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T -> com.github.javaparser.ast.Node [AbstractMethodLikeDeclarationContext.java <27:20 27:23>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T -> com.github.javaparser.ast.nodeTypes.NodeWithParameters<N> [AbstractMethodLikeDeclarationContext.java <27:27 27:44>]
REFERENCE_TYPE_ARGUMENT com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T [AbstractMethodLikeDeclarationContext.java <27:46 27:46>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T -> com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters<N> [AbstractMethodLikeDeclarationContext.java <27:51 27:72>]
REFERENCE_TYPE_ARGUMENT com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T [AbstractMethodLikeDeclarationContext.java <27:74 27:74>]
REFERENCE_INHERITANCE com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T> -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N> [AbstractMethodLikeDeclarationContext.java <27:86 27:110>]
REFERENCE_TYPE_ARGUMENT com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T> -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T [AbstractMethodLikeDeclarationContext.java <27:112 27:112>]
SYMBOL_METHOD public com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.AbstractMethodLikeDeclarationContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <29:5 <29:12 29:47> 31:5>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_OVERRIDE com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.AbstractMethodLikeDeclarationContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <29:12 29:47>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.AbstractMethodLikeDeclarationContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T [AbstractMethodLikeDeclarationContext.java <29:49 29:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.AbstractMethodLikeDeclarationContext<0> [AbstractMethodLikeDeclarationContext.java <29:51 29:61>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.AbstractMethodLikeDeclarationContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [AbstractMethodLikeDeclarationContext.java <29:64 29:73>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.AbstractMethodLikeDeclarationContext<1> [AbstractMethodLikeDeclarationContext.java <29:75 29:84>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<29:87> [AbstractMethodLikeDeclarationContext.java <29:87 29:87>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<29:87> [AbstractMethodLikeDeclarationContext.java <31:5 31:5>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.AbstractMethodLikeDeclarationContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.T, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <30:9 30:13>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.AbstractMethodLikeDeclarationContext<0> [AbstractMethodLikeDeclarationContext.java <30:15 30:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.AbstractMethodLikeDeclarationContext<1> [AbstractMethodLikeDeclarationContext.java <30:28 30:37>]
SYMBOL_METHOD public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <33:5 <33:62 33:72> 44:5>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_OVERRIDE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <33:62 33:72>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [AbstractMethodLikeDeclarationContext.java <33:18 33:32>]
REFERENCE_TYPE_ARGUMENT com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [AbstractMethodLikeDeclarationContext.java <33:44 33:59>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [AbstractMethodLikeDeclarationContext.java <33:74 33:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<0> [AbstractMethodLikeDeclarationContext.java <33:81 33:84>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [AbstractMethodLikeDeclarationContext.java <33:87 33:96>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<1> [AbstractMethodLikeDeclarationContext.java <33:98 33:107>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<33:110> [AbstractMethodLikeDeclarationContext.java <33:110 33:110>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<33:110> [AbstractMethodLikeDeclarationContext.java <44:5 44:5>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.Parameter [AbstractMethodLikeDeclarationContext.java <34:14 34:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<2> [AbstractMethodLikeDeclarationContext.java <34:24 34:32>]
SYMBOL_METHOD com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.Parameter> com.github.javaparser.ast.nodeTypes.NodeWithParameters<N>.getParameters()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.Parameter> com.github.javaparser.ast.nodeTypes.NodeWithParameters<N>.getParameters() [AbstractMethodLikeDeclarationContext.java <34:48 34:60>]
SYMBOL_FIELD com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
REFERENCE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [AbstractMethodLikeDeclarationContext.java <34:36 34:46>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<34:65> [AbstractMethodLikeDeclarationContext.java <34:65 34:65>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<34:65> [AbstractMethodLikeDeclarationContext.java <40:9 40:9>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolDeclarator [AbstractMethodLikeDeclarationContext.java <35:13 35:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<4> [AbstractMethodLikeDeclarationContext.java <35:30 35:31>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <35:53 35:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<2> [AbstractMethodLikeDeclarationContext.java <35:73 35:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<1> [AbstractMethodLikeDeclarationContext.java <35:84 35:93>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [AbstractMethodLikeDeclarationContext.java <36:13 36:27>]
REFERENCE_TYPE_ARGUMENT com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [AbstractMethodLikeDeclarationContext.java <36:39 36:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<5> [AbstractMethodLikeDeclarationContext.java <36:57 36:71>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveWith(com.github.javaparser.symbolsolver.resolution.SymbolDeclarator, java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveWith(com.github.javaparser.symbolsolver.resolution.SymbolDeclarator, java.lang.String) [AbstractMethodLikeDeclarationContext.java <36:101 36:109>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<4> [AbstractMethodLikeDeclarationContext.java <36:111 36:112>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<0> [AbstractMethodLikeDeclarationContext.java <36:115 36:118>]
SYMBOL_METHOD boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [AbstractMethodLikeDeclarationContext.java <37:33 37:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<5> [AbstractMethodLikeDeclarationContext.java <37:17 37:31>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<37:45> [AbstractMethodLikeDeclarationContext.java <37:45 37:45>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<37:45> [AbstractMethodLikeDeclarationContext.java <39:13 39:13>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<5> [AbstractMethodLikeDeclarationContext.java <38:24 38:38>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <43:28 43:38>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [AbstractMethodLikeDeclarationContext.java <43:16 43:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<0> [AbstractMethodLikeDeclarationContext.java <43:40 43:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbol<1> [AbstractMethodLikeDeclarationContext.java <43:46 43:55>]
SYMBOL_METHOD public java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <46:5 <47:33 47:48> 54:5>]
SYMBOL_METHOD java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_OVERRIDE java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <47:33 47:48>]
REFERENCE_TYPE_USAGE java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T> [AbstractMethodLikeDeclarationContext.java <47:18 47:25>]
REFERENCE_TYPE_ARGUMENT java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [AbstractMethodLikeDeclarationContext.java <47:27 47:30>]
REFERENCE_TYPE_USAGE java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [AbstractMethodLikeDeclarationContext.java <47:50 47:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType<0> [AbstractMethodLikeDeclarationContext.java <47:57 47:60>]
REFERENCE_TYPE_USAGE java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [AbstractMethodLikeDeclarationContext.java <47:63 47:72>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType<1> [AbstractMethodLikeDeclarationContext.java <47:74 47:83>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<47:86> [AbstractMethodLikeDeclarationContext.java <47:86 47:86>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<47:86> [AbstractMethodLikeDeclarationContext.java <54:5 54:5>]
REFERENCE_TYPE_USAGE java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.type.TypeParameter [AbstractMethodLikeDeclarationContext.java <48:14 48:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType<2> [AbstractMethodLikeDeclarationContext.java <48:59 48:60>]
SYMBOL_METHOD com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.TypeParameter> com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters<N>.getTypeParameters()
REFERENCE_CALL java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.TypeParameter> com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters<N>.getTypeParameters() [AbstractMethodLikeDeclarationContext.java <48:76 48:92>]
SYMBOL_FIELD com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
REFERENCE_USAGE java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [AbstractMethodLikeDeclarationContext.java <48:64 48:74>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<48:97> [AbstractMethodLikeDeclarationContext.java <48:97 48:97>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<48:97> [AbstractMethodLikeDeclarationContext.java <52:9 52:9>]
SYMBOL_METHOD boolean java.lang.String.equals(java.lang.Object)
REFERENCE_CALL java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [AbstractMethodLikeDeclarationContext.java <49:38 49:43>]
SYMBOL_METHOD java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId()
REFERENCE_CALL java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [AbstractMethodLikeDeclarationContext.java <49:30 49:34>]
SYMBOL_METHOD com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.TypeParameter.getName()
REFERENCE_CALL java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.TypeParameter.getName() [AbstractMethodLikeDeclarationContext.java <49:20 49:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType<2> [AbstractMethodLikeDeclarationContext.java <49:17 49:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType<0> [AbstractMethodLikeDeclarationContext.java <49:45 49:48>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<49:52> [AbstractMethodLikeDeclarationContext.java <49:52 49:52>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<49:52> [AbstractMethodLikeDeclarationContext.java <51:13 51:13>]
SYMBOL_METHOD static java.util.Optional<T> java.util.Optional<T>.of<T>(T)
REFERENCE_CALL java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.util.Optional<T> java.util.Optional<T>.of<T>(T) [AbstractMethodLikeDeclarationContext.java <50:33 50:34>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.TypeVariable(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration)
REFERENCE_CALL java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.TypeVariable(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration) [AbstractMethodLikeDeclarationContext.java <50:40 50:51>]
REFERENCE_TYPE_USAGE java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [AbstractMethodLikeDeclarationContext.java <50:40 50:51>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <50:57 50:79>]
REFERENCE_TYPE_USAGE java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter [AbstractMethodLikeDeclarationContext.java <50:57 50:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType<2> [AbstractMethodLikeDeclarationContext.java <50:81 50:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType<1> [AbstractMethodLikeDeclarationContext.java <50:85 50:94>]
SYMBOL_METHOD java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <53:22 53:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType<0> [AbstractMethodLikeDeclarationContext.java <53:39 53:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveGenericType<1> [AbstractMethodLikeDeclarationContext.java <53:45 53:54>]
SYMBOL_METHOD public java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <56:5 <57:34 57:51> 69:5>]
SYMBOL_METHOD java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_OVERRIDE java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <57:34 57:51>]
REFERENCE_TYPE_USAGE java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T> [AbstractMethodLikeDeclarationContext.java <57:18 57:25>]
REFERENCE_TYPE_ARGUMENT java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.Value [AbstractMethodLikeDeclarationContext.java <57:27 57:31>]
REFERENCE_TYPE_USAGE java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [AbstractMethodLikeDeclarationContext.java <57:53 57:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<0> [AbstractMethodLikeDeclarationContext.java <57:60 57:63>]
REFERENCE_TYPE_USAGE java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [AbstractMethodLikeDeclarationContext.java <57:66 57:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<1> [AbstractMethodLikeDeclarationContext.java <57:77 57:86>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<57:89> [AbstractMethodLikeDeclarationContext.java <57:89 57:89>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<57:89> [AbstractMethodLikeDeclarationContext.java <69:5 69:5>]
REFERENCE_TYPE_USAGE java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.Parameter [AbstractMethodLikeDeclarationContext.java <58:14 58:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<2> [AbstractMethodLikeDeclarationContext.java <58:24 58:32>]
SYMBOL_METHOD com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.Parameter> com.github.javaparser.ast.nodeTypes.NodeWithParameters<N>.getParameters()
REFERENCE_CALL java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.Parameter> com.github.javaparser.ast.nodeTypes.NodeWithParameters<N>.getParameters() [AbstractMethodLikeDeclarationContext.java <58:48 58:60>]
SYMBOL_FIELD com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
REFERENCE_USAGE java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [AbstractMethodLikeDeclarationContext.java <58:36 58:46>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<58:65> [AbstractMethodLikeDeclarationContext.java <58:65 58:65>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<58:65> [AbstractMethodLikeDeclarationContext.java <65:9 65:9>]
REFERENCE_TYPE_USAGE java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolDeclarator [AbstractMethodLikeDeclarationContext.java <59:13 59:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<4> [AbstractMethodLikeDeclarationContext.java <59:30 59:31>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <59:53 59:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<2> [AbstractMethodLikeDeclarationContext.java <59:73 59:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<1> [AbstractMethodLikeDeclarationContext.java <59:84 59:93>]
REFERENCE_TYPE_USAGE java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T> [AbstractMethodLikeDeclarationContext.java <60:13 60:20>]
REFERENCE_TYPE_ARGUMENT java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.Value [AbstractMethodLikeDeclarationContext.java <60:22 60:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<5> [AbstractMethodLikeDeclarationContext.java <60:29 60:43>]
SYMBOL_METHOD java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveWithAsValue(com.github.javaparser.symbolsolver.resolution.SymbolDeclarator, java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveWithAsValue(com.github.javaparser.symbolsolver.resolution.SymbolDeclarator, java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <60:47 60:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<4> [AbstractMethodLikeDeclarationContext.java <60:64 60:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<0> [AbstractMethodLikeDeclarationContext.java <60:68 60:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<1> [AbstractMethodLikeDeclarationContext.java <60:74 60:83>]
SYMBOL_METHOD boolean java.util.Optional<T>.isPresent()
REFERENCE_CALL java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.Optional<T>.isPresent() [AbstractMethodLikeDeclarationContext.java <61:33 61:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<5> [AbstractMethodLikeDeclarationContext.java <61:17 61:31>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<61:46> [AbstractMethodLikeDeclarationContext.java <61:46 61:46>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<61:46> [AbstractMethodLikeDeclarationContext.java <64:13 64:13>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<5> [AbstractMethodLikeDeclarationContext.java <63:24 63:38>]
SYMBOL_METHOD java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <68:28 68:45>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent()
REFERENCE_CALL java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [AbstractMethodLikeDeclarationContext.java <68:16 68:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<0> [AbstractMethodLikeDeclarationContext.java <68:47 68:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveSymbolAsValue<1> [AbstractMethodLikeDeclarationContext.java <68:53 68:62>]
SYMBOL_METHOD public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <71:5 <72:51 72:59> 94:5>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_OVERRIDE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <72:51 72:59>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [AbstractMethodLikeDeclarationContext.java <72:18 72:32>]
REFERENCE_TYPE_ARGUMENT com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [AbstractMethodLikeDeclarationContext.java <72:34 72:48>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [AbstractMethodLikeDeclarationContext.java <72:61 72:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<0> [AbstractMethodLikeDeclarationContext.java <72:68 72:71>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [AbstractMethodLikeDeclarationContext.java <72:74 72:83>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<1> [AbstractMethodLikeDeclarationContext.java <72:85 72:94>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<72:97> [AbstractMethodLikeDeclarationContext.java <72:97 72:97>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<72:97> [AbstractMethodLikeDeclarationContext.java <94:5 94:5>]
SYMBOL_METHOD com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.TypeParameter> com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters<N>.getTypeParameters()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.TypeParameter> com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters<N>.getTypeParameters() [AbstractMethodLikeDeclarationContext.java <73:25 73:41>]
SYMBOL_FIELD com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
REFERENCE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [AbstractMethodLikeDeclarationContext.java <73:13 73:23>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<73:54> [AbstractMethodLikeDeclarationContext.java <73:54 73:54>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<73:54> [AbstractMethodLikeDeclarationContext.java <79:9 79:9>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.type.TypeParameter [AbstractMethodLikeDeclarationContext.java <74:18 74:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<2> [AbstractMethodLikeDeclarationContext.java <74:63 74:64>]
SYMBOL_METHOD com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.TypeParameter> com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters<N>.getTypeParameters()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.TypeParameter> com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters<N>.getTypeParameters() [AbstractMethodLikeDeclarationContext.java <74:80 74:96>]
SYMBOL_FIELD com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
REFERENCE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [AbstractMethodLikeDeclarationContext.java <74:68 74:78>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<74:101> [AbstractMethodLikeDeclarationContext.java <74:101 74:101>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<74:101> [AbstractMethodLikeDeclarationContext.java <78:13 78:13>]
SYMBOL_METHOD boolean java.lang.String.equals(java.lang.Object)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [AbstractMethodLikeDeclarationContext.java <75:42 75:47>]
SYMBOL_METHOD java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [AbstractMethodLikeDeclarationContext.java <75:34 75:38>]
SYMBOL_METHOD com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.TypeParameter.getName()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.TypeParameter.getName() [AbstractMethodLikeDeclarationContext.java <75:24 75:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<2> [AbstractMethodLikeDeclarationContext.java <75:21 75:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<0> [AbstractMethodLikeDeclarationContext.java <75:49 75:52>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<75:56> [AbstractMethodLikeDeclarationContext.java <75:56 75:56>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<75:56> [AbstractMethodLikeDeclarationContext.java <77:17 77:17>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [AbstractMethodLikeDeclarationContext.java <76:44 76:49>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <76:55 76:77>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter [AbstractMethodLikeDeclarationContext.java <76:55 76:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<2> [AbstractMethodLikeDeclarationContext.java <76:79 76:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<1> [AbstractMethodLikeDeclarationContext.java <76:83 76:92>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [AbstractMethodLikeDeclarationContext.java <82:9 82:12>]
REFERENCE_TYPE_ARGUMENT com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.TypeDeclaration<T> [AbstractMethodLikeDeclarationContext.java <82:14 82:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<4> [AbstractMethodLikeDeclarationContext.java <82:62 82:71>]
SYMBOL_METHOD java.util.List<N> com.github.javaparser.ast.Node.getChildNodesByType<N>(java.lang.Class<N>)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<N> com.github.javaparser.ast.Node.getChildNodesByType<N>(java.lang.Class<N>) [AbstractMethodLikeDeclarationContext.java <82:87 82:105>]
SYMBOL_FIELD com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
REFERENCE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [AbstractMethodLikeDeclarationContext.java <82:75 82:85>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.TypeDeclaration<T> [AbstractMethodLikeDeclarationContext.java <83:17 83:62>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.TypeDeclaration<T> [AbstractMethodLikeDeclarationContext.java <84:14 84:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<5> [AbstractMethodLikeDeclarationContext.java <84:64 84:72>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<4> [AbstractMethodLikeDeclarationContext.java <84:76 84:85>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<84:88> [AbstractMethodLikeDeclarationContext.java <84:88 84:88>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<84:88> [AbstractMethodLikeDeclarationContext.java <91:9 91:9>]
SYMBOL_METHOD boolean java.lang.String.equals(java.lang.Object)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [AbstractMethodLikeDeclarationContext.java <85:45 85:50>]
SYMBOL_METHOD java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [AbstractMethodLikeDeclarationContext.java <85:37 85:41>]
SYMBOL_METHOD com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName() [AbstractMethodLikeDeclarationContext.java <85:27 85:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<5> [AbstractMethodLikeDeclarationContext.java <85:17 85:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<0> [AbstractMethodLikeDeclarationContext.java <85:52 85:55>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<85:59> [AbstractMethodLikeDeclarationContext.java <85:59 85:59>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<85:59> [AbstractMethodLikeDeclarationContext.java <87:13 87:13>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [AbstractMethodLikeDeclarationContext.java <86:40 86:45>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.TypeDeclaration<?>)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.TypeDeclaration<?>) [AbstractMethodLikeDeclarationContext.java <86:80 86:97>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <86:64 86:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<1> [AbstractMethodLikeDeclarationContext.java <86:68 86:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<5> [AbstractMethodLikeDeclarationContext.java <86:99 86:107>]
SYMBOL_METHOD boolean java.lang.String.startsWith(java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.startsWith(java.lang.String) [AbstractMethodLikeDeclarationContext.java <87:29 87:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<0> [AbstractMethodLikeDeclarationContext.java <87:24 87:27>]
SYMBOL_METHOD static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object) [AbstractMethodLikeDeclarationContext.java <87:47 87:52>]
SYMBOL_METHOD com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName() [AbstractMethodLikeDeclarationContext.java <87:71 87:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<5> [AbstractMethodLikeDeclarationContext.java <87:61 87:69>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<87:84> [AbstractMethodLikeDeclarationContext.java <87:84 87:84>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<87:84> [AbstractMethodLikeDeclarationContext.java <90:13 90:13>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <88:76 88:84>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <88:42 88:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<5> [AbstractMethodLikeDeclarationContext.java <88:53 88:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<1> [AbstractMethodLikeDeclarationContext.java <88:64 88:73>]
SYMBOL_METHOD java.lang.String java.lang.String.substring(int)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String java.lang.String.substring(int) [AbstractMethodLikeDeclarationContext.java <89:30 89:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<0> [AbstractMethodLikeDeclarationContext.java <89:25 89:28>]
SYMBOL_METHOD int java.lang.String.length()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int java.lang.String.length() [AbstractMethodLikeDeclarationContext.java <89:68 89:73>]
SYMBOL_METHOD java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [AbstractMethodLikeDeclarationContext.java <89:60 89:64>]
SYMBOL_METHOD com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName() [AbstractMethodLikeDeclarationContext.java <89:50 89:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<5> [AbstractMethodLikeDeclarationContext.java <89:40 89:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<1> [AbstractMethodLikeDeclarationContext.java <89:83 89:92>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <93:28 93:36>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [AbstractMethodLikeDeclarationContext.java <93:16 93:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<0> [AbstractMethodLikeDeclarationContext.java <93:38 93:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveType<1> [AbstractMethodLikeDeclarationContext.java <93:44 93:53>]
SYMBOL_METHOD public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <96:5 <97:53 97:63> 100:5>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_OVERRIDE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <97:53 97:63>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [AbstractMethodLikeDeclarationContext.java <97:18 97:32>]
REFERENCE_TYPE_ARGUMENT com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [AbstractMethodLikeDeclarationContext.java <97:34 97:50>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [AbstractMethodLikeDeclarationContext.java <98:13 98:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod<0> [AbstractMethodLikeDeclarationContext.java <98:20 98:23>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [AbstractMethodLikeDeclarationContext.java <98:26 98:29>]
REFERENCE_TYPE_ARGUMENT com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [AbstractMethodLikeDeclarationContext.java <98:31 98:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod<1> [AbstractMethodLikeDeclarationContext.java <98:37 98:50>]
SYMBOL_BUILTIN_TYPE boolean
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [AbstractMethodLikeDeclarationContext.java <98:53 98:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod<2> [AbstractMethodLikeDeclarationContext.java <98:61 98:70>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [AbstractMethodLikeDeclarationContext.java <98:73 98:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod<3> [AbstractMethodLikeDeclarationContext.java <98:84 98:93>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<98:96> [AbstractMethodLikeDeclarationContext.java <98:96 98:96>]
LOCAL_SYMBOL: AbstractMethodLikeDeclarationContext.java<98:96> [AbstractMethodLikeDeclarationContext.java <100:5 100:5>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AbstractMethodLikeDeclarationContext.java <99:28 99:38>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [AbstractMethodLikeDeclarationContext.java <99:16 99:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod<0> [AbstractMethodLikeDeclarationContext.java <99:40 99:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod<1> [AbstractMethodLikeDeclarationContext.java <99:46 99:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractMethodLikeDeclarationContext<T>.solveMethod<3> [AbstractMethodLikeDeclarationContext.java <99:69 99:78>]
COMMENT: comment [AbstractMethodLikeDeclarationContext.java <42:9 42:63>]
COMMENT: comment [AbstractMethodLikeDeclarationContext.java <62:17 62:64>]
COMMENT: comment [AbstractMethodLikeDeclarationContext.java <67:9 67:63>]
COMMENT: comment [AbstractMethodLikeDeclarationContext.java <81:9 81:22>]
