FILE: SymbolReference.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution [ <17:50 17:59>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <17:44 17:48>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <19:43 19:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver [ <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ <19:30 19:41>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ <17:20 17:29>]
QUALIFIER: com.github.javaparser [ <19:19 19:28>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ <17:13 17:18>]
QUALIFIER: com.github [ <19:12 19:17>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ <17:9 17:11>]
QUALIFIER: com [ <19:8 19:10>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <19:49 19:60>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: java.util [ <21:13 21:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [ <21:8 21:11>]
SYMBOL_PACKAGE: java
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <34:9 34:12>]
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <29:1 <29:14 29:28> 80:1>]
SYMBOL_TYPE_PARAMETER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S [ <29:30 29:30>]
SYMBOL_FIELD: private java.util.Optional<? extends S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.correspondingDeclaration [ <31:35 31:58>]
SYMBOL_METHOD: private com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.SymbolReference(java.util.Optional<? extends S>) [ <33:5 <33:5 <33:13 33:27> 33:75> 35:5>]
SYMBOL_METHOD: public static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [ <40:1 <40:1 <40:76 40:81> 40:103> 42:5>]
SYMBOL_TYPE_PARAMETER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>.S [ <40:20 40:20>]
SYMBOL_TYPE_PARAMETER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>.S2 [ <40:43 40:44>]
SYMBOL_METHOD: static java.util.Optional<T> java.util.Optional<T>.of<T>(T)
QUALIFIER: java.util.Optional [ <41:39 41:46>]
QUALIFIER: java.util.Optional [ <48:39 48:46>]
SYMBOL_METHOD: public static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) [ <47:1 <47:1 <47:76 47:83> 47:100> 49:5>]
SYMBOL_TYPE_PARAMETER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>.S [ <47:20 47:20>]
SYMBOL_TYPE_PARAMETER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>.S2 [ <47:43 47:44>]
SYMBOL_PACKAGE: java.lang
SYMBOL_METHOD: static java.util.Optional<T> java.util.Optional<T>.empty<T>()
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.toString() [ <51:5 <51:5 <52:19 52:26> 52:28> 54:5>]
SYMBOL_METHOD: java.lang.String java.lang.Object.toString()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ <59:1 <59:1 <59:14 59:40> 59:42> 64:5>]
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <69:1 <69:1 <69:20 69:27> 69:29> 71:5>]
SYMBOL_METHOD: java.lang.UnsupportedOperationException.UnsupportedOperationException()
SYMBOL_METHOD: java.util.Optional<T>.T java.util.Optional<T>.get()
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: boolean java.util.Optional<T>.isPresent()
SYMBOL_METHOD: public static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>) [ <73:5 <73:5 <73:62 73:66> 73:116> 79:5>]
SYMBOL_TYPE_PARAMETER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>.O [ <73:20 73:20>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <75:20 75:34>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <77:20 77:34>]
REFERENCE_IMPORT: SymbolReference.java -> com.github.javaparser.symbolsolver.model.declarations.Declaration [ <19:62 19:72>]
REFERENCE_IMPORT: SymbolReference.java -> java.util.Optional<T> [ <21:18 21:25>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S -> com.github.javaparser.symbolsolver.model.declarations.Declaration [ <29:40 29:50>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> ? extends S [ <31:22 31:32>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> ? extends S [ <33:38 33:48>]
REFERENCE_TYPE_USAGE: java.util.Optional<? extends S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.correspondingDeclaration -> java.util.Optional<T> [ <31:13 31:20>]
REFERENCE_TYPE_USAGE: java.util.Optional<? extends S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.correspondingDeclaration -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S [ <31:32 31:32>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.SymbolReference(java.util.Optional<? extends S>) -> java.util.Optional<T> [ <33:29 33:36>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.SymbolReference(java.util.Optional<? extends S>) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S [ <33:48 33:48>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.SymbolReference(java.util.Optional<? extends S>) -> java.util.Optional<? extends S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.correspondingDeclaration [ <34:14 34:37>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>.S -> com.github.javaparser.symbolsolver.model.declarations.Declaration [ <40:30 40:40>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>.S2 -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>.S [ <40:54 40:54>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>.S [ <40:73 40:73>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>.S [ <41:36 41:36>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <40:57 40:71>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <41:20 41:34>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>.S [ <40:73 40:73>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>.S [ <41:36 41:36>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>.S2 [ <40:83 40:84>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.SymbolReference(java.util.Optional<? extends S>) [ <41:20 41:37>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) -> static java.util.Optional<T> java.util.Optional<T>.of<T>(T) [ <41:48 41:49>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>.S -> com.github.javaparser.symbolsolver.model.declarations.Declaration [ <47:30 47:40>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>.S2 -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>.S [ <47:54 47:54>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>.S [ <47:73 47:73>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>.S [ <48:36 48:36>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <47:57 47:71>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <48:20 48:34>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>.S [ <47:73 47:73>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>.S [ <48:36 48:36>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>.S [ <48:49 48:49>]
REFERENCE_TYPE_ARGUMENT: java.lang.Class<T> -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>.S2 [ <47:91 47:92>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) -> java.lang.Class<T> [ <47:85 47:89>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>.S2 [ <47:91 47:92>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.SymbolReference(java.util.Optional<? extends S>) [ <48:20 48:37>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) -> static java.util.Optional<T> java.util.Optional<T>.empty<T>() [ <48:51 48:55>]
REFERENCE_TYPE_ARGUMENT: static java.util.Optional<T> java.util.Optional<T>.empty<T>() -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>.S [ <48:49 48:49>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.toString() -> java.lang.String java.lang.Object.toString() [ <52:19 52:26>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.toString() -> java.lang.Override [ <51:6 51:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.toString() -> java.lang.String [ <52:12 52:17>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.toString() -> java.util.Optional<? extends S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.correspondingDeclaration [ <53:37 53:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S [ <59:12 59:12>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <60:14 60:21>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <61:23 61:51>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() -> java.lang.UnsupportedOperationException [ <61:23 61:51>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() -> java.util.Optional<T>.T java.util.Optional<T>.get() [ <63:41 63:43>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() -> java.util.Optional<? extends S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.correspondingDeclaration [ <63:16 63:39>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() -> boolean [ <69:12 69:18>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() -> boolean java.util.Optional<T>.isPresent() [ <70:41 70:49>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() -> java.util.Optional<? extends S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.correspondingDeclaration [ <70:16 70:39>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>.O -> com.github.javaparser.symbolsolver.model.declarations.Declaration [ <73:30 73:40>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>.O [ <73:59 73:59>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <73:43 73:57>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <73:68 73:82>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>.O [ <73:59 73:59>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>.O [ <73:94 73:94>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>.O [ <73:108 73:108>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> ? extends O [ <73:84 73:94>]
REFERENCE_TYPE_ARGUMENT: java.lang.Class<T> -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>.O [ <73:108 73:108>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>) -> java.lang.Class<T> [ <73:102 73:106>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <74:17 74:24>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [ <75:36 75:41>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ <75:47 75:73>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) [ <77:36 77:43>]
LOCAL_SYMBOL: SymbolReference.java<29:53> [ <29:53 29:53>]
LOCAL_SYMBOL: SymbolReference.java<29:53> [ <80:1 80:1>]
LOCAL_SYMBOL: SymbolReference.java<33:77> [ <33:77 33:77>]
LOCAL_SYMBOL: SymbolReference.java<33:77> [ <35:5 35:5>]
LOCAL_SYMBOL: SymbolReference.java<40:105> [ <40:105 40:105>]
LOCAL_SYMBOL: SymbolReference.java<40:105> [ <42:5 42:5>]
LOCAL_SYMBOL: SymbolReference.java<47:102> [ <47:102 47:102>]
LOCAL_SYMBOL: SymbolReference.java<47:102> [ <49:5 49:5>]
LOCAL_SYMBOL: SymbolReference.java<52:30> [ <52:30 52:30>]
LOCAL_SYMBOL: SymbolReference.java<52:30> [ <54:5 54:5>]
LOCAL_SYMBOL: SymbolReference.java<59:44> [ <59:44 59:44>]
LOCAL_SYMBOL: SymbolReference.java<59:44> [ <64:5 64:5>]
LOCAL_SYMBOL: SymbolReference.java<60:26> [ <60:26 60:26>]
LOCAL_SYMBOL: SymbolReference.java<60:26> [ <62:9 62:9>]
LOCAL_SYMBOL: SymbolReference.java<69:31> [ <69:31 69:31>]
LOCAL_SYMBOL: SymbolReference.java<69:31> [ <71:5 71:5>]
LOCAL_SYMBOL: SymbolReference.java<73:118> [ <73:118 73:118>]
LOCAL_SYMBOL: SymbolReference.java<73:118> [ <79:5 79:5>]
LOCAL_SYMBOL: SymbolReference.java<74:29> [ <74:29 74:29>]
LOCAL_SYMBOL: SymbolReference.java<74:29> [ <76:9 76:9>]
LOCAL_SYMBOL: SymbolReference.java<76:16> [ <76:16 76:16>]
LOCAL_SYMBOL: SymbolReference.java<76:16> [ <78:9 78:9>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.SymbolReference<0> [ <33:51 33:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.SymbolReference<0> [ <34:41 34:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O><0> [ <73:97 73:99>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O><0> [ <74:13 74:15>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O><0> [ <75:43 75:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O><1> [ <73:111 73:115>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O><1> [ <77:45 77:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2><0> [ <40:86 40:102>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2><0> [ <41:51 41:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2><0> [ <47:95 47:99>]
COMMENT: comment [ <1:1 15:3>]
COMMENT: comment [ <23:1 28:3>]
COMMENT: comment [ <37:5 39:7>]
COMMENT: comment [ <44:5 46:7>]
COMMENT: comment [ <56:5 58:7>]
COMMENT: comment [ <66:5 68:7>]
