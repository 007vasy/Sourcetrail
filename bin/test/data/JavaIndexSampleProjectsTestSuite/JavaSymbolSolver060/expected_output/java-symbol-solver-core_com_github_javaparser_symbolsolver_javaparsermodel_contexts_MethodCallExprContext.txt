FILE: MethodCallExprContext.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts [ <17:60 17:67>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <17:44 17:58>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <23:43 23:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel
QUALIFIER: com.github.javaparser.symbolsolver [ <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ <22:30 22:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <23:30 23:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <24:30 24:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <25:30 25:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <26:30 26:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <27:30 27:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <28:30 28:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <29:30 29:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <30:30 30:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <31:30 31:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <32:30 32:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <33:30 33:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <34:30 34:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <35:30 35:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <36:30 36:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <37:30 37:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <38:30 38:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <39:30 39:41>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ <17:20 17:29>]
QUALIFIER: com.github.javaparser [ <19:19 19:28>]
QUALIFIER: com.github.javaparser [ <20:19 20:28>]
QUALIFIER: com.github.javaparser [ <21:19 21:28>]
QUALIFIER: com.github.javaparser [ <22:19 22:28>]
QUALIFIER: com.github.javaparser [ <23:19 23:28>]
QUALIFIER: com.github.javaparser [ <24:19 24:28>]
QUALIFIER: com.github.javaparser [ <25:19 25:28>]
QUALIFIER: com.github.javaparser [ <26:19 26:28>]
QUALIFIER: com.github.javaparser [ <27:19 27:28>]
QUALIFIER: com.github.javaparser [ <28:19 28:28>]
QUALIFIER: com.github.javaparser [ <29:19 29:28>]
QUALIFIER: com.github.javaparser [ <30:19 30:28>]
QUALIFIER: com.github.javaparser [ <31:19 31:28>]
QUALIFIER: com.github.javaparser [ <32:19 32:28>]
QUALIFIER: com.github.javaparser [ <33:19 33:28>]
QUALIFIER: com.github.javaparser [ <34:19 34:28>]
QUALIFIER: com.github.javaparser [ <35:19 35:28>]
QUALIFIER: com.github.javaparser [ <36:19 36:28>]
QUALIFIER: com.github.javaparser [ <37:19 37:28>]
QUALIFIER: com.github.javaparser [ <38:19 38:28>]
QUALIFIER: com.github.javaparser [ <39:19 39:28>]
QUALIFIER: com.github.javaparser [ <129:29 129:38>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ <17:13 17:18>]
QUALIFIER: com.github [ <19:12 19:17>]
QUALIFIER: com.github [ <20:12 20:17>]
QUALIFIER: com.github [ <21:12 21:17>]
QUALIFIER: com.github [ <22:12 22:17>]
QUALIFIER: com.github [ <23:12 23:17>]
QUALIFIER: com.github [ <24:12 24:17>]
QUALIFIER: com.github [ <25:12 25:17>]
QUALIFIER: com.github [ <26:12 26:17>]
QUALIFIER: com.github [ <27:12 27:17>]
QUALIFIER: com.github [ <28:12 28:17>]
QUALIFIER: com.github [ <29:12 29:17>]
QUALIFIER: com.github [ <30:12 30:17>]
QUALIFIER: com.github [ <31:12 31:17>]
QUALIFIER: com.github [ <32:12 32:17>]
QUALIFIER: com.github [ <33:12 33:17>]
QUALIFIER: com.github [ <34:12 34:17>]
QUALIFIER: com.github [ <35:12 35:17>]
QUALIFIER: com.github [ <36:12 36:17>]
QUALIFIER: com.github [ <37:12 37:17>]
QUALIFIER: com.github [ <38:12 38:17>]
QUALIFIER: com.github [ <39:12 39:17>]
QUALIFIER: com.github [ <129:22 129:27>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ <17:9 17:11>]
QUALIFIER: com [ <19:8 19:10>]
QUALIFIER: com [ <20:8 20:10>]
QUALIFIER: com [ <21:8 21:10>]
QUALIFIER: com [ <22:8 22:10>]
QUALIFIER: com [ <23:8 23:10>]
QUALIFIER: com [ <24:8 24:10>]
QUALIFIER: com [ <25:8 25:10>]
QUALIFIER: com [ <26:8 26:10>]
QUALIFIER: com [ <27:8 27:10>]
QUALIFIER: com [ <28:8 28:10>]
QUALIFIER: com [ <29:8 29:10>]
QUALIFIER: com [ <30:8 30:10>]
QUALIFIER: com [ <31:8 31:10>]
QUALIFIER: com [ <32:8 32:10>]
QUALIFIER: com [ <33:8 33:10>]
QUALIFIER: com [ <34:8 34:10>]
QUALIFIER: com [ <35:8 35:10>]
QUALIFIER: com [ <36:8 36:10>]
QUALIFIER: com [ <37:8 37:10>]
QUALIFIER: com [ <38:8 38:10>]
QUALIFIER: com [ <39:8 39:10>]
QUALIFIER: com [ <129:18 129:20>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.ast.expr [ <19:34 19:37>]
QUALIFIER: com.github.javaparser.ast.expr [ <20:34 20:37>]
QUALIFIER: com.github.javaparser.ast.expr [ <21:34 21:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.expr
QUALIFIER: com.github.javaparser.ast [ <19:30 19:32>]
QUALIFIER: com.github.javaparser.ast [ <20:30 20:32>]
QUALIFIER: com.github.javaparser.ast [ <21:30 21:32>]
QUALIFIER: com.github.javaparser.ast [ <129:40 129:42>]
SYMBOL_PACKAGE: com.github.javaparser.ast
QUALIFIER: com.github.javaparser.symbolsolver.core.resolution [ <22:48 22:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.core.resolution
QUALIFIER: com.github.javaparser.symbolsolver.core [ <22:43 22:46>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.core
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ <65:32 65:47>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ <100:32 100:47>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ <130:35 130:50>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ <172:31 172:46>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ <199:32 199:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <24:49 24:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <25:49 25:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <26:49 26:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <27:49 27:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <28:49 28:60>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [ <24:43 24:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <25:43 25:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <26:43 26:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <27:43 27:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <28:43 28:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <29:43 29:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <30:43 30:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <31:43 31:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <32:43 32:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <33:43 33:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <34:43 34:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <35:43 35:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <36:43 36:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <37:43 37:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <186:22 186:45>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <423:14 423:37>]
QUALIFIER: com.github.javaparser.symbolsolver.model.methods [ <29:49 29:55>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.methods
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <30:49 30:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <31:49 31:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <32:49 32:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <33:49 33:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <35:49 35:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <36:49 36:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <37:49 37:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel [ <38:43 38:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.reflectionmodel
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ <87:60 87:80>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ <166:28 166:48>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ <178:28 178:48>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ <180:28 180:48>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ <184:24 184:44>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ <187:62 187:82>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ <194:24 194:44>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ <196:24 196:44>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ <200:20 200:40>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ <355:40 355:60>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution [ <39:43 39:52>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.resolution
QUALIFIER: javaslang [ <40:8 40:16>]
SYMBOL_PACKAGE: javaslang
QUALIFIER: java.util [ <42:13 42:16>]
QUALIFIER: java.util [ <43:13 43:16>]
QUALIFIER: java.util [ <44:13 44:16>]
QUALIFIER: java.util [ <45:13 45:16>]
QUALIFIER: java.util [ <46:13 46:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [ <42:8 42:11>]
QUALIFIER: java [ <43:8 43:11>]
QUALIFIER: java [ <44:8 44:11>]
QUALIFIER: java [ <45:8 45:11>]
QUALIFIER: java [ <46:8 46:11>]
SYMBOL_PACKAGE: java
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext [ <163:68 163:71>]
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext [ <48:1 <48:14 48:34> 476:1>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.MethodCallExprContext(com.github.javaparser.ast.expr.MethodCallExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <54:5 <54:5 <54:12 54:32> 54:83> 56:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <62:5 <62:5 <63:27 63:42> 63:78> 71:5>]
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_PACKAGE: java.lang
QUALIFIER: java.lang.String [ <174:44 174:49>]
QUALIFIER: java.lang.String [ <361:25 361:30>]
SYMBOL_METHOD: boolean java.util.Optional<T>.isPresent()
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.ast.expr.Expression> com.github.javaparser.ast.expr.MethodCallExpr.getScope()
SYMBOL_FIELD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.util.Optional<T>.T java.util.Optional<T>.get()
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getGenericParameterByName(java.lang.String)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType()
SYMBOL_METHOD: static java.util.Optional<T> java.util.Optional<T>.empty<T>()
QUALIFIER: java.util.Optional [ <69:20 69:27>]
QUALIFIER: java.util.Optional [ <92:32 92:39>]
QUALIFIER: java.util.Optional [ <257:20 257:27>]
QUALIFIER: java.util.Optional [ <429:16 429:23>]
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.toString() [ <73:5 <73:5 <74:19 74:26> 74:28> 76:5>]
SYMBOL_METHOD: java.lang.String java.lang.Object.toString()
SYMBOL_METHOD: public java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <78:5 <78:5 <79:34 79:51> 79:114> 124:5>]
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId()
SYMBOL_METHOD: com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.expr.NameExpr.getName()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.methods.MethodUsage.MethodUsage(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration)
SYMBOL_METHOD: private com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) [ <126:5 <126:5 <126:25 126:67> 126:115> 142:5>]
SYMBOL_METHOD: private com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <340:5 <340:5 <340:25 340:51> 340:105> 387:5>]
SYMBOL_METHOD: static java.util.Optional<T> java.util.Optional<T>.of<T>(T)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.UnsolvedSymbolException.UnsolvedSymbolException(java.lang.String, java.lang.String)
SYMBOL_METHOD: java.util.HashMap<K, V>.HashMap()
SYMBOL_BUILTIN_TYPE: int
SYMBOL_METHOD: int java.util.List<E>.size()
SYMBOL_METHOD: java.util.List<E>.E java.util.List<E>.get(int)
SYMBOL_METHOD: private com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <457:5 <457:5 <457:18 457:45> 457:119> 468:5>]
SYMBOL_METHOD: java.util.List<E>.E java.util.List<E>.set(int, java.util.List<E>.E)
SYMBOL_METHOD: private com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.applyInferredTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <470:5 <470:5 <470:18 470:35> 470:97> 475:5>]
SYMBOL_METHOD: private java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) [ <432:5 <432:5 <432:35 432:52> 432:153> 455:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.core.resolution.Context.getParent()
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.Type>> com.github.javaparser.ast.expr.MethodCallExpr.getTypeArguments()
SYMBOL_METHOD: java.util.ArrayList<E>.ArrayList()
QUALIFIER: com.github.javaparser.ast.type [ <129:44 129:47>]
SYMBOL_METHOD: boolean java.util.List<E>.add(java.util.List<E>.E)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type)
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration com.github.javaparser.symbolsolver.model.methods.MethodUsage.getDeclaration()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.model.methods.MethodUsage.replaceTypeParameter(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <144:5 <144:5 <145:56 145:66> 145:102> 147:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <149:5 <149:5 <150:28 150:45> 150:81> 153:5>]
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <155:5 <155:5 <156:47 156:57> 156:140> 202:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isType()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.asType()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.lang.RuntimeException.RuntimeException(java.lang.String, java.lang.Throwable)
SYMBOL_METHOD: static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isExtends()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isSuper()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Wildcard.getBoundedType()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable()
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound.getType()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>)
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <192:24 192:38>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isConstraint()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType.getBound()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType com.github.javaparser.symbolsolver.model.typesystem.Type.asConstraintType()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node)
SYMBOL_METHOD: private java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) [ <208:5 <208:5 <208:35 208:52> 210:79> 261:5>]
SYMBOL_METHOD: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ContextHelper.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>)
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ContextHelper [ <211:37 211:49>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeParametersValues()
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.methods.MethodUsage.getParamTypes()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration.getType()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration.isVariadic()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.ArrayType.getComponentType()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ArrayType com.github.javaparser.symbolsolver.model.typesystem.Type.asArrayType()
SYMBOL_METHOD: private void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <263:5 <263:5 <263:18 263:27> 263:99> 338:5>]
QUALIFIER: java.util.Map [ <245:18 245:20>]
SYMBOL_METHOD: java.util.Set<java.util.Map<K, V>.Entry<java.util.Map<K, V>.K, java.util.Map<K, V>.V>> java.util.Map<K, V>.entrySet()
SYMBOL_METHOD: java.util.Map<K, V>.Entry<K, V>.K java.util.Map<K, V>.Entry<K, V>.getKey()
SYMBOL_METHOD: java.util.Map<K, V>.Entry<K, V>.V java.util.Map<K, V>.Entry<K, V>.getValue()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.parametrization.TypeParameterValueProvider.useThisTypeParametersOnTheGivenType(com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.methods.MethodUsage.returnType()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.model.methods.MethodUsage.replaceReturnType(com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.model.methods.MethodUsage.replaceParamType(int, com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_BUILTIN_TYPE: void
SYMBOL_METHOD: boolean java.lang.Object.equals(java.lang.Object)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType()
SYMBOL_METHOD: boolean java.lang.String.equals(java.lang.Object)
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.isRawType()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isBounded()
SYMBOL_METHOD: java.util.Map<K, V>.V java.util.Map<K, V>.put(java.util.Map<K, V>.K, java.util.Map<K, V>.V)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isNull()
SYMBOL_METHOD: java.lang.RuntimeException.RuntimeException(java.lang.String)
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.hasVariadicParameter()
SYMBOL_METHOD: int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getLastParam()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_FIELD: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.typeSolver
SYMBOL_METHOD: java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)
SYMBOL_METHOD: private void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <389:5 <389:5 <389:18 389:36> 389:131> 420:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.methods.MethodUsage.getParamType(int)
SYMBOL_METHOD: java.util.Set<java.util.Map<K, V>.K> java.util.Map<K, V>.keySet()
SYMBOL_METHOD: java.util.Map<K, V>.V java.util.Map<K, V>.get(java.lang.Object)
SYMBOL_METHOD: java.lang.String java.lang.Class<T>.getCanonicalName()
SYMBOL_METHOD: java.lang.Class<?> java.lang.Object.getClass()
SYMBOL_METHOD: private java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.TypeVariable, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) [ <422:5 <422:5 <422:35 422:52> 422:159> 430:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.asTypeParameter()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.util.List<javaslang.Tuple2<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeParametersMap()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.declaredOnType()
SYMBOL_FIELD: javaslang.Tuple2<T1, T2>.T1 javaslang.Tuple2<T1, T2>._1
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getName()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>)
REFERENCE_IMPORT: MethodCallExprContext.java -> com.github.javaparser.ast.expr.Expression [ <19:39 19:48>]
REFERENCE_IMPORT: MethodCallExprContext.java -> com.github.javaparser.ast.expr.MethodCallExpr [ <20:39 20:52>]
REFERENCE_IMPORT: MethodCallExprContext.java -> com.github.javaparser.ast.expr.NameExpr [ <21:39 21:46>]
REFERENCE_IMPORT: MethodCallExprContext.java -> com.github.javaparser.symbolsolver.core.resolution.Context [ <22:59 22:65>]
REFERENCE_IMPORT: MethodCallExprContext.java -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ <23:59 23:74>]
REFERENCE_IMPORT: MethodCallExprContext.java -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <24:62 24:78>]
REFERENCE_IMPORT: MethodCallExprContext.java -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration [ <25:62 25:81>]
REFERENCE_IMPORT: MethodCallExprContext.java -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <26:62 26:76>]
REFERENCE_IMPORT: MethodCallExprContext.java -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <27:62 27:85>]
REFERENCE_IMPORT: MethodCallExprContext.java -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [ <28:62 28:77>]
REFERENCE_IMPORT: MethodCallExprContext.java -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <29:57 29:67>]
REFERENCE_IMPORT: MethodCallExprContext.java -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <30:60 30:74>]
REFERENCE_IMPORT: MethodCallExprContext.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <31:60 31:69>]
REFERENCE_IMPORT: MethodCallExprContext.java -> com.github.javaparser.symbolsolver.model.resolution.UnsolvedSymbolException [ <32:60 32:82>]
REFERENCE_IMPORT: MethodCallExprContext.java -> com.github.javaparser.symbolsolver.model.resolution.Value [ <33:60 33:64>]
REFERENCE_IMPORT: MethodCallExprContext.java -> com.github.javaparser.symbolsolver.model.typesystem [ <34:49 34:58>]
REFERENCE_IMPORT: MethodCallExprContext.java -> com.github.javaparser.symbolsolver.model.typesystem.ArrayType [ <35:60 35:68>]
REFERENCE_IMPORT: MethodCallExprContext.java -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <36:60 36:72>]
REFERENCE_IMPORT: MethodCallExprContext.java -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <37:60 37:63>]
REFERENCE_IMPORT: MethodCallExprContext.java -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [ <38:59 38:84>]
REFERENCE_IMPORT: MethodCallExprContext.java -> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ <39:54 39:74>]
REFERENCE_IMPORT: MethodCallExprContext.java -> javaslang.Tuple2<T1, T2> [ <40:18 40:23>]
REFERENCE_IMPORT: MethodCallExprContext.java -> java.util.ArrayList<E> [ <42:18 42:26>]
REFERENCE_IMPORT: MethodCallExprContext.java -> java.util.HashMap<K, V> [ <43:18 43:24>]
REFERENCE_IMPORT: MethodCallExprContext.java -> java.util.List<E> [ <44:18 44:21>]
REFERENCE_IMPORT: MethodCallExprContext.java -> java.util.Map<K, V> [ <45:18 45:20>]
REFERENCE_IMPORT: MethodCallExprContext.java -> java.util.Optional<T> [ <46:18 46:25>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N> -> com.github.javaparser.ast.expr.MethodCallExpr [ <48:70 48:83>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N> [ <48:44 48:68>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext -> com.github.javaparser.ast.expr.MethodCallExpr [ <48:70 48:83>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.MethodCallExprContext(com.github.javaparser.ast.expr.MethodCallExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <54:12 54:32>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.MethodCallExprContext(com.github.javaparser.ast.expr.MethodCallExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.MethodCallExpr [ <54:34 54:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.MethodCallExprContext(com.github.javaparser.ast.expr.MethodCallExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <54:62 54:71>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.MethodCallExprContext(com.github.javaparser.ast.expr.MethodCallExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <55:9 55:13>]
REFERENCE_OVERRIDE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <63:27 63:42>]
REFERENCE_ANNOTATION_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <62:6 62:13>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <63:21 63:24>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <66:22 66:25>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T> [ <63:12 63:19>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T> [ <66:13 66:20>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <63:21 63:24>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <65:13 65:16>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <66:22 66:25>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <63:44 63:49>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <63:57 63:66>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.Optional<T>.isPresent() [ <64:35 64:43>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.expr.Expression> com.github.javaparser.ast.expr.MethodCallExpr.getScope() [ <64:24 64:31>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.expr.Expression> com.github.javaparser.ast.expr.MethodCallExpr.getScope() [ <65:85 65:92>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <64:12 64:22>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <65:73 65:83>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node) [ <65:65 65:71>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <65:49 65:51>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T>.T java.util.Optional<T>.get() [ <65:96 65:98>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getGenericParameterByName(java.lang.String) [ <66:64 66:88>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [ <66:46 66:60>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.util.Optional<T> java.util.Optional<T>.empty<T>() [ <69:29 69:33>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.toString() -> java.lang.String java.lang.Object.toString() [ <74:19 74:26>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.toString() -> java.lang.Override [ <73:6 73:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.toString() -> java.lang.String [ <74:12 74:17>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.toString() -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <75:51 75:61>]
REFERENCE_OVERRIDE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <79:34 79:51>]
REFERENCE_ANNOTATION_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <78:6 78:13>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <79:21 79:31>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <208:22 208:32>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <211:18 211:28>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <422:22 422:32>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <424:22 424:32>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <432:22 432:32>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T> [ <79:12 79:19>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <79:21 79:31>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <89:25 89:35>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <89:55 89:65>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <79:53 79:58>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <84:17 84:22>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <79:71 79:74>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <128:24 128:27>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <156:77 156:80>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <209:59 209:62>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <340:83 340:86>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <422:89 422:92>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <432:83 432:86>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [ <79:66 79:69>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <79:71 79:74>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <100:13 100:16>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <103:43 103:46>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <107:17 107:20>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <108:17 108:20>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <112:17 112:20>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <79:93 79:102>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.Optional<T>.isPresent() [ <80:36 80:44>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.expr.Expression> com.github.javaparser.ast.expr.MethodCallExpr.getScope() [ <80:25 80:32>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.expr.Expression> com.github.javaparser.ast.expr.MethodCallExpr.getScope() [ <81:44 81:51>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <80:13 80:23>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <81:32 81:42>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.Expression [ <81:13 81:22>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T>.T java.util.Optional<T>.get() [ <81:55 81:57>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.NameExpr [ <83:34 83:41>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.NameExpr [ <84:38 84:45>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [ <84:65 84:69>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.expr.NameExpr.getName() [ <84:55 84:61>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <85:33 85:47>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <163:33 163:47>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <85:17 85:31>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <87:21 87:35>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <85:33 85:47>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <85:56 85:64>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <86:25 86:32>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <88:27 88:34>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <87:37 87:53>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <156:28 156:44>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <187:37 187:53>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <87:37 87:53>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <87:82 87:98>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ <87:104 87:130>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ <89:69 89:95>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ <94:63 94:89>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage.MethodUsage(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) [ <89:55 89:65>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) [ <90:39 90:81>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <91:39 91:65>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.util.Optional<T> java.util.Optional<T>.of<T>(T) [ <92:41 92:42>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.UnsolvedSymbolException.UnsolvedSymbolException(java.lang.String, java.lang.String) [ <94:35 94:57>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.UnsolvedSymbolException [ <94:35 94:57>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String java.lang.Object.toString() [ <94:93 94:100>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node) [ <100:65 100:71>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <100:49 100:51>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <103:17 103:40>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <235:17 235:40>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <263:59 263:82>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <341:13 341:36>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <389:78 389:101>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <457:74 457:97>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <470:52 470:75>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <103:43 103:46>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <235:43 235:46>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <263:85 263:88>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <341:39 341:42>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <389:104 389:107>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <457:100 457:103>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <470:78 470:81>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Map<K, V> [ <103:13 103:15>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <103:17 103:40>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.HashMap<K, V>.HashMap() [ <103:69 103:77>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.HashMap<K, V> [ <103:69 103:75>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int [ <104:18 104:20>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int [ <111:18 111:20>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int java.util.List<E>.size() [ <104:48 104:51>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int java.util.List<E>.size() [ <111:48 111:51>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E>.E java.util.List<E>.get(int) [ <107:60 107:62>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E>.E java.util.List<E>.get(int) [ <112:78 112:80>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <108:44 108:71>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E>.E java.util.List<E>.set(int, java.util.List<E>.E) [ <109:32 109:34>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E>.E java.util.List<E>.set(int, java.util.List<E>.E) [ <113:32 113:34>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.applyInferredTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <112:44 112:61>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) [ <116:20 116:37>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context [ <118:13 118:19>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ <118:37 118:45>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext [ <119:45 119:65>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.core.resolution.Context.getParent() [ <120:47 120:55>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <122:34 122:51>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <126:13 126:23>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <126:92 126:102>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <126:69 126:78>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> boolean java.util.Optional<T>.isPresent() [ <127:44 127:52>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> java.util.Optional<com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.Type>> com.github.javaparser.ast.expr.MethodCallExpr.getTypeArguments() [ <127:25 127:40>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> java.util.Optional<com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.Type>> com.github.javaparser.ast.expr.MethodCallExpr.getTypeArguments() [ <129:71 129:86>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <127:13 127:23>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <129:59 129:69>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> java.util.List<E> [ <128:19 128:22>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> java.util.List<E> [ <133:13 133:16>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <128:24 128:27>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> java.util.ArrayList<E>.ArrayList() [ <128:50 128:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> java.util.ArrayList<E> [ <128:50 128:58>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> com.github.javaparser.ast.type.Type [ <129:49 129:52>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> java.util.Optional<T>.T java.util.Optional<T>.get() [ <129:90 129:92>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> boolean java.util.List<E>.add(java.util.List<E>.E) [ <130:31 130:33>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type) [ <130:68 130:81>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <130:52 130:54>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <133:18 133:41>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <133:18 133:41>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [ <133:88 133:104>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration com.github.javaparser.symbolsolver.model.methods.MethodUsage.getDeclaration() [ <133:71 133:84>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> int java.util.List<E>.size() [ <134:30 134:33>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> int java.util.List<E>.size() [ <134:54 134:57>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> int java.util.List<E>.size() [ <135:50 135:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> int [ <135:22 135:24>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.model.methods.MethodUsage.replaceTypeParameter(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) [ <136:47 136:66>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> java.util.List<E>.E java.util.List<E>.get(int) [ <136:81 136:83>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> java.util.List<E>.E java.util.List<E>.get(int) [ <136:103 136:105>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <145:56 145:66>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <144:6 144:13>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> ? extends ValueDeclaration [ <145:28 145:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <145:12 145:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [ <145:38 145:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <145:68 145:73>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <145:81 145:90>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <146:28 146:38>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ <146:16 146:24>]
REFERENCE_OVERRIDE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <150:28 150:45>]
REFERENCE_ANNOTATION_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <149:6 149:13>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.resolution.Value [ <150:21 150:25>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T> [ <150:12 150:19>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.Value [ <150:21 150:25>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <150:47 150:52>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <150:60 150:69>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context [ <151:9 151:15>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ <151:33 151:41>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <152:30 152:47>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <156:47 156:57>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <155:6 155:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <156:12 156:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <163:17 163:31>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <187:21 187:35>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <156:28 156:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <187:37 187:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <192:49 192:65>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <156:59 156:64>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [ <156:72 156:75>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <156:77 156:80>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <170:13 170:16>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <199:13 199:16>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [ <156:99 156:105>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <156:119 156:128>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.Optional<T>.isPresent() [ <157:36 157:44>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.expr.Expression> com.github.javaparser.ast.expr.MethodCallExpr.getScope() [ <157:25 157:32>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.expr.Expression> com.github.javaparser.ast.expr.MethodCallExpr.getScope() [ <158:44 158:51>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <157:13 157:23>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <158:32 158:42>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <199:81 199:91>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.Expression [ <158:13 158:22>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T>.T java.util.Optional<T>.get() [ <158:55 158:57>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.NameExpr [ <161:34 161:41>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.NameExpr [ <162:17 162:24>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.NameExpr [ <162:41 162:48>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <163:33 163:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <165:21 165:35>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <163:73 163:81>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [ <163:105 163:109>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.expr.NameExpr.getName() [ <163:95 163:101>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <164:37 164:44>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <188:29 188:36>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isType() [ <164:97 164:102>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ <164:67 164:93>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ <165:71 165:97>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.asType() [ <165:101 165:106>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <166:50 166:66>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <178:50 178:66>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <180:50 180:66>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <184:46 184:62>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <187:84 187:100>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <196:46 196:62>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <200:42 200:58>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node) [ <172:64 172:70>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <172:48 172:50>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <199:49 199:51>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Exception [ <173:22 173:30>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.RuntimeException.RuntimeException(java.lang.String, java.lang.Throwable) [ <174:27 174:42>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.RuntimeException [ <174:27 174:42>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object) [ <174:51 174:56>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard() [ <176:29 176:38>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isExtends() [ <177:46 177:54>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [ <177:33 177:42>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [ <177:73 177:82>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [ <178:80 178:89>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isSuper() [ <177:86 177:92>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ <178:128 178:145>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ <187:136 187:153>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ <194:124 194:141>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ <196:94 196:111>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ <200:90 200:107>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [ <178:110 178:124>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [ <187:118 187:132>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [ <194:106 194:120>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [ <196:76 196:90>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [ <200:72 200:86>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Wildcard.getBoundedType() [ <178:93 178:106>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <180:72 180:97>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <184:68 184:93>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [ <180:72 180:97>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [ <184:68 184:93>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Object [ <180:99 180:104>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Object [ <184:95 184:100>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray() [ <182:36 182:42>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [ <185:36 185:49>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound [ <186:47 186:51>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <186:91 186:99>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter() [ <186:73 186:87>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound.getType() [ <187:108 187:114>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) [ <192:40 192:47>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isConstraint() [ <193:36 193:47>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <194:46 194:62>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType.getBound() [ <194:95 194:102>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType com.github.javaparser.symbolsolver.model.typesystem.Type.asConstraintType() [ <194:76 194:91>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node) [ <199:65 199:79>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<T> [ <208:13 208:20>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<T> [ <211:9 211:16>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <208:22 208:32>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <211:18 211:28>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <213:13 213:23>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <208:54 208:66>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.lang.String [ <208:77 208:82>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.List<E> [ <209:54 209:57>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <209:59 209:62>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <235:43 235:46>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <238:17 238:20>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <245:54 245:57>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <249:13 249:16>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <254:17 254:20>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <209:81 209:90>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.core.resolution.Context [ <210:54 210:60>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ContextHelper.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <211:51 211:68>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ <211:78 211:95>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeParametersValues() [ <211:161 211:180>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> boolean java.util.Optional<T>.isPresent() [ <212:17 212:25>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<T>.T java.util.Optional<T>.get() [ <213:43 213:45>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.methods.MethodUsage) [ <215:27 215:69>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Map<K, V> [ <235:13 235:15>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <235:17 235:40>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <245:28 245:51>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.HashMap<K, V>.HashMap() [ <235:69 235:77>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.HashMap<K, V> [ <235:69 235:75>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> int [ <236:18 236:20>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> int [ <253:18 253:20>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> int java.util.List<E>.size() [ <236:61 236:64>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> int java.util.List<E>.size() [ <253:61 253:64>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.methods.MethodUsage.getParamTypes() [ <236:45 236:57>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.methods.MethodUsage.getParamTypes() [ <253:45 253:57>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.methods.MethodUsage.getParamTypes() [ <254:89 254:101>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration [ <237:17 237:36>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int) [ <237:79 237:86>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration com.github.javaparser.symbolsolver.model.methods.MethodUsage.getDeclaration() [ <237:62 237:75>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration.getType() [ <238:48 238:54>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> boolean com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration.isVariadic() [ <239:31 239:40>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.ArrayType.getComponentType() [ <240:62 240:77>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.ArrayType com.github.javaparser.symbolsolver.model.typesystem.Type.asArrayType() [ <240:48 240:58>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <242:17 242:26>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.List<E>.E java.util.List<E>.get(int) [ <242:43 242:45>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.List<E>.E java.util.List<E>.get(int) [ <254:105 254:107>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V>.Entry<K, V> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <245:28 245:51>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V>.Entry<K, V> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <245:54 245:57>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Map<K, V>.Entry<K, V> [ <245:22 245:26>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Set<java.util.Map<K, V>.Entry<java.util.Map<K, V>.K, java.util.Map<K, V>.V>> java.util.Map<K, V>.entrySet() [ <245:82 245:89>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.model.methods.MethodUsage.replaceTypeParameter(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) [ <246:43 246:62>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Map<K, V>.Entry<K, V>.K java.util.Map<K, V>.Entry<K, V>.getKey() [ <246:70 246:75>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Map<K, V>.Entry<K, V>.V java.util.Map<K, V>.Entry<K, V>.getValue() [ <246:86 246:93>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.parametrization.TypeParameterValueProvider.useThisTypeParametersOnTheGivenType(com.github.javaparser.symbolsolver.model.typesystem.Type) [ <249:39 249:73>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.parametrization.TypeParameterValueProvider.useThisTypeParametersOnTheGivenType(com.github.javaparser.symbolsolver.model.typesystem.Type) [ <254:41 254:75>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.methods.MethodUsage.returnType() [ <249:87 249:96>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.methods.MethodUsage.returnType() [ <250:43 250:52>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.model.methods.MethodUsage.replaceReturnType(com.github.javaparser.symbolsolver.model.typesystem.Type) [ <251:43 251:59>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.model.methods.MethodUsage.replaceParamType(int, com.github.javaparser.symbolsolver.model.typesystem.Type) [ <255:43 255:58>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> static java.util.Optional<T> java.util.Optional<T>.of<T>(T) [ <257:29 257:30>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> void [ <263:13 263:16>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <263:29 263:32>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <263:42 263:45>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <263:85 263:88>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V> [ <263:55 263:57>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <263:59 263:82>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean java.lang.Object.equals(java.lang.Object) [ <264:20 264:25>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [ <267:20 267:34>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [ <267:48 267:62>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [ <279:20 279:34>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [ <292:20 292:34>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [ <312:43 312:57>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [ <318:45 318:59>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <268:10 268:22>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <269:10 269:22>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [ <268:47 268:61>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [ <269:47 269:61>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean java.lang.String.equals(java.lang.Object) [ <270:50 270:55>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName() [ <270:31 270:46>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName() [ <270:71 270:86>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.isRawType() [ <271:33 271:41>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.isRawType() [ <271:63 271:71>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int [ <272:23 272:25>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int java.util.List<E>.size() [ <272:75 272:78>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeParametersValues() [ <272:52 272:71>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeParametersValues() [ <273:47 273:66>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeParametersValues() [ <273:92 273:111>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <273:22 273:31>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <281:17 281:26>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <288:17 288:26>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <302:17 302:26>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <314:17 314:26>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <319:13 319:22>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <324:13 324:22>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E>.E java.util.List<E>.get(int) [ <273:70 273:72>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E>.E java.util.List<E>.get(int) [ <273:115 273:117>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard() [ <279:48 279:57>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard() [ <286:20 286:29>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard() [ <286:43 286:52>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard() [ <296:20 296:29>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard() [ <300:40 300:49>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard() [ <312:20 312:29>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isBounded() [ <280:37 280:45>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isBounded() [ <287:37 287:45>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isBounded() [ <287:72 287:80>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isBounded() [ <301:36 301:44>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isBounded() [ <313:37 313:45>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [ <280:24 280:33>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [ <281:43 281:52>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [ <287:24 287:33>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [ <287:59 287:68>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [ <288:35 288:44>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [ <288:73 288:82>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [ <301:23 301:32>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [ <302:43 302:52>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [ <313:24 313:33>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [ <314:35 314:44>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Wildcard.getBoundedType() [ <281:56 281:69>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Wildcard.getBoundedType() [ <288:48 288:61>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Wildcard.getBoundedType() [ <288:86 288:99>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Wildcard.getBoundedType() [ <302:56 302:69>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Wildcard.getBoundedType() [ <314:48 314:61>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [ <292:48 292:61>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [ <296:43 296:56>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [ <307:40 307:53>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [ <323:45 323:58>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [ <327:20 327:33>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [ <327:47 327:60>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V>.V java.util.Map<K, V>.put(java.util.Map<K, V>.K, java.util.Map<K, V>.V) [ <293:22 293:24>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V>.V java.util.Map<K, V>.put(java.util.Map<K, V>.K, java.util.Map<K, V>.V) [ <297:22 297:24>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V>.V java.util.Map<K, V>.put(java.util.Map<K, V>.K, java.util.Map<K, V>.V) [ <308:22 308:24>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V>.V java.util.Map<K, V>.put(java.util.Map<K, V>.K, java.util.Map<K, V>.V) [ <328:22 328:24>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter() [ <293:33 293:47>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter() [ <297:33 297:47>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter() [ <308:33 308:47>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter() [ <328:33 328:47>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray() [ <300:20 300:26>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray() [ <307:20 307:26>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isConstraint() [ <318:20 318:31>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isConstraint() [ <323:20 323:31>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType.getBound() [ <319:50 319:57>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType.getBound() [ <324:50 324:57>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType com.github.javaparser.symbolsolver.model.typesystem.Type.asConstraintType() [ <319:31 319:46>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType com.github.javaparser.symbolsolver.model.typesystem.Type.asConstraintType() [ <324:31 324:46>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive() [ <331:20 331:30>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive() [ <331:44 331:54>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isNull() [ <334:20 334:25>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.RuntimeException.RuntimeException(java.lang.String) [ <337:19 337:34>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.RuntimeException [ <337:19 337:34>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe() [ <337:43 337:50>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe() [ <337:69 337:76>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <340:13 340:23>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <340:53 340:63>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E> [ <340:78 340:81>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <340:83 340:86>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <341:39 341:42>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <346:17 346:20>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <349:17 349:20>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <379:13 379:16>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <380:13 380:16>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V> [ <341:9 341:11>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <341:13 341:36>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <354:26 354:49>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <383:14 383:37>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.HashMap<K, V>.HashMap() [ <341:73 341:81>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.HashMap<K, V> [ <341:73 341:79>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.hasVariadicParameter() [ <343:42 343:61>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.hasVariadicParameter() [ <374:50 374:69>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration com.github.javaparser.symbolsolver.model.methods.MethodUsage.getDeclaration() [ <343:25 343:38>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration com.github.javaparser.symbolsolver.model.methods.MethodUsage.getDeclaration() [ <344:56 344:69>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration com.github.javaparser.symbolsolver.model.methods.MethodUsage.getDeclaration() [ <347:33 347:46>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration com.github.javaparser.symbolsolver.model.methods.MethodUsage.getDeclaration() [ <354:68 354:81>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration com.github.javaparser.symbolsolver.model.methods.MethodUsage.getDeclaration() [ <364:51 364:64>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration com.github.javaparser.symbolsolver.model.methods.MethodUsage.getDeclaration() [ <374:33 374:46>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int java.util.List<E>.size() [ <344:34 344:37>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int java.util.List<E>.size() [ <350:59 350:62>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int java.util.List<E>.size() [ <351:63 351:66>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int java.util.List<E>.size() [ <352:63 352:66>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int java.util.List<E>.size() [ <375:30 375:33>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int java.util.List<E>.size() [ <376:30 376:33>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams() [ <344:73 344:89>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.ArrayType.getComponentType() [ <347:89 347:104>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.ArrayType.getComponentType() [ <351:89 351:104>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ArrayType com.github.javaparser.symbolsolver.model.typesystem.Type.asArrayType() [ <347:75 347:85>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ArrayType com.github.javaparser.symbolsolver.model.typesystem.Type.asArrayType() [ <351:75 351:85>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration.getType() [ <347:65 347:71>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getLastParam() [ <347:50 347:61>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray() [ <350:71 350:77>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E>.E java.util.List<E>.get(int) [ <350:38 350:40>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E>.E java.util.List<E>.get(int) [ <351:42 351:44>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E>.E java.util.List<E>.get(int) [ <352:42 352:44>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E>.E java.util.List<E>.get(int) [ <380:48 380:50>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ <353:35 353:48>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ <358:35 358:48>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [ <354:85 354:101>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <355:62 355:77>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.typeSolver [ <355:97 355:106>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [ <360:31 360:59>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.UnsupportedOperationException [ <360:31 360:59>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object) [ <361:32 361:37>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <368:17 368:35>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <381:13 381:31>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int [ <374:9 374:11>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int [ <378:14 378:16>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.methods.MethodUsage.getParamType(int) [ <379:45 379:56>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Set<java.util.Map<K, V>.K> java.util.Map<K, V>.keySet() [ <383:66 383:71>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.model.methods.MethodUsage.replaceTypeParameter(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) [ <384:39 384:58>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V>.V java.util.Map<K, V>.get(java.lang.Object) [ <384:86 384:88>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> void [ <389:13 389:16>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <389:38 389:41>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <389:57 389:60>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <389:104 389:107>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <407:22 407:25>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V> [ <389:74 389:76>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <389:78 389:101>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [ <390:26 390:39>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [ <391:29 391:42>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [ <391:61 391:75>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [ <403:33 403:47>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [ <392:27 392:55>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [ <397:27 397:55>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [ <418:23 418:51>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.UnsupportedOperationException [ <392:27 392:55>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.UnsupportedOperationException [ <397:27 397:55>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.UnsupportedOperationException [ <418:23 418:51>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String java.lang.Class<T>.getCanonicalName() [ <392:79 392:94>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String java.lang.Class<T>.getCanonicalName() [ <397:79 397:94>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String java.lang.Class<T>.getCanonicalName() [ <418:77 418:92>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.Class<?> java.lang.Object.getClass() [ <392:68 392:75>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.Class<?> java.lang.Object.getClass() [ <397:68 397:75>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.Class<?> java.lang.Object.getClass() [ <418:66 418:73>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V>.V java.util.Map<K, V>.put(java.util.Map<K, V>.K, java.util.Map<K, V>.V) [ <394:35 394:37>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter() [ <394:52 394:66>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray() [ <395:33 395:39>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray() [ <396:29 396:35>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <399:13 399:31>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <408:21 408:39>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.ArrayType.getComponentType() [ <400:48 400:63>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.ArrayType.getComponentType() [ <401:46 401:61>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ArrayType com.github.javaparser.symbolsolver.model.typesystem.Type.asArrayType() [ <400:34 400:44>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ArrayType com.github.javaparser.symbolsolver.model.typesystem.Type.asArrayType() [ <401:32 401:42>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int java.util.List<E>.size() [ <405:69 405:72>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeParametersValues() [ <405:46 405:65>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeParametersValues() [ <407:63 407:82>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeParametersValues() [ <408:74 408:93>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [ <405:28 405:42>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [ <407:45 407:59>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [ <408:56 408:70>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int [ <406:17 406:19>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E>.E java.util.List<E>.get(int) [ <408:97 408:99>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive() [ <413:33 413:43>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard() [ <415:33 415:42>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.TypeVariable, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<T> [ <422:13 422:20>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.TypeVariable, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<T> [ <424:13 424:20>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.TypeVariable, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <422:22 422:32>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.TypeVariable, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <424:22 424:32>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.TypeVariable, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [ <422:54 422:65>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.TypeVariable, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.lang.String [ <422:71 422:76>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.TypeVariable, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.List<E> [ <422:84 422:87>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.TypeVariable, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <422:89 422:92>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.TypeVariable, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <422:111 422:120>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.TypeVariable, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.core.resolution.Context [ <422:134 422:140>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.TypeVariable, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound [ <423:39 423:43>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.TypeVariable, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <423:74 423:82>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.TypeVariable, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.asTypeParameter() [ <423:56 423:70>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.TypeVariable, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) [ <424:49 424:66>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.TypeVariable, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound.getType() [ <424:74 424:80>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.TypeVariable, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> boolean java.util.Optional<T>.isPresent() [ <425:29 425:37>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.TypeVariable, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> static java.util.Optional<T> java.util.Optional<T>.empty<T>() [ <429:25 429:29>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<T> [ <432:13 432:20>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <432:22 432:32>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <432:54 432:57>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <432:83 432:86>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.lang.String [ <432:65 432:70>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.List<E> [ <432:78 432:81>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <432:105 432:114>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.core.resolution.Context [ <432:128 432:134>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <433:29 433:41>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <434:40 434:52>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) [ <434:20 434:37>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) [ <451:20 451:37>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [ <435:36 435:47>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [ <436:40 436:51>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.TypeVariable, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) [ <436:20 436:37>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard [ <437:36 437:43>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard [ <438:13 438:20>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard [ <438:39 438:46>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isSuper() [ <439:31 439:37>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) [ <440:24 440:41>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) [ <448:20 448:37>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Wildcard.getBoundedType() [ <440:57 440:70>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isExtends() [ <441:38 441:46>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [ <442:27 442:55>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [ <444:27 444:55>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [ <453:23 453:51>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.lang.UnsupportedOperationException [ <442:27 442:55>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.lang.UnsupportedOperationException [ <444:27 444:55>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.lang.UnsupportedOperationException [ <453:23 453:51>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType [ <446:36 446:55>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType [ <447:13 447:32>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType [ <447:52 447:71>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType.getBound() [ <448:54 448:61>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.ArrayType [ <449:36 449:44>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <451:43 451:59>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <451:43 451:59>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <451:65 451:90>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [ <451:65 451:90>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.lang.Object [ <451:92 451:97>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.lang.String java.lang.Class<T>.getCanonicalName() [ <453:86 453:101>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.typesystem.Type, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.lang.Class<?> java.lang.Object.getClass() [ <453:75 453:82>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <457:13 457:16>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <457:47 457:50>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <457:59 457:62>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <457:100 457:103>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <459:51 459:54>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V> [ <457:70 457:72>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <457:74 457:97>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <459:25 459:48>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [ <458:18 458:32>]
REFERENCE_TYPE_ARGUMENT: javaslang.Tuple2<T1, T2> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <459:25 459:48>]
REFERENCE_TYPE_ARGUMENT: javaslang.Tuple2<T1, T2> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <459:51 459:54>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> javaslang.Tuple2<T1, T2> [ <459:18 459:23>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<javaslang.Tuple2<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeParametersMap() [ <459:88 459:107>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [ <459:70 459:84>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [ <460:56 460:70>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [ <461:70 461:84>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.declaredOnType() [ <460:30 460:43>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> javaslang.Tuple2<T1, T2>.T1 javaslang.Tuple2<T1, T2>._1 [ <460:27 460:28>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> javaslang.Tuple2<T1, T2>.T1 javaslang.Tuple2<T1, T2>._1 [ <460:106 460:107>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> javaslang.Tuple2<T1, T2>.T1 javaslang.Tuple2<T1, T2>._1 [ <461:60 461:61>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> javaslang.Tuple2<T1, T2>.T1 javaslang.Tuple2<T1, T2>._1 [ <461:120 461:121>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean java.util.Optional<T>.isPresent() [ <460:120 460:128>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getGenericParameterByName(java.lang.String) [ <460:74 460:98>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getGenericParameterByName(java.lang.String) [ <461:88 461:112>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getName() [ <460:109 460:115>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getName() [ <461:123 461:129>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <461:33 461:52>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Optional<T>.T java.util.Optional<T>.get() [ <461:134 461:136>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.applyInferredTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <470:13 470:16>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.applyInferredTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <470:37 470:40>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.applyInferredTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <470:78 470:81>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.applyInferredTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V> [ <470:48 470:50>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.applyInferredTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <470:52 470:75>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.applyInferredTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <471:14 471:37>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.applyInferredTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Set<java.util.Map<K, V>.K> java.util.Map<K, V>.keySet() [ <471:58 471:63>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.applyInferredTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <472:25 472:44>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.applyInferredTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V>.V java.util.Map<K, V>.get(java.lang.Object) [ <472:64 472:66>]
LOCAL_SYMBOL: MethodCallExprContext.java<104:61> [ <104:61 104:61>]
LOCAL_SYMBOL: MethodCallExprContext.java<104:61> [ <110:13 110:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<111:61> [ <111:61 111:61>]
LOCAL_SYMBOL: MethodCallExprContext.java<111:61> [ <114:13 114:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<117:16> [ <117:16 117:16>]
LOCAL_SYMBOL: MethodCallExprContext.java<117:16> [ <123:9 123:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<119:68> [ <119:68 119:68>]
LOCAL_SYMBOL: MethodCallExprContext.java<119:68> [ <121:13 121:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<126:117> [ <126:117 126:117>]
LOCAL_SYMBOL: MethodCallExprContext.java<126:117> [ <142:5 142:5>]
LOCAL_SYMBOL: MethodCallExprContext.java<127:57> [ <127:57 127:57>]
LOCAL_SYMBOL: MethodCallExprContext.java<127:57> [ <139:9 139:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<129:97> [ <129:97 129:97>]
LOCAL_SYMBOL: MethodCallExprContext.java<129:97> [ <131:13 131:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<134:62> [ <134:62 134:62>]
LOCAL_SYMBOL: MethodCallExprContext.java<134:62> [ <138:13 138:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<135:63> [ <135:63 135:63>]
LOCAL_SYMBOL: MethodCallExprContext.java<135:63> [ <137:17 137:17>]
LOCAL_SYMBOL: MethodCallExprContext.java<145:104> [ <145:104 145:104>]
LOCAL_SYMBOL: MethodCallExprContext.java<145:104> [ <147:5 147:5>]
LOCAL_SYMBOL: MethodCallExprContext.java<150:83> [ <150:83 150:83>]
LOCAL_SYMBOL: MethodCallExprContext.java<150:83> [ <153:5 153:5>]
LOCAL_SYMBOL: MethodCallExprContext.java<156:142> [ <156:142 156:142>]
LOCAL_SYMBOL: MethodCallExprContext.java<156:142> [ <202:5 202:5>]
LOCAL_SYMBOL: MethodCallExprContext.java<157:49> [ <157:49 157:49>]
LOCAL_SYMBOL: MethodCallExprContext.java<157:49> [ <198:9 198:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<161:44> [ <161:44 161:44>]
LOCAL_SYMBOL: MethodCallExprContext.java<161:44> [ <168:13 168:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<164:107> [ <164:107 164:107>]
LOCAL_SYMBOL: MethodCallExprContext.java<164:107> [ <167:17 167:17>]
LOCAL_SYMBOL: MethodCallExprContext.java<171:17> [ <171:17 171:17>]
LOCAL_SYMBOL: MethodCallExprContext.java<171:17> [ <173:13 173:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<173:35> [ <173:35 173:35>]
LOCAL_SYMBOL: MethodCallExprContext.java<173:35> [ <175:13 175:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<176:43> [ <176:43 176:43>]
LOCAL_SYMBOL: MethodCallExprContext.java<176:43> [ <182:13 182:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<177:97> [ <177:97 177:97>]
LOCAL_SYMBOL: MethodCallExprContext.java<177:97> [ <179:17 179:17>]
LOCAL_SYMBOL: MethodCallExprContext.java<179:24> [ <179:24 179:24>]
LOCAL_SYMBOL: MethodCallExprContext.java<179:24> [ <181:17 181:17>]
LOCAL_SYMBOL: MethodCallExprContext.java<182:47> [ <182:47 182:47>]
LOCAL_SYMBOL: MethodCallExprContext.java<182:47> [ <185:13 185:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<185:54> [ <185:54 185:54>]
LOCAL_SYMBOL: MethodCallExprContext.java<185:54> [ <193:13 193:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<186:114> [ <186:114 186:114>]
LOCAL_SYMBOL: MethodCallExprContext.java<186:114> [ <191:17 191:17>]
LOCAL_SYMBOL: MethodCallExprContext.java<188:41> [ <188:41 188:41>]
LOCAL_SYMBOL: MethodCallExprContext.java<188:41> [ <190:21 190:21>]
LOCAL_SYMBOL: MethodCallExprContext.java<193:51> [ <193:51 193:51>]
LOCAL_SYMBOL: MethodCallExprContext.java<193:51> [ <195:13 195:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<195:20> [ <195:20 195:20>]
LOCAL_SYMBOL: MethodCallExprContext.java<195:20> [ <197:13 197:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<198:16> [ <198:16 198:16>]
LOCAL_SYMBOL: MethodCallExprContext.java<198:16> [ <201:9 201:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<210:81> [ <210:81 210:81>]
LOCAL_SYMBOL: MethodCallExprContext.java<210:81> [ <261:5 261:5>]
LOCAL_SYMBOL: MethodCallExprContext.java<212:30> [ <212:30 212:30>]
LOCAL_SYMBOL: MethodCallExprContext.java<212:30> [ <258:9 258:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<236:74> [ <236:74 236:74>]
LOCAL_SYMBOL: MethodCallExprContext.java<236:74> [ <243:13 243:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<239:45> [ <239:45 239:45>]
LOCAL_SYMBOL: MethodCallExprContext.java<239:45> [ <241:17 241:17>]
LOCAL_SYMBOL: MethodCallExprContext.java<245:93> [ <245:93 245:93>]
LOCAL_SYMBOL: MethodCallExprContext.java<245:93> [ <247:13 247:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<250:57> [ <250:57 250:57>]
LOCAL_SYMBOL: MethodCallExprContext.java<250:57> [ <252:13 252:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<253:74> [ <253:74 253:74>]
LOCAL_SYMBOL: MethodCallExprContext.java<253:74> [ <256:13 256:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<258:16> [ <258:16 258:16>]
LOCAL_SYMBOL: MethodCallExprContext.java<258:16> [ <260:9 260:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<263:101> [ <263:101 263:101>]
LOCAL_SYMBOL: MethodCallExprContext.java<263:101> [ <338:5 338:5>]
LOCAL_SYMBOL: MethodCallExprContext.java<264:36> [ <264:36 264:36>]
LOCAL_SYMBOL: MethodCallExprContext.java<264:36> [ <266:9 266:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<267:67> [ <267:67 267:67>]
LOCAL_SYMBOL: MethodCallExprContext.java<267:67> [ <278:9 278:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<270:92> [ <270:92 270:92>]
LOCAL_SYMBOL: MethodCallExprContext.java<270:92> [ <276:13 276:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<271:76> [ <271:76 271:76>]
LOCAL_SYMBOL: MethodCallExprContext.java<271:76> [ <275:14 275:14>]
LOCAL_SYMBOL: MethodCallExprContext.java<272:88> [ <272:88 272:88>]
LOCAL_SYMBOL: MethodCallExprContext.java<272:88> [ <274:18 274:18>]
LOCAL_SYMBOL: MethodCallExprContext.java<279:62> [ <279:62 279:62>]
LOCAL_SYMBOL: MethodCallExprContext.java<279:62> [ <285:9 285:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<280:50> [ <280:50 280:50>]
LOCAL_SYMBOL: MethodCallExprContext.java<280:50> [ <283:13 283:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<286:57> [ <286:57 286:57>]
LOCAL_SYMBOL: MethodCallExprContext.java<286:57> [ <291:9 291:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<287:84> [ <287:84 287:84>]
LOCAL_SYMBOL: MethodCallExprContext.java<287:84> [ <289:13 289:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<292:66> [ <292:66 292:66>]
LOCAL_SYMBOL: MethodCallExprContext.java<292:66> [ <295:9 295:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<296:61> [ <296:61 296:61>]
LOCAL_SYMBOL: MethodCallExprContext.java<296:61> [ <299:9 299:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<300:53> [ <300:53 300:53>]
LOCAL_SYMBOL: MethodCallExprContext.java<300:53> [ <306:9 306:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<301:48> [ <301:48 301:48>]
LOCAL_SYMBOL: MethodCallExprContext.java<301:48> [ <304:13 304:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<307:58> [ <307:58 307:58>]
LOCAL_SYMBOL: MethodCallExprContext.java<307:58> [ <310:9 310:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<312:61> [ <312:61 312:61>]
LOCAL_SYMBOL: MethodCallExprContext.java<312:61> [ <317:9 317:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<313:49> [ <313:49 313:49>]
LOCAL_SYMBOL: MethodCallExprContext.java<313:49> [ <315:13 315:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<318:63> [ <318:63 318:63>]
LOCAL_SYMBOL: MethodCallExprContext.java<318:63> [ <321:9 321:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<323:62> [ <323:62 323:62>]
LOCAL_SYMBOL: MethodCallExprContext.java<323:62> [ <326:9 326:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<327:65> [ <327:65 327:65>]
LOCAL_SYMBOL: MethodCallExprContext.java<327:65> [ <330:9 330:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<331:59> [ <331:59 331:59>]
LOCAL_SYMBOL: MethodCallExprContext.java<331:59> [ <333:9 333:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<334:30> [ <334:30 334:30>]
LOCAL_SYMBOL: MethodCallExprContext.java<334:30> [ <336:9 336:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<340:107> [ <340:107 340:107>]
LOCAL_SYMBOL: MethodCallExprContext.java<340:107> [ <387:5 387:5>]
LOCAL_SYMBOL: MethodCallExprContext.java<343:66> [ <343:66 343:66>]
LOCAL_SYMBOL: MethodCallExprContext.java<343:66> [ <372:9 372:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<344:94> [ <344:94 344:94>]
LOCAL_SYMBOL: MethodCallExprContext.java<344:94> [ <369:13 369:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<353:63> [ <353:63 353:63>]
LOCAL_SYMBOL: MethodCallExprContext.java<353:63> [ <357:17 357:17>]
LOCAL_SYMBOL: MethodCallExprContext.java<354:106> [ <354:106 354:106>]
LOCAL_SYMBOL: MethodCallExprContext.java<354:106> [ <356:21 356:21>]
LOCAL_SYMBOL: MethodCallExprContext.java<358:63> [ <358:63 358:63>]
LOCAL_SYMBOL: MethodCallExprContext.java<358:63> [ <366:17 366:17>]
LOCAL_SYMBOL: MethodCallExprContext.java<369:20> [ <369:20 369:20>]
LOCAL_SYMBOL: MethodCallExprContext.java<369:20> [ <371:13 371:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<378:41> [ <378:41 378:41>]
LOCAL_SYMBOL: MethodCallExprContext.java<378:41> [ <382:9 382:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<383:76> [ <383:76 383:76>]
LOCAL_SYMBOL: MethodCallExprContext.java<383:76> [ <385:9 385:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<389:133> [ <389:133 389:133>]
LOCAL_SYMBOL: MethodCallExprContext.java<389:133> [ <420:5 420:5>]
LOCAL_SYMBOL: MethodCallExprContext.java<390:44> [ <390:44 390:44>]
LOCAL_SYMBOL: MethodCallExprContext.java<390:44> [ <395:9 395:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<391:80> [ <391:80 391:80>]
LOCAL_SYMBOL: MethodCallExprContext.java<391:80> [ <393:13 393:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<395:44> [ <395:44 395:44>]
LOCAL_SYMBOL: MethodCallExprContext.java<395:44> [ <403:9 403:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<396:40> [ <396:40 396:40>]
LOCAL_SYMBOL: MethodCallExprContext.java<396:40> [ <398:13 398:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<403:52> [ <403:52 403:52>]
LOCAL_SYMBOL: MethodCallExprContext.java<403:52> [ <413:9 413:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<405:81> [ <405:81 405:81>]
LOCAL_SYMBOL: MethodCallExprContext.java<405:81> [ <411:13 411:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<407:87> [ <407:87 407:87>]
LOCAL_SYMBOL: MethodCallExprContext.java<407:87> [ <410:17 410:17>]
LOCAL_SYMBOL: MethodCallExprContext.java<413:48> [ <413:48 413:48>]
LOCAL_SYMBOL: MethodCallExprContext.java<413:48> [ <415:9 415:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<415:47> [ <415:47 415:47>]
LOCAL_SYMBOL: MethodCallExprContext.java<415:47> [ <417:9 417:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<417:16> [ <417:16 417:16>]
LOCAL_SYMBOL: MethodCallExprContext.java<417:16> [ <419:9 419:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<422:161> [ <422:161 422:161>]
LOCAL_SYMBOL: MethodCallExprContext.java<422:161> [ <430:5 430:5>]
LOCAL_SYMBOL: MethodCallExprContext.java<423:97> [ <423:97 423:97>]
LOCAL_SYMBOL: MethodCallExprContext.java<423:97> [ <428:9 428:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<425:42> [ <425:42 425:42>]
LOCAL_SYMBOL: MethodCallExprContext.java<425:42> [ <427:13 427:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<432:155> [ <432:155 432:155>]
LOCAL_SYMBOL: MethodCallExprContext.java<432:155> [ <455:5 455:5>]
LOCAL_SYMBOL: MethodCallExprContext.java<433:44> [ <433:44 433:44>]
LOCAL_SYMBOL: MethodCallExprContext.java<433:44> [ <435:9 435:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<435:50> [ <435:50 435:50>]
LOCAL_SYMBOL: MethodCallExprContext.java<435:50> [ <437:9 437:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<437:46> [ <437:46 437:46>]
LOCAL_SYMBOL: MethodCallExprContext.java<437:46> [ <446:9 446:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<439:42> [ <439:42 439:42>]
LOCAL_SYMBOL: MethodCallExprContext.java<439:42> [ <441:13 441:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<441:51> [ <441:51 441:51>]
LOCAL_SYMBOL: MethodCallExprContext.java<441:51> [ <443:13 443:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<443:20> [ <443:20 443:20>]
LOCAL_SYMBOL: MethodCallExprContext.java<443:20> [ <445:13 445:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<446:57> [ <446:57 446:57>]
LOCAL_SYMBOL: MethodCallExprContext.java<446:57> [ <449:9 449:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<449:47> [ <449:47 449:47>]
LOCAL_SYMBOL: MethodCallExprContext.java<449:47> [ <452:9 452:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<452:16> [ <452:16 452:16>]
LOCAL_SYMBOL: MethodCallExprContext.java<452:16> [ <454:9 454:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<457:121> [ <457:121 457:121>]
LOCAL_SYMBOL: MethodCallExprContext.java<457:121> [ <468:5 468:5>]
LOCAL_SYMBOL: MethodCallExprContext.java<458:37> [ <458:37 458:37>]
LOCAL_SYMBOL: MethodCallExprContext.java<458:37> [ <465:9 465:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<459:112> [ <459:112 459:112>]
LOCAL_SYMBOL: MethodCallExprContext.java<459:112> [ <463:13 463:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<460:133> [ <460:133 460:133>]
LOCAL_SYMBOL: MethodCallExprContext.java<460:133> [ <462:17 462:17>]
LOCAL_SYMBOL: MethodCallExprContext.java<465:16> [ <465:16 465:16>]
LOCAL_SYMBOL: MethodCallExprContext.java<465:16> [ <467:9 467:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<470:99> [ <470:99 470:99>]
LOCAL_SYMBOL: MethodCallExprContext.java<470:99> [ <475:5 475:5>]
LOCAL_SYMBOL: MethodCallExprContext.java<471:68> [ <471:68 471:68>]
LOCAL_SYMBOL: MethodCallExprContext.java<471:68> [ <473:9 473:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<48:86> [ <48:86 48:86>]
LOCAL_SYMBOL: MethodCallExprContext.java<48:86> [ <476:1 476:1>]
LOCAL_SYMBOL: MethodCallExprContext.java<54:85> [ <54:85 54:85>]
LOCAL_SYMBOL: MethodCallExprContext.java<54:85> [ <56:5 56:5>]
LOCAL_SYMBOL: MethodCallExprContext.java<63:80> [ <63:80 63:80>]
LOCAL_SYMBOL: MethodCallExprContext.java<63:80> [ <71:5 71:5>]
LOCAL_SYMBOL: MethodCallExprContext.java<64:47> [ <64:47 64:47>]
LOCAL_SYMBOL: MethodCallExprContext.java<64:47> [ <68:9 68:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<68:15> [ <68:15 68:15>]
LOCAL_SYMBOL: MethodCallExprContext.java<68:15> [ <70:9 70:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<74:30> [ <74:30 74:30>]
LOCAL_SYMBOL: MethodCallExprContext.java<74:30> [ <76:5 76:5>]
LOCAL_SYMBOL: MethodCallExprContext.java<79:116> [ <79:116 79:116>]
LOCAL_SYMBOL: MethodCallExprContext.java<79:116> [ <124:5 124:5>]
LOCAL_SYMBOL: MethodCallExprContext.java<80:49> [ <80:49 80:49>]
LOCAL_SYMBOL: MethodCallExprContext.java<80:49> [ <117:9 117:9>]
LOCAL_SYMBOL: MethodCallExprContext.java<83:44> [ <83:44 83:44>]
LOCAL_SYMBOL: MethodCallExprContext.java<83:44> [ <98:13 98:13>]
LOCAL_SYMBOL: MethodCallExprContext.java<86:37> [ <86:37 86:37>]
LOCAL_SYMBOL: MethodCallExprContext.java<86:37> [ <97:17 97:17>]
LOCAL_SYMBOL: MethodCallExprContext.java<88:39> [ <88:39 88:39>]
LOCAL_SYMBOL: MethodCallExprContext.java<88:39> [ <93:21 93:21>]
LOCAL_SYMBOL: MethodCallExprContext.java<93:28> [ <93:28 93:28>]
LOCAL_SYMBOL: MethodCallExprContext.java<93:28> [ <96:21 96:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.MethodCallExprContext<0> [ <54:49 54:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.MethodCallExprContext<0> [ <55:15 55:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.MethodCallExprContext<1> [ <54:73 54:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.MethodCallExprContext<1> [ <55:28 55:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.applyInferredTypes<0> [ <470:42 470:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.applyInferredTypes<0> [ <472:13 472:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.applyInferredTypes<0> [ <472:20 472:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.applyInferredTypes<0> [ <474:16 474:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.applyInferredTypes<1> [ <470:84 470:96>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.applyInferredTypes<1> [ <471:44 471:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.applyInferredTypes<1> [ <472:50 472:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.applyInferredTypes<1> [ <472:73 472:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.applyInferredTypes<2> [ <471:39 471:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.applyInferredTypes<2> [ <472:46 472:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.applyInferredTypes<2> [ <472:68 472:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <263:34 263:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <264:13 264:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <267:13 267:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <268:40 268:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <279:13 279:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <281:28 281:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <286:13 286:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <287:17 287:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <288:28 288:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <292:13 292:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <293:52 293:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <296:13 296:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <297:52 297:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <300:13 300:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <302:28 302:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <307:13 307:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <308:52 308:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <312:13 312:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <313:17 313:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <314:28 314:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <318:13 318:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <319:24 319:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <323:13 323:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <324:24 324:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <327:13 327:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <328:52 328:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <331:13 331:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <334:13 334:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<0> [ <337:36 337:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <263:47 263:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <264:27 264:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <267:41 267:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <269:40 269:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <279:41 279:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <280:17 280:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <281:36 281:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <286:36 286:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <287:52 287:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <288:66 288:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <292:41 292:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <293:26 293:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <296:36 296:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <297:26 297:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <300:33 300:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <301:16 301:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <302:36 302:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <307:33 307:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <308:26 308:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <312:36 312:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <314:66 314:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <318:38 318:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <319:62 319:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <323:38 323:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <324:62 324:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <327:40 327:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <328:26 328:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <331:37 331:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<1> [ <337:62 337:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<2> [ <263:91 263:98>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<2> [ <273:123 273:130>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<2> [ <281:74 281:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<2> [ <288:104 288:111>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<2> [ <293:13 293:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<2> [ <297:13 297:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<2> [ <302:74 302:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<2> [ <308:13 308:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<2> [ <314:74 314:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<2> [ <319:70 319:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<2> [ <324:70 324:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<2> [ <328:13 328:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<3> [ <268:24 268:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<3> [ <270:17 270:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<3> [ <271:19 271:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<3> [ <272:38 272:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<3> [ <273:33 273:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<4> [ <269:24 269:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<4> [ <270:57 270:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<4> [ <271:49 271:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<4> [ <273:78 273:90>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<5> [ <272:27 272:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<5> [ <272:34 272:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<5> [ <272:83 272:83>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<5> [ <273:74 273:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes<5> [ <273:119 273:119>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<0> [ <389:43 389:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<0> [ <390:13 390:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<0> [ <394:39 394:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<0> [ <395:20 395:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<0> [ <400:21 400:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<0> [ <403:20 403:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<0> [ <407:32 407:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<0> [ <413:20 413:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<0> [ <415:20 415:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<0> [ <418:53 418:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<1> [ <389:62 389:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<1> [ <391:18 391:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<1> [ <391:50 391:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<1> [ <392:57 392:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<1> [ <394:71 394:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<1> [ <396:18 396:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<1> [ <397:57 397:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<1> [ <401:21 401:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<1> [ <405:17 405:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<1> [ <408:45 408:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<2> [ <389:110 389:130>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<2> [ <394:13 394:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<2> [ <402:21 402:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<2> [ <408:105 408:125>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<3> [ <406:21 406:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<3> [ <408:101 408:101>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<3> [ <409:21 409:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<4> [ <407:27 407:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters<4> [ <408:41 408:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<0> [ <340:65 340:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<0> [ <343:13 343:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<0> [ <344:44 344:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<0> [ <347:21 347:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<0> [ <354:56 354:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<0> [ <364:39 364:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<0> [ <365:39 365:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<0> [ <370:24 370:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<0> [ <374:21 374:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<0> [ <379:33 379:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<0> [ <384:13 384:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<0> [ <384:27 384:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<0> [ <386:16 386:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<10> [ <380:18 380:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<10> [ <381:47 381:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<11> [ <383:39 383:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<11> [ <384:60 384:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<11> [ <384:90 384:91>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<1> [ <340:89 340:104>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<1> [ <344:17 344:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<1> [ <350:21 350:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<1> [ <350:42 350:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<1> [ <351:25 351:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<1> [ <351:46 351:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<1> [ <352:25 352:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<1> [ <352:46 352:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<1> [ <375:13 375:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<1> [ <376:13 376:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<1> [ <380:31 380:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<2> [ <341:45 341:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<2> [ <368:63 368:83>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<2> [ <381:59 381:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<2> [ <383:44 383:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<2> [ <384:64 384:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<3> [ <346:22 346:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<3> [ <353:22 353:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<3> [ <355:25 355:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<3> [ <355:79 355:90>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<3> [ <358:22 358:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<3> [ <362:39 362:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<3> [ <368:37 368:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<4> [ <349:22 349:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<4> [ <353:50 353:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<4> [ <358:50 358:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<4> [ <363:39 363:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<4> [ <368:51 368:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<5> [ <354:51 354:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<5> [ <355:93 355:94>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<7> [ <374:13 374:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<7> [ <378:29 378:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<8> [ <378:18 378:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<8> [ <378:25 378:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<8> [ <378:36 378:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<8> [ <379:58 379:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<8> [ <380:52 380:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<9> [ <379:18 379:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParameters<9> [ <381:33 381:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList<0> [ <126:80 126:89>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList<0> [ <130:56 130:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList<1> [ <126:104 126:114>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList<1> [ <133:59 133:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList<1> [ <136:21 136:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList<1> [ <136:35 136:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList<1> [ <141:16 141:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList<2> [ <128:30 128:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList<2> [ <130:17 130:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList<2> [ <134:40 134:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList<2> [ <136:89 136:101>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList<3> [ <129:54 129:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList<3> [ <130:83 130:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList<5> [ <133:44 133:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList<5> [ <134:17 134:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList<5> [ <135:37 135:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList<5> [ <136:68 136:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList<6> [ <135:26 135:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList<6> [ <135:33 135:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList<6> [ <135:58 135:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList<6> [ <136:85 136:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.resolveMethodTypeParametersFromExplicitList<6> [ <136:107 136:107>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType<0> [ <63:51 63:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType<0> [ <66:90 66:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType<1> [ <63:68 63:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType<1> [ <65:53 65:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType<2> [ <65:18 65:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType<2> [ <66:34 66:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType<3> [ <66:28 66:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveGenericType<3> [ <67:20 67:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<0> [ <156:66 156:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<0> [ <166:85 166:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<0> [ <178:150 178:153>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<0> [ <180:126 180:129>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<0> [ <184:122 184:125>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<0> [ <187:158 187:161>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<0> [ <194:146 194:149>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<0> [ <196:116 196:119>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<0> [ <200:112 200:115>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<10> [ <186:53 186:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<10> [ <187:102 187:106>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<12> [ <187:56 187:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<12> [ <188:25 188:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<12> [ <189:32 189:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<13> [ <199:18 199:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<13> [ <200:60 200:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<1> [ <156:83 156:96>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<1> [ <166:91 166:104>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<1> [ <178:156 178:169>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<1> [ <180:132 180:145>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<1> [ <184:128 184:141>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<1> [ <187:164 187:177>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<1> [ <194:152 194:165>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<1> [ <196:122 196:135>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<1> [ <200:118 200:131>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<2> [ <156:107 156:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<3> [ <156:130 156:139>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<3> [ <163:114 163:123>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<3> [ <166:114 166:123>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<3> [ <172:52 172:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<3> [ <178:179 178:188>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<3> [ <180:113 180:122>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<3> [ <180:155 180:164>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<3> [ <184:109 184:118>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<3> [ <184:151 184:160>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<3> [ <186:101 186:110>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<3> [ <187:187 187:196>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<3> [ <194:168 194:177>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<3> [ <196:145 196:154>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<3> [ <199:53 199:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<3> [ <200:141 200:150>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<4> [ <158:24 158:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<4> [ <161:17 161:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<4> [ <162:51 162:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<4> [ <172:72 172:76>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<5> [ <162:26 162:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<5> [ <163:83 163:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<6> [ <163:50 163:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<6> [ <164:21 164:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<6> [ <164:51 164:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<6> [ <165:55 165:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<7> [ <165:37 165:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<7> [ <166:68 166:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<8> [ <170:18 170:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<8> [ <172:17 172:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<8> [ <176:17 176:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<8> [ <177:21 177:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<8> [ <177:61 177:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<8> [ <178:68 178:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<8> [ <182:24 182:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<8> [ <185:24 185:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<8> [ <186:61 186:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<8> [ <193:24 193:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<8> [ <194:64 194:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<8> [ <196:64 196:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<9> [ <173:32 173:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethod<9> [ <174:113 174:113>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<0> [ <79:60 79:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<0> [ <87:135 87:138>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<0> [ <95:46 95:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<0> [ <116:52 116:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<0> [ <122:53 122:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<0> [ <208:68 208:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<0> [ <211:70 211:76>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<0> [ <211:153 211:159>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<0> [ <249:31 249:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<0> [ <254:33 254:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<0> [ <422:67 422:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<0> [ <423:53 423:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<0> [ <432:59 432:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<0> [ <433:13 433:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<0> [ <434:55 434:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<0> [ <435:20 435:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<0> [ <436:54 436:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<0> [ <437:20 437:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<0> [ <438:49 438:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<0> [ <446:20 446:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<0> [ <447:74 447:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<0> [ <449:20 449:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<0> [ <453:70 453:73>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<10> [ <104:22 104:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<10> [ <104:29 104:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<10> [ <104:56 104:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<10> [ <107:64 107:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<10> [ <109:36 109:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<10> [ <238:22 238:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<10> [ <240:18 240:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<10> [ <240:34 240:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<10> [ <242:51 242:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<11> [ <107:22 107:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<11> [ <108:86 108:105>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<11> [ <245:60 245:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<11> [ <246:64 246:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<11> [ <246:80 246:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<12> [ <108:22 108:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<12> [ <109:39 109:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<13> [ <111:22 111:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<13> [ <111:29 111:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<13> [ <111:56 111:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<13> [ <112:82 112:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<13> [ <113:36 113:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<13> [ <249:18 249:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<13> [ <250:17 250:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<13> [ <251:61 251:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<14> [ <112:22 112:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<14> [ <113:39 113:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<14> [ <253:22 253:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<14> [ <253:29 253:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<14> [ <253:69 253:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<14> [ <254:109 254:109>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<14> [ <255:60 255:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<15> [ <118:21 118:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<15> [ <119:20 119:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<15> [ <120:17 120:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<15> [ <120:33 120:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<15> [ <122:20 122:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<15> [ <254:22 254:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<15> [ <255:63 255:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<1> [ <79:77 79:90>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<1> [ <87:141 87:154>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<1> [ <91:80 91:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<1> [ <95:80 95:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<1> [ <104:33 104:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<1> [ <107:45 107:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<1> [ <109:17 109:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<1> [ <111:33 111:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<1> [ <112:63 112:76>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<1> [ <113:17 113:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<1> [ <116:58 116:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<1> [ <122:59 122:72>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<1> [ <208:84 208:87>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<1> [ <211:100 211:103>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<1> [ <422:78 422:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<1> [ <424:85 424:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<1> [ <432:72 432:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<1> [ <434:61 434:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<1> [ <436:60 436:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<1> [ <440:75 440:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<1> [ <448:66 448:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<1> [ <451:132 451:135>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<2> [ <79:104 79:113>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<2> [ <85:77 85:86>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<2> [ <87:157 87:166>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<2> [ <90:83 90:92>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<2> [ <100:53 100:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<2> [ <116:74 116:83>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<2> [ <122:75 122:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<2> [ <209:65 209:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<2> [ <211:106 211:119>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<2> [ <242:28 242:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<2> [ <422:95 422:108>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<2> [ <424:91 424:104>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<2> [ <432:89 432:102>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<2> [ <434:67 434:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<2> [ <436:66 436:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<2> [ <440:81 440:94>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<2> [ <448:72 448:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<2> [ <451:138 451:151>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<3> [ <81:24 81:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<3> [ <83:17 83:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<3> [ <84:48 84:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<3> [ <100:73 100:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<3> [ <209:92 209:101>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<3> [ <211:122 211:131>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<3> [ <215:71 215:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<3> [ <422:122 422:131>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<3> [ <423:84 423:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<3> [ <424:107 424:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<3> [ <432:116 432:125>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<3> [ <434:83 434:92>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<3> [ <436:82 436:91>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<3> [ <440:97 440:106>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<3> [ <448:88 448:97>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<3> [ <451:106 451:115>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<3> [ <451:119 451:128>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<3> [ <451:154 451:163>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<4> [ <84:24 84:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<4> [ <85:66 85:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<4> [ <210:62 210:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<4> [ <211:134 211:150>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<4> [ <422:142 422:158>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<4> [ <424:119 424:135>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<4> [ <432:136 432:152>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<4> [ <434:95 434:111>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<4> [ <436:94 436:110>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<4> [ <440:109 440:125>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<4> [ <448:100 448:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<4> [ <451:166 451:182>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<5> [ <85:50 85:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<5> [ <86:21 86:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<5> [ <87:100 87:102>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<5> [ <94:59 94:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<5> [ <211:31 211:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<5> [ <212:13 212:15>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<5> [ <213:39 213:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<5> [ <259:20 259:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<5> [ <423:45 423:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<5> [ <424:68 424:72>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<5> [ <438:22 438:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<5> [ <439:17 439:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<5> [ <440:43 440:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<5> [ <441:24 441:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<6> [ <87:56 87:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<6> [ <88:25 88:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<6> [ <89:67 89:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<6> [ <213:25 213:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<6> [ <215:13 215:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<6> [ <215:83 215:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<6> [ <236:33 236:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<6> [ <237:50 237:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<6> [ <246:17 246:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<6> [ <246:31 246:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<6> [ <249:75 249:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<6> [ <250:31 250:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<6> [ <251:17 251:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<6> [ <251:31 251:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<6> [ <253:33 253:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<6> [ <254:77 254:87>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<6> [ <255:17 255:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<6> [ <255:31 255:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<6> [ <257:32 257:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<6> [ <447:34 447:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<6> [ <448:39 448:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<7> [ <89:37 89:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<7> [ <90:25 90:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<7> [ <90:95 90:105>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<7> [ <91:25 91:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<7> [ <91:67 91:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<7> [ <92:44 92:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<7> [ <235:49 235:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<7> [ <242:66 242:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<7> [ <245:68 245:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<7> [ <424:35 424:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<7> [ <425:17 425:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<7> [ <426:24 426:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<8> [ <100:18 100:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<8> [ <108:73 108:83>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<8> [ <116:39 116:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<8> [ <236:22 236:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<8> [ <236:29 236:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<8> [ <236:69 236:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<8> [ <237:88 237:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<8> [ <242:47 242:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<9> [ <103:49 103:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<9> [ <108:108 108:120>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<9> [ <112:86 112:98>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<9> [ <237:38 237:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<9> [ <238:38 238:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage<9> [ <239:21 239:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbol<0> [ <145:75 145:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbol<0> [ <146:40 146:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbol<1> [ <145:92 145:101>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbol<1> [ <146:46 146:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue<0> [ <150:54 150:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue<0> [ <152:49 152:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue<1> [ <150:71 150:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue<1> [ <152:55 152:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue<2> [ <151:17 151:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue<2> [ <152:16 152:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope<0> [ <457:52 457:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope<0> [ <460:50 460:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope<0> [ <461:64 461:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope<1> [ <457:64 457:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope<1> [ <458:13 458:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope<1> [ <459:65 459:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope<1> [ <461:21 461:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope<1> [ <461:28 461:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope<1> [ <464:20 464:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope<1> [ <466:20 466:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope<2> [ <457:106 457:118>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope<2> [ <461:141 461:153>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope<3> [ <459:57 459:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope<3> [ <460:21 460:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope<3> [ <460:100 460:104>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope<3> [ <461:54 461:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.usingParameterTypesFromScope<3> [ <461:114 461:118>]
COMMENT: comment [ <1:1 15:3>]
COMMENT: comment [ <50:5 50:7>]
COMMENT: comment [ <51:5 51:20>]
COMMENT: comment [ <52:5 52:7>]
COMMENT: comment [ <58:5 58:7>]
COMMENT: comment [ <59:5 59:22>]
COMMENT: comment [ <60:5 60:7>]
COMMENT: comment [ <82:13 82:43>]
COMMENT: comment [ <101:13 101:94>]
COMMENT: comment [ <105:17 105:70>]
COMMENT: comment [ <106:17 106:126>]
COMMENT: comment [ <160:13 160:38>]
COMMENT: comment [ <183:17 183:58>]
COMMENT: comment [ <204:5 204:7>]
COMMENT: comment [ <205:5 205:23>]
COMMENT: comment [ <206:5 206:7>]
COMMENT: comment [ <217:13 217:115>]
COMMENT: comment [ <218:13 218:41>]
COMMENT: comment [ <219:13 219:52>]
COMMENT: comment [ <220:13 220:108>]
COMMENT: comment [ <221:13 221:59>]
COMMENT: comment [ <222:13 222:14>]
COMMENT: comment [ <223:13 223:66>]
COMMENT: comment [ <224:13 224:14>]
COMMENT: comment [ <225:13 225:45>]
COMMENT: comment [ <226:13 226:14>]
COMMENT: comment [ <227:13 227:59>]
COMMENT: comment [ <228:13 228:14>]
COMMENT: comment [ <229:13 229:71>]
COMMENT: comment [ <230:13 230:63>]
COMMENT: comment [ <231:13 231:69>]
COMMENT: comment [ <232:13 232:107>]
COMMENT: comment [ <233:13 233:35>]
COMMENT: comment [ <345:17 345:79>]
COMMENT: comment [ <348:17 348:77>]
COMMENT: comment [ <359:21 359:54>]
COMMENT: comment [ <367:17 367:46>]
COMMENT: comment [ <404:13 404:68>]
COMMENT: comment [ <414:13 414:28>]
COMMENT: comment [ <416:13 416:28>]
COMMENT: comment [ <450:13 450:81>]
