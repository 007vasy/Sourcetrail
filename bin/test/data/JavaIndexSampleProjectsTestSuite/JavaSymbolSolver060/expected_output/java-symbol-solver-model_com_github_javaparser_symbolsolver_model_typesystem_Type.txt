FILE: Type.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem [ <17:50 17:59>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <17:44 17:48>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <19:43 19:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver [ <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ <19:30 19:41>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ <17:20 17:29>]
QUALIFIER: com.github.javaparser [ <19:19 19:28>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ <17:13 17:18>]
QUALIFIER: com.github [ <19:12 19:17>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ <17:9 17:11>]
QUALIFIER: com [ <19:8 19:10>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <19:49 19:60>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: java.util [ <21:13 21:16>]
QUALIFIER: java.util [ <22:13 22:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [ <21:8 21:11>]
QUALIFIER: java [ <22:8 22:11>]
SYMBOL_PACKAGE: java
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.Type [ <49:24 49:27>]
SYMBOL_INTERFACE: public com.github.javaparser.symbolsolver.model.typesystem.Type [ <34:1 <34:18 34:21> 168:1>]
SYMBOL_METHOD: default boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray() [ <43:1 <43:1 <43:21 43:27> 43:29> 45:5>]
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: default int com.github.javaparser.symbolsolver.model.typesystem.Type.arrayLevel() [ <47:5 <47:5 <47:17 47:26> 47:28> 53:5>]
SYMBOL_BUILTIN_TYPE: int
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.ArrayType.getComponentType()
SYMBOL_METHOD: default com.github.javaparser.symbolsolver.model.typesystem.ArrayType com.github.javaparser.symbolsolver.model.typesystem.Type.asArrayType() [ <105:5 <105:5 <105:23 105:33> 105:35> 107:5>]
SYMBOL_METHOD: default boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive() [ <58:1 <58:1 <58:21 58:31> 58:33> 60:5>]
SYMBOL_METHOD: default boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isNull() [ <65:1 <65:1 <65:21 65:26> 65:28> 67:5>]
SYMBOL_METHOD: default boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReference() [ <72:1 <72:1 <72:21 72:31> 72:33> 74:5>]
SYMBOL_METHOD: default boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [ <85:1 <85:1 <85:21 85:35> 85:37> 87:5>]
SYMBOL_METHOD: default boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [ <93:5 <93:5 <93:21 93:34> 93:36> 95:5>]
SYMBOL_METHOD: default boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard() [ <97:5 <97:5 <97:21 97:30> 97:32> 99:5>]
SYMBOL_METHOD: default boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isConstraint() [ <79:1 <79:1 <79:21 79:32> 79:34> 79:52>]
SYMBOL_METHOD: default boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isVoid() [ <89:5 <89:5 <89:21 89:26> 89:28> 91:5>]
SYMBOL_METHOD: java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)
SYMBOL_PACKAGE: java.lang
SYMBOL_METHOD: static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object)
QUALIFIER: java.lang.String [ <106:49 106:54>]
QUALIFIER: java.lang.String [ <110:49 110:54>]
QUALIFIER: java.lang.String [ <114:49 114:54>]
QUALIFIER: java.lang.String [ <118:49 118:54>]
QUALIFIER: java.lang.String [ <122:49 122:54>]
QUALIFIER: java.lang.String [ <126:49 126:54>]
QUALIFIER: java.lang.String [ <130:49 130:54>]
SYMBOL_METHOD: default com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [ <109:5 <109:5 <109:27 109:41> 109:43> 111:5>]
SYMBOL_METHOD: default com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter() [ <113:5 <113:5 <113:38 113:52> 113:54> 115:5>]
SYMBOL_METHOD: default com.github.javaparser.symbolsolver.model.typesystem.TypeVariable com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeVariable() [ <117:5 <117:5 <117:26 117:39> 117:41> 119:5>]
SYMBOL_METHOD: default com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.Type.asPrimitive() [ <121:5 <121:5 <121:27 121:37> 121:39> 123:5>]
SYMBOL_METHOD: default com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [ <125:5 <125:5 <125:22 125:31> 125:33> 127:5>]
SYMBOL_METHOD: default com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType com.github.javaparser.symbolsolver.model.typesystem.Type.asConstraintType() [ <129:5 <129:5 <129:34 129:49> 129:51> 131:5>]
SYMBOL_METHOD: default java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe() [ <137:5 <137:5 <137:12 137:19> 137:21> 137:22>]
SYMBOL_METHOD: default com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <148:1 <148:1 <148:18 148:37> 148:132> 150:5>]
SYMBOL_METHOD: default com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) [ <155:1 <155:1 <155:18 155:37> 155:81> 157:5>]
SYMBOL_METHOD: java.util.HashMap<K, V>.HashMap()
SYMBOL_METHOD: default boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ <166:1 <166:1 <166:13 166:26> 166:38> 166:39>]
REFERENCE_IMPORT: Type.java -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <19:62 19:85>]
REFERENCE_IMPORT: Type.java -> java.util.HashMap<K, V> [ <21:18 21:24>]
REFERENCE_IMPORT: Type.java -> java.util.Map<K, V> [ <22:18 22:20>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray() -> boolean [ <43:13 43:19>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.model.typesystem.Type.arrayLevel() -> int [ <47:13 47:15>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.model.typesystem.Type.arrayLevel() -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray() [ <48:13 48:19>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.model.typesystem.Type.arrayLevel() -> int com.github.javaparser.symbolsolver.model.typesystem.Type.arrayLevel() [ <49:62 49:71>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.model.typesystem.Type.arrayLevel() -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.ArrayType.getComponentType() [ <49:43 49:58>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.model.typesystem.Type.arrayLevel() -> com.github.javaparser.symbolsolver.model.typesystem.ArrayType com.github.javaparser.symbolsolver.model.typesystem.Type.asArrayType() [ <49:29 49:39>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive() -> boolean [ <58:13 58:19>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isNull() -> boolean [ <65:13 65:19>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReference() -> boolean [ <72:13 72:19>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReference() -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [ <73:16 73:30>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReference() -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray() [ <73:37 73:43>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReference() -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [ <73:50 73:63>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReference() -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isNull() [ <73:70 73:75>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReference() -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard() [ <73:82 73:91>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isConstraint() -> boolean [ <79:13 79:19>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() -> boolean [ <85:13 85:19>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isVoid() -> boolean [ <89:13 89:19>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() -> boolean [ <93:13 93:19>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard() -> boolean [ <97:13 97:19>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ArrayType com.github.javaparser.symbolsolver.model.typesystem.Type.asArrayType() -> com.github.javaparser.symbolsolver.model.typesystem.ArrayType [ <105:13 105:21>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ArrayType com.github.javaparser.symbolsolver.model.typesystem.Type.asArrayType() -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [ <106:19 106:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ArrayType com.github.javaparser.symbolsolver.model.typesystem.Type.asArrayType() -> java.lang.UnsupportedOperationException [ <106:19 106:47>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ArrayType com.github.javaparser.symbolsolver.model.typesystem.Type.asArrayType() -> static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object) [ <106:56 106:61>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <109:13 109:25>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [ <110:19 110:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() -> java.lang.UnsupportedOperationException [ <110:19 110:47>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() -> static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object) [ <110:56 110:61>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter() -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <113:13 113:36>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter() -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [ <114:19 114:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter() -> java.lang.UnsupportedOperationException [ <114:19 114:47>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter() -> static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object) [ <114:56 114:61>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeVariable() -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [ <117:13 117:24>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeVariable() -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [ <118:19 118:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeVariable() -> java.lang.UnsupportedOperationException [ <118:19 118:47>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeVariable() -> static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object) [ <118:56 118:61>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.Type.asPrimitive() -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [ <121:13 121:25>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.Type.asPrimitive() -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [ <122:19 122:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.Type.asPrimitive() -> java.lang.UnsupportedOperationException [ <122:19 122:47>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.Type.asPrimitive() -> static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object) [ <122:56 122:61>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard [ <125:13 125:20>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [ <126:19 126:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() -> java.lang.UnsupportedOperationException [ <126:19 126:47>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() -> static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object) [ <126:56 126:61>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType com.github.javaparser.symbolsolver.model.typesystem.Type.asConstraintType() -> com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType [ <129:13 129:32>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType com.github.javaparser.symbolsolver.model.typesystem.Type.asConstraintType() -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [ <130:19 130:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType com.github.javaparser.symbolsolver.model.typesystem.Type.asConstraintType() -> java.lang.UnsupportedOperationException [ <130:19 130:47>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType com.github.javaparser.symbolsolver.model.typesystem.Type.asConstraintType() -> static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object) [ <130:56 130:61>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe() -> java.lang.String [ <137:5 137:10>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <148:13 148:16>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <148:68 148:71>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <148:113 148:116>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <148:39 148:62>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <148:87 148:110>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <148:87 148:110>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <148:113 148:116>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V> [ <148:83 148:85>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <155:13 155:16>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <155:68 155:71>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <155:39 155:62>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <156:16 156:35>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.util.HashMap<K, V>.HashMap() [ <156:55 156:63>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.util.HashMap<K, V> [ <156:55 156:61>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean [ <166:5 166:11>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <166:28 166:31>]
LOCAL_SYMBOL: Type.java<105:37> [ <105:37 105:37>]
LOCAL_SYMBOL: Type.java<105:37> [ <107:5 107:5>]
LOCAL_SYMBOL: Type.java<109:45> [ <109:45 109:45>]
LOCAL_SYMBOL: Type.java<109:45> [ <111:5 111:5>]
LOCAL_SYMBOL: Type.java<113:56> [ <113:56 113:56>]
LOCAL_SYMBOL: Type.java<113:56> [ <115:5 115:5>]
LOCAL_SYMBOL: Type.java<117:43> [ <117:43 117:43>]
LOCAL_SYMBOL: Type.java<117:43> [ <119:5 119:5>]
LOCAL_SYMBOL: Type.java<121:41> [ <121:41 121:41>]
LOCAL_SYMBOL: Type.java<121:41> [ <123:5 123:5>]
LOCAL_SYMBOL: Type.java<125:35> [ <125:35 125:35>]
LOCAL_SYMBOL: Type.java<125:35> [ <127:5 127:5>]
LOCAL_SYMBOL: Type.java<129:53> [ <129:53 129:53>]
LOCAL_SYMBOL: Type.java<129:53> [ <131:5 131:5>]
LOCAL_SYMBOL: Type.java<148:134> [ <148:134 148:134>]
LOCAL_SYMBOL: Type.java<148:134> [ <150:5 150:5>]
LOCAL_SYMBOL: Type.java<155:83> [ <155:83 155:83>]
LOCAL_SYMBOL: Type.java<155:83> [ <157:5 157:5>]
LOCAL_SYMBOL: Type.java<34:23> [ <34:23 34:23>]
LOCAL_SYMBOL: Type.java<34:23> [ <168:1 168:1>]
LOCAL_SYMBOL: Type.java<43:31> [ <43:31 43:31>]
LOCAL_SYMBOL: Type.java<43:31> [ <45:5 45:5>]
LOCAL_SYMBOL: Type.java<47:30> [ <47:30 47:30>]
LOCAL_SYMBOL: Type.java<47:30> [ <53:5 53:5>]
LOCAL_SYMBOL: Type.java<48:24> [ <48:24 48:24>]
LOCAL_SYMBOL: Type.java<48:24> [ <50:9 50:9>]
LOCAL_SYMBOL: Type.java<50:16> [ <50:16 50:16>]
LOCAL_SYMBOL: Type.java<50:16> [ <52:9 52:9>]
LOCAL_SYMBOL: Type.java<58:35> [ <58:35 58:35>]
LOCAL_SYMBOL: Type.java<58:35> [ <60:5 60:5>]
LOCAL_SYMBOL: Type.java<65:30> [ <65:30 65:30>]
LOCAL_SYMBOL: Type.java<65:30> [ <67:5 67:5>]
LOCAL_SYMBOL: Type.java<72:35> [ <72:35 72:35>]
LOCAL_SYMBOL: Type.java<72:35> [ <74:5 74:5>]
LOCAL_SYMBOL: Type.java<79:36> [ <79:36 79:36>]
LOCAL_SYMBOL: Type.java<79:36> [ <79:52 79:52>]
LOCAL_SYMBOL: Type.java<85:39> [ <85:39 85:39>]
LOCAL_SYMBOL: Type.java<85:39> [ <87:5 87:5>]
LOCAL_SYMBOL: Type.java<89:30> [ <89:30 89:30>]
LOCAL_SYMBOL: Type.java<89:30> [ <91:5 91:5>]
LOCAL_SYMBOL: Type.java<93:38> [ <93:38 93:38>]
LOCAL_SYMBOL: Type.java<93:38> [ <95:5 95:5>]
LOCAL_SYMBOL: Type.java<97:34> [ <97:34 97:34>]
LOCAL_SYMBOL: Type.java<97:34> [ <99:5 99:5>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy<0> [ <166:33 166:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables<0> [ <148:64 148:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables<0> [ <155:64 155:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables<0> [ <156:37 156:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables<1> [ <148:73 148:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables<1> [ <155:73 155:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables<1> [ <156:41 156:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables<2> [ <148:119 148:131>]
COMMENT: comment [ <1:1 15:3>]
COMMENT: comment [ <24:1 33:3>]
COMMENT: comment [ <36:5 36:7>]
COMMENT: comment [ <37:5 37:33>]
COMMENT: comment [ <38:5 38:7>]
COMMENT: comment [ <40:5 42:7>]
COMMENT: comment [ <55:5 57:7>]
COMMENT: comment [ <62:5 64:7>]
COMMENT: comment [ <69:5 71:7>]
COMMENT: comment [ <76:5 78:7>]
COMMENT: comment [ <81:5 84:7>]
COMMENT: comment [ <101:5 101:7>]
COMMENT: comment [ <102:5 102:19>]
COMMENT: comment [ <103:5 103:7>]
COMMENT: comment [ <133:5 133:7>]
COMMENT: comment [ <134:5 134:14>]
COMMENT: comment [ <135:5 135:7>]
COMMENT: comment [ <139:5 139:7>]
COMMENT: comment [ <140:5 140:22>]
COMMENT: comment [ <141:5 141:7>]
COMMENT: comment [ <143:5 147:7>]
COMMENT: comment [ <152:5 154:7>]
COMMENT: comment [ <159:5 159:7>]
COMMENT: comment [ <160:5 160:21>]
COMMENT: comment [ <161:5 161:7>]
COMMENT: comment [ <163:5 165:7>]
