FILE: JarTypeSolver.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.resolution.typesolvers [ <15:55 15:65>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution [ <15:44 15:53>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.resolution
QUALIFIER: com.github.javaparser.symbolsolver [ <15:31 15:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ <17:30 17:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <18:30 18:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <19:30 19:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <20:30 20:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <21:30 21:41>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ <15:20 15:29>]
QUALIFIER: com.github.javaparser [ <17:19 17:28>]
QUALIFIER: com.github.javaparser [ <18:19 18:28>]
QUALIFIER: com.github.javaparser [ <19:19 19:28>]
QUALIFIER: com.github.javaparser [ <20:19 20:28>]
QUALIFIER: com.github.javaparser [ <21:19 21:28>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ <15:13 15:18>]
QUALIFIER: com.github [ <17:12 17:17>]
QUALIFIER: com.github [ <18:12 18:17>]
QUALIFIER: com.github [ <19:12 19:17>]
QUALIFIER: com.github [ <20:12 20:17>]
QUALIFIER: com.github [ <21:12 21:17>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ <15:9 15:11>]
QUALIFIER: com [ <17:8 17:10>]
QUALIFIER: com [ <18:8 18:10>]
QUALIFIER: com [ <19:8 19:10>]
QUALIFIER: com [ <20:8 20:10>]
QUALIFIER: com [ <21:8 21:10>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.symbolsolver.javassistmodel.JavassistFactory [ <102:25 102:40>]
QUALIFIER: com.github.javaparser.symbolsolver.javassistmodel [ <17:43 17:56>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javassistmodel
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <18:49 18:60>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [ <18:43 18:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <19:43 19:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <20:43 20:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <21:43 21:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <19:49 19:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <20:49 20:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <21:49 21:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: javassist [ <22:8 22:16>]
QUALIFIER: javassist [ <23:8 23:16>]
QUALIFIER: javassist [ <24:8 24:16>]
SYMBOL_PACKAGE: javassist
QUALIFIER: java.io [ <26:13 26:14>]
QUALIFIER: java.io [ <27:13 27:14>]
SYMBOL_PACKAGE: java.io
QUALIFIER: java [ <26:8 26:11>]
QUALIFIER: java [ <27:8 27:11>]
QUALIFIER: java [ <28:8 28:11>]
QUALIFIER: java [ <29:8 29:11>]
QUALIFIER: java [ <30:8 30:11>]
QUALIFIER: java [ <31:8 31:11>]
QUALIFIER: java [ <32:8 32:11>]
SYMBOL_PACKAGE: java
QUALIFIER: java.util [ <28:13 28:16>]
QUALIFIER: java.util [ <29:13 29:16>]
QUALIFIER: java.util [ <30:13 30:16>]
QUALIFIER: java.util [ <31:13 31:16>]
QUALIFIER: java.util [ <32:13 32:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java.util.jar [ <31:18 31:20>]
QUALIFIER: java.util.jar [ <32:18 32:20>]
SYMBOL_PACKAGE: java.util.jar
QUALIFIER: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver [ <84:9 84:12>]
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver [ <37:1 <37:14 37:26> 138:1>]
SYMBOL_FIELD: private static com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.instance [ <39:34 39:41>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.parent [ <41:24 41:29>]
SYMBOL_FIELD: private java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.classpathElements [ <42:43 42:59>]
SYMBOL_PACKAGE: java.lang
QUALIFIER: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement [ <127:13 127:16>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement [ <128:13 128:16>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement [ <129:13 129:16>]
SYMBOL_CLASS: private com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement [ <121:5 <121:19 121:34> 137:5>]
SYMBOL_METHOD: java.util.HashMap<K, V>.HashMap()
SYMBOL_FIELD: private javassist.ClassPool com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.classPool [ <43:23 43:31>]
SYMBOL_METHOD: javassist.ClassPool.ClassPool(boolean)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.JarTypeSolver(java.lang.String) [ <45:5 <45:5 <45:12 45:24> 45:61> 47:5>]
SYMBOL_METHOD: private void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) [ <58:5 <58:5 <58:18 58:29> 58:66> 75:5>]
SYMBOL_METHOD: public static com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.getJarTypeSolver(java.lang.String) [ <49:5 <49:5 <49:33 49:48> 49:85> 56:5>]
SYMBOL_BUILTIN_TYPE: void
SYMBOL_METHOD: javassist.ClassPath javassist.ClassPool.appendClassPath(java.lang.String)
SYMBOL_METHOD: javassist.ClassPath javassist.ClassPool.appendSystemPath()
SYMBOL_METHOD: java.lang.RuntimeException.RuntimeException(java.lang.Throwable)
SYMBOL_METHOD: java.util.jar.JarFile.JarFile(java.lang.String)
SYMBOL_METHOD: java.util.Enumeration<java.util.jar.JarEntry> java.util.jar.JarFile.entries()
SYMBOL_METHOD: boolean java.util.Enumeration<E>.hasMoreElements()
SYMBOL_METHOD: java.util.Enumeration<E>.E java.util.Enumeration<E>.nextElement()
SYMBOL_METHOD: boolean java.util.zip.ZipEntry.isDirectory()
SYMBOL_METHOD: boolean java.lang.String.endsWith(java.lang.String)
SYMBOL_METHOD: java.lang.String java.util.zip.ZipEntry.getName()
SYMBOL_METHOD: private java.lang.String com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.entryPathToClassName(java.lang.String) [ <87:5 <87:5 <87:20 87:39> 87:57> 95:5>]
SYMBOL_METHOD: java.util.Map<K, V>.V java.util.Map<K, V>.put(java.util.Map<K, V>.K, java.util.Map<K, V>.V)
SYMBOL_METHOD: default com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.ClasspathElement(java.util.jar.JarFile, java.util.jar.JarEntry, java.lang.String) [ <126:9 <126:9 <126:9 126:24> 126:70> 130:9>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.getParent() [ <77:5 <77:5 <78:23 78:31> 78:33> 80:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.model.resolution.TypeSolver.getParent()
SYMBOL_METHOD: public void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <82:5 <82:5 <83:17 83:25> 83:44> 85:5>]
SYMBOL_METHOD: void com.github.javaparser.symbolsolver.model.resolution.TypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.lang.IllegalStateException.IllegalStateException()
SYMBOL_METHOD: java.lang.String java.lang.String.substring(int, int)
SYMBOL_METHOD: int java.lang.String.length()
SYMBOL_METHOD: java.lang.String java.lang.String.replace(char, char)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType(java.lang.String) [ <97:5 <97:5 <98:54 98:67> 98:80> 109:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String)
SYMBOL_METHOD: boolean java.util.Map<K, V>.containsKey(java.lang.Object)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2)
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <101:24 101:38>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <104:24 104:38>]
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javassistmodel.JavassistFactory.toTypeDeclaration(javassist.CtClass, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: default javassist.CtClass com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.toCtClass() [ <132:9 <132:9 <132:17 132:25> 132:46> 136:9>]
SYMBOL_METHOD: java.util.Map<K, V>.V java.util.Map<K, V>.get(java.lang.Object)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.model.resolution.TypeSolver.getRoot()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.solveType(java.lang.String) [ <111:5 <111:5 <112:37 112:45> 112:89> 119:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.UnsolvedSymbolException.UnsolvedSymbolException(java.lang.String)
SYMBOL_FIELD: private java.util.jar.JarFile com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.jarFile [ <122:25 122:31>]
SYMBOL_FIELD: private java.util.jar.JarEntry com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.entry [ <123:26 123:30>]
SYMBOL_FIELD: private java.lang.String com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.path [ <124:24 124:27>]
SYMBOL_METHOD: java.io.InputStream java.util.jar.JarFile.getInputStream(java.util.zip.ZipEntry)
SYMBOL_METHOD: javassist.CtClass javassist.ClassPool.makeClass(java.io.InputStream)
REFERENCE_IMPORT: JarTypeSolver.java -> com.github.javaparser.symbolsolver.javassistmodel.JavassistFactory [ <17:58 17:73>]
REFERENCE_IMPORT: JarTypeSolver.java -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <18:62 18:85>]
REFERENCE_IMPORT: JarTypeSolver.java -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <19:60 19:74>]
REFERENCE_IMPORT: JarTypeSolver.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <20:60 20:69>]
REFERENCE_IMPORT: JarTypeSolver.java -> com.github.javaparser.symbolsolver.model.resolution.UnsolvedSymbolException [ <21:60 21:82>]
REFERENCE_IMPORT: JarTypeSolver.java -> javassist.ClassPool [ <22:18 22:26>]
REFERENCE_IMPORT: JarTypeSolver.java -> javassist.CtClass [ <23:18 23:24>]
REFERENCE_IMPORT: JarTypeSolver.java -> javassist.NotFoundException [ <24:18 24:34>]
REFERENCE_IMPORT: JarTypeSolver.java -> java.io.IOException [ <26:16 26:26>]
REFERENCE_IMPORT: JarTypeSolver.java -> java.io.InputStream [ <27:16 27:26>]
REFERENCE_IMPORT: JarTypeSolver.java -> java.util.Enumeration<E> [ <28:18 28:28>]
REFERENCE_IMPORT: JarTypeSolver.java -> java.util.HashMap<K, V> [ <29:18 29:24>]
REFERENCE_IMPORT: JarTypeSolver.java -> java.util.Map<K, V> [ <30:18 30:20>]
REFERENCE_IMPORT: JarTypeSolver.java -> java.util.jar.JarEntry [ <31:22 31:29>]
REFERENCE_IMPORT: JarTypeSolver.java -> java.util.jar.JarFile [ <32:22 32:28>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <37:39 37:48>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.instance -> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver [ <39:20 39:32>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.parent -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <41:13 41:22>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> java.lang.String [ <42:17 42:22>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement [ <42:25 42:40>]
REFERENCE_TYPE_USAGE: java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.classpathElements -> java.util.Map<K, V> [ <42:13 42:15>]
REFERENCE_TYPE_USAGE: java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.classpathElements -> java.lang.String [ <42:17 42:22>]
REFERENCE_TYPE_USAGE: java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.classpathElements -> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement [ <42:25 42:40>]
REFERENCE_CALL: java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.classpathElements -> java.util.HashMap<K, V>.HashMap() [ <42:67 42:75>]
REFERENCE_TYPE_USAGE: java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.classpathElements -> java.util.HashMap<K, V> [ <42:67 42:73>]
REFERENCE_TYPE_USAGE: javassist.ClassPool com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.classPool -> javassist.ClassPool [ <43:13 43:21>]
REFERENCE_TYPE_USAGE: javassist.ClassPool com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.classPool -> javassist.ClassPool [ <43:39 43:47>]
REFERENCE_CALL: javassist.ClassPool com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.classPool -> javassist.ClassPool.ClassPool(boolean) [ <43:39 43:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.JarTypeSolver(java.lang.String) -> java.lang.String [ <45:26 45:31>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.JarTypeSolver(java.lang.String) -> java.io.IOException [ <45:51 45:61>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.JarTypeSolver(java.lang.String) -> void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) [ <46:9 46:20>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.getJarTypeSolver(java.lang.String) -> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver [ <49:19 49:31>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.getJarTypeSolver(java.lang.String) -> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver [ <51:28 51:40>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.getJarTypeSolver(java.lang.String) -> java.lang.String [ <49:50 49:55>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.getJarTypeSolver(java.lang.String) -> java.io.IOException [ <49:75 49:85>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.getJarTypeSolver(java.lang.String) -> static com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.instance [ <50:13 50:20>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.getJarTypeSolver(java.lang.String) -> static com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.instance [ <51:13 51:20>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.getJarTypeSolver(java.lang.String) -> static com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.instance [ <53:13 53:20>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.getJarTypeSolver(java.lang.String) -> static com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.instance [ <55:16 55:23>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.getJarTypeSolver(java.lang.String) -> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.JarTypeSolver(java.lang.String) [ <51:28 51:40>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.getJarTypeSolver(java.lang.String) -> void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) [ <53:22 53:33>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> void [ <58:13 58:16>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> java.lang.String [ <58:31 58:36>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> java.lang.String [ <71:17 71:22>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> java.io.IOException [ <58:56 58:66>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> javassist.ClassPath javassist.ClassPool.appendClassPath(java.lang.String) [ <60:23 60:37>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> javassist.ClassPool com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.classPool [ <60:13 60:21>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> javassist.ClassPool com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.classPool [ <61:13 61:21>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> javassist.ClassPath javassist.ClassPool.appendSystemPath() [ <61:23 61:38>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> javassist.NotFoundException [ <62:18 62:34>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> java.lang.RuntimeException.RuntimeException(java.lang.Throwable) [ <63:23 63:38>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> java.lang.RuntimeException [ <63:23 63:38>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> java.util.jar.JarFile [ <65:9 65:15>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> java.util.jar.JarFile [ <65:31 65:37>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> java.util.jar.JarFile.JarFile(java.lang.String) [ <65:31 65:37>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> java.util.jar.JarEntry [ <66:9 66:16>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> java.util.jar.JarEntry [ <67:21 67:28>]
REFERENCE_TYPE_ARGUMENT: java.util.Enumeration<E> -> java.util.jar.JarEntry [ <67:21 67:28>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> java.util.Enumeration<E> [ <67:9 67:19>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> java.util.Enumeration<java.util.jar.JarEntry> java.util.jar.JarFile.entries() [ <67:43 67:49>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> boolean java.util.Enumeration<E>.hasMoreElements() [ <68:18 68:32>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> java.util.Enumeration<E>.E java.util.Enumeration<E>.nextElement() [ <69:23 69:33>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> boolean java.util.zip.ZipEntry.isDirectory() [ <70:41 70:51>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> boolean java.lang.String.endsWith(java.lang.String) [ <70:74 70:81>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> java.lang.String java.util.zip.ZipEntry.getName() [ <70:64 70:70>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> java.lang.String java.util.zip.ZipEntry.getName() [ <71:58 71:64>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> java.lang.String com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.entryPathToClassName(java.lang.String) [ <71:31 71:50>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> java.util.Map<K, V>.V java.util.Map<K, V>.put(java.util.Map<K, V>.K, java.util.Map<K, V>.V) [ <72:35 72:37>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.classpathElements [ <72:17 72:33>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.ClasspathElement(java.util.jar.JarFile, java.util.jar.JarEntry, java.lang.String) [ <72:49 72:64>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar(java.lang.String) -> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement [ <72:49 72:64>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.getParent() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.model.resolution.TypeSolver.getParent() [ <78:23 78:31>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.getParent() -> java.lang.Override [ <77:6 77:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.getParent() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <78:12 78:21>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.getParent() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.parent [ <79:16 79:21>]
REFERENCE_OVERRIDE: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> void com.github.javaparser.symbolsolver.model.resolution.TypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <83:17 83:25>]
REFERENCE_ANNOTATION_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <82:6 82:13>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> void [ <83:12 83:15>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <83:27 83:36>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.parent [ <84:14 84:19>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.entryPathToClassName(java.lang.String) -> java.lang.String [ <87:13 87:18>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.entryPathToClassName(java.lang.String) -> java.lang.String [ <87:41 87:46>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.entryPathToClassName(java.lang.String) -> java.lang.String [ <91:9 91:14>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.entryPathToClassName(java.lang.String) -> boolean java.lang.String.endsWith(java.lang.String) [ <88:24 88:31>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.entryPathToClassName(java.lang.String) -> java.lang.IllegalStateException.IllegalStateException() [ <89:23 89:43>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.entryPathToClassName(java.lang.String) -> java.lang.IllegalStateException [ <89:23 89:43>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.entryPathToClassName(java.lang.String) -> java.lang.String java.lang.String.substring(int, int) [ <91:38 91:46>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.entryPathToClassName(java.lang.String) -> int java.lang.String.length() [ <91:61 91:66>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.entryPathToClassName(java.lang.String) -> int java.lang.String.length() [ <91:81 91:86>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.entryPathToClassName(java.lang.String) -> java.lang.String java.lang.String.replace(char, char) [ <92:31 92:37>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.entryPathToClassName(java.lang.String) -> java.lang.String java.lang.String.replace(char, char) [ <93:31 93:37>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String) [ <98:54 98:67>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType(java.lang.String) -> java.lang.Override [ <97:6 97:13>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <98:28 98:51>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <113:25 113:48>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <98:12 98:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <98:28 98:51>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <104:49 104:72>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType(java.lang.String) -> java.lang.String [ <98:69 98:74>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType(java.lang.String) -> boolean java.util.Map<K, V>.containsKey(java.lang.Object) [ <100:35 100:45>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType(java.lang.String) -> java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.classpathElements [ <100:17 100:33>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType(java.lang.String) -> java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.classpathElements [ <102:60 102:76>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType(java.lang.String) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [ <101:40 101:45>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType(java.lang.String) -> static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javassistmodel.JavassistFactory.toTypeDeclaration(javassist.CtClass, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <102:42 102:58>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType(java.lang.String) -> javassist.CtClass com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.toCtClass() [ <102:88 102:96>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType(java.lang.String) -> java.util.Map<K, V>.V java.util.Map<K, V>.get(java.lang.Object) [ <102:78 102:80>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.model.resolution.TypeSolver.getRoot() [ <102:101 102:107>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType(java.lang.String) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) [ <104:40 104:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType(java.lang.String) -> java.io.IOException [ <106:18 106:28>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType(java.lang.String) -> java.lang.RuntimeException.RuntimeException(java.lang.Throwable) [ <107:23 107:38>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType(java.lang.String) -> java.lang.RuntimeException [ <107:23 107:38>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.solveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String) [ <112:37 112:45>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.solveType(java.lang.String) -> java.lang.Override [ <111:6 111:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.solveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <112:12 112:35>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.solveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <113:25 113:48>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.solveType(java.lang.String) -> java.lang.String [ <112:47 112:52>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.solveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.UnsolvedSymbolException [ <112:67 112:89>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.solveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.UnsolvedSymbolException [ <117:23 117:45>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.solveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <113:9 113:23>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.solveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType(java.lang.String) [ <113:57 113:70>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.solveType(java.lang.String) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <114:17 114:24>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.solveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ <115:24 115:50>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.solveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.UnsolvedSymbolException.UnsolvedSymbolException(java.lang.String) [ <117:23 117:45>]
REFERENCE_TYPE_USAGE: java.util.jar.JarFile com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.jarFile -> java.util.jar.JarFile [ <122:17 122:23>]
REFERENCE_TYPE_USAGE: java.util.jar.JarEntry com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.entry -> java.util.jar.JarEntry [ <123:17 123:24>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.path -> java.lang.String [ <124:17 124:22>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.ClasspathElement(java.util.jar.JarFile, java.util.jar.JarEntry, java.lang.String) -> java.util.jar.JarFile [ <126:26 126:32>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.ClasspathElement(java.util.jar.JarFile, java.util.jar.JarEntry, java.lang.String) -> java.util.jar.JarEntry [ <126:43 126:50>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.ClasspathElement(java.util.jar.JarFile, java.util.jar.JarEntry, java.lang.String) -> java.lang.String [ <126:59 126:64>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.ClasspathElement(java.util.jar.JarFile, java.util.jar.JarEntry, java.lang.String) -> java.util.jar.JarFile com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.jarFile [ <127:18 127:24>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.ClasspathElement(java.util.jar.JarFile, java.util.jar.JarEntry, java.lang.String) -> java.util.jar.JarEntry com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.entry [ <128:18 128:22>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.ClasspathElement(java.util.jar.JarFile, java.util.jar.JarEntry, java.lang.String) -> java.lang.String com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.path [ <129:18 129:21>]
REFERENCE_TYPE_USAGE: javassist.CtClass com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.toCtClass() -> javassist.CtClass [ <132:9 132:15>]
REFERENCE_TYPE_USAGE: javassist.CtClass com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.toCtClass() -> java.io.IOException [ <132:36 132:46>]
REFERENCE_TYPE_USAGE: javassist.CtClass com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.toCtClass() -> java.io.InputStream [ <133:18 133:28>]
REFERENCE_CALL: javassist.CtClass com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.toCtClass() -> java.io.InputStream java.util.jar.JarFile.getInputStream(java.util.zip.ZipEntry) [ <133:43 133:56>]
REFERENCE_USAGE: javassist.CtClass com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.toCtClass() -> java.util.jar.JarFile com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.jarFile [ <133:35 133:41>]
REFERENCE_USAGE: javassist.CtClass com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.toCtClass() -> java.util.jar.JarEntry com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.entry [ <133:58 133:62>]
REFERENCE_CALL: javassist.CtClass com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.toCtClass() -> javassist.CtClass javassist.ClassPool.makeClass(java.io.InputStream) [ <134:34 134:42>]
REFERENCE_USAGE: javassist.CtClass com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.toCtClass() -> javassist.ClassPool com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.classPool [ <134:24 134:32>]
LOCAL_SYMBOL: JarTypeSolver.java<100:54> [ <100:54 100:54>]
LOCAL_SYMBOL: JarTypeSolver.java<100:54> [ <103:13 103:13>]
LOCAL_SYMBOL: JarTypeSolver.java<103:20> [ <103:20 103:20>]
LOCAL_SYMBOL: JarTypeSolver.java<103:20> [ <105:13 105:13>]
LOCAL_SYMBOL: JarTypeSolver.java<106:33> [ <106:33 106:33>]
LOCAL_SYMBOL: JarTypeSolver.java<106:33> [ <108:9 108:9>]
LOCAL_SYMBOL: JarTypeSolver.java<112:91> [ <112:91 112:91>]
LOCAL_SYMBOL: JarTypeSolver.java<112:91> [ <119:5 119:5>]
LOCAL_SYMBOL: JarTypeSolver.java<114:29> [ <114:29 114:29>]
LOCAL_SYMBOL: JarTypeSolver.java<114:29> [ <116:9 116:9>]
LOCAL_SYMBOL: JarTypeSolver.java<116:16> [ <116:16 116:16>]
LOCAL_SYMBOL: JarTypeSolver.java<116:16> [ <118:9 118:9>]
LOCAL_SYMBOL: JarTypeSolver.java<121:36> [ <121:36 121:36>]
LOCAL_SYMBOL: JarTypeSolver.java<121:36> [ <137:5 137:5>]
LOCAL_SYMBOL: JarTypeSolver.java<126:72> [ <126:72 126:72>]
LOCAL_SYMBOL: JarTypeSolver.java<126:72> [ <130:9 130:9>]
LOCAL_SYMBOL: JarTypeSolver.java<132:48> [ <132:48 132:48>]
LOCAL_SYMBOL: JarTypeSolver.java<132:48> [ <136:9 136:9>]
LOCAL_SYMBOL: JarTypeSolver.java<133:66> [ <133:66 133:66>]
LOCAL_SYMBOL: JarTypeSolver.java<133:66> [ <135:13 135:13>]
LOCAL_SYMBOL: JarTypeSolver.java<37:50> [ <37:50 37:50>]
LOCAL_SYMBOL: JarTypeSolver.java<37:50> [ <138:1 138:1>]
LOCAL_SYMBOL: JarTypeSolver.java<45:63> [ <45:63 45:63>]
LOCAL_SYMBOL: JarTypeSolver.java<45:63> [ <47:5 47:5>]
LOCAL_SYMBOL: JarTypeSolver.java<49:87> [ <49:87 49:87>]
LOCAL_SYMBOL: JarTypeSolver.java<49:87> [ <56:5 56:5>]
LOCAL_SYMBOL: JarTypeSolver.java<50:31> [ <50:31 50:31>]
LOCAL_SYMBOL: JarTypeSolver.java<50:31> [ <52:9 52:9>]
LOCAL_SYMBOL: JarTypeSolver.java<52:16> [ <52:16 52:16>]
LOCAL_SYMBOL: JarTypeSolver.java<52:16> [ <54:9 54:9>]
LOCAL_SYMBOL: JarTypeSolver.java<58:68> [ <58:68 58:68>]
LOCAL_SYMBOL: JarTypeSolver.java<58:68> [ <75:5 75:5>]
LOCAL_SYMBOL: JarTypeSolver.java<59:13> [ <59:13 59:13>]
LOCAL_SYMBOL: JarTypeSolver.java<59:13> [ <62:9 62:9>]
LOCAL_SYMBOL: JarTypeSolver.java<62:39> [ <62:39 62:39>]
LOCAL_SYMBOL: JarTypeSolver.java<62:39> [ <64:9 64:9>]
LOCAL_SYMBOL: JarTypeSolver.java<68:37> [ <68:37 68:37>]
LOCAL_SYMBOL: JarTypeSolver.java<68:37> [ <74:9 74:9>]
LOCAL_SYMBOL: JarTypeSolver.java<70:94> [ <70:94 70:94>]
LOCAL_SYMBOL: JarTypeSolver.java<70:94> [ <73:13 73:13>]
LOCAL_SYMBOL: JarTypeSolver.java<78:35> [ <78:35 78:35>]
LOCAL_SYMBOL: JarTypeSolver.java<78:35> [ <80:5 80:5>]
LOCAL_SYMBOL: JarTypeSolver.java<83:46> [ <83:46 83:46>]
LOCAL_SYMBOL: JarTypeSolver.java<83:46> [ <85:5 85:5>]
LOCAL_SYMBOL: JarTypeSolver.java<87:59> [ <87:59 87:59>]
LOCAL_SYMBOL: JarTypeSolver.java<87:59> [ <95:5 95:5>]
LOCAL_SYMBOL: JarTypeSolver.java<88:44> [ <88:44 88:44>]
LOCAL_SYMBOL: JarTypeSolver.java<88:44> [ <90:9 90:9>]
LOCAL_SYMBOL: JarTypeSolver.java<98:82> [ <98:82 98:82>]
LOCAL_SYMBOL: JarTypeSolver.java<98:82> [ <109:5 109:5>]
LOCAL_SYMBOL: JarTypeSolver.java<99:13> [ <99:13 99:13>]
LOCAL_SYMBOL: JarTypeSolver.java<99:13> [ <106:9 106:9>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.ClasspathElement<0> [ <126:34 126:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.ClasspathElement<0> [ <127:28 127:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.ClasspathElement<1> [ <126:52 126:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.ClasspathElement<1> [ <128:26 128:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.ClasspathElement<2> [ <126:66 126:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.ClasspathElement<2> [ <129:25 129:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.toCtClass<2> [ <133:30 133:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.ClasspathElement.toCtClass<2> [ <134:44 134:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.JarTypeSolver<0> [ <45:33 45:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.JarTypeSolver<0> [ <46:22 46:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar<0> [ <58:38 58:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar<0> [ <60:39 60:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar<0> [ <65:39 65:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar<1> [ <62:36 62:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar<1> [ <63:40 63:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar<2> [ <65:17 65:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar<2> [ <67:35 67:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar<2> [ <72:66 72:72>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar<3> [ <66:18 66:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar<3> [ <69:13 69:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar<3> [ <70:17 70:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar<3> [ <70:35 70:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar<3> [ <70:58 70:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar<3> [ <71:52 71:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar<3> [ <72:75 72:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar<4> [ <67:31 67:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar<4> [ <68:16 68:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar<4> [ <69:21 69:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar<5> [ <71:24 71:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar<5> [ <72:39 72:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.addPathToJar<5> [ <72:82 72:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.entryPathToClassName<0> [ <87:48 87:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.entryPathToClassName<0> [ <88:14 88:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.entryPathToClassName<0> [ <91:28 91:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.entryPathToClassName<0> [ <91:51 91:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.entryPathToClassName<1> [ <91:16 91:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.entryPathToClassName<1> [ <92:9 92:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.entryPathToClassName<1> [ <92:21 92:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.entryPathToClassName<1> [ <93:9 93:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.entryPathToClassName<1> [ <93:21 93:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.entryPathToClassName<1> [ <94:16 94:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.getJarTypeSolver<0> [ <49:57 49:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.getJarTypeSolver<0> [ <51:42 51:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.getJarTypeSolver<0> [ <53:35 53:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.setParent<0> [ <83:38 83:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.setParent<0> [ <84:23 84:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.solveType<0> [ <112:54 112:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.solveType<0> [ <113:72 113:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.solveType<0> [ <117:47 117:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.solveType<1> [ <113:51 113:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.solveType<1> [ <114:13 114:15>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.solveType<1> [ <115:20 115:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType<0> [ <98:76 98:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType<0> [ <100:47 100:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType<0> [ <102:82 102:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType<1> [ <106:30 106:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver.tryToSolveType<1> [ <107:40 107:40>]
COMMENT: comment [ <1:1 13:3>]
COMMENT: comment [ <34:1 36:3>]
