FILE: ReflectionMethodResolutionLogic.java
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.reflectionmodel [ReflectionMethodResolutionLogic.java <17:44 17:58>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver
SYMBOL_PACKAGE com.github.javaparser
SYMBOL_PACKAGE com.github
SYMBOL_PACKAGE com
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionMethodResolutionLogic.java <17:31 17:42>]
QUALIFIER: com.github.javaparser [ReflectionMethodResolutionLogic.java <17:20 17:29>]
QUALIFIER: com.github [ReflectionMethodResolutionLogic.java <17:13 17:18>]
QUALIFIER: com [ReflectionMethodResolutionLogic.java <17:9 17:11>]
REFERENCE_IMPORT ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.core.resolution.Context [ReflectionMethodResolutionLogic.java <19:59 19:65>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.core.resolution
QUALIFIER: com.github.javaparser.symbolsolver.core.resolution [ReflectionMethodResolutionLogic.java <19:48 19:57>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.core
QUALIFIER: com.github.javaparser.symbolsolver.core [ReflectionMethodResolutionLogic.java <19:43 19:46>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionMethodResolutionLogic.java <19:30 19:41>]
QUALIFIER: com.github.javaparser [ReflectionMethodResolutionLogic.java <19:19 19:28>]
QUALIFIER: com.github [ReflectionMethodResolutionLogic.java <19:12 19:17>]
QUALIFIER: com [ReflectionMethodResolutionLogic.java <19:8 19:10>]
REFERENCE_IMPORT ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReflectionMethodResolutionLogic.java <20:62 20:78>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ReflectionMethodResolutionLogic.java <20:49 20:60>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model [ReflectionMethodResolutionLogic.java <20:43 20:47>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionMethodResolutionLogic.java <20:30 20:41>]
QUALIFIER: com.github.javaparser [ReflectionMethodResolutionLogic.java <20:19 20:28>]
QUALIFIER: com.github [ReflectionMethodResolutionLogic.java <20:12 20:17>]
QUALIFIER: com [ReflectionMethodResolutionLogic.java <20:8 20:10>]
REFERENCE_IMPORT ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReflectionMethodResolutionLogic.java <21:62 21:85>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ReflectionMethodResolutionLogic.java <21:49 21:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReflectionMethodResolutionLogic.java <21:43 21:47>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionMethodResolutionLogic.java <21:30 21:41>]
QUALIFIER: com.github.javaparser [ReflectionMethodResolutionLogic.java <21:19 21:28>]
QUALIFIER: com.github [ReflectionMethodResolutionLogic.java <21:12 21:17>]
QUALIFIER: com [ReflectionMethodResolutionLogic.java <21:8 21:10>]
REFERENCE_IMPORT ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ReflectionMethodResolutionLogic.java <22:62 22:85>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ReflectionMethodResolutionLogic.java <22:49 22:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReflectionMethodResolutionLogic.java <22:43 22:47>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionMethodResolutionLogic.java <22:30 22:41>]
QUALIFIER: com.github.javaparser [ReflectionMethodResolutionLogic.java <22:19 22:28>]
QUALIFIER: com.github [ReflectionMethodResolutionLogic.java <22:12 22:17>]
QUALIFIER: com [ReflectionMethodResolutionLogic.java <22:8 22:10>]
REFERENCE_IMPORT ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReflectionMethodResolutionLogic.java <23:57 23:67>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.model.methods
QUALIFIER: com.github.javaparser.symbolsolver.model.methods [ReflectionMethodResolutionLogic.java <23:49 23:55>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReflectionMethodResolutionLogic.java <23:43 23:47>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionMethodResolutionLogic.java <23:30 23:41>]
QUALIFIER: com.github.javaparser [ReflectionMethodResolutionLogic.java <23:19 23:28>]
QUALIFIER: com.github [ReflectionMethodResolutionLogic.java <23:12 23:17>]
QUALIFIER: com [ReflectionMethodResolutionLogic.java <23:8 23:10>]
REFERENCE_IMPORT ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ReflectionMethodResolutionLogic.java <24:60 24:74>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ReflectionMethodResolutionLogic.java <24:49 24:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReflectionMethodResolutionLogic.java <24:43 24:47>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionMethodResolutionLogic.java <24:30 24:41>]
QUALIFIER: com.github.javaparser [ReflectionMethodResolutionLogic.java <24:19 24:28>]
QUALIFIER: com.github [ReflectionMethodResolutionLogic.java <24:12 24:17>]
QUALIFIER: com [ReflectionMethodResolutionLogic.java <24:8 24:10>]
REFERENCE_IMPORT ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ReflectionMethodResolutionLogic.java <25:60 25:69>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ReflectionMethodResolutionLogic.java <25:49 25:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReflectionMethodResolutionLogic.java <25:43 25:47>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionMethodResolutionLogic.java <25:30 25:41>]
QUALIFIER: com.github.javaparser [ReflectionMethodResolutionLogic.java <25:19 25:28>]
QUALIFIER: com.github [ReflectionMethodResolutionLogic.java <25:12 25:17>]
QUALIFIER: com [ReflectionMethodResolutionLogic.java <25:8 25:10>]
REFERENCE_IMPORT ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ReflectionMethodResolutionLogic.java <26:60 26:72>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.model.typesystem
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ReflectionMethodResolutionLogic.java <26:49 26:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReflectionMethodResolutionLogic.java <26:43 26:47>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionMethodResolutionLogic.java <26:30 26:41>]
QUALIFIER: com.github.javaparser [ReflectionMethodResolutionLogic.java <26:19 26:28>]
QUALIFIER: com.github [ReflectionMethodResolutionLogic.java <26:12 26:17>]
QUALIFIER: com [ReflectionMethodResolutionLogic.java <26:8 26:10>]
REFERENCE_IMPORT ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReflectionMethodResolutionLogic.java <27:60 27:76>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ReflectionMethodResolutionLogic.java <27:49 27:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReflectionMethodResolutionLogic.java <27:43 27:47>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionMethodResolutionLogic.java <27:30 27:41>]
QUALIFIER: com.github.javaparser [ReflectionMethodResolutionLogic.java <27:19 27:28>]
QUALIFIER: com.github [ReflectionMethodResolutionLogic.java <27:12 27:17>]
QUALIFIER: com [ReflectionMethodResolutionLogic.java <27:8 27:10>]
REFERENCE_IMPORT ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.typesystem.Type [ReflectionMethodResolutionLogic.java <28:60 28:63>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ReflectionMethodResolutionLogic.java <28:49 28:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReflectionMethodResolutionLogic.java <28:43 28:47>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionMethodResolutionLogic.java <28:30 28:41>]
QUALIFIER: com.github.javaparser [ReflectionMethodResolutionLogic.java <28:19 28:28>]
QUALIFIER: com.github [ReflectionMethodResolutionLogic.java <28:12 28:17>]
QUALIFIER: com [ReflectionMethodResolutionLogic.java <28:8 28:10>]
REFERENCE_IMPORT ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [ReflectionMethodResolutionLogic.java <29:60 29:71>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ReflectionMethodResolutionLogic.java <29:49 29:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReflectionMethodResolutionLogic.java <29:43 29:47>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionMethodResolutionLogic.java <29:30 29:41>]
QUALIFIER: com.github.javaparser [ReflectionMethodResolutionLogic.java <29:19 29:28>]
QUALIFIER: com.github [ReflectionMethodResolutionLogic.java <29:12 29:17>]
QUALIFIER: com [ReflectionMethodResolutionLogic.java <29:8 29:10>]
REFERENCE_IMPORT ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ReflectionMethodResolutionLogic.java <30:54 30:74>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.resolution
QUALIFIER: com.github.javaparser.symbolsolver.resolution [ReflectionMethodResolutionLogic.java <30:43 30:52>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionMethodResolutionLogic.java <30:30 30:41>]
QUALIFIER: com.github.javaparser [ReflectionMethodResolutionLogic.java <30:19 30:28>]
QUALIFIER: com.github [ReflectionMethodResolutionLogic.java <30:12 30:17>]
QUALIFIER: com [ReflectionMethodResolutionLogic.java <30:8 30:10>]
REFERENCE_IMPORT ReflectionMethodResolutionLogic.java -> java.lang.reflect.Method [ReflectionMethodResolutionLogic.java <32:26 32:31>]
SYMBOL_PACKAGE java.lang.reflect
QUALIFIER: java.lang.reflect [ReflectionMethodResolutionLogic.java <32:18 32:24>]
SYMBOL_PACKAGE java.lang
QUALIFIER: java.lang [ReflectionMethodResolutionLogic.java <32:13 32:16>]
SYMBOL_PACKAGE java
QUALIFIER: java [ReflectionMethodResolutionLogic.java <32:8 32:11>]
REFERENCE_IMPORT ReflectionMethodResolutionLogic.java -> java.lang.reflect.Modifier [ReflectionMethodResolutionLogic.java <33:26 33:33>]
QUALIFIER: java.lang.reflect [ReflectionMethodResolutionLogic.java <33:18 33:24>]
QUALIFIER: java.lang [ReflectionMethodResolutionLogic.java <33:13 33:16>]
QUALIFIER: java [ReflectionMethodResolutionLogic.java <33:8 33:11>]
REFERENCE_IMPORT ReflectionMethodResolutionLogic.java -> java.util.ArrayList<E> [ReflectionMethodResolutionLogic.java <34:18 34:26>]
SYMBOL_PACKAGE java.util
QUALIFIER: java.util [ReflectionMethodResolutionLogic.java <34:13 34:16>]
QUALIFIER: java [ReflectionMethodResolutionLogic.java <34:8 34:11>]
REFERENCE_IMPORT ReflectionMethodResolutionLogic.java -> java.util.List<E> [ReflectionMethodResolutionLogic.java <35:18 35:21>]
QUALIFIER: java.util [ReflectionMethodResolutionLogic.java <35:13 35:16>]
QUALIFIER: java [ReflectionMethodResolutionLogic.java <35:8 35:11>]
REFERENCE_IMPORT ReflectionMethodResolutionLogic.java -> java.util.Optional<T> [ReflectionMethodResolutionLogic.java <36:18 36:25>]
QUALIFIER: java.util [ReflectionMethodResolutionLogic.java <36:13 36:16>]
QUALIFIER: java [ReflectionMethodResolutionLogic.java <36:8 36:11>]
REFERENCE_IMPORT ReflectionMethodResolutionLogic.java -> java.util.function.Predicate<T> [ReflectionMethodResolutionLogic.java <37:27 37:35>]
SYMBOL_PACKAGE java.util.function
QUALIFIER: java.util.function [ReflectionMethodResolutionLogic.java <37:18 37:25>]
QUALIFIER: java.util [ReflectionMethodResolutionLogic.java <37:13 37:16>]
QUALIFIER: java [ReflectionMethodResolutionLogic.java <37:8 37:11>]
REFERENCE_IMPORT ReflectionMethodResolutionLogic.java -> java.util.stream.Collectors [ReflectionMethodResolutionLogic.java <38:25 38:34>]
SYMBOL_PACKAGE java.util.stream
QUALIFIER: java.util.stream [ReflectionMethodResolutionLogic.java <38:18 38:23>]
QUALIFIER: java.util [ReflectionMethodResolutionLogic.java <38:13 38:16>]
QUALIFIER: java [ReflectionMethodResolutionLogic.java <38:8 38:11>]
SYMBOL_CLASS default com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic [ReflectionMethodResolutionLogic.java <43:1 <43:7 43:37> 144:1>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<43:39> [ReflectionMethodResolutionLogic.java <43:39 43:39>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<43:39> [ReflectionMethodResolutionLogic.java <144:1 144:1>]
COMMENT: comment [ReflectionMethodResolutionLogic.java <40:1 42:3>]
SYMBOL_METHOD default static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) [ReflectionMethodResolutionLogic.java <45:5 <45:5  <45:47 45:57> 47:70> 71:5>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ReflectionMethodResolutionLogic.java <45:12 45:26>]
REFERENCE_TYPE_ARGUMENT static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReflectionMethodResolutionLogic.java <45:28 45:44>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.String [ReflectionMethodResolutionLogic.java <45:59 45:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<0> [ReflectionMethodResolutionLogic.java <45:66 45:69>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<E> [ReflectionMethodResolutionLogic.java <45:72 45:75>]
REFERENCE_TYPE_ARGUMENT static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ReflectionMethodResolutionLogic.java <45:77 45:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<1> [ReflectionMethodResolutionLogic.java <45:83 45:96>]
SYMBOL_BUILTIN_TYPE boolean
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean [ReflectionMethodResolutionLogic.java <45:99 45:105>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<2> [ReflectionMethodResolutionLogic.java <45:107 45:116>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ReflectionMethodResolutionLogic.java <46:59 46:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<3> [ReflectionMethodResolutionLogic.java <46:70 46:79>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReflectionMethodResolutionLogic.java <46:82 46:105>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<4> [ReflectionMethodResolutionLogic.java <46:107 46:115>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.Class<T> [ReflectionMethodResolutionLogic.java <47:59 47:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<5> [ReflectionMethodResolutionLogic.java <47:65 47:69>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<47:71> [ReflectionMethodResolutionLogic.java <47:71 47:71>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<47:71> [ReflectionMethodResolutionLogic.java <71:5 71:5>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<E> [ReflectionMethodResolutionLogic.java <48:9 48:12>]
REFERENCE_TYPE_ARGUMENT static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReflectionMethodResolutionLogic.java <48:14 48:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<6> [ReflectionMethodResolutionLogic.java <48:33 48:39>]
SYMBOL_METHOD java.util.ArrayList<E>.ArrayList()
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.ArrayList<E>.ArrayList() [ReflectionMethodResolutionLogic.java <48:47 48:57>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.ArrayList<E> [ReflectionMethodResolutionLogic.java <48:47 48:55>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.function.Predicate<T> [ReflectionMethodResolutionLogic.java <49:9 49:17>]
REFERENCE_TYPE_ARGUMENT static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.reflect.Method [ReflectionMethodResolutionLogic.java <49:19 49:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<7> [ReflectionMethodResolutionLogic.java <49:27 49:41>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<8> [ReflectionMethodResolutionLogic.java <49:45 49:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<2> [ReflectionMethodResolutionLogic.java <49:51 49:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<2> [ReflectionMethodResolutionLogic.java <49:66 49:75>]
SYMBOL_METHOD static boolean java.lang.reflect.Modifier.isStatic(int)
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> static boolean java.lang.reflect.Modifier.isStatic(int) [ReflectionMethodResolutionLogic.java <49:89 49:96>]
QUALIFIER: java.lang.reflect.Modifier [ReflectionMethodResolutionLogic.java <49:80 49:87>]
SYMBOL_METHOD int java.lang.reflect.Method.getModifiers()
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> int java.lang.reflect.Method.getModifiers() [ReflectionMethodResolutionLogic.java <49:100 49:111>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<8> [ReflectionMethodResolutionLogic.java <49:98 49:98>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.reflect.Method [ReflectionMethodResolutionLogic.java <50:14 50:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<9> [ReflectionMethodResolutionLogic.java <50:21 50:26>]
SYMBOL_METHOD java.lang.reflect.Method java.lang.Class<T>.getMethods()
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.reflect.Method java.lang.Class<T>.getMethods() [ReflectionMethodResolutionLogic.java <50:36 50:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<5> [ReflectionMethodResolutionLogic.java <50:30 50:34>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<50:50> [ReflectionMethodResolutionLogic.java <50:50 50:50>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<50:50> [ReflectionMethodResolutionLogic.java <54:9 54:9>]
SYMBOL_METHOD boolean java.lang.reflect.Method.isBridge()
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.lang.reflect.Method.isBridge() [ReflectionMethodResolutionLogic.java <51:24 51:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<9> [ReflectionMethodResolutionLogic.java <51:17 51:22>]
SYMBOL_METHOD boolean java.lang.reflect.Method.isSynthetic()
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.lang.reflect.Method.isSynthetic() [ReflectionMethodResolutionLogic.java <51:45 51:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<9> [ReflectionMethodResolutionLogic.java <51:38 51:43>]
SYMBOL_METHOD boolean java.lang.String.equals(java.lang.Object)
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.lang.String.equals(java.lang.Object) [ReflectionMethodResolutionLogic.java <51:80 51:85>]
SYMBOL_METHOD java.lang.String java.lang.reflect.Method.getName()
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.String java.lang.reflect.Method.getName() [ReflectionMethodResolutionLogic.java <51:70 51:76>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<9> [ReflectionMethodResolutionLogic.java <51:63 51:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<0> [ReflectionMethodResolutionLogic.java <51:87 51:90>]
SYMBOL_METHOD boolean java.util.function.Predicate<T>.test(java.util.function.Predicate<T>.T)
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.util.function.Predicate<T>.test(java.util.function.Predicate<T>.T) [ReflectionMethodResolutionLogic.java <51:112 51:115>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<7> [ReflectionMethodResolutionLogic.java <51:96 51:110>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<9> [ReflectionMethodResolutionLogic.java <51:117 51:122>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReflectionMethodResolutionLogic.java <52:13 52:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<13> [ReflectionMethodResolutionLogic.java <52:31 52:47>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodDeclaration.ReflectionMethodDeclaration(java.lang.reflect.Method, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodDeclaration.ReflectionMethodDeclaration(java.lang.reflect.Method, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionMethodResolutionLogic.java <52:55 52:81>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodDeclaration [ReflectionMethodResolutionLogic.java <52:55 52:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<9> [ReflectionMethodResolutionLogic.java <52:83 52:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<3> [ReflectionMethodResolutionLogic.java <52:91 52:100>]
SYMBOL_METHOD boolean java.util.List<E>.add(java.util.List<E>.E)
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.util.List<E>.add(java.util.List<E>.E) [ReflectionMethodResolutionLogic.java <53:21 53:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<6> [ReflectionMethodResolutionLogic.java <53:13 53:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<13> [ReflectionMethodResolutionLogic.java <53:25 53:41>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ReflectionMethodResolutionLogic.java <56:14 56:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<14> [ReflectionMethodResolutionLogic.java <56:28 56:35>]
SYMBOL_METHOD java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAncestors()
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAncestors() [ReflectionMethodResolutionLogic.java <56:49 56:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<4> [ReflectionMethodResolutionLogic.java <56:39 56:47>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<56:65> [ReflectionMethodResolutionLogic.java <56:65 56:65>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<56:65> [ReflectionMethodResolutionLogic.java <61:9 61:9>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ReflectionMethodResolutionLogic.java <57:13 57:27>]
REFERENCE_TYPE_ARGUMENT static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReflectionMethodResolutionLogic.java <57:29 57:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<16> [ReflectionMethodResolutionLogic.java <57:48 57:50>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionMethodResolutionLogic.java <57:76 57:92>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ReflectionMethodResolutionLogic.java <57:54 57:74>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration()
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ReflectionMethodResolutionLogic.java <57:103 57:120>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<14> [ReflectionMethodResolutionLogic.java <57:94 57:101>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<0> [ReflectionMethodResolutionLogic.java <57:125 57:128>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<1> [ReflectionMethodResolutionLogic.java <57:131 57:144>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<2> [ReflectionMethodResolutionLogic.java <57:147 57:156>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<3> [ReflectionMethodResolutionLogic.java <57:159 57:168>]
SYMBOL_METHOD boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ReflectionMethodResolutionLogic.java <58:21 58:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<16> [ReflectionMethodResolutionLogic.java <58:17 58:19>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<58:33> [ReflectionMethodResolutionLogic.java <58:33 58:33>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<58:33> [ReflectionMethodResolutionLogic.java <60:13 60:13>]
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.util.List<E>.add(java.util.List<E>.E) [ReflectionMethodResolutionLogic.java <59:25 59:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<6> [ReflectionMethodResolutionLogic.java <59:17 59:23>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration()
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ReflectionMethodResolutionLogic.java <59:33 59:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<16> [ReflectionMethodResolutionLogic.java <59:29 59:31>]
SYMBOL_METHOD boolean java.util.List<E>.isEmpty()
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.util.List<E>.isEmpty() [ReflectionMethodResolutionLogic.java <63:38 63:44>]
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAncestors() [ReflectionMethodResolutionLogic.java <63:23 63:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<4> [ReflectionMethodResolutionLogic.java <63:13 63:21>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<63:48> [ReflectionMethodResolutionLogic.java <63:48 63:48>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<63:48> [ReflectionMethodResolutionLogic.java <69:9 69:9>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReflectionMethodResolutionLogic.java <64:13 64:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<17> [ReflectionMethodResolutionLogic.java <64:31 64:41>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionMethodResolutionLogic.java <64:49 64:65>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReflectionMethodResolutionLogic.java <64:49 64:65>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionMethodResolutionLogic.java <64:71 64:96>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [ReflectionMethodResolutionLogic.java <64:71 64:96>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.Object [ReflectionMethodResolutionLogic.java <64:98 64:103>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<3> [ReflectionMethodResolutionLogic.java <64:112 64:121>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<3> [ReflectionMethodResolutionLogic.java <64:125 64:134>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ReflectionMethodResolutionLogic.java <65:13 65:27>]
REFERENCE_TYPE_ARGUMENT static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReflectionMethodResolutionLogic.java <65:29 65:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<18> [ReflectionMethodResolutionLogic.java <65:48 65:50>]
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionMethodResolutionLogic.java <65:76 65:92>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ReflectionMethodResolutionLogic.java <65:54 65:74>]
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ReflectionMethodResolutionLogic.java <65:106 65:123>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<17> [ReflectionMethodResolutionLogic.java <65:94 65:104>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<0> [ReflectionMethodResolutionLogic.java <65:128 65:131>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<1> [ReflectionMethodResolutionLogic.java <65:134 65:147>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<2> [ReflectionMethodResolutionLogic.java <65:150 65:159>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<3> [ReflectionMethodResolutionLogic.java <65:162 65:171>]
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ReflectionMethodResolutionLogic.java <66:21 66:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<18> [ReflectionMethodResolutionLogic.java <66:17 66:19>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<66:33> [ReflectionMethodResolutionLogic.java <66:33 66:33>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<66:33> [ReflectionMethodResolutionLogic.java <68:13 68:13>]
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.util.List<E>.add(java.util.List<E>.E) [ReflectionMethodResolutionLogic.java <67:25 67:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<6> [ReflectionMethodResolutionLogic.java <67:17 67:23>]
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ReflectionMethodResolutionLogic.java <67:33 67:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<18> [ReflectionMethodResolutionLogic.java <67:29 67:31>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionMethodResolutionLogic.java <70:38 70:55>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ReflectionMethodResolutionLogic.java <70:16 70:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<6> [ReflectionMethodResolutionLogic.java <70:57 70:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<0> [ReflectionMethodResolutionLogic.java <70:66 70:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<1> [ReflectionMethodResolutionLogic.java <70:72 70:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<3> [ReflectionMethodResolutionLogic.java <70:88 70:97>]
SYMBOL_METHOD default static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) [ReflectionMethodResolutionLogic.java <73:5 <73:5  <73:34 73:51> 75:100> 124:5>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.Optional<T> [ReflectionMethodResolutionLogic.java <73:12 73:19>]
REFERENCE_TYPE_ARGUMENT static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReflectionMethodResolutionLogic.java <73:21 73:31>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.String [ReflectionMethodResolutionLogic.java <73:53 73:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<0> [ReflectionMethodResolutionLogic.java <73:60 73:63>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<E> [ReflectionMethodResolutionLogic.java <73:66 73:69>]
REFERENCE_TYPE_ARGUMENT static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ReflectionMethodResolutionLogic.java <73:71 73:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<1> [ReflectionMethodResolutionLogic.java <73:77 73:90>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ReflectionMethodResolutionLogic.java <73:93 73:102>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<2> [ReflectionMethodResolutionLogic.java <73:104 73:113>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.core.resolution.Context [ReflectionMethodResolutionLogic.java <74:53 74:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<3> [ReflectionMethodResolutionLogic.java <74:61 74:77>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<E> [ReflectionMethodResolutionLogic.java <74:80 74:83>]
REFERENCE_TYPE_ARGUMENT static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ReflectionMethodResolutionLogic.java <74:85 74:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<4> [ReflectionMethodResolutionLogic.java <74:91 74:109>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReflectionMethodResolutionLogic.java <75:53 75:76>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<5> [ReflectionMethodResolutionLogic.java <75:78 75:86>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.Class<T> [ReflectionMethodResolutionLogic.java <75:89 75:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<6> [ReflectionMethodResolutionLogic.java <75:95 75:99>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<75:102> [ReflectionMethodResolutionLogic.java <75:102 75:102>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<75:102> [ReflectionMethodResolutionLogic.java <124:5 124:5>]
SYMBOL_METHOD int java.util.List<E>.size()
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> int java.util.List<E>.size() [ReflectionMethodResolutionLogic.java <76:33 76:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<4> [ReflectionMethodResolutionLogic.java <76:13 76:31>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> int java.util.List<E>.size() [ReflectionMethodResolutionLogic.java <76:73 76:76>]
SYMBOL_METHOD java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters()
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [ReflectionMethodResolutionLogic.java <76:53 76:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<5> [ReflectionMethodResolutionLogic.java <76:43 76:51>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<76:81> [ReflectionMethodResolutionLogic.java <76:81 76:81>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<76:81> [ReflectionMethodResolutionLogic.java <85:9 85:9>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.util.List<E>.isEmpty() [ReflectionMethodResolutionLogic.java <78:48 78:54>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [ReflectionMethodResolutionLogic.java <78:28 78:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<5> [ReflectionMethodResolutionLogic.java <78:18 78:26>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<78:59> [ReflectionMethodResolutionLogic.java <78:59 78:59>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<78:59> [ReflectionMethodResolutionLogic.java <84:13 84:13>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<4> [ReflectionMethodResolutionLogic.java <80:17 80:35>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.ArrayList<E>.ArrayList() [ReflectionMethodResolutionLogic.java <80:43 80:53>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.ArrayList<E> [ReflectionMethodResolutionLogic.java <80:43 80:51>]
SYMBOL_BUILTIN_TYPE int
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> int [ReflectionMethodResolutionLogic.java <81:22 81:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<7> [ReflectionMethodResolutionLogic.java <81:26 81:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<7> [ReflectionMethodResolutionLogic.java <81:33 81:33>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> int java.util.List<E>.size() [ReflectionMethodResolutionLogic.java <81:67 81:70>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [ReflectionMethodResolutionLogic.java <81:47 81:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<5> [ReflectionMethodResolutionLogic.java <81:37 81:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<7> [ReflectionMethodResolutionLogic.java <81:75 81:75>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<81:80> [ReflectionMethodResolutionLogic.java <81:80 81:80>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<81:80> [ReflectionMethodResolutionLogic.java <83:17 83:17>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.util.List<E>.add(java.util.List<E>.E) [ReflectionMethodResolutionLogic.java <82:41 82:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<4> [ReflectionMethodResolutionLogic.java <82:21 82:39>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionMethodResolutionLogic.java <82:49 82:65>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReflectionMethodResolutionLogic.java <82:49 82:65>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionMethodResolutionLogic.java <82:71 82:96>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [ReflectionMethodResolutionLogic.java <82:71 82:96>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.Object [ReflectionMethodResolutionLogic.java <82:98 82:103>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<2> [ReflectionMethodResolutionLogic.java <82:112 82:121>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<2> [ReflectionMethodResolutionLogic.java <82:125 82:134>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<E> [ReflectionMethodResolutionLogic.java <86:9 86:12>]
REFERENCE_TYPE_ARGUMENT static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReflectionMethodResolutionLogic.java <86:14 86:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<8> [ReflectionMethodResolutionLogic.java <86:27 86:33>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.ArrayList<E>.ArrayList() [ReflectionMethodResolutionLogic.java <86:41 86:51>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.ArrayList<E> [ReflectionMethodResolutionLogic.java <86:41 86:49>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.reflect.Method [ReflectionMethodResolutionLogic.java <87:14 87:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<9> [ReflectionMethodResolutionLogic.java <87:21 87:26>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.reflect.Method java.lang.Class<T>.getMethods() [ReflectionMethodResolutionLogic.java <87:36 87:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<6> [ReflectionMethodResolutionLogic.java <87:30 87:34>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<87:50> [ReflectionMethodResolutionLogic.java <87:50 87:50>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<87:50> [ReflectionMethodResolutionLogic.java <94:9 94:9>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.lang.String.equals(java.lang.Object) [ReflectionMethodResolutionLogic.java <88:34 88:39>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.String java.lang.reflect.Method.getName() [ReflectionMethodResolutionLogic.java <88:24 88:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<9> [ReflectionMethodResolutionLogic.java <88:17 88:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<0> [ReflectionMethodResolutionLogic.java <88:41 88:44>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.lang.reflect.Method.isBridge() [ReflectionMethodResolutionLogic.java <88:58 88:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<9> [ReflectionMethodResolutionLogic.java <88:51 88:56>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.lang.reflect.Method.isSynthetic() [ReflectionMethodResolutionLogic.java <88:80 88:90>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<9> [ReflectionMethodResolutionLogic.java <88:73 88:78>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<88:95> [ReflectionMethodResolutionLogic.java <88:95 88:95>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<88:95> [ReflectionMethodResolutionLogic.java <92:13 92:13>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReflectionMethodResolutionLogic.java <89:17 89:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<13> [ReflectionMethodResolutionLogic.java <89:35 89:51>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodDeclaration.ReflectionMethodDeclaration(java.lang.reflect.Method, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionMethodResolutionLogic.java <89:59 89:85>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodDeclaration [ReflectionMethodResolutionLogic.java <89:59 89:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<9> [ReflectionMethodResolutionLogic.java <89:87 89:92>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<2> [ReflectionMethodResolutionLogic.java <89:95 89:104>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReflectionMethodResolutionLogic.java <90:17 90:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<14> [ReflectionMethodResolutionLogic.java <90:29 90:39>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration)
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) [ReflectionMethodResolutionLogic.java <90:43 90:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<4> [ReflectionMethodResolutionLogic.java <90:57 90:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<5> [ReflectionMethodResolutionLogic.java <90:78 90:86>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<13> [ReflectionMethodResolutionLogic.java <90:89 90:105>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.util.List<E>.add(java.util.List<E>.E) [ReflectionMethodResolutionLogic.java <91:25 91:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<8> [ReflectionMethodResolutionLogic.java <91:17 91:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<14> [ReflectionMethodResolutionLogic.java <91:29 91:39>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ReflectionMethodResolutionLogic.java <96:13 96:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<15> [ReflectionMethodResolutionLogic.java <96:27 96:34>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAncestors() [ReflectionMethodResolutionLogic.java <96:48 96:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<5> [ReflectionMethodResolutionLogic.java <96:38 96:46>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<96:63> [ReflectionMethodResolutionLogic.java <96:63 96:63>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<96:63> [ReflectionMethodResolutionLogic.java <103:9 103:9>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ReflectionMethodResolutionLogic.java <97:13 97:27>]
REFERENCE_TYPE_ARGUMENT static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReflectionMethodResolutionLogic.java <97:29 97:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<17> [ReflectionMethodResolutionLogic.java <97:48 97:50>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionMethodResolutionLogic.java <97:76 97:92>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ReflectionMethodResolutionLogic.java <97:54 97:74>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ReflectionMethodResolutionLogic.java <97:103 97:120>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<15> [ReflectionMethodResolutionLogic.java <97:94 97:101>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<0> [ReflectionMethodResolutionLogic.java <97:125 97:128>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<1> [ReflectionMethodResolutionLogic.java <97:131 97:144>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<2> [ReflectionMethodResolutionLogic.java <97:147 97:156>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ReflectionMethodResolutionLogic.java <98:21 98:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<17> [ReflectionMethodResolutionLogic.java <98:17 98:19>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<98:32> [ReflectionMethodResolutionLogic.java <98:32 98:32>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<98:32> [ReflectionMethodResolutionLogic.java <102:13 102:13>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReflectionMethodResolutionLogic.java <99:17 99:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<18> [ReflectionMethodResolutionLogic.java <99:35 99:58>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ReflectionMethodResolutionLogic.java <99:66 99:92>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<17> [ReflectionMethodResolutionLogic.java <99:62 99:64>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReflectionMethodResolutionLogic.java <100:17 100:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<19> [ReflectionMethodResolutionLogic.java <100:29 100:39>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) [ReflectionMethodResolutionLogic.java <100:43 100:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<4> [ReflectionMethodResolutionLogic.java <100:57 100:75>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ReflectionMethodResolutionLogic.java <100:87 100:104>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<15> [ReflectionMethodResolutionLogic.java <100:78 100:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<18> [ReflectionMethodResolutionLogic.java <100:109 100:132>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.util.List<E>.add(java.util.List<E>.E) [ReflectionMethodResolutionLogic.java <101:25 101:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<8> [ReflectionMethodResolutionLogic.java <101:17 101:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<19> [ReflectionMethodResolutionLogic.java <101:29 101:39>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.util.List<E>.isEmpty() [ReflectionMethodResolutionLogic.java <105:38 105:44>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAncestors() [ReflectionMethodResolutionLogic.java <105:23 105:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<5> [ReflectionMethodResolutionLogic.java <105:13 105:21>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<105:48> [ReflectionMethodResolutionLogic.java <105:48 105:48>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<105:48> [ReflectionMethodResolutionLogic.java <112:9 112:9>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReflectionMethodResolutionLogic.java <106:13 106:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<20> [ReflectionMethodResolutionLogic.java <106:31 106:41>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionMethodResolutionLogic.java <106:49 106:65>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReflectionMethodResolutionLogic.java <106:49 106:65>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionMethodResolutionLogic.java <106:71 106:96>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [ReflectionMethodResolutionLogic.java <106:71 106:96>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.Object [ReflectionMethodResolutionLogic.java <106:98 106:103>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<2> [ReflectionMethodResolutionLogic.java <106:112 106:121>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<2> [ReflectionMethodResolutionLogic.java <106:125 106:134>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ReflectionMethodResolutionLogic.java <107:13 107:27>]
REFERENCE_TYPE_ARGUMENT static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReflectionMethodResolutionLogic.java <107:29 107:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<21> [ReflectionMethodResolutionLogic.java <107:48 107:50>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionMethodResolutionLogic.java <107:76 107:92>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ReflectionMethodResolutionLogic.java <107:54 107:74>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ReflectionMethodResolutionLogic.java <107:106 107:123>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<20> [ReflectionMethodResolutionLogic.java <107:94 107:104>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<0> [ReflectionMethodResolutionLogic.java <107:128 107:131>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<1> [ReflectionMethodResolutionLogic.java <107:134 107:147>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<2> [ReflectionMethodResolutionLogic.java <107:150 107:159>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ReflectionMethodResolutionLogic.java <108:21 108:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<21> [ReflectionMethodResolutionLogic.java <108:17 108:19>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<108:33> [ReflectionMethodResolutionLogic.java <108:33 108:33>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<108:33> [ReflectionMethodResolutionLogic.java <111:13 111:13>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReflectionMethodResolutionLogic.java <109:17 109:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<22> [ReflectionMethodResolutionLogic.java <109:29 109:33>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) [ReflectionMethodResolutionLogic.java <109:37 109:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<4> [ReflectionMethodResolutionLogic.java <109:51 109:69>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ReflectionMethodResolutionLogic.java <109:84 109:101>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<20> [ReflectionMethodResolutionLogic.java <109:72 109:82>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ReflectionMethodResolutionLogic.java <109:110 109:136>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<21> [ReflectionMethodResolutionLogic.java <109:106 109:108>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.util.List<E>.add(java.util.List<E>.E) [ReflectionMethodResolutionLogic.java <110:25 110:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<8> [ReflectionMethodResolutionLogic.java <110:17 110:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<22> [ReflectionMethodResolutionLogic.java <110:29 110:33>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<E> [ReflectionMethodResolutionLogic.java <114:15 114:18>]
REFERENCE_TYPE_ARGUMENT static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ReflectionMethodResolutionLogic.java <114:20 114:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<23> [ReflectionMethodResolutionLogic.java <114:26 114:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<4> [ReflectionMethodResolutionLogic.java <114:53 114:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<1> [ReflectionMethodResolutionLogic.java <115:9 115:22>]
SYMBOL_METHOD R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>)
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [ReflectionMethodResolutionLogic.java <122:12 122:18>]
SYMBOL_METHOD java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>)
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>) [ReflectionMethodResolutionLogic.java <115:50 115:52>]
SYMBOL_METHOD java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream()
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [ReflectionMethodResolutionLogic.java <115:41 115:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<1> [ReflectionMethodResolutionLogic.java <115:26 115:39>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<28> [ReflectionMethodResolutionLogic.java <115:55 115:56>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<115:62> [ReflectionMethodResolutionLogic.java <115:62 115:62>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<115:62> [ReflectionMethodResolutionLogic.java <122:9 122:9>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> int [ReflectionMethodResolutionLogic.java <116:13 116:15>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<29> [ReflectionMethodResolutionLogic.java <116:17 116:17>]
REFERENCE_TYPE_USAGE static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ReflectionMethodResolutionLogic.java <117:18 117:41>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<30> [ReflectionMethodResolutionLogic.java <117:43 117:44>]
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [ReflectionMethodResolutionLogic.java <117:58 117:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<5> [ReflectionMethodResolutionLogic.java <117:48 117:56>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<117:79> [ReflectionMethodResolutionLogic.java <117:79 117:79>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<117:79> [ReflectionMethodResolutionLogic.java <120:13 120:13>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<28> [ReflectionMethodResolutionLogic.java <118:17 118:18>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type)
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) [ReflectionMethodResolutionLogic.java <118:25 118:44>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<28> [ReflectionMethodResolutionLogic.java <118:22 118:23>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<30> [ReflectionMethodResolutionLogic.java <118:46 118:47>]
SYMBOL_METHOD java.util.List<E>.E java.util.List<E>.get(int)
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<E>.E java.util.List<E>.get(int) [ReflectionMethodResolutionLogic.java <118:75 118:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<23> [ReflectionMethodResolutionLogic.java <118:50 118:73>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<29> [ReflectionMethodResolutionLogic.java <118:79 118:79>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<29> [ReflectionMethodResolutionLogic.java <119:17 119:17>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<28> [ReflectionMethodResolutionLogic.java <121:20 121:21>]
SYMBOL_METHOD static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>()
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [ReflectionMethodResolutionLogic.java <122:31 122:36>]
QUALIFIER: java.util.stream.Collectors [ReflectionMethodResolutionLogic.java <122:20 122:29>]
SYMBOL_METHOD static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionMethodResolutionLogic.java <123:38 123:60>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ReflectionMethodResolutionLogic.java <123:16 123:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<8> [ReflectionMethodResolutionLogic.java <123:62 123:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<0> [ReflectionMethodResolutionLogic.java <123:71 123:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<1> [ReflectionMethodResolutionLogic.java <123:77 123:90>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<2> [ReflectionMethodResolutionLogic.java <123:93 123:102>]
SYMBOL_METHOD private static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) [ReflectionMethodResolutionLogic.java <126:5 <126:5  <126:32 126:44> 126:158> 143:5>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReflectionMethodResolutionLogic.java <126:20 126:30>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> java.util.List<E> [ReflectionMethodResolutionLogic.java <126:46 126:49>]
REFERENCE_TYPE_ARGUMENT static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ReflectionMethodResolutionLogic.java <126:51 126:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<0> [ReflectionMethodResolutionLogic.java <126:57 126:75>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReflectionMethodResolutionLogic.java <126:78 126:101>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<1> [ReflectionMethodResolutionLogic.java <126:103 126:120>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReflectionMethodResolutionLogic.java <126:123 126:139>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<2> [ReflectionMethodResolutionLogic.java <126:141 126:157>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<126:160> [ReflectionMethodResolutionLogic.java <126:160 126:160>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<126:160> [ReflectionMethodResolutionLogic.java <143:5 143:5>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReflectionMethodResolutionLogic.java <127:9 127:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<3> [ReflectionMethodResolutionLogic.java <127:21 127:31>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.methods.MethodUsage.MethodUsage(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration)
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage.MethodUsage(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) [ReflectionMethodResolutionLogic.java <127:39 127:49>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReflectionMethodResolutionLogic.java <127:39 127:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<2> [ReflectionMethodResolutionLogic.java <127:51 127:67>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> int [ReflectionMethodResolutionLogic.java <128:9 128:11>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<4> [ReflectionMethodResolutionLogic.java <128:13 128:13>]
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> int java.util.List<E>.size() [ReflectionMethodResolutionLogic.java <131:33 131:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<0> [ReflectionMethodResolutionLogic.java <131:13 131:31>]
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> int java.util.List<E>.size() [ReflectionMethodResolutionLogic.java <131:82 131:85>]
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [ReflectionMethodResolutionLogic.java <131:62 131:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<1> [ReflectionMethodResolutionLogic.java <131:43 131:60>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<131:89> [ReflectionMethodResolutionLogic.java <131:89 131:89>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<131:89> [ReflectionMethodResolutionLogic.java <136:9 136:9>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ReflectionMethodResolutionLogic.java <132:18 132:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<5> [ReflectionMethodResolutionLogic.java <132:43 132:44>]
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [ReflectionMethodResolutionLogic.java <132:67 132:83>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<1> [ReflectionMethodResolutionLogic.java <132:48 132:65>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<132:88> [ReflectionMethodResolutionLogic.java <132:88 132:88>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<132:88> [ReflectionMethodResolutionLogic.java <135:13 135:13>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<3> [ReflectionMethodResolutionLogic.java <133:17 133:27>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.model.methods.MethodUsage.replaceTypeParameter(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type)
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.model.methods.MethodUsage.replaceTypeParameter(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) [ReflectionMethodResolutionLogic.java <133:43 133:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<3> [ReflectionMethodResolutionLogic.java <133:31 133:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<5> [ReflectionMethodResolutionLogic.java <133:64 133:65>]
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> java.util.List<E>.E java.util.List<E>.get(int) [ReflectionMethodResolutionLogic.java <133:88 133:90>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<0> [ReflectionMethodResolutionLogic.java <133:68 133:86>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<4> [ReflectionMethodResolutionLogic.java <133:92 133:92>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<4> [ReflectionMethodResolutionLogic.java <134:17 134:17>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ReflectionMethodResolutionLogic.java <138:14 138:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<7> [ReflectionMethodResolutionLogic.java <138:39 138:57>]
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [ReflectionMethodResolutionLogic.java <138:79 138:95>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<2> [ReflectionMethodResolutionLogic.java <138:61 138:77>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<138:100> [ReflectionMethodResolutionLogic.java <138:100 138:100>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<138:100> [ReflectionMethodResolutionLogic.java <140:9 140:9>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<3> [ReflectionMethodResolutionLogic.java <139:13 139:23>]
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.model.methods.MethodUsage.replaceTypeParameter(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) [ReflectionMethodResolutionLogic.java <139:39 139:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<3> [ReflectionMethodResolutionLogic.java <139:27 139:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<7> [ReflectionMethodResolutionLogic.java <139:60 139:78>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.TypeVariable(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration)
REFERENCE_CALL static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.TypeVariable(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration) [ReflectionMethodResolutionLogic.java <139:85 139:96>]
REFERENCE_TYPE_USAGE static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [ReflectionMethodResolutionLogic.java <139:85 139:96>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<7> [ReflectionMethodResolutionLogic.java <139:98 139:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<3> [ReflectionMethodResolutionLogic.java <142:16 142:26>]
COMMENT: comment [ReflectionMethodResolutionLogic.java <1:1 15:3>]
COMMENT: comment [ReflectionMethodResolutionLogic.java <77:13 77:56>]
COMMENT: comment [ReflectionMethodResolutionLogic.java <79:17 79:65>]
COMMENT: comment [ReflectionMethodResolutionLogic.java <130:9 130:57>]
