FILE: ReflectionMethodResolutionLogic.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.reflectionmodel [ <17:44 17:58>]
QUALIFIER: com.github.javaparser.symbolsolver [ <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ <19:30 19:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <20:30 20:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <21:30 21:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <22:30 22:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <23:30 23:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <24:30 24:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <25:30 25:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <26:30 26:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <27:30 27:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <28:30 28:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <29:30 29:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <30:30 30:41>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ <17:20 17:29>]
QUALIFIER: com.github.javaparser [ <19:19 19:28>]
QUALIFIER: com.github.javaparser [ <20:19 20:28>]
QUALIFIER: com.github.javaparser [ <21:19 21:28>]
QUALIFIER: com.github.javaparser [ <22:19 22:28>]
QUALIFIER: com.github.javaparser [ <23:19 23:28>]
QUALIFIER: com.github.javaparser [ <24:19 24:28>]
QUALIFIER: com.github.javaparser [ <25:19 25:28>]
QUALIFIER: com.github.javaparser [ <26:19 26:28>]
QUALIFIER: com.github.javaparser [ <27:19 27:28>]
QUALIFIER: com.github.javaparser [ <28:19 28:28>]
QUALIFIER: com.github.javaparser [ <29:19 29:28>]
QUALIFIER: com.github.javaparser [ <30:19 30:28>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ <17:13 17:18>]
QUALIFIER: com.github [ <19:12 19:17>]
QUALIFIER: com.github [ <20:12 20:17>]
QUALIFIER: com.github [ <21:12 21:17>]
QUALIFIER: com.github [ <22:12 22:17>]
QUALIFIER: com.github [ <23:12 23:17>]
QUALIFIER: com.github [ <24:12 24:17>]
QUALIFIER: com.github [ <25:12 25:17>]
QUALIFIER: com.github [ <26:12 26:17>]
QUALIFIER: com.github [ <27:12 27:17>]
QUALIFIER: com.github [ <28:12 28:17>]
QUALIFIER: com.github [ <29:12 29:17>]
QUALIFIER: com.github [ <30:12 30:17>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ <17:9 17:11>]
QUALIFIER: com [ <19:8 19:10>]
QUALIFIER: com [ <20:8 20:10>]
QUALIFIER: com [ <21:8 21:10>]
QUALIFIER: com [ <22:8 22:10>]
QUALIFIER: com [ <23:8 23:10>]
QUALIFIER: com [ <24:8 24:10>]
QUALIFIER: com [ <25:8 25:10>]
QUALIFIER: com [ <26:8 26:10>]
QUALIFIER: com [ <27:8 27:10>]
QUALIFIER: com [ <28:8 28:10>]
QUALIFIER: com [ <29:8 29:10>]
QUALIFIER: com [ <30:8 30:10>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.symbolsolver.core.resolution [ <19:48 19:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.core.resolution
QUALIFIER: com.github.javaparser.symbolsolver.core [ <19:43 19:46>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.core
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <20:49 20:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <21:49 21:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <22:49 22:60>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [ <20:43 20:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <21:43 21:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <22:43 22:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <23:43 23:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <24:43 24:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <25:43 25:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <26:43 26:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <27:43 27:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <28:43 28:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <29:43 29:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.methods [ <23:49 23:55>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.methods
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <24:49 24:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <25:49 25:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <26:49 26:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <27:49 27:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <28:49 28:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <29:49 29:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ <57:54 57:74>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ <65:54 65:74>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ <70:16 70:36>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ <97:54 97:74>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ <107:54 107:74>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ <123:16 123:36>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution [ <30:43 30:52>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.resolution
QUALIFIER: java.lang [ <32:13 32:16>]
QUALIFIER: java.lang [ <33:13 33:16>]
SYMBOL_PACKAGE: java.lang
QUALIFIER: java [ <32:8 32:11>]
QUALIFIER: java [ <33:8 33:11>]
QUALIFIER: java [ <34:8 34:11>]
QUALIFIER: java [ <35:8 35:11>]
QUALIFIER: java [ <36:8 36:11>]
QUALIFIER: java [ <37:8 37:11>]
QUALIFIER: java [ <38:8 38:11>]
SYMBOL_PACKAGE: java
QUALIFIER: java.lang.reflect [ <32:18 32:24>]
QUALIFIER: java.lang.reflect [ <33:18 33:24>]
SYMBOL_PACKAGE: java.lang.reflect
QUALIFIER: java.lang.reflect.Modifier [ <49:80 49:87>]
QUALIFIER: java.util [ <34:13 34:16>]
QUALIFIER: java.util [ <35:13 35:16>]
QUALIFIER: java.util [ <36:13 36:16>]
QUALIFIER: java.util [ <37:13 37:16>]
QUALIFIER: java.util [ <38:13 38:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java.util.function [ <37:18 37:25>]
SYMBOL_PACKAGE: java.util.function
QUALIFIER: java.util.stream.Collectors [ <122:20 122:29>]
QUALIFIER: java.util.stream [ <38:18 38:23>]
SYMBOL_PACKAGE: java.util.stream
SYMBOL_CLASS: default com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic [ <43:1 <43:7 43:37> 144:1>]
SYMBOL_METHOD: default static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) [ <45:5 <45:5 <45:47 45:57> 47:70> 71:5>]
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: java.util.ArrayList<E>.ArrayList()
SYMBOL_METHOD: static boolean java.lang.reflect.Modifier.isStatic(int)
SYMBOL_METHOD: int java.lang.reflect.Method.getModifiers()
SYMBOL_METHOD: java.lang.reflect.Method java.lang.Class<T>.getMethods()
SYMBOL_METHOD: boolean java.lang.reflect.Method.isBridge()
SYMBOL_METHOD: boolean java.lang.reflect.Method.isSynthetic()
SYMBOL_METHOD: boolean java.lang.String.equals(java.lang.Object)
SYMBOL_METHOD: java.lang.String java.lang.reflect.Method.getName()
SYMBOL_METHOD: boolean java.util.function.Predicate<T>.test(java.util.function.Predicate<T>.T)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodDeclaration.ReflectionMethodDeclaration(java.lang.reflect.Method, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: boolean java.util.List<E>.add(java.util.List<E>.E)
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAncestors()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration()
SYMBOL_METHOD: boolean java.util.List<E>.isEmpty()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: default static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) [ <73:5 <73:5 <73:34 73:51> 75:100> 124:5>]
SYMBOL_METHOD: int java.util.List<E>.size()
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters()
SYMBOL_BUILTIN_TYPE: int
SYMBOL_METHOD: private static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) [ <126:5 <126:5 <126:32 126:44> 126:158> 143:5>]
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>)
SYMBOL_METHOD: java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>)
SYMBOL_METHOD: java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: java.util.List<E>.E java.util.List<E>.get(int)
SYMBOL_METHOD: static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>()
SYMBOL_METHOD: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.methods.MethodUsage.MethodUsage(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.model.methods.MethodUsage.replaceTypeParameter(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.TypeVariable(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration)
REFERENCE_IMPORT: ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.core.resolution.Context [ <19:59 19:65>]
REFERENCE_IMPORT: ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <20:62 20:78>]
REFERENCE_IMPORT: ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <21:62 21:85>]
REFERENCE_IMPORT: ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <22:62 22:85>]
REFERENCE_IMPORT: ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <23:57 23:67>]
REFERENCE_IMPORT: ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <24:60 24:74>]
REFERENCE_IMPORT: ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <25:60 25:69>]
REFERENCE_IMPORT: ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <26:60 26:72>]
REFERENCE_IMPORT: ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <27:60 27:76>]
REFERENCE_IMPORT: ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <28:60 28:63>]
REFERENCE_IMPORT: ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [ <29:60 29:71>]
REFERENCE_IMPORT: ReflectionMethodResolutionLogic.java -> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ <30:54 30:74>]
REFERENCE_IMPORT: ReflectionMethodResolutionLogic.java -> java.lang.reflect.Method [ <32:26 32:31>]
REFERENCE_IMPORT: ReflectionMethodResolutionLogic.java -> java.lang.reflect.Modifier [ <33:26 33:33>]
REFERENCE_IMPORT: ReflectionMethodResolutionLogic.java -> java.util.ArrayList<E> [ <34:18 34:26>]
REFERENCE_IMPORT: ReflectionMethodResolutionLogic.java -> java.util.List<E> [ <35:18 35:21>]
REFERENCE_IMPORT: ReflectionMethodResolutionLogic.java -> java.util.Optional<T> [ <36:18 36:25>]
REFERENCE_IMPORT: ReflectionMethodResolutionLogic.java -> java.util.function.Predicate<T> [ <37:27 37:35>]
REFERENCE_IMPORT: ReflectionMethodResolutionLogic.java -> java.util.stream.Collectors [ <38:25 38:34>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <45:28 45:44>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <57:29 57:45>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <65:29 65:45>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <97:29 97:45>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <107:29 107:45>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <45:12 45:26>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <57:13 57:27>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <65:13 65:27>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <45:28 45:44>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <48:14 48:30>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <52:13 52:29>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <57:29 57:45>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <65:29 65:45>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.String [ <45:59 45:64>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <45:77 45:80>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <73:71 73:74>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <74:85 74:88>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <114:20 114:23>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <126:51 126:54>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<E> [ <45:72 45:75>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<E> [ <48:9 48:12>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <45:77 45:80>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean [ <45:99 45:105>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <46:59 46:68>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <46:82 46:105>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.Class<T> [ <47:59 47:63>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <48:14 48:30>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.ArrayList<E>.ArrayList() [ <48:47 48:57>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.ArrayList<E> [ <48:47 48:55>]
REFERENCE_TYPE_ARGUMENT: java.util.function.Predicate<T> -> java.lang.reflect.Method [ <49:19 49:24>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.function.Predicate<T> [ <49:9 49:17>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.reflect.Method [ <49:19 49:24>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.reflect.Method [ <50:14 50:19>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> static boolean java.lang.reflect.Modifier.isStatic(int) [ <49:89 49:96>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> int java.lang.reflect.Method.getModifiers() [ <49:100 49:111>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.reflect.Method java.lang.Class<T>.getMethods() [ <50:36 50:45>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.lang.reflect.Method.isBridge() [ <51:24 51:31>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.lang.reflect.Method.isSynthetic() [ <51:45 51:55>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.lang.String.equals(java.lang.Object) [ <51:80 51:85>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.String java.lang.reflect.Method.getName() [ <51:70 51:76>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.util.function.Predicate<T>.test(java.util.function.Predicate<T>.T) [ <51:112 51:115>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodDeclaration.ReflectionMethodDeclaration(java.lang.reflect.Method, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <52:55 52:81>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodDeclaration [ <52:55 52:81>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.util.List<E>.add(java.util.List<E>.E) [ <53:21 53:23>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.util.List<E>.add(java.util.List<E>.E) [ <59:25 59:27>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.util.List<E>.add(java.util.List<E>.E) [ <67:25 67:27>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <56:14 56:26>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAncestors() [ <56:49 56:60>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAncestors() [ <63:23 63:34>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <57:76 57:92>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <65:76 65:92>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ <57:103 57:120>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ <65:106 65:123>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <58:21 58:28>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <66:21 66:28>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ <59:33 59:59>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ <67:33 67:59>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.util.List<E>.isEmpty() [ <63:38 63:44>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <64:13 64:29>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <64:49 64:65>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <64:49 64:65>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <64:71 64:96>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [ <64:71 64:96>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.Object [ <64:98 64:103>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <70:38 70:55>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <73:21 73:31>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.Optional<T> [ <73:12 73:19>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <73:21 73:31>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <86:14 86:24>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <90:17 90:27>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <100:17 100:27>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <109:17 109:27>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.String [ <73:53 73:58>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<E> [ <73:66 73:69>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<E> [ <74:80 74:83>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<E> [ <86:9 86:12>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<E> [ <114:15 114:18>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <73:71 73:74>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <74:85 74:88>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <114:20 114:23>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <73:93 73:102>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.core.resolution.Context [ <74:53 74:59>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <75:53 75:76>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.Class<T> [ <75:89 75:93>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> int java.util.List<E>.size() [ <76:33 76:36>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> int java.util.List<E>.size() [ <76:73 76:76>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> int java.util.List<E>.size() [ <81:67 81:70>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [ <76:53 76:69>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [ <78:28 78:44>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [ <81:47 81:63>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [ <117:58 117:74>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.util.List<E>.isEmpty() [ <78:48 78:54>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.util.List<E>.isEmpty() [ <105:38 105:44>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.ArrayList<E>.ArrayList() [ <80:43 80:53>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.ArrayList<E>.ArrayList() [ <86:41 86:51>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.ArrayList<E> [ <80:43 80:51>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.ArrayList<E> [ <86:41 86:49>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> int [ <81:22 81:24>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> int [ <116:13 116:15>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.util.List<E>.add(java.util.List<E>.E) [ <82:41 82:43>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.util.List<E>.add(java.util.List<E>.E) [ <91:25 91:27>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.util.List<E>.add(java.util.List<E>.E) [ <101:25 101:27>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.util.List<E>.add(java.util.List<E>.E) [ <110:25 110:27>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <82:49 82:65>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <106:49 106:65>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <82:49 82:65>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <106:13 106:29>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <106:49 106:65>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <82:71 82:96>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <106:71 106:96>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [ <82:71 82:96>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [ <106:71 106:96>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.Object [ <82:98 82:103>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.Object [ <106:98 106:103>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <86:14 86:24>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.reflect.Method [ <87:14 87:19>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.reflect.Method java.lang.Class<T>.getMethods() [ <87:36 87:45>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.lang.String.equals(java.lang.Object) [ <88:34 88:39>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.lang.String java.lang.reflect.Method.getName() [ <88:24 88:30>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.lang.reflect.Method.isBridge() [ <88:58 88:65>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean java.lang.reflect.Method.isSynthetic() [ <88:80 88:90>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <89:17 89:33>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <97:29 97:45>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <99:17 99:33>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <107:29 107:45>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodDeclaration.ReflectionMethodDeclaration(java.lang.reflect.Method, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <89:59 89:85>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodDeclaration [ <89:59 89:85>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) [ <90:43 90:55>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) [ <100:43 100:55>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) [ <109:37 109:49>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <96:13 96:25>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAncestors() [ <96:48 96:59>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAncestors() [ <105:23 105:34>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <97:13 97:27>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <107:13 107:27>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <97:76 97:92>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <107:76 107:92>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ <97:103 97:120>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ <100:87 100:104>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ <107:106 107:123>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ <109:84 109:101>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <98:21 98:28>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <108:21 108:28>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ <99:66 99:92>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ <109:110 109:136>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [ <122:12 122:18>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>) [ <115:50 115:52>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [ <115:41 115:46>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <117:18 117:41>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) [ <118:25 118:44>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> java.util.List<E>.E java.util.List<E>.get(int) [ <118:75 118:77>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [ <122:31 122:36>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.lang.Class) -> static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <123:38 123:60>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <126:20 126:30>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <127:9 127:19>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ <127:39 127:49>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> java.util.List<E> [ <126:46 126:49>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <126:51 126:54>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <126:78 126:101>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <126:123 126:139>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage.MethodUsage(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) [ <127:39 127:49>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> int [ <128:9 128:11>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> int java.util.List<E>.size() [ <131:33 131:36>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> int java.util.List<E>.size() [ <131:82 131:85>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [ <131:62 131:78>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [ <132:67 132:83>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [ <138:79 138:95>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <132:18 132:41>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <138:14 138:37>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.model.methods.MethodUsage.replaceTypeParameter(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) [ <133:43 133:62>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.model.methods.MethodUsage.replaceTypeParameter(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) [ <139:39 139:58>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> java.util.List<E>.E java.util.List<E>.get(int) [ <133:88 133:90>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.TypeVariable(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration) [ <139:85 139:96>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [ <139:85 139:96>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<105:48> [ <105:48 105:48>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<105:48> [ <112:9 112:9>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<108:33> [ <108:33 108:33>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<108:33> [ <111:13 111:13>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<115:62> [ <115:62 115:62>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<115:62> [ <122:9 122:9>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<117:79> [ <117:79 117:79>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<117:79> [ <120:13 120:13>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<126:160> [ <126:160 126:160>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<126:160> [ <143:5 143:5>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<131:89> [ <131:89 131:89>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<131:89> [ <136:9 136:9>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<132:88> [ <132:88 132:88>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<132:88> [ <135:13 135:13>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<138:100> [ <138:100 138:100>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<138:100> [ <140:9 140:9>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<43:39> [ <43:39 43:39>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<43:39> [ <144:1 144:1>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<47:71> [ <47:71 47:71>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<47:71> [ <71:5 71:5>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<50:50> [ <50:50 50:50>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<50:50> [ <54:9 54:9>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<56:65> [ <56:65 56:65>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<56:65> [ <61:9 61:9>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<58:33> [ <58:33 58:33>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<58:33> [ <60:13 60:13>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<63:48> [ <63:48 63:48>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<63:48> [ <69:9 69:9>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<66:33> [ <66:33 66:33>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<66:33> [ <68:13 68:13>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<75:102> [ <75:102 75:102>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<75:102> [ <124:5 124:5>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<76:81> [ <76:81 76:81>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<76:81> [ <85:9 85:9>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<78:59> [ <78:59 78:59>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<78:59> [ <84:13 84:13>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<81:80> [ <81:80 81:80>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<81:80> [ <83:17 83:17>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<87:50> [ <87:50 87:50>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<87:50> [ <94:9 94:9>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<88:95> [ <88:95 88:95>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<88:95> [ <92:13 92:13>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<96:63> [ <96:63 96:63>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<96:63> [ <103:9 103:9>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<98:32> [ <98:32 98:32>]
LOCAL_SYMBOL: ReflectionMethodResolutionLogic.java<98:32> [ <102:13 102:13>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<0> [ <126:57 126:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<0> [ <131:13 131:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<0> [ <133:68 133:86>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<1> [ <126:103 126:120>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<1> [ <131:43 131:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<1> [ <132:48 132:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<2> [ <126:141 126:157>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<2> [ <127:51 127:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<2> [ <138:61 138:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<3> [ <127:21 127:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<3> [ <133:17 133:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<3> [ <133:31 133:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<3> [ <139:13 139:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<3> [ <139:27 139:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<3> [ <142:16 142:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<4> [ <128:13 128:13>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<4> [ <133:92 133:92>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<4> [ <134:17 134:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<5> [ <132:43 132:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<5> [ <133:64 133:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<7> [ <138:39 138:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<7> [ <139:60 139:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.replaceParams<7> [ <139:98 139:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<0> [ <45:66 45:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<0> [ <51:87 51:90>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<0> [ <57:125 57:128>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<0> [ <65:128 65:131>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<0> [ <70:66 70:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<13> [ <52:31 52:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<13> [ <53:25 53:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<14> [ <56:28 56:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<14> [ <57:94 57:101>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<16> [ <57:48 57:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<16> [ <58:17 58:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<16> [ <59:29 59:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<17> [ <64:31 64:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<17> [ <65:94 65:104>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<18> [ <65:48 65:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<18> [ <66:17 66:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<18> [ <67:29 67:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<1> [ <45:83 45:96>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<1> [ <57:131 57:144>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<1> [ <65:134 65:147>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<1> [ <70:72 70:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<2> [ <45:107 45:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<2> [ <49:51 49:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<2> [ <49:66 49:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<2> [ <57:147 57:156>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<2> [ <65:150 65:159>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<3> [ <46:70 46:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<3> [ <52:91 52:100>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<3> [ <57:159 57:168>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<3> [ <64:112 64:121>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<3> [ <64:125 64:134>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<3> [ <65:162 65:171>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<3> [ <70:88 70:97>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<4> [ <46:107 46:115>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<4> [ <56:39 56:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<4> [ <63:13 63:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<5> [ <47:65 47:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<5> [ <50:30 50:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<6> [ <48:33 48:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<6> [ <53:13 53:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<6> [ <59:17 59:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<6> [ <67:17 67:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<6> [ <70:57 70:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<7> [ <49:27 49:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<7> [ <51:96 51:110>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<9> [ <50:21 50:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<9> [ <51:17 51:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<9> [ <51:38 51:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<9> [ <51:63 51:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<9> [ <51:117 51:122>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethod<9> [ <52:83 52:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<0> [ <73:60 73:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<0> [ <88:41 88:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<0> [ <97:125 97:128>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<0> [ <107:128 107:131>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<0> [ <123:71 123:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<13> [ <89:35 89:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<13> [ <90:89 90:105>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<14> [ <90:29 90:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<14> [ <91:29 91:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<15> [ <96:27 96:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<15> [ <97:94 97:101>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<15> [ <100:78 100:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<17> [ <97:48 97:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<17> [ <98:17 98:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<17> [ <99:62 99:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<18> [ <99:35 99:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<18> [ <100:109 100:132>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<19> [ <100:29 100:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<19> [ <101:29 101:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<1> [ <73:77 73:90>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<1> [ <97:131 97:144>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<1> [ <107:134 107:147>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<1> [ <115:9 115:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<1> [ <115:26 115:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<1> [ <123:77 123:90>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<20> [ <106:31 106:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<20> [ <107:94 107:104>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<20> [ <109:72 109:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<21> [ <107:48 107:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<21> [ <108:17 108:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<21> [ <109:106 109:108>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<22> [ <109:29 109:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<22> [ <110:29 110:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<23> [ <114:26 114:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<23> [ <118:50 118:73>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<2> [ <73:104 73:113>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<2> [ <82:112 82:121>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<2> [ <82:125 82:134>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<2> [ <89:95 89:104>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<2> [ <97:147 97:156>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<2> [ <106:112 106:121>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<2> [ <106:125 106:134>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<2> [ <107:150 107:159>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<2> [ <123:93 123:102>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<3> [ <74:61 74:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<4> [ <74:91 74:109>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<4> [ <76:13 76:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<4> [ <80:17 80:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<4> [ <82:21 82:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<4> [ <90:57 90:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<4> [ <100:57 100:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<4> [ <109:51 109:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<4> [ <114:53 114:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<5> [ <75:78 75:86>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<5> [ <76:43 76:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<5> [ <78:18 78:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<5> [ <81:37 81:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<5> [ <90:78 90:86>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<5> [ <96:38 96:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<5> [ <105:13 105:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<5> [ <117:48 117:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<6> [ <75:95 75:99>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<6> [ <87:30 87:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<7> [ <81:26 81:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<7> [ <81:33 81:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<7> [ <81:75 81:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<8> [ <86:27 86:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<8> [ <91:17 91:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<8> [ <101:17 101:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<8> [ <110:17 110:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<8> [ <123:62 123:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<9> [ <87:21 87:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<9> [ <88:17 88:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<9> [ <88:51 88:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<9> [ <88:73 88:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodResolutionLogic.solveMethodAsUsage<9> [ <89:87 89:92>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<28> [ <115:55 115:56>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<28> [ <118:17 118:18>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<28> [ <118:22 118:23>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<28> [ <121:20 121:21>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<29> [ <116:17 116:17>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<29> [ <118:79 118:79>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<29> [ <119:17 119:17>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<30> [ <117:43 117:44>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<30> [ <118:46 118:47>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<8> [ <49:45 49:45>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<8> [ <49:98 49:98>]
COMMENT: comment [ <1:1 15:3>]
COMMENT: comment [ <40:1 42:3>]
COMMENT: comment [ <77:13 77:56>]
COMMENT: comment [ <79:17 79:65>]
COMMENT: comment [ <130:9 130:57>]
