FILE: JavaParserInterfaceDeclaration.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations [ <17:60 17:71>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <17:44 17:58>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <26:43 26:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <27:43 27:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <28:43 28:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel
QUALIFIER: com.github.javaparser.symbolsolver [ <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ <25:30 25:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <26:30 26:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <27:30 27:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <28:30 28:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <29:30 29:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <30:30 30:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <31:30 31:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <32:30 32:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <33:30 33:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <34:30 34:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <35:30 35:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <36:30 36:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <37:30 37:41>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ <17:20 17:29>]
QUALIFIER: com.github.javaparser [ <19:19 19:28>]
QUALIFIER: com.github.javaparser [ <20:19 20:28>]
QUALIFIER: com.github.javaparser [ <21:19 21:28>]
QUALIFIER: com.github.javaparser [ <22:19 22:28>]
QUALIFIER: com.github.javaparser [ <23:19 23:28>]
QUALIFIER: com.github.javaparser [ <24:19 24:28>]
QUALIFIER: com.github.javaparser [ <25:19 25:28>]
QUALIFIER: com.github.javaparser [ <26:19 26:28>]
QUALIFIER: com.github.javaparser [ <27:19 27:28>]
QUALIFIER: com.github.javaparser [ <28:19 28:28>]
QUALIFIER: com.github.javaparser [ <29:19 29:28>]
QUALIFIER: com.github.javaparser [ <30:19 30:28>]
QUALIFIER: com.github.javaparser [ <31:19 31:28>]
QUALIFIER: com.github.javaparser [ <32:19 32:28>]
QUALIFIER: com.github.javaparser [ <33:19 33:28>]
QUALIFIER: com.github.javaparser [ <34:19 34:28>]
QUALIFIER: com.github.javaparser [ <35:19 35:28>]
QUALIFIER: com.github.javaparser [ <36:19 36:28>]
QUALIFIER: com.github.javaparser [ <37:19 37:28>]
QUALIFIER: com.github.javaparser [ <64:46 64:55>]
QUALIFIER: com.github.javaparser [ <65:73 65:82>]
QUALIFIER: com.github.javaparser [ <193:46 193:55>]
QUALIFIER: com.github.javaparser [ <194:28 194:37>]
QUALIFIER: com.github.javaparser [ <194:85 194:94>]
QUALIFIER: com.github.javaparser [ <281:46 281:55>]
QUALIFIER: com.github.javaparser [ <282:89 282:98>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ <17:13 17:18>]
QUALIFIER: com.github [ <19:12 19:17>]
QUALIFIER: com.github [ <20:12 20:17>]
QUALIFIER: com.github [ <21:12 21:17>]
QUALIFIER: com.github [ <22:12 22:17>]
QUALIFIER: com.github [ <23:12 23:17>]
QUALIFIER: com.github [ <24:12 24:17>]
QUALIFIER: com.github [ <25:12 25:17>]
QUALIFIER: com.github [ <26:12 26:17>]
QUALIFIER: com.github [ <27:12 27:17>]
QUALIFIER: com.github [ <28:12 28:17>]
QUALIFIER: com.github [ <29:12 29:17>]
QUALIFIER: com.github [ <30:12 30:17>]
QUALIFIER: com.github [ <31:12 31:17>]
QUALIFIER: com.github [ <32:12 32:17>]
QUALIFIER: com.github [ <33:12 33:17>]
QUALIFIER: com.github [ <34:12 34:17>]
QUALIFIER: com.github [ <35:12 35:17>]
QUALIFIER: com.github [ <36:12 36:17>]
QUALIFIER: com.github [ <37:12 37:17>]
QUALIFIER: com.github [ <64:39 64:44>]
QUALIFIER: com.github [ <65:66 65:71>]
QUALIFIER: com.github [ <193:39 193:44>]
QUALIFIER: com.github [ <194:21 194:26>]
QUALIFIER: com.github [ <194:78 194:83>]
QUALIFIER: com.github [ <281:39 281:44>]
QUALIFIER: com.github [ <282:82 282:87>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ <17:9 17:11>]
QUALIFIER: com [ <19:8 19:10>]
QUALIFIER: com [ <20:8 20:10>]
QUALIFIER: com [ <21:8 21:10>]
QUALIFIER: com [ <22:8 22:10>]
QUALIFIER: com [ <23:8 23:10>]
QUALIFIER: com [ <24:8 24:10>]
QUALIFIER: com [ <25:8 25:10>]
QUALIFIER: com [ <26:8 26:10>]
QUALIFIER: com [ <27:8 27:10>]
QUALIFIER: com [ <28:8 28:10>]
QUALIFIER: com [ <29:8 29:10>]
QUALIFIER: com [ <30:8 30:10>]
QUALIFIER: com [ <31:8 31:10>]
QUALIFIER: com [ <32:8 32:10>]
QUALIFIER: com [ <33:8 33:10>]
QUALIFIER: com [ <34:8 34:10>]
QUALIFIER: com [ <35:8 35:10>]
QUALIFIER: com [ <36:8 36:10>]
QUALIFIER: com [ <37:8 37:10>]
QUALIFIER: com [ <64:35 64:37>]
QUALIFIER: com [ <65:62 65:64>]
QUALIFIER: com [ <193:35 193:37>]
QUALIFIER: com [ <194:17 194:19>]
QUALIFIER: com [ <194:74 194:76>]
QUALIFIER: com [ <281:35 281:37>]
QUALIFIER: com [ <282:78 282:80>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.ast [ <19:30 19:32>]
QUALIFIER: com.github.javaparser.ast [ <20:30 20:32>]
QUALIFIER: com.github.javaparser.ast [ <21:30 21:32>]
QUALIFIER: com.github.javaparser.ast [ <22:30 22:32>]
QUALIFIER: com.github.javaparser.ast [ <23:30 23:32>]
QUALIFIER: com.github.javaparser.ast [ <24:30 24:32>]
QUALIFIER: com.github.javaparser.ast [ <64:57 64:59>]
QUALIFIER: com.github.javaparser.ast [ <65:84 65:86>]
QUALIFIER: com.github.javaparser.ast [ <193:57 193:59>]
QUALIFIER: com.github.javaparser.ast [ <194:39 194:41>]
QUALIFIER: com.github.javaparser.ast [ <194:96 194:98>]
QUALIFIER: com.github.javaparser.ast [ <281:57 281:59>]
QUALIFIER: com.github.javaparser.ast [ <282:100 282:102>]
SYMBOL_PACKAGE: com.github.javaparser.ast
QUALIFIER: com.github.javaparser.ast.body [ <20:34 20:37>]
QUALIFIER: com.github.javaparser.ast.body [ <21:34 21:37>]
QUALIFIER: com.github.javaparser.ast.body [ <22:34 22:37>]
QUALIFIER: com.github.javaparser.ast.body [ <64:61 64:64>]
QUALIFIER: com.github.javaparser.ast.body [ <65:88 65:91>]
QUALIFIER: com.github.javaparser.ast.body [ <193:61 193:64>]
QUALIFIER: com.github.javaparser.ast.body [ <194:43 194:46>]
QUALIFIER: com.github.javaparser.ast.body [ <194:100 194:103>]
QUALIFIER: com.github.javaparser.ast.body [ <281:61 281:64>]
QUALIFIER: com.github.javaparser.ast.body [ <282:104 282:107>]
SYMBOL_PACKAGE: com.github.javaparser.ast.body
QUALIFIER: com.github.javaparser.ast.expr [ <23:34 23:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.expr
QUALIFIER: com.github.javaparser.ast.type [ <24:34 24:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.type
QUALIFIER: com.github.javaparser.symbolsolver.core.resolution [ <25:48 25:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.core.resolution
QUALIFIER: com.github.javaparser.symbolsolver.core [ <25:43 25:46>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.core
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ <282:25 282:40>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ <315:55 315:70>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [ <72:16 72:32>]
QUALIFIER: com.github.javaparser.symbolsolver.logic [ <29:43 29:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.logic
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [ <30:43 30:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <31:43 31:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <32:43 32:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <33:43 33:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <34:43 34:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <35:43 35:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <36:43 36:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <31:49 31:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <32:49 32:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <33:49 33:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <34:49 34:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <35:49 35:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <36:49 36:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem
QUALIFIER: com.github.javaparser.symbolsolver.resolution [ <37:43 37:52>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.resolution
QUALIFIER: java.util [ <40:13 40:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [ <39:8 39:11>]
QUALIFIER: java [ <40:8 40:11>]
SYMBOL_PACKAGE: java
QUALIFIER: java.util.stream.Collectors [ <259:23 259:32>]
QUALIFIER: java.util.stream.Collectors [ <316:26 316:35>]
QUALIFIER: java.util.stream [ <40:18 40:23>]
SYMBOL_PACKAGE: java.util.stream
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration [ <55:9 55:12>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration [ <56:9 56:12>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration [ <57:9 57:12>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration [ <160:13 160:16>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration [ <163:13 163:16>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration [ <172:13 172:16>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration [ <220:13 220:16>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration [ <230:55 230:58>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration [ <254:13 254:16>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration [ <257:20 257:23>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration [ <280:39 280:42>]
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration [ <45:1 <45:14 45:43> 319:1>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.typeSolver [ <47:24 47:33>]
SYMBOL_FIELD: private com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <48:41 48:51>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.javaParserTypeAdapter [ <49:35 49:55>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.JavaParserInterfaceDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <51:5 <51:5 <51:12 51:41> 51:105> 58:5>]
SYMBOL_METHOD: boolean com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.isInterface()
SYMBOL_METHOD: java.lang.IllegalArgumentException.IllegalArgumentException()
SYMBOL_PACKAGE: java.lang
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter<T>.JavaParserTypeAdapter(com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter<T>.T, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods() [ <60:5 <60:5 <61:35 61:52> 61:54> 69:5>]
SYMBOL_METHOD: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getDeclaredMethods()
SYMBOL_METHOD: java.util.HashSet<E>.HashSet()
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.BodyDeclaration<?>> com.github.javaparser.ast.body.TypeDeclaration<T>.getMembers()
SYMBOL_METHOD: boolean java.util.Set<E>.add(java.util.Set<E>.E)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.JavaParserMethodDeclaration(com.github.javaparser.ast.body.MethodDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getContext() [ <71:5 <71:5 <71:20 71:29> 71:31> 73:5>]
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getUsage(com.github.javaparser.ast.Node) [ <75:5 <75:5 <75:17 75:24> 75:35> 77:5>]
SYMBOL_METHOD: java.lang.UnsupportedOperationException.UnsupportedOperationException()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.equals(java.lang.Object) [ <79:5 <79:5 <80:20 80:25> 80:35> 89:5>]
SYMBOL_METHOD: boolean java.lang.Object.equals(java.lang.Object)
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: java.lang.Class<?> java.lang.Object.getClass()
SYMBOL_METHOD: boolean com.github.javaparser.ast.Node.equals(java.lang.Object)
SYMBOL_METHOD: public int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hashCode() [ <91:5 <91:5 <92:16 92:23> 92:25> 94:5>]
SYMBOL_METHOD: int java.lang.Object.hashCode()
SYMBOL_BUILTIN_TYPE: int
SYMBOL_METHOD: int com.github.javaparser.ast.Node.hashCode()
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getName() [ <96:5 <96:5 <97:19 97:25> 97:27> 99:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName()
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId()
SYMBOL_METHOD: com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.InterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.asInterface() [ <101:5 <101:5 <102:33 102:43> 102:45> 104:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.InterfaceDeclaration com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.asInterface()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hasDirectlyAnnotation(java.lang.String) [ <106:5 <106:5 <107:20 107:40> 107:62> 114:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasDirectlyAnnotation(java.lang.String)
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.AnnotationExpr> com.github.javaparser.ast.body.BodyDeclaration<T>.getAnnotations()
SYMBOL_METHOD: boolean java.lang.String.equals(java.lang.Object)
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <218:5 <218:5 <219:45 219:53> 219:89> 234:5>]
SYMBOL_METHOD: com.github.javaparser.ast.expr.Name com.github.javaparser.ast.expr.AnnotationExpr.getName()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isInterface() [ <116:5 <116:5 <117:20 117:30> 117:32> 119:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.InterfaceDeclaration.isInterface()
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() [ <121:5 <121:5 <122:32 122:52> 122:54> 130:5>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.InterfaceDeclaration.getInterfacesExtended()
SYMBOL_METHOD: java.util.ArrayList<E>.ArrayList()
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.getImplementedTypes()
SYMBOL_METHOD: boolean java.util.List<E>.add(java.util.List<E>.E)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.ClassOrInterfaceType.getName()
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getPackageName() [ <132:5 <132:5 <133:19 133:32> 133:34> 135:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getPackageName()
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter<T>.getPackageName()
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getClassName() [ <137:5 <137:5 <138:19 138:30> 138:32> 140:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getClassName()
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter<T>.getClassName()
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getQualifiedName() [ <142:5 <142:5 <143:19 143:34> 143:36> 145:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter<T>.getQualifiedName()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [ <147:5 <147:5 <148:20 148:33> 148:65> 150:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter<T>.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration)
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ <152:5 <152:5 <153:20 153:33> 153:44> 155:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter<T>.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [ <157:5 <157:5 <158:20 158:34> 158:66> 182:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration)
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.getExtendedTypes()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveType(com.github.javaparser.ast.type.Type)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.resolution.SymbolSolver.SymbolSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isTypeParameter() [ <184:5 <184:5 <185:20 185:34> 185:36> 187:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isTypeParameter()
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() [ <189:5 <189:5 <190:35 190:46> 190:48> 208:5>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAllFields()
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.VariableDeclarator> com.github.javaparser.ast.body.FieldDeclaration.getVariables()
SYMBOL_METHOD: boolean java.util.ArrayList<E>.add(java.util.ArrayList<E>.E)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserFieldDeclaration.JavaParserFieldDeclaration(com.github.javaparser.ast.body.VariableDeclarator, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: void java.lang.Iterable<T>.forEach(java.util.function.Consumer<? super T>)
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() [ <236:5 <236:5 <237:32 237:43> 237:45> 250:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration()
SYMBOL_METHOD: boolean java.util.ArrayList<E>.addAll(java.util.Collection<? extends E>)
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toString() [ <211:5 <211:5 <212:19 212:26> 212:28> 216:5>]
SYMBOL_METHOD: java.lang.String java.lang.Object.toString()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2)
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <221:20 221:34>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
SYMBOL_METHOD: boolean java.lang.String.startsWith(java.lang.String)
SYMBOL_METHOD: int java.lang.String.length()
SYMBOL_METHOD: java.lang.String java.lang.String.substring(int)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.core.resolution.Context.getParent()
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAncestors()
SYMBOL_METHOD: private com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) [ <297:5 <297:5 <297:27 297:41> 297:84> 318:5>]
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getTypeParameters() [ <252:5 <252:5 <253:43 253:59> 253:61> 261:5>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters()
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.TypeParameter> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.getTypeParameters()
SYMBOL_METHOD: static java.util.List<T> java.util.Collections.emptyList<T>()
QUALIFIER: java.util.Collections [ <255:20 255:30>]
SYMBOL_METHOD: R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>)
SYMBOL_METHOD: java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>)
SYMBOL_METHOD: java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>()
SYMBOL_METHOD: public com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getWrappedNode() [ <268:1 <268:1 <268:40 268:53> 268:55> 270:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.accessLevel() [ <272:5 <272:5 <273:24 273:34> 273:36> 275:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.model.declarations.HasAccessLevel.accessLevel()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper.toAccessLevel(java.util.EnumSet<com.github.javaparser.ast.Modifier>)
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper [ <274:16 274:21>]
SYMBOL_METHOD: java.util.EnumSet<com.github.javaparser.ast.Modifier> com.github.javaparser.ast.body.TypeDeclaration<T>.getModifiers()
SYMBOL_METHOD: public java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes() [ <277:5 <277:5 <278:42 278:54> 278:56> 286:5>]
SYMBOL_METHOD: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.internalTypes()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.TypeDeclaration<?>)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.containerType() [ <288:5 <288:5 <289:47 289:59> 289:61> 291:5>]
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.containerType()
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter<T>.containerType()
SYMBOL_METHOD: int java.lang.String.indexOf(int)
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.Node.toString()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.UnsolvedSymbolException.UnsolvedSymbolException(java.lang.String)
SYMBOL_METHOD: boolean java.util.Optional<T>.isPresent()
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.Type>> com.github.javaparser.ast.type.ClassOrInterfaceType.getTypeArguments()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.asReferenceType()
SYMBOL_METHOD: java.util.Optional<T>.T java.util.Optional<T>.get()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.LazyType.LazyType(java.util.function.Function<java.lang.Void, com.github.javaparser.symbolsolver.model.typesystem.Type>)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_IMPORT: JavaParserInterfaceDeclaration.java -> com.github.javaparser.ast.Node [ <19:34 19:37>]
REFERENCE_IMPORT: JavaParserInterfaceDeclaration.java -> com.github.javaparser.ast.body.BodyDeclaration<T> [ <20:39 20:53>]
REFERENCE_IMPORT: JavaParserInterfaceDeclaration.java -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ <21:39 21:65>]
REFERENCE_IMPORT: JavaParserInterfaceDeclaration.java -> com.github.javaparser.ast.body.VariableDeclarator [ <22:39 22:56>]
REFERENCE_IMPORT: JavaParserInterfaceDeclaration.java -> com.github.javaparser.ast.expr.AnnotationExpr [ <23:39 23:52>]
REFERENCE_IMPORT: JavaParserInterfaceDeclaration.java -> com.github.javaparser.ast.type.ClassOrInterfaceType [ <24:39 24:58>]
REFERENCE_IMPORT: JavaParserInterfaceDeclaration.java -> com.github.javaparser.symbolsolver.core.resolution.Context [ <25:59 25:65>]
REFERENCE_IMPORT: JavaParserInterfaceDeclaration.java -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ <26:59 26:74>]
REFERENCE_IMPORT: JavaParserInterfaceDeclaration.java -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [ <27:59 27:75>]
REFERENCE_IMPORT: JavaParserInterfaceDeclaration.java -> com.github.javaparser.symbolsolver.javaparsermodel.UnsolvedSymbolException [ <28:59 28:81>]
REFERENCE_IMPORT: JavaParserInterfaceDeclaration.java -> com.github.javaparser.symbolsolver.logic.AbstractTypeDeclaration [ <29:49 29:71>]
REFERENCE_IMPORT: JavaParserInterfaceDeclaration.java -> com.github.javaparser.symbolsolver.model.declarations [ <30:49 30:60>]
REFERENCE_IMPORT: JavaParserInterfaceDeclaration.java -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <31:60 31:74>]
REFERENCE_IMPORT: JavaParserInterfaceDeclaration.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <32:60 32:69>]
REFERENCE_IMPORT: JavaParserInterfaceDeclaration.java -> com.github.javaparser.symbolsolver.model.typesystem.LazyType [ <33:60 33:67>]
REFERENCE_IMPORT: JavaParserInterfaceDeclaration.java -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <34:60 34:72>]
REFERENCE_IMPORT: JavaParserInterfaceDeclaration.java -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <35:60 35:76>]
REFERENCE_IMPORT: JavaParserInterfaceDeclaration.java -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <36:60 36:63>]
REFERENCE_IMPORT: JavaParserInterfaceDeclaration.java -> com.github.javaparser.symbolsolver.resolution.SymbolSolver [ <37:54 37:65>]
REFERENCE_IMPORT: JavaParserInterfaceDeclaration.java -> java.util [ <39:13 39:16>]
REFERENCE_IMPORT: JavaParserInterfaceDeclaration.java -> java.util.stream.Collectors [ <40:25 40:34>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration -> com.github.javaparser.symbolsolver.logic.AbstractTypeDeclaration [ <45:53 45:75>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration -> com.github.javaparser.symbolsolver.model.declarations.InterfaceDeclaration [ <45:88 45:107>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.typeSolver -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <47:13 47:22>]
REFERENCE_TYPE_USAGE: com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ <48:13 48:39>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.javaParserTypeAdapter -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter<T> [ <49:13 49:33>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.JavaParserInterfaceDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ <51:43 51:69>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.JavaParserInterfaceDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <51:84 51:93>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.JavaParserInterfaceDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.isInterface() [ <52:26 52:36>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.JavaParserInterfaceDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.IllegalArgumentException.IllegalArgumentException() [ <53:23 53:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.JavaParserInterfaceDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.IllegalArgumentException [ <53:23 53:46>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.JavaParserInterfaceDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <55:14 55:24>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.JavaParserInterfaceDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.typeSolver [ <56:14 56:23>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.JavaParserInterfaceDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.javaParserTypeAdapter [ <57:14 57:34>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.JavaParserInterfaceDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter<T>.JavaParserTypeAdapter(com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter<T>.T, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <57:42 57:62>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.JavaParserInterfaceDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter<T> [ <57:42 57:62>]
REFERENCE_OVERRIDE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods() -> java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getDeclaredMethods() [ <61:35 61:52>]
REFERENCE_ANNOTATION_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods() -> java.lang.Override [ <60:6 60:13>]
REFERENCE_TYPE_ARGUMENT: java.util.Set<E> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <61:16 61:32>]
REFERENCE_TYPE_ARGUMENT: java.util.Set<E> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <62:13 62:29>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods() -> java.util.Set<E> [ <61:12 61:14>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods() -> java.util.Set<E> [ <62:9 62:11>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods() -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <61:16 61:32>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods() -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <62:13 62:29>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods() -> java.util.HashSet<E>.HashSet() [ <62:46 62:54>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods() -> java.util.HashSet<E> [ <62:46 62:52>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods() -> com.github.javaparser.ast.body.BodyDeclaration<T> [ <63:14 63:28>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods() -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.BodyDeclaration<?>> com.github.javaparser.ast.body.TypeDeclaration<T>.getMembers() [ <63:51 63:60>]
REFERENCE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods() -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <63:39 63:49>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods() -> com.github.javaparser.ast.body.MethodDeclaration [ <64:66 64:82>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods() -> com.github.javaparser.ast.body.MethodDeclaration [ <65:93 65:109>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods() -> boolean java.util.Set<E>.add(java.util.Set<E>.E) [ <65:25 65:27>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.JavaParserMethodDeclaration(com.github.javaparser.ast.body.MethodDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <65:33 65:59>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration [ <65:33 65:59>]
REFERENCE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.typeSolver [ <65:120 65:129>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getContext() -> com.github.javaparser.symbolsolver.core.resolution.Context [ <71:12 71:18>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getContext() -> static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <72:34 72:43>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getContext() -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <72:45 72:55>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getContext() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.typeSolver [ <72:58 72:67>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getUsage(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <75:12 75:15>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getUsage(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [ <75:26 75:29>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getUsage(com.github.javaparser.ast.Node) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <76:19 76:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getUsage(com.github.javaparser.ast.Node) -> java.lang.UnsupportedOperationException [ <76:19 76:47>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.equals(java.lang.Object) -> boolean java.lang.Object.equals(java.lang.Object) [ <80:20 80:25>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.equals(java.lang.Object) -> java.lang.Override [ <79:6 79:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.equals(java.lang.Object) -> boolean [ <80:12 80:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.equals(java.lang.Object) -> java.lang.Object [ <80:27 80:32>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.equals(java.lang.Object) -> java.lang.Class<?> java.lang.Object.getClass() [ <82:26 82:33>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.equals(java.lang.Object) -> java.lang.Class<?> java.lang.Object.getClass() [ <82:42 82:49>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.equals(java.lang.Object) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration [ <84:9 84:38>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.equals(java.lang.Object) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration [ <84:48 84:77>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.equals(java.lang.Object) -> boolean com.github.javaparser.ast.Node.equals(java.lang.Object) [ <86:26 86:31>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.equals(java.lang.Object) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <86:14 86:24>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.equals(java.lang.Object) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <86:38 86:48>]
REFERENCE_OVERRIDE: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hashCode() -> int java.lang.Object.hashCode() [ <92:16 92:23>]
REFERENCE_ANNOTATION_USAGE: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hashCode() -> java.lang.Override [ <91:6 91:13>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hashCode() -> int [ <92:12 92:14>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hashCode() -> int com.github.javaparser.ast.Node.hashCode() [ <93:28 93:35>]
REFERENCE_USAGE: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hashCode() -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <93:16 93:26>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName() [ <97:19 97:25>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getName() -> java.lang.Override [ <96:6 96:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getName() -> java.lang.String [ <97:12 97:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getName() -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [ <98:38 98:42>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getName() -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName() [ <98:28 98:34>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getName() -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <98:16 98:26>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.declarations.InterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.asInterface() -> com.github.javaparser.symbolsolver.model.declarations.InterfaceDeclaration com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.asInterface() [ <102:33 102:43>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.declarations.InterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.asInterface() -> java.lang.Override [ <101:6 101:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.InterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.asInterface() -> com.github.javaparser.symbolsolver.model.declarations.InterfaceDeclaration [ <102:12 102:31>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hasDirectlyAnnotation(java.lang.String) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasDirectlyAnnotation(java.lang.String) [ <107:20 107:40>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hasDirectlyAnnotation(java.lang.String) -> java.lang.Override [ <106:6 106:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hasDirectlyAnnotation(java.lang.String) -> boolean [ <107:12 107:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hasDirectlyAnnotation(java.lang.String) -> java.lang.String [ <107:42 107:47>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hasDirectlyAnnotation(java.lang.String) -> com.github.javaparser.ast.expr.AnnotationExpr [ <108:14 108:27>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hasDirectlyAnnotation(java.lang.String) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.AnnotationExpr> com.github.javaparser.ast.body.BodyDeclaration<T>.getAnnotations() [ <108:58 108:71>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hasDirectlyAnnotation(java.lang.String) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <108:46 108:56>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hasDirectlyAnnotation(java.lang.String) -> boolean java.lang.String.equals(java.lang.Object) [ <109:122 109:127>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hasDirectlyAnnotation(java.lang.String) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName() [ <109:103 109:118>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hasDirectlyAnnotation(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ <109:73 109:99>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hasDirectlyAnnotation(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <109:17 109:25>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hasDirectlyAnnotation(java.lang.String) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [ <109:52 109:56>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hasDirectlyAnnotation(java.lang.String) -> com.github.javaparser.ast.expr.Name com.github.javaparser.ast.expr.AnnotationExpr.getName() [ <109:42 109:48>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hasDirectlyAnnotation(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.typeSolver [ <109:61 109:70>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isInterface() -> boolean com.github.javaparser.symbolsolver.model.declarations.InterfaceDeclaration.isInterface() [ <117:20 117:30>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isInterface() -> java.lang.Override [ <116:6 116:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isInterface() -> boolean [ <117:12 117:18>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.InterfaceDeclaration.getInterfacesExtended() [ <122:32 122:52>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() -> java.lang.Override [ <121:6 121:13>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <122:17 122:29>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <123:14 123:26>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <237:17 237:29>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <238:14 238:26>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() -> java.util.List<E> [ <122:12 122:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() -> java.util.List<E> [ <123:9 123:12>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <122:17 122:29>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <123:14 123:26>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() -> java.util.ArrayList<E>.ArrayList() [ <123:46 123:56>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() -> java.util.ArrayList<E> [ <123:46 123:54>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.getImplementedTypes() [ <124:25 124:43>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.getImplementedTypes() [ <125:55 125:73>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <124:13 124:23>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <125:43 125:53>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() -> com.github.javaparser.ast.type.ClassOrInterfaceType [ <125:18 125:37>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() -> boolean java.util.List<E>.add(java.util.List<E>.E) [ <126:28 126:30>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <126:36 126:52>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <126:36 126:52>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() -> com.github.javaparser.symbolsolver.model.declarations.InterfaceDeclaration com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.asInterface() [ <126:127 126:137>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ <126:97 126:123>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <126:54 126:62>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [ <126:76 126:80>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.ClassOrInterfaceType.getName() [ <126:66 126:72>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.typeSolver [ <126:85 126:94>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.typeSolver [ <126:142 126:151>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getPackageName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getPackageName() [ <133:19 133:32>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getPackageName() -> java.lang.Override [ <132:6 132:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getPackageName() -> java.lang.String [ <133:12 133:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getPackageName() -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter<T>.getPackageName() [ <134:38 134:51>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getPackageName() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.javaParserTypeAdapter [ <134:16 134:36>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getClassName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getClassName() [ <138:19 138:30>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getClassName() -> java.lang.Override [ <137:6 137:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getClassName() -> java.lang.String [ <138:12 138:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getClassName() -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter<T>.getClassName() [ <139:38 139:49>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getClassName() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.javaParserTypeAdapter [ <139:16 139:36>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getQualifiedName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName() [ <143:19 143:34>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getQualifiedName() -> java.lang.Override [ <142:6 142:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getQualifiedName() -> java.lang.String [ <143:12 143:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getQualifiedName() -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter<T>.getQualifiedName() [ <144:38 144:53>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getQualifiedName() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.javaParserTypeAdapter [ <144:16 144:36>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [ <148:20 148:33>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> java.lang.Override [ <147:6 147:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean [ <148:12 148:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <148:35 148:58>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter<T>.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [ <149:38 149:51>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.javaParserTypeAdapter [ <149:16 149:36>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ <153:20 153:33>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.Override [ <152:6 152:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean [ <153:12 153:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <153:35 153:38>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter<T>.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ <154:38 154:51>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.javaParserTypeAdapter [ <154:16 154:36>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [ <158:20 158:34>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> java.lang.Override [ <157:6 157:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean [ <158:12 158:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <158:36 158:59>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <165:17 165:40>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <165:54 165:77>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <174:17 174:40>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <174:54 174:77>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean java.lang.String.equals(java.lang.Object) [ <160:37 160:42>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getQualifiedName() [ <160:18 160:33>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName() [ <160:50 160:65>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.getExtendedTypes() [ <163:30 163:45>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.getExtendedTypes() [ <164:58 164:73>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <163:18 163:28>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <164:46 164:56>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <172:18 172:28>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <173:46 173:56>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.ast.type.ClassOrInterfaceType [ <164:18 164:37>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.ast.type.ClassOrInterfaceType [ <173:18 173:37>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveType(com.github.javaparser.ast.type.Type) [ <165:109 165:117>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveType(com.github.javaparser.ast.type.Type) [ <174:109 174:117>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.resolution.SymbolSolver.SymbolSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <165:84 165:95>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.resolution.SymbolSolver.SymbolSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <174:84 174:95>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.resolution.SymbolSolver [ <165:84 165:95>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.resolution.SymbolSolver [ <174:84 174:95>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.typeSolver [ <165:97 165:106>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.typeSolver [ <174:97 174:106>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [ <166:30 166:44>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [ <175:30 175:44>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.getImplementedTypes() [ <172:30 172:48>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.getImplementedTypes() [ <173:58 173:76>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isTypeParameter() -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isTypeParameter() [ <185:20 185:34>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isTypeParameter() -> java.lang.Override [ <184:6 184:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isTypeParameter() -> boolean [ <185:12 185:18>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAllFields() [ <190:35 190:46>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> java.lang.Override [ <189:6 189:13>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [ <190:17 190:32>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> java.util.List<E> [ <190:12 190:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [ <190:17 190:32>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [ <191:19 191:34>]
REFERENCE_TYPE_ARGUMENT: java.util.ArrayList<E> -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [ <191:19 191:34>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> java.util.ArrayList<E> [ <191:9 191:17>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> java.util.ArrayList<E> [ <191:50 191:58>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> java.util.ArrayList<E>.ArrayList() [ <191:50 191:60>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> com.github.javaparser.ast.body.BodyDeclaration<T> [ <192:14 192:28>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.BodyDeclaration<?>> com.github.javaparser.ast.body.TypeDeclaration<T>.getMembers() [ <192:51 192:60>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <192:39 192:49>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> com.github.javaparser.ast.body.FieldDeclaration [ <193:66 193:81>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> com.github.javaparser.ast.body.FieldDeclaration [ <194:48 194:63>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> com.github.javaparser.ast.body.FieldDeclaration [ <194:105 194:120>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> com.github.javaparser.ast.body.VariableDeclarator [ <195:22 195:39>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.VariableDeclarator> com.github.javaparser.ast.body.FieldDeclaration.getVariables() [ <195:52 195:63>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> boolean java.util.ArrayList<E>.add(java.util.ArrayList<E>.E) [ <196:28 196:30>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserFieldDeclaration.JavaParserFieldDeclaration(com.github.javaparser.ast.body.VariableDeclarator, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <196:36 196:61>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserFieldDeclaration [ <196:36 196:61>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.typeSolver [ <196:67 196:76>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> void java.lang.Iterable<T>.forEach(java.util.function.Consumer<? super T>) [ <201:24 201:30>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() [ <201:9 201:20>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ <202:19 202:36>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ <203:33 203:50>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> boolean java.util.ArrayList<E>.addAll(java.util.Collection<? extends E>) [ <203:24 203:29>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields() -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAllFields() [ <203:54 203:65>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toString() -> java.lang.String java.lang.Object.toString() [ <212:19 212:26>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toString() -> java.lang.Override [ <211:6 211:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toString() -> java.lang.String [ <212:12 212:17>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toString() -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <214:34 214:44>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Deprecated [ <218:6 218:15>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <219:28 219:42>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <223:25 223:39>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <219:12 219:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <223:9 223:23>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <219:28 219:42>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <223:25 223:39>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <219:55 219:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <228:9 228:14>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <219:68 219:77>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [ <220:48 220:53>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [ <220:40 220:44>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName() [ <220:30 220:36>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName() [ <228:37 228:43>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <220:18 220:28>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <228:25 228:35>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <230:60 230:70>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [ <221:36 221:41>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter<T>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <223:70 223:78>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.javaParserTypeAdapter [ <223:48 223:68>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <224:17 224:24>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.startsWith(java.lang.String) [ <229:18 229:27>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int java.lang.String.length() [ <229:45 229:50>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int java.lang.String.length() [ <229:63 229:68>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int java.lang.String.length() [ <230:117 230:122>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <230:85 230:93>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.JavaParserInterfaceDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <230:24 230:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration [ <230:24 230:53>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String java.lang.String.substring(int) [ <230:100 230:108>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <233:41 233:49>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.core.resolution.Context.getParent() [ <233:29 233:37>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getContext() [ <233:16 233:25>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAncestors() [ <237:32 237:43>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() -> java.lang.Override [ <236:6 236:13>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() -> java.util.List<E> [ <237:12 237:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() -> java.util.List<E> [ <238:9 238:12>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <237:17 237:29>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <238:14 238:26>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() -> java.util.ArrayList<E>.ArrayList() [ <238:45 238:55>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() -> java.util.ArrayList<E> [ <238:45 238:53>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.getExtendedTypes() [ <239:25 239:40>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.getExtendedTypes() [ <240:62 240:77>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <239:13 239:23>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <240:50 240:60>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <244:13 244:23>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <245:53 245:63>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() -> com.github.javaparser.ast.type.ClassOrInterfaceType [ <240:18 240:37>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() -> com.github.javaparser.ast.type.ClassOrInterfaceType [ <245:18 245:37>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() -> boolean java.util.List<E>.add(java.util.List<E>.E) [ <241:27 241:29>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() -> boolean java.util.List<E>.add(java.util.List<E>.E) [ <246:27 246:29>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) [ <241:31 241:45>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) [ <246:31 246:45>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.getImplementedTypes() [ <244:25 244:43>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors() -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.getImplementedTypes() [ <245:65 245:83>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getTypeParameters() -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [ <253:43 253:59>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getTypeParameters() -> java.lang.Override [ <252:6 252:13>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <253:17 253:40>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getTypeParameters() -> java.util.List<E> [ <253:12 253:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getTypeParameters() -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ <253:17 253:40>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getTypeParameters() -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.TypeParameter> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.getTypeParameters() [ <254:30 254:46>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getTypeParameters() -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.TypeParameter> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.getTypeParameters() [ <257:37 257:53>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getTypeParameters() -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <254:18 254:28>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getTypeParameters() -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <257:25 257:35>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getTypeParameters() -> static java.util.List<T> java.util.Collections.emptyList<T>() [ <255:32 255:40>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getTypeParameters() -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [ <259:15 259:21>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getTypeParameters() -> java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>) [ <257:66 257:68>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getTypeParameters() -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [ <257:57 257:62>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getTypeParameters() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <258:33 258:55>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getTypeParameters() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter [ <258:33 258:55>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getTypeParameters() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.typeSolver [ <258:61 258:70>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getTypeParameters() -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [ <259:34 259:39>]
REFERENCE_TYPE_USAGE: com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getWrappedNode() -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ <268:12 268:38>]
REFERENCE_USAGE: com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getWrappedNode() -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <269:16 269:26>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.accessLevel() -> com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.model.declarations.HasAccessLevel.accessLevel() [ <273:24 273:34>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.accessLevel() -> java.lang.Override [ <272:6 272:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.accessLevel() -> com.github.javaparser.symbolsolver.model.declarations.AccessLevel [ <273:12 273:22>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.accessLevel() -> static com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper.toAccessLevel(java.util.EnumSet<com.github.javaparser.ast.Modifier>) [ <274:23 274:35>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.accessLevel() -> java.util.EnumSet<com.github.javaparser.ast.Modifier> com.github.javaparser.ast.body.TypeDeclaration<T>.getModifiers() [ <274:49 274:60>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.accessLevel() -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <274:37 274:47>]
REFERENCE_OVERRIDE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes() -> java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.internalTypes() [ <278:42 278:54>]
REFERENCE_ANNOTATION_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes() -> java.lang.Override [ <277:6 277:13>]
REFERENCE_TYPE_ARGUMENT: java.util.Set<E> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <278:16 278:39>]
REFERENCE_TYPE_ARGUMENT: java.util.Set<E> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <279:13 279:36>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes() -> java.util.Set<E> [ <278:12 278:14>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes() -> java.util.Set<E> [ <279:9 279:11>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <278:16 278:39>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <279:13 279:36>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes() -> java.util.HashSet<E>.HashSet() [ <279:49 279:57>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes() -> java.util.HashSet<E> [ <279:49 279:55>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes() -> com.github.javaparser.ast.body.BodyDeclaration<T> [ <280:14 280:28>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes() -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.BodyDeclaration<?>> com.github.javaparser.ast.body.TypeDeclaration<T>.getMembers() [ <280:56 280:65>]
REFERENCE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes() -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.wrappedNode [ <280:44 280:54>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes() -> com.github.javaparser.ast.body.TypeDeclaration<T> [ <281:66 281:80>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes() -> com.github.javaparser.ast.body.TypeDeclaration<T> [ <282:109 282:123>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes() -> boolean java.util.Set<E>.add(java.util.Set<E>.E) [ <282:21 282:23>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.TypeDeclaration<?>) [ <282:58 282:75>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes() -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <282:42 282:44>]
REFERENCE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.typeSolver [ <282:46 282:55>]
REFERENCE_OVERRIDE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.containerType() -> java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.containerType() [ <289:47 289:59>]
REFERENCE_ANNOTATION_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.containerType() -> java.lang.Override [ <288:6 288:13>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <289:21 289:44>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.containerType() -> java.util.Optional<T> [ <289:12 289:19>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.containerType() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <289:21 289:44>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.containerType() -> java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter<T>.containerType() [ <290:38 290:50>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.containerType() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeAdapter com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.javaParserTypeAdapter [ <290:16 290:36>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ <297:13 297:25>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.ast.type.ClassOrInterfaceType [ <297:43 297:62>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> ? extends TypeDeclaration [ <298:25 298:49>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <298:9 298:23>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <298:35 298:49>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> int java.lang.String.indexOf(int) [ <299:45 299:51>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.lang.String com.github.javaparser.ast.Node.toString() [ <299:34 299:41>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.lang.String com.github.javaparser.ast.Node.toString() [ <300:66 300:73>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.lang.String com.github.javaparser.ast.Node.toString() [ <303:50 303:57>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String) [ <300:30 300:43>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.typeSolver [ <300:19 300:28>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.typeSolver [ <303:62 303:71>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.typeSolver [ <306:69 306:78>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.typeSolver [ <312:95 312:104>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.typeSolver [ <315:76 315:85>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.typeSolver [ <317:117 317:126>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <302:33 302:40>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <305:18 305:25>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <308:18 308:25>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <303:19 303:27>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <306:19 306:27>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [ <306:60 306:64>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [ <309:78 309:82>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.ClassOrInterfaceType.getName() [ <306:50 306:56>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.ClassOrInterfaceType.getName() [ <309:68 309:74>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.javaparsermodel.UnsolvedSymbolException.UnsolvedSymbolException(java.lang.String) [ <309:23 309:45>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.javaparsermodel.UnsolvedSymbolException [ <309:23 309:45>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> boolean java.util.Optional<T>.isPresent() [ <311:54 311:62>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.util.Optional<com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.Type>> com.github.javaparser.ast.type.ClassOrInterfaceType.getTypeArguments() [ <311:35 311:50>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.util.Optional<com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.Type>> com.github.javaparser.ast.type.ClassOrInterfaceType.getTypeArguments() [ <314:68 314:83>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <312:24 312:40>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <312:24 312:40>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ <317:20 317:36>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.asReferenceType() [ <312:76 312:90>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.asReferenceType() [ <317:72 317:86>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ <312:46 312:72>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ <317:42 317:68>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <314:14 314:17>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.util.List<E> [ <314:9 314:12>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <314:14 314:17>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [ <316:18 316:24>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>) [ <315:27 315:29>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [ <315:18 315:23>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.util.Optional<T>.T java.util.Optional<T>.get() [ <314:87 314:89>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.typesystem.LazyType.LazyType(java.util.function.Function<java.lang.Void, com.github.javaparser.symbolsolver.model.typesystem.Type>) [ <315:41 315:48>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.typesystem.LazyType [ <315:41 315:48>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node) [ <315:88 315:94>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <315:72 315:74>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [ <316:37 316:42>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <317:20 317:36>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<102:47> [ <102:47 102:47>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<102:47> [ <104:5 104:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<107:64> [ <107:64 107:64>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<107:64> [ <114:5 114:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<108:76> [ <108:76 108:76>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<108:76> [ <112:9 112:9>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<109:145> [ <109:145 109:145>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<109:145> [ <111:13 111:13>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<117:34> [ <117:34 117:34>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<117:34> [ <119:5 119:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<122:56> [ <122:56 122:56>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<122:56> [ <130:5 130:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<124:56> [ <124:56 124:56>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<124:56> [ <128:9 128:9>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<125:78> [ <125:78 125:78>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<125:78> [ <127:13 127:13>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<133:36> [ <133:36 133:36>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<133:36> [ <135:5 135:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<138:34> [ <138:34 138:34>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<138:34> [ <140:5 140:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<143:38> [ <143:38 143:38>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<143:38> [ <145:5 145:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<148:67> [ <148:67 148:67>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<148:67> [ <150:5 150:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<153:46> [ <153:46 153:46>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<153:46> [ <155:5 155:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<158:68> [ <158:68 158:68>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<158:68> [ <182:5 182:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<160:71> [ <160:71 160:71>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<160:71> [ <162:9 162:9>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<163:58> [ <163:58 163:58>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<163:58> [ <170:9 170:9>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<164:78> [ <164:78 164:78>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<164:78> [ <169:13 169:13>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<166:54> [ <166:54 166:54>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<166:54> [ <168:17 168:17>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<172:61> [ <172:61 172:61>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<172:61> [ <179:9 179:9>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<173:81> [ <173:81 173:81>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<173:81> [ <178:13 178:13>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<175:54> [ <175:54 175:54>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<175:54> [ <177:17 177:17>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<185:38> [ <185:38 185:38>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<185:38> [ <187:5 187:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<190:50> [ <190:50 190:50>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<190:50> [ <208:5 208:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<192:65> [ <192:65 192:65>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<192:65> [ <199:9 199:9>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<193:84> [ <193:84 193:84>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<193:84> [ <198:13 198:13>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<195:68> [ <195:68 195:68>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<195:68> [ <197:17 197:17>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<201:37> [ <201:37 201:37>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<201:37> [ <205:9 205:9>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<202:49> [ <202:49 202:49>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<202:49> [ <204:13 204:13>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<212:30> [ <212:30 212:30>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<212:30> [ <216:5 216:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<219:91> [ <219:91 219:91>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<219:91> [ <234:5 234:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<220:62> [ <220:62 220:62>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<220:62> [ <222:9 222:9>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<224:29> [ <224:29 224:29>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<224:29> [ <226:9 226:9>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<229:73> [ <229:73 229:73>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<229:73> [ <231:9 231:9>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<237:47> [ <237:47 237:47>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<237:47> [ <250:5 250:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<239:53> [ <239:53 239:53>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<239:53> [ <243:9 243:9>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<240:82> [ <240:82 240:82>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<240:82> [ <242:13 242:13>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<244:56> [ <244:56 244:56>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<244:56> [ <248:9 248:9>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<245:88> [ <245:88 245:88>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<245:88> [ <247:13 247:13>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<253:63> [ <253:63 253:63>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<253:63> [ <261:5 261:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<254:59> [ <254:59 254:59>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<254:59> [ <256:9 256:9>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<256:16> [ <256:16 256:16>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<256:16> [ <260:9 260:9>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<268:57> [ <268:57 268:57>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<268:57> [ <270:5 270:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<273:38> [ <273:38 273:38>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<273:38> [ <275:5 275:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<278:58> [ <278:58 278:58>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<278:58> [ <286:5 286:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<280:70> [ <280:70 280:70>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<280:70> [ <284:9 284:9>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<281:83> [ <281:83 281:83>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<281:83> [ <283:13 283:13>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<289:63> [ <289:63 289:63>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<289:63> [ <291:5 291:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<297:86> [ <297:86 297:86>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<297:86> [ <318:5 318:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<299:64> [ <299:64 299:64>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<299:64> [ <301:9 301:9>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<302:45> [ <302:45 302:45>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<302:45> [ <304:9 304:9>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<305:30> [ <305:30 305:30>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<305:30> [ <307:9 307:9>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<308:30> [ <308:30 308:30>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<308:30> [ <310:9 310:9>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<311:67> [ <311:67 311:67>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<311:67> [ <313:9 313:9>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<45:109> [ <45:109 45:109>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<45:109> [ <319:1 319:1>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<51:107> [ <51:107 51:107>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<51:107> [ <58:5 58:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<52:41> [ <52:41 52:41>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<52:41> [ <54:9 54:9>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<61:56> [ <61:56 61:56>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<61:56> [ <69:5 69:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<63:65> [ <63:65 63:65>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<63:65> [ <67:9 67:9>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<64:85> [ <64:85 64:85>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<64:85> [ <66:13 66:13>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<71:33> [ <71:33 71:33>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<71:33> [ <73:5 73:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<75:37> [ <75:37 75:37>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<75:37> [ <77:5 77:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<80:37> [ <80:37 80:37>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<80:37> [ <89:5 89:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<92:27> [ <92:27 92:27>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<92:27> [ <94:5 94:5>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<97:29> [ <97:29 97:29>]
LOCAL_SYMBOL: JavaParserInterfaceDeclaration.java<97:29> [ <99:5 99:5>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.JavaParserInterfaceDeclaration<0> [ <51:71 51:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.JavaParserInterfaceDeclaration<0> [ <52:14 52:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.JavaParserInterfaceDeclaration<0> [ <55:28 55:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.JavaParserInterfaceDeclaration<0> [ <57:64 57:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.JavaParserInterfaceDeclaration<1> [ <51:95 51:104>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.JavaParserInterfaceDeclaration<1> [ <56:27 56:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.JavaParserInterfaceDeclaration<1> [ <57:77 57:86>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo<0> [ <158:61 158:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo<0> [ <160:44 160:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo<0> [ <166:46 166:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo<0> [ <175:46 175:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo<1> [ <164:39 164:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo<1> [ <165:119 165:122>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo<3> [ <165:42 165:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo<3> [ <166:21 166:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo<4> [ <173:39 173:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo<4> [ <174:119 174:122>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo<6> [ <174:42 174:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.canBeAssignedTo<6> [ <175:21 175:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.equals<0> [ <80:34 80:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.equals<0> [ <81:21 81:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.equals<0> [ <82:13 82:13>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.equals<0> [ <82:40 82:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.equals<0> [ <84:80 84:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.equals<1> [ <84:40 84:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.equals<1> [ <86:33 86:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields<0> [ <191:37 191:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields<0> [ <196:21 196:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields<0> [ <203:17 203:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields<0> [ <207:16 207:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields<1> [ <192:30 192:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields<1> [ <193:17 193:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields<1> [ <194:123 194:128>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields<3> [ <194:65 194:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields<3> [ <195:46 195:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields<4> [ <195:41 195:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAllFields<4> [ <196:63 196:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors<0> [ <238:29 238:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors<0> [ <241:17 241:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors<0> [ <246:17 246:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors<0> [ <249:16 249:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors<1> [ <240:39 240:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors<1> [ <241:47 241:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors<3> [ <245:39 245:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getAncestors<3> [ <246:47 246:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods<0> [ <62:32 62:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods<0> [ <65:17 65:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods<0> [ <68:16 68:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods<1> [ <63:30 63:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods<1> [ <64:17 64:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getDeclaredMethods<1> [ <65:112 65:117>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended<0> [ <123:29 123:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended<0> [ <126:17 126:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended<0> [ <129:16 129:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended<1> [ <125:39 125:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getInterfacesExtended<1> [ <126:64 126:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getUsage<0> [ <75:31 75:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hasDirectlyAnnotation<0> [ <107:49 107:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hasDirectlyAnnotation<0> [ <109:129 109:141>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hasDirectlyAnnotation<1> [ <108:29 108:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.hasDirectlyAnnotation<1> [ <109:27 109:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes<0> [ <279:39 279:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes<0> [ <282:17 282:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes<0> [ <285:16 285:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes<1> [ <280:30 280:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes<1> [ <281:17 281:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.internalTypes<1> [ <282:125 282:130>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isAssignableBy<0> [ <148:60 148:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isAssignableBy<0> [ <149:53 149:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isAssignableBy<0> [ <153:40 153:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.isAssignableBy<0> [ <154:53 154:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType<0> [ <219:62 219:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType<0> [ <220:55 220:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType<0> [ <223:80 223:83>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType<0> [ <229:13 229:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType<0> [ <229:40 229:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType<0> [ <230:95 230:98>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType<0> [ <233:51 233:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType<1> [ <219:79 219:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType<1> [ <223:86 223:95>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType<1> [ <230:73 230:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType<1> [ <230:128 230:137>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType<1> [ <233:57 233:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType<2> [ <223:42 223:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType<2> [ <224:13 224:15>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType<2> [ <225:20 225:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType<3> [ <228:16 228:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType<3> [ <229:29 229:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType<3> [ <229:56 229:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.solveType<3> [ <230:110 230:115>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType<0> [ <297:64 297:83>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType<0> [ <299:13 299:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType<0> [ <300:45 300:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType<0> [ <303:29 303:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType<0> [ <306:29 306:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType<0> [ <309:47 309:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType<0> [ <311:14 311:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType<0> [ <314:47 314:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType<1> [ <298:52 298:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType<1> [ <300:13 300:15>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType<1> [ <302:13 302:15>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType<1> [ <302:29 302:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType<1> [ <303:13 303:15>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType<1> [ <305:14 305:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType<1> [ <306:13 306:15>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType<1> [ <308:14 308:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType<1> [ <312:42 312:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType<1> [ <317:38 317:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType<2> [ <314:20 314:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.toReferenceType<2> [ <317:91 317:114>]
LOCAL_SYMBOL: java.util.function.Consumer<T>.accept<7> [ <201:32 201:32>]
LOCAL_SYMBOL: java.util.function.Consumer<T>.accept<7> [ <202:17 202:17>]
LOCAL_SYMBOL: java.util.function.Consumer<T>.accept<7> [ <203:31 203:31>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<1> [ <258:22 258:23>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<1> [ <258:57 258:58>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<6> [ <315:31 315:32>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<6> [ <315:96 315:97>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<6> [ <315:100 315:101>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<8> [ <315:50 315:50>]
COMMENT: comment [ <1:1 15:3>]
COMMENT: comment [ <42:1 44:3>]
COMMENT: comment [ <159:9 159:38>]
COMMENT: comment [ <263:5 267:7>]
COMMENT: comment [ <293:5 293:7>]
COMMENT: comment [ <294:5 294:23>]
COMMENT: comment [ <295:5 295:7>]
