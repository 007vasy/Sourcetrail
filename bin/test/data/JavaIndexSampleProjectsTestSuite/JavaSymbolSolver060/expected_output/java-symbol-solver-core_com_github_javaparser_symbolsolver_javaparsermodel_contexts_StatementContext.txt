FILE: StatementContext.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts [ <17:60 17:67>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <17:44 17:58>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <24:43 24:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel
QUALIFIER: com.github.javaparser.symbolsolver [ <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ <23:30 23:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <24:30 24:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <25:30 25:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <26:30 26:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <27:30 27:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <28:30 28:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <29:30 29:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <30:30 30:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <31:30 31:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <32:30 32:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <37:37 37:48>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ <17:20 17:29>]
QUALIFIER: com.github.javaparser [ <19:19 19:28>]
QUALIFIER: com.github.javaparser [ <20:19 20:28>]
QUALIFIER: com.github.javaparser [ <21:19 21:28>]
QUALIFIER: com.github.javaparser [ <22:19 22:28>]
QUALIFIER: com.github.javaparser [ <23:19 23:28>]
QUALIFIER: com.github.javaparser [ <24:19 24:28>]
QUALIFIER: com.github.javaparser [ <25:19 25:28>]
QUALIFIER: com.github.javaparser [ <26:19 26:28>]
QUALIFIER: com.github.javaparser [ <27:19 27:28>]
QUALIFIER: com.github.javaparser [ <28:19 28:28>]
QUALIFIER: com.github.javaparser [ <29:19 29:28>]
QUALIFIER: com.github.javaparser [ <30:19 30:28>]
QUALIFIER: com.github.javaparser [ <31:19 31:28>]
QUALIFIER: com.github.javaparser [ <32:19 32:28>]
QUALIFIER: com.github.javaparser [ <37:26 37:35>]
QUALIFIER: com.github.javaparser [ <111:62 111:71>]
QUALIFIER: com.github.javaparser [ <157:62 157:71>]
QUALIFIER: com.github.javaparser [ <160:62 160:71>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ <17:13 17:18>]
QUALIFIER: com.github [ <19:12 19:17>]
QUALIFIER: com.github [ <20:12 20:17>]
QUALIFIER: com.github [ <21:12 21:17>]
QUALIFIER: com.github [ <22:12 22:17>]
QUALIFIER: com.github [ <23:12 23:17>]
QUALIFIER: com.github [ <24:12 24:17>]
QUALIFIER: com.github [ <25:12 25:17>]
QUALIFIER: com.github [ <26:12 26:17>]
QUALIFIER: com.github [ <27:12 27:17>]
QUALIFIER: com.github [ <28:12 28:17>]
QUALIFIER: com.github [ <29:12 29:17>]
QUALIFIER: com.github [ <30:12 30:17>]
QUALIFIER: com.github [ <31:12 31:17>]
QUALIFIER: com.github [ <32:12 32:17>]
QUALIFIER: com.github [ <37:19 37:24>]
QUALIFIER: com.github [ <111:55 111:60>]
QUALIFIER: com.github [ <157:55 157:60>]
QUALIFIER: com.github [ <160:55 160:60>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ <17:9 17:11>]
QUALIFIER: com [ <19:8 19:10>]
QUALIFIER: com [ <20:8 20:10>]
QUALIFIER: com [ <21:8 21:10>]
QUALIFIER: com [ <22:8 22:10>]
QUALIFIER: com [ <23:8 23:10>]
QUALIFIER: com [ <24:8 24:10>]
QUALIFIER: com [ <25:8 25:10>]
QUALIFIER: com [ <26:8 26:10>]
QUALIFIER: com [ <27:8 27:10>]
QUALIFIER: com [ <28:8 28:10>]
QUALIFIER: com [ <29:8 29:10>]
QUALIFIER: com [ <30:8 30:10>]
QUALIFIER: com [ <31:8 31:10>]
QUALIFIER: com [ <32:8 32:10>]
QUALIFIER: com [ <37:15 37:17>]
QUALIFIER: com [ <111:51 111:53>]
QUALIFIER: com [ <157:51 157:53>]
QUALIFIER: com [ <160:51 160:53>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.ast.expr [ <19:34 19:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.expr
QUALIFIER: com.github.javaparser.ast [ <19:30 19:32>]
QUALIFIER: com.github.javaparser.ast [ <20:30 20:32>]
QUALIFIER: com.github.javaparser.ast [ <21:30 21:32>]
QUALIFIER: com.github.javaparser.ast [ <22:30 22:32>]
QUALIFIER: com.github.javaparser.ast [ <111:73 111:75>]
QUALIFIER: com.github.javaparser.ast [ <157:73 157:75>]
QUALIFIER: com.github.javaparser.ast [ <160:73 160:75>]
SYMBOL_PACKAGE: com.github.javaparser.ast
QUALIFIER: com.github.javaparser.ast.nodeTypes [ <20:34 20:42>]
SYMBOL_PACKAGE: com.github.javaparser.ast.nodeTypes
QUALIFIER: com.github.javaparser.ast.stmt [ <21:34 21:37>]
QUALIFIER: com.github.javaparser.ast.stmt [ <22:34 22:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.stmt
QUALIFIER: com.github.javaparser.symbolsolver.core.resolution [ <23:48 23:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.core.resolution
QUALIFIER: com.github.javaparser.symbolsolver.core [ <23:43 23:46>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.core
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [ <63:49 63:65>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [ <71:16 71:32>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [ <89:49 89:65>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [ <97:16 97:32>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [ <104:45 104:61>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [ <134:32 134:48>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [ <150:45 150:61>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [ <180:32 180:48>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <25:49 25:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <26:49 26:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <27:49 27:60>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [ <25:43 25:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <26:43 26:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <27:43 27:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <28:43 28:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <29:43 29:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <30:43 30:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <31:43 31:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <28:49 28:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <29:49 29:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <30:49 30:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.Value [ <92:36 92:40>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <31:49 31:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem
QUALIFIER: com.github.javaparser.symbolsolver.resolution [ <32:43 32:52>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.resolution
QUALIFIER: java.util [ <34:13 34:16>]
QUALIFIER: java.util [ <35:13 35:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [ <34:8 34:11>]
QUALIFIER: java [ <35:8 35:11>]
SYMBOL_PACKAGE: java
SYMBOL_METHOD: static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node)
QUALIFIER: com.github.javaparser.symbolsolver.javaparser.Navigator [ <37:61 37:69>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparser [ <37:50 37:59>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparser
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N> [ <42:1 <42:14 42:29> 200:1>]
SYMBOL_TYPE_PARAMETER: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.N [ <42:31 42:31>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.StatementContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <44:5 <44:5 <44:12 44:27> 44:65> 46:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) [ <48:5 <48:5 <48:63 48:74> 48:126> 72:5>]
SYMBOL_PACKAGE: java.lang
SYMBOL_METHOD: java.lang.IllegalArgumentException.IllegalArgumentException()
SYMBOL_BUILTIN_TYPE: int
SYMBOL_METHOD: int com.github.javaparser.ast.NodeList<N>.size()
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.stmt.Statement> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N>.getStatements()
SYMBOL_METHOD: boolean com.github.javaparser.ast.Node.equals(java.lang.Object)
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<N>.N com.github.javaparser.ast.NodeList<N>.get(int)
SYMBOL_METHOD: java.lang.RuntimeException.RuntimeException()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveWith(com.github.javaparser.symbolsolver.resolution.SymbolDeclarator, java.lang.String)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) [ <74:5 <74:5 <74:35 74:53> 74:105> 98:5>]
SYMBOL_METHOD: static java.util.Optional<T> java.util.Optional<T>.of<T>(T)
QUALIFIER: java.util.Optional [ <92:24 92:31>]
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.Value com.github.javaparser.symbolsolver.model.resolution.Value.from(com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration()
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <100:5 <100:5 <101:28 101:45> 101:81> 144:5>]
SYMBOL_FIELD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveWithAsValue(com.github.javaparser.symbolsolver.resolution.SymbolDeclarator, java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: boolean java.util.Optional<T>.isPresent()
QUALIFIER: com.github.javaparser.ast.body [ <111:77 111:80>]
QUALIFIER: com.github.javaparser.ast.body [ <157:77 157:80>]
QUALIFIER: com.github.javaparser.ast.body [ <160:77 160:80>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <146:5 <146:5 <147:56 147:66> 147:102> 189:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <191:5 <191:5 <192:47 192:57> 192:140> 194:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <196:5 <196:5 <197:45 197:53> 197:89> 199:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_IMPORT: StatementContext.java -> com.github.javaparser.ast.expr.LambdaExpr [ <19:39 19:48>]
REFERENCE_IMPORT: StatementContext.java -> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N> [ <20:44 20:61>]
REFERENCE_IMPORT: StatementContext.java -> com.github.javaparser.ast.stmt.IfStmt [ <21:39 21:44>]
REFERENCE_IMPORT: StatementContext.java -> com.github.javaparser.ast.stmt.Statement [ <22:39 22:47>]
REFERENCE_IMPORT: StatementContext.java -> com.github.javaparser.symbolsolver.core.resolution.Context [ <23:59 23:65>]
REFERENCE_IMPORT: StatementContext.java -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [ <24:59 24:75>]
REFERENCE_IMPORT: StatementContext.java -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <25:62 25:78>]
REFERENCE_IMPORT: StatementContext.java -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <26:62 26:76>]
REFERENCE_IMPORT: StatementContext.java -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [ <27:62 27:77>]
REFERENCE_IMPORT: StatementContext.java -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <28:60 28:74>]
REFERENCE_IMPORT: StatementContext.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <29:60 29:69>]
REFERENCE_IMPORT: StatementContext.java -> com.github.javaparser.symbolsolver.model.resolution.Value [ <30:60 30:64>]
REFERENCE_IMPORT: StatementContext.java -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <31:60 31:63>]
REFERENCE_IMPORT: StatementContext.java -> com.github.javaparser.symbolsolver.resolution.SymbolDeclarator [ <32:54 32:69>]
REFERENCE_IMPORT: StatementContext.java -> java.util.List<E> [ <34:18 34:21>]
REFERENCE_IMPORT: StatementContext.java -> java.util.Optional<T> [ <35:18 35:25>]
REFERENCE_IMPORT: StatementContext.java -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <37:71 37:83>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.N -> com.github.javaparser.ast.stmt.Statement [ <42:41 42:49>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N> -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.N [ <42:86 42:86>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N> -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N> [ <42:60 42:84>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N> -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.N [ <42:86 42:86>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.StatementContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <44:12 44:27>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.StatementContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.N [ <44:29 44:29>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.StatementContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <44:44 44:53>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.StatementContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <45:9 45:13>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> ? extends ValueDeclaration [ <48:35 48:60>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> ? extends ValueDeclaration [ <64:29 64:54>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> ? extends ValueDeclaration [ <90:29 90:54>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> ? extends ValueDeclaration [ <147:28 147:53>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> ? extends ValueDeclaration [ <151:25 151:50>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <48:19 48:33>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <64:13 64:27>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [ <48:45 48:60>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [ <64:39 64:54>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> java.lang.String [ <48:76 48:81>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <48:89 48:98>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.ast.stmt.Statement [ <48:112 48:120>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <49:15 49:27>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <52:67 52:79>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <71:45 71:57>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N> [ <49:46 49:63>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N> [ <52:9 52:26>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N> [ <52:44 52:61>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> java.lang.IllegalArgumentException.IllegalArgumentException() [ <50:23 50:46>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> java.lang.IllegalArgumentException [ <50:23 50:46>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.nodeTypes.NodeWithStatements<N> -> ? [ <52:28 52:28>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.nodeTypes.NodeWithStatements<N> -> ? [ <52:63 52:63>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.nodeTypes.NodeWithStatements<N> -> ? [ <78:28 78:28>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.nodeTypes.NodeWithStatements<N> -> ? [ <78:63 78:63>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.nodeTypes.NodeWithStatements<N> -> ? [ <123:28 123:28>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.nodeTypes.NodeWithStatements<N> -> ? [ <123:66 123:66>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.nodeTypes.NodeWithStatements<N> -> ? [ <169:28 169:28>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.nodeTypes.NodeWithStatements<N> -> ? [ <169:66 169:66>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> int [ <53:9 53:11>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> int [ <54:14 54:16>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> int [ <62:14 62:16>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> int com.github.javaparser.ast.NodeList<N>.size() [ <54:55 54:58>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.stmt.Statement> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N>.getStatements() [ <54:39 54:51>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.stmt.Statement> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N>.getStatements() [ <55:27 55:39>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.stmt.Statement> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N>.getStatements() [ <63:97 63:109>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> boolean com.github.javaparser.ast.Node.equals(java.lang.Object) [ <55:50 55:55>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.ast.NodeList<N>.N com.github.javaparser.ast.NodeList<N>.get(int) [ <55:43 55:45>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.ast.NodeList<N>.N com.github.javaparser.ast.NodeList<N>.get(int) [ <63:113 63:115>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> java.lang.RuntimeException.RuntimeException() [ <60:23 60:38>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> java.lang.RuntimeException [ <60:23 60:38>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.symbolsolver.resolution.SymbolDeclarator [ <63:13 63:28>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <63:67 63:85>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveWith(com.github.javaparser.symbolsolver.resolution.SymbolDeclarator, java.lang.String) [ <64:75 64:83>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <65:33 65:40>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <71:78 71:88>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <71:34 71:43>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.resolution.Value [ <74:28 74:32>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.resolution.Value [ <101:21 101:25>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.resolution.Value [ <105:18 105:22>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> java.util.Optional<T> [ <74:19 74:26>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.symbolsolver.model.resolution.Value [ <74:28 74:32>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> java.lang.String [ <74:55 74:60>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <74:68 74:77>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.ast.stmt.Statement [ <74:91 74:99>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <75:15 75:27>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <78:67 78:79>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <97:45 97:57>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N> [ <75:46 75:63>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N> [ <78:9 78:26>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N> [ <78:44 78:61>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> java.lang.IllegalArgumentException.IllegalArgumentException() [ <76:23 76:46>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> java.lang.IllegalArgumentException [ <76:23 76:46>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> int [ <79:9 79:11>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> int [ <80:14 80:16>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> int [ <88:14 88:16>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> int com.github.javaparser.ast.NodeList<N>.size() [ <80:55 80:58>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.stmt.Statement> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N>.getStatements() [ <80:39 80:51>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.stmt.Statement> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N>.getStatements() [ <81:27 81:39>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.stmt.Statement> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N>.getStatements() [ <89:97 89:109>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> boolean com.github.javaparser.ast.Node.equals(java.lang.Object) [ <81:50 81:55>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.ast.NodeList<N>.N com.github.javaparser.ast.NodeList<N>.get(int) [ <81:43 81:45>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.ast.NodeList<N>.N com.github.javaparser.ast.NodeList<N>.get(int) [ <89:113 89:115>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> java.lang.RuntimeException.RuntimeException() [ <86:23 86:38>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> java.lang.RuntimeException [ <86:23 86:38>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.symbolsolver.resolution.SymbolDeclarator [ <89:13 89:28>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <89:67 89:85>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <90:13 90:27>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [ <90:39 90:54>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveWith(com.github.javaparser.symbolsolver.resolution.SymbolDeclarator, java.lang.String) [ <90:75 90:83>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <91:33 91:40>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> static java.util.Optional<T> java.util.Optional<T>.of<T>(T) [ <92:33 92:34>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> static com.github.javaparser.symbolsolver.model.resolution.Value com.github.javaparser.symbolsolver.model.resolution.Value.from(com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration) [ <92:42 92:45>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ <92:63 92:89>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <97:78 97:95>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.ast.stmt.Statement) -> static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <97:34 97:43>]
REFERENCE_OVERRIDE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <101:28 101:45>]
REFERENCE_ANNOTATION_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <100:6 100:13>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T> [ <101:12 101:19>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T> [ <105:9 105:16>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.Value [ <101:21 101:25>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.Value [ <105:18 105:22>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <101:47 101:52>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <101:60 101:69>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolDeclarator [ <104:9 104:24>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <104:63 104:81>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <134:50 134:68>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <104:83 104:93>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <111:27 111:37>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <114:27 114:37>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <117:27 117:37>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <120:29 120:39>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <123:84 123:94>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <126:60 126:70>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveWithAsValue(com.github.javaparser.symbolsolver.resolution.SymbolDeclarator, java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <105:43 105:58>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveWithAsValue(com.github.javaparser.symbolsolver.resolution.SymbolDeclarator, java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <135:31 135:46>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.Optional<T>.isPresent() [ <106:29 106:37>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.Optional<T>.isPresent() [ <136:33 136:41>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <111:13 111:25>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <114:13 114:25>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <117:13 117:25>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <120:15 120:27>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <123:70 123:82>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.MethodDeclaration [ <111:82 111:98>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <112:32 112:49>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <115:32 115:49>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <118:32 118:49>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <121:32 121:49>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <143:30 143:47>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ <112:20 112:28>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ <115:20 115:28>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ <118:20 118:28>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ <121:20 121:28>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ <142:33 142:41>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.LambdaExpr [ <114:51 114:60>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.stmt.IfStmt [ <117:51 117:56>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N> [ <120:53 120:70>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N> [ <123:9 123:26>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N> [ <123:47 123:64>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int [ <124:9 124:11>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int [ <125:14 125:16>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int [ <133:14 133:16>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int com.github.javaparser.ast.NodeList<N>.size() [ <125:58 125:61>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.stmt.Statement> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N>.getStatements() [ <125:42 125:54>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.stmt.Statement> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N>.getStatements() [ <126:30 126:42>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.stmt.Statement> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N>.getStatements() [ <134:83 134:95>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.ast.Node.equals(java.lang.Object) [ <126:53 126:58>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<N>.N com.github.javaparser.ast.NodeList<N>.get(int) [ <126:46 126:48>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<N>.N com.github.javaparser.ast.NodeList<N>.get(int) [ <134:99 134:101>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.RuntimeException.RuntimeException() [ <131:23 131:38>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.RuntimeException [ <131:23 131:38>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context [ <142:9 142:15>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <147:56 147:66>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <146:6 146:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <147:12 147:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <151:9 151:23>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [ <147:38 147:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [ <151:35 151:50>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <147:68 147:73>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <147:81 147:90>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolDeclarator [ <150:9 150:24>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <150:63 150:81>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.resolution.SymbolDeclarator com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getSymbolDeclarator(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <180:50 180:68>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <150:83 150:93>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <157:27 157:37>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <160:27 160:37>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <163:27 163:37>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <166:29 166:39>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <169:84 169:94>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <172:60 172:70>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveWith(com.github.javaparser.symbolsolver.resolution.SymbolDeclarator, java.lang.String) [ <151:71 151:79>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveWith(com.github.javaparser.symbolsolver.resolution.SymbolDeclarator, java.lang.String) [ <181:31 181:39>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <152:29 152:36>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <182:33 182:40>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <157:13 157:25>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <160:13 160:25>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <163:13 163:25>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <166:15 166:27>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [ <169:70 169:82>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.MethodDeclaration [ <157:82 157:98>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <158:32 158:42>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <161:32 161:42>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <164:32 164:42>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <167:32 167:42>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <188:28 188:38>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ <158:20 158:28>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ <161:20 161:28>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ <164:20 164:28>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ <167:20 167:28>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ <188:16 188:24>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.ConstructorDeclaration [ <160:82 160:103>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.LambdaExpr [ <163:51 163:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N> [ <166:53 166:70>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N> [ <169:9 169:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N> [ <169:47 169:64>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int [ <170:9 170:11>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int [ <171:14 171:16>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int [ <179:14 179:16>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int com.github.javaparser.ast.NodeList<N>.size() [ <171:58 171:61>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.stmt.Statement> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N>.getStatements() [ <171:42 171:54>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.stmt.Statement> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N>.getStatements() [ <172:30 172:42>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.stmt.Statement> com.github.javaparser.ast.nodeTypes.NodeWithStatements<N>.getStatements() [ <180:83 180:95>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.ast.Node.equals(java.lang.Object) [ <172:53 172:58>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<N>.N com.github.javaparser.ast.NodeList<N>.get(int) [ <172:46 172:48>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<N>.N com.github.javaparser.ast.NodeList<N>.get(int) [ <180:99 180:101>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.RuntimeException.RuntimeException() [ <177:23 177:38>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.RuntimeException [ <177:23 177:38>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <192:47 192:57>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <191:6 191:13>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <192:28 192:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <192:12 192:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <192:28 192:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <192:59 192:64>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <192:77 192:80>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [ <192:72 192:75>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <192:77 192:80>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [ <192:99 192:105>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <192:119 192:128>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <193:28 193:38>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ <193:16 193:24>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <197:45 197:53>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <196:6 196:13>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <197:28 197:42>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <197:12 197:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <197:28 197:42>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <197:55 197:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <197:68 197:77>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <198:28 198:36>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ <198:16 198:24>]
LOCAL_SYMBOL: StatementContext.java<101:83> [ <101:83 101:83>]
LOCAL_SYMBOL: StatementContext.java<101:83> [ <144:5 144:5>]
LOCAL_SYMBOL: StatementContext.java<106:42> [ <106:42 106:42>]
LOCAL_SYMBOL: StatementContext.java<106:42> [ <108:9 108:9>]
LOCAL_SYMBOL: StatementContext.java<111:101> [ <111:101 111:101>]
LOCAL_SYMBOL: StatementContext.java<111:101> [ <113:9 113:9>]
LOCAL_SYMBOL: StatementContext.java<114:63> [ <114:63 114:63>]
LOCAL_SYMBOL: StatementContext.java<114:63> [ <116:9 116:9>]
LOCAL_SYMBOL: StatementContext.java<117:59> [ <117:59 117:59>]
LOCAL_SYMBOL: StatementContext.java<117:59> [ <119:9 119:9>]
LOCAL_SYMBOL: StatementContext.java<120:74> [ <120:74 120:74>]
LOCAL_SYMBOL: StatementContext.java<120:74> [ <122:9 122:9>]
LOCAL_SYMBOL: StatementContext.java<125:71> [ <125:71 125:71>]
LOCAL_SYMBOL: StatementContext.java<125:71> [ <129:9 129:9>]
LOCAL_SYMBOL: StatementContext.java<126:74> [ <126:74 126:74>]
LOCAL_SYMBOL: StatementContext.java<126:74> [ <128:13 128:13>]
LOCAL_SYMBOL: StatementContext.java<130:29> [ <130:29 130:29>]
LOCAL_SYMBOL: StatementContext.java<130:29> [ <132:9 132:9>]
LOCAL_SYMBOL: StatementContext.java<133:49> [ <133:49 133:49>]
LOCAL_SYMBOL: StatementContext.java<133:49> [ <139:9 139:9>]
LOCAL_SYMBOL: StatementContext.java<136:46> [ <136:46 136:46>]
LOCAL_SYMBOL: StatementContext.java<136:46> [ <138:13 138:13>]
LOCAL_SYMBOL: StatementContext.java<147:104> [ <147:104 147:104>]
LOCAL_SYMBOL: StatementContext.java<147:104> [ <189:5 189:5>]
LOCAL_SYMBOL: StatementContext.java<152:41> [ <152:41 152:41>]
LOCAL_SYMBOL: StatementContext.java<152:41> [ <154:9 154:9>]
LOCAL_SYMBOL: StatementContext.java<157:101> [ <157:101 157:101>]
LOCAL_SYMBOL: StatementContext.java<157:101> [ <159:9 159:9>]
LOCAL_SYMBOL: StatementContext.java<160:106> [ <160:106 160:106>]
LOCAL_SYMBOL: StatementContext.java<160:106> [ <162:9 162:9>]
LOCAL_SYMBOL: StatementContext.java<163:63> [ <163:63 163:63>]
LOCAL_SYMBOL: StatementContext.java<163:63> [ <165:9 165:9>]
LOCAL_SYMBOL: StatementContext.java<166:74> [ <166:74 166:74>]
LOCAL_SYMBOL: StatementContext.java<166:74> [ <168:9 168:9>]
LOCAL_SYMBOL: StatementContext.java<171:71> [ <171:71 171:71>]
LOCAL_SYMBOL: StatementContext.java<171:71> [ <175:9 175:9>]
LOCAL_SYMBOL: StatementContext.java<172:74> [ <172:74 172:74>]
LOCAL_SYMBOL: StatementContext.java<172:74> [ <174:13 174:13>]
LOCAL_SYMBOL: StatementContext.java<176:29> [ <176:29 176:29>]
LOCAL_SYMBOL: StatementContext.java<176:29> [ <178:9 178:9>]
LOCAL_SYMBOL: StatementContext.java<179:49> [ <179:49 179:49>]
LOCAL_SYMBOL: StatementContext.java<179:49> [ <185:9 185:9>]
LOCAL_SYMBOL: StatementContext.java<182:45> [ <182:45 182:45>]
LOCAL_SYMBOL: StatementContext.java<182:45> [ <184:13 184:13>]
LOCAL_SYMBOL: StatementContext.java<192:142> [ <192:142 192:142>]
LOCAL_SYMBOL: StatementContext.java<192:142> [ <194:5 194:5>]
LOCAL_SYMBOL: StatementContext.java<197:91> [ <197:91 197:91>]
LOCAL_SYMBOL: StatementContext.java<197:91> [ <199:5 199:5>]
LOCAL_SYMBOL: StatementContext.java<42:89> [ <42:89 42:89>]
LOCAL_SYMBOL: StatementContext.java<42:89> [ <200:1 200:1>]
LOCAL_SYMBOL: StatementContext.java<44:67> [ <44:67 44:67>]
LOCAL_SYMBOL: StatementContext.java<44:67> [ <46:5 46:5>]
LOCAL_SYMBOL: StatementContext.java<48:128> [ <48:128 48:128>]
LOCAL_SYMBOL: StatementContext.java<48:128> [ <72:5 72:5>]
LOCAL_SYMBOL: StatementContext.java<49:67> [ <49:67 49:67>]
LOCAL_SYMBOL: StatementContext.java<49:67> [ <51:9 51:9>]
LOCAL_SYMBOL: StatementContext.java<54:68> [ <54:68 54:68>]
LOCAL_SYMBOL: StatementContext.java<54:68> [ <58:9 58:9>]
LOCAL_SYMBOL: StatementContext.java<55:64> [ <55:64 55:64>]
LOCAL_SYMBOL: StatementContext.java<55:64> [ <57:13 57:13>]
LOCAL_SYMBOL: StatementContext.java<59:29> [ <59:29 59:29>]
LOCAL_SYMBOL: StatementContext.java<59:29> [ <61:9 61:9>]
LOCAL_SYMBOL: StatementContext.java<62:49> [ <62:49 62:49>]
LOCAL_SYMBOL: StatementContext.java<62:49> [ <68:9 68:9>]
LOCAL_SYMBOL: StatementContext.java<65:45> [ <65:45 65:45>]
LOCAL_SYMBOL: StatementContext.java<65:45> [ <67:13 67:13>]
LOCAL_SYMBOL: StatementContext.java<74:107> [ <74:107 74:107>]
LOCAL_SYMBOL: StatementContext.java<74:107> [ <98:5 98:5>]
LOCAL_SYMBOL: StatementContext.java<75:67> [ <75:67 75:67>]
LOCAL_SYMBOL: StatementContext.java<75:67> [ <77:9 77:9>]
LOCAL_SYMBOL: StatementContext.java<80:68> [ <80:68 80:68>]
LOCAL_SYMBOL: StatementContext.java<80:68> [ <84:9 84:9>]
LOCAL_SYMBOL: StatementContext.java<81:64> [ <81:64 81:64>]
LOCAL_SYMBOL: StatementContext.java<81:64> [ <83:13 83:13>]
LOCAL_SYMBOL: StatementContext.java<85:29> [ <85:29 85:29>]
LOCAL_SYMBOL: StatementContext.java<85:29> [ <87:9 87:9>]
LOCAL_SYMBOL: StatementContext.java<88:49> [ <88:49 88:49>]
LOCAL_SYMBOL: StatementContext.java<88:49> [ <94:9 94:9>]
LOCAL_SYMBOL: StatementContext.java<91:45> [ <91:45 91:45>]
LOCAL_SYMBOL: StatementContext.java<91:45> [ <93:13 93:13>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.StatementContext<0> [ <44:31 44:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.StatementContext<0> [ <45:15 45:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.StatementContext<1> [ <44:55 44:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.StatementContext<1> [ <45:28 45:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<0> [ <48:83 48:86>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<0> [ <64:103 64:106>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<0> [ <71:90 71:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<1> [ <48:100 48:109>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<1> [ <63:121 63:130>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<1> [ <71:66 71:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<1> [ <71:96 71:105>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<2> [ <48:122 48:125>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<2> [ <49:29 49:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<2> [ <52:81 52:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<2> [ <55:57 55:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<2> [ <71:59 71:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<3> [ <52:31 52:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<3> [ <54:29 54:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<3> [ <55:17 55:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<3> [ <63:87 63:95>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<4> [ <53:13 53:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<4> [ <56:17 56:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<4> [ <59:13 59:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<4> [ <62:22 62:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<5> [ <54:18 54:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<5> [ <54:25 54:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<5> [ <54:63 54:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<5> [ <55:47 55:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<5> [ <56:28 56:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<6> [ <62:18 62:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<6> [ <62:36 62:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<6> [ <62:44 62:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<6> [ <63:117 63:117>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<7> [ <63:30 63:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<7> [ <64:85 64:100>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<8> [ <64:57 64:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<8> [ <65:17 65:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlock<8> [ <66:24 66:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<0> [ <74:62 74:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<0> [ <90:103 90:106>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<0> [ <97:97 97:100>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<1> [ <74:79 74:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<1> [ <89:121 89:130>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<1> [ <97:66 97:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<1> [ <97:103 97:112>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<2> [ <74:101 74:104>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<2> [ <75:29 75:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<2> [ <78:81 78:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<2> [ <81:57 81:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<2> [ <97:59 97:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<3> [ <78:31 78:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<3> [ <80:29 80:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<3> [ <81:17 81:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<3> [ <89:87 89:95>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<4> [ <79:13 79:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<4> [ <82:17 82:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<4> [ <85:13 85:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<4> [ <88:22 88:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<5> [ <80:18 80:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<5> [ <80:25 80:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<5> [ <80:63 80:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<5> [ <81:47 81:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<5> [ <82:28 82:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<6> [ <88:18 88:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<6> [ <88:36 88:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<6> [ <88:44 88:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<6> [ <89:117 89:117>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<7> [ <89:30 89:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<7> [ <90:85 90:100>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<8> [ <90:57 90:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<8> [ <91:17 91:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveInBlockAsValue<8> [ <92:47 92:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveMethod<0> [ <192:66 192:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveMethod<0> [ <193:40 193:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveMethod<1> [ <192:83 192:96>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveMethod<1> [ <193:46 193:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveMethod<2> [ <192:107 192:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveMethod<3> [ <192:130 192:139>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveMethod<3> [ <193:69 193:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<0> [ <147:75 147:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<0> [ <151:99 151:102>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<0> [ <158:44 158:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<0> [ <161:44 161:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<0> [ <164:44 164:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<0> [ <167:44 167:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<0> [ <181:59 181:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<0> [ <188:40 188:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<1> [ <147:92 147:101>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<1> [ <150:96 150:105>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<1> [ <158:50 158:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<1> [ <161:50 161:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<1> [ <164:50 164:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<1> [ <167:50 167:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<1> [ <180:107 180:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<1> [ <188:46 188:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<2> [ <150:26 150:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<2> [ <151:81 151:96>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<2> [ <180:13 180:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<2> [ <181:41 181:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<3> [ <151:53 151:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<3> [ <152:13 152:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<3> [ <153:20 153:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<3> [ <181:13 181:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<3> [ <182:17 182:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<3> [ <183:24 183:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<4> [ <169:31 169:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<4> [ <171:29 171:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<4> [ <172:17 172:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<4> [ <180:70 180:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<5> [ <170:13 170:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<5> [ <173:17 173:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<5> [ <176:13 176:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<5> [ <179:22 179:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<6> [ <171:18 171:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<6> [ <171:25 171:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<6> [ <171:66 171:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<6> [ <172:50 172:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<6> [ <173:28 173:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<7> [ <179:18 179:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<7> [ <179:36 179:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<7> [ <179:44 179:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbol<7> [ <180:103 180:103>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<0> [ <101:54 101:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<0> [ <105:78 105:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<0> [ <112:51 112:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<0> [ <115:51 115:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<0> [ <118:51 118:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<0> [ <121:51 121:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<0> [ <135:66 135:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<0> [ <143:49 143:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<1> [ <101:71 101:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<1> [ <104:96 104:105>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<1> [ <105:84 105:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<1> [ <112:57 112:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<1> [ <115:57 115:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<1> [ <118:57 118:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<1> [ <121:57 121:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<1> [ <134:107 134:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<1> [ <135:72 135:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<1> [ <143:55 143:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<2> [ <104:26 104:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<2> [ <105:60 105:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<2> [ <134:13 134:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<2> [ <135:48 135:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<3> [ <105:25 105:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<3> [ <106:13 106:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<3> [ <107:20 107:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<3> [ <135:13 135:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<3> [ <136:17 136:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<3> [ <137:24 137:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<4> [ <123:31 123:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<4> [ <125:29 125:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<4> [ <126:17 126:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<4> [ <134:70 134:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<5> [ <124:13 124:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<5> [ <127:17 127:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<5> [ <130:13 130:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<5> [ <133:22 133:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<6> [ <125:18 125:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<6> [ <125:25 125:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<6> [ <125:66 125:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<6> [ <126:50 126:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<6> [ <127:28 127:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<7> [ <133:18 133:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<7> [ <133:36 133:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<7> [ <133:44 133:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<7> [ <134:103 134:103>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<8> [ <142:17 142:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveSymbolAsValue<8> [ <143:16 143:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveType<0> [ <197:62 197:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveType<0> [ <198:38 198:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveType<1> [ <197:79 197:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.StatementContext<N>.solveType<1> [ <198:44 198:53>]
COMMENT: comment [ <1:1 15:3>]
COMMENT: comment [ <39:1 41:3>]
COMMENT: comment [ <70:9 70:63>]
COMMENT: comment [ <96:9 96:63>]
COMMENT: comment [ <103:9 103:86>]
COMMENT: comment [ <110:9 110:93>]
COMMENT: comment [ <141:9 141:63>]
COMMENT: comment [ <149:9 149:86>]
COMMENT: comment [ <156:9 156:93>]
COMMENT: comment [ <187:9 187:63>]
