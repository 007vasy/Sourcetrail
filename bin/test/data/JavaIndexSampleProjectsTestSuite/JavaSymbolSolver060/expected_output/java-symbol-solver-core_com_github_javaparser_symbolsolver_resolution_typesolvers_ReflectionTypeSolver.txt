FILE: ReflectionTypeSolver.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.resolution.typesolvers [ <17:55 17:65>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution [ <17:44 17:53>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.resolution
QUALIFIER: com.github.javaparser.symbolsolver [ <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ <19:30 19:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <20:30 20:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <21:30 21:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <22:30 22:41>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ <17:20 17:29>]
QUALIFIER: com.github.javaparser [ <19:19 19:28>]
QUALIFIER: com.github.javaparser [ <20:19 20:28>]
QUALIFIER: com.github.javaparser [ <21:19 21:28>]
QUALIFIER: com.github.javaparser [ <22:19 22:28>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ <17:13 17:18>]
QUALIFIER: com.github [ <19:12 19:17>]
QUALIFIER: com.github [ <20:12 20:17>]
QUALIFIER: com.github [ <21:12 21:17>]
QUALIFIER: com.github [ <22:12 22:17>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ <17:9 17:11>]
QUALIFIER: com [ <19:8 19:10>]
QUALIFIER: com [ <20:8 20:10>]
QUALIFIER: com [ <21:8 21:10>]
QUALIFIER: com [ <22:8 22:10>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <19:49 19:60>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [ <19:43 19:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <20:43 20:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <21:43 21:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <20:49 20:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <21:49 21:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory [ <66:47 66:63>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel [ <22:43 22:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.reflectionmodel
QUALIFIER: java.util [ <24:13 24:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [ <24:8 24:11>]
SYMBOL_PACKAGE: java
QUALIFIER: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver [ <34:9 34:12>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver [ <50:9 50:12>]
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver [ <29:1 <29:14 29:33> 94:1>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.parent [ <31:24 31:29>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.ReflectionTypeSolver(boolean) [ <33:5 <33:5 <33:12 33:31> 33:48> 35:5>]
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_FIELD: private boolean com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.jreOnly [ <41:21 41:27>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.ReflectionTypeSolver() [ <37:5 <37:5 <37:12 37:31> 37:33> 39:5>]
SYMBOL_METHOD: java.lang.Object.Object()
SYMBOL_PACKAGE: java.lang
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.getParent() [ <43:5 <43:5 <44:23 44:31> 44:33> 46:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.model.resolution.TypeSolver.getParent()
SYMBOL_METHOD: public void com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <48:5 <48:5 <49:17 49:25> 49:44> 51:5>]
SYMBOL_METHOD: void com.github.javaparser.symbolsolver.model.resolution.TypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_BUILTIN_TYPE: void
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) [ <53:5 <53:5 <54:54 54:67> 54:80> 92:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String)
SYMBOL_METHOD: boolean java.lang.String.startsWith(java.lang.String)
SYMBOL_METHOD: java.lang.ClassLoader java.lang.Class<T>.getClassLoader()
SYMBOL_METHOD: java.lang.RuntimeException.RuntimeException(java.lang.String)
SYMBOL_METHOD: java.lang.Class<?> java.lang.ClassLoader.loadClass(java.lang.String)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2)
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <66:24 66:38>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <71:28 71:42>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <80:36 80:50>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <82:36 82:50>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <85:32 85:46>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <90:20 90:34>]
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.typeDeclarationFor(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.model.resolution.TypeSolver.getRoot()
SYMBOL_BUILTIN_TYPE: int
SYMBOL_METHOD: int java.lang.String.lastIndexOf(int)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>)
SYMBOL_METHOD: java.lang.String java.lang.String.substring(int, int)
SYMBOL_METHOD: java.lang.String java.lang.String.substring(int)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
SYMBOL_METHOD: java.util.Optional<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.findFirst()
SYMBOL_METHOD: java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.filter(java.util.function.Predicate<? super T>)
SYMBOL_METHOD: java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream()
SYMBOL_METHOD: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.internalTypes()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration()
SYMBOL_METHOD: boolean java.lang.String.equals(java.lang.Object)
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName()
SYMBOL_METHOD: boolean java.util.Optional<T>.isPresent()
SYMBOL_METHOD: java.util.Optional<T>.T java.util.Optional<T>.get()
REFERENCE_IMPORT: ReflectionTypeSolver.java -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <19:62 19:85>]
REFERENCE_IMPORT: ReflectionTypeSolver.java -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <20:60 20:74>]
REFERENCE_IMPORT: ReflectionTypeSolver.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <21:60 21:69>]
REFERENCE_IMPORT: ReflectionTypeSolver.java -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory [ <22:59 22:75>]
REFERENCE_IMPORT: ReflectionTypeSolver.java -> java.util.Optional<T> [ <24:18 24:25>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <29:46 29:55>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.parent -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <31:13 31:22>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.ReflectionTypeSolver(boolean) -> boolean [ <33:33 33:39>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.ReflectionTypeSolver(boolean) -> boolean com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.jreOnly [ <34:14 34:20>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.ReflectionTypeSolver() -> java.lang.Object.Object() [ <37:12 37:31>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.ReflectionTypeSolver() -> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.ReflectionTypeSolver(boolean) [ <38:9 38:12>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.jreOnly -> boolean [ <41:13 41:19>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.getParent() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.model.resolution.TypeSolver.getParent() [ <44:23 44:31>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.getParent() -> java.lang.Override [ <43:6 43:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.getParent() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <44:12 44:21>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.getParent() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.parent [ <45:16 45:21>]
REFERENCE_OVERRIDE: void com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> void com.github.javaparser.symbolsolver.model.resolution.TypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <49:17 49:25>]
REFERENCE_ANNOTATION_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <48:6 48:13>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> void [ <49:12 49:15>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <49:27 49:36>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.parent [ <50:14 50:19>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String) [ <54:54 54:67>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> java.lang.Override [ <53:6 53:13>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <54:28 54:51>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <75:37 75:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <54:12 54:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <75:21 75:35>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <54:28 54:51>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <71:53 71:76>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <75:37 75:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <77:34 77:57>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <82:61 82:84>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <85:57 85:80>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <90:45 90:68>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> java.lang.String [ <54:69 54:74>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> java.lang.String [ <73:21 73:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> java.lang.String [ <74:21 74:26>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> boolean com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.jreOnly [ <55:14 55:20>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> boolean java.lang.String.startsWith(java.lang.String) [ <55:31 55:40>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> boolean java.lang.String.startsWith(java.lang.String) [ <55:59 55:68>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> java.lang.ClassLoader [ <57:17 57:27>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> java.lang.ClassLoader java.lang.Class<T>.getClassLoader() [ <57:70 57:83>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver [ <57:43 57:62>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> java.lang.RuntimeException.RuntimeException(java.lang.String) [ <62:31 62:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> java.lang.RuntimeException [ <62:31 62:46>]
REFERENCE_TYPE_ARGUMENT: java.lang.Class<T> -> ? [ <65:23 65:23>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> java.lang.Class<T> [ <65:17 65:21>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> java.lang.Class<?> java.lang.ClassLoader.loadClass(java.lang.String) [ <65:46 65:54>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [ <66:40 66:45>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [ <80:52 80:57>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.typeDeclarationFor(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <66:65 66:82>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.model.resolution.TypeSolver.getRoot() [ <66:91 66:97>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> java.lang.ClassNotFoundException [ <67:22 67:43>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> int [ <69:17 69:19>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> int java.lang.String.lastIndexOf(int) [ <69:36 69:46>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) [ <71:44 71:51>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) [ <82:52 82:59>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) [ <85:48 85:55>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) [ <90:36 90:43>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> java.lang.String java.lang.String.substring(int, int) [ <73:46 73:54>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> java.lang.String java.lang.String.substring(int) [ <74:45 74:53>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) [ <75:72 75:85>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <76:32 76:39>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <77:34 77:57>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> java.util.Optional<T> [ <77:25 77:32>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> java.util.Optional<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.findFirst() [ <78:88 78:96>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.filter(java.util.function.Predicate<? super T>) [ <78:43 78:48>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [ <78:34 78:39>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.internalTypes() [ <77:110 77:122>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ <77:80 77:106>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> boolean java.lang.String.equals(java.lang.Object) [ <78:69 78:74>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName() [ <78:59 78:65>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> boolean java.util.Optional<T>.isPresent() [ <79:40 79:48>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType(java.lang.String) -> java.util.Optional<T>.T java.util.Optional<T>.get() [ <80:70 80:72>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<29:57> [ <29:57 29:57>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<29:57> [ <94:1 94:1>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<33:50> [ <33:50 33:50>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<33:50> [ <35:5 35:5>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<37:35> [ <37:35 37:35>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<37:35> [ <39:5 39:5>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<44:35> [ <44:35 44:35>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<44:35> [ <46:5 46:5>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<49:46> [ <49:46 49:46>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<49:46> [ <51:5 51:5>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<54:82> [ <54:82 54:82>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<54:82> [ <92:5 92:5>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<55:82> [ <55:82 55:82>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<55:82> [ <89:9 89:9>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<56:17> [ <56:17 56:17>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<56:17> [ <67:13 67:13>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<61:42> [ <61:42 61:42>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<61:42> [ <63:17 63:17>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<67:48> [ <67:48 67:48>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<67:48> [ <88:13 88:13>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<70:36> [ <70:36 70:36>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<70:36> [ <72:17 72:17>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<72:24> [ <72:24 72:24>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<72:24> [ <87:17 87:17>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<76:44> [ <76:44 76:44>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<76:44> [ <84:21 84:21>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<79:53> [ <79:53 79:53>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<79:53> [ <81:25 81:25>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<81:32> [ <81:32 81:32>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<81:32> [ <83:25 83:25>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<84:28> [ <84:28 84:28>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<84:28> [ <86:21 86:21>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<89:16> [ <89:16 89:16>]
LOCAL_SYMBOL: ReflectionTypeSolver.java<89:16> [ <91:9 91:9>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.ReflectionTypeSolver<0> [ <33:41 33:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.ReflectionTypeSolver<0> [ <34:24 34:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.setParent<0> [ <49:38 49:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.setParent<0> [ <50:23 50:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<0> [ <54:76 54:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<0> [ <55:26 55:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<0> [ <55:54 55:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<0> [ <65:56 65:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<0> [ <69:31 69:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<0> [ <73:41 73:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<0> [ <74:40 74:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<1> [ <57:29 57:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<1> [ <61:21 61:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<1> [ <65:34 65:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<2> [ <65:26 65:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<2> [ <66:84 66:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<3> [ <67:45 67:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<4> [ <69:21 69:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<4> [ <70:21 70:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<4> [ <73:59 73:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<4> [ <74:55 74:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<5> [ <73:28 73:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<5> [ <75:87 75:96>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<6> [ <74:28 74:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<6> [ <78:76 78:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<7> [ <75:63 75:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<7> [ <76:25 76:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<7> [ <77:73 77:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<8> [ <77:60 77:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<8> [ <79:29 79:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver.tryToSolveType<8> [ <80:59 80:68>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<10> [ <78:50 78:51>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<10> [ <78:56 78:57>]
COMMENT: comment [ <1:1 15:3>]
COMMENT: comment [ <26:1 28:3>]
COMMENT: comment [ <59:17 59:117>]
COMMENT: comment [ <60:17 60:102>]
COMMENT: comment [ <68:17 68:45>]
