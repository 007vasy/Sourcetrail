FILE: ReflectionParameterDeclaration.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.reflectionmodel [ <17:44 17:58>]
QUALIFIER: com.github.javaparser.symbolsolver [ <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ <19:30 19:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <20:30 20:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <21:30 21:41>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ <17:20 17:29>]
QUALIFIER: com.github.javaparser [ <19:19 19:28>]
QUALIFIER: com.github.javaparser [ <20:19 20:28>]
QUALIFIER: com.github.javaparser [ <21:19 21:28>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ <17:13 17:18>]
QUALIFIER: com.github [ <19:12 19:17>]
QUALIFIER: com.github [ <20:12 20:17>]
QUALIFIER: com.github [ <21:12 21:17>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ <17:9 17:11>]
QUALIFIER: com [ <19:8 19:10>]
QUALIFIER: com [ <20:8 20:10>]
QUALIFIER: com [ <21:8 21:10>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <19:49 19:60>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [ <19:43 19:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <20:43 20:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <21:43 21:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <20:49 20:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <21:49 21:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration [ <33:9 33:12>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration [ <34:9 34:12>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration [ <35:9 35:12>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration [ <36:9 36:12>]
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration [ <26:1 <26:14 26:43> 75:1>]
SYMBOL_FIELD: private java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.type [ <27:22 27:25>]
QUALIFIER: java.lang [ <28:18 28:21>]
QUALIFIER: java.lang [ <32:63 32:66>]
SYMBOL_PACKAGE: java.lang
QUALIFIER: java [ <28:13 28:16>]
QUALIFIER: java [ <32:58 32:61>]
SYMBOL_FIELD: private java.lang.reflect.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.genericType [ <28:36 28:46>]
QUALIFIER: java.lang.reflect [ <28:23 28:29>]
QUALIFIER: java.lang.reflect [ <32:68 32:74>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.typeSolver [ <29:24 29:33>]
SYMBOL_FIELD: private boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.variadic [ <30:21 30:28>]
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.ReflectionParameterDeclaration(java.lang.Class<?>, java.lang.reflect.Type, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) [ <32:5 <32:5 <32:12 32:41> 32:133> 37:5>]
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.getName() [ <39:5 <39:5 <40:19 40:25> 40:27> 42:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName()
SYMBOL_METHOD: java.lang.UnsupportedOperationException.UnsupportedOperationException()
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.toString() [ <44:5 <44:5 <45:19 45:26> 45:28> 49:5>]
SYMBOL_METHOD: java.lang.String java.lang.Object.toString()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.isField() [ <51:5 <51:5 <52:20 52:26> 52:28> 54:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.isField()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.isParameter() [ <56:5 <56:5 <57:20 57:30> 57:32> 59:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration.isParameter()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.isVariadic() [ <61:5 <61:5 <62:20 62:29> 62:31> 64:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration.isVariadic()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.isType() [ <66:5 <66:5 <67:20 67:25> 67:27> 69:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.isType()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.getType() [ <71:5 <71:5 <72:17 72:23> 72:25> 74:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration.getType()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.typeUsageFor(java.lang.reflect.Type, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory [ <73:16 73:32>]
REFERENCE_IMPORT: ReflectionParameterDeclaration.java -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration [ <19:62 19:81>]
REFERENCE_IMPORT: ReflectionParameterDeclaration.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <20:60 20:69>]
REFERENCE_IMPORT: ReflectionParameterDeclaration.java -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <21:60 21:63>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration [ <26:56 26:75>]
REFERENCE_TYPE_ARGUMENT: java.lang.Class<T> -> ? [ <27:19 27:19>]
REFERENCE_TYPE_ARGUMENT: java.lang.Class<T> -> ? [ <32:49 32:49>]
REFERENCE_TYPE_USAGE: java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.type -> java.lang.Class<T> [ <27:13 27:17>]
REFERENCE_TYPE_USAGE: java.lang.reflect.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.genericType -> java.lang.reflect.Type [ <28:31 28:34>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.typeSolver -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <29:13 29:22>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.variadic -> boolean [ <30:13 30:19>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.ReflectionParameterDeclaration(java.lang.Class<?>, java.lang.reflect.Type, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.lang.Class<T> [ <32:43 32:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.ReflectionParameterDeclaration(java.lang.Class<?>, java.lang.reflect.Type, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.lang.reflect.Type [ <32:76 32:79>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.ReflectionParameterDeclaration(java.lang.Class<?>, java.lang.reflect.Type, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <32:94 32:103>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.ReflectionParameterDeclaration(java.lang.Class<?>, java.lang.reflect.Type, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean [ <32:117 32:123>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.ReflectionParameterDeclaration(java.lang.Class<?>, java.lang.reflect.Type, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.type [ <33:14 33:17>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.ReflectionParameterDeclaration(java.lang.Class<?>, java.lang.reflect.Type, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.lang.reflect.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.genericType [ <34:14 34:24>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.ReflectionParameterDeclaration(java.lang.Class<?>, java.lang.reflect.Type, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.typeSolver [ <35:14 35:23>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.ReflectionParameterDeclaration(java.lang.Class<?>, java.lang.reflect.Type, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.variadic [ <36:14 36:21>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.getName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName() [ <40:19 40:25>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.getName() -> java.lang.Override [ <39:6 39:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.getName() -> java.lang.String [ <40:12 40:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.getName() -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <41:19 41:47>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.getName() -> java.lang.UnsupportedOperationException [ <41:19 41:47>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.toString() -> java.lang.String java.lang.Object.toString() [ <45:19 45:26>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.toString() -> java.lang.Override [ <44:6 44:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.toString() -> java.lang.String [ <45:12 45:17>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.toString() -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.type [ <47:27 47:30>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.isField() -> boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.isField() [ <52:20 52:26>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.isField() -> java.lang.Override [ <51:6 51:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.isField() -> boolean [ <52:12 52:18>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.isParameter() -> boolean com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration.isParameter() [ <57:20 57:30>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.isParameter() -> java.lang.Override [ <56:6 56:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.isParameter() -> boolean [ <57:12 57:18>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.isVariadic() -> boolean com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration.isVariadic() [ <62:20 62:29>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.isVariadic() -> java.lang.Override [ <61:6 61:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.isVariadic() -> boolean [ <62:12 62:18>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.isVariadic() -> boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.variadic [ <63:16 63:23>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.isType() -> boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.isType() [ <67:20 67:25>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.isType() -> java.lang.Override [ <66:6 66:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.isType() -> boolean [ <67:12 67:18>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.getType() -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration.getType() [ <72:17 72:23>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.getType() -> java.lang.Override [ <71:6 71:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.getType() -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <72:12 72:15>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.getType() -> static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.typeUsageFor(java.lang.reflect.Type, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <73:34 73:45>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.getType() -> java.lang.reflect.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.genericType [ <73:47 73:57>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.getType() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.typeSolver [ <73:60 73:69>]
LOCAL_SYMBOL: ReflectionParameterDeclaration.java<26:77> [ <26:77 26:77>]
LOCAL_SYMBOL: ReflectionParameterDeclaration.java<26:77> [ <75:1 75:1>]
LOCAL_SYMBOL: ReflectionParameterDeclaration.java<32:135> [ <32:135 32:135>]
LOCAL_SYMBOL: ReflectionParameterDeclaration.java<32:135> [ <37:5 37:5>]
LOCAL_SYMBOL: ReflectionParameterDeclaration.java<40:29> [ <40:29 40:29>]
LOCAL_SYMBOL: ReflectionParameterDeclaration.java<40:29> [ <42:5 42:5>]
LOCAL_SYMBOL: ReflectionParameterDeclaration.java<45:30> [ <45:30 45:30>]
LOCAL_SYMBOL: ReflectionParameterDeclaration.java<45:30> [ <49:5 49:5>]
LOCAL_SYMBOL: ReflectionParameterDeclaration.java<52:30> [ <52:30 52:30>]
LOCAL_SYMBOL: ReflectionParameterDeclaration.java<52:30> [ <54:5 54:5>]
LOCAL_SYMBOL: ReflectionParameterDeclaration.java<57:34> [ <57:34 57:34>]
LOCAL_SYMBOL: ReflectionParameterDeclaration.java<57:34> [ <59:5 59:5>]
LOCAL_SYMBOL: ReflectionParameterDeclaration.java<62:33> [ <62:33 62:33>]
LOCAL_SYMBOL: ReflectionParameterDeclaration.java<62:33> [ <64:5 64:5>]
LOCAL_SYMBOL: ReflectionParameterDeclaration.java<67:29> [ <67:29 67:29>]
LOCAL_SYMBOL: ReflectionParameterDeclaration.java<67:29> [ <69:5 69:5>]
LOCAL_SYMBOL: ReflectionParameterDeclaration.java<72:27> [ <72:27 72:27>]
LOCAL_SYMBOL: ReflectionParameterDeclaration.java<72:27> [ <74:5 74:5>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.ReflectionParameterDeclaration<0> [ <32:52 32:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.ReflectionParameterDeclaration<0> [ <33:21 33:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.ReflectionParameterDeclaration<1> [ <32:81 32:91>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.ReflectionParameterDeclaration<1> [ <34:28 34:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.ReflectionParameterDeclaration<2> [ <32:105 32:114>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.ReflectionParameterDeclaration<2> [ <35:27 35:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.ReflectionParameterDeclaration<3> [ <32:125 32:132>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclaration.ReflectionParameterDeclaration<3> [ <36:25 36:32>]
COMMENT: comment [ <1:1 15:3>]
COMMENT: comment [ <23:1 25:3>]
