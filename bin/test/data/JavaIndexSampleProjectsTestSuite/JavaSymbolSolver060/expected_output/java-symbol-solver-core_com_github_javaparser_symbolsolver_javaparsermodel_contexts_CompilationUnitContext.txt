FILE: CompilationUnitContext.java
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.javaparsermodel.contexts [CompilationUnitContext.java <17:9 17:67>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.javaparsermodel
SYMBOL_PACKAGE com.github.javaparser.symbolsolver
SYMBOL_PACKAGE com.github.javaparser
SYMBOL_PACKAGE com.github
SYMBOL_PACKAGE com
REFERENCE_IMPORT CompilationUnitContext.java -> com.github.javaparser.ast.CompilationUnit [CompilationUnitContext.java <19:8 19:48>]
SYMBOL_PACKAGE com.github.javaparser.ast
REFERENCE_IMPORT CompilationUnitContext.java -> com.github.javaparser.ast.ImportDeclaration [CompilationUnitContext.java <20:8 20:50>]
SYMBOL_PACKAGE com.github.javaparser.ast
REFERENCE_IMPORT CompilationUnitContext.java -> com.github.javaparser.ast.body.AnnotationDeclaration [CompilationUnitContext.java <21:8 21:59>]
SYMBOL_PACKAGE com.github.javaparser.ast.body
REFERENCE_IMPORT CompilationUnitContext.java -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [CompilationUnitContext.java <22:8 22:65>]
SYMBOL_PACKAGE com.github.javaparser.ast.body
REFERENCE_IMPORT CompilationUnitContext.java -> com.github.javaparser.ast.body.TypeDeclaration<T> [CompilationUnitContext.java <23:8 23:53>]
SYMBOL_PACKAGE com.github.javaparser.ast.body
REFERENCE_IMPORT CompilationUnitContext.java -> com.github.javaparser.ast.expr.MethodCallExpr [CompilationUnitContext.java <24:8 24:52>]
SYMBOL_PACKAGE com.github.javaparser.ast.expr
REFERENCE_IMPORT CompilationUnitContext.java -> com.github.javaparser.ast.expr.Name [CompilationUnitContext.java <25:8 25:42>]
SYMBOL_PACKAGE com.github.javaparser.ast.expr
REFERENCE_IMPORT CompilationUnitContext.java -> com.github.javaparser.ast.type.ClassOrInterfaceType [CompilationUnitContext.java <26:8 26:58>]
SYMBOL_PACKAGE com.github.javaparser.ast.type
REFERENCE_IMPORT CompilationUnitContext.java -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [CompilationUnitContext.java <27:8 27:74>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.javaparsermodel
REFERENCE_IMPORT CompilationUnitContext.java -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnnotationDeclaration [CompilationUnitContext.java <28:8 28:102>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.javaparsermodel.declarations
REFERENCE_IMPORT CompilationUnitContext.java -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [CompilationUnitContext.java <29:8 29:78>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.model.declarations
REFERENCE_IMPORT CompilationUnitContext.java -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [CompilationUnitContext.java <30:8 30:77>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.model.declarations
REFERENCE_IMPORT CompilationUnitContext.java -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [CompilationUnitContext.java <31:8 31:74>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.model.resolution
REFERENCE_IMPORT CompilationUnitContext.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [CompilationUnitContext.java <32:8 32:69>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.model.resolution
REFERENCE_IMPORT CompilationUnitContext.java -> com.github.javaparser.symbolsolver.model.typesystem.Type [CompilationUnitContext.java <33:8 33:63>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.model.typesystem
REFERENCE_IMPORT CompilationUnitContext.java -> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [CompilationUnitContext.java <34:8 34:74>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.resolution
REFERENCE_IMPORT CompilationUnitContext.java -> com.github.javaparser.symbolsolver.resolution.SymbolSolver [CompilationUnitContext.java <35:8 35:65>]
SYMBOL_PACKAGE com.github.javaparser.symbolsolver.resolution
REFERENCE_IMPORT CompilationUnitContext.java -> java.util.List<E> [CompilationUnitContext.java <37:8 37:21>]
SYMBOL_PACKAGE java.util
SYMBOL_CLASS public com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext [CompilationUnitContext.java <42:1 <42:14 42:35> 285:1>]
LOCAL_SYMBOL: CompilationUnitContext.java<42:88> [CompilationUnitContext.java <42:88 42:88>]
LOCAL_SYMBOL: CompilationUnitContext.java<42:88> [CompilationUnitContext.java <285:1 285:1>]
COMMENT: comment [CompilationUnitContext.java <39:1 41:3>]
REFERENCE_INHERITANCE com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N> [CompilationUnitContext.java <42:45 42:69>]
REFERENCE_TYPE_ARGUMENT com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext -> com.github.javaparser.ast.CompilationUnit [CompilationUnitContext.java <42:71 42:85>]
SYMBOL_METHOD private static boolean com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.isQualifiedName(java.lang.String) [CompilationUnitContext.java <48:5 <48:28 48:42> 50:5>]
SYMBOL_BUILTIN_TYPE boolean
REFERENCE_TYPE_USAGE static boolean com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.isQualifiedName(java.lang.String) -> boolean [CompilationUnitContext.java <48:20 48:26>]
REFERENCE_TYPE_USAGE static boolean com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.isQualifiedName(java.lang.String) -> java.lang.String [CompilationUnitContext.java <48:44 48:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.isQualifiedName<0> [CompilationUnitContext.java <48:51 48:54>]
LOCAL_SYMBOL: CompilationUnitContext.java<48:57> [CompilationUnitContext.java <48:57 48:57>]
LOCAL_SYMBOL: CompilationUnitContext.java<48:57> [CompilationUnitContext.java <50:5 50:5>]
SYMBOL_METHOD boolean java.lang.String.contains(java.lang.CharSequence)
REFERENCE_CALL static boolean com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.isQualifiedName(java.lang.String) -> boolean java.lang.String.contains(java.lang.CharSequence) [CompilationUnitContext.java <49:21 49:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.isQualifiedName<0> [CompilationUnitContext.java <49:16 49:19>]
SYMBOL_METHOD public com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.CompilationUnitContext(com.github.javaparser.ast.CompilationUnit, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [CompilationUnitContext.java <56:5 <56:12 56:33> 58:5>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_OVERRIDE com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.CompilationUnitContext(com.github.javaparser.ast.CompilationUnit, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [CompilationUnitContext.java <56:12 56:33>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.CompilationUnitContext(com.github.javaparser.ast.CompilationUnit, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.CompilationUnit [CompilationUnitContext.java <56:35 56:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.CompilationUnitContext<0> [CompilationUnitContext.java <56:51 56:61>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.CompilationUnitContext(com.github.javaparser.ast.CompilationUnit, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [CompilationUnitContext.java <56:64 56:73>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.CompilationUnitContext<1> [CompilationUnitContext.java <56:75 56:84>]
LOCAL_SYMBOL: CompilationUnitContext.java<56:87> [CompilationUnitContext.java <56:87 56:87>]
LOCAL_SYMBOL: CompilationUnitContext.java<56:87> [CompilationUnitContext.java <58:5 58:5>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.CompilationUnitContext(com.github.javaparser.ast.CompilationUnit, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [CompilationUnitContext.java <57:9 57:13>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.CompilationUnitContext<0> [CompilationUnitContext.java <57:15 57:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.CompilationUnitContext<1> [CompilationUnitContext.java <57:28 57:37>]
SYMBOL_METHOD public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [CompilationUnitContext.java <64:5 <65:56 65:66> 108:5>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_OVERRIDE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [CompilationUnitContext.java <65:56 65:66>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [CompilationUnitContext.java <65:12 65:26>]
REFERENCE_TYPE_ARGUMENT com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [CompilationUnitContext.java <65:38 65:53>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [CompilationUnitContext.java <65:68 65:73>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<0> [CompilationUnitContext.java <65:75 65:78>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [CompilationUnitContext.java <65:81 65:90>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<1> [CompilationUnitContext.java <65:92 65:101>]
LOCAL_SYMBOL: CompilationUnitContext.java<65:104> [CompilationUnitContext.java <65:104 65:104>]
LOCAL_SYMBOL: CompilationUnitContext.java<65:104> [CompilationUnitContext.java <108:5 108:5>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [CompilationUnitContext.java <68:9 68:14>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<2> [CompilationUnitContext.java <68:16 68:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<0> [CompilationUnitContext.java <68:25 68:28>]
SYMBOL_METHOD boolean java.lang.String.contains(java.lang.CharSequence)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.contains(java.lang.CharSequence) [CompilationUnitContext.java <69:23 69:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<2> [CompilationUnitContext.java <69:16 69:21>]
LOCAL_SYMBOL: CompilationUnitContext.java<69:38> [CompilationUnitContext.java <69:38 69:38>]
LOCAL_SYMBOL: CompilationUnitContext.java<69:38> [CompilationUnitContext.java <78:9 78:9>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [CompilationUnitContext.java <70:13 70:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<3> [CompilationUnitContext.java <70:20 70:27>]
SYMBOL_METHOD java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) [CompilationUnitContext.java <70:31 70:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<2> [CompilationUnitContext.java <70:39 70:44>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [CompilationUnitContext.java <71:13 71:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<4> [CompilationUnitContext.java <71:20 71:29>]
SYMBOL_METHOD java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String) [CompilationUnitContext.java <71:33 71:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<2> [CompilationUnitContext.java <71:43 71:48>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [CompilationUnitContext.java <72:13 72:27>]
REFERENCE_TYPE_ARGUMENT com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [CompilationUnitContext.java <72:29 72:97>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<5> [CompilationUnitContext.java <72:100 72:103>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [CompilationUnitContext.java <72:112 72:120>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<3> [CompilationUnitContext.java <72:122 72:129>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<1> [CompilationUnitContext.java <72:132 72:141>]
SYMBOL_METHOD boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [CompilationUnitContext.java <73:22 73:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<5> [CompilationUnitContext.java <73:17 73:20>]
LOCAL_SYMBOL: CompilationUnitContext.java<73:34> [CompilationUnitContext.java <73:34 73:34>]
LOCAL_SYMBOL: CompilationUnitContext.java<73:34> [CompilationUnitContext.java <75:13 75:13>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String) [CompilationUnitContext.java <74:53 74:69>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.resolution.SymbolSolver.SymbolSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolSolver.SymbolSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [CompilationUnitContext.java <74:28 74:39>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolSolver [CompilationUnitContext.java <74:28 74:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<1> [CompilationUnitContext.java <74:41 74:50>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [CompilationUnitContext.java <74:76 74:102>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<5> [CompilationUnitContext.java <74:71 74:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<4> [CompilationUnitContext.java <74:107 74:116>]
LOCAL_SYMBOL: CompilationUnitContext.java<75:20> [CompilationUnitContext.java <75:20 75:20>]
LOCAL_SYMBOL: CompilationUnitContext.java<75:20> [CompilationUnitContext.java <77:13 77:13>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<2> [CompilationUnitContext.java <76:17 76:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<3> [CompilationUnitContext.java <76:26 76:33>]
SYMBOL_METHOD com.github.javaparser.ast.NodeList<com.github.javaparser.ast.ImportDeclaration> com.github.javaparser.ast.CompilationUnit.getImports()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.ImportDeclaration> com.github.javaparser.ast.CompilationUnit.getImports() [CompilationUnitContext.java <81:25 81:34>]
SYMBOL_FIELD com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
REFERENCE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [CompilationUnitContext.java <81:13 81:23>]
LOCAL_SYMBOL: CompilationUnitContext.java<81:47> [CompilationUnitContext.java <81:47 81:47>]
LOCAL_SYMBOL: CompilationUnitContext.java<81:47> [CompilationUnitContext.java <105:9 105:9>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.ImportDeclaration [CompilationUnitContext.java <82:18 82:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<6> [CompilationUnitContext.java <82:36 82:45>]
SYMBOL_METHOD com.github.javaparser.ast.NodeList<com.github.javaparser.ast.ImportDeclaration> com.github.javaparser.ast.CompilationUnit.getImports()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.ImportDeclaration> com.github.javaparser.ast.CompilationUnit.getImports() [CompilationUnitContext.java <82:61 82:70>]
SYMBOL_FIELD com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
REFERENCE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [CompilationUnitContext.java <82:49 82:59>]
LOCAL_SYMBOL: CompilationUnitContext.java<82:75> [CompilationUnitContext.java <82:75 82:75>]
LOCAL_SYMBOL: CompilationUnitContext.java<82:75> [CompilationUnitContext.java <104:13 104:13>]
SYMBOL_METHOD boolean com.github.javaparser.ast.ImportDeclaration.isStatic()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.ast.ImportDeclaration.isStatic() [CompilationUnitContext.java <83:31 83:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<6> [CompilationUnitContext.java <83:20 83:29>]
LOCAL_SYMBOL: CompilationUnitContext.java<83:42> [CompilationUnitContext.java <83:42 83:42>]
LOCAL_SYMBOL: CompilationUnitContext.java<83:42> [CompilationUnitContext.java <103:17 103:17>]
SYMBOL_METHOD boolean com.github.javaparser.ast.ImportDeclaration.isAsterisk()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.ast.ImportDeclaration.isAsterisk() [CompilationUnitContext.java <84:35 84:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<6> [CompilationUnitContext.java <84:24 84:33>]
LOCAL_SYMBOL: CompilationUnitContext.java<84:49> [CompilationUnitContext.java <84:49 84:49>]
LOCAL_SYMBOL: CompilationUnitContext.java<84:49> [CompilationUnitContext.java <91:21 91:21>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [CompilationUnitContext.java <85:25 85:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<8> [CompilationUnitContext.java <85:32 85:36>]
SYMBOL_METHOD java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithName<N>.getNameAsString()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithName<N>.getNameAsString() [CompilationUnitContext.java <85:51 85:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<6> [CompilationUnitContext.java <85:40 85:49>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [CompilationUnitContext.java <86:25 86:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<9> [CompilationUnitContext.java <86:95 86:106>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String) [CompilationUnitContext.java <86:121 86:129>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<1> [CompilationUnitContext.java <86:110 86:119>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<8> [CompilationUnitContext.java <86:131 86:135>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [CompilationUnitContext.java <87:25 87:39>]
REFERENCE_TYPE_ARGUMENT com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [CompilationUnitContext.java <87:51 87:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<10> [CompilationUnitContext.java <87:69 87:71>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String) [CompilationUnitContext.java <87:104 87:120>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.resolution.SymbolSolver.SymbolSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolSolver.SymbolSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [CompilationUnitContext.java <87:79 87:90>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolSolver [CompilationUnitContext.java <87:79 87:90>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<1> [CompilationUnitContext.java <87:92 87:101>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<9> [CompilationUnitContext.java <87:122 87:133>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<0> [CompilationUnitContext.java <87:136 87:139>]
SYMBOL_METHOD boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [CompilationUnitContext.java <88:33 88:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<10> [CompilationUnitContext.java <88:29 88:31>]
LOCAL_SYMBOL: CompilationUnitContext.java<88:45> [CompilationUnitContext.java <88:45 88:45>]
LOCAL_SYMBOL: CompilationUnitContext.java<88:45> [CompilationUnitContext.java <90:25 90:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<10> [CompilationUnitContext.java <89:36 89:38>]
LOCAL_SYMBOL: CompilationUnitContext.java<91:27> [CompilationUnitContext.java <91:27 91:27>]
LOCAL_SYMBOL: CompilationUnitContext.java<91:27> [CompilationUnitContext.java <102:21 102:21>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [CompilationUnitContext.java <92:25 92:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<11> [CompilationUnitContext.java <92:32 92:36>]
SYMBOL_METHOD java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithName<N>.getNameAsString()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithName<N>.getNameAsString() [CompilationUnitContext.java <92:51 92:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<6> [CompilationUnitContext.java <92:40 92:49>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [CompilationUnitContext.java <95:25 95:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<12> [CompilationUnitContext.java <95:32 95:41>]
SYMBOL_METHOD java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String) [CompilationUnitContext.java <95:45 95:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<11> [CompilationUnitContext.java <95:55 95:59>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [CompilationUnitContext.java <96:25 96:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<13> [CompilationUnitContext.java <96:32 96:39>]
SYMBOL_METHOD java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) [CompilationUnitContext.java <96:43 96:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<11> [CompilationUnitContext.java <96:51 96:55>]
SYMBOL_METHOD boolean java.lang.String.equals(java.lang.Object)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [CompilationUnitContext.java <98:40 98:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<12> [CompilationUnitContext.java <98:29 98:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<0> [CompilationUnitContext.java <98:47 98:50>]
LOCAL_SYMBOL: CompilationUnitContext.java<98:54> [CompilationUnitContext.java <98:54 98:54>]
LOCAL_SYMBOL: CompilationUnitContext.java<98:54> [CompilationUnitContext.java <101:25 101:25>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [CompilationUnitContext.java <99:29 99:97>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<14> [CompilationUnitContext.java <99:99 99:110>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String) [CompilationUnitContext.java <99:125 99:133>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<1> [CompilationUnitContext.java <99:114 99:123>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<13> [CompilationUnitContext.java <99:135 99:142>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String) [CompilationUnitContext.java <100:65 100:81>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.resolution.SymbolSolver.SymbolSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolSolver.SymbolSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [CompilationUnitContext.java <100:40 100:51>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolSolver [CompilationUnitContext.java <100:40 100:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<1> [CompilationUnitContext.java <100:53 100:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<14> [CompilationUnitContext.java <100:83 100:94>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<12> [CompilationUnitContext.java <100:97 100:106>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) [CompilationUnitContext.java <107:32 107:39>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [CompilationUnitContext.java <107:41 107:56>]
SYMBOL_METHOD public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [CompilationUnitContext.java <110:5 <111:99 111:107> 194:5>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_OVERRIDE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [CompilationUnitContext.java <111:99 111:107>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [CompilationUnitContext.java <111:12 111:26>]
REFERENCE_TYPE_ARGUMENT com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [CompilationUnitContext.java <111:28 111:96>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [CompilationUnitContext.java <111:109 111:114>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [CompilationUnitContext.java <111:116 111:119>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [CompilationUnitContext.java <111:122 111:131>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<1> [CompilationUnitContext.java <111:133 111:142>]
LOCAL_SYMBOL: CompilationUnitContext.java<111:145> [CompilationUnitContext.java <111:145 111:145>]
LOCAL_SYMBOL: CompilationUnitContext.java<111:145> [CompilationUnitContext.java <194:5 194:5>]
SYMBOL_METHOD com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.ast.CompilationUnit.getTypes()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.ast.CompilationUnit.getTypes() [CompilationUnitContext.java <112:25 112:32>]
SYMBOL_FIELD com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
REFERENCE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [CompilationUnitContext.java <112:13 112:23>]
LOCAL_SYMBOL: CompilationUnitContext.java<112:45> [CompilationUnitContext.java <112:45 112:45>]
LOCAL_SYMBOL: CompilationUnitContext.java<112:45> [CompilationUnitContext.java <124:9 124:9>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.TypeDeclaration<T> [CompilationUnitContext.java <113:18 113:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<2> [CompilationUnitContext.java <113:37 113:40>]
SYMBOL_METHOD com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.ast.CompilationUnit.getTypes()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.ast.CompilationUnit.getTypes() [CompilationUnitContext.java <113:56 113:63>]
SYMBOL_FIELD com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
REFERENCE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [CompilationUnitContext.java <113:44 113:54>]
LOCAL_SYMBOL: CompilationUnitContext.java<113:68> [CompilationUnitContext.java <113:68 113:68>]
LOCAL_SYMBOL: CompilationUnitContext.java<113:68> [CompilationUnitContext.java <123:13 123:13>]
SYMBOL_METHOD boolean java.lang.String.equals(java.lang.Object)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [CompilationUnitContext.java <114:44 114:49>]
SYMBOL_METHOD java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [CompilationUnitContext.java <114:36 114:40>]
SYMBOL_METHOD com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName() [CompilationUnitContext.java <114:26 114:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<2> [CompilationUnitContext.java <114:21 114:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [CompilationUnitContext.java <114:51 114:54>]
LOCAL_SYMBOL: CompilationUnitContext.java<114:58> [CompilationUnitContext.java <114:58 114:58>]
LOCAL_SYMBOL: CompilationUnitContext.java<114:58> [CompilationUnitContext.java <122:17 122:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<2> [CompilationUnitContext.java <115:25 115:28>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [CompilationUnitContext.java <115:41 115:67>]
LOCAL_SYMBOL: CompilationUnitContext.java<115:70> [CompilationUnitContext.java <115:70 115:70>]
LOCAL_SYMBOL: CompilationUnitContext.java<115:70> [CompilationUnitContext.java <117:21 117:21>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [CompilationUnitContext.java <116:48 116:53>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) [CompilationUnitContext.java <116:88 116:105>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [CompilationUnitContext.java <116:72 116:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<1> [CompilationUnitContext.java <116:76 116:85>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [CompilationUnitContext.java <116:108 116:134>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<2> [CompilationUnitContext.java <116:137 116:140>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<2> [CompilationUnitContext.java <117:32 117:35>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.AnnotationDeclaration [CompilationUnitContext.java <117:48 117:68>]
LOCAL_SYMBOL: CompilationUnitContext.java<117:71> [CompilationUnitContext.java <117:71 117:71>]
LOCAL_SYMBOL: CompilationUnitContext.java<117:71> [CompilationUnitContext.java <119:21 119:21>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [CompilationUnitContext.java <118:48 118:53>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnnotationDeclaration.JavaParserAnnotationDeclaration(com.github.javaparser.ast.body.AnnotationDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnnotationDeclaration.JavaParserAnnotationDeclaration(com.github.javaparser.ast.body.AnnotationDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [CompilationUnitContext.java <118:59 118:89>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnnotationDeclaration [CompilationUnitContext.java <118:59 118:89>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.AnnotationDeclaration [CompilationUnitContext.java <118:92 118:112>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<2> [CompilationUnitContext.java <118:115 118:118>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<1> [CompilationUnitContext.java <118:121 118:130>]
LOCAL_SYMBOL: CompilationUnitContext.java<119:28> [CompilationUnitContext.java <119:28 119:28>]
LOCAL_SYMBOL: CompilationUnitContext.java<119:28> [CompilationUnitContext.java <121:21 121:21>]
SYMBOL_METHOD java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [CompilationUnitContext.java <120:35 120:63>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.UnsupportedOperationException [CompilationUnitContext.java <120:35 120:63>]
SYMBOL_METHOD java.lang.String java.lang.Class<T>.getCanonicalName()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String java.lang.Class<T>.getCanonicalName() [CompilationUnitContext.java <120:81 120:96>]
SYMBOL_METHOD java.lang.Class<?> java.lang.Object.getClass()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Class<?> java.lang.Object.getClass() [CompilationUnitContext.java <120:70 120:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<2> [CompilationUnitContext.java <120:65 120:68>]
SYMBOL_METHOD com.github.javaparser.ast.NodeList<com.github.javaparser.ast.ImportDeclaration> com.github.javaparser.ast.CompilationUnit.getImports()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.ImportDeclaration> com.github.javaparser.ast.CompilationUnit.getImports() [CompilationUnitContext.java <126:25 126:34>]
SYMBOL_FIELD com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
REFERENCE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [CompilationUnitContext.java <126:13 126:23>]
LOCAL_SYMBOL: CompilationUnitContext.java<126:47> [CompilationUnitContext.java <126:47 126:47>]
LOCAL_SYMBOL: CompilationUnitContext.java<126:47> [CompilationUnitContext.java <164:9 164:9>]
SYMBOL_BUILTIN_TYPE int
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int [CompilationUnitContext.java <127:13 127:15>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<4> [CompilationUnitContext.java <127:17 127:22>]
SYMBOL_METHOD int java.lang.String.indexOf(int)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int java.lang.String.indexOf(int) [CompilationUnitContext.java <127:31 127:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [CompilationUnitContext.java <127:26 127:29>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [CompilationUnitContext.java <128:13 128:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<5> [CompilationUnitContext.java <128:20 128:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<4> [CompilationUnitContext.java <129:17 129:22>]
LOCAL_SYMBOL: CompilationUnitContext.java<129:30> [CompilationUnitContext.java <129:30 129:30>]
LOCAL_SYMBOL: CompilationUnitContext.java<129:30> [CompilationUnitContext.java <131:13 131:13>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<5> [CompilationUnitContext.java <130:17 130:22>]
SYMBOL_METHOD java.lang.String java.lang.String.substring(int, int)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String java.lang.String.substring(int, int) [CompilationUnitContext.java <130:31 130:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [CompilationUnitContext.java <130:26 130:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<4> [CompilationUnitContext.java <130:44 130:49>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.ImportDeclaration [CompilationUnitContext.java <133:18 133:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<6> [CompilationUnitContext.java <133:36 133:45>]
SYMBOL_METHOD com.github.javaparser.ast.NodeList<com.github.javaparser.ast.ImportDeclaration> com.github.javaparser.ast.CompilationUnit.getImports()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.ImportDeclaration> com.github.javaparser.ast.CompilationUnit.getImports() [CompilationUnitContext.java <133:61 133:70>]
SYMBOL_FIELD com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
REFERENCE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [CompilationUnitContext.java <133:49 133:59>]
LOCAL_SYMBOL: CompilationUnitContext.java<133:75> [CompilationUnitContext.java <133:75 133:75>]
LOCAL_SYMBOL: CompilationUnitContext.java<133:75> [CompilationUnitContext.java <153:13 153:13>]
SYMBOL_METHOD boolean com.github.javaparser.ast.ImportDeclaration.isAsterisk()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.ast.ImportDeclaration.isAsterisk() [CompilationUnitContext.java <134:33 134:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<6> [CompilationUnitContext.java <134:22 134:31>]
LOCAL_SYMBOL: CompilationUnitContext.java<134:47> [CompilationUnitContext.java <134:47 134:47>]
LOCAL_SYMBOL: CompilationUnitContext.java<134:47> [CompilationUnitContext.java <152:17 152:17>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [CompilationUnitContext.java <135:21 135:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<8> [CompilationUnitContext.java <135:28 135:32>]
SYMBOL_METHOD java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithName<N>.getNameAsString()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithName<N>.getNameAsString() [CompilationUnitContext.java <135:47 135:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<6> [CompilationUnitContext.java <135:36 135:45>]
SYMBOL_BUILTIN_TYPE boolean
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [CompilationUnitContext.java <136:21 136:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<9> [CompilationUnitContext.java <136:29 136:42>]
SYMBOL_METHOD boolean java.util.Optional<T>.isPresent()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.Optional<T>.isPresent() [CompilationUnitContext.java <136:83 136:91>]
SYMBOL_METHOD java.util.Optional<com.github.javaparser.ast.expr.Name> com.github.javaparser.ast.expr.Name.getQualifier()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.expr.Name> com.github.javaparser.ast.expr.Name.getQualifier() [CompilationUnitContext.java <136:68 136:79>]
SYMBOL_METHOD com.github.javaparser.ast.expr.Name com.github.javaparser.ast.ImportDeclaration.getName()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.Name com.github.javaparser.ast.ImportDeclaration.getName() [CompilationUnitContext.java <136:58 136:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<6> [CompilationUnitContext.java <136:47 136:56>]
SYMBOL_BUILTIN_TYPE boolean
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [CompilationUnitContext.java <137:21 137:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<10> [CompilationUnitContext.java <137:29 137:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<9> [CompilationUnitContext.java <137:38 137:51>]
SYMBOL_METHOD boolean java.lang.String.equals(java.lang.Object)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [CompilationUnitContext.java <137:93 137:98>]
SYMBOL_METHOD java.lang.String com.github.javaparser.ast.expr.Name.getIdentifier()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.expr.Name.getIdentifier() [CompilationUnitContext.java <137:77 137:89>]
SYMBOL_METHOD com.github.javaparser.ast.expr.Name com.github.javaparser.ast.ImportDeclaration.getName()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.Name com.github.javaparser.ast.ImportDeclaration.getName() [CompilationUnitContext.java <137:67 137:73>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<6> [CompilationUnitContext.java <137:56 137:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [CompilationUnitContext.java <137:100 137:103>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<10> [CompilationUnitContext.java <138:26 138:30>]
LOCAL_SYMBOL: CompilationUnitContext.java<138:33> [CompilationUnitContext.java <138:33 138:33>]
LOCAL_SYMBOL: CompilationUnitContext.java<138:33> [CompilationUnitContext.java <145:21 145:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<5> [CompilationUnitContext.java <139:29 139:34>]
LOCAL_SYMBOL: CompilationUnitContext.java<139:45> [CompilationUnitContext.java <139:45 139:45>]
LOCAL_SYMBOL: CompilationUnitContext.java<139:45> [CompilationUnitContext.java <144:25 144:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<10> [CompilationUnitContext.java <140:29 140:33>]
SYMBOL_METHOD boolean java.lang.String.endsWith(java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.endsWith(java.lang.String) [CompilationUnitContext.java <140:43 140:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<8> [CompilationUnitContext.java <140:37 140:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<5> [CompilationUnitContext.java <140:58 140:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<10> [CompilationUnitContext.java <141:33 141:37>]
LOCAL_SYMBOL: CompilationUnitContext.java<141:40> [CompilationUnitContext.java <141:40 141:40>]
LOCAL_SYMBOL: CompilationUnitContext.java<141:40> [CompilationUnitContext.java <143:29 143:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<8> [CompilationUnitContext.java <142:33 142:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<8> [CompilationUnitContext.java <142:41 142:45>]
SYMBOL_METHOD java.lang.String java.lang.String.substring(int)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String java.lang.String.substring(int) [CompilationUnitContext.java <142:54 142:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [CompilationUnitContext.java <142:49 142:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<4> [CompilationUnitContext.java <142:64 142:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<10> [CompilationUnitContext.java <146:25 146:29>]
LOCAL_SYMBOL: CompilationUnitContext.java<146:32> [CompilationUnitContext.java <146:32 146:32>]
LOCAL_SYMBOL: CompilationUnitContext.java<146:32> [CompilationUnitContext.java <151:21 151:21>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [CompilationUnitContext.java <147:25 147:39>]
REFERENCE_TYPE_ARGUMENT com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [CompilationUnitContext.java <147:41 147:118>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<11> [CompilationUnitContext.java <147:121 147:123>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String) [CompilationUnitContext.java <147:138 147:151>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<1> [CompilationUnitContext.java <147:127 147:136>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<8> [CompilationUnitContext.java <147:153 147:157>]
SYMBOL_METHOD boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [CompilationUnitContext.java <148:33 148:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<11> [CompilationUnitContext.java <148:29 148:31>]
LOCAL_SYMBOL: CompilationUnitContext.java<148:45> [CompilationUnitContext.java <148:45 148:45>]
LOCAL_SYMBOL: CompilationUnitContext.java<148:45> [CompilationUnitContext.java <150:25 150:25>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>) [CompilationUnitContext.java <149:52 149:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<11> [CompilationUnitContext.java <149:58 149:60>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [CompilationUnitContext.java <149:63 149:131>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.ImportDeclaration [CompilationUnitContext.java <155:18 155:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<12> [CompilationUnitContext.java <155:36 155:45>]
SYMBOL_METHOD com.github.javaparser.ast.NodeList<com.github.javaparser.ast.ImportDeclaration> com.github.javaparser.ast.CompilationUnit.getImports()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.ImportDeclaration> com.github.javaparser.ast.CompilationUnit.getImports() [CompilationUnitContext.java <155:61 155:70>]
SYMBOL_FIELD com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
REFERENCE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [CompilationUnitContext.java <155:49 155:59>]
LOCAL_SYMBOL: CompilationUnitContext.java<155:75> [CompilationUnitContext.java <155:75 155:75>]
LOCAL_SYMBOL: CompilationUnitContext.java<155:75> [CompilationUnitContext.java <163:13 163:13>]
SYMBOL_METHOD boolean com.github.javaparser.ast.ImportDeclaration.isAsterisk()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.ast.ImportDeclaration.isAsterisk() [CompilationUnitContext.java <156:32 156:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<12> [CompilationUnitContext.java <156:21 156:30>]
LOCAL_SYMBOL: CompilationUnitContext.java<156:46> [CompilationUnitContext.java <156:46 156:46>]
LOCAL_SYMBOL: CompilationUnitContext.java<156:46> [CompilationUnitContext.java <162:17 162:17>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [CompilationUnitContext.java <157:21 157:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<14> [CompilationUnitContext.java <157:28 157:32>]
SYMBOL_METHOD java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithName<N>.getNameAsString()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithName<N>.getNameAsString() [CompilationUnitContext.java <157:47 157:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<12> [CompilationUnitContext.java <157:36 157:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [CompilationUnitContext.java <157:73 157:76>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [CompilationUnitContext.java <158:21 158:35>]
REFERENCE_TYPE_ARGUMENT com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [CompilationUnitContext.java <158:37 158:114>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<15> [CompilationUnitContext.java <158:117 158:119>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String) [CompilationUnitContext.java <158:134 158:147>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<1> [CompilationUnitContext.java <158:123 158:132>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<14> [CompilationUnitContext.java <158:149 158:153>]
SYMBOL_METHOD boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [CompilationUnitContext.java <159:29 159:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<15> [CompilationUnitContext.java <159:25 159:27>]
LOCAL_SYMBOL: CompilationUnitContext.java<159:41> [CompilationUnitContext.java <159:41 159:41>]
LOCAL_SYMBOL: CompilationUnitContext.java<159:41> [CompilationUnitContext.java <161:21 161:21>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>) [CompilationUnitContext.java <160:48 160:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<15> [CompilationUnitContext.java <160:54 160:56>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [CompilationUnitContext.java <160:59 160:127>]
SYMBOL_METHOD boolean java.util.Optional<T>.isPresent()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.Optional<T>.isPresent() [CompilationUnitContext.java <167:54 167:62>]
SYMBOL_METHOD java.util.Optional<com.github.javaparser.ast.PackageDeclaration> com.github.javaparser.ast.CompilationUnit.getPackageDeclaration()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.PackageDeclaration> com.github.javaparser.ast.CompilationUnit.getPackageDeclaration() [CompilationUnitContext.java <167:30 167:50>]
SYMBOL_FIELD com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
REFERENCE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [CompilationUnitContext.java <167:18 167:28>]
LOCAL_SYMBOL: CompilationUnitContext.java<167:67> [CompilationUnitContext.java <167:67 167:67>]
LOCAL_SYMBOL: CompilationUnitContext.java<167:67> [CompilationUnitContext.java <173:9 173:9>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [CompilationUnitContext.java <168:13 168:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<16> [CompilationUnitContext.java <168:20 168:24>]
SYMBOL_METHOD java.lang.String com.github.javaparser.ast.Node.toString()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.Node.toString() [CompilationUnitContext.java <168:85 168:92>]
SYMBOL_METHOD com.github.javaparser.ast.expr.Name com.github.javaparser.ast.PackageDeclaration.getName()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.Name com.github.javaparser.ast.PackageDeclaration.getName() [CompilationUnitContext.java <168:75 168:81>]
SYMBOL_METHOD java.util.Optional<T>.T java.util.Optional<T>.get()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T>.T java.util.Optional<T>.get() [CompilationUnitContext.java <168:69 168:71>]
SYMBOL_METHOD java.util.Optional<com.github.javaparser.ast.PackageDeclaration> com.github.javaparser.ast.CompilationUnit.getPackageDeclaration()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.PackageDeclaration> com.github.javaparser.ast.CompilationUnit.getPackageDeclaration() [CompilationUnitContext.java <168:45 168:65>]
SYMBOL_FIELD com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
REFERENCE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [CompilationUnitContext.java <168:33 168:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [CompilationUnitContext.java <168:104 168:107>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [CompilationUnitContext.java <169:13 169:27>]
REFERENCE_TYPE_ARGUMENT com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [CompilationUnitContext.java <169:29 169:106>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<17> [CompilationUnitContext.java <169:109 169:111>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String) [CompilationUnitContext.java <169:126 169:139>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<1> [CompilationUnitContext.java <169:115 169:124>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<16> [CompilationUnitContext.java <169:141 169:145>]
SYMBOL_METHOD boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [CompilationUnitContext.java <170:21 170:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<17> [CompilationUnitContext.java <170:17 170:19>]
LOCAL_SYMBOL: CompilationUnitContext.java<170:33> [CompilationUnitContext.java <170:33 170:33>]
LOCAL_SYMBOL: CompilationUnitContext.java<170:33> [CompilationUnitContext.java <172:13 172:13>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>) [CompilationUnitContext.java <171:40 171:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<17> [CompilationUnitContext.java <171:46 171:48>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [CompilationUnitContext.java <171:51 171:119>]
LOCAL_SYMBOL: CompilationUnitContext.java<173:16> [CompilationUnitContext.java <173:16 173:16>]
LOCAL_SYMBOL: CompilationUnitContext.java<173:16> [CompilationUnitContext.java <180:9 180:9>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [CompilationUnitContext.java <175:13 175:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<18> [CompilationUnitContext.java <175:20 175:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [CompilationUnitContext.java <175:28 175:31>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [CompilationUnitContext.java <176:13 176:27>]
REFERENCE_TYPE_ARGUMENT com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [CompilationUnitContext.java <176:29 176:106>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<19> [CompilationUnitContext.java <176:109 176:111>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String) [CompilationUnitContext.java <176:126 176:139>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<1> [CompilationUnitContext.java <176:115 176:124>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<18> [CompilationUnitContext.java <176:141 176:145>]
SYMBOL_METHOD boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [CompilationUnitContext.java <177:21 177:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<19> [CompilationUnitContext.java <177:17 177:19>]
LOCAL_SYMBOL: CompilationUnitContext.java<177:33> [CompilationUnitContext.java <177:33 177:33>]
LOCAL_SYMBOL: CompilationUnitContext.java<177:33> [CompilationUnitContext.java <179:13 179:13>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>) [CompilationUnitContext.java <178:40 178:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<19> [CompilationUnitContext.java <178:46 178:48>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [CompilationUnitContext.java <178:51 178:119>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [CompilationUnitContext.java <183:9 183:23>]
REFERENCE_TYPE_ARGUMENT com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [CompilationUnitContext.java <183:25 183:102>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<20> [CompilationUnitContext.java <183:105 183:107>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String) [CompilationUnitContext.java <183:122 183:135>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<1> [CompilationUnitContext.java <183:111 183:120>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [CompilationUnitContext.java <183:152 183:155>]
SYMBOL_METHOD boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [CompilationUnitContext.java <184:17 184:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<20> [CompilationUnitContext.java <184:13 184:15>]
LOCAL_SYMBOL: CompilationUnitContext.java<184:29> [CompilationUnitContext.java <184:29 184:29>]
LOCAL_SYMBOL: CompilationUnitContext.java<184:29> [CompilationUnitContext.java <186:9 186:9>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>) [CompilationUnitContext.java <185:36 185:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<20> [CompilationUnitContext.java <185:42 185:44>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [CompilationUnitContext.java <185:47 185:115>]
SYMBOL_METHOD static boolean com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.isQualifiedName(java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static boolean com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.isQualifiedName(java.lang.String) [CompilationUnitContext.java <189:13 189:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [CompilationUnitContext.java <189:29 189:32>]
LOCAL_SYMBOL: CompilationUnitContext.java<189:36> [CompilationUnitContext.java <189:36 189:36>]
LOCAL_SYMBOL: CompilationUnitContext.java<189:36> [CompilationUnitContext.java <191:9 191:9>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>) [CompilationUnitContext.java <190:36 190:40>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String) [CompilationUnitContext.java <190:53 190:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<1> [CompilationUnitContext.java <190:42 190:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [CompilationUnitContext.java <190:68 190:71>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [CompilationUnitContext.java <190:75 190:143>]
LOCAL_SYMBOL: CompilationUnitContext.java<191:16> [CompilationUnitContext.java <191:16 191:16>]
LOCAL_SYMBOL: CompilationUnitContext.java<191:16> [CompilationUnitContext.java <193:9 193:9>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) [CompilationUnitContext.java <192:36 192:43>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [CompilationUnitContext.java <192:45 192:122>]
SYMBOL_METHOD private java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) [CompilationUnitContext.java <196:5 <196:20 196:24> 202:5>]
REFERENCE_TYPE_USAGE java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.lang.String [CompilationUnitContext.java <196:13 196:18>]
REFERENCE_TYPE_USAGE java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.ast.type.ClassOrInterfaceType [CompilationUnitContext.java <196:26 196:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName<0> [CompilationUnitContext.java <196:47 196:50>]
LOCAL_SYMBOL: CompilationUnitContext.java<196:53> [CompilationUnitContext.java <196:53 196:53>]
LOCAL_SYMBOL: CompilationUnitContext.java<196:53> [CompilationUnitContext.java <202:5 202:5>]
SYMBOL_METHOD boolean java.util.Optional<T>.isPresent()
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> boolean java.util.Optional<T>.isPresent() [CompilationUnitContext.java <197:29 197:37>]
SYMBOL_METHOD java.util.Optional<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.type.ClassOrInterfaceType.getScope()
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.util.Optional<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.type.ClassOrInterfaceType.getScope() [CompilationUnitContext.java <197:18 197:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName<0> [CompilationUnitContext.java <197:13 197:16>]
LOCAL_SYMBOL: CompilationUnitContext.java<197:42> [CompilationUnitContext.java <197:42 197:42>]
LOCAL_SYMBOL: CompilationUnitContext.java<197:42> [CompilationUnitContext.java <199:9 199:9>]
SYMBOL_METHOD java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType)
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) [CompilationUnitContext.java <198:20 198:24>]
SYMBOL_METHOD java.util.Optional<T>.T java.util.Optional<T>.get()
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.util.Optional<T>.T java.util.Optional<T>.get() [CompilationUnitContext.java <198:42 198:44>]
SYMBOL_METHOD java.util.Optional<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.type.ClassOrInterfaceType.getScope()
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.util.Optional<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.type.ClassOrInterfaceType.getScope() [CompilationUnitContext.java <198:31 198:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName<0> [CompilationUnitContext.java <198:26 198:29>]
SYMBOL_METHOD java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId()
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [CompilationUnitContext.java <198:72 198:76>]
SYMBOL_METHOD com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.ClassOrInterfaceType.getName()
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.ClassOrInterfaceType.getName() [CompilationUnitContext.java <198:62 198:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName<0> [CompilationUnitContext.java <198:57 198:60>]
LOCAL_SYMBOL: CompilationUnitContext.java<199:16> [CompilationUnitContext.java <199:16 199:16>]
LOCAL_SYMBOL: CompilationUnitContext.java<199:16> [CompilationUnitContext.java <201:9 201:9>]
SYMBOL_METHOD java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId()
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [CompilationUnitContext.java <200:35 200:39>]
SYMBOL_METHOD com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.ClassOrInterfaceType.getName()
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.ClassOrInterfaceType.getName() [CompilationUnitContext.java <200:25 200:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName<0> [CompilationUnitContext.java <200:20 200:23>]
SYMBOL_METHOD private java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.expr.Name) [CompilationUnitContext.java <204:5 <204:20 204:24> 210:5>]
REFERENCE_TYPE_USAGE java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.expr.Name) -> java.lang.String [CompilationUnitContext.java <204:13 204:18>]
REFERENCE_TYPE_USAGE java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.expr.Name) -> com.github.javaparser.ast.expr.Name [CompilationUnitContext.java <204:26 204:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName<0> [CompilationUnitContext.java <204:31 204:34>]
LOCAL_SYMBOL: CompilationUnitContext.java<204:37> [CompilationUnitContext.java <204:37 204:37>]
LOCAL_SYMBOL: CompilationUnitContext.java<204:37> [CompilationUnitContext.java <210:5 210:5>]
SYMBOL_METHOD boolean java.util.Optional<T>.isPresent()
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.expr.Name) -> boolean java.util.Optional<T>.isPresent() [CompilationUnitContext.java <205:33 205:41>]
SYMBOL_METHOD java.util.Optional<com.github.javaparser.ast.expr.Name> com.github.javaparser.ast.expr.Name.getQualifier()
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.expr.Name) -> java.util.Optional<com.github.javaparser.ast.expr.Name> com.github.javaparser.ast.expr.Name.getQualifier() [CompilationUnitContext.java <205:18 205:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName<0> [CompilationUnitContext.java <205:13 205:16>]
LOCAL_SYMBOL: CompilationUnitContext.java<205:46> [CompilationUnitContext.java <205:46 205:46>]
LOCAL_SYMBOL: CompilationUnitContext.java<205:46> [CompilationUnitContext.java <207:9 207:9>]
SYMBOL_METHOD java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.expr.Name)
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.expr.Name) -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.expr.Name) [CompilationUnitContext.java <206:20 206:24>]
SYMBOL_METHOD java.util.Optional<T>.T java.util.Optional<T>.get()
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.expr.Name) -> java.util.Optional<T>.T java.util.Optional<T>.get() [CompilationUnitContext.java <206:46 206:48>]
SYMBOL_METHOD java.util.Optional<com.github.javaparser.ast.expr.Name> com.github.javaparser.ast.expr.Name.getQualifier()
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.expr.Name) -> java.util.Optional<com.github.javaparser.ast.expr.Name> com.github.javaparser.ast.expr.Name.getQualifier() [CompilationUnitContext.java <206:31 206:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName<0> [CompilationUnitContext.java <206:26 206:29>]
SYMBOL_METHOD java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId()
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.expr.Name) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [CompilationUnitContext.java <206:66 206:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName<0> [CompilationUnitContext.java <206:61 206:64>]
LOCAL_SYMBOL: CompilationUnitContext.java<207:16> [CompilationUnitContext.java <207:16 207:16>]
LOCAL_SYMBOL: CompilationUnitContext.java<207:16> [CompilationUnitContext.java <209:9 209:9>]
SYMBOL_METHOD java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId()
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.expr.Name) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [CompilationUnitContext.java <208:25 208:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName<0> [CompilationUnitContext.java <208:20 208:23>]
SYMBOL_METHOD private java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName(java.lang.String) [CompilationUnitContext.java <212:5 <212:20 212:31> 215:5>]
REFERENCE_TYPE_USAGE java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName(java.lang.String) -> java.lang.String [CompilationUnitContext.java <212:13 212:18>]
REFERENCE_TYPE_USAGE java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName(java.lang.String) -> java.lang.String [CompilationUnitContext.java <212:33 212:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName<0> [CompilationUnitContext.java <212:40 212:44>]
LOCAL_SYMBOL: CompilationUnitContext.java<212:47> [CompilationUnitContext.java <212:47 212:47>]
LOCAL_SYMBOL: CompilationUnitContext.java<212:47> [CompilationUnitContext.java <215:5 215:5>]
REFERENCE_TYPE_USAGE java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName(java.lang.String) -> java.lang.String [CompilationUnitContext.java <213:9 213:14>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName<1> [CompilationUnitContext.java <213:18 213:22>]
SYMBOL_METHOD java.lang.String java.lang.String.split(java.lang.String)
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName(java.lang.String) -> java.lang.String java.lang.String.split(java.lang.String) [CompilationUnitContext.java <213:32 213:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName<0> [CompilationUnitContext.java <213:26 213:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName<1> [CompilationUnitContext.java <214:16 214:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName<1> [CompilationUnitContext.java <214:22 214:26>]
SYMBOL_FIELD int length
REFERENCE_USAGE java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName(java.lang.String) -> int length [CompilationUnitContext.java <214:28 214:33>]
SYMBOL_METHOD private java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName(java.lang.String) [CompilationUnitContext.java <217:5 <217:20 217:30> 224:5>]
REFERENCE_TYPE_USAGE java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName(java.lang.String) -> java.lang.String [CompilationUnitContext.java <217:13 217:18>]
REFERENCE_TYPE_USAGE java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName(java.lang.String) -> java.lang.String [CompilationUnitContext.java <217:32 217:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName<0> [CompilationUnitContext.java <217:39 217:43>]
LOCAL_SYMBOL: CompilationUnitContext.java<217:46> [CompilationUnitContext.java <217:46 217:46>]
LOCAL_SYMBOL: CompilationUnitContext.java<217:46> [CompilationUnitContext.java <224:5 224:5>]
SYMBOL_BUILTIN_TYPE int
REFERENCE_TYPE_USAGE java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName(java.lang.String) -> int [CompilationUnitContext.java <218:9 218:11>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName<1> [CompilationUnitContext.java <218:13 218:19>]
SYMBOL_METHOD int java.lang.String.lastIndexOf(int)
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName(java.lang.String) -> int java.lang.String.lastIndexOf(int) [CompilationUnitContext.java <218:29 218:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName<0> [CompilationUnitContext.java <218:23 218:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName<1> [CompilationUnitContext.java <219:13 219:19>]
LOCAL_SYMBOL: CompilationUnitContext.java<219:28> [CompilationUnitContext.java <219:28 219:28>]
LOCAL_SYMBOL: CompilationUnitContext.java<219:28> [CompilationUnitContext.java <221:9 221:9>]
SYMBOL_METHOD java.lang.UnsupportedOperationException.UnsupportedOperationException()
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName(java.lang.String) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [CompilationUnitContext.java <220:23 220:51>]
REFERENCE_TYPE_USAGE java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName(java.lang.String) -> java.lang.UnsupportedOperationException [CompilationUnitContext.java <220:23 220:51>]
LOCAL_SYMBOL: CompilationUnitContext.java<221:16> [CompilationUnitContext.java <221:16 221:16>]
LOCAL_SYMBOL: CompilationUnitContext.java<221:16> [CompilationUnitContext.java <223:9 223:9>]
SYMBOL_METHOD java.lang.String java.lang.String.substring(int, int)
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName(java.lang.String) -> java.lang.String java.lang.String.substring(int, int) [CompilationUnitContext.java <222:26 222:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName<0> [CompilationUnitContext.java <222:20 222:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName<1> [CompilationUnitContext.java <222:39 222:45>]
SYMBOL_METHOD public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [CompilationUnitContext.java <226:5 <227:47 227:57> 262:5>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_OVERRIDE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [CompilationUnitContext.java <227:47 227:57>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [CompilationUnitContext.java <227:12 227:26>]
REFERENCE_TYPE_ARGUMENT com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [CompilationUnitContext.java <227:28 227:44>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [CompilationUnitContext.java <227:59 227:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<0> [CompilationUnitContext.java <227:66 227:69>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [CompilationUnitContext.java <227:72 227:75>]
REFERENCE_TYPE_ARGUMENT com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [CompilationUnitContext.java <227:77 227:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<1> [CompilationUnitContext.java <227:83 227:96>]
SYMBOL_BUILTIN_TYPE boolean
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [CompilationUnitContext.java <227:99 227:105>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<2> [CompilationUnitContext.java <227:107 227:116>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [CompilationUnitContext.java <227:119 227:128>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<3> [CompilationUnitContext.java <227:130 227:139>]
LOCAL_SYMBOL: CompilationUnitContext.java<227:142> [CompilationUnitContext.java <227:142 227:142>]
LOCAL_SYMBOL: CompilationUnitContext.java<227:142> [CompilationUnitContext.java <262:5 262:5>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.ImportDeclaration [CompilationUnitContext.java <228:14 228:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<4> [CompilationUnitContext.java <228:32 228:41>]
SYMBOL_METHOD com.github.javaparser.ast.NodeList<com.github.javaparser.ast.ImportDeclaration> com.github.javaparser.ast.CompilationUnit.getImports()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.ImportDeclaration> com.github.javaparser.ast.CompilationUnit.getImports() [CompilationUnitContext.java <228:57 228:66>]
SYMBOL_FIELD com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
REFERENCE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [CompilationUnitContext.java <228:45 228:55>]
LOCAL_SYMBOL: CompilationUnitContext.java<228:71> [CompilationUnitContext.java <228:71 228:71>]
LOCAL_SYMBOL: CompilationUnitContext.java<228:71> [CompilationUnitContext.java <260:9 260:9>]
SYMBOL_METHOD boolean com.github.javaparser.ast.ImportDeclaration.isStatic()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.ast.ImportDeclaration.isStatic() [CompilationUnitContext.java <229:27 229:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<4> [CompilationUnitContext.java <229:16 229:25>]
LOCAL_SYMBOL: CompilationUnitContext.java<229:38> [CompilationUnitContext.java <229:38 229:38>]
LOCAL_SYMBOL: CompilationUnitContext.java<229:38> [CompilationUnitContext.java <259:13 259:13>]
SYMBOL_METHOD boolean com.github.javaparser.ast.ImportDeclaration.isAsterisk()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.ast.ImportDeclaration.isAsterisk() [CompilationUnitContext.java <230:31 230:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<4> [CompilationUnitContext.java <230:20 230:29>]
LOCAL_SYMBOL: CompilationUnitContext.java<230:44> [CompilationUnitContext.java <230:44 230:44>]
LOCAL_SYMBOL: CompilationUnitContext.java<230:44> [CompilationUnitContext.java <247:17 247:17>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [CompilationUnitContext.java <231:21 231:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<6> [CompilationUnitContext.java <231:28 231:39>]
SYMBOL_METHOD java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithName<N>.getNameAsString()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithName<N>.getNameAsString() [CompilationUnitContext.java <231:54 231:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<4> [CompilationUnitContext.java <231:43 231:52>]
SYMBOL_METHOD boolean java.util.Optional<T>.isPresent()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.Optional<T>.isPresent() [CompilationUnitContext.java <233:66 233:74>]
SYMBOL_METHOD java.util.Optional<com.github.javaparser.ast.PackageDeclaration> com.github.javaparser.ast.CompilationUnit.getPackageDeclaration()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.PackageDeclaration> com.github.javaparser.ast.CompilationUnit.getPackageDeclaration() [CompilationUnitContext.java <233:42 233:62>]
SYMBOL_FIELD com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
REFERENCE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [CompilationUnitContext.java <233:30 233:40>]
SYMBOL_METHOD boolean java.lang.String.equals(java.lang.Object)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [CompilationUnitContext.java <234:105 234:110>]
SYMBOL_METHOD java.lang.String com.github.javaparser.ast.expr.Name.getIdentifier()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.expr.Name.getIdentifier() [CompilationUnitContext.java <234:89 234:101>]
SYMBOL_METHOD com.github.javaparser.ast.expr.Name com.github.javaparser.ast.PackageDeclaration.getName()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.Name com.github.javaparser.ast.PackageDeclaration.getName() [CompilationUnitContext.java <234:79 234:85>]
SYMBOL_METHOD java.util.Optional<T>.T java.util.Optional<T>.get()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T>.T java.util.Optional<T>.get() [CompilationUnitContext.java <234:73 234:75>]
SYMBOL_METHOD java.util.Optional<com.github.javaparser.ast.PackageDeclaration> com.github.javaparser.ast.CompilationUnit.getPackageDeclaration()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.PackageDeclaration> com.github.javaparser.ast.CompilationUnit.getPackageDeclaration() [CompilationUnitContext.java <234:49 234:69>]
SYMBOL_FIELD com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
REFERENCE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [CompilationUnitContext.java <234:37 234:47>]
SYMBOL_METHOD java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName(java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName(java.lang.String) [CompilationUnitContext.java <234:112 234:122>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<6> [CompilationUnitContext.java <234:124 234:135>]
SYMBOL_METHOD boolean java.util.stream.Stream<T>.anyMatch(java.util.function.Predicate<? super T>)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.stream.Stream<T>.anyMatch(java.util.function.Predicate<? super T>) [CompilationUnitContext.java <235:69 235:76>]
SYMBOL_METHOD java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [CompilationUnitContext.java <235:60 235:65>]
SYMBOL_METHOD com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.ast.CompilationUnit.getTypes()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.ast.CompilationUnit.getTypes() [CompilationUnitContext.java <235:49 235:56>]
SYMBOL_FIELD com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
REFERENCE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [CompilationUnitContext.java <235:37 235:47>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<8> [CompilationUnitContext.java <235:78 235:79>]
SYMBOL_METHOD boolean java.lang.String.equals(java.lang.Object)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [CompilationUnitContext.java <235:113 235:118>]
SYMBOL_METHOD java.lang.String com.github.javaparser.ast.expr.SimpleName.getIdentifier()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.expr.SimpleName.getIdentifier() [CompilationUnitContext.java <235:97 235:109>]
SYMBOL_METHOD com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName() [CompilationUnitContext.java <235:87 235:93>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<8> [CompilationUnitContext.java <235:84 235:85>]
SYMBOL_METHOD java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName(java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName(java.lang.String) [CompilationUnitContext.java <235:120 235:131>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<6> [CompilationUnitContext.java <235:133 235:144>]
LOCAL_SYMBOL: CompilationUnitContext.java<235:150> [CompilationUnitContext.java <235:150 235:150>]
LOCAL_SYMBOL: CompilationUnitContext.java<235:150> [CompilationUnitContext.java <239:21 239:21>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) [CompilationUnitContext.java <238:48 238:55>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [CompilationUnitContext.java <238:57 238:73>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [CompilationUnitContext.java <241:21 241:89>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<9> [CompilationUnitContext.java <241:91 241:93>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String) [CompilationUnitContext.java <241:108 241:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<3> [CompilationUnitContext.java <241:97 241:106>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<6> [CompilationUnitContext.java <241:118 241:129>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [CompilationUnitContext.java <242:21 242:35>]
REFERENCE_TYPE_ARGUMENT com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [CompilationUnitContext.java <242:37 242:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<10> [CompilationUnitContext.java <242:56 242:61>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [CompilationUnitContext.java <242:87 242:103>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<9> [CompilationUnitContext.java <242:105 242:107>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<0> [CompilationUnitContext.java <242:110 242:113>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<1> [CompilationUnitContext.java <242:116 242:129>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<3> [CompilationUnitContext.java <242:138 242:147>]
SYMBOL_METHOD boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [CompilationUnitContext.java <244:32 244:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<10> [CompilationUnitContext.java <244:25 244:30>]
LOCAL_SYMBOL: CompilationUnitContext.java<244:44> [CompilationUnitContext.java <244:44 244:44>]
LOCAL_SYMBOL: CompilationUnitContext.java<244:44> [CompilationUnitContext.java <246:21 246:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<10> [CompilationUnitContext.java <245:32 245:37>]
LOCAL_SYMBOL: CompilationUnitContext.java<247:23> [CompilationUnitContext.java <247:23 247:23>]
LOCAL_SYMBOL: CompilationUnitContext.java<247:23> [CompilationUnitContext.java <258:17 258:17>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [CompilationUnitContext.java <248:21 248:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<11> [CompilationUnitContext.java <248:28 248:32>]
SYMBOL_METHOD java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithName<N>.getNameAsString()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithName<N>.getNameAsString() [CompilationUnitContext.java <248:47 248:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<4> [CompilationUnitContext.java <248:36 248:45>]
SYMBOL_METHOD boolean java.lang.String.equals(java.lang.Object)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [CompilationUnitContext.java <250:31 250:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<11> [CompilationUnitContext.java <250:25 250:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<0> [CompilationUnitContext.java <250:38 250:41>]
SYMBOL_METHOD boolean java.lang.String.endsWith(java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.endsWith(java.lang.String) [CompilationUnitContext.java <250:53 250:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<11> [CompilationUnitContext.java <250:47 250:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<0> [CompilationUnitContext.java <250:68 250:71>]
LOCAL_SYMBOL: CompilationUnitContext.java<250:75> [CompilationUnitContext.java <250:75 250:75>]
LOCAL_SYMBOL: CompilationUnitContext.java<250:75> [CompilationUnitContext.java <257:21 257:21>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [CompilationUnitContext.java <251:25 251:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<12> [CompilationUnitContext.java <251:32 251:39>]
SYMBOL_METHOD java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) [CompilationUnitContext.java <251:43 251:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<11> [CompilationUnitContext.java <251:51 251:55>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [CompilationUnitContext.java <252:25 252:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<13> [CompilationUnitContext.java <252:95 252:97>]
SYMBOL_METHOD com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String) [CompilationUnitContext.java <252:112 252:120>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<3> [CompilationUnitContext.java <252:101 252:110>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<12> [CompilationUnitContext.java <252:122 252:129>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [CompilationUnitContext.java <253:25 253:39>]
REFERENCE_TYPE_ARGUMENT com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [CompilationUnitContext.java <253:41 253:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<14> [CompilationUnitContext.java <253:60 253:65>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [CompilationUnitContext.java <253:91 253:107>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<13> [CompilationUnitContext.java <253:109 253:111>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<0> [CompilationUnitContext.java <253:114 253:117>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<1> [CompilationUnitContext.java <253:120 253:133>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<3> [CompilationUnitContext.java <253:142 253:151>]
SYMBOL_METHOD boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [CompilationUnitContext.java <254:36 254:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<14> [CompilationUnitContext.java <254:29 254:34>]
LOCAL_SYMBOL: CompilationUnitContext.java<254:48> [CompilationUnitContext.java <254:48 254:48>]
LOCAL_SYMBOL: CompilationUnitContext.java<254:48> [CompilationUnitContext.java <256:25 256:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<14> [CompilationUnitContext.java <255:36 255:41>]
SYMBOL_METHOD static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>)
REFERENCE_CALL com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) [CompilationUnitContext.java <261:32 261:39>]
REFERENCE_TYPE_USAGE com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [CompilationUnitContext.java <261:41 261:57>]
SYMBOL_METHOD private java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) [CompilationUnitContext.java <268:5 <268:20 268:26> 275:5>]
REFERENCE_TYPE_USAGE java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) -> java.lang.String [CompilationUnitContext.java <268:13 268:18>]
REFERENCE_TYPE_USAGE java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) -> java.lang.String [CompilationUnitContext.java <268:28 268:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType<0> [CompilationUnitContext.java <268:35 268:39>]
LOCAL_SYMBOL: CompilationUnitContext.java<268:42> [CompilationUnitContext.java <268:42 268:42>]
LOCAL_SYMBOL: CompilationUnitContext.java<268:42> [CompilationUnitContext.java <275:5 275:5>]
SYMBOL_BUILTIN_TYPE int
REFERENCE_TYPE_USAGE java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) -> int [CompilationUnitContext.java <269:9 269:11>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType<1> [CompilationUnitContext.java <269:13 269:17>]
SYMBOL_METHOD int java.lang.String.lastIndexOf(int)
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) -> int java.lang.String.lastIndexOf(int) [CompilationUnitContext.java <269:27 269:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType<0> [CompilationUnitContext.java <269:21 269:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType<1> [CompilationUnitContext.java <270:13 270:17>]
LOCAL_SYMBOL: CompilationUnitContext.java<270:26> [CompilationUnitContext.java <270:26 270:26>]
LOCAL_SYMBOL: CompilationUnitContext.java<270:26> [CompilationUnitContext.java <272:9 272:9>]
SYMBOL_METHOD java.lang.UnsupportedOperationException.UnsupportedOperationException()
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [CompilationUnitContext.java <271:23 271:51>]
REFERENCE_TYPE_USAGE java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) -> java.lang.UnsupportedOperationException [CompilationUnitContext.java <271:23 271:51>]
REFERENCE_TYPE_USAGE java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) -> java.lang.String [CompilationUnitContext.java <273:9 273:14>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType<2> [CompilationUnitContext.java <273:16 273:23>]
SYMBOL_METHOD java.lang.String java.lang.String.substring(int, int)
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) -> java.lang.String java.lang.String.substring(int, int) [CompilationUnitContext.java <273:33 273:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType<0> [CompilationUnitContext.java <273:27 273:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType<1> [CompilationUnitContext.java <273:46 273:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType<2> [CompilationUnitContext.java <274:16 274:23>]
SYMBOL_METHOD private java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String) [CompilationUnitContext.java <277:5 <277:20 277:28> 284:5>]
REFERENCE_TYPE_USAGE java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String) -> java.lang.String [CompilationUnitContext.java <277:13 277:18>]
REFERENCE_TYPE_USAGE java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String) -> java.lang.String [CompilationUnitContext.java <277:30 277:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember<0> [CompilationUnitContext.java <277:37 277:41>]
LOCAL_SYMBOL: CompilationUnitContext.java<277:44> [CompilationUnitContext.java <277:44 277:44>]
LOCAL_SYMBOL: CompilationUnitContext.java<277:44> [CompilationUnitContext.java <284:5 284:5>]
SYMBOL_BUILTIN_TYPE int
REFERENCE_TYPE_USAGE java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String) -> int [CompilationUnitContext.java <278:9 278:11>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember<1> [CompilationUnitContext.java <278:13 278:17>]
SYMBOL_METHOD int java.lang.String.lastIndexOf(int)
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String) -> int java.lang.String.lastIndexOf(int) [CompilationUnitContext.java <278:27 278:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember<0> [CompilationUnitContext.java <278:21 278:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember<1> [CompilationUnitContext.java <279:13 279:17>]
LOCAL_SYMBOL: CompilationUnitContext.java<279:26> [CompilationUnitContext.java <279:26 279:26>]
LOCAL_SYMBOL: CompilationUnitContext.java<279:26> [CompilationUnitContext.java <281:9 281:9>]
SYMBOL_METHOD java.lang.UnsupportedOperationException.UnsupportedOperationException()
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [CompilationUnitContext.java <280:23 280:51>]
REFERENCE_TYPE_USAGE java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String) -> java.lang.UnsupportedOperationException [CompilationUnitContext.java <280:23 280:51>]
REFERENCE_TYPE_USAGE java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String) -> java.lang.String [CompilationUnitContext.java <282:9 282:14>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember<2> [CompilationUnitContext.java <282:16 282:25>]
SYMBOL_METHOD java.lang.String java.lang.String.substring(int)
REFERENCE_CALL java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String) -> java.lang.String java.lang.String.substring(int) [CompilationUnitContext.java <282:35 282:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember<0> [CompilationUnitContext.java <282:29 282:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember<1> [CompilationUnitContext.java <282:45 282:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember<2> [CompilationUnitContext.java <283:16 283:25>]
COMMENT: comment [CompilationUnitContext.java <1:1 15:3>]
COMMENT: comment [CompilationUnitContext.java <44:5 44:7>]
COMMENT: comment [CompilationUnitContext.java <45:5 45:22>]
COMMENT: comment [CompilationUnitContext.java <46:5 46:7>]
COMMENT: comment [CompilationUnitContext.java <52:5 52:7>]
COMMENT: comment [CompilationUnitContext.java <53:5 53:20>]
COMMENT: comment [CompilationUnitContext.java <54:5 54:7>]
COMMENT: comment [CompilationUnitContext.java <60:5 60:7>]
COMMENT: comment [CompilationUnitContext.java <61:5 61:22>]
COMMENT: comment [CompilationUnitContext.java <62:5 62:7>]
COMMENT: comment [CompilationUnitContext.java <67:9 67:36>]
COMMENT: comment [CompilationUnitContext.java <80:9 80:48>]
COMMENT: comment [CompilationUnitContext.java <94:25 94:67>]
COMMENT: comment [CompilationUnitContext.java <132:13 132:37>]
COMMENT: comment [CompilationUnitContext.java <154:13 154:47>]
COMMENT: comment [CompilationUnitContext.java <166:9 166:34>]
COMMENT: comment [CompilationUnitContext.java <174:13 174:54>]
COMMENT: comment [CompilationUnitContext.java <182:9 182:40>]
COMMENT: comment [CompilationUnitContext.java <188:9 188:122>]
COMMENT: comment [CompilationUnitContext.java <236:25 236:123>]
COMMENT: comment [CompilationUnitContext.java <237:25 237:58>]
COMMENT: comment [CompilationUnitContext.java <264:5 264:7>]
COMMENT: comment [CompilationUnitContext.java <265:5 265:23>]
COMMENT: comment [CompilationUnitContext.java <266:5 266:7>]
