FILE: CompilationUnitContext.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts [ <17:60 17:67>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <17:44 17:58>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <27:43 27:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ <28:43 28:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel
QUALIFIER: com.github.javaparser.symbolsolver [ <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ <27:30 27:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <28:30 28:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <29:30 29:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <30:30 30:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <31:30 31:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <32:30 32:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <33:30 33:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <34:30 34:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <35:30 35:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ <72:51 72:62>]
QUALIFIER: com.github.javaparser.symbolsolver [ <86:47 86:58>]
QUALIFIER: com.github.javaparser.symbolsolver [ <99:51 99:62>]
QUALIFIER: com.github.javaparser.symbolsolver [ <111:50 111:61>]
QUALIFIER: com.github.javaparser.symbolsolver [ <147:63 147:74>]
QUALIFIER: com.github.javaparser.symbolsolver [ <149:85 149:96>]
QUALIFIER: com.github.javaparser.symbolsolver [ <158:59 158:70>]
QUALIFIER: com.github.javaparser.symbolsolver [ <160:81 160:92>]
QUALIFIER: com.github.javaparser.symbolsolver [ <169:51 169:62>]
QUALIFIER: com.github.javaparser.symbolsolver [ <171:73 171:84>]
QUALIFIER: com.github.javaparser.symbolsolver [ <176:51 176:62>]
QUALIFIER: com.github.javaparser.symbolsolver [ <178:73 178:84>]
QUALIFIER: com.github.javaparser.symbolsolver [ <183:47 183:58>]
QUALIFIER: com.github.javaparser.symbolsolver [ <185:69 185:80>]
QUALIFIER: com.github.javaparser.symbolsolver [ <190:97 190:108>]
QUALIFIER: com.github.javaparser.symbolsolver [ <192:67 192:78>]
QUALIFIER: com.github.javaparser.symbolsolver [ <241:43 241:54>]
QUALIFIER: com.github.javaparser.symbolsolver [ <252:47 252:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ <17:20 17:29>]
QUALIFIER: com.github.javaparser [ <19:19 19:28>]
QUALIFIER: com.github.javaparser [ <20:19 20:28>]
QUALIFIER: com.github.javaparser [ <21:19 21:28>]
QUALIFIER: com.github.javaparser [ <22:19 22:28>]
QUALIFIER: com.github.javaparser [ <23:19 23:28>]
QUALIFIER: com.github.javaparser [ <24:19 24:28>]
QUALIFIER: com.github.javaparser [ <25:19 25:28>]
QUALIFIER: com.github.javaparser [ <26:19 26:28>]
QUALIFIER: com.github.javaparser [ <27:19 27:28>]
QUALIFIER: com.github.javaparser [ <28:19 28:28>]
QUALIFIER: com.github.javaparser [ <29:19 29:28>]
QUALIFIER: com.github.javaparser [ <30:19 30:28>]
QUALIFIER: com.github.javaparser [ <31:19 31:28>]
QUALIFIER: com.github.javaparser [ <32:19 32:28>]
QUALIFIER: com.github.javaparser [ <33:19 33:28>]
QUALIFIER: com.github.javaparser [ <34:19 34:28>]
QUALIFIER: com.github.javaparser [ <35:19 35:28>]
QUALIFIER: com.github.javaparser [ <72:40 72:49>]
QUALIFIER: com.github.javaparser [ <86:36 86:45>]
QUALIFIER: com.github.javaparser [ <99:40 99:49>]
QUALIFIER: com.github.javaparser [ <111:39 111:48>]
QUALIFIER: com.github.javaparser [ <147:52 147:61>]
QUALIFIER: com.github.javaparser [ <149:74 149:83>]
QUALIFIER: com.github.javaparser [ <158:48 158:57>]
QUALIFIER: com.github.javaparser [ <160:70 160:79>]
QUALIFIER: com.github.javaparser [ <169:40 169:49>]
QUALIFIER: com.github.javaparser [ <171:62 171:71>]
QUALIFIER: com.github.javaparser [ <176:40 176:49>]
QUALIFIER: com.github.javaparser [ <178:62 178:71>]
QUALIFIER: com.github.javaparser [ <183:36 183:45>]
QUALIFIER: com.github.javaparser [ <185:58 185:67>]
QUALIFIER: com.github.javaparser [ <190:86 190:95>]
QUALIFIER: com.github.javaparser [ <192:56 192:65>]
QUALIFIER: com.github.javaparser [ <241:32 241:41>]
QUALIFIER: com.github.javaparser [ <252:36 252:45>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ <17:13 17:18>]
QUALIFIER: com.github [ <19:12 19:17>]
QUALIFIER: com.github [ <20:12 20:17>]
QUALIFIER: com.github [ <21:12 21:17>]
QUALIFIER: com.github [ <22:12 22:17>]
QUALIFIER: com.github [ <23:12 23:17>]
QUALIFIER: com.github [ <24:12 24:17>]
QUALIFIER: com.github [ <25:12 25:17>]
QUALIFIER: com.github [ <26:12 26:17>]
QUALIFIER: com.github [ <27:12 27:17>]
QUALIFIER: com.github [ <28:12 28:17>]
QUALIFIER: com.github [ <29:12 29:17>]
QUALIFIER: com.github [ <30:12 30:17>]
QUALIFIER: com.github [ <31:12 31:17>]
QUALIFIER: com.github [ <32:12 32:17>]
QUALIFIER: com.github [ <33:12 33:17>]
QUALIFIER: com.github [ <34:12 34:17>]
QUALIFIER: com.github [ <35:12 35:17>]
QUALIFIER: com.github [ <72:33 72:38>]
QUALIFIER: com.github [ <86:29 86:34>]
QUALIFIER: com.github [ <99:33 99:38>]
QUALIFIER: com.github [ <111:32 111:37>]
QUALIFIER: com.github [ <147:45 147:50>]
QUALIFIER: com.github [ <149:67 149:72>]
QUALIFIER: com.github [ <158:41 158:46>]
QUALIFIER: com.github [ <160:63 160:68>]
QUALIFIER: com.github [ <169:33 169:38>]
QUALIFIER: com.github [ <171:55 171:60>]
QUALIFIER: com.github [ <176:33 176:38>]
QUALIFIER: com.github [ <178:55 178:60>]
QUALIFIER: com.github [ <183:29 183:34>]
QUALIFIER: com.github [ <185:51 185:56>]
QUALIFIER: com.github [ <190:79 190:84>]
QUALIFIER: com.github [ <192:49 192:54>]
QUALIFIER: com.github [ <241:25 241:30>]
QUALIFIER: com.github [ <252:29 252:34>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ <17:9 17:11>]
QUALIFIER: com [ <19:8 19:10>]
QUALIFIER: com [ <20:8 20:10>]
QUALIFIER: com [ <21:8 21:10>]
QUALIFIER: com [ <22:8 22:10>]
QUALIFIER: com [ <23:8 23:10>]
QUALIFIER: com [ <24:8 24:10>]
QUALIFIER: com [ <25:8 25:10>]
QUALIFIER: com [ <26:8 26:10>]
QUALIFIER: com [ <27:8 27:10>]
QUALIFIER: com [ <28:8 28:10>]
QUALIFIER: com [ <29:8 29:10>]
QUALIFIER: com [ <30:8 30:10>]
QUALIFIER: com [ <31:8 31:10>]
QUALIFIER: com [ <32:8 32:10>]
QUALIFIER: com [ <33:8 33:10>]
QUALIFIER: com [ <34:8 34:10>]
QUALIFIER: com [ <35:8 35:10>]
QUALIFIER: com [ <72:29 72:31>]
QUALIFIER: com [ <86:25 86:27>]
QUALIFIER: com [ <99:29 99:31>]
QUALIFIER: com [ <111:28 111:30>]
QUALIFIER: com [ <147:41 147:43>]
QUALIFIER: com [ <149:63 149:65>]
QUALIFIER: com [ <158:37 158:39>]
QUALIFIER: com [ <160:59 160:61>]
QUALIFIER: com [ <169:29 169:31>]
QUALIFIER: com [ <171:51 171:53>]
QUALIFIER: com [ <176:29 176:31>]
QUALIFIER: com [ <178:51 178:53>]
QUALIFIER: com [ <183:25 183:27>]
QUALIFIER: com [ <185:47 185:49>]
QUALIFIER: com [ <190:75 190:77>]
QUALIFIER: com [ <192:45 192:47>]
QUALIFIER: com [ <241:21 241:23>]
QUALIFIER: com [ <252:25 252:27>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.ast [ <19:30 19:32>]
QUALIFIER: com.github.javaparser.ast [ <20:30 20:32>]
QUALIFIER: com.github.javaparser.ast [ <21:30 21:32>]
QUALIFIER: com.github.javaparser.ast [ <22:30 22:32>]
QUALIFIER: com.github.javaparser.ast [ <23:30 23:32>]
QUALIFIER: com.github.javaparser.ast [ <24:30 24:32>]
QUALIFIER: com.github.javaparser.ast [ <25:30 25:32>]
QUALIFIER: com.github.javaparser.ast [ <26:30 26:32>]
SYMBOL_PACKAGE: com.github.javaparser.ast
QUALIFIER: com.github.javaparser.ast.body [ <21:34 21:37>]
QUALIFIER: com.github.javaparser.ast.body [ <22:34 22:37>]
QUALIFIER: com.github.javaparser.ast.body [ <23:34 23:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.body
QUALIFIER: com.github.javaparser.ast.expr [ <24:34 24:37>]
QUALIFIER: com.github.javaparser.ast.expr [ <25:34 25:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.expr
QUALIFIER: com.github.javaparser.ast.type [ <26:34 26:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.type
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ <116:55 116:70>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations [ <28:59 28:70>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <29:49 29:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <30:49 30:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <72:70 72:81>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <86:66 86:77>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <99:70 99:81>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <111:69 111:80>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <147:82 147:93>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <149:104 149:115>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <158:78 158:89>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <160:100 160:111>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <169:70 169:81>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <171:92 171:103>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <176:70 176:81>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <178:92 178:103>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <183:66 183:77>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <185:88 185:99>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <190:116 190:127>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <192:86 192:97>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <241:62 241:73>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ <252:66 252:77>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [ <29:43 29:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <30:43 30:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <31:43 31:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <32:43 32:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <33:43 33:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <72:64 72:68>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <86:60 86:64>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <99:64 99:68>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <111:63 111:67>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <147:76 147:80>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <149:98 149:102>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <158:72 158:76>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <160:94 160:98>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <169:64 169:68>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <171:86 171:90>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <176:64 176:68>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <178:86 178:90>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <183:60 183:64>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <185:82 185:86>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <190:110 190:114>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <192:80 192:84>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <241:56 241:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ <252:60 252:64>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <31:49 31:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ <32:49 32:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ <33:49 33:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ <242:65 242:85>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ <253:69 253:89>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution [ <34:43 34:52>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution [ <35:43 35:52>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.resolution
QUALIFIER: java.util [ <37:13 37:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [ <37:8 37:11>]
SYMBOL_PACKAGE: java
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext [ <72:107 72:110>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext [ <167:13 167:16>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext [ <168:28 168:31>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext [ <233:25 233:28>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext [ <234:32 234:35>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext [ <235:32 235:35>]
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext [ <42:1 <42:14 42:35> 285:1>]
SYMBOL_METHOD: private static boolean com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.isQualifiedName(java.lang.String) [ <48:5 <48:5 <48:28 48:42> 48:55> 50:5>]
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_PACKAGE: java.lang
SYMBOL_METHOD: boolean java.lang.String.contains(java.lang.CharSequence)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.CompilationUnitContext(com.github.javaparser.ast.CompilationUnit, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <56:5 <56:5 <56:12 56:33> 56:85> 58:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <64:5 <64:5 <65:56 65:66> 65:102> 108:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: private java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) [ <268:5 <268:5 <268:20 268:26> 268:40> 275:5>]
SYMBOL_METHOD: private java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String) [ <277:5 <277:5 <277:20 277:28> 277:42> 284:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <110:5 <110:5 <111:99 111:107> 111:143> 194:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.resolution.SymbolSolver.SymbolSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration()
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.ImportDeclaration> com.github.javaparser.ast.CompilationUnit.getImports()
SYMBOL_FIELD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
SYMBOL_METHOD: boolean com.github.javaparser.ast.ImportDeclaration.isStatic()
SYMBOL_METHOD: boolean com.github.javaparser.ast.ImportDeclaration.isAsterisk()
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithName<N>.getNameAsString()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String)
SYMBOL_METHOD: boolean java.lang.String.equals(java.lang.Object)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>)
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <107:16 107:30>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <116:32 116:46>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <118:32 118:46>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <149:36 149:50>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <160:32 160:46>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <171:24 171:38>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <178:24 178:38>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <185:20 185:34>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <190:20 190:34>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <192:20 192:34>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <238:32 238:46>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ <261:16 261:30>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.ast.CompilationUnit.getTypes()
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId()
SYMBOL_METHOD: com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnnotationDeclaration.JavaParserAnnotationDeclaration(com.github.javaparser.ast.body.AnnotationDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)
SYMBOL_METHOD: java.lang.String java.lang.Class<T>.getCanonicalName()
SYMBOL_METHOD: java.lang.Class<?> java.lang.Object.getClass()
SYMBOL_BUILTIN_TYPE: int
SYMBOL_METHOD: int java.lang.String.indexOf(int)
SYMBOL_METHOD: java.lang.String java.lang.String.substring(int, int)
SYMBOL_METHOD: boolean java.util.Optional<T>.isPresent()
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.ast.expr.Name> com.github.javaparser.ast.expr.Name.getQualifier()
SYMBOL_METHOD: com.github.javaparser.ast.expr.Name com.github.javaparser.ast.ImportDeclaration.getName()
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.expr.Name.getIdentifier()
SYMBOL_METHOD: boolean java.lang.String.endsWith(java.lang.String)
SYMBOL_METHOD: java.lang.String java.lang.String.substring(int)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>)
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.ast.PackageDeclaration> com.github.javaparser.ast.CompilationUnit.getPackageDeclaration()
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.Node.toString()
SYMBOL_METHOD: com.github.javaparser.ast.expr.Name com.github.javaparser.ast.PackageDeclaration.getName()
SYMBOL_METHOD: java.util.Optional<T>.T java.util.Optional<T>.get()
SYMBOL_METHOD: private java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) [ <196:5 <196:5 <196:20 196:24> 196:51> 202:5>]
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.type.ClassOrInterfaceType.getScope()
SYMBOL_METHOD: com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.ClassOrInterfaceType.getName()
SYMBOL_METHOD: private java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.expr.Name) [ <204:5 <204:5 <204:20 204:24> 204:35> 210:5>]
SYMBOL_METHOD: private java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName(java.lang.String) [ <212:5 <212:5 <212:20 212:31> 212:45> 215:5>]
SYMBOL_METHOD: java.lang.String java.lang.String.split(java.lang.String)
SYMBOL_FIELD: int length
SYMBOL_METHOD: private java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName(java.lang.String) [ <217:5 <217:5 <217:20 217:30> 217:44> 224:5>]
SYMBOL_METHOD: int java.lang.String.lastIndexOf(int)
SYMBOL_METHOD: java.lang.UnsupportedOperationException.UnsupportedOperationException()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <226:5 <226:5 <227:47 227:57> 227:140> 262:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: boolean java.util.stream.Stream<T>.anyMatch(java.util.function.Predicate<? super T>)
SYMBOL_METHOD: java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream()
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.expr.SimpleName.getIdentifier()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_IMPORT: CompilationUnitContext.java -> com.github.javaparser.ast.CompilationUnit [ <19:34 19:48>]
REFERENCE_IMPORT: CompilationUnitContext.java -> com.github.javaparser.ast.ImportDeclaration [ <20:34 20:50>]
REFERENCE_IMPORT: CompilationUnitContext.java -> com.github.javaparser.ast.body.AnnotationDeclaration [ <21:39 21:59>]
REFERENCE_IMPORT: CompilationUnitContext.java -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ <22:39 22:65>]
REFERENCE_IMPORT: CompilationUnitContext.java -> com.github.javaparser.ast.body.TypeDeclaration<T> [ <23:39 23:53>]
REFERENCE_IMPORT: CompilationUnitContext.java -> com.github.javaparser.ast.expr.MethodCallExpr [ <24:39 24:52>]
REFERENCE_IMPORT: CompilationUnitContext.java -> com.github.javaparser.ast.expr.Name [ <25:39 25:42>]
REFERENCE_IMPORT: CompilationUnitContext.java -> com.github.javaparser.ast.type.ClassOrInterfaceType [ <26:39 26:58>]
REFERENCE_IMPORT: CompilationUnitContext.java -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ <27:59 27:74>]
REFERENCE_IMPORT: CompilationUnitContext.java -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnnotationDeclaration [ <28:72 28:102>]
REFERENCE_IMPORT: CompilationUnitContext.java -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <29:62 29:78>]
REFERENCE_IMPORT: CompilationUnitContext.java -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [ <30:62 30:77>]
REFERENCE_IMPORT: CompilationUnitContext.java -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <31:60 31:74>]
REFERENCE_IMPORT: CompilationUnitContext.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <32:60 32:69>]
REFERENCE_IMPORT: CompilationUnitContext.java -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <33:60 33:63>]
REFERENCE_IMPORT: CompilationUnitContext.java -> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ <34:54 34:74>]
REFERENCE_IMPORT: CompilationUnitContext.java -> com.github.javaparser.symbolsolver.resolution.SymbolSolver [ <35:54 35:65>]
REFERENCE_IMPORT: CompilationUnitContext.java -> java.util.List<E> [ <37:18 37:21>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N> -> com.github.javaparser.ast.CompilationUnit [ <42:71 42:85>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N> [ <42:45 42:69>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext -> com.github.javaparser.ast.CompilationUnit [ <42:71 42:85>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.isQualifiedName(java.lang.String) -> boolean [ <48:20 48:26>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.isQualifiedName(java.lang.String) -> java.lang.String [ <48:44 48:49>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.isQualifiedName(java.lang.String) -> boolean java.lang.String.contains(java.lang.CharSequence) [ <49:21 49:28>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.CompilationUnitContext(com.github.javaparser.ast.CompilationUnit, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <56:12 56:33>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.CompilationUnitContext(com.github.javaparser.ast.CompilationUnit, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.CompilationUnit [ <56:35 56:49>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.CompilationUnitContext(com.github.javaparser.ast.CompilationUnit, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <56:64 56:73>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.CompilationUnitContext(com.github.javaparser.ast.CompilationUnit, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <57:9 57:13>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <65:56 65:66>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <64:6 64:13>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> ? extends ValueDeclaration [ <65:28 65:53>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> ? extends ValueDeclaration [ <87:41 87:66>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <65:12 65:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <72:13 72:27>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <87:25 87:39>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [ <65:38 65:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [ <87:51 87:66>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [ <107:41 107:56>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <65:68 65:73>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <68:9 68:14>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <70:13 70:18>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <71:13 71:18>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <85:25 85:30>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <92:25 92:30>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <95:25 95:30>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <96:25 96:30>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <65:81 65:90>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.contains(java.lang.CharSequence) [ <69:23 69:30>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) [ <70:31 70:37>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) [ <96:43 96:49>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String) [ <71:33 71:41>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String) [ <95:45 95:53>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <72:29 72:97>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <111:28 111:96>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <72:83 72:97>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <86:79 86:93>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <99:83 99:97>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <72:112 72:120>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <73:22 73:29>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <88:33 88:40>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String) [ <74:53 74:69>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String) [ <87:104 87:120>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String) [ <100:65 100:81>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolSolver.SymbolSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <74:28 74:39>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolSolver.SymbolSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <87:79 87:90>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolSolver.SymbolSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <100:40 100:51>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolSolver [ <74:28 74:39>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolSolver [ <87:79 87:90>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolSolver [ <100:40 100:51>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ <74:76 74:102>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.ImportDeclaration> com.github.javaparser.ast.CompilationUnit.getImports() [ <81:25 81:34>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.ImportDeclaration> com.github.javaparser.ast.CompilationUnit.getImports() [ <82:61 82:70>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <81:13 81:23>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <82:49 82:59>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.ImportDeclaration [ <82:18 82:34>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.ast.ImportDeclaration.isStatic() [ <83:31 83:38>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.ast.ImportDeclaration.isAsterisk() [ <84:35 84:44>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithName<N>.getNameAsString() [ <85:51 85:65>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithName<N>.getNameAsString() [ <92:51 92:65>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String) [ <86:121 86:129>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String) [ <99:125 99:133>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [ <98:40 98:45>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) [ <107:32 107:39>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <111:99 111:107>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <110:6 110:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <111:12 111:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <147:25 147:39>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <158:21 158:35>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <169:13 169:27>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <176:13 176:27>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <183:9 183:23>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <111:82 111:96>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <149:117 149:131>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <160:113 160:127>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <171:105 171:119>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <178:105 178:119>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <185:101 185:115>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <190:129 190:143>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <111:109 111:114>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <128:13 128:18>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <135:21 135:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <157:21 157:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <168:13 168:18>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <175:13 175:18>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <111:122 111:131>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.ast.CompilationUnit.getTypes() [ <112:25 112:32>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.ast.CompilationUnit.getTypes() [ <113:56 113:63>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <112:13 112:23>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <113:44 113:54>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <126:13 126:23>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <133:49 133:59>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <155:49 155:59>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <167:18 167:28>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <168:33 168:43>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.body.TypeDeclaration<T> -> ? [ <113:34 113:34>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.TypeDeclaration<T> [ <113:18 113:32>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [ <114:44 114:49>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [ <137:93 137:98>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [ <114:36 114:40>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName() [ <114:26 114:32>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ <115:41 115:67>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ <116:108 116:134>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [ <116:48 116:53>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [ <118:48 118:53>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) [ <116:88 116:105>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <116:72 116:74>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.AnnotationDeclaration [ <117:48 117:68>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.AnnotationDeclaration [ <118:92 118:112>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnnotationDeclaration.JavaParserAnnotationDeclaration(com.github.javaparser.ast.body.AnnotationDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <118:59 118:89>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnnotationDeclaration [ <118:59 118:89>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [ <120:35 120:63>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.UnsupportedOperationException [ <120:35 120:63>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String java.lang.Class<T>.getCanonicalName() [ <120:81 120:96>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Class<?> java.lang.Object.getClass() [ <120:70 120:77>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.ImportDeclaration> com.github.javaparser.ast.CompilationUnit.getImports() [ <126:25 126:34>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.ImportDeclaration> com.github.javaparser.ast.CompilationUnit.getImports() [ <133:61 133:70>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.ImportDeclaration> com.github.javaparser.ast.CompilationUnit.getImports() [ <155:61 155:70>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int [ <127:13 127:15>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int java.lang.String.indexOf(int) [ <127:31 127:37>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String java.lang.String.substring(int, int) [ <130:31 130:39>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.ImportDeclaration [ <133:18 133:34>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.ImportDeclaration [ <155:18 155:34>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.ast.ImportDeclaration.isAsterisk() [ <134:33 134:42>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.ast.ImportDeclaration.isAsterisk() [ <156:32 156:41>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithName<N>.getNameAsString() [ <135:47 135:61>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithName<N>.getNameAsString() [ <157:47 157:61>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [ <136:21 136:27>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [ <137:21 137:27>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.Optional<T>.isPresent() [ <136:83 136:91>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.Optional<T>.isPresent() [ <167:54 167:62>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.expr.Name> com.github.javaparser.ast.expr.Name.getQualifier() [ <136:68 136:79>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.Name com.github.javaparser.ast.ImportDeclaration.getName() [ <136:58 136:64>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.Name com.github.javaparser.ast.ImportDeclaration.getName() [ <137:67 137:73>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.expr.Name.getIdentifier() [ <137:77 137:89>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.endsWith(java.lang.String) [ <140:43 140:50>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String java.lang.String.substring(int) [ <142:54 142:62>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <147:41 147:118>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <158:37 158:114>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <169:29 169:106>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <176:29 176:106>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <183:25 183:102>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <147:95 147:118>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <158:91 158:114>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <169:83 169:106>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <176:83 176:106>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <183:79 183:102>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ <192:99 192:122>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String) [ <147:138 147:151>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String) [ <158:134 158:147>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String) [ <169:126 169:139>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String) [ <176:126 176:139>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String) [ <183:122 183:135>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String) [ <190:53 190:66>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <148:33 148:40>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <159:29 159:36>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <170:21 170:28>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <177:21 177:28>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <184:17 184:24>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>) [ <149:52 149:56>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>) [ <160:48 160:52>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>) [ <171:40 171:44>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>) [ <178:40 178:44>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>) [ <185:36 185:40>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<O> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.adapt<O>(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends O>, java.lang.Class<O>) [ <190:36 190:40>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.PackageDeclaration> com.github.javaparser.ast.CompilationUnit.getPackageDeclaration() [ <167:30 167:50>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.PackageDeclaration> com.github.javaparser.ast.CompilationUnit.getPackageDeclaration() [ <168:45 168:65>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.Node.toString() [ <168:85 168:92>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.Name com.github.javaparser.ast.PackageDeclaration.getName() [ <168:75 168:81>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T>.T java.util.Optional<T>.get() [ <168:69 168:71>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static boolean com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.isQualifiedName(java.lang.String) [ <189:13 189:27>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) [ <192:36 192:43>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.lang.String [ <196:13 196:18>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.ast.type.ClassOrInterfaceType [ <196:26 196:45>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> boolean java.util.Optional<T>.isPresent() [ <197:29 197:37>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.util.Optional<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.type.ClassOrInterfaceType.getScope() [ <197:18 197:25>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.util.Optional<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.type.ClassOrInterfaceType.getScope() [ <198:31 198:38>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) [ <198:20 198:24>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.util.Optional<T>.T java.util.Optional<T>.get() [ <198:42 198:44>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [ <198:72 198:76>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [ <200:35 200:39>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.ClassOrInterfaceType.getName() [ <198:62 198:68>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.ClassOrInterfaceType.getName() [ <200:25 200:31>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.expr.Name) -> java.lang.String [ <204:13 204:18>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.expr.Name) -> com.github.javaparser.ast.expr.Name [ <204:26 204:29>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.expr.Name) -> boolean java.util.Optional<T>.isPresent() [ <205:33 205:41>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.expr.Name) -> java.util.Optional<com.github.javaparser.ast.expr.Name> com.github.javaparser.ast.expr.Name.getQualifier() [ <205:18 205:29>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.expr.Name) -> java.util.Optional<com.github.javaparser.ast.expr.Name> com.github.javaparser.ast.expr.Name.getQualifier() [ <206:31 206:42>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.expr.Name) -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.expr.Name) [ <206:20 206:24>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.expr.Name) -> java.util.Optional<T>.T java.util.Optional<T>.get() [ <206:46 206:48>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.expr.Name) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [ <206:66 206:70>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName(com.github.javaparser.ast.expr.Name) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [ <208:25 208:29>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName(java.lang.String) -> java.lang.String [ <212:13 212:18>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName(java.lang.String) -> java.lang.String [ <212:33 212:38>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName(java.lang.String) -> java.lang.String [ <213:9 213:14>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName(java.lang.String) -> java.lang.String java.lang.String.split(java.lang.String) [ <213:32 213:36>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName(java.lang.String) -> int length [ <214:28 214:33>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName(java.lang.String) -> java.lang.String [ <217:13 217:18>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName(java.lang.String) -> java.lang.String [ <217:32 217:37>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName(java.lang.String) -> int [ <218:9 218:11>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName(java.lang.String) -> int java.lang.String.lastIndexOf(int) [ <218:29 218:39>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName(java.lang.String) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <220:23 220:51>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName(java.lang.String) -> java.lang.UnsupportedOperationException [ <220:23 220:51>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName(java.lang.String) -> java.lang.String java.lang.String.substring(int, int) [ <222:26 222:34>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <227:47 227:57>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ <226:6 226:13>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <227:28 227:44>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <242:37 242:53>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <253:41 253:57>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <227:12 227:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <242:21 242:35>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ <253:25 253:39>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <227:28 227:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <238:57 238:73>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <242:37 242:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <253:41 253:57>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ <261:41 261:57>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <227:59 227:64>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <231:21 231:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <248:21 248:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ <251:25 251:30>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <227:77 227:80>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [ <227:72 227:75>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ <227:77 227:80>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [ <227:99 227:105>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ <227:119 227:128>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.ImportDeclaration [ <228:14 228:30>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.ImportDeclaration> com.github.javaparser.ast.CompilationUnit.getImports() [ <228:57 228:66>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <228:45 228:55>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <233:30 233:40>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <234:37 234:47>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ <235:37 235:47>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.ast.ImportDeclaration.isStatic() [ <229:27 229:34>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.ast.ImportDeclaration.isAsterisk() [ <230:31 230:40>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithName<N>.getNameAsString() [ <231:54 231:68>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithName<N>.getNameAsString() [ <248:47 248:61>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.Optional<T>.isPresent() [ <233:66 233:74>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.PackageDeclaration> com.github.javaparser.ast.CompilationUnit.getPackageDeclaration() [ <233:42 233:62>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.PackageDeclaration> com.github.javaparser.ast.CompilationUnit.getPackageDeclaration() [ <234:49 234:69>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [ <234:105 234:110>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [ <235:113 235:118>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [ <250:31 250:36>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.expr.Name.getIdentifier() [ <234:89 234:101>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.Name com.github.javaparser.ast.PackageDeclaration.getName() [ <234:79 234:85>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T>.T java.util.Optional<T>.get() [ <234:73 234:75>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName(java.lang.String) [ <234:112 234:122>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.stream.Stream<T>.anyMatch(java.util.function.Predicate<? super T>) [ <235:69 235:76>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [ <235:60 235:65>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.ast.CompilationUnit.getTypes() [ <235:49 235:56>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.expr.SimpleName.getIdentifier() [ <235:97 235:109>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName() [ <235:87 235:93>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName(java.lang.String) [ <235:120 235:131>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) [ <238:48 238:55>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) [ <261:32 261:39>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <241:75 241:89>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ <252:79 252:93>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String) [ <241:108 241:116>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String) [ <252:112 252:120>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <242:87 242:103>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ <253:91 253:107>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <244:32 244:39>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ <254:36 254:43>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.endsWith(java.lang.String) [ <250:53 250:60>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) [ <251:43 251:49>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) -> java.lang.String [ <268:13 268:18>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) -> java.lang.String [ <268:28 268:33>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) -> java.lang.String [ <273:9 273:14>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) -> int [ <269:9 269:11>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) -> int java.lang.String.lastIndexOf(int) [ <269:27 269:37>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <271:23 271:51>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) -> java.lang.UnsupportedOperationException [ <271:23 271:51>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType(java.lang.String) -> java.lang.String java.lang.String.substring(int, int) [ <273:33 273:41>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String) -> java.lang.String [ <277:13 277:18>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String) -> java.lang.String [ <277:30 277:35>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String) -> java.lang.String [ <282:9 282:14>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String) -> int [ <278:9 278:11>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String) -> int java.lang.String.lastIndexOf(int) [ <278:27 278:37>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [ <280:23 280:51>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String) -> java.lang.UnsupportedOperationException [ <280:23 280:51>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember(java.lang.String) -> java.lang.String java.lang.String.substring(int) [ <282:35 282:43>]
LOCAL_SYMBOL: CompilationUnitContext.java<111:145> [ <111:145 111:145>]
LOCAL_SYMBOL: CompilationUnitContext.java<111:145> [ <194:5 194:5>]
LOCAL_SYMBOL: CompilationUnitContext.java<112:45> [ <112:45 112:45>]
LOCAL_SYMBOL: CompilationUnitContext.java<112:45> [ <124:9 124:9>]
LOCAL_SYMBOL: CompilationUnitContext.java<113:68> [ <113:68 113:68>]
LOCAL_SYMBOL: CompilationUnitContext.java<113:68> [ <123:13 123:13>]
LOCAL_SYMBOL: CompilationUnitContext.java<114:58> [ <114:58 114:58>]
LOCAL_SYMBOL: CompilationUnitContext.java<114:58> [ <122:17 122:17>]
LOCAL_SYMBOL: CompilationUnitContext.java<115:70> [ <115:70 115:70>]
LOCAL_SYMBOL: CompilationUnitContext.java<115:70> [ <117:21 117:21>]
LOCAL_SYMBOL: CompilationUnitContext.java<117:71> [ <117:71 117:71>]
LOCAL_SYMBOL: CompilationUnitContext.java<117:71> [ <119:21 119:21>]
LOCAL_SYMBOL: CompilationUnitContext.java<119:28> [ <119:28 119:28>]
LOCAL_SYMBOL: CompilationUnitContext.java<119:28> [ <121:21 121:21>]
LOCAL_SYMBOL: CompilationUnitContext.java<126:47> [ <126:47 126:47>]
LOCAL_SYMBOL: CompilationUnitContext.java<126:47> [ <164:9 164:9>]
LOCAL_SYMBOL: CompilationUnitContext.java<129:30> [ <129:30 129:30>]
LOCAL_SYMBOL: CompilationUnitContext.java<129:30> [ <131:13 131:13>]
LOCAL_SYMBOL: CompilationUnitContext.java<133:75> [ <133:75 133:75>]
LOCAL_SYMBOL: CompilationUnitContext.java<133:75> [ <153:13 153:13>]
LOCAL_SYMBOL: CompilationUnitContext.java<134:47> [ <134:47 134:47>]
LOCAL_SYMBOL: CompilationUnitContext.java<134:47> [ <152:17 152:17>]
LOCAL_SYMBOL: CompilationUnitContext.java<138:33> [ <138:33 138:33>]
LOCAL_SYMBOL: CompilationUnitContext.java<138:33> [ <145:21 145:21>]
LOCAL_SYMBOL: CompilationUnitContext.java<139:45> [ <139:45 139:45>]
LOCAL_SYMBOL: CompilationUnitContext.java<139:45> [ <144:25 144:25>]
LOCAL_SYMBOL: CompilationUnitContext.java<141:40> [ <141:40 141:40>]
LOCAL_SYMBOL: CompilationUnitContext.java<141:40> [ <143:29 143:29>]
LOCAL_SYMBOL: CompilationUnitContext.java<146:32> [ <146:32 146:32>]
LOCAL_SYMBOL: CompilationUnitContext.java<146:32> [ <151:21 151:21>]
LOCAL_SYMBOL: CompilationUnitContext.java<148:45> [ <148:45 148:45>]
LOCAL_SYMBOL: CompilationUnitContext.java<148:45> [ <150:25 150:25>]
LOCAL_SYMBOL: CompilationUnitContext.java<155:75> [ <155:75 155:75>]
LOCAL_SYMBOL: CompilationUnitContext.java<155:75> [ <163:13 163:13>]
LOCAL_SYMBOL: CompilationUnitContext.java<156:46> [ <156:46 156:46>]
LOCAL_SYMBOL: CompilationUnitContext.java<156:46> [ <162:17 162:17>]
LOCAL_SYMBOL: CompilationUnitContext.java<159:41> [ <159:41 159:41>]
LOCAL_SYMBOL: CompilationUnitContext.java<159:41> [ <161:21 161:21>]
LOCAL_SYMBOL: CompilationUnitContext.java<167:67> [ <167:67 167:67>]
LOCAL_SYMBOL: CompilationUnitContext.java<167:67> [ <173:9 173:9>]
LOCAL_SYMBOL: CompilationUnitContext.java<170:33> [ <170:33 170:33>]
LOCAL_SYMBOL: CompilationUnitContext.java<170:33> [ <172:13 172:13>]
LOCAL_SYMBOL: CompilationUnitContext.java<173:16> [ <173:16 173:16>]
LOCAL_SYMBOL: CompilationUnitContext.java<173:16> [ <180:9 180:9>]
LOCAL_SYMBOL: CompilationUnitContext.java<177:33> [ <177:33 177:33>]
LOCAL_SYMBOL: CompilationUnitContext.java<177:33> [ <179:13 179:13>]
LOCAL_SYMBOL: CompilationUnitContext.java<184:29> [ <184:29 184:29>]
LOCAL_SYMBOL: CompilationUnitContext.java<184:29> [ <186:9 186:9>]
LOCAL_SYMBOL: CompilationUnitContext.java<189:36> [ <189:36 189:36>]
LOCAL_SYMBOL: CompilationUnitContext.java<189:36> [ <191:9 191:9>]
LOCAL_SYMBOL: CompilationUnitContext.java<191:16> [ <191:16 191:16>]
LOCAL_SYMBOL: CompilationUnitContext.java<191:16> [ <193:9 193:9>]
LOCAL_SYMBOL: CompilationUnitContext.java<196:53> [ <196:53 196:53>]
LOCAL_SYMBOL: CompilationUnitContext.java<196:53> [ <202:5 202:5>]
LOCAL_SYMBOL: CompilationUnitContext.java<197:42> [ <197:42 197:42>]
LOCAL_SYMBOL: CompilationUnitContext.java<197:42> [ <199:9 199:9>]
LOCAL_SYMBOL: CompilationUnitContext.java<199:16> [ <199:16 199:16>]
LOCAL_SYMBOL: CompilationUnitContext.java<199:16> [ <201:9 201:9>]
LOCAL_SYMBOL: CompilationUnitContext.java<204:37> [ <204:37 204:37>]
LOCAL_SYMBOL: CompilationUnitContext.java<204:37> [ <210:5 210:5>]
LOCAL_SYMBOL: CompilationUnitContext.java<205:46> [ <205:46 205:46>]
LOCAL_SYMBOL: CompilationUnitContext.java<205:46> [ <207:9 207:9>]
LOCAL_SYMBOL: CompilationUnitContext.java<207:16> [ <207:16 207:16>]
LOCAL_SYMBOL: CompilationUnitContext.java<207:16> [ <209:9 209:9>]
LOCAL_SYMBOL: CompilationUnitContext.java<212:47> [ <212:47 212:47>]
LOCAL_SYMBOL: CompilationUnitContext.java<212:47> [ <215:5 215:5>]
LOCAL_SYMBOL: CompilationUnitContext.java<217:46> [ <217:46 217:46>]
LOCAL_SYMBOL: CompilationUnitContext.java<217:46> [ <224:5 224:5>]
LOCAL_SYMBOL: CompilationUnitContext.java<219:28> [ <219:28 219:28>]
LOCAL_SYMBOL: CompilationUnitContext.java<219:28> [ <221:9 221:9>]
LOCAL_SYMBOL: CompilationUnitContext.java<221:16> [ <221:16 221:16>]
LOCAL_SYMBOL: CompilationUnitContext.java<221:16> [ <223:9 223:9>]
LOCAL_SYMBOL: CompilationUnitContext.java<227:142> [ <227:142 227:142>]
LOCAL_SYMBOL: CompilationUnitContext.java<227:142> [ <262:5 262:5>]
LOCAL_SYMBOL: CompilationUnitContext.java<228:71> [ <228:71 228:71>]
LOCAL_SYMBOL: CompilationUnitContext.java<228:71> [ <260:9 260:9>]
LOCAL_SYMBOL: CompilationUnitContext.java<229:38> [ <229:38 229:38>]
LOCAL_SYMBOL: CompilationUnitContext.java<229:38> [ <259:13 259:13>]
LOCAL_SYMBOL: CompilationUnitContext.java<230:44> [ <230:44 230:44>]
LOCAL_SYMBOL: CompilationUnitContext.java<230:44> [ <247:17 247:17>]
LOCAL_SYMBOL: CompilationUnitContext.java<235:150> [ <235:150 235:150>]
LOCAL_SYMBOL: CompilationUnitContext.java<235:150> [ <239:21 239:21>]
LOCAL_SYMBOL: CompilationUnitContext.java<244:44> [ <244:44 244:44>]
LOCAL_SYMBOL: CompilationUnitContext.java<244:44> [ <246:21 246:21>]
LOCAL_SYMBOL: CompilationUnitContext.java<247:23> [ <247:23 247:23>]
LOCAL_SYMBOL: CompilationUnitContext.java<247:23> [ <258:17 258:17>]
LOCAL_SYMBOL: CompilationUnitContext.java<250:75> [ <250:75 250:75>]
LOCAL_SYMBOL: CompilationUnitContext.java<250:75> [ <257:21 257:21>]
LOCAL_SYMBOL: CompilationUnitContext.java<254:48> [ <254:48 254:48>]
LOCAL_SYMBOL: CompilationUnitContext.java<254:48> [ <256:25 256:25>]
LOCAL_SYMBOL: CompilationUnitContext.java<268:42> [ <268:42 268:42>]
LOCAL_SYMBOL: CompilationUnitContext.java<268:42> [ <275:5 275:5>]
LOCAL_SYMBOL: CompilationUnitContext.java<270:26> [ <270:26 270:26>]
LOCAL_SYMBOL: CompilationUnitContext.java<270:26> [ <272:9 272:9>]
LOCAL_SYMBOL: CompilationUnitContext.java<277:44> [ <277:44 277:44>]
LOCAL_SYMBOL: CompilationUnitContext.java<277:44> [ <284:5 284:5>]
LOCAL_SYMBOL: CompilationUnitContext.java<279:26> [ <279:26 279:26>]
LOCAL_SYMBOL: CompilationUnitContext.java<279:26> [ <281:9 281:9>]
LOCAL_SYMBOL: CompilationUnitContext.java<42:88> [ <42:88 42:88>]
LOCAL_SYMBOL: CompilationUnitContext.java<42:88> [ <285:1 285:1>]
LOCAL_SYMBOL: CompilationUnitContext.java<48:57> [ <48:57 48:57>]
LOCAL_SYMBOL: CompilationUnitContext.java<48:57> [ <50:5 50:5>]
LOCAL_SYMBOL: CompilationUnitContext.java<56:87> [ <56:87 56:87>]
LOCAL_SYMBOL: CompilationUnitContext.java<56:87> [ <58:5 58:5>]
LOCAL_SYMBOL: CompilationUnitContext.java<65:104> [ <65:104 65:104>]
LOCAL_SYMBOL: CompilationUnitContext.java<65:104> [ <108:5 108:5>]
LOCAL_SYMBOL: CompilationUnitContext.java<69:38> [ <69:38 69:38>]
LOCAL_SYMBOL: CompilationUnitContext.java<69:38> [ <78:9 78:9>]
LOCAL_SYMBOL: CompilationUnitContext.java<73:34> [ <73:34 73:34>]
LOCAL_SYMBOL: CompilationUnitContext.java<73:34> [ <75:13 75:13>]
LOCAL_SYMBOL: CompilationUnitContext.java<75:20> [ <75:20 75:20>]
LOCAL_SYMBOL: CompilationUnitContext.java<75:20> [ <77:13 77:13>]
LOCAL_SYMBOL: CompilationUnitContext.java<81:47> [ <81:47 81:47>]
LOCAL_SYMBOL: CompilationUnitContext.java<81:47> [ <105:9 105:9>]
LOCAL_SYMBOL: CompilationUnitContext.java<82:75> [ <82:75 82:75>]
LOCAL_SYMBOL: CompilationUnitContext.java<82:75> [ <104:13 104:13>]
LOCAL_SYMBOL: CompilationUnitContext.java<83:42> [ <83:42 83:42>]
LOCAL_SYMBOL: CompilationUnitContext.java<83:42> [ <103:17 103:17>]
LOCAL_SYMBOL: CompilationUnitContext.java<84:49> [ <84:49 84:49>]
LOCAL_SYMBOL: CompilationUnitContext.java<84:49> [ <91:21 91:21>]
LOCAL_SYMBOL: CompilationUnitContext.java<88:45> [ <88:45 88:45>]
LOCAL_SYMBOL: CompilationUnitContext.java<88:45> [ <90:25 90:25>]
LOCAL_SYMBOL: CompilationUnitContext.java<91:27> [ <91:27 91:27>]
LOCAL_SYMBOL: CompilationUnitContext.java<91:27> [ <102:21 102:21>]
LOCAL_SYMBOL: CompilationUnitContext.java<98:54> [ <98:54 98:54>]
LOCAL_SYMBOL: CompilationUnitContext.java<98:54> [ <101:25 101:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.CompilationUnitContext<0> [ <56:51 56:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.CompilationUnitContext<0> [ <57:15 57:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.CompilationUnitContext<1> [ <56:75 56:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.CompilationUnitContext<1> [ <57:28 57:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember<0> [ <277:37 277:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember<0> [ <278:21 278:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember<0> [ <282:29 282:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember<1> [ <278:13 278:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember<1> [ <279:13 279:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember<1> [ <282:45 282:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember<2> [ <282:16 282:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getMember<2> [ <283:16 283:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType<0> [ <268:35 268:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType<0> [ <269:21 269:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType<0> [ <273:27 273:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType<1> [ <269:13 269:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType<1> [ <270:13 270:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType<1> [ <273:46 273:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType<2> [ <273:16 273:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.getType<2> [ <274:16 274:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.isQualifiedName<0> [ <48:51 48:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.isQualifiedName<0> [ <49:16 49:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName<0> [ <217:39 217:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName<0> [ <218:23 218:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName<0> [ <222:20 222:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName<1> [ <218:13 218:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName<1> [ <219:13 219:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.packageName<1> [ <222:39 222:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName<0> [ <196:47 196:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName<0> [ <197:13 197:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName<0> [ <198:26 198:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName<0> [ <198:57 198:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName<0> [ <200:20 200:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName<0> [ <204:31 204:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName<0> [ <205:13 205:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName<0> [ <206:26 206:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName<0> [ <206:61 206:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.qName<0> [ <208:20 208:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<0> [ <227:66 227:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<0> [ <242:110 242:113>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<0> [ <250:38 250:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<0> [ <250:68 250:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<0> [ <253:114 253:117>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<10> [ <242:56 242:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<10> [ <244:25 244:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<10> [ <245:32 245:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<11> [ <248:28 248:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<11> [ <250:25 250:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<11> [ <250:47 250:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<11> [ <251:51 251:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<12> [ <251:32 251:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<12> [ <252:122 252:129>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<13> [ <252:95 252:97>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<13> [ <253:109 253:111>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<14> [ <253:60 253:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<14> [ <254:29 254:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<14> [ <255:36 255:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<1> [ <227:83 227:96>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<1> [ <242:116 242:129>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<1> [ <253:120 253:133>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<2> [ <227:107 227:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<3> [ <227:130 227:139>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<3> [ <241:97 241:106>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<3> [ <242:138 242:147>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<3> [ <252:101 252:110>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<3> [ <253:142 253:151>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<4> [ <228:32 228:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<4> [ <229:16 229:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<4> [ <230:20 230:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<4> [ <231:43 231:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<4> [ <248:36 248:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<6> [ <231:28 231:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<6> [ <234:124 234:135>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<6> [ <235:133 235:144>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<6> [ <241:118 241:129>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<9> [ <241:91 241:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveMethod<9> [ <242:105 242:107>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<0> [ <65:75 65:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<0> [ <68:25 68:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<0> [ <87:136 87:139>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<0> [ <98:47 98:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<10> [ <87:69 87:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<10> [ <88:29 88:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<10> [ <89:36 89:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<11> [ <92:32 92:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<11> [ <95:55 95:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<11> [ <96:51 96:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<12> [ <95:32 95:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<12> [ <98:29 98:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<12> [ <100:97 100:106>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<13> [ <96:32 96:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<13> [ <99:135 99:142>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<14> [ <99:99 99:110>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<14> [ <100:83 100:94>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<1> [ <65:92 65:101>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<1> [ <72:132 72:141>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<1> [ <74:41 74:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<1> [ <86:110 86:119>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<1> [ <87:92 87:101>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<1> [ <99:114 99:123>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<1> [ <100:53 100:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<2> [ <68:16 68:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<2> [ <69:16 69:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<2> [ <70:39 70:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<2> [ <71:43 71:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<2> [ <76:17 76:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<3> [ <70:20 70:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<3> [ <72:122 72:129>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<3> [ <76:26 76:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<4> [ <71:20 71:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<4> [ <74:107 74:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<5> [ <72:100 72:103>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<5> [ <73:17 73:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<5> [ <74:71 74:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<6> [ <82:36 82:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<6> [ <83:20 83:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<6> [ <84:24 84:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<6> [ <85:40 85:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<6> [ <92:40 92:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<8> [ <85:32 85:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<8> [ <86:131 86:135>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<9> [ <86:95 86:106>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveSymbol<9> [ <87:122 87:133>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [ <111:116 111:119>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [ <114:51 114:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [ <127:26 127:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [ <130:26 130:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [ <137:100 137:103>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [ <142:49 142:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [ <157:73 157:76>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [ <168:104 168:107>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [ <175:28 175:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [ <183:152 183:155>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [ <189:29 189:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<0> [ <190:68 190:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<10> [ <137:29 137:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<10> [ <138:26 138:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<10> [ <140:29 140:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<10> [ <141:33 141:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<10> [ <146:25 146:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<11> [ <147:121 147:123>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<11> [ <148:29 148:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<11> [ <149:58 149:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<12> [ <155:36 155:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<12> [ <156:21 156:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<12> [ <157:36 157:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<14> [ <157:28 157:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<14> [ <158:149 158:153>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<15> [ <158:117 158:119>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<15> [ <159:25 159:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<15> [ <160:54 160:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<16> [ <168:20 168:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<16> [ <169:141 169:145>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<17> [ <169:109 169:111>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<17> [ <170:17 170:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<17> [ <171:46 171:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<18> [ <175:20 175:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<18> [ <176:141 176:145>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<19> [ <176:109 176:111>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<19> [ <177:17 177:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<19> [ <178:46 178:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<1> [ <111:133 111:142>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<1> [ <116:76 116:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<1> [ <118:121 118:130>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<1> [ <147:127 147:136>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<1> [ <158:123 158:132>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<1> [ <169:115 169:124>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<1> [ <176:115 176:124>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<1> [ <183:111 183:120>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<1> [ <190:42 190:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<20> [ <183:105 183:107>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<20> [ <184:13 184:15>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<20> [ <185:42 185:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<2> [ <113:37 113:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<2> [ <114:21 114:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<2> [ <115:25 115:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<2> [ <116:137 116:140>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<2> [ <117:32 117:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<2> [ <118:115 118:118>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<2> [ <120:65 120:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<4> [ <127:17 127:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<4> [ <129:17 129:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<4> [ <130:44 130:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<4> [ <142:64 142:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<5> [ <128:20 128:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<5> [ <130:17 130:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<5> [ <139:29 139:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<5> [ <140:58 140:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<6> [ <133:36 133:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<6> [ <134:22 134:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<6> [ <135:36 135:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<6> [ <136:47 136:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<6> [ <137:56 137:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<8> [ <135:28 135:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<8> [ <140:37 140:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<8> [ <142:33 142:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<8> [ <142:41 142:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<8> [ <147:153 147:157>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<9> [ <136:29 136:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.solveType<9> [ <137:38 137:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName<0> [ <212:40 212:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName<0> [ <213:26 213:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName<1> [ <213:18 213:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName<1> [ <214:16 214:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.CompilationUnitContext.toSimpleName<1> [ <214:22 214:26>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<8> [ <235:78 235:79>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<8> [ <235:84 235:85>]
COMMENT: comment [ <1:1 15:3>]
COMMENT: comment [ <39:1 41:3>]
COMMENT: comment [ <44:5 44:7>]
COMMENT: comment [ <45:5 45:22>]
COMMENT: comment [ <46:5 46:7>]
COMMENT: comment [ <52:5 52:7>]
COMMENT: comment [ <53:5 53:20>]
COMMENT: comment [ <54:5 54:7>]
COMMENT: comment [ <60:5 60:7>]
COMMENT: comment [ <61:5 61:22>]
COMMENT: comment [ <62:5 62:7>]
COMMENT: comment [ <67:9 67:36>]
COMMENT: comment [ <80:9 80:48>]
COMMENT: comment [ <94:25 94:67>]
COMMENT: comment [ <132:13 132:37>]
COMMENT: comment [ <154:13 154:47>]
COMMENT: comment [ <166:9 166:34>]
COMMENT: comment [ <174:13 174:54>]
COMMENT: comment [ <182:9 182:40>]
COMMENT: comment [ <188:9 188:122>]
COMMENT: comment [ <236:25 236:123>]
COMMENT: comment [ <237:25 237:58>]
COMMENT: comment [ <264:5 264:7>]
COMMENT: comment [ <265:5 265:23>]
COMMENT: comment [ <266:5 266:7>]
